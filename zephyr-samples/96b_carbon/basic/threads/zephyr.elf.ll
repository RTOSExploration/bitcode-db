; ModuleID = 'build/96b_carbon/threads/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct._sfnode, %struct._wait_q_t }
%struct._sflist = type { %struct._sfnode*, %struct._sfnode* }
%struct._sfnode = type { i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.led = type { %struct.gpio_dt_spec, i8 }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct._sfnode }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct._sfnode] }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct._sfnode }
%struct.arm_mpu_region = type { i32, i8*, %struct._sfnode }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct._sfnode, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct._sfnode, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.printk_data_t = type { i8*, i32, i32 }
%struct.__va_list = type { i8* }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct._sfnode, %struct._sfnode }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236449 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236429 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236419 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236519 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236509 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236499 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236489 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236479 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236469 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236459 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238004 to i8*), void (i8*)* inttoptr (i32 134236439 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [47 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_blink0_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_blink1_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_uart_out_id to i8*), i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@printk_fifo = dso_local global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct._sfnode zeroinitializer, %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i64 12) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i64 12) to %struct._dnode*) } } } } }, section "._k_queue.static.printk_fifo", align 4, !dbg !25
@.str = private unnamed_addr constant [31 x i8] c"Error: %s device is not ready\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Error %d: failed to configure pin %d (LED '%d')\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"mem_ptr != 0\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@led0 = internal constant %struct.led { %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_23, i8 2, i16 0 }, i8 0 }, align 4, !dbg !395
@led1 = internal constant %struct.led { %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_25, i8 15, i16 0 }, i8 1 }, align 4, !dbg !408
@.str.5 = private unnamed_addr constant [27 x i8] c"Toggled led%d; counter=%d\0A\00", align 1
@_k_thread_obj_blink0_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !385
@_k_thread_stack_blink0_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !380
@.str.6 = private unnamed_addr constant [10 x i8] c"blink0_id\00", align 1
@_k_thread_data_blink0_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_blink0_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_blink0_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @blink0 to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_blink0_id", align 4, !dbg !216
@blink0_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_blink0_id, align 4, !dbg !368
@_k_thread_obj_blink1_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !389
@_k_thread_stack_blink1_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !387
@.str.7 = private unnamed_addr constant [10 x i8] c"blink1_id\00", align 1
@_k_thread_data_blink1_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_blink1_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_blink1_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @blink1 to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_blink1_id", align 4, !dbg !372
@blink1_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_blink1_id, align 4, !dbg !374
@_k_thread_obj_uart_out_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !393
@_k_thread_stack_uart_out_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.2", align 64, !dbg !391
@.str.8 = private unnamed_addr constant [12 x i8] c"uart_out_id\00", align 1
@_k_thread_data_uart_out_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_uart_out_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_uart_out_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @uart_out to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_uart_out_id", align 4, !dbg !376
@uart_out_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_uart_out_id, align 4, !dbg !378
@.str.10 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.18 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.20 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.22 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.23 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.24 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.25 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.26 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.27 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.29 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !430
@.str.9 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.10 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.11 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.12 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.13 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.14 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.15 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.16 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.17 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.18 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.19 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !441
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !485
@.str.38 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.39 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.40 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.41 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.45 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.46 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.47 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.50 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.51 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.7.48 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.8.49 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct._sfnode { i32 101384192 } }], align 4, !dbg !514
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !520
@.str.62 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.63 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.64 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.65 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.68 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.69 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !649
@.str.6.70 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.71 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !685
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i32 0, i32 0), %struct._sfnode { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.81, i32 0, i32 0), %struct._sfnode { i32 285933600 } }], align 4, !dbg !695
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !700
@.str.80 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.81 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.84 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.85 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.86 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !720
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !891
@.str.4.82 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !853
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !836
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.82, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !809
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !825
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !855
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !868
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !870
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !872
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !874
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !876
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !878
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !880
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !882
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !884
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !886
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !896
@.str.87 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !927
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1024
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1013
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1065
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !916
@.str.100 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1131
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1394
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1364
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1350
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1292
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !914
@.str.1.103 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1396
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1368
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1366
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1306
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !912
@.str.2.104 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1409
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1372
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1370
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1315
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !910
@.str.3.107 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1411
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1376
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1374
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1324
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !908
@.str.4.108 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1413
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1380
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1378
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1330
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !906
@.str.5.109 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1415
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1384
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1382
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1336
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !904
@.str.6.110 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1417
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1388
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1386
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1342
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !902
@.str.7.111 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1419
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1392
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1390
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1348
@.str.8.101 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.102 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !922
@.str.117 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1421
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1630
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1587
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1632
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1566
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1568
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !920
@.str.1.122 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1639
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1589
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1664
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1577
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1579
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !918
@.str.2.123 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50 }, align 4, !dbg !1666
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1591
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1676
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1583
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1585
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1593
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1601
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1624
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1627
@.str.3.118 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.119 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.120 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.121 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !997
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1656
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1658
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1660
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1662
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1668
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1670
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1672
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1674
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1678
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1789
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1791
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1787
@lock = internal global %struct._sfnode zeroinitializer, align 4, !dbg !1782
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1756
@.str.130 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.131 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.132 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.133 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.134 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.135 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1793
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1290
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.103, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1304
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.104, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1313
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.107, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1322
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.108, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1328
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.109, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1334
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.110, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1340
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.111, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1346
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1883
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1925
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1928
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1935
@.str.169 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.170 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.2.171 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.3.172 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1942
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2155
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2161
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2168
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2173
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.4.183 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.187, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.188, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.189, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.190, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.191, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.185, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.192, i32 0, i32 0)], align 4, !dbg !2199
@.str.186 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.187 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.188 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.189 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.190 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.191 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.185 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.192 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2313
@.str.8.184 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.195 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.196 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.197 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.198 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.200 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.212 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.213 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.214 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.217 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.218 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.219 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.220 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.223 = private unnamed_addr constant [24 x i8] c"(flags & ~0x3UL) == 0UL\00", align 1
@.str.5.224 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/include/zephyr/sys/sflist.h\00", align 1
@.str.6.225 = private unnamed_addr constant [18 x i8] c"\09flags too large\0A\00", align 1
@.str.7.221 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.222 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct._sfnode zeroinitializer, align 4, !dbg !2326
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2436
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2439
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2441
@.str.232 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.249 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.238 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.256 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.266 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.240 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.261 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.237 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.270 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.271 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.279 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.280 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.281 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.282 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.233 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.234 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.235 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.236 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.239 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.253 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.262 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.263 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2163
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2166
@.str.23.274 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.288 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.289 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.290 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.291 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct._sfnode zeroinitializer, align 4, !dbg !2443
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2473
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2478
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2476
@.str.4.292 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.293 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.294 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.298 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.299 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@kheap__system_heap = dso_local global [256 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2484
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @kheap__system_heap, i32 0, i32 0), i32 256 }, %struct._wait_q_t zeroinitializer, %struct._sfnode zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2490
@.str.318 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.319 = private unnamed_addr constant [61 x i8] c"align / sizeof(void *) >= 1 && (align % sizeof(void *)) == 0\00", align 1
@.str.2.320 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/mempool.c\00", align 1
@.str.3.321 = private unnamed_addr constant [45 x i8] c"\09align must be a multiple of sizeof(void *)\0A\00", align 1
@.str.4.322 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.5.323 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2030
@.str.6.324 = private unnamed_addr constant [50 x i8] c"align == 0 || ((uintptr_t)mem & (align - 1)) == 0\00", align 1
@.str.7.325 = private unnamed_addr constant [40 x i8] c"\09misaligned memory at %p (align = %zu)\0A\00", align 1
@.str.336 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2527
@.str.338 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.349 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.340 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.350 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.339 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.341 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.346 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.347 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.348 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.351 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.352 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3219 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3275, !srcloc !3278
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3279, !srcloc !3280
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3281, !srcloc !3282
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3283, !srcloc !3284
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3285, !srcloc !3286
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3287, !srcloc !3288
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3289, !srcloc !3290
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3291, !srcloc !3292
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3293, !srcloc !3294
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3295, !srcloc !3296
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3297, !srcloc !3298
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3305, !srcloc !3306
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3307, !srcloc !3308
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3311, !srcloc !3312
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3313, !srcloc !3314
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3317, !srcloc !3318
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3319, !srcloc !3320
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3321, !srcloc !3322
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3323, !srcloc !3324
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3325, !srcloc !3326
  ret void, !dbg !3327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink0() #1 !dbg !3330 {
  tail call void @blink(%struct.led* noundef nonnull @led0, i32 noundef 100, i32 noundef 0) #26, !dbg !3331
  ret void, !dbg !3332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink(%struct.led* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !3333 {
  %4 = alloca %struct.printk_data_t, align 4
  call void @llvm.dbg.value(metadata %struct.led* %0, metadata !3338, metadata !DIExpression()), !dbg !3355
  call void @llvm.dbg.value(metadata i32 %1, metadata !3339, metadata !DIExpression()), !dbg !3355
  call void @llvm.dbg.value(metadata i32 %2, metadata !3340, metadata !DIExpression()), !dbg !3355
  call void @llvm.dbg.value(metadata %struct.led* %0, metadata !3341, metadata !DIExpression()), !dbg !3355
  call void @llvm.dbg.value(metadata i32 0, metadata !3344, metadata !DIExpression()), !dbg !3355
  %5 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, i32 0, !dbg !3356
  %6 = load %struct.device*, %struct.device** %5, align 4, !dbg !3356
  %7 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %6) #26, !dbg !3358
  br i1 %7, label %12, label %8, !dbg !3359

8:                                                ; preds = %3
  %9 = load %struct.device*, %struct.device** %5, align 4, !dbg !3360
  %10 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !3362
  %11 = load i8*, i8** %10, align 4, !dbg !3362
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i32 0, i32 0), i8* noundef %11) #27, !dbg !3363
  br label %43, !dbg !3364

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, !dbg !3365
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %13, metadata !3341, metadata !DIExpression()), !dbg !3355
  %14 = tail call fastcc i32 @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef %13) #26, !dbg !3366
  call void @llvm.dbg.value(metadata i32 %14, metadata !3345, metadata !DIExpression()), !dbg !3355
  %15 = icmp eq i32 %14, 0, !dbg !3367
  %16 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, i32 1
  br i1 %15, label %17, label %26, !dbg !3369

17:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 0, metadata !3344, metadata !DIExpression()), !dbg !3355
  %18 = load %struct.device*, %struct.device** %5, align 4, !dbg !3370
  %19 = load i8, i8* %16, align 4, !dbg !3371
  call fastcc void @gpio_pin_set(%struct.device* noundef %18, i8 noundef zeroext %19, i32 noundef 0) #26, !dbg !3372
  %20 = bitcast %struct.printk_data_t* %4 to i8*, !dbg !3373
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3373
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %4, metadata !3346, metadata !DIExpression()), !dbg !3374
  %21 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 0, !dbg !3375
  store i8* null, i8** %21, align 4, !dbg !3375
  %22 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 1, !dbg !3375
  store i32 %2, i32* %22, align 4, !dbg !3375
  %23 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 2, !dbg !3375
  store i32 0, i32* %23, align 4, !dbg !3375
  call void @llvm.dbg.value(metadata i32 12, metadata !3353, metadata !DIExpression()), !dbg !3376
  %24 = call i8* @k_malloc(i32 noundef 12) #27, !dbg !3377
  call void @llvm.dbg.value(metadata i8* %24, metadata !3354, metadata !DIExpression()), !dbg !3376
  %25 = icmp eq i8* %24, null, !dbg !3378
  br i1 %25, label %32, label %33, !dbg !3381

26:                                               ; preds = %12
  %27 = load i8, i8* %16, align 4, !dbg !3382
  %28 = zext i8 %27 to i32, !dbg !3384
  %29 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 1, !dbg !3385
  %30 = load i8, i8* %29, align 4, !dbg !3385
  %31 = zext i8 %30 to i32, !dbg !3386
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i32 0, i32 0), i32 noundef %14, i32 noundef %28, i32 noundef %31) #27, !dbg !3387
  br label %43, !dbg !3388

32:                                               ; preds = %33, %17
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 noundef 79) #27, !dbg !3389
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 noundef 79) #27, !dbg !3389
  unreachable, !dbg !3389

33:                                               ; preds = %17, %33
  %34 = phi i8* [ %41, %33 ], [ %24, %17 ]
  %35 = phi i32 [ %37, %33 ], [ 0, %17 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !3344, metadata !DIExpression()), !dbg !3355
  %36 = call i8* @memcpy(i8* noundef nonnull %34, i8* noundef nonnull %20, i32 noundef 12) #27, !dbg !3391
  call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), i8* noundef nonnull %34) #27, !dbg !3392
  call fastcc void @k_msleep(i32 noundef %1) #26, !dbg !3394
  %37 = add nuw nsw i32 %35, 1, !dbg !3395
  call void @llvm.dbg.value(metadata i32 %37, metadata !3344, metadata !DIExpression()), !dbg !3355
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3396
  %38 = load %struct.device*, %struct.device** %5, align 4, !dbg !3370
  %39 = load i8, i8* %16, align 4, !dbg !3371
  %40 = and i32 %37, 1, !dbg !3397
  call fastcc void @gpio_pin_set(%struct.device* noundef %38, i8 noundef zeroext %39, i32 noundef %40) #26, !dbg !3372
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3373
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %4, metadata !3346, metadata !DIExpression()), !dbg !3374
  store i8* null, i8** %21, align 4, !dbg !3375
  store i32 %2, i32* %22, align 4, !dbg !3375
  store i32 %37, i32* %23, align 4, !dbg !3375
  call void @llvm.dbg.value(metadata i32 12, metadata !3353, metadata !DIExpression()), !dbg !3376
  %41 = call i8* @k_malloc(i32 noundef 12) #27, !dbg !3377
  call void @llvm.dbg.value(metadata i8* %41, metadata !3354, metadata !DIExpression()), !dbg !3376
  %42 = icmp eq i8* %41, null, !dbg !3378
  br i1 %42, label %32, label %33, !dbg !3381, !llvm.loop !3398

43:                                               ; preds = %26, %8
  ret void, !dbg !3400
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !3401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3406, metadata !DIExpression()), !dbg !3407
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3408, !srcloc !3410
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #26, !dbg !3411
  ret i1 %2, !dbg !3412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0) unnamed_addr #1 !dbg !3413 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !3417, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.value(metadata i32 131072, metadata !3418, metadata !DIExpression()), !dbg !3419
  %2 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !3420
  %3 = load %struct.device*, %struct.device** %2, align 4, !dbg !3420
  %4 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !3421
  %5 = load i8, i8* %4, align 4, !dbg !3421
  %6 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !3422
  %7 = load i16, i16* %6, align 2, !dbg !3422
  %8 = zext i16 %7 to i32, !dbg !3423
  %9 = or i32 %8, 131072, !dbg !3424
  %10 = tail call fastcc i32 @gpio_pin_configure(%struct.device* noundef %3, i8 noundef zeroext %5, i32 noundef %9) #26, !dbg !3425
  ret i32 %10, !dbg !3426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_set(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3427 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3431, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata i8 %1, metadata !3432, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata i32 %2, metadata !3433, metadata !DIExpression()), !dbg !3438
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3439
  %5 = bitcast i8** %4 to %struct._sfnode**, !dbg !3439
  %6 = load %struct._sfnode*, %struct._sfnode** %5, align 4, !dbg !3439
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !3434, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata %struct._sfnode* undef, metadata !3436, metadata !DIExpression()), !dbg !3438
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %6, i32 0, i32 0, !dbg !3440
  %8 = load i32, i32* %7, align 4, !dbg !3440
  %9 = zext i8 %1 to i32, !dbg !3440
  %10 = shl nuw i32 1, %9, !dbg !3440
  %11 = and i32 %8, %10, !dbg !3440
  %12 = icmp eq i32 %11, 0, !dbg !3440
  br i1 %12, label %13, label %14, !dbg !3443

13:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1296) #27, !dbg !3444
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3444
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1296) #27, !dbg !3444
  unreachable, !dbg !3444

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3446
  %16 = bitcast i8** %15 to %struct._sfnode**, !dbg !3446
  %17 = load %struct._sfnode*, %struct._sfnode** %16, align 4, !dbg !3446
  call void @llvm.dbg.value(metadata %struct._sfnode* %17, metadata !3436, metadata !DIExpression()), !dbg !3438
  %18 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %17, i32 0, i32 0, !dbg !3447
  %19 = load i32, i32* %18, align 4, !dbg !3447
  %20 = and i32 %19, %10, !dbg !3449
  %21 = icmp eq i32 %20, 0, !dbg !3449
  %22 = icmp eq i32 %2, 0, !dbg !3450
  %23 = zext i1 %22 to i32, !dbg !3450
  %24 = select i1 %21, i32 %2, i32 %23, !dbg !3450
  call void @llvm.dbg.value(metadata i32 %24, metadata !3433, metadata !DIExpression()), !dbg !3438
  tail call fastcc void @gpio_pin_set_raw(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %24) #26, !dbg !3451
  ret void, !dbg !3452
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3457, metadata !DIExpression()), !dbg !3458
  %2 = icmp sgt i32 %0, 0, !dbg !3459
  %3 = select i1 %2, i32 %0, i32 0, !dbg !3459
  %4 = zext i32 %3 to i64, !dbg !3459
  %5 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %4) #26, !dbg !3459
  %6 = insertvalue [1 x i64] poison, i64 %5, 0, !dbg !3460
  tail call fastcc void @k_sleep([1 x i64] %6) #26, !dbg !3460
  ret void, !dbg !3461
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3462 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3467, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.value(metadata i64 %0, metadata !3469, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata i32 1000, metadata !3474, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata i32 10000, metadata !3475, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata i8 1, metadata !3476, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata i8 0, metadata !3477, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata i8 1, metadata !3478, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata i8 0, metadata !3479, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata i8 1, metadata !3480, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata i8 0, metadata !3481, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata i64 0, metadata !3482, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata i64 0, metadata !3482, metadata !DIExpression()), !dbg !3486
  %2 = mul i64 %0, 10, !dbg !3488
  ret i64 %2, !dbg !3494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3495 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3504, metadata !DIExpression()), !dbg !3505
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3506, !srcloc !3508
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #27, !dbg !3509
  ret void, !dbg !3510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_set_raw(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3511 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3513, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.value(metadata i8 %1, metadata !3514, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.value(metadata i32 %2, metadata !3515, metadata !DIExpression()), !dbg !3518
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3519
  %5 = bitcast i8** %4 to %struct._sfnode**, !dbg !3519
  %6 = load %struct._sfnode*, %struct._sfnode** %5, align 4, !dbg !3519
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !3516, metadata !DIExpression()), !dbg !3518
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %6, i32 0, i32 0, !dbg !3520
  %8 = load i32, i32* %7, align 4, !dbg !3520
  %9 = zext i8 %1 to i32, !dbg !3520
  %10 = shl nuw i32 1, %9, !dbg !3520
  %11 = and i32 %8, %10, !dbg !3520
  %12 = icmp eq i32 %11, 0, !dbg !3520
  br i1 %12, label %13, label %14, !dbg !3523

13:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1255) #27, !dbg !3524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1255) #27, !dbg !3524
  unreachable, !dbg !3524

14:                                               ; preds = %3
  %15 = icmp eq i32 %2, 0, !dbg !3526
  br i1 %15, label %18, label %16, !dbg !3528

16:                                               ; preds = %14
  %17 = tail call fastcc i32 @gpio_port_set_bits_raw(%struct.device* noundef nonnull %0, i32 noundef %10) #26, !dbg !3529
  call void @llvm.dbg.value(metadata i32 %17, metadata !3517, metadata !DIExpression()), !dbg !3518
  br label %20, !dbg !3531

18:                                               ; preds = %14
  %19 = tail call fastcc i32 @gpio_port_clear_bits_raw(%struct.device* noundef nonnull %0, i32 noundef %10) #26, !dbg !3532
  call void @llvm.dbg.value(metadata i32 %19, metadata !3517, metadata !DIExpression()), !dbg !3518
  br label %20

20:                                               ; preds = %18, %16
  call void @llvm.dbg.value(metadata i32 undef, metadata !3517, metadata !DIExpression()), !dbg !3518
  ret void, !dbg !3534
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3535 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3538, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata i32 %1, metadata !3539, metadata !DIExpression()), !dbg !3540
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3541, !srcloc !3543
  %3 = tail call fastcc i32 @z_impl_gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) #26, !dbg !3544
  ret i32 %3, !dbg !3545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3546 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3548, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.value(metadata i32 %1, metadata !3549, metadata !DIExpression()), !dbg !3550
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3551, !srcloc !3553
  %3 = tail call fastcc i32 @z_impl_gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) #26, !dbg !3554
  ret i32 %3, !dbg !3555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3558, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.value(metadata i32 %1, metadata !3559, metadata !DIExpression()), !dbg !3561
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3562
  %4 = bitcast i8** %3 to %struct.gpio_driver_api**, !dbg !3562
  %5 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %4, align 4, !dbg !3562
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %5, metadata !3560, metadata !DIExpression()), !dbg !3561
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %5, i32 0, i32 4, !dbg !3563
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %6, align 4, !dbg !3563
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef %1) #27, !dbg !3564
  ret i32 %8, !dbg !3565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3566 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3568, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i32 %1, metadata !3569, metadata !DIExpression()), !dbg !3571
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3572
  %4 = bitcast i8** %3 to %struct.gpio_driver_api**, !dbg !3572
  %5 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %4, align 4, !dbg !3572
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %5, metadata !3570, metadata !DIExpression()), !dbg !3571
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %5, i32 0, i32 3, !dbg !3573
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %6, align 4, !dbg !3573
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef %1) #27, !dbg !3574
  ret i32 %8, !dbg !3575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3578, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.value(metadata i8 %1, metadata !3579, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.value(metadata i32 %2, metadata !3580, metadata !DIExpression()), !dbg !3581
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3582, !srcloc !3584
  %4 = tail call fastcc i32 @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #26, !dbg !3585
  ret i32 %4, !dbg !3586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3587 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3589, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.value(metadata i8 %1, metadata !3590, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.value(metadata i32 %2, metadata !3591, metadata !DIExpression()), !dbg !3595
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3596
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !3596
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !3596
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !3592, metadata !DIExpression()), !dbg !3595
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3597
  %8 = bitcast i8** %7 to %struct._sfnode**, !dbg !3597
  %9 = load %struct._sfnode*, %struct._sfnode** %8, align 4, !dbg !3597
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !3593, metadata !DIExpression()), !dbg !3595
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3598
  %11 = bitcast i8** %10 to %struct._sfnode**, !dbg !3598
  %12 = load %struct._sfnode*, %struct._sfnode** %11, align 4, !dbg !3598
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !3594, metadata !DIExpression()), !dbg !3595
  %13 = and i32 %2, 132120576, !dbg !3599
  %14 = icmp eq i32 %13, 0, !dbg !3599
  br i1 %14, label %16, label %15, !dbg !3602

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 679) #27, !dbg !3603
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i32 0, i32 0)) #27, !dbg !3603
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 679) #27, !dbg !3603
  unreachable, !dbg !3603

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !3605
  %18 = icmp eq i32 %17, 48, !dbg !3605
  br i1 %18, label %19, label %20, !dbg !3608

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 683) #27, !dbg !3609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.23, i32 0, i32 0)) #27, !dbg !3609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 683) #27, !dbg !3609
  unreachable, !dbg !3609

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !3611
  %22 = icmp ne i32 %21, 0, !dbg !3611
  %23 = and i32 %2, 131074, !dbg !3611
  %24 = icmp eq i32 %23, 2, !dbg !3611
  br i1 %24, label %25, label %26, !dbg !3611

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 687) #27, !dbg !3614
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.25, i32 0, i32 0)) #27, !dbg !3614
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 687) #27, !dbg !3614
  unreachable, !dbg !3614

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !3616
  %28 = icmp eq i32 %27, 4, !dbg !3616
  br i1 %28, label %29, label %30, !dbg !3616

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 690) #27, !dbg !3619
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 690) #27, !dbg !3619
  unreachable, !dbg !3619

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !3621
  %32 = icmp eq i32 %31, 0, !dbg !3621
  %33 = or i1 %32, %22, !dbg !3621
  br i1 %33, label %35, label %34, !dbg !3621

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 694) #27, !dbg !3624
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i32 0, i32 0)) #27, !dbg !3624
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 694) #27, !dbg !3624
  unreachable, !dbg !3624

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !3626
  br i1 %36, label %37, label %38, !dbg !3629

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 698) #27, !dbg !3630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i32 0, i32 0)) #27, !dbg !3630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 698) #27, !dbg !3630
  unreachable, !dbg !3630

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !3632
  %40 = icmp ne i32 %39, 1048577, !dbg !3632
  %41 = or i1 %40, %32, !dbg !3632
  %42 = xor i32 %2, 786432, !dbg !3632
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !3632
  call void @llvm.dbg.value(metadata i32 %43, metadata !3591, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.value(metadata i32 %43, metadata !3591, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !3595
  %44 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %9, i32 0, i32 0, !dbg !3634
  %45 = load i32, i32* %44, align 4, !dbg !3634
  %46 = zext i8 %1 to i32, !dbg !3634
  %47 = shl nuw i32 1, %46, !dbg !3634
  %48 = and i32 %45, %47, !dbg !3634
  %49 = icmp eq i32 %48, 0, !dbg !3634
  br i1 %49, label %50, label %51, !dbg !3637

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 709) #27, !dbg !3638
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3638
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 709) #27, !dbg !3638
  unreachable, !dbg !3638

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !3640
  %53 = icmp eq i32 %52, 0, !dbg !3642
  br i1 %53, label %58, label %54, !dbg !3643

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %12, i32 0, i32 0, !dbg !3644
  %56 = load i32, i32* %55, align 4, !dbg !3646
  %57 = or i32 %56, %47, !dbg !3646
  store i32 %57, i32* %55, align 4, !dbg !3646
  br label %63, !dbg !3647

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !3648
  %60 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %12, i32 0, i32 0, !dbg !3650
  %61 = load i32, i32* %60, align 4, !dbg !3651
  %62 = and i32 %61, %59, !dbg !3651
  store i32 %62, i32* %60, align 4, !dbg !3651
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !3652
  call void @llvm.dbg.value(metadata i32 %64, metadata !3591, metadata !DIExpression()), !dbg !3595
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !3653
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !3653
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #27, !dbg !3654
  ret i32 %67, !dbg !3655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !3656 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3658, metadata !DIExpression()), !dbg !3659
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !3660
  ret i1 %2, !dbg !3661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink1() #1 !dbg !3662 {
  tail call void @blink(%struct.led* noundef nonnull @led1, i32 noundef 1000, i32 noundef 1) #26, !dbg !3663
  ret void, !dbg !3664
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @uart_out() #5 !dbg !3665 {
  br label %1, !dbg !3672

1:                                                ; preds = %0, %1
  %2 = tail call fastcc i8* @k_queue_get() #26, !dbg !3673
  call void @llvm.dbg.value(metadata i8* %2, metadata !3670, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i8* %2, metadata !3667, metadata !DIExpression()), !dbg !3675
  %3 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3676
  %4 = bitcast i8* %3 to i32*, !dbg !3676
  %5 = load i32, i32* %4, align 4, !dbg !3676
  %6 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3677
  %7 = bitcast i8* %6 to i32*, !dbg !3677
  %8 = load i32, i32* %7, align 4, !dbg !3677
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i32 0, i32 0), i32 noundef %5, i32 noundef %8) #27, !dbg !3678
  tail call void @k_free(i8* noundef %2) #27, !dbg !3679
  br label %1, !dbg !3672, !llvm.loop !3680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !3682 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3688, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), metadata !3687, metadata !DIExpression()), !dbg !3689
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3690, !srcloc !3692
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), [1 x i64] [i64 -1]) #27, !dbg !3693
  ret i8* %1, !dbg !3694
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3697, metadata !DIExpression()), !dbg !3698
  ret i32 0, !dbg !3699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !3700 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3704, metadata !DIExpression()), !dbg !3705
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3706
  ret void, !dbg !3707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #7 !dbg !3708 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3711
  ret i8* %1, !dbg !3712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3713 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3725, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata i8* %0, metadata !3724, metadata !DIExpression()), !dbg !3734
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3735
  ret void, !dbg !3737
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3742, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %1, metadata !3743, metadata !DIExpression()), !dbg !3744
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3745
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !3745
  ret i32 %4, !dbg !3746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3747 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3759, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3756, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i8* %1, metadata !3757, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i8* %2, metadata !3758, metadata !DIExpression()), !dbg !3760
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !3761
  ret void, !dbg !3762
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3763 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3767, metadata !DIExpression()), !dbg !3770
  call void @llvm.dbg.value(metadata i32 %1, metadata !3768, metadata !DIExpression()), !dbg !3770
  call void @llvm.dbg.value(metadata i32 0, metadata !3769, metadata !DIExpression()), !dbg !3770
  %3 = icmp eq i32 %1, 0, !dbg !3771
  br i1 %3, label %13, label %4, !dbg !3774

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3769, metadata !DIExpression()), !dbg !3770
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3775
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3777
  %8 = load i8, i8* %7, align 1, !dbg !3777
  %9 = zext i8 %8 to i32, !dbg !3777
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !3775
  %11 = add nuw i32 %5, 1, !dbg !3778
  call void @llvm.dbg.value(metadata i32 %11, metadata !3769, metadata !DIExpression()), !dbg !3770
  %12 = icmp eq i32 %11, %1, !dbg !3771
  br i1 %12, label %13, label %4, !dbg !3774, !llvm.loop !3779

13:                                               ; preds = %4, %2
  ret void, !dbg !3781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3782 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3786, metadata !DIExpression()), !dbg !3788
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3789
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3789
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3787, metadata !DIExpression()), !dbg !3790
  call void @llvm.va_start(i8* nonnull %3), !dbg !3791
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3792
  %5 = load i32, i32* %4, align 4, !dbg !3792
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3792
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3792
  call void @llvm.va_end(i8* nonnull %3), !dbg !3793
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3794
  ret void, !dbg !3794
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3795 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3799, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i32 %1, metadata !3800, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i8* %2, metadata !3801, metadata !DIExpression()), !dbg !3804
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3805
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3805
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3802, metadata !DIExpression()), !dbg !3806
  call void @llvm.va_start(i8* nonnull %5), !dbg !3807
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3808
  %7 = load i32, i32* %6, align 4, !dbg !3808
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3808
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3808
  call void @llvm.dbg.value(metadata i32 %9, metadata !3803, metadata !DIExpression()), !dbg !3804
  call void @llvm.va_end(i8* nonnull %5), !dbg !3809
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3810
  ret i32 %9, !dbg !3811
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3812 {
  %5 = alloca %struct.printk_data_t, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3819, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i8* %0, metadata !3816, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i32 %1, metadata !3817, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i8* %2, metadata !3818, metadata !DIExpression()), !dbg !3826
  %6 = bitcast %struct.printk_data_t* %5 to i8*, !dbg !3827
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3827
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %5, metadata !3820, metadata !DIExpression()), !dbg !3828
  %7 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 0, !dbg !3829
  store i8* %0, i8** %7, align 4, !dbg !3829
  %8 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 1, !dbg !3829
  store i32 %1, i32* %8, align 4, !dbg !3829
  %9 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 2, !dbg !3829
  store i32 0, i32* %9, align 4, !dbg !3829
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.printk_data_t*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3830
  %10 = load i32, i32* %9, align 4, !dbg !3831
  %11 = load i32, i32* %8, align 4, !dbg !3833
  %12 = icmp slt i32 %10, %11, !dbg !3834
  br i1 %12, label %13, label %15, !dbg !3835

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3836
  store i8 0, i8* %14, align 1, !dbg !3838
  br label %15, !dbg !3839

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3840
  ret i32 %10, !dbg !3841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.printk_data_t* nocapture noundef %1) #9 !dbg !3842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3847, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.value(metadata %struct.printk_data_t* %1, metadata !3848, metadata !DIExpression()), !dbg !3849
  %3 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 0, !dbg !3850
  %4 = load i8*, i8** %3, align 4, !dbg !3850
  %5 = icmp eq i8* %4, null, !dbg !3852
  %6 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3853
  br i1 %5, label %12, label %8, !dbg !3854

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 1, !dbg !3855
  %10 = load i32, i32* %9, align 4, !dbg !3855
  %11 = icmp slt i32 %7, %10, !dbg !3856
  br i1 %11, label %15, label %12, !dbg !3857

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 2, !dbg !3858
  %14 = add nsw i32 %7, 1, !dbg !3860
  store i32 %14, i32* %13, align 4, !dbg !3860
  br label %25, !dbg !3861

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3862
  %17 = icmp eq i32 %7, %16, !dbg !3864
  br i1 %17, label %18, label %21, !dbg !3865

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3866
  store i32 %19, i32* %6, align 4, !dbg !3866
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3868
  store i8 0, i8* %20, align 1, !dbg !3869
  br label %25, !dbg !3870

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3871
  %23 = add nsw i32 %7, 1, !dbg !3873
  store i32 %23, i32* %6, align 4, !dbg !3873
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3874
  store i8 %22, i8* %24, align 1, !dbg !3875
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3876
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !3877 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3882, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata i8* %1, metadata !3883, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata i8* %2, metadata !3884, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata i8* %3, metadata !3885, metadata !DIExpression()), !dbg !3886
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !3887
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3888
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3889
  unreachable, !dbg !3890
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #10 !dbg !3891 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3997
  ret %struct.k_thread* %1, !dbg !3998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3999 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4003, metadata !DIExpression()), !dbg !4004
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4005, !srcloc !4007
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !4008
  ret void, !dbg !4009
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #10 !dbg !4010 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4011, !srcloc !4013
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !4014
  ret %struct.k_thread* %1, !dbg !4015
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !4016 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4027, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata i8* %1, metadata !4028, metadata !DIExpression()), !dbg !4031
  %3 = icmp eq i8* %1, null, !dbg !4032
  br i1 %3, label %16, label %4, !dbg !4034

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4035
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4035
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4029, metadata !DIExpression()), !dbg !4031
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4036, !range !4037
  call void @llvm.dbg.value(metadata i32 %7, metadata !4030, metadata !DIExpression()), !dbg !4031
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4038
  br i1 %8, label %10, label %9, !dbg !4041

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 176) #27, !dbg !4042
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.12, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !4042
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 176) #27, !dbg !4042
  unreachable, !dbg !4042

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4044
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #26, !dbg !4044
  %13 = icmp eq i32 %12, %7, !dbg !4044
  br i1 %13, label %15, label %14, !dbg !4047

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 185) #27, !dbg !4048
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.14, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !4048
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 185) #27, !dbg !4048
  unreachable, !dbg !4048

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4050
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4051
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !4052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #4 !dbg !4053 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4057, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i8* %1, metadata !4058, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i8* %1, metadata !4059, metadata !DIExpression()), !dbg !4061
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4062
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4060, metadata !DIExpression()), !dbg !4061
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4063
  %5 = ptrtoint i8* %4 to i32, !dbg !4064
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4064
  %7 = sub i32 %5, %6, !dbg !4064
  %8 = lshr i32 %7, 3, !dbg !4065
  ret i32 %8, !dbg !4066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4067 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4071, metadata !DIExpression()), !dbg !4073
  call void @llvm.dbg.value(metadata i32 %1, metadata !4072, metadata !DIExpression()), !dbg !4073
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4074
  %4 = and i32 %3, 1, !dbg !4075
  %5 = icmp ne i32 %4, 0, !dbg !4074
  ret i1 %5, !dbg !4076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4077 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4081, metadata !DIExpression()), !dbg !4083
  call void @llvm.dbg.value(metadata i32 %1, metadata !4082, metadata !DIExpression()), !dbg !4083
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4084
  %4 = add i32 %3, %1, !dbg !4085
  ret i32 %4, !dbg !4086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4087 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4089, metadata !DIExpression()), !dbg !4091
  call void @llvm.dbg.value(metadata i32 %1, metadata !4090, metadata !DIExpression()), !dbg !4091
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4092
  %4 = sub i32 %1, %3, !dbg !4093
  ret i32 %4, !dbg !4094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4095 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4099, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %1, metadata !4100, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i1 %2, metadata !4101, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4104
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4105
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4102, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4103, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4104
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4106
  %6 = bitcast i8* %5 to i16*, !dbg !4106
  %7 = load i16, i16* %6, align 2, !dbg !4106
  %8 = and i16 %7, -2, !dbg !4110
  %9 = zext i1 %2 to i16, !dbg !4110
  %10 = or i16 %8, %9, !dbg !4110
  store i16 %10, i16* %6, align 2, !dbg !4106
  ret void, !dbg !4111
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4112 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4116, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i32 %1, metadata !4117, metadata !DIExpression()), !dbg !4118
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4119
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4121
  br i1 %4, label %7, label %5, !dbg !4122

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4123
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4125
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4126
  br label %7, !dbg !4127

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4128
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4130
  br i1 %9, label %13, label %10, !dbg !4131

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4132
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4134
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4135
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4136
  call void @llvm.dbg.value(metadata i32 %12, metadata !4117, metadata !DIExpression()), !dbg !4118
  br label %13, !dbg !4137

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4117, metadata !DIExpression()), !dbg !4118
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4138
  ret void, !dbg !4139
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4140 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4142, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i32 %1, metadata !4143, metadata !DIExpression()), !dbg !4147
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4148, !range !4149
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4150
  call void @llvm.dbg.value(metadata i32 %4, metadata !4144, metadata !DIExpression()), !dbg !4151
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4152
  ret void, !dbg !4153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4154 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4158, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i32 %1, metadata !4159, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i32 %2, metadata !4160, metadata !DIExpression()), !dbg !4163
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4164
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4165
  %6 = add i32 %5, %4, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %6, metadata !4161, metadata !DIExpression()), !dbg !4163
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4167
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4168
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4169
  ret void, !dbg !4170
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4171 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4173, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i32 %1, metadata !4174, metadata !DIExpression()), !dbg !4178
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4179, !range !4149
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4180
  call void @llvm.dbg.value(metadata i32 %4, metadata !4175, metadata !DIExpression()), !dbg !4181
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4182
  ret void, !dbg !4183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4184 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4188, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %1, metadata !4189, metadata !DIExpression()), !dbg !4190
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4191
  %4 = lshr i32 %3, 1, !dbg !4192
  ret i32 %4, !dbg !4193
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #10 !dbg !4194 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4198, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata i32 %1, metadata !4199, metadata !DIExpression()), !dbg !4201
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4202
  %4 = add i32 %1, 1, !dbg !4203
  %5 = sub i32 %4, %3, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %5, metadata !4200, metadata !DIExpression()), !dbg !4201
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4205, !range !4206
  %7 = sub nsw i32 31, %6, !dbg !4207
  ret i32 %7, !dbg !4208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4209 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4213, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %1, metadata !4214, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata i32 %2, metadata !4215, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4216, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4222
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4223
  %5 = load i32, i32* %4, align 4, !dbg !4223
  %6 = icmp eq i32 %5, 0, !dbg !4224
  br i1 %6, label %7, label %12, !dbg !4225

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4226
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4228
  %10 = load i32, i32* %9, align 4, !dbg !4229
  %11 = or i32 %10, %8, !dbg !4229
  store i32 %11, i32* %9, align 4, !dbg !4229
  store i32 %1, i32* %4, align 4, !dbg !4230
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4231
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4232
  br label %14, !dbg !4233

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4218, metadata !DIExpression()), !dbg !4234
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !4235, !range !4236
  call void @llvm.dbg.value(metadata i32 %13, metadata !4221, metadata !DIExpression()), !dbg !4234
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4237
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4238
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4239
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4240
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4242 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4244, metadata !DIExpression()), !dbg !4247
  call void @llvm.dbg.value(metadata i32 %1, metadata !4245, metadata !DIExpression()), !dbg !4247
  call void @llvm.dbg.value(metadata i32 %2, metadata !4246, metadata !DIExpression()), !dbg !4247
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4248
  ret void, !dbg !4249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4250 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4252, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata i32 %1, metadata !4253, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata i32 %2, metadata !4254, metadata !DIExpression()), !dbg !4255
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4256
  ret void, !dbg !4257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4258 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4260, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.value(metadata i32 %1, metadata !4261, metadata !DIExpression()), !dbg !4262
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4263
  ret i32 %3, !dbg !4264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4265 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4269, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 %1, metadata !4270, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 %2, metadata !4271, metadata !DIExpression()), !dbg !4274
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4275
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4272, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4273, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4274
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4273, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4274
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4276
  call void @llvm.dbg.value(metadata i8* %5, metadata !4273, metadata !DIExpression()), !dbg !4274
  %6 = bitcast i8* %5 to i16*, !dbg !4277
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4280
  %8 = load i16, i16* %7, align 2, !dbg !4280
  %9 = zext i16 %8 to i32, !dbg !4280
  ret i32 %9, !dbg !4281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #4 !dbg !4282 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4286, metadata !DIExpression()), !dbg !4287
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4288
  ret %struct.chunk_unit_t* %2, !dbg !4289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #6 !dbg !4290 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4294, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata i32 %1, metadata !4295, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata i32 %2, metadata !4296, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata i32 %3, metadata !4297, metadata !DIExpression()), !dbg !4300
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4301
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4298, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4299, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4300
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4302
  call void @llvm.dbg.value(metadata i8* %6, metadata !4299, metadata !DIExpression()), !dbg !4300
  %7 = trunc i32 %3 to i16, !dbg !4303
  %8 = bitcast i8* %6 to i16*, !dbg !4306
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4307
  store i16 %7, i16* %9, align 2, !dbg !4308
  ret void, !dbg !4309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #4 !dbg !4310 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4314, metadata !DIExpression()), !dbg !4315
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4316
  ret i32 %2, !dbg !4317
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4318 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4322, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata i32 %1, metadata !4323, metadata !DIExpression()), !dbg !4324
  %3 = add i32 %1, 4, !dbg !4325
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4326
  ret i32 %4, !dbg !4327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #4 !dbg !4328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4332, metadata !DIExpression()), !dbg !4333
  %2 = add i32 %0, 7, !dbg !4334
  %3 = lshr i32 %2, 3, !dbg !4335
  ret i32 %3, !dbg !4336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4337 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4341, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %1, metadata !4342, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %2, metadata !4343, metadata !DIExpression()), !dbg !4344
  %4 = shl i32 %2, 1, !dbg !4345
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4346
  ret void, !dbg !4347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4348 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4350, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata i32 %1, metadata !4351, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata i32 %2, metadata !4352, metadata !DIExpression()), !dbg !4353
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4354
  ret void, !dbg !4355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4356 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4358, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata i32 %1, metadata !4359, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata i32 %2, metadata !4360, metadata !DIExpression()), !dbg !4366
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4367
  call void @llvm.dbg.value(metadata %struct._sfnode* %4, metadata !4361, metadata !DIExpression()), !dbg !4366
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4368
  %6 = icmp eq i32 %5, %1, !dbg !4369
  br i1 %6, label %7, label %14, !dbg !4370

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4371
  %9 = xor i32 %8, -1, !dbg !4373
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4374
  %11 = load i32, i32* %10, align 4, !dbg !4375
  %12 = and i32 %11, %9, !dbg !4375
  store i32 %12, i32* %10, align 4, !dbg !4375
  %13 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %4, i32 0, i32 0, !dbg !4376
  store i32 0, i32* %13, align 4, !dbg !4377
  br label %17, !dbg !4378

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4379
  call void @llvm.dbg.value(metadata i32 %15, metadata !4362, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %5, metadata !4365, metadata !DIExpression()), !dbg !4380
  %16 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %4, i32 0, i32 0, !dbg !4381
  store i32 %5, i32* %16, align 4, !dbg !4382
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4383
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4384
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4386 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4388, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i32 %1, metadata !4389, metadata !DIExpression()), !dbg !4390
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4391
  ret i32 %3, !dbg !4392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #7 !dbg !4393 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4397, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.value(metadata i8* %1, metadata !4398, metadata !DIExpression()), !dbg !4404
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4405
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4405
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4399, metadata !DIExpression()), !dbg !4404
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %5, metadata !4400, metadata !DIExpression()), !dbg !4404
  %6 = ptrtoint i8* %1 to i32, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %6, metadata !4401, metadata !DIExpression()), !dbg !4404
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4408
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4408
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %9, metadata !4402, metadata !DIExpression()), !dbg !4404
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4410
  %11 = shl i32 %10, 3, !dbg !4411
  call void @llvm.dbg.value(metadata i32 %11, metadata !4403, metadata !DIExpression()), !dbg !4404
  %12 = sub i32 %9, %6, !dbg !4412
  %13 = add i32 %12, %11, !dbg !4413
  ret i32 %13, !dbg !4414
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4415 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4419, metadata !DIExpression()), !dbg !4425
  call void @llvm.dbg.value(metadata i32 %1, metadata !4420, metadata !DIExpression()), !dbg !4425
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4426
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4426
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4421, metadata !DIExpression()), !dbg !4425
  %5 = icmp eq i32 %1, 0, !dbg !4427
  br i1 %5, label %19, label %6, !dbg !4429

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4430
  br i1 %7, label %19, label %8, !dbg !4431

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4432, !range !4037
  call void @llvm.dbg.value(metadata i32 %9, metadata !4423, metadata !DIExpression()), !dbg !4425
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4433
  call void @llvm.dbg.value(metadata i32 %10, metadata !4424, metadata !DIExpression()), !dbg !4425
  %11 = icmp eq i32 %10, 0, !dbg !4434
  br i1 %11, label %19, label %12, !dbg !4436

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4437
  %14 = icmp ugt i32 %13, %9, !dbg !4439
  br i1 %14, label %15, label %17, !dbg !4440

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4441
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4443
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4444
  br label %17, !dbg !4445

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4446
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4447
  call void @llvm.dbg.value(metadata i8* %18, metadata !4422, metadata !DIExpression()), !dbg !4425
  br label %19, !dbg !4448

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4425
  ret i8* %20, !dbg !4449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4450 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4454, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 %1, metadata !4455, metadata !DIExpression()), !dbg !4456
  %3 = lshr i32 %1, 3, !dbg !4457
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4458
  %5 = load i32, i32* %4, align 4, !dbg !4458
  %6 = icmp uge i32 %3, %5, !dbg !4459
  ret i1 %6, !dbg !4460
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4461 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4465, metadata !DIExpression()), !dbg !4480
  call void @llvm.dbg.value(metadata i32 %1, metadata !4466, metadata !DIExpression()), !dbg !4480
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4481
  call void @llvm.dbg.value(metadata i32 %3, metadata !4467, metadata !DIExpression()), !dbg !4480
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4480
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4482
  %5 = load i32, i32* %4, align 4, !dbg !4482
  %6 = icmp eq i32 %5, 0, !dbg !4483
  br i1 %6, label %19, label %7, !dbg !4484

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4485
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4486
  call void @llvm.dbg.value(metadata i32 %9, metadata !4472, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.value(metadata i32 %8, metadata !4473, metadata !DIExpression()), !dbg !4487
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4488
  %11 = icmp ult i32 %10, %1, !dbg !4490
  br i1 %11, label %13, label %12, !dbg !4491

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4492
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4494
  store i32 %14, i32* %4, align 4, !dbg !4495
  %15 = add nsw i32 %9, -1, !dbg !4496
  call void @llvm.dbg.value(metadata i32 %15, metadata !4472, metadata !DIExpression()), !dbg !4486
  %16 = icmp eq i32 %15, 0, !dbg !4496
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4497
  br i1 %18, label %19, label %7, !dbg !4497, !llvm.loop !4498

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4501
  %21 = load i32, i32* %20, align 4, !dbg !4501
  %22 = add nsw i32 %3, 1, !dbg !4502
  %23 = shl nsw i32 -1, %22, !dbg !4502
  %24 = and i32 %21, %23, !dbg !4503
  call void @llvm.dbg.value(metadata i32 %24, metadata !4475, metadata !DIExpression()), !dbg !4480
  %25 = icmp eq i32 %24, 0, !dbg !4504
  br i1 %25, label %30, label %26, !dbg !4505

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4506, !range !4206
  call void @llvm.dbg.value(metadata i32 %27, metadata !4476, metadata !DIExpression()), !dbg !4507
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4508
  %29 = load i32, i32* %28, align 4, !dbg !4508
  call void @llvm.dbg.value(metadata i32 %29, metadata !4479, metadata !DIExpression()), !dbg !4507
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4509
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4480
  ret i32 %31, !dbg !4510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4511 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4513, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 %1, metadata !4514, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i32 %2, metadata !4515, metadata !DIExpression()), !dbg !4519
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4520
  call void @llvm.dbg.value(metadata i32 %4, metadata !4516, metadata !DIExpression()), !dbg !4519
  %5 = sub i32 %2, %1, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %5, metadata !4517, metadata !DIExpression()), !dbg !4519
  %6 = sub i32 %4, %5, !dbg !4522
  call void @llvm.dbg.value(metadata i32 %6, metadata !4518, metadata !DIExpression()), !dbg !4519
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4523
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4524
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4525
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4526
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4527
  ret void, !dbg !4528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4529 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4533, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata i32 %1, metadata !4534, metadata !DIExpression()), !dbg !4537
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4538
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4535, metadata !DIExpression()), !dbg !4537
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4539
  call void @llvm.dbg.value(metadata i8* %4, metadata !4536, metadata !DIExpression()), !dbg !4537
  ret i8* %4, !dbg !4540
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !4541 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4545, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata i32 %1, metadata !4546, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata i32 %2, metadata !4547, metadata !DIExpression()), !dbg !4557
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4558
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4558
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4548, metadata !DIExpression()), !dbg !4557
  %6 = sub i32 0, %1, !dbg !4559
  %7 = and i32 %6, %1, !dbg !4560
  call void @llvm.dbg.value(metadata i32 %7, metadata !4550, metadata !DIExpression()), !dbg !4557
  %8 = icmp eq i32 %7, %1, !dbg !4561
  br i1 %8, label %13, label %9, !dbg !4563

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4564
  call void @llvm.dbg.value(metadata i32 %10, metadata !4546, metadata !DIExpression()), !dbg !4557
  %11 = icmp ult i32 %7, 4, !dbg !4566
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4566
  br label %17, !dbg !4566

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4567
  br i1 %14, label %15, label %17, !dbg !4570

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4571
  br label %61, !dbg !4573

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4557
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4574
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4546, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata i32 %19, metadata !4549, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata i32 %18, metadata !4550, metadata !DIExpression()), !dbg !4557
  %21 = add i32 %20, -1, !dbg !4575
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !4575, !range !4206
  %23 = icmp ult i32 %22, 2, !dbg !4575
  br i1 %23, label %25, label %24, !dbg !4578

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 324) #27, !dbg !4579
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.16, i32 0, i32 0)) #27, !dbg !4579
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 324) #27, !dbg !4579
  unreachable, !dbg !4579

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !4581
  br i1 %26, label %61, label %27, !dbg !4583

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4584
  br i1 %28, label %61, label %29, !dbg !4585

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !4586
  %31 = add i32 %30, %20, !dbg !4587
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #26, !dbg !4588, !range !4037
  call void @llvm.dbg.value(metadata i32 %32, metadata !4551, metadata !DIExpression()), !dbg !4557
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #26, !dbg !4589
  call void @llvm.dbg.value(metadata i32 %33, metadata !4552, metadata !DIExpression()), !dbg !4557
  %34 = icmp eq i32 %33, 0, !dbg !4590
  br i1 %34, label %61, label %35, !dbg !4592

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !4593
  call void @llvm.dbg.value(metadata i8* %36, metadata !4553, metadata !DIExpression()), !dbg !4557
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !4594
  %38 = ptrtoint i8* %37 to i32, !dbg !4594
  %39 = add i32 %21, %38, !dbg !4594
  %40 = sub i32 0, %20, !dbg !4594
  %41 = and i32 %39, %40, !dbg !4594
  %42 = inttoptr i32 %41 to i8*, !dbg !4595
  %43 = sub i32 0, %18, !dbg !4596
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !4596
  call void @llvm.dbg.value(metadata i8* %44, metadata !4553, metadata !DIExpression()), !dbg !4557
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !4597
  %46 = ptrtoint i8* %45 to i32, !dbg !4597
  %47 = add i32 %46, 7, !dbg !4597
  %48 = and i32 %47, -8, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %48, metadata !4554, metadata !DIExpression()), !dbg !4557
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #26, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %49, metadata !4555, metadata !DIExpression()), !dbg !4557
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4599
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !4600
  %52 = sub i32 %48, %51, !dbg !4600
  %53 = ashr exact i32 %52, 3, !dbg !4600
  call void @llvm.dbg.value(metadata i32 %53, metadata !4556, metadata !DIExpression()), !dbg !4557
  %54 = icmp ugt i32 %49, %33, !dbg !4601
  br i1 %54, label %55, label %56, !dbg !4603

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #26, !dbg !4604
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !4606
  br label %56, !dbg !4607

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4608
  %58 = icmp ugt i32 %57, %53, !dbg !4610
  br i1 %58, label %59, label %60, !dbg !4611

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #26, !dbg !4612
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #26, !dbg !4614
  br label %60, !dbg !4615

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #26, !dbg !4616
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !4557
  ret i8* %62, !dbg !4617
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4618 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4622, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.value(metadata i8* %1, metadata !4623, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.value(metadata i32 %2, metadata !4624, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.value(metadata i32 %3, metadata !4625, metadata !DIExpression()), !dbg !4641
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4642
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4642
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4626, metadata !DIExpression()), !dbg !4641
  %7 = icmp eq i8* %1, null, !dbg !4643
  br i1 %7, label %8, label %10, !dbg !4645

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4646
  br label %63, !dbg !4648

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4649
  br i1 %11, label %12, label %13, !dbg !4651

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4652
  br label %63, !dbg !4654

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !4655
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !4655, !range !4206
  %16 = icmp ult i32 %15, 2, !dbg !4655
  br i1 %16, label %18, label %17, !dbg !4658

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 393) #27, !dbg !4659
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.16, i32 0, i32 0)) #27, !dbg !4659
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 393) #27, !dbg !4659
  unreachable, !dbg !4659

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4661
  br i1 %19, label %63, label %20, !dbg !4663

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4664, !range !4037
  call void @llvm.dbg.value(metadata i32 %21, metadata !4627, metadata !DIExpression()), !dbg !4641
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4665
  call void @llvm.dbg.value(metadata i32 %22, metadata !4628, metadata !DIExpression()), !dbg !4641
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4666
  %24 = ptrtoint i8* %1 to i32, !dbg !4667
  %25 = ptrtoint i8* %23 to i32, !dbg !4667
  %26 = sub i32 %24, %25, !dbg !4667
  call void @llvm.dbg.value(metadata i32 %26, metadata !4629, metadata !DIExpression()), !dbg !4641
  %27 = add i32 %26, %3, !dbg !4668
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #26, !dbg !4669
  call void @llvm.dbg.value(metadata i32 %28, metadata !4630, metadata !DIExpression()), !dbg !4641
  %29 = icmp eq i32 %2, 0, !dbg !4670
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !4671
  br i1 %32, label %33, label %53, !dbg !4671

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4672
  %35 = icmp eq i32 %28, %34, !dbg !4673
  br i1 %35, label %63, label %36, !dbg !4674

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !4675
  br i1 %37, label %38, label %40, !dbg !4676

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !4677
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #26, !dbg !4679
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !4680
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #26, !dbg !4681
  br label %63, !dbg !4682

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4683
  br i1 %41, label %53, label %42, !dbg !4684

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4685
  %44 = add i32 %43, %34, !dbg !4686
  %45 = icmp ult i32 %44, %28, !dbg !4687
  br i1 %45, label %53, label %46, !dbg !4688

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !4689
  call void @llvm.dbg.value(metadata i32 %47, metadata !4631, metadata !DIExpression()), !dbg !4690
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4691
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4692
  %49 = icmp ult i32 %47, %48, !dbg !4694
  br i1 %49, label %50, label %52, !dbg !4695

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !4696
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #26, !dbg !4698
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4699
  br label %52, !dbg !4700

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #26, !dbg !4701
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !4702
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4703
  call void @llvm.dbg.value(metadata i8* %54, metadata !4637, metadata !DIExpression()), !dbg !4641
  %55 = icmp eq i8* %54, null, !dbg !4704
  br i1 %55, label %63, label %56, !dbg !4705

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4706, !range !4149
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #26, !dbg !4707
  %59 = sub i32 %58, %26, !dbg !4708
  call void @llvm.dbg.value(metadata i32 %59, metadata !4638, metadata !DIExpression()), !dbg !4709
  %60 = icmp ult i32 %59, %3, !dbg !4710
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !4710
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #27, !dbg !4711
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4712
  br label %63, !dbg !4713

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !4641
  ret i8* %64, !dbg !4714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4715 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4719, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.value(metadata i32 %1, metadata !4720, metadata !DIExpression()), !dbg !4721
  %3 = shl i32 %1, 3, !dbg !4722
  %4 = add i32 %3, -4, !dbg !4723
  ret i32 %4, !dbg !4724
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !4725 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4729, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8* %1, metadata !4730, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i32 %2, metadata !4731, metadata !DIExpression()), !dbg !4740
  %4 = icmp ult i32 %2, 262144, !dbg !4741
  br i1 %4, label %6, label %5, !dbg !4746

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 491) #27, !dbg !4747
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.18, i32 0, i32 0)) #27, !dbg !4747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 491) #27, !dbg !4747
  unreachable, !dbg !4747

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !4749
  br i1 %7, label %9, label %8, !dbg !4752

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 498) #27, !dbg !4753
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4753
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 498) #27, !dbg !4753
  unreachable, !dbg !4753

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !4755
  call void @llvm.dbg.value(metadata i32 %10, metadata !4731, metadata !DIExpression()), !dbg !4740
  %11 = ptrtoint i8* %1 to i32, !dbg !4756
  %12 = add i32 %11, 7, !dbg !4756
  %13 = and i32 %12, -8, !dbg !4756
  call void @llvm.dbg.value(metadata i32 %13, metadata !4732, metadata !DIExpression()), !dbg !4740
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !4757
  %15 = ptrtoint i8* %14 to i32, !dbg !4757
  %16 = and i32 %15, -8, !dbg !4757
  call void @llvm.dbg.value(metadata i32 %16, metadata !4733, metadata !DIExpression()), !dbg !4740
  %17 = sub i32 %16, %13, !dbg !4758
  %18 = lshr exact i32 %17, 3, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %18, metadata !4734, metadata !DIExpression()), !dbg !4740
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #26, !dbg !4760
  %20 = icmp ugt i32 %18, %19, !dbg !4760
  br i1 %20, label %22, label %21, !dbg !4763

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 507) #27, !dbg !4764
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4764
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 507) #27, !dbg !4764
  unreachable, !dbg !4764

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !4766
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !4735, metadata !DIExpression()), !dbg !4740
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4767
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !4768
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !4769
  store i32 %18, i32* %25, align 8, !dbg !4770
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !4771
  store i32 0, i32* %26, align 4, !dbg !4772
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #26, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %27, metadata !4736, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4740
  %28 = shl i32 %27, 2, !dbg !4774
  %29 = add i32 %28, 20, !dbg !4775
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #26, !dbg !4776
  call void @llvm.dbg.value(metadata i32 %30, metadata !4737, metadata !DIExpression()), !dbg !4740
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #26, !dbg !4777
  %32 = add i32 %31, %30, !dbg !4777
  %33 = icmp ugt i32 %32, %18, !dbg !4777
  br i1 %33, label %36, label %34, !dbg !4780

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !4738, metadata !DIExpression()), !dbg !4781
  %35 = icmp slt i32 %27, 0, !dbg !4782
  br i1 %35, label %37, label %39, !dbg !4784

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 524) #27, !dbg !4785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 524) #27, !dbg !4785
  unreachable, !dbg !4785

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #26, !dbg !4787
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #26, !dbg !4788
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4789
  %38 = sub i32 %18, %30, !dbg !4790
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #26, !dbg !4791
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #26, !dbg !4792
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #26, !dbg !4793
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #26, !dbg !4794
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #26, !dbg !4795
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #26, !dbg !4796
  ret void, !dbg !4797

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !4738, metadata !DIExpression()), !dbg !4781
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !4798
  store i32 0, i32* %41, align 4, !dbg !4800
  %42 = add nuw i32 %40, 1, !dbg !4801
  call void @llvm.dbg.value(metadata i32 %42, metadata !4738, metadata !DIExpression()), !dbg !4781
  %43 = icmp eq i32 %40, %27, !dbg !4782
  br i1 %43, label %37, label %39, !dbg !4784, !llvm.loop !4802
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4804 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4817, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4814, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8* %1, metadata !4815, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8* %2, metadata !4816, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %4, metadata !4818, metadata !DIExpression()), !dbg !4945
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4946
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4946
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4819, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i32 0, metadata !4823, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i1 undef, metadata !4825, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4945
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4948

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4948

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4949
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4817, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8* %30, metadata !4816, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %29, metadata !4823, metadata !DIExpression()), !dbg !4945
  %31 = load i8, i8* %30, align 1, !dbg !4950
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4948

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4950
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4951
  call void @llvm.dbg.value(metadata i8* %34, metadata !4816, metadata !DIExpression()), !dbg !4945
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %35, metadata !4827, metadata !DIExpression()), !dbg !4952
  %36 = icmp slt i32 %35, 0, !dbg !4953
  %37 = add i32 %29, 1, !dbg !4951
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  br i1 %36, label %365, label %28, !llvm.loop !4955

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4957
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4832, metadata !DIExpression()), !dbg !4958
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4958
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4877, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4880, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i8* %30, metadata !4883, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i32 -1, metadata !4884, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i32 -1, metadata !4885, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i8* null, metadata !4886, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i8* %14, metadata !4887, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i8 0, metadata !4888, metadata !DIExpression()), !dbg !4959
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4960
  call void @llvm.dbg.value(metadata i8* %39, metadata !4816, metadata !DIExpression()), !dbg !4945
  %40 = load i24, i24* %15, align 8, !dbg !4961
  %41 = and i24 %40, 256, !dbg !4961
  %42 = icmp eq i24 %41, 0, !dbg !4961
  br i1 %42, label %51, label %43, !dbg !4963

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4964
  call void @llvm.dbg.value(metadata i8* %44, metadata !4817, metadata !DIExpression()), !dbg !4945
  %45 = bitcast i8* %27 to i32*, !dbg !4964
  %46 = load i32, i32* %45, align 4, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %46, metadata !4884, metadata !DIExpression()), !dbg !4959
  %47 = icmp slt i32 %46, 0, !dbg !4966
  br i1 %47, label %48, label %56, !dbg !4968

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4969
  store i24 %49, i24* %15, align 8, !dbg !4969
  %50 = sub nsw i32 0, %46, !dbg !4971
  call void @llvm.dbg.value(metadata i32 %50, metadata !4884, metadata !DIExpression()), !dbg !4959
  br label %56, !dbg !4972

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4973
  %53 = icmp eq i24 %52, 0, !dbg !4973
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4975
  br label %56, !dbg !4975

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4976
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4959
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4817, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %58, metadata !4884, metadata !DIExpression()), !dbg !4959
  %60 = and i24 %57, 1024, !dbg !4976
  %61 = icmp eq i24 %60, 0, !dbg !4976
  br i1 %61, label %69, label %62, !dbg !4977

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4978
  call void @llvm.dbg.value(metadata i8* %63, metadata !4817, metadata !DIExpression()), !dbg !4945
  %64 = bitcast i8* %59 to i32*, !dbg !4978
  %65 = load i32, i32* %64, align 4, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %65, metadata !4889, metadata !DIExpression()), !dbg !4979
  %66 = icmp slt i32 %65, 0, !dbg !4980
  br i1 %66, label %67, label %74, !dbg !4982

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4983
  store i24 %68, i24* %15, align 8, !dbg !4983
  br label %74, !dbg !4985

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4986
  %71 = icmp eq i24 %70, 0, !dbg !4986
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4988
  br label %74, !dbg !4988

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4989
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4959
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4959
  call void @llvm.dbg.value(metadata i8* %77, metadata !4817, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %76, metadata !4885, metadata !DIExpression()), !dbg !4959
  store i32 0, i32* %16, align 4, !dbg !4990
  store i32 0, i32* %17, align 8, !dbg !4991
  %78 = lshr i24 %75, 16, !dbg !4989
  call void @llvm.dbg.value(metadata i24 %78, metadata !4892, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4959
  %79 = lshr i24 %75, 11, !dbg !4992
  %80 = and i24 %79, 15, !dbg !4992
  %81 = zext i24 %80 to i32, !dbg !4992
  call void @llvm.dbg.value(metadata i32 %81, metadata !4893, metadata !DIExpression()), !dbg !4959
  %82 = trunc i24 %78 to i3, !dbg !4993
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4993

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4994

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4997
  call void @llvm.dbg.value(metadata i8* %85, metadata !4817, metadata !DIExpression()), !dbg !4945
  %86 = bitcast i8* %77 to i32*, !dbg !4997
  %87 = load i32, i32* %86, align 4, !dbg !4997
  %88 = sext i32 %87 to i64, !dbg !4997
  store i64 %88, i64* %20, align 8, !dbg !4999
  br label %115, !dbg !5000

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5001
  call void @llvm.dbg.value(metadata i8* %90, metadata !4817, metadata !DIExpression()), !dbg !4945
  %91 = bitcast i8* %77 to i32*, !dbg !5001
  %92 = load i32, i32* %91, align 4, !dbg !5001
  %93 = sext i32 %92 to i64, !dbg !5001
  store i64 %93, i64* %20, align 8, !dbg !5004
  br label %115, !dbg !5005

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5006
  %96 = add i32 %95, 7, !dbg !5006
  %97 = and i32 %96, -8, !dbg !5006
  %98 = inttoptr i32 %97 to i8*, !dbg !5006
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5006
  call void @llvm.dbg.value(metadata i8* %99, metadata !4817, metadata !DIExpression()), !dbg !4945
  %100 = inttoptr i32 %97 to i64*, !dbg !5006
  %101 = load i64, i64* %100, align 8, !dbg !5006
  store i64 %101, i64* %20, align 8, !dbg !5007
  br label %115, !dbg !5008

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5009
  %104 = add i32 %103, 7, !dbg !5009
  %105 = and i32 %104, -8, !dbg !5009
  %106 = inttoptr i32 %105 to i8*, !dbg !5009
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5009
  call void @llvm.dbg.value(metadata i8* %107, metadata !4817, metadata !DIExpression()), !dbg !4945
  %108 = inttoptr i32 %105 to i64*, !dbg !5009
  %109 = load i64, i64* %108, align 8, !dbg !5009
  store i64 %109, i64* %20, align 8, !dbg !5010
  br label %115, !dbg !5011

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5012
  call void @llvm.dbg.value(metadata i8* %111, metadata !4817, metadata !DIExpression()), !dbg !4945
  %112 = bitcast i8* %77 to i32*, !dbg !5012
  %113 = load i32, i32* %112, align 4, !dbg !5012
  %114 = sext i32 %113 to i64, !dbg !5013
  store i64 %114, i64* %20, align 8, !dbg !5014
  br label %115, !dbg !5015

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5016
  call void @llvm.dbg.value(metadata i8* %117, metadata !4817, metadata !DIExpression()), !dbg !4945
  %118 = trunc i24 %79 to i4, !dbg !5017
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5017

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5018
  %121 = ashr exact i64 %120, 56, !dbg !5018
  store i64 %121, i64* %20, align 8, !dbg !5021
  br label %177, !dbg !5022

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5023
  %124 = ashr exact i64 %123, 48, !dbg !5023
  store i64 %124, i64* %20, align 8, !dbg !5026
  br label %177, !dbg !5027

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5028

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5031
  call void @llvm.dbg.value(metadata i8* %127, metadata !4817, metadata !DIExpression()), !dbg !4945
  %128 = bitcast i8* %77 to i32*, !dbg !5031
  %129 = load i32, i32* %128, align 4, !dbg !5031
  %130 = zext i32 %129 to i64, !dbg !5031
  store i64 %130, i64* %20, align 8, !dbg !5033
  br label %157, !dbg !5034

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5035
  call void @llvm.dbg.value(metadata i8* %132, metadata !4817, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8* %132, metadata !4817, metadata !DIExpression()), !dbg !4945
  %133 = bitcast i8* %77 to i32*, !dbg !5035
  %134 = load i32, i32* %133, align 4, !dbg !5035
  %135 = zext i32 %134 to i64, !dbg !5035
  store i64 %135, i64* %20, align 8, !dbg !5035
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5037
  %138 = add i32 %137, 7, !dbg !5037
  %139 = and i32 %138, -8, !dbg !5037
  %140 = inttoptr i32 %139 to i8*, !dbg !5037
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5037
  call void @llvm.dbg.value(metadata i8* %141, metadata !4817, metadata !DIExpression()), !dbg !4945
  %142 = inttoptr i32 %139 to i64*, !dbg !5037
  %143 = load i64, i64* %142, align 8, !dbg !5037
  store i64 %143, i64* %20, align 8, !dbg !5038
  br label %157, !dbg !5039

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5040
  %146 = add i32 %145, 7, !dbg !5040
  %147 = and i32 %146, -8, !dbg !5040
  %148 = inttoptr i32 %147 to i8*, !dbg !5040
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %149, metadata !4817, metadata !DIExpression()), !dbg !4945
  %150 = inttoptr i32 %147 to i64*, !dbg !5040
  %151 = load i64, i64* %150, align 8, !dbg !5040
  store i64 %151, i64* %20, align 8, !dbg !5041
  br label %157, !dbg !5042

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5043
  call void @llvm.dbg.value(metadata i8* %153, metadata !4817, metadata !DIExpression()), !dbg !4945
  %154 = bitcast i8* %77 to i32*, !dbg !5043
  %155 = load i32, i32* %154, align 4, !dbg !5043
  %156 = zext i32 %155 to i64, !dbg !5044
  store i64 %156, i64* %20, align 8, !dbg !5045
  br label %157, !dbg !5046

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5047
  call void @llvm.dbg.value(metadata i8* %159, metadata !4817, metadata !DIExpression()), !dbg !4945
  %160 = trunc i24 %79 to i4, !dbg !5048
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5048

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5049
  store i64 %162, i64* %20, align 8, !dbg !5052
  br label %177, !dbg !5053

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5054
  store i64 %164, i64* %20, align 8, !dbg !5057
  br label %177, !dbg !5058

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5059
  %167 = add i32 %166, 7, !dbg !5059
  %168 = and i32 %167, -8, !dbg !5059
  %169 = inttoptr i32 %168 to i8*, !dbg !5059
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5059
  call void @llvm.dbg.value(metadata i8* %170, metadata !4817, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8* %170, metadata !4817, metadata !DIExpression()), !dbg !4945
  %171 = inttoptr i32 %168 to double*, !dbg !5059
  %172 = load double, double* %171, align 8, !dbg !5059
  store double %172, double* %19, align 8, !dbg !5059
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5063
  call void @llvm.dbg.value(metadata i8* %174, metadata !4817, metadata !DIExpression()), !dbg !4945
  %175 = bitcast i8* %77 to i8**, !dbg !5063
  %176 = load i8*, i8** %175, align 4, !dbg !5063
  store i8* %176, i8** %18, align 8, !dbg !5066
  br label %177, !dbg !5067

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4959
  call void @llvm.dbg.value(metadata i8* %178, metadata !4817, metadata !DIExpression()), !dbg !4945
  %179 = and i24 %75, 3, !dbg !5068
  %180 = icmp eq i24 %179, 0, !dbg !5068
  br i1 %180, label %185, label %181, !dbg !5068

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5069
  call void @llvm.dbg.value(metadata i32 %182, metadata !4894, metadata !DIExpression()), !dbg !5070
  %183 = icmp slt i32 %182, 0, !dbg !5071
  %184 = add i32 %182, %29, !dbg !5069
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5073
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5074

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5075
  call void @llvm.dbg.value(metadata i32 %188, metadata !4898, metadata !DIExpression()), !dbg !5076
  %189 = icmp slt i32 %188, 0, !dbg !5077
  %190 = add i32 %29, 1, !dbg !5075
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5079
  call void @llvm.dbg.value(metadata i8* %192, metadata !4886, metadata !DIExpression()), !dbg !4959
  %193 = icmp sgt i32 %76, -1, !dbg !5080
  br i1 %193, label %194, label %196, !dbg !5082

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5083
  call void @llvm.dbg.value(metadata i32 %195, metadata !4901, metadata !DIExpression()), !dbg !5085
  br label %241, !dbg !5086

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5087
  call void @llvm.dbg.value(metadata i32 %197, metadata !4901, metadata !DIExpression()), !dbg !5085
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4886, metadata !DIExpression()), !dbg !4959
  %199 = load i64, i64* %20, align 8, !dbg !5089
  %200 = trunc i64 %199 to i8, !dbg !5090
  store i8 %200, i8* %10, align 1, !dbg !5091
  call void @llvm.dbg.value(metadata i8* %23, metadata !4887, metadata !DIExpression()), !dbg !4959
  br label %245, !dbg !5092

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5093
  %203 = icmp eq i24 %202, 0, !dbg !5093
  %204 = trunc i24 %75 to i8, !dbg !5095
  %205 = shl i8 %204, 1, !dbg !5095
  %206 = and i8 %205, 32, !dbg !5095
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5095
  call void @llvm.dbg.value(metadata i8 %207, metadata !4888, metadata !DIExpression()), !dbg !4959
  %208 = load i64, i64* %20, align 8, !dbg !5096
  call void @llvm.dbg.value(metadata i64 %208, metadata !4824, metadata !DIExpression()), !dbg !4945
  %209 = icmp slt i64 %208, 0, !dbg !5097
  br i1 %209, label %210, label %212, !dbg !5099

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4888, metadata !DIExpression()), !dbg !4959
  %211 = sub nsw i64 0, %208, !dbg !5100
  store i64 %211, i64* %20, align 8, !dbg !5102
  br label %212, !dbg !5103

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4959
  call void @llvm.dbg.value(metadata i8 %213, metadata !4888, metadata !DIExpression()), !dbg !4959
  %214 = load i64, i64* %20, align 8, !dbg !5104
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5105
  call void @llvm.dbg.value(metadata i8* %215, metadata !4886, metadata !DIExpression()), !dbg !4959
  br label %216, !dbg !5106

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5107
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5108
  call void @llvm.dbg.value(metadata i8* %218, metadata !4886, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i8 %217, metadata !4888, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.label(metadata !4944), !dbg !5109
  %219 = icmp sgt i32 %76, -1, !dbg !5110
  br i1 %219, label %222, label %220, !dbg !5111

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5112
  br label %245, !dbg !5111

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5114
  %224 = sub i32 %22, %223, !dbg !5114
  call void @llvm.dbg.value(metadata i32 %224, metadata !4903, metadata !DIExpression()), !dbg !5115
  %225 = load i24, i24* %15, align 8, !dbg !5116
  %226 = and i24 %225, -65, !dbg !5116
  store i24 %226, i24* %15, align 8, !dbg !5116
  %227 = icmp ugt i32 %76, %224, !dbg !5117
  br i1 %227, label %228, label %245, !dbg !5119

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5120
  store i32 %229, i32* %16, align 4, !dbg !5122
  br label %245, !dbg !5123

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5124
  %232 = icmp eq i8* %231, null, !dbg !5126
  br i1 %232, label %245, label %233, !dbg !5127

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5128
  %235 = zext i32 %234 to i64, !dbg !5128
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5130
  call void @llvm.dbg.value(metadata i8* %236, metadata !4886, metadata !DIExpression()), !dbg !4959
  %237 = load i24, i24* %15, align 8, !dbg !5131
  %238 = or i24 %237, 1048576, !dbg !5131
  store i24 %238, i24* %15, align 8, !dbg !5131
  store i8 120, i8* %21, align 1, !dbg !5132
  br label %216, !dbg !5133

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5134
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5137
  br label %363, !dbg !5138

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5139
  call void @llvm.dbg.value(metadata i32 %242, metadata !4901, metadata !DIExpression()), !dbg !5085
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5140
  call void @llvm.dbg.value(metadata i32 -1, metadata !4885, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i32 %29, metadata !4823, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8* %192, metadata !4886, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i8* %243, metadata !4887, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i8 0, metadata !4888, metadata !DIExpression()), !dbg !4959
  %244 = icmp eq i8* %192, null, !dbg !5141
  br i1 %244, label %363, label %245, !dbg !5143, !llvm.loop !4955

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5112
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4959
  call void @llvm.dbg.value(metadata i32 0, metadata !4907, metadata !DIExpression()), !dbg !4959
  %250 = zext i8 %249 to i32, !dbg !5144
  %251 = icmp eq i8 %249, 0, !dbg !5146
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4959
  call void @llvm.dbg.value(metadata i32 undef, metadata !4906, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4959
  call void @llvm.dbg.value(metadata i32 undef, metadata !4906, metadata !DIExpression()), !dbg !4959
  %252 = icmp sgt i32 %58, 0, !dbg !5147
  br i1 %252, label %253, label %302, !dbg !5148

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5112
  %255 = icmp eq i24 %254, 0, !dbg !5112
  %256 = ptrtoint i8* %248 to i32, !dbg !5149
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4959
  %257 = ptrtoint i8* %247 to i32, !dbg !5149
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4959
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4959
  %258 = xor i1 %251, true, !dbg !5150
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4959
  %259 = sext i1 %258 to i32, !dbg !5150
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4959
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4959
  %260 = lshr i24 %246, 19, !dbg !5151
  %261 = and i24 %260, 1, !dbg !5151
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5151
  %263 = zext i24 %262 to i32, !dbg !5151
  %264 = add i32 %257, %259, !dbg !5151
  %265 = add i32 %256, %263, !dbg !5151
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4959
  %266 = and i24 %246, 4194304, !dbg !5152
  %267 = icmp eq i24 %266, 0, !dbg !5152
  %268 = load i32, i32* %16, align 4, !dbg !5154
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4959
  call void @llvm.dbg.value(metadata i32 undef, metadata !4906, metadata !DIExpression()), !dbg !4959
  %269 = load i32, i32* %17, align 8, !dbg !5155
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5155
  call void @llvm.dbg.value(metadata i32 undef, metadata !4906, metadata !DIExpression()), !dbg !4959
  %271 = add i32 %264, %58, !dbg !5155
  %272 = add i32 %265, %268, !dbg !5155
  %273 = add i32 %272, %270, !dbg !5156
  %274 = sub i32 %271, %273, !dbg !5156
  call void @llvm.dbg.value(metadata i32 %274, metadata !4884, metadata !DIExpression()), !dbg !4959
  %275 = and i24 %246, 4, !dbg !5157
  %276 = icmp eq i24 %275, 0, !dbg !5157
  br i1 %276, label %277, label %302, !dbg !5158

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4908, metadata !DIExpression()), !dbg !5159
  %278 = and i24 %246, 64, !dbg !5160
  %279 = icmp eq i24 %278, 0, !dbg !5160
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5161
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5161
  %282 = select i1 %279, i32 32, i32 48, !dbg !5161
  br i1 %280, label %287, label %283, !dbg !5161

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5162
  call void @llvm.dbg.value(metadata i32 %284, metadata !4913, metadata !DIExpression()), !dbg !5163
  %285 = icmp slt i32 %284, 0, !dbg !5164
  %286 = add i32 %29, 1, !dbg !5162
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4959
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4949
  call void @llvm.dbg.value(metadata i32 %290, metadata !4823, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8 undef, metadata !4908, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i8 %288, metadata !4888, metadata !DIExpression()), !dbg !4959
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5166
  %292 = add i32 %291, -1, !dbg !5166
  br label %293, !dbg !5166

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5167
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4949
  call void @llvm.dbg.value(metadata i32 %295, metadata !4823, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %294, metadata !4884, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i32 %294, metadata !4884, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4959
  %296 = icmp sgt i32 %294, 0, !dbg !5168
  br i1 %296, label %297, label %302, !dbg !5166

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5169
  call void @llvm.dbg.value(metadata i32 %298, metadata !4884, metadata !DIExpression()), !dbg !4959
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5170
  call void @llvm.dbg.value(metadata i32 %299, metadata !4919, metadata !DIExpression()), !dbg !5171
  %300 = icmp slt i32 %299, 0, !dbg !5172
  %301 = add i32 %295, 1, !dbg !5170
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  br i1 %300, label %361, label %293, !llvm.loop !5174

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4959
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4959
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4949
  call void @llvm.dbg.value(metadata i32 %305, metadata !4823, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %304, metadata !4884, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i8 %303, metadata !4888, metadata !DIExpression()), !dbg !4959
  %306 = icmp eq i8 %303, 0, !dbg !5176
  br i1 %306, label %312, label %307, !dbg !5177

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5178
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5179
  call void @llvm.dbg.value(metadata i32 %309, metadata !4922, metadata !DIExpression()), !dbg !5180
  %310 = icmp slt i32 %309, 0, !dbg !5181
  %311 = add i32 %305, 1, !dbg !5179
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4949
  call void @llvm.dbg.value(metadata i32 %313, metadata !4823, metadata !DIExpression()), !dbg !4945
  %314 = lshr i24 %246, 20, !dbg !5183
  %315 = lshr i24 %246, 19, !dbg !5184
  %316 = or i24 %314, %315, !dbg !5185
  %317 = and i24 %316, 1, !dbg !5185
  %318 = icmp eq i24 %317, 0, !dbg !5185
  br i1 %318, label %323, label %319, !dbg !5186

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %320, metadata !4926, metadata !DIExpression()), !dbg !5188
  %321 = icmp slt i32 %320, 0, !dbg !5189
  %322 = add i32 %313, 1, !dbg !5187
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4949
  call void @llvm.dbg.value(metadata i32 %324, metadata !4823, metadata !DIExpression()), !dbg !4945
  %325 = and i24 %246, 1048576, !dbg !5191
  %326 = icmp eq i24 %325, 0, !dbg !5191
  br i1 %326, label %333, label %327, !dbg !5192

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5193
  %329 = zext i8 %328 to i32, !dbg !5193
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5193
  call void @llvm.dbg.value(metadata i32 %330, metadata !4932, metadata !DIExpression()), !dbg !5194
  %331 = icmp slt i32 %330, 0, !dbg !5195
  %332 = add i32 %324, 1, !dbg !5193
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4949
  call void @llvm.dbg.value(metadata i32 %334, metadata !4823, metadata !DIExpression()), !dbg !4945
  %335 = load i32, i32* %16, align 4, !dbg !5197
  call void @llvm.dbg.value(metadata i32 %335, metadata !4907, metadata !DIExpression()), !dbg !4959
  br label %336, !dbg !5198

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5199
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4949
  call void @llvm.dbg.value(metadata i32 %338, metadata !4823, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %337, metadata !4907, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4959
  %339 = icmp sgt i32 %337, 0, !dbg !5200
  br i1 %339, label %340, label %345, !dbg !5198

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5201
  call void @llvm.dbg.value(metadata i32 %341, metadata !4907, metadata !DIExpression()), !dbg !4959
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5202
  call void @llvm.dbg.value(metadata i32 %342, metadata !4936, metadata !DIExpression()), !dbg !5203
  %343 = icmp slt i32 %342, 0, !dbg !5204
  %344 = add i32 %338, 1, !dbg !5202
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  br i1 %343, label %361, label %336, !llvm.loop !5206

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5208
  call void @llvm.dbg.value(metadata i32 %346, metadata !4939, metadata !DIExpression()), !dbg !5209
  %347 = icmp slt i32 %346, 0, !dbg !5210
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5208
  call void @llvm.dbg.value(metadata i32 %349, metadata !4823, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %304, metadata !4884, metadata !DIExpression()), !dbg !4959
  %350 = icmp sgt i32 %304, 0, !dbg !5212
  br i1 %350, label %351, label %363, !dbg !5213

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5213
  %353 = add i32 %352, %338, !dbg !5213
  br label %354, !dbg !5213

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %355, metadata !4884, metadata !DIExpression()), !dbg !4959
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5214
  call void @llvm.dbg.value(metadata i32 %356, metadata !4941, metadata !DIExpression()), !dbg !5215
  %357 = icmp slt i32 %356, 0, !dbg !5216
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5218
  call void @llvm.dbg.value(metadata i32 undef, metadata !4823, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4945
  call void @llvm.dbg.value(metadata i32 %359, metadata !4884, metadata !DIExpression()), !dbg !4959
  %360 = icmp sgt i32 %355, 1, !dbg !5212
  br i1 %360, label %354, label %363, !dbg !5213, !llvm.loop !5219

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4823, metadata !DIExpression()), !dbg !4945
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4956
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4949
  call void @llvm.dbg.value(metadata i32 %364, metadata !4823, metadata !DIExpression()), !dbg !4945
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4956
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4945
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5221
  ret i32 %366, !dbg !5221
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5222 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5226, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.value(metadata i8* %1, metadata !5227, metadata !DIExpression()), !dbg !5228
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5229
  store i24 0, i24* %3, align 4, !dbg !5229
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5229
  store i8 0, i8* %4, align 1, !dbg !5229
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5229
  store i32 0, i32* %5, align 4, !dbg !5229
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5229
  store i32 0, i32* %6, align 4, !dbg !5229
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5230
  call void @llvm.dbg.value(metadata i8* %7, metadata !5227, metadata !DIExpression()), !dbg !5228
  %8 = load i8, i8* %7, align 1, !dbg !5231
  %9 = icmp eq i8 %8, 37, !dbg !5233
  br i1 %9, label %10, label %12, !dbg !5234

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5235
  call void @llvm.dbg.value(metadata i8* %11, metadata !5227, metadata !DIExpression()), !dbg !5228
  store i8 37, i8* %4, align 1, !dbg !5237
  br label %18, !dbg !5238

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5239
  call void @llvm.dbg.value(metadata i8* %13, metadata !5227, metadata !DIExpression()), !dbg !5228
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5240
  call void @llvm.dbg.value(metadata i8* %14, metadata !5227, metadata !DIExpression()), !dbg !5228
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5241
  call void @llvm.dbg.value(metadata i8* %15, metadata !5227, metadata !DIExpression()), !dbg !5228
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5242
  call void @llvm.dbg.value(metadata i8* %16, metadata !5227, metadata !DIExpression()), !dbg !5228
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5243
  call void @llvm.dbg.value(metadata i8* %17, metadata !5227, metadata !DIExpression()), !dbg !5228
  br label %18, !dbg !5244

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5228
  ret i8* %19, !dbg !5245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5246 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5250, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %1, metadata !5251, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %2, metadata !5252, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %3, metadata !5253, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i32 0, metadata !5254, metadata !DIExpression()), !dbg !5257
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5258

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5259
  call void @llvm.dbg.value(metadata i32 %9, metadata !5254, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %8, metadata !5252, metadata !DIExpression()), !dbg !5257
  %10 = icmp ult i8* %8, %3, !dbg !5260
  br i1 %10, label %11, label %13, !dbg !5261

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5262
  br label %17, !dbg !5261

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5263

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5264
  %16 = icmp eq i8 %15, 0, !dbg !5263
  br i1 %16, label %24, label %17, !dbg !5258

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5262
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5265
  call void @llvm.dbg.value(metadata i8* %19, metadata !5252, metadata !DIExpression()), !dbg !5257
  %20 = zext i8 %18 to i32, !dbg !5266
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5267
  call void @llvm.dbg.value(metadata i32 %21, metadata !5255, metadata !DIExpression()), !dbg !5268
  %22 = icmp slt i32 %21, 0, !dbg !5269
  %23 = add i32 %9, 1, !dbg !5271
  call void @llvm.dbg.value(metadata i32 undef, metadata !5254, metadata !DIExpression()), !dbg !5257
  br i1 %22, label %24, label %7, !llvm.loop !5272

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5257
  ret i32 %25, !dbg !5274
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5275 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5279, metadata !DIExpression()), !dbg !5289
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5280, metadata !DIExpression()), !dbg !5289
  call void @llvm.dbg.value(metadata i8* %2, metadata !5281, metadata !DIExpression()), !dbg !5289
  call void @llvm.dbg.value(metadata i8* %3, metadata !5282, metadata !DIExpression()), !dbg !5289
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5290
  %6 = load i8, i8* %5, align 1, !dbg !5290
  %7 = zext i8 %6 to i32, !dbg !5291
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5292
  %9 = icmp eq i32 %8, 0, !dbg !5292
  call void @llvm.dbg.value(metadata i1 %9, metadata !5283, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5289
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5293
  call void @llvm.dbg.value(metadata i32 %10, metadata !5284, metadata !DIExpression()), !dbg !5289
  %11 = ptrtoint i8* %3 to i32, !dbg !5294
  %12 = ptrtoint i8* %2 to i32, !dbg !5294
  %13 = sub i32 %11, %12, !dbg !5294
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5295
  call void @llvm.dbg.value(metadata i8* %14, metadata !5286, metadata !DIExpression()), !dbg !5289
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5296

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5289
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5279, metadata !DIExpression()), !dbg !5289
  call void @llvm.dbg.value(metadata i8* %18, metadata !5286, metadata !DIExpression()), !dbg !5289
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5297
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5298
  call void @llvm.dbg.value(metadata i32 %25, metadata !5287, metadata !DIExpression()), !dbg !5299
  %26 = icmp ult i32 %25, 10, !dbg !5300
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5301
  %28 = add i32 %27, %25, !dbg !5299
  %29 = trunc i32 %28 to i8, !dbg !5301
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5302
  call void @llvm.dbg.value(metadata i8* %30, metadata !5286, metadata !DIExpression()), !dbg !5289
  store i8 %29, i8* %30, align 1, !dbg !5303
  call void @llvm.dbg.value(metadata i64 %22, metadata !5279, metadata !DIExpression()), !dbg !5289
  %31 = icmp uge i64 %19, %15, !dbg !5304
  %32 = icmp ugt i8* %30, %2, !dbg !5305
  %33 = and i1 %31, %32, !dbg !5305
  br i1 %33, label %17, label %34, !dbg !5306, !llvm.loop !5307

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5309
  %36 = load i24, i24* %35, align 4, !dbg !5309
  %37 = and i24 %36, 32, !dbg !5309
  %38 = icmp eq i24 %37, 0, !dbg !5309
  br i1 %38, label %44, label %39, !dbg !5311

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5312

40:                                               ; preds = %39
  br label %41, !dbg !5314

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5318
  store i24 %43, i24* %35, align 4, !dbg !5318
  br label %44, !dbg !5319

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5319
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5320 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5326, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i8* %1, metadata !5327, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i32 %2, metadata !5328, metadata !DIExpression()), !dbg !5329
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5330
  %5 = load i24, i24* %4, align 4, !dbg !5330
  %6 = lshr i24 %5, 11, !dbg !5330
  %7 = and i24 %6, 15, !dbg !5330
  %8 = zext i24 %7 to i32, !dbg !5330
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5331

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5332
  store i32 %2, i32* %10, align 4, !dbg !5334
  br label %28, !dbg !5335

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5336
  store i8 %12, i8* %1, align 1, !dbg !5337
  br label %28, !dbg !5338

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5339
  %15 = bitcast i8* %1 to i16*, !dbg !5340
  store i16 %14, i16* %15, align 2, !dbg !5341
  br label %28, !dbg !5342

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5343
  store i32 %2, i32* %17, align 4, !dbg !5344
  br label %28, !dbg !5345

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5346
  %20 = bitcast i8* %1 to i64*, !dbg !5347
  store i64 %19, i64* %20, align 8, !dbg !5348
  br label %28, !dbg !5349

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5350
  %23 = bitcast i8* %1 to i64*, !dbg !5351
  store i64 %22, i64* %23, align 8, !dbg !5352
  br label %28, !dbg !5353

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5354
  store i32 %2, i32* %25, align 4, !dbg !5355
  br label %28, !dbg !5356

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5357
  store i32 %2, i32* %27, align 4, !dbg !5358
  br label %28, !dbg !5359

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5360
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5364, metadata !DIExpression()), !dbg !5365
  %2 = add i32 %0, -65, !dbg !5366
  %3 = icmp ult i32 %2, 26, !dbg !5367
  %4 = zext i1 %3 to i32, !dbg !5367
  ret i32 %4, !dbg !5368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5369 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5373, metadata !DIExpression()), !dbg !5374
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5375

2:                                                ; preds = %1
  br label %4, !dbg !5376

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5378

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5379
  ret i32 %5, !dbg !5380
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5381 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5383, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i8* %1, metadata !5384, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i8 1, metadata !5385, metadata !DIExpression()), !dbg !5386
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5387

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5385, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i8* %5, metadata !5384, metadata !DIExpression()), !dbg !5386
  %6 = load i8, i8* %5, align 1, !dbg !5388
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5390

7:                                                ; preds = %4
  br label %11, !dbg !5391

8:                                                ; preds = %4
  br label %11, !dbg !5393

9:                                                ; preds = %4
  br label %11, !dbg !5394

10:                                               ; preds = %4
  br label %11, !dbg !5395

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5396
  %14 = or i24 %13, %12, !dbg !5396
  store i24 %14, i24* %3, align 4, !dbg !5396
  call void @llvm.dbg.value(metadata i8 poison, metadata !5385, metadata !DIExpression()), !dbg !5386
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5384, metadata !DIExpression()), !dbg !5386
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5385, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i8* %15, metadata !5384, metadata !DIExpression()), !dbg !5386
  %17 = load i24, i24* %3, align 4, !dbg !5397
  %18 = and i24 %17, 68, !dbg !5399
  %19 = icmp eq i24 %18, 68, !dbg !5399
  br i1 %19, label %20, label %22, !dbg !5399

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5400
  store i24 %21, i24* %3, align 4, !dbg !5400
  br label %22, !dbg !5402

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5403
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5404 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5406, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i8* %1, metadata !5407, metadata !DIExpression()), !dbg !5410
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5411
  %5 = load i24, i24* %4, align 4, !dbg !5412
  %6 = or i24 %5, 128, !dbg !5412
  store i24 %6, i24* %4, align 4, !dbg !5412
  call void @llvm.dbg.value(metadata i8* %1, metadata !5407, metadata !DIExpression()), !dbg !5410
  %7 = load i8, i8* %1, align 1, !dbg !5413
  %8 = icmp eq i8 %7, 42, !dbg !5415
  br i1 %8, label %9, label %12, !dbg !5416

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5417
  store i24 %10, i24* %4, align 4, !dbg !5417
  call void @llvm.dbg.value(metadata i8* %1, metadata !5407, metadata !DIExpression()), !dbg !5410
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5419
  call void @llvm.dbg.value(metadata i8* %11, metadata !5407, metadata !DIExpression()), !dbg !5410
  store i8* %11, i8** %3, align 4, !dbg !5419
  br label %29, !dbg !5420

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5408, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i8** %3, metadata !5407, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5421
  call void @llvm.dbg.value(metadata i32 %13, metadata !5409, metadata !DIExpression()), !dbg !5410
  %14 = load i8*, i8** %3, align 4, !dbg !5422
  call void @llvm.dbg.value(metadata i8* %14, metadata !5407, metadata !DIExpression()), !dbg !5410
  %15 = icmp eq i8* %14, %1, !dbg !5424
  br i1 %15, label %29, label %16, !dbg !5425

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5426
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5428
  store i32 %13, i32* %18, align 4, !dbg !5429
  %19 = lshr i32 %13, 31, !dbg !5430
  %20 = lshr i24 %17, 1, !dbg !5431
  %21 = and i24 %20, 1, !dbg !5431
  %22 = zext i24 %21 to i32, !dbg !5431
  %23 = or i32 %19, %22, !dbg !5431
  %24 = trunc i32 %23 to i24, !dbg !5431
  %25 = shl nuw nsw i24 %24, 1, !dbg !5431
  %26 = and i24 %17, -131, !dbg !5431
  %27 = or i24 %26, 128, !dbg !5431
  %28 = or i24 %25, %27, !dbg !5431
  store i24 %28, i24* %4, align 4, !dbg !5431
  br label %29, !dbg !5432

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5410
  ret i8* %30, !dbg !5433
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5434 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5436, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata i8* %1, metadata !5437, metadata !DIExpression()), !dbg !5439
  %4 = load i8, i8* %1, align 1, !dbg !5440
  %5 = icmp eq i8 %4, 46, !dbg !5441
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5442
  %7 = load i24, i24* %6, align 4, !dbg !5443
  %8 = select i1 %5, i24 512, i24 0, !dbg !5443
  %9 = and i24 %7, -513, !dbg !5443
  %10 = or i24 %9, %8, !dbg !5443
  store i24 %10, i24* %6, align 4, !dbg !5443
  br i1 %5, label %11, label %32, !dbg !5444

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5437, metadata !DIExpression()), !dbg !5439
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5445
  call void @llvm.dbg.value(metadata i8* %12, metadata !5437, metadata !DIExpression()), !dbg !5439
  store i8* %12, i8** %3, align 4, !dbg !5445
  %13 = load i8, i8* %12, align 1, !dbg !5446
  %14 = icmp eq i8 %13, 42, !dbg !5448
  br i1 %14, label %15, label %18, !dbg !5449

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5450
  store i24 %16, i24* %6, align 4, !dbg !5450
  call void @llvm.dbg.value(metadata i8* %12, metadata !5437, metadata !DIExpression()), !dbg !5439
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5452
  call void @llvm.dbg.value(metadata i8* %17, metadata !5437, metadata !DIExpression()), !dbg !5439
  store i8* %17, i8** %3, align 4, !dbg !5452
  br label %32, !dbg !5453

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5437, metadata !DIExpression(DW_OP_deref)), !dbg !5439
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5454
  call void @llvm.dbg.value(metadata i32 %19, metadata !5438, metadata !DIExpression()), !dbg !5439
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5455
  store i32 %19, i32* %20, align 4, !dbg !5456
  %21 = lshr i32 %19, 31, !dbg !5457
  %22 = load i24, i24* %6, align 4, !dbg !5458
  %23 = lshr i24 %22, 1, !dbg !5458
  %24 = and i24 %23, 1, !dbg !5458
  %25 = zext i24 %24 to i32, !dbg !5458
  %26 = or i32 %21, %25, !dbg !5458
  %27 = trunc i32 %26 to i24, !dbg !5458
  %28 = shl nuw nsw i24 %27, 1, !dbg !5458
  %29 = and i24 %22, -3, !dbg !5458
  %30 = or i24 %28, %29, !dbg !5458
  store i24 %30, i24* %6, align 4, !dbg !5458
  %31 = load i8*, i8** %3, align 4, !dbg !5459
  call void @llvm.dbg.value(metadata i8* %31, metadata !5437, metadata !DIExpression()), !dbg !5439
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5439
  ret i8* %33, !dbg !5460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5461 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5463, metadata !DIExpression()), !dbg !5465
  call void @llvm.dbg.value(metadata i8* %1, metadata !5464, metadata !DIExpression()), !dbg !5465
  %3 = load i8, i8* %1, align 1, !dbg !5466
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5467

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5468
  call void @llvm.dbg.value(metadata i8* %5, metadata !5464, metadata !DIExpression()), !dbg !5465
  %6 = load i8, i8* %5, align 1, !dbg !5471
  %7 = icmp eq i8 %6, 104, !dbg !5472
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5473
  %9 = load i24, i24* %8, align 4, !dbg !5473
  %10 = and i24 %9, -30721, !dbg !5473
  br i1 %7, label %11, label %14, !dbg !5474

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5475
  store i24 %12, i24* %8, align 4, !dbg !5475
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5477
  call void @llvm.dbg.value(metadata i8* %13, metadata !5464, metadata !DIExpression()), !dbg !5465
  br label %56, !dbg !5478

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5479
  store i24 %15, i24* %8, align 4, !dbg !5479
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5481
  call void @llvm.dbg.value(metadata i8* %17, metadata !5464, metadata !DIExpression()), !dbg !5465
  %18 = load i8, i8* %17, align 1, !dbg !5483
  %19 = icmp eq i8 %18, 108, !dbg !5484
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5485
  %21 = load i24, i24* %20, align 4, !dbg !5485
  %22 = and i24 %21, -30721, !dbg !5485
  br i1 %19, label %23, label %26, !dbg !5486

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5487
  store i24 %24, i24* %20, align 4, !dbg !5487
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5489
  call void @llvm.dbg.value(metadata i8* %25, metadata !5464, metadata !DIExpression()), !dbg !5465
  br label %56, !dbg !5490

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5491
  store i24 %27, i24* %20, align 4, !dbg !5491
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5493
  %30 = load i24, i24* %29, align 4, !dbg !5494
  %31 = and i24 %30, -30721, !dbg !5494
  %32 = or i24 %31, 10240, !dbg !5494
  store i24 %32, i24* %29, align 4, !dbg !5494
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5495
  call void @llvm.dbg.value(metadata i8* %33, metadata !5464, metadata !DIExpression()), !dbg !5465
  br label %56, !dbg !5496

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5497
  %36 = load i24, i24* %35, align 4, !dbg !5498
  %37 = and i24 %36, -30721, !dbg !5498
  %38 = or i24 %37, 12288, !dbg !5498
  store i24 %38, i24* %35, align 4, !dbg !5498
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5499
  call void @llvm.dbg.value(metadata i8* %39, metadata !5464, metadata !DIExpression()), !dbg !5465
  br label %56, !dbg !5500

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5501
  %42 = load i24, i24* %41, align 4, !dbg !5502
  %43 = and i24 %42, -30721, !dbg !5502
  %44 = or i24 %43, 14336, !dbg !5502
  store i24 %44, i24* %41, align 4, !dbg !5502
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5503
  call void @llvm.dbg.value(metadata i8* %45, metadata !5464, metadata !DIExpression()), !dbg !5465
  br label %56, !dbg !5504

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5505
  %48 = load i24, i24* %47, align 4, !dbg !5506
  %49 = and i24 %48, -30723, !dbg !5506
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5507
  call void @llvm.dbg.value(metadata i8* %50, metadata !5464, metadata !DIExpression()), !dbg !5465
  %51 = or i24 %49, 16386, !dbg !5508
  store i24 %51, i24* %47, align 4, !dbg !5508
  br label %56, !dbg !5509

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5510
  %54 = load i24, i24* %53, align 4, !dbg !5511
  %55 = and i24 %54, -30721, !dbg !5511
  store i24 %55, i24* %53, align 4, !dbg !5511
  br label %56, !dbg !5512

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5464, metadata !DIExpression()), !dbg !5465
  ret i8* %57, !dbg !5513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5514 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5516, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata i8* %1, metadata !5517, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata i8 0, metadata !5518, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata i8* %1, metadata !5517, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5521
  %3 = load i8, i8* %1, align 1, !dbg !5522
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5523
  store i8 %3, i8* %4, align 1, !dbg !5524
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5525

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5526

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5527
  %9 = load i24, i24* %8, align 4, !dbg !5527
  %10 = and i24 %9, -458753, !dbg !5527
  %11 = or i24 %10, %7, !dbg !5527
  call void @llvm.dbg.label(metadata !5519), !dbg !5528
  %12 = and i24 %9, 30720, !dbg !5529
  %13 = icmp eq i24 %12, 16384, !dbg !5529
  %14 = zext i1 %13 to i24, !dbg !5531
  %15 = or i24 %11, %14, !dbg !5531
  %16 = icmp eq i8 %3, 99, !dbg !5532
  br i1 %16, label %17, label %43, !dbg !5534

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5535
  %19 = icmp ne i24 %18, 0, !dbg !5535
  call void @llvm.dbg.value(metadata i1 %19, metadata !5518, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5521
  br label %43, !dbg !5537

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5538
  %22 = load i24, i24* %21, align 4, !dbg !5539
  %23 = and i24 %22, -458753, !dbg !5539
  %24 = or i24 %23, 262144, !dbg !5539
  call void @llvm.dbg.value(metadata i8 1, metadata !5518, metadata !DIExpression()), !dbg !5521
  br label %43, !dbg !5540

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5543
  %27 = load i24, i24* %26, align 4, !dbg !5544
  %28 = and i24 %27, -458753, !dbg !5544
  %29 = or i24 %28, 196608, !dbg !5544
  %30 = and i24 %27, 30720, !dbg !5545
  %31 = icmp eq i24 %30, 16384, !dbg !5545
  br label %43, !dbg !5547

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5548
  %34 = load i24, i24* %33, align 4, !dbg !5549
  %35 = and i24 %34, -458753, !dbg !5549
  %36 = or i24 %35, 196608, !dbg !5549
  %37 = and i24 %34, 30720, !dbg !5550
  %38 = icmp ne i24 %37, 0, !dbg !5550
  br label %43, !dbg !5552

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5553
  %41 = load i24, i24* %40, align 4, !dbg !5554
  %42 = or i24 %41, 1, !dbg !5554
  br label %43, !dbg !5555

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5556
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5557
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5558
  call void @llvm.dbg.value(metadata i8* %48, metadata !5517, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata i8 poison, metadata !5518, metadata !DIExpression()), !dbg !5521
  %49 = lshr i24 %44, 1, !dbg !5556
  %50 = and i24 %49, 1, !dbg !5556
  %51 = zext i24 %50 to i32, !dbg !5556
  %52 = or i32 %51, %47, !dbg !5556
  %53 = trunc i32 %52 to i24, !dbg !5556
  %54 = shl nuw nsw i24 %53, 1, !dbg !5556
  %55 = and i24 %44, -3, !dbg !5556
  %56 = or i24 %54, %55, !dbg !5556
  store i24 %56, i24* %46, align 4, !dbg !5556
  ret i8* %48, !dbg !5559
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5560 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5565, metadata !DIExpression()), !dbg !5568
  %2 = load i8*, i8** %0, align 4, !dbg !5569
  call void @llvm.dbg.value(metadata i8* %2, metadata !5566, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i32 0, metadata !5567, metadata !DIExpression()), !dbg !5568
  %3 = load i8, i8* %2, align 1, !dbg !5570
  %4 = zext i8 %3 to i32, !dbg !5571
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5572
  %6 = icmp eq i32 %5, 0, !dbg !5573
  br i1 %6, label %19, label %7, !dbg !5573

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5567, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i8* %10, metadata !5566, metadata !DIExpression()), !dbg !5568
  %11 = mul i32 %9, 10, !dbg !5574
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5576
  call void @llvm.dbg.value(metadata i8* %12, metadata !5566, metadata !DIExpression()), !dbg !5568
  %13 = add i32 %11, -48, !dbg !5577
  %14 = add i32 %13, %8, !dbg !5578
  call void @llvm.dbg.value(metadata i32 %14, metadata !5567, metadata !DIExpression()), !dbg !5568
  %15 = load i8, i8* %12, align 1, !dbg !5570
  %16 = zext i8 %15 to i32, !dbg !5571
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5572
  %18 = icmp eq i32 %17, 0, !dbg !5573
  br i1 %18, label %19, label %7, !dbg !5573, !llvm.loop !5579

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5568
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5568
  store i8* %20, i8** %0, align 4, !dbg !5581
  ret i32 %21, !dbg !5582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5585, metadata !DIExpression()), !dbg !5586
  %2 = add i32 %0, -48, !dbg !5587
  %3 = icmp ult i32 %2, 10, !dbg !5588
  %4 = zext i1 %3 to i32, !dbg !5588
  ret i32 %4, !dbg !5589
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5590 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5595, metadata !DIExpression()), !dbg !5597
  call void @llvm.dbg.value(metadata i32 %1, metadata !5596, metadata !DIExpression()), !dbg !5597
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !5598, !srcloc !5600
  ret void, !dbg !5601
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5602 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5604, metadata !DIExpression()), !dbg !5612
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5613
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5613
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5605, metadata !DIExpression()), !dbg !5614
  call void @llvm.va_start(i8* nonnull %3), !dbg !5615
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5616
  %5 = load i32, i32* %4, align 4, !dbg !5616
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5616
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !5616
  call void @llvm.va_end(i8* nonnull %3), !dbg !5617
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5618
  ret void, !dbg !5618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5619 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,256\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #25, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #25, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #25, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #25, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6063, !srcloc !6064
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6065, !srcloc !6066
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6067, !srcloc !6068
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6069, !srcloc !6070
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6071, !srcloc !6072
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6073, !srcloc !6074
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6075, !srcloc !6076
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6077, !srcloc !6078
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6081, !srcloc !6082
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6083, !srcloc !6084
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6085, !srcloc !6086
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6087, !srcloc !6088
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6089, !srcloc !6090
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6091, !srcloc !6092
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6093, !srcloc !6094
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6095, !srcloc !6096
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6097, !srcloc !6098
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6099, !srcloc !6100
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6101, !srcloc !6102
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6103, !srcloc !6104
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6105, !srcloc !6106
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6107, !srcloc !6108
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6109, !srcloc !6110
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6111, !srcloc !6112
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6113, !srcloc !6114
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6115, !srcloc !6116
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #25, !dbg !6117, !srcloc !6118
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #25, !dbg !6119, !srcloc !6120
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #25, !dbg !6121, !srcloc !6122
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6123, !srcloc !6124
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6125, !srcloc !6126
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6127, !srcloc !6128
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6129, !srcloc !6130
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6131, !srcloc !6132
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6133, !srcloc !6134
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6135, !srcloc !6136
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6137, !srcloc !6138
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6139, !srcloc !6140
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6141, !srcloc !6142
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6143, !srcloc !6144
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6145, !srcloc !6146
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6147, !srcloc !6148
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6149, !srcloc !6150
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6151, !srcloc !6152
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6153, !srcloc !6154
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6155, !srcloc !6156
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6157, !srcloc !6158
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6159, !srcloc !6160
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6161, !srcloc !6162
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6163, !srcloc !6164
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6165, !srcloc !6166
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6167, !srcloc !6168
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6169, !srcloc !6170
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6171, !srcloc !6172
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6173, !srcloc !6174
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6175, !srcloc !6176
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6177, !srcloc !6178
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6179, !srcloc !6180
  ret void, !dbg !6181
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6182 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6184, metadata !DIExpression()), !dbg !6186
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6187
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6188
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6189, !srcloc !6198
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %3, metadata !6195, metadata !DIExpression()) #25, !dbg !6199
  call void @llvm.dbg.value(metadata i32 undef, metadata !6196, metadata !DIExpression()) #25, !dbg !6199
  call void @llvm.dbg.value(metadata i32 %3, metadata !6185, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i32 %3, metadata !6200, metadata !DIExpression()) #25, !dbg !6205
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6207, !srcloc !6208
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6209
  ret i32 0, !dbg !6210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6211 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6213
  %2 = or i32 %1, 512, !dbg !6213
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6213
  ret void, !dbg !6214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6215 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6216
  %2 = or i32 %1, 1024, !dbg !6216
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6216
  ret void, !dbg !6217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6218 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6220, metadata !DIExpression()), !dbg !6221
  ret i32 0, !dbg !6222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6272, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6273, metadata !DIExpression()), !dbg !6274
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !6275
  ret void, !dbg !6276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6277 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6294, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6295, metadata !DIExpression()), !dbg !6297
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6298
  %4 = load i32, i32* %3, align 4, !dbg !6298
  call void @llvm.dbg.value(metadata i32 %4, metadata !6296, metadata !DIExpression()), !dbg !6297
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6299
  ret void, !dbg !6300
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !6301 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6305, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata i8* %0, metadata !6306, metadata !DIExpression()), !dbg !6308
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6309
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !6309
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6307, metadata !DIExpression()), !dbg !6310
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6310
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6311
  %5 = bitcast i8* %4 to i32*, !dbg !6311
  %6 = load i32, i32* %5, align 4, !dbg !6311
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6312
  store i32 %6, i32* %7, align 4, !dbg !6313
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6314
  unreachable, !dbg !6315
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6319, metadata !DIExpression()), !dbg !6320
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6321
  ret void, !dbg !6322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6327, metadata !DIExpression()), !dbg !6328
  %2 = icmp sgt i32 %0, -1, !dbg !6329
  br i1 %2, label %3, label %8, !dbg !6331

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6332, !srcloc !6334
  %4 = and i32 %0, 31, !dbg !6335
  %5 = shl nuw i32 1, %4, !dbg !6336
  %6 = lshr i32 %0, 5, !dbg !6337
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6338
  store volatile i32 %5, i32* %7, align 4, !dbg !6339
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6340, !srcloc !6341
  br label %8, !dbg !6342

8:                                                ; preds = %3, %1
  ret void, !dbg !6343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6346, metadata !DIExpression()), !dbg !6347
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6348
  ret void, !dbg !6349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6352, metadata !DIExpression()), !dbg !6353
  %2 = icmp sgt i32 %0, -1, !dbg !6354
  br i1 %2, label %3, label %8, !dbg !6356

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6357
  %5 = shl nuw i32 1, %4, !dbg !6359
  %6 = lshr i32 %0, 5, !dbg !6360
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6361
  store volatile i32 %5, i32* %7, align 4, !dbg !6362
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6363, !srcloc !6367
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6368, !srcloc !6371
  br label %8, !dbg !6372

8:                                                ; preds = %3, %1
  ret void, !dbg !6373
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6378, metadata !DIExpression()), !dbg !6379
  %2 = lshr i32 %0, 5, !dbg !6380
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6381
  %4 = load volatile i32, i32* %3, align 4, !dbg !6381
  %5 = and i32 %0, 31, !dbg !6382
  %6 = shl nuw i32 1, %5, !dbg !6382
  %7 = and i32 %4, %6, !dbg !6383
  ret i32 %7, !dbg !6384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6389, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i32 %1, metadata !6390, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i32 %2, metadata !6391, metadata !DIExpression()), !dbg !6392
  %4 = add i32 %1, 1, !dbg !6393
  call void @llvm.dbg.value(metadata i32 %4, metadata !6390, metadata !DIExpression()), !dbg !6392
  %5 = icmp ult i32 %4, 16, !dbg !6396
  br i1 %5, label %7, label %6, !dbg !6399

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 94) #27, !dbg !6400
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.41, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #27, !dbg !6400
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 94) #27, !dbg !6400
  unreachable, !dbg !6400

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6402
  ret void, !dbg !6403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6408, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.value(metadata i32 %1, metadata !6409, metadata !DIExpression()), !dbg !6410
  %3 = trunc i32 %1 to i8, !dbg !6411
  %4 = shl i8 %3, 4, !dbg !6411
  %5 = and i32 %0, 15, !dbg !6413
  %6 = add nsw i32 %5, -4, !dbg !6413
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6413
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6413
  %9 = icmp slt i32 %0, 0, !dbg !6413
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6413
  store volatile i8 %4, i8* %10, align 1, !dbg !6411
  ret void, !dbg !6414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6415 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6417, metadata !DIExpression()), !dbg !6418
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !6419
  ret void, !dbg !6420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6421 {
  tail call void @z_SysNmiOnReset() #27, !dbg !6423
  tail call void @z_arm_int_exit() #27, !dbg !6424
  ret void, !dbg !6425
}

; Function Attrs: optsize
declare !dbg !6426 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6427 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #5 !dbg !6429 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6431
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6432
  tail call void @z_bss_zero() #27, !dbg !6433
  tail call void @z_data_copy() #27, !dbg !6434
  tail call void @z_arm_interrupt_init() #27, !dbg !6435
  tail call void @z_cstart() #29, !dbg !6436
  unreachable, !dbg !6436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6437 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6438
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6439, !srcloc !6442
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6443, !srcloc !6446
  ret void, !dbg !6447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6448 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6449
  %2 = and i32 %1, -15728641, !dbg !6449
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6449
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6450, !srcloc !6457
  call void @llvm.dbg.value(metadata i32 %3, metadata !6455, metadata !DIExpression()) #25, !dbg !6458
  %4 = and i32 %3, -5, !dbg !6459
  call void @llvm.dbg.value(metadata i32 %4, metadata !6460, metadata !DIExpression()) #25, !dbg !6465
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6467, !srcloc !6468
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6469, !srcloc !6446
  ret void, !dbg !6471
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6475, metadata !DIExpression()), !dbg !6476
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6477
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6478
  store i32 %0, i32* %3, align 4, !dbg !6479
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6480
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6481
  store i32 %4, i32* %5, align 4, !dbg !6482
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6483
  %7 = or i32 %6, 268435456, !dbg !6483
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6483
  call void @llvm.dbg.value(metadata i32 0, metadata !6484, metadata !DIExpression()) #25, !dbg !6487
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6489, !srcloc !6490
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6491
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6492
  %10 = load i32, i32* %9, align 4, !dbg !6492
  ret i32 %10, !dbg !6493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !6494 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6606, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6607, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i8* %2, metadata !6608, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6609, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i8* %4, metadata !6610, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i8* %5, metadata !6611, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i8* %6, metadata !6612, metadata !DIExpression()), !dbg !6614
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6615
  call void @llvm.dbg.value(metadata i8* %8, metadata !6613, metadata !DIExpression()), !dbg !6614
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6616
  %10 = bitcast i8* %9 to i32*, !dbg !6616
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6617
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6618
  %12 = bitcast i8* %8 to i32*, !dbg !6619
  store i32 %11, i32* %12, align 4, !dbg !6620
  %13 = ptrtoint i8* %4 to i32, !dbg !6621
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6622
  %15 = bitcast i8* %14 to i32*, !dbg !6622
  store i32 %13, i32* %15, align 4, !dbg !6623
  %16 = ptrtoint i8* %5 to i32, !dbg !6624
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6625
  %18 = bitcast i8* %17 to i32*, !dbg !6625
  store i32 %16, i32* %18, align 4, !dbg !6626
  %19 = ptrtoint i8* %6 to i32, !dbg !6627
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6628
  %21 = bitcast i8* %20 to i32*, !dbg !6628
  store i32 %19, i32* %21, align 4, !dbg !6629
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6630
  %23 = bitcast i8* %22 to i32*, !dbg !6630
  store i32 16777216, i32* %23, align 4, !dbg !6631
  %24 = ptrtoint i8* %8 to i32, !dbg !6632
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6633
  store i32 %24, i32* %25, align 8, !dbg !6634
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6635
  store i32 0, i32* %26, align 4, !dbg !6636
  ret void, !dbg !6637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #7 !dbg !6638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6643, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.value(metadata i32 %1, metadata !6644, metadata !DIExpression()), !dbg !6649
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6650
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6645, metadata !DIExpression()), !dbg !6649
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6651
  br i1 %4, label %19, label %5, !dbg !6653

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6648, metadata !DIExpression()), !dbg !6649
  %6 = icmp eq i32 %0, -22, !dbg !6654
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6654
  %8 = load i32, i32* %7, align 4, !dbg !6654
  br i1 %6, label %16, label %9, !dbg !6656

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6654
  %11 = icmp ule i32 %10, %0, !dbg !6654
  %12 = icmp ugt i32 %8, %0, !dbg !6654
  %13 = and i1 %12, %11, !dbg !6654
  %14 = icmp ugt i32 %8, %1, !dbg !6654
  %15 = and i1 %14, %13, !dbg !6654
  br i1 %15, label %18, label %19, !dbg !6654

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6654
  br i1 %17, label %18, label %19, !dbg !6656

18:                                               ; preds = %9, %16
  br label %19, !dbg !6657

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6649
  ret i32 %20, !dbg !6659
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #5 !dbg !6660 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6664, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i8* %1, metadata !6665, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6666, metadata !DIExpression()), !dbg !6667
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6668
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !6669
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6670, !srcloc !6671
  unreachable, !dbg !6672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6673 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6691, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata i32 %1, metadata !6692, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata i32 %2, metadata !6693, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6694, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata i32 0, metadata !6695, metadata !DIExpression()), !dbg !6701
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6702
  call void @llvm.dbg.value(metadata i32 %8, metadata !6696, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6701
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6703
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6703
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6704
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !6704
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6700, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i32 0, metadata !6706, metadata !DIExpression()) #25, !dbg !6709
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6711, !srcloc !6712
  call void @llvm.dbg.value(metadata i8* %6, metadata !6698, metadata !DIExpression(DW_OP_deref)), !dbg !6701
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6713
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6699, metadata !DIExpression()), !dbg !6701
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6714
  br i1 %11, label %12, label %13, !dbg !6717

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 1057) #27, !dbg !6718
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.47, i32 0, i32 0)) #27, !dbg !6718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 1057) #27, !dbg !6718
  unreachable, !dbg !6718

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6720
  call void @llvm.dbg.value(metadata i32 %14, metadata !6696, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata i8* %5, metadata !6697, metadata !DIExpression(DW_OP_deref)), !dbg !6701
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #26, !dbg !6721
  call void @llvm.dbg.value(metadata i32 %15, metadata !6695, metadata !DIExpression()), !dbg !6701
  %16 = load i8, i8* %5, align 1, !dbg !6722, !range !6724
  call void @llvm.dbg.value(metadata i8 %16, metadata !6697, metadata !DIExpression()), !dbg !6701
  %17 = icmp eq i8 %16, 0, !dbg !6722
  br i1 %17, label %18, label %35, !dbg !6725

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6726
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #27, !dbg !6727
  %21 = load i8, i8* %6, align 1, !dbg !6728, !range !6724
  call void @llvm.dbg.value(metadata i8 %21, metadata !6698, metadata !DIExpression()), !dbg !6701
  %22 = icmp eq i8 %21, 0, !dbg !6728
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6730
  %24 = load i32, i32* %23, align 4, !dbg !6730
  br i1 %22, label %30, label %25, !dbg !6731

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6732
  %27 = icmp eq i32 %26, 0, !dbg !6735
  br i1 %27, label %28, label %34, !dbg !6736

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6737
  br label %32, !dbg !6739

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6740
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6730
  br label %34, !dbg !6742

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #27, !dbg !6742
  br label %35, !dbg !6743

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !6743
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6743
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6743
  ret void, !dbg !6743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #6 !dbg !6744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6749, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %1, metadata !6750, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %2, metadata !6751, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8* %3, metadata !6752, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8 0, metadata !6753, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6754, metadata !DIExpression()), !dbg !6755
  store i8 0, i8* %3, align 1, !dbg !6756
  %5 = icmp ult i32 %2, -16777216, !dbg !6757
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6759
  br i1 %8, label %16, label %9, !dbg !6759

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6760
  %11 = icmp eq i32 %10, 0, !dbg !6760
  br i1 %11, label %12, label %13, !dbg !6762

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6754, metadata !DIExpression()), !dbg !6755
  store i8 1, i8* %3, align 1, !dbg !6765
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6755
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6754, metadata !DIExpression()), !dbg !6755
  br label %16, !dbg !6768

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6755
  ret %struct.__esf* %17, !dbg !6769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6770 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6774, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %1, metadata !6775, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8* %2, metadata !6776, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 0, metadata !6777, metadata !DIExpression()), !dbg !6778
  store i8 0, i8* %2, align 1, !dbg !6779
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6780

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6781
  call void @llvm.dbg.value(metadata i32 %5, metadata !6777, metadata !DIExpression()), !dbg !6778
  br label %11, !dbg !6783

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6784
  call void @llvm.dbg.value(metadata i32 %7, metadata !6777, metadata !DIExpression()), !dbg !6778
  br label %11, !dbg !6785

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6786
  call void @llvm.dbg.value(metadata i32 0, metadata !6777, metadata !DIExpression()), !dbg !6778
  br label %11, !dbg !6787

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6788
  call void @llvm.dbg.value(metadata i32 0, metadata !6777, metadata !DIExpression()), !dbg !6778
  br label %11, !dbg !6789

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6790
  br label %11, !dbg !6791

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6793 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6797, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i8* %1, metadata !6798, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i32 0, metadata !6799, metadata !DIExpression()), !dbg !6800
  store i8 0, i8* %1, align 1, !dbg !6801
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6802
  %4 = and i32 %3, 2, !dbg !6804
  %5 = icmp eq i32 %4, 0, !dbg !6805
  br i1 %5, label %6, label %35, !dbg !6806

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6807
  %8 = icmp sgt i32 %7, -1, !dbg !6809
  br i1 %8, label %9, label %35, !dbg !6810

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6811
  %11 = and i32 %10, 1073741824, !dbg !6813
  %12 = icmp eq i32 %11, 0, !dbg !6814
  br i1 %12, label %34, label %13, !dbg !6815

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6816
  br i1 %14, label %15, label %18, !dbg !6819

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6820
  %17 = load i32, i32* %16, align 4, !dbg !6820
  call void @llvm.dbg.value(metadata i32 %17, metadata !6799, metadata !DIExpression()), !dbg !6800
  br label %35, !dbg !6822

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6823
  %20 = and i32 %19, 255, !dbg !6825
  %21 = icmp eq i32 %20, 0, !dbg !6826
  br i1 %21, label %24, label %22, !dbg !6827

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6828
  call void @llvm.dbg.value(metadata i32 %23, metadata !6799, metadata !DIExpression()), !dbg !6800
  br label %35, !dbg !6830

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6831
  %26 = and i32 %25, 65280, !dbg !6833
  %27 = icmp eq i32 %26, 0, !dbg !6834
  br i1 %27, label %29, label %28, !dbg !6835

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6836
  call void @llvm.dbg.value(metadata i32 0, metadata !6799, metadata !DIExpression()), !dbg !6800
  br label %35, !dbg !6838

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6839
  %31 = icmp ult i32 %30, 65536, !dbg !6841
  br i1 %31, label %33, label %32, !dbg !6842

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6843
  call void @llvm.dbg.value(metadata i32 0, metadata !6799, metadata !DIExpression()), !dbg !6800
  br label %35

33:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.50, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 755) #27, !dbg !6845
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.51, i32 0, i32 0)) #27, !dbg !6845
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 755) #27, !dbg !6845
  unreachable, !dbg !6845

34:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.50, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 760) #27, !dbg !6850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.52, i32 0, i32 0)) #27, !dbg !6850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 760) #27, !dbg !6850
  unreachable, !dbg !6850

35:                                               ; preds = %6, %15, %28, %32, %22, %2
  %36 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], !dbg !6800
  call void @llvm.dbg.value(metadata i32 %36, metadata !6799, metadata !DIExpression()), !dbg !6800
  ret i32 %36, !dbg !6855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6856 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6858, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.value(metadata i32 %1, metadata !6859, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.value(metadata i8* %2, metadata !6860, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.value(metadata i32 0, metadata !6861, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.value(metadata i32 -22, metadata !6862, metadata !DIExpression()), !dbg !6871
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6872
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6874
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6876
  %7 = and i32 %6, 2, !dbg !6877
  %8 = icmp eq i32 %7, 0, !dbg !6878
  br i1 %8, label %19, label %9, !dbg !6879

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6880
  call void @llvm.dbg.value(metadata i32 %10, metadata !6863, metadata !DIExpression()), !dbg !6881
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6882
  %12 = and i32 %11, 128, !dbg !6884
  %13 = icmp eq i32 %12, 0, !dbg !6885
  br i1 %13, label %19, label %14, !dbg !6886

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6862, metadata !DIExpression()), !dbg !6871
  %15 = icmp eq i32 %1, 0, !dbg !6887
  br i1 %15, label %19, label %16, !dbg !6890

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6891
  %18 = and i32 %17, -129, !dbg !6891
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6891
  br label %19, !dbg !6893

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6871
  call void @llvm.dbg.value(metadata i32 %20, metadata !6862, metadata !DIExpression()), !dbg !6871
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6894
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6896
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6898
  %24 = and i32 %23, 16, !dbg !6899
  %25 = icmp eq i32 %24, 0, !dbg !6899
  br i1 %25, label %26, label %30, !dbg !6900

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6901
  %28 = and i32 %27, 2, !dbg !6902
  %29 = icmp eq i32 %28, 0, !dbg !6902
  br i1 %29, label %44, label %30, !dbg !6903

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6904
  %32 = and i32 %31, 2048, !dbg !6905
  %33 = icmp eq i32 %32, 0, !dbg !6905
  br i1 %33, label %44, label %34, !dbg !6906

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6907
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #27, !dbg !6908
  call void @llvm.dbg.value(metadata i32 %36, metadata !6866, metadata !DIExpression()), !dbg !6909
  %37 = icmp eq i32 %36, 0, !dbg !6910
  br i1 %37, label %39, label %38, !dbg !6912

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6913, metadata !DIExpression()) #25, !dbg !6916
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6919, !srcloc !6920
  call void @llvm.dbg.value(metadata i32 2, metadata !6861, metadata !DIExpression()), !dbg !6871
  br label %44, !dbg !6921

39:                                               ; preds = %34
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6922
  %41 = and i32 %40, 16, !dbg !6922
  %42 = icmp eq i32 %41, 0, !dbg !6922
  br i1 %42, label %44, label %43, !dbg !6926

43:                                               ; preds = %39
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7.48, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 343) #27, !dbg !6927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.49, i32 0, i32 0)) #27, !dbg !6927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 343) #27, !dbg !6927
  unreachable, !dbg !6927

44:                                               ; preds = %38, %39, %30, %26
  %45 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %39 ], !dbg !6871
  call void @llvm.dbg.value(metadata i32 %45, metadata !6861, metadata !DIExpression()), !dbg !6871
  %46 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6929
  %47 = and i32 %46, 32, !dbg !6931
  %48 = icmp eq i32 %47, 0, !dbg !6932
  br i1 %48, label %52, label %49, !dbg !6933

49:                                               ; preds = %44
  %50 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6934
  %51 = and i32 %50, -8193, !dbg !6934
  store volatile i32 %51, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6934
  br label %52, !dbg !6936

52:                                               ; preds = %49, %44
  %53 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6937
  %54 = or i32 %53, 255, !dbg !6937
  store volatile i32 %54, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6937
  store i8 0, i8* %2, align 1, !dbg !6938
  ret i32 %45, !dbg !6939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6940 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6944, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.value(metadata i32 %0, metadata !6945, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.value(metadata i8* %1, metadata !6946, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.value(metadata i32 0, metadata !6947, metadata !DIExpression()), !dbg !6951
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6952
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6954
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6956
  %6 = and i32 %5, 512, !dbg !6957
  %7 = icmp eq i32 %6, 0, !dbg !6957
  br i1 %7, label %18, label %8, !dbg !6958

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6959
  call void @llvm.dbg.value(metadata i32 %9, metadata !6948, metadata !DIExpression()), !dbg !6960
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6961
  %11 = and i32 %10, 32768, !dbg !6963
  %12 = icmp ne i32 %11, 0, !dbg !6964
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6965
  br i1 %14, label %15, label %18, !dbg !6965

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6966
  %17 = and i32 %16, -32769, !dbg !6966
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6966
  br label %18, !dbg !6970

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6971
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6973
  %21 = and i32 %20, 256, !dbg !6975
  %22 = icmp eq i32 %21, 0, !dbg !6976
  br i1 %22, label %23, label %25, !dbg !6977

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6978
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6980
  %27 = or i32 %26, 65280, !dbg !6980
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6980
  store i8 0, i8* %1, align 1, !dbg !6981
  ret void, !dbg !6982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6983 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6989, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i32 0, metadata !6990, metadata !DIExpression()), !dbg !6991
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6992
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6994
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6996
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6998
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7000
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7002
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7004
  %8 = or i32 %7, -65536, !dbg !7004
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7004
  ret void, !dbg !7005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !7006 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7010, metadata !DIExpression()), !dbg !7012
  call void @llvm.dbg.value(metadata i8* %0, metadata !7011, metadata !DIExpression()), !dbg !7012
  store i8 0, i8* %0, align 1, !dbg !7013
  ret void, !dbg !7014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7015 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7019, metadata !DIExpression()), !dbg !7022
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7023
  %3 = load i32, i32* %2, align 4, !dbg !7023
  %4 = inttoptr i32 %3 to i16*, !dbg !7024
  call void @llvm.dbg.value(metadata i16* %4, metadata !7020, metadata !DIExpression()), !dbg !7022
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7025
  %6 = or i32 %5, 256, !dbg !7025
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7025
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7026, !srcloc !7029
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7030, !srcloc !7033
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7034
  %8 = load i16, i16* %7, align 2, !dbg !7035
  call void @llvm.dbg.value(metadata i16 %8, metadata !7021, metadata !DIExpression()), !dbg !7022
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7036
  %10 = and i32 %9, -257, !dbg !7036
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7036
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7037, !srcloc !7029
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7039, !srcloc !7033
  %11 = icmp eq i16 %8, -8446, !dbg !7041
  ret i1 %11, !dbg !7043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7044 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7045
  %2 = or i32 %1, 16, !dbg !7045
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7045
  ret void, !dbg !7046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7047 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7050, metadata !DIExpression()), !dbg !7051
  br label %1, !dbg !7052

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7050, metadata !DIExpression()), !dbg !7051
  tail call fastcc void @__NVIC_SetPriority.55(i32 noundef %2) #26, !dbg !7054
  %3 = add nuw nsw i32 %2, 1, !dbg !7057
  call void @llvm.dbg.value(metadata i32 %3, metadata !7050, metadata !DIExpression()), !dbg !7051
  %4 = icmp eq i32 %3, 85, !dbg !7058
  br i1 %4, label %5, label %1, !dbg !7052, !llvm.loop !7059

5:                                                ; preds = %1
  ret void, !dbg !7061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.55(i32 noundef %0) unnamed_addr #15 !dbg !7062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7064, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i32 1, metadata !7065, metadata !DIExpression()), !dbg !7066
  %2 = and i32 %0, 15, !dbg !7067
  %3 = add nsw i32 %2, -4, !dbg !7067
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7067
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7067
  %6 = icmp slt i32 %0, 0, !dbg !7067
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7067
  store volatile i8 16, i8* %7, align 1, !dbg !7068
  ret void, !dbg !7070
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7071 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7179, metadata !DIExpression()), !dbg !7180
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7181
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7183
  br i1 %3, label %4, label %12, !dbg !7184

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !7185, !srcloc !7197
  call void @llvm.dbg.value(metadata i32 %5, metadata !7188, metadata !DIExpression()) #25, !dbg !7198
  %6 = icmp eq i32 %5, 0, !dbg !7199
  br i1 %6, label %12, label %7, !dbg !7200

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7201
  %9 = or i32 %8, 268435456, !dbg !7201
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7201
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7203
  %11 = and i32 %10, -32769, !dbg !7203
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7203
  br label %12, !dbg !7204

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !7205
  ret void, !dbg !7206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7207 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !7208
  ret void, !dbg !7209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !629, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.value(metadata i8 0, metadata !630, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.value(metadata i32 64, metadata !632, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.value(metadata i32 undef, metadata !631, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7210
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7211
  %3 = load i32, i32* %2, align 4, !dbg !7211
  call void @llvm.dbg.value(metadata i32 %3, metadata !631, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7210
  %4 = add i32 %3, -64, !dbg !7213
  call void @llvm.dbg.value(metadata i32 %4, metadata !631, metadata !DIExpression()), !dbg !7210
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7214
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7215
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7216
  call void @llvm.dbg.value(metadata i8 1, metadata !630, metadata !DIExpression()), !dbg !7210
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !7217
  ret void, !dbg !7218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7219 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7220
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7221, !srcloc !7224
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7225, !srcloc !7228
  ret void, !dbg !7229
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7230 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !7231, !srcloc !7234
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7235
  ret void, !dbg !7236
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7237 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7252, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i8 %1, metadata !7253, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i32 %2, metadata !7254, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i32 %3, metadata !7255, metadata !DIExpression()), !dbg !7256
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7257
  %6 = icmp eq i32 %5, -22, !dbg !7259
  br i1 %6, label %7, label %9, !dbg !7260

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 283) #27, !dbg !7261
  %8 = zext i8 %1 to i32, !dbg !7261
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.65, i32 0, i32 0), i32 noundef %8) #27, !dbg !7261
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 283) #27, !dbg !7261
  unreachable, !dbg !7261

9:                                                ; preds = %4
  ret void, !dbg !7266
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7267 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7272, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i8 %1, metadata !7273, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i32 undef, metadata !7274, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i32 undef, metadata !7275, metadata !DIExpression()), !dbg !7277
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7278
  call void @llvm.dbg.value(metadata i8 %3, metadata !7276, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7277
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7279
  call void @llvm.dbg.value(metadata i32 %4, metadata !7276, metadata !DIExpression()), !dbg !7277
  %5 = trunc i32 %4 to i8, !dbg !7280
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7281
  ret i32 %4, !dbg !7282
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7283 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7287, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i8 %1, metadata !7288, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i8 %2, metadata !7289, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i1 %3, metadata !7290, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7293
  %5 = zext i8 %2 to i32, !dbg !7294
  call void @llvm.dbg.value(metadata i32 %5, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 0, metadata !7291, metadata !DIExpression()), !dbg !7293
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 0, metadata !7291, metadata !DIExpression()), !dbg !7293
  %7 = icmp eq i8 %1, 0, !dbg !7295
  br i1 %7, label %29, label %8, !dbg !7298

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 %10, metadata !7291, metadata !DIExpression()), !dbg !7293
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7299
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7302
  %13 = load i32, i32* %12, align 4, !dbg !7302
  %14 = icmp eq i32 %13, 0, !dbg !7303
  br i1 %14, label %25, label %15, !dbg !7304

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7305

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7307
  %18 = icmp eq i32 %17, 0, !dbg !7307
  br i1 %18, label %29, label %19, !dbg !7308

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7309
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7310
  call void @llvm.dbg.value(metadata i32 %21, metadata !7292, metadata !DIExpression()), !dbg !7293
  %22 = icmp eq i32 %21, -22, !dbg !7311
  br i1 %22, label %29, label %23, !dbg !7313

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7314
  call void @llvm.dbg.value(metadata i32 %24, metadata !7292, metadata !DIExpression()), !dbg !7293
  br label %25, !dbg !7315

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7293
  call void @llvm.dbg.value(metadata i32 %26, metadata !7292, metadata !DIExpression()), !dbg !7293
  %27 = add nuw nsw i32 %10, 1, !dbg !7316
  call void @llvm.dbg.value(metadata i32 %27, metadata !7291, metadata !DIExpression()), !dbg !7293
  %28 = icmp eq i32 %27, %6, !dbg !7295
  br i1 %28, label %29, label %8, !dbg !7298, !llvm.loop !7317

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7293
  ret i32 %30, !dbg !7319
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7320 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7324, metadata !DIExpression()), !dbg !7326
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7327
  %3 = load i32, i32* %2, align 4, !dbg !7327
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7328, !range !4206
  %5 = icmp ult i32 %4, 2, !dbg !7328
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7329
  br i1 %7, label %8, label %15, !dbg !7329

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7330
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7331
  %11 = load i32, i32* %10, align 4, !dbg !7331
  %12 = and i32 %11, %9, !dbg !7332
  %13 = icmp eq i32 %12, 0, !dbg !7333
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7325, metadata !DIExpression()), !dbg !7326
  ret i32 %16, !dbg !7334
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7335 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7339, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7340, metadata !DIExpression()), !dbg !7342
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7343
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7343
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7341, metadata !DIExpression()), !dbg !7344
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7345
  %6 = load i32, i32* %5, align 4, !dbg !7345
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7346
  store i32 %6, i32* %7, align 4, !dbg !7347
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7348
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7349
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7350
  %11 = load i32, i32* %10, align 4, !dbg !7350
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct._sfnode* noundef nonnull %8, %struct._sfnode* noundef nonnull %9, i32 noundef %11) #26, !dbg !7351
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7352
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7353
  ret i32 %12, !dbg !7354
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct._sfnode* nocapture noundef writeonly %0, %struct._sfnode* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #11 !dbg !7355 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !7363, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 undef, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %2, metadata !7365, metadata !DIExpression()), !dbg !7366
  %4 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %1, i32 0, i32 0, !dbg !7367
  %5 = load i32, i32* %4, align 4, !dbg !7367
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7368
  %7 = or i32 %6, %5, !dbg !7369
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !7370
  store i32 %7, i32* %8, align 4, !dbg !7371
  ret void, !dbg !7372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7373 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7377, metadata !DIExpression()), !dbg !7379
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7378, metadata !DIExpression()), !dbg !7379
  %3 = zext i8 %0 to i32, !dbg !7380
  %4 = icmp ugt i8 %0, 7, !dbg !7382
  br i1 %4, label %6, label %5, !dbg !7383

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7384
  br label %6, !dbg !7385

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7379
  ret i32 %7, !dbg !7386
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7391, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7392, metadata !DIExpression()), !dbg !7393
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7394
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7395
  %4 = load i32, i32* %3, align 4, !dbg !7395
  %5 = and i32 %4, -32, !dbg !7396
  %6 = or i32 %5, %0, !dbg !7397
  %7 = or i32 %6, 16, !dbg !7397
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7398
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7399
  %9 = load i32, i32* %8, align 4, !dbg !7399
  %10 = or i32 %9, 1, !dbg !7400
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7401
  ret void, !dbg !7402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7406, metadata !DIExpression()), !dbg !7407
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7408
  ret void, !dbg !7409
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #10 !dbg !7410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7414, metadata !DIExpression()), !dbg !7415
  %2 = icmp ult i32 %0, 33, !dbg !7416
  br i1 %2, label %11, label %3, !dbg !7418

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7419
  br i1 %4, label %11, label %5, !dbg !7421

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7422
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7423, !range !4206
  %8 = mul nsw i32 %7, -2, !dbg !7424
  %9 = add nsw i32 %8, 62, !dbg !7424
  %10 = and i32 %9, 62, !dbg !7425
  br label %11, !dbg !7426

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7415
  ret i32 %12, !dbg !7427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7428 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7432, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.value(metadata i8 %1, metadata !7433, metadata !DIExpression()), !dbg !7434
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7435
  %4 = icmp eq i32 %3, -22, !dbg !7437
  br i1 %4, label %5, label %7, !dbg !7438

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 314) #27, !dbg !7439
  %6 = zext i8 %1 to i32, !dbg !7439
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %6) #27, !dbg !7439
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 314) #27, !dbg !7439
  unreachable, !dbg !7439

7:                                                ; preds = %2
  ret void, !dbg !7444
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7445 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7449, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8 %1, metadata !7450, metadata !DIExpression()), !dbg !7456
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7457
  call void @llvm.dbg.value(metadata i8 %3, metadata !7451, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7456
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7458
  call void @llvm.dbg.value(metadata i32 %4, metadata !7451, metadata !DIExpression()), !dbg !7456
  %5 = icmp ne i32 %4, -22, !dbg !7459
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7460
  call void @llvm.dbg.value(metadata i32 %4, metadata !7452, metadata !DIExpression()), !dbg !7461
  br i1 %7, label %8, label %12, !dbg !7460

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7452, metadata !DIExpression()), !dbg !7461
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7462
  %10 = add i32 %9, 1, !dbg !7465
  call void @llvm.dbg.value(metadata i32 %10, metadata !7452, metadata !DIExpression()), !dbg !7461
  %11 = icmp eq i32 %10, 8, !dbg !7466
  br i1 %11, label %12, label %8, !dbg !7467, !llvm.loop !7468

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7470
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7474, metadata !DIExpression()), !dbg !7475
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7476
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7477
  ret void, !dbg !7478
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7479 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7484
  %2 = icmp ugt i32 %1, 8, !dbg !7486
  br i1 %2, label %3, label %4, !dbg !7487

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 341) #27, !dbg !7488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.69, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #27, !dbg !7488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 341) #27, !dbg !7488
  unreachable, !dbg !7488

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7493
  call void @llvm.dbg.value(metadata i32 0, metadata !7483, metadata !DIExpression()), !dbg !7494
  %5 = icmp eq i32 %1, 0, !dbg !7495
  br i1 %5, label %13, label %6, !dbg !7498

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7498

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7483, metadata !DIExpression()), !dbg !7494
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7499
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #26, !dbg !7501
  %11 = add nuw i32 %9, 1, !dbg !7502
  call void @llvm.dbg.value(metadata i32 %11, metadata !7483, metadata !DIExpression()), !dbg !7494
  %12 = icmp eq i32 %11, %1, !dbg !7495
  br i1 %12, label %13, label %8, !dbg !7498, !llvm.loop !7503

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7505
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7506
  tail call void @arm_core_mpu_enable() #26, !dbg !7507
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7508
  %16 = and i32 %15, 65280, !dbg !7508
  %17 = icmp eq i32 %16, 2048, !dbg !7508
  br i1 %17, label %19, label %18, !dbg !7511

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 435) #27, !dbg !7512
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.71, i32 0, i32 0)) #27, !dbg !7512
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 435) #27, !dbg !7512
  unreachable, !dbg !7512

19:                                               ; preds = %13
  ret i32 0, !dbg !7514
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7515 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7522, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata i8* %1, metadata !7523, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata i8* %0, metadata !7524, metadata !DIExpression()), !dbg !7525
  %3 = load i8, i8* %1, align 1, !dbg !7526
  %4 = icmp eq i8 %3, 0, !dbg !7527
  br i1 %4, label %13, label %5, !dbg !7528

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7522, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata i8* %8, metadata !7523, metadata !DIExpression()), !dbg !7525
  store i8 %6, i8* %7, align 1, !dbg !7529
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7531
  call void @llvm.dbg.value(metadata i8* %9, metadata !7522, metadata !DIExpression()), !dbg !7525
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7532
  call void @llvm.dbg.value(metadata i8* %10, metadata !7523, metadata !DIExpression()), !dbg !7525
  %11 = load i8, i8* %10, align 1, !dbg !7526
  %12 = icmp eq i8 %11, 0, !dbg !7527
  br i1 %12, label %13, label %5, !dbg !7528, !llvm.loop !7533

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7535
  ret i8* %0, !dbg !7536
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7537 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7541, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i8* %1, metadata !7542, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i32 %2, metadata !7543, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i8* %0, metadata !7544, metadata !DIExpression()), !dbg !7545
  %4 = icmp eq i32 %2, 0, !dbg !7546
  br i1 %4, label %22, label %5, !dbg !7547

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7541, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i32 %7, metadata !7543, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i8* %8, metadata !7542, metadata !DIExpression()), !dbg !7545
  %9 = load i8, i8* %8, align 1, !dbg !7548
  %10 = icmp eq i8 %9, 0, !dbg !7549
  br i1 %10, label %16, label %11, !dbg !7550

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7551
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7553
  call void @llvm.dbg.value(metadata i8* %12, metadata !7542, metadata !DIExpression()), !dbg !7545
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7554
  call void @llvm.dbg.value(metadata i8* %13, metadata !7541, metadata !DIExpression()), !dbg !7545
  %14 = add i32 %7, -1, !dbg !7555
  call void @llvm.dbg.value(metadata i32 %14, metadata !7543, metadata !DIExpression()), !dbg !7545
  %15 = icmp eq i32 %14, 0, !dbg !7546
  br i1 %15, label %22, label %5, !dbg !7547, !llvm.loop !7556

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7541, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i32 %18, metadata !7543, metadata !DIExpression()), !dbg !7545
  store i8 0, i8* %17, align 1, !dbg !7558
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7560
  call void @llvm.dbg.value(metadata i8* %19, metadata !7541, metadata !DIExpression()), !dbg !7545
  %20 = add i32 %18, -1, !dbg !7561
  call void @llvm.dbg.value(metadata i32 %20, metadata !7543, metadata !DIExpression()), !dbg !7545
  %21 = icmp eq i32 %20, 0, !dbg !7562
  br i1 %21, label %22, label %16, !dbg !7563, !llvm.loop !7564

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7566
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7567 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7571, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.value(metadata i32 %1, metadata !7572, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.value(metadata i32 %1, metadata !7573, metadata !DIExpression()), !dbg !7574
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7575

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7571, metadata !DIExpression()), !dbg !7574
  %6 = load i8, i8* %5, align 1, !dbg !7576
  %7 = icmp eq i8 %6, %3, !dbg !7577
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7578
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7579
  call void @llvm.dbg.value(metadata i8* %10, metadata !7571, metadata !DIExpression()), !dbg !7574
  br i1 %9, label %11, label %4, !dbg !7578, !llvm.loop !7581

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7583
  ret i8* %12, !dbg !7584
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7585 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7587, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i32 %1, metadata !7588, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* null, metadata !7589, metadata !DIExpression()), !dbg !7590
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7591

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7590
  call void @llvm.dbg.value(metadata i8* %6, metadata !7589, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %5, metadata !7587, metadata !DIExpression()), !dbg !7590
  %7 = load i8, i8* %5, align 1, !dbg !7592
  %8 = icmp eq i8 %7, %3, !dbg !7595
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7596
  call void @llvm.dbg.value(metadata i8* %9, metadata !7589, metadata !DIExpression()), !dbg !7590
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7597
  call void @llvm.dbg.value(metadata i8* %10, metadata !7587, metadata !DIExpression()), !dbg !7590
  %11 = icmp eq i8 %7, 0, !dbg !7598
  br i1 %11, label %12, label %4, !dbg !7598, !llvm.loop !7599

12:                                               ; preds = %4
  ret i8* %9, !dbg !7601
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7602 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7606, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 0, metadata !7607, metadata !DIExpression()), !dbg !7608
  %2 = load i8, i8* %0, align 1, !dbg !7609
  %3 = icmp eq i8 %2, 0, !dbg !7610
  br i1 %3, label %11, label %4, !dbg !7611

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7607, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %6, metadata !7606, metadata !DIExpression()), !dbg !7608
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7612
  call void @llvm.dbg.value(metadata i8* %7, metadata !7606, metadata !DIExpression()), !dbg !7608
  %8 = add i32 %5, 1, !dbg !7614
  call void @llvm.dbg.value(metadata i32 %8, metadata !7607, metadata !DIExpression()), !dbg !7608
  %9 = load i8, i8* %7, align 1, !dbg !7609
  %10 = icmp eq i8 %9, 0, !dbg !7610
  br i1 %10, label %11, label %4, !dbg !7611, !llvm.loop !7615

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7608
  ret i32 %12, !dbg !7617
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7618 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7622, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i32 %1, metadata !7623, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i32 0, metadata !7624, metadata !DIExpression()), !dbg !7625
  %3 = load i8, i8* %0, align 1, !dbg !7626
  %4 = icmp ne i8 %3, 0, !dbg !7627
  %5 = icmp ne i32 %1, 0, !dbg !7628
  %6 = and i1 %4, %5, !dbg !7628
  br i1 %6, label %7, label %16, !dbg !7629

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7624, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i8* %9, metadata !7622, metadata !DIExpression()), !dbg !7625
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7630
  call void @llvm.dbg.value(metadata i8* %10, metadata !7622, metadata !DIExpression()), !dbg !7625
  %11 = add nuw i32 %8, 1, !dbg !7632
  call void @llvm.dbg.value(metadata i32 %11, metadata !7624, metadata !DIExpression()), !dbg !7625
  %12 = load i8, i8* %10, align 1, !dbg !7626
  %13 = icmp ne i8 %12, 0, !dbg !7627
  %14 = icmp ult i32 %11, %1, !dbg !7628
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7628
  br i1 %15, label %7, label %16, !dbg !7629, !llvm.loop !7633

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7625
  ret i32 %17, !dbg !7635
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7636 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7640, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.value(metadata i8* %1, metadata !7641, metadata !DIExpression()), !dbg !7642
  %3 = load i8, i8* %0, align 1, !dbg !7643
  %4 = load i8, i8* %1, align 1, !dbg !7644
  %5 = icmp ne i8 %3, %4, !dbg !7645
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7646
  br i1 %7, label %18, label %8, !dbg !7646

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7641, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.value(metadata i8* %10, metadata !7640, metadata !DIExpression()), !dbg !7642
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7647
  call void @llvm.dbg.value(metadata i8* %11, metadata !7640, metadata !DIExpression()), !dbg !7642
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7649
  call void @llvm.dbg.value(metadata i8* %12, metadata !7641, metadata !DIExpression()), !dbg !7642
  %13 = load i8, i8* %11, align 1, !dbg !7643
  %14 = load i8, i8* %12, align 1, !dbg !7644
  %15 = icmp ne i8 %13, %14, !dbg !7645
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7646
  br i1 %17, label %18, label %8, !dbg !7646, !llvm.loop !7650

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7643
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7644
  %21 = zext i8 %19 to i32, !dbg !7653
  %22 = zext i8 %20 to i32, !dbg !7654
  %23 = sub nsw i32 %21, %22, !dbg !7655
  ret i32 %23, !dbg !7656
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7657 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7661, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.value(metadata i8* %1, metadata !7662, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.value(metadata i32 %2, metadata !7663, metadata !DIExpression()), !dbg !7664
  %4 = icmp eq i32 %2, 0, !dbg !7665
  br i1 %4, label %23, label %5, !dbg !7665

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7663, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.value(metadata i8* %7, metadata !7662, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.value(metadata i8* %8, metadata !7661, metadata !DIExpression()), !dbg !7664
  %9 = load i8, i8* %8, align 1, !dbg !7666
  %10 = load i8, i8* %7, align 1, !dbg !7667
  %11 = icmp ne i8 %9, %10, !dbg !7668
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7669
  br i1 %13, label %19, label %14, !dbg !7669

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7670
  call void @llvm.dbg.value(metadata i8* %15, metadata !7661, metadata !DIExpression()), !dbg !7664
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7672
  call void @llvm.dbg.value(metadata i8* %16, metadata !7662, metadata !DIExpression()), !dbg !7664
  %17 = add i32 %6, -1, !dbg !7673
  call void @llvm.dbg.value(metadata i32 %17, metadata !7663, metadata !DIExpression()), !dbg !7664
  %18 = icmp eq i32 %17, 0, !dbg !7665
  br i1 %18, label %23, label %5, !dbg !7665, !llvm.loop !7674

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7677
  %21 = zext i8 %10 to i32, !dbg !7678
  %22 = sub nsw i32 %20, %21, !dbg !7679
  br label %23, !dbg !7680

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7680
  ret i32 %24, !dbg !7681
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7682 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7687, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i8* %1, metadata !7688, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i8** %2, metadata !7689, metadata !DIExpression()), !dbg !7692
  %4 = icmp eq i8* %0, null, !dbg !7693
  br i1 %4, label %5, label %7, !dbg !7693

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7694
  br label %7, !dbg !7693

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7693
  call void @llvm.dbg.value(metadata i8* %8, metadata !7690, metadata !DIExpression()), !dbg !7692
  %9 = load i8, i8* %8, align 1, !dbg !7695
  %10 = icmp eq i8 %9, 0, !dbg !7695
  br i1 %10, label %33, label %11, !dbg !7696

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7690, metadata !DIExpression()), !dbg !7692
  %14 = zext i8 %12 to i32, !dbg !7695
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7697
  %16 = icmp eq i8* %15, null, !dbg !7696
  br i1 %16, label %21, label %17, !dbg !7698

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7699
  call void @llvm.dbg.value(metadata i8* %18, metadata !7690, metadata !DIExpression()), !dbg !7692
  %19 = load i8, i8* %18, align 1, !dbg !7695
  %20 = icmp eq i8 %19, 0, !dbg !7695
  br i1 %20, label %33, label %11, !dbg !7696, !llvm.loop !7701

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7691, metadata !DIExpression()), !dbg !7692
  %24 = zext i8 %22 to i32, !dbg !7703
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7704
  %26 = icmp eq i8* %25, null, !dbg !7705
  br i1 %26, label %27, label %31, !dbg !7706

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7707
  call void @llvm.dbg.value(metadata i8* %28, metadata !7691, metadata !DIExpression()), !dbg !7692
  %29 = load i8, i8* %28, align 1, !dbg !7703
  %30 = icmp eq i8 %29, 0, !dbg !7703
  br i1 %30, label %33, label %21, !dbg !7709, !llvm.loop !7710

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7712
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7715
  br label %33, !dbg !7716

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7692
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7692
  store i8* %34, i8** %2, align 4, !dbg !7692
  ret i8* %35, !dbg !7717
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7718 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %1, metadata !7721, metadata !DIExpression()), !dbg !7722
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7723
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7724
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7725
  ret i8* %0, !dbg !7726
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7727 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7729, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %1, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %2, metadata !7731, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %0, metadata !7732, metadata !DIExpression()), !dbg !7734
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %4, metadata !7733, metadata !DIExpression()), !dbg !7734
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7736
  call void @llvm.dbg.value(metadata i8* %5, metadata !7729, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %1, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %2, metadata !7731, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %2, metadata !7731, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7734
  %6 = icmp eq i32 %2, 0, !dbg !7737
  br i1 %6, label %18, label %7, !dbg !7738

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7739
  call void @llvm.dbg.value(metadata i8* %9, metadata !7729, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %10, metadata !7730, metadata !DIExpression()), !dbg !7734
  %12 = load i8, i8* %10, align 1, !dbg !7740
  %13 = icmp eq i8 %12, 0, !dbg !7741
  br i1 %13, label %18, label %14, !dbg !7742

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7743
  call void @llvm.dbg.value(metadata i8* %15, metadata !7730, metadata !DIExpression()), !dbg !7734
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7745
  call void @llvm.dbg.value(metadata i8* %16, metadata !7729, metadata !DIExpression()), !dbg !7734
  store i8 %12, i8* %9, align 1, !dbg !7746
  call void @llvm.dbg.value(metadata i32 %11, metadata !7731, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %11, metadata !7731, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7734
  %17 = icmp eq i32 %11, 0, !dbg !7737
  br i1 %17, label %18, label %7, !dbg !7738, !llvm.loop !7747

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7734
  store i8 0, i8* %19, align 1, !dbg !7749
  ret i8* %0, !dbg !7750
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7751 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7755, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i8* %1, metadata !7756, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i32 %2, metadata !7757, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i8* %0, metadata !7758, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i8* %1, metadata !7759, metadata !DIExpression()), !dbg !7760
  %4 = icmp eq i32 %2, 0, !dbg !7761
  br i1 %4, label %31, label %5, !dbg !7763

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7759, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i8* %0, metadata !7758, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i32 %2, metadata !7757, metadata !DIExpression()), !dbg !7760
  %6 = add i32 %2, -1, !dbg !7764
  call void @llvm.dbg.value(metadata i32 %6, metadata !7757, metadata !DIExpression()), !dbg !7760
  %7 = icmp eq i32 %6, 0, !dbg !7765
  br i1 %7, label %23, label %8, !dbg !7766

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7767
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7767
  br label %11, !dbg !7767

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7759, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i8* %14, metadata !7758, metadata !DIExpression()), !dbg !7760
  %15 = load i8, i8* %14, align 1, !dbg !7768
  %16 = load i8, i8* %13, align 1, !dbg !7769
  %17 = icmp eq i8 %15, %16, !dbg !7770
  br i1 %17, label %18, label %23, !dbg !7767

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7771
  call void @llvm.dbg.value(metadata i8* %19, metadata !7758, metadata !DIExpression()), !dbg !7760
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7773
  call void @llvm.dbg.value(metadata i8* %20, metadata !7759, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i32 %12, metadata !7757, metadata !DIExpression()), !dbg !7760
  %21 = add i32 %12, -1, !dbg !7764
  call void @llvm.dbg.value(metadata i32 %21, metadata !7757, metadata !DIExpression()), !dbg !7760
  %22 = icmp eq i32 %21, 0, !dbg !7765
  br i1 %22, label %23, label %11, !dbg !7766, !llvm.loop !7774

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7760
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7760
  %26 = load i8, i8* %24, align 1, !dbg !7776
  %27 = zext i8 %26 to i32, !dbg !7776
  %28 = load i8, i8* %25, align 1, !dbg !7777
  %29 = zext i8 %28 to i32, !dbg !7777
  %30 = sub nsw i32 %27, %29, !dbg !7778
  br label %31, !dbg !7779

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7760
  ret i32 %32, !dbg !7780
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7781 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7785, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i8* %1, metadata !7786, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i32 %2, metadata !7787, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i8* %0, metadata !7788, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i8* %1, metadata !7789, metadata !DIExpression()), !dbg !7790
  %4 = ptrtoint i8* %0 to i32, !dbg !7791
  %5 = ptrtoint i8* %1 to i32, !dbg !7791
  %6 = sub i32 %4, %5, !dbg !7791
  %7 = icmp ult i32 %6, %2, !dbg !7793
  br i1 %7, label %10, label %8, !dbg !7794

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7789, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i8* %0, metadata !7788, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i32 %2, metadata !7787, metadata !DIExpression()), !dbg !7790
  %9 = icmp eq i32 %2, 0, !dbg !7795
  br i1 %9, label %26, label %17, !dbg !7797

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7787, metadata !DIExpression()), !dbg !7790
  %12 = add i32 %11, -1, !dbg !7798
  call void @llvm.dbg.value(metadata i32 %12, metadata !7787, metadata !DIExpression()), !dbg !7790
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7801
  %14 = load i8, i8* %13, align 1, !dbg !7801
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7802
  store i8 %14, i8* %15, align 1, !dbg !7803
  %16 = icmp eq i32 %12, 0, !dbg !7804
  br i1 %16, label %26, label %10, !dbg !7805, !llvm.loop !7806

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7789, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i8* %19, metadata !7788, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i32 %20, metadata !7787, metadata !DIExpression()), !dbg !7790
  %21 = load i8, i8* %18, align 1, !dbg !7808
  store i8 %21, i8* %19, align 1, !dbg !7810
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7811
  call void @llvm.dbg.value(metadata i8* %22, metadata !7788, metadata !DIExpression()), !dbg !7790
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7812
  call void @llvm.dbg.value(metadata i8* %23, metadata !7789, metadata !DIExpression()), !dbg !7790
  %24 = add i32 %20, -1, !dbg !7813
  call void @llvm.dbg.value(metadata i32 %24, metadata !7787, metadata !DIExpression()), !dbg !7790
  %25 = icmp eq i32 %24, 0, !dbg !7795
  br i1 %25, label %26, label %17, !dbg !7797, !llvm.loop !7814

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7816
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7817 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7823, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i8* %1, metadata !7824, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i32 %2, metadata !7825, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i8* %0, metadata !7826, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i8* %1, metadata !7827, metadata !DIExpression()), !dbg !7828
  %4 = icmp eq i32 %2, 0, !dbg !7829
  br i1 %4, label %14, label %5, !dbg !7830

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7827, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i8* %7, metadata !7826, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i32 %8, metadata !7825, metadata !DIExpression()), !dbg !7828
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7831
  call void @llvm.dbg.value(metadata i8* %9, metadata !7827, metadata !DIExpression()), !dbg !7828
  %10 = load i8, i8* %6, align 1, !dbg !7833
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7834
  call void @llvm.dbg.value(metadata i8* %11, metadata !7826, metadata !DIExpression()), !dbg !7828
  store i8 %10, i8* %7, align 1, !dbg !7835
  %12 = add i32 %8, -1, !dbg !7836
  call void @llvm.dbg.value(metadata i32 %12, metadata !7825, metadata !DIExpression()), !dbg !7828
  %13 = icmp eq i32 %12, 0, !dbg !7829
  br i1 %13, label %14, label %5, !dbg !7830, !llvm.loop !7837

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7839
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7840 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7844, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i32 %1, metadata !7845, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i32 %2, metadata !7846, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i8* %0, metadata !7847, metadata !DIExpression()), !dbg !7849
  %4 = trunc i32 %1 to i8, !dbg !7850
  call void @llvm.dbg.value(metadata i8 %4, metadata !7848, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i32 %2, metadata !7846, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i8* %0, metadata !7847, metadata !DIExpression()), !dbg !7849
  %5 = icmp eq i32 %2, 0, !dbg !7851
  br i1 %5, label %12, label %6, !dbg !7852

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7846, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i8* %8, metadata !7847, metadata !DIExpression()), !dbg !7849
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7853
  call void @llvm.dbg.value(metadata i8* %9, metadata !7847, metadata !DIExpression()), !dbg !7849
  store i8 %4, i8* %8, align 1, !dbg !7855
  %10 = add i32 %7, -1, !dbg !7856
  call void @llvm.dbg.value(metadata i32 %10, metadata !7846, metadata !DIExpression()), !dbg !7849
  %11 = icmp eq i32 %10, 0, !dbg !7851
  br i1 %11, label %12, label %6, !dbg !7852, !llvm.loop !7857

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7859
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7860 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7864, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata i32 %1, metadata !7865, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata i32 %2, metadata !7866, metadata !DIExpression()), !dbg !7870
  %4 = icmp eq i32 %2, 0, !dbg !7871
  br i1 %4, label %17, label %5, !dbg !7872

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7873

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7874
  call void @llvm.dbg.value(metadata i8* %9, metadata !7867, metadata !DIExpression()), !dbg !7874
  call void @llvm.dbg.value(metadata i32 %8, metadata !7866, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata i8* %9, metadata !7867, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7874
  %10 = load i8, i8* %9, align 1, !dbg !7875
  %11 = icmp eq i8 %10, %6, !dbg !7878
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7879
  call void @llvm.dbg.value(metadata i8* %12, metadata !7867, metadata !DIExpression()), !dbg !7874
  call void @llvm.dbg.value(metadata i32 %13, metadata !7866, metadata !DIExpression()), !dbg !7870
  br i1 %15, label %16, label %7, !dbg !7879, !llvm.loop !7880

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7882

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7870
  ret i8* %19, !dbg !7883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !7884 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7886, metadata !DIExpression()), !dbg !7887
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7888
  ret void, !dbg !7889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !7890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7892, metadata !DIExpression()), !dbg !7893
  ret i32 -1, !dbg !7894
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7899, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i32* %1, metadata !7900, metadata !DIExpression()), !dbg !7901
  %3 = ptrtoint i32* %1 to i32, !dbg !7902
  %4 = and i32 %3, -2, !dbg !7902
  %5 = icmp eq i32 %4, 2, !dbg !7902
  br i1 %5, label %6, label %9, !dbg !7902

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7903
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !7903
  br label %9, !dbg !7904

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7904
  ret i32 %10, !dbg !7905
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7908, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.value(metadata i32* %1, metadata !7909, metadata !DIExpression()), !dbg !7910
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7911
  ret i32 %3, !dbg !7912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32* %1, metadata !7917, metadata !DIExpression()), !dbg !7918
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7919, !srcloc !7921
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7922
  ret i32 %3, !dbg !7923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7924 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7929, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.value(metadata i32* %1, metadata !7930, metadata !DIExpression()), !dbg !7933
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7934
  call void @llvm.dbg.value(metadata i32 %3, metadata !7931, metadata !DIExpression()), !dbg !7933
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7935
  call void @llvm.dbg.value(metadata i32 %4, metadata !7932, metadata !DIExpression()), !dbg !7933
  %5 = icmp ne i32 %3, %4, !dbg !7936
  %6 = sext i1 %5 to i32, !dbg !7937
  ret i32 %6, !dbg !7938
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7939 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7943, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %1, metadata !7944, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %2, metadata !7945, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32* %3, metadata !7946, metadata !DIExpression()), !dbg !7947
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7948
  ret i32 %5, !dbg !7949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7950 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7952, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %1, metadata !7953, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %2, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32* %3, metadata !7955, metadata !DIExpression()), !dbg !7956
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7957, !srcloc !7959
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7960
  ret i32 %5, !dbg !7961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7962 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7964, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32 %1, metadata !7965, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32 %2, metadata !7966, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32* %3, metadata !7967, metadata !DIExpression()), !dbg !7972
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7973
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7975
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7975
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7975
  br i1 %11, label %33, label %12, !dbg !7975

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7972
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7972
  call void @llvm.dbg.value(metadata i8* %14, metadata !7970, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32 %13, metadata !7968, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32 %1, metadata !7969, metadata !DIExpression()), !dbg !7972
  br label %15, !dbg !7976

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7978
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7972
  call void @llvm.dbg.value(metadata i8* %17, metadata !7970, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32 %16, metadata !7969, metadata !DIExpression()), !dbg !7972
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7979
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7982
  call void @llvm.dbg.value(metadata i8* %19, metadata !7970, metadata !DIExpression()), !dbg !7972
  %20 = load i8, i8* %17, align 1, !dbg !7983
  %21 = zext i8 %20 to i32, !dbg !7984
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !7979
  %23 = icmp eq i32 %22, -1, !dbg !7985
  br i1 %23, label %30, label %24, !dbg !7986

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7987
  call void @llvm.dbg.value(metadata i32 %25, metadata !7969, metadata !DIExpression()), !dbg !7972
  %26 = icmp eq i32 %25, 0, !dbg !7988
  br i1 %26, label %27, label %15, !dbg !7989, !llvm.loop !7990

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7992
  call void @llvm.dbg.value(metadata i32 %28, metadata !7968, metadata !DIExpression()), !dbg !7972
  %29 = icmp eq i32 %28, 0, !dbg !7993
  br i1 %29, label %30, label %12, !dbg !7994, !llvm.loop !7995

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7972
  call void @llvm.dbg.value(metadata i32 %31, metadata !7968, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.label(metadata !7971), !dbg !7998
  %32 = sub i32 %2, %31, !dbg !7999
  br label %33, !dbg !8000

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7972
  ret i32 %34, !dbg !8001
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8002 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8006, metadata !DIExpression()), !dbg !8007
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8008
  %3 = icmp eq i32 %2, -1, !dbg !8010
  br i1 %3, label %8, label %4, !dbg !8011

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8012
  %6 = icmp eq i32 %5, -1, !dbg !8013
  %7 = sext i1 %6 to i32, !dbg !8012
  br label %8, !dbg !8014

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8007
  ret i32 %9, !dbg !8015
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8016 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8018, metadata !DIExpression()), !dbg !8019
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8020
  ret void, !dbg !8021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8026, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 %1, metadata !8027, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8028, metadata !DIExpression()), !dbg !8032
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8033
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8033
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8033
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8029, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 %0, metadata !8031, metadata !DIExpression()), !dbg !8032
  %7 = icmp slt i32 %0, %1, !dbg !8034
  br i1 %7, label %8, label %22, !dbg !8037

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8031, metadata !DIExpression()), !dbg !8032
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8038
  %11 = icmp eq i32 %10, 0, !dbg !8038
  br i1 %11, label %19, label %12, !dbg !8041

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8042
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8044
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8044
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8046
  br i1 %15, label %19, label %16, !dbg !8047

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8048
  %18 = load i8*, i8** %17, align 4, !dbg !8048
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !8049
  br label %19, !dbg !8050

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8051
  call void @llvm.dbg.value(metadata i32 %20, metadata !8031, metadata !DIExpression()), !dbg !8032
  %21 = icmp eq i32 %20, %1, !dbg !8034
  br i1 %21, label %22, label %8, !dbg !8037, !llvm.loop !8052

22:                                               ; preds = %19, %3
  ret void, !dbg !8054
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8057, metadata !DIExpression()), !dbg !8058
  %2 = shl nuw i32 1, %0, !dbg !8059
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8062
  ret i32 %3, !dbg !8063
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8068, metadata !DIExpression()), !dbg !8069
  %2 = shl nuw i32 1, %0, !dbg !8070
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8073
  ret void, !dbg !8074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8078, metadata !DIExpression()), !dbg !8079
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8080
  ret void, !dbg !8081
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8084, metadata !DIExpression()), !dbg !8085
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8086
  %3 = and i32 %2, %0, !dbg !8086
  %4 = icmp eq i32 %3, %0, !dbg !8087
  %5 = zext i1 %4 to i32, !dbg !8087
  ret i32 %5, !dbg !8088
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8089 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8091, metadata !DIExpression()), !dbg !8092
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8093
  ret void, !dbg !8094
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8097, metadata !DIExpression()), !dbg !8098
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8099
  ret void, !dbg !8100
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8101 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8103, metadata !DIExpression()), !dbg !8104
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8105
  ret void, !dbg !8106
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8107 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8109, metadata !DIExpression()), !dbg !8110
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8111
  ret void, !dbg !8112
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8113 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8115, metadata !DIExpression()), !dbg !8116
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8117
  ret void, !dbg !8118
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8119 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8121, metadata !DIExpression()), !dbg !8122
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8123
  ret void, !dbg !8124
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8127, metadata !DIExpression()), !dbg !8128
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8129
  ret void, !dbg !8130
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8131 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8133, metadata !DIExpression()), !dbg !8134
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8135
  ret void, !dbg !8136
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8137 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8139, metadata !DIExpression()), !dbg !8140
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8141
  ret void, !dbg !8142
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8145, metadata !DIExpression()), !dbg !8146
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8147
  ret void, !dbg !8148
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8149 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8151, metadata !DIExpression()), !dbg !8152
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8153
  ret i32 0, !dbg !8154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !857 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !861, metadata !DIExpression()), !dbg !8155
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !8156
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !8158
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !8160
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !8162
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !8164
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !8166
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !8168
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !8170
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !8172
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !8174
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !8176
  ret void, !dbg !8178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8181, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata i32 0, metadata !8182, metadata !DIExpression()), !dbg !8183
  call void @llvm.dbg.value(metadata i32 undef, metadata !8182, metadata !DIExpression()), !dbg !8183
  %2 = lshr i32 6684671, %0, !dbg !8184
  %3 = and i32 %2, 1, !dbg !8184
  %4 = or i32 %3, %0, !dbg !8186
  %5 = icmp eq i32 %4, 0, !dbg !8186
  br i1 %5, label %6, label %7, !dbg !8186

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.84, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.86, i32 0, i32 0), i32 noundef 123) #27, !dbg !8187
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.86, i32 0, i32 0), i32 noundef 123) #27, !dbg !8187
  unreachable, !dbg !8187

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8192
  %9 = load i32, i32* %8, align 4, !dbg !8192
  call void @llvm.dbg.value(metadata i32 %9, metadata !8182, metadata !DIExpression()), !dbg !8183
  %10 = shl nuw i32 1, %0, !dbg !8193
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #26, !dbg !8194
  tail call void @arch_irq_enable(i32 noundef %9) #27, !dbg !8195
  ret void, !dbg !8196
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8199, metadata !DIExpression()), !dbg !8200
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8201
  %3 = or i32 %2, %0, !dbg !8201
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8201
  ret void, !dbg !8202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8205, metadata !DIExpression()), !dbg !8206
  %2 = icmp slt i32 %0, 32, !dbg !8207
  br i1 %2, label %3, label %5, !dbg !8209

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8210
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8212
  br label %5, !dbg !8213

5:                                                ; preds = %1, %3
  ret void, !dbg !8214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8217, metadata !DIExpression()), !dbg !8218
  %2 = xor i32 %0, -1, !dbg !8219
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8219
  %4 = and i32 %3, %2, !dbg !8219
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8219
  ret void, !dbg !8220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8225, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i32 %1, metadata !8226, metadata !DIExpression()), !dbg !8227
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8228

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8229
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8231
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8232
  br label %11, !dbg !8233

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8234
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8235
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8236
  br label %11, !dbg !8237

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8238
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8239
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8240
  br label %11, !dbg !8241

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8242
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8243
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8244
  br label %11, !dbg !8245

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8246
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8249, metadata !DIExpression()), !dbg !8250
  %2 = xor i32 %0, -1, !dbg !8251
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8251
  %4 = and i32 %3, %2, !dbg !8251
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8251
  ret void, !dbg !8252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8255, metadata !DIExpression()), !dbg !8256
  %2 = xor i32 %0, -1, !dbg !8257
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8257
  %4 = and i32 %3, %2, !dbg !8257
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8257
  ret void, !dbg !8258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8261, metadata !DIExpression()), !dbg !8262
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8263
  %3 = or i32 %2, %0, !dbg !8263
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8263
  ret void, !dbg !8264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8267, metadata !DIExpression()), !dbg !8268
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8269
  %3 = or i32 %2, %0, !dbg !8269
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8269
  ret void, !dbg !8270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8275, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8276, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.value(metadata i8* %2, metadata !8277, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8278, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8280, metadata !DIExpression()), !dbg !8281
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8282
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8282
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8284
  br i1 %6, label %7, label %9, !dbg !8285

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8286
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8287
  store i8* %2, i8** %8, align 4, !dbg !8288
  br label %9, !dbg !8289

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8281
  ret i32 %10, !dbg !8290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !8291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8293, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8294, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8295, metadata !DIExpression()), !dbg !8296
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8297
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8298
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8299
  store i8* null, i8** %3, align 4, !dbg !8300
  ret void, !dbg !8301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8302 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8304, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8* %1, metadata !8305, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8* %1, metadata !8306, metadata !DIExpression()), !dbg !8309
  %3 = bitcast i8* %1 to i32*, !dbg !8310
  %4 = load i32, i32* %3, align 4, !dbg !8310
  %5 = add i32 %4, -169, !dbg !8310
  %6 = icmp ult i32 %5, -121, !dbg !8310
  br i1 %6, label %15, label %7, !dbg !8312

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8313
  %9 = inttoptr i32 %8 to i32*, !dbg !8314
  call void @llvm.dbg.value(metadata i32* %9, metadata !8307, metadata !DIExpression()), !dbg !8309
  %10 = load volatile i32, i32* %9, align 4, !dbg !8315
  call void @llvm.dbg.value(metadata i32 %10, metadata !8308, metadata !DIExpression()), !dbg !8309
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8316
  %12 = bitcast i8* %11 to i32*, !dbg !8316
  %13 = load i32, i32* %12, align 4, !dbg !8316
  %14 = or i32 %13, %10, !dbg !8317
  call void @llvm.dbg.value(metadata i32 %14, metadata !8308, metadata !DIExpression()), !dbg !8309
  store volatile i32 %14, i32* %9, align 4, !dbg !8318
  br label %15, !dbg !8319

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8309
  ret i32 %16, !dbg !8320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8321 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8323, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i8* %1, metadata !8324, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i8* %1, metadata !8325, metadata !DIExpression()), !dbg !8328
  %3 = bitcast i8* %1 to i32*, !dbg !8329
  %4 = load i32, i32* %3, align 4, !dbg !8329
  %5 = add i32 %4, -169, !dbg !8329
  %6 = icmp ult i32 %5, -121, !dbg !8329
  br i1 %6, label %16, label %7, !dbg !8331

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8332
  %9 = inttoptr i32 %8 to i32*, !dbg !8333
  call void @llvm.dbg.value(metadata i32* %9, metadata !8326, metadata !DIExpression()), !dbg !8328
  %10 = load volatile i32, i32* %9, align 4, !dbg !8334
  call void @llvm.dbg.value(metadata i32 %10, metadata !8327, metadata !DIExpression()), !dbg !8328
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8335
  %12 = bitcast i8* %11 to i32*, !dbg !8335
  %13 = load i32, i32* %12, align 4, !dbg !8335
  %14 = xor i32 %13, -1, !dbg !8336
  %15 = and i32 %10, %14, !dbg !8337
  call void @llvm.dbg.value(metadata i32 %15, metadata !8327, metadata !DIExpression()), !dbg !8328
  store volatile i32 %15, i32* %9, align 4, !dbg !8338
  br label %16, !dbg !8339

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8328
  ret i32 %17, !dbg !8340
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8343, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8* %1, metadata !8344, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32* %2, metadata !8345, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8* %1, metadata !8346, metadata !DIExpression()), !dbg !8351
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8352
  call void @llvm.dbg.value(metadata i32 %4, metadata !8347, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 undef, metadata !8348, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 undef, metadata !8349, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %4, metadata !8350, metadata !DIExpression()), !dbg !8351
  %5 = bitcast i8* %1 to i32*, !dbg !8353
  %6 = load i32, i32* %5, align 4, !dbg !8353
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8354

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8355
  call void @llvm.dbg.value(metadata i32 %8, metadata !8348, metadata !DIExpression()), !dbg !8351
  br label %19, !dbg !8356

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8358
  call void @llvm.dbg.value(metadata i32 %10, metadata !8349, metadata !DIExpression()), !dbg !8351
  br label %19, !dbg !8359

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8360
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #26, !dbg !8361
  br label %19, !dbg !8362

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8363
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !8364
  br label %19, !dbg !8365

17:                                               ; preds = %3
  br label %19, !dbg !8366

18:                                               ; preds = %3
  br label %19, !dbg !8367

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8368
  br label %21, !dbg !8369

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8351
  ret i32 %22, !dbg !8369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8370 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8372, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.value(metadata i8* %1, metadata !8373, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.value(metadata i8* %2, metadata !8374, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.value(metadata i8* %1, metadata !8375, metadata !DIExpression()), !dbg !8380
  %4 = bitcast i8* %1 to i32*, !dbg !8381
  %5 = load i32, i32* %4, align 4, !dbg !8381
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8382
  call void @llvm.dbg.value(metadata i32 %6, metadata !8379, metadata !DIExpression()), !dbg !8380
  %7 = icmp slt i32 %6, 0, !dbg !8383
  br i1 %7, label %22, label %8, !dbg !8385

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8375, metadata !DIExpression()), !dbg !8380
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8386
  %10 = bitcast i8* %9 to i32*, !dbg !8386
  %11 = load i32, i32* %10, align 4, !dbg !8386
  %12 = lshr i32 %11, 16, !dbg !8386
  %13 = and i32 %12, 7, !dbg !8386
  %14 = lshr i32 %11, 8, !dbg !8387
  %15 = and i32 %14, 31, !dbg !8387
  %16 = shl i32 %13, %15, !dbg !8388
  call void @llvm.dbg.value(metadata i32 %16, metadata !8378, metadata !DIExpression()), !dbg !8380
  %17 = and i32 %11, 255, !dbg !8389
  %18 = or i32 %17, 1073887232, !dbg !8390
  %19 = inttoptr i32 %18 to i32*, !dbg !8391
  call void @llvm.dbg.value(metadata i32* %19, metadata !8376, metadata !DIExpression()), !dbg !8380
  %20 = load volatile i32, i32* %19, align 4, !dbg !8392
  call void @llvm.dbg.value(metadata i32 %20, metadata !8377, metadata !DIExpression()), !dbg !8380
  %21 = or i32 %16, %20, !dbg !8393
  call void @llvm.dbg.value(metadata i32 %21, metadata !8377, metadata !DIExpression()), !dbg !8380
  store volatile i32 %21, i32* %19, align 4, !dbg !8394
  br label %22, !dbg !8395

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8380
  ret i32 %23, !dbg !8396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8401, metadata !DIExpression()), !dbg !8403
  call void @llvm.dbg.value(metadata i32 0, metadata !8402, metadata !DIExpression()), !dbg !8403
  %2 = add i32 %0, -1, !dbg !8404
  %3 = icmp ult i32 %2, 6, !dbg !8404
  br i1 %3, label %4, label %7, !dbg !8404

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8404
  %6 = load i32, i32* %5, align 4, !dbg !8404
  call void @llvm.dbg.value(metadata i32 %6, metadata !8402, metadata !DIExpression()), !dbg !8403
  br label %7, !dbg !8405

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8403
  ret i32 %8, !dbg !8406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8411, metadata !DIExpression()), !dbg !8413
  call void @llvm.dbg.value(metadata i32 %1, metadata !8412, metadata !DIExpression()), !dbg !8413
  %3 = udiv i32 %0, %1, !dbg !8414
  ret i32 %3, !dbg !8415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8420, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.value(metadata i32 16, metadata !8421, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.value(metadata i32 336, metadata !8422, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.value(metadata i32 %1, metadata !8423, metadata !DIExpression()), !dbg !8424
  %3 = mul i32 %0, 336, !dbg !8425
  %4 = shl nsw i32 %1, 4, !dbg !8426
  %5 = udiv i32 %3, %4, !dbg !8427
  ret i32 %5, !dbg !8428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8429 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8431, metadata !DIExpression()), !dbg !8434
  tail call void @config_enable_default_clocks() #27, !dbg !8435
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !8436
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8436
  %4 = lshr i32 %3, 4, !dbg !8436
  %5 = and i32 %4, 15, !dbg !8436
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8436
  %7 = load i8, i8* %6, align 1, !dbg !8436
  %8 = zext i8 %7 to i32, !dbg !8436
  %9 = lshr i32 %2, %8, !dbg !8436
  call void @llvm.dbg.value(metadata i32 %9, metadata !8432, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8433, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8434
  %10 = icmp ult i32 %9, 84000000, !dbg !8437
  br i1 %10, label %11, label %13, !dbg !8439

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8440
  br label %13, !dbg !8442

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8443
  tail call fastcc void @set_up_plls() #26, !dbg !8444
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8445
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8448
  br label %14, !dbg !8449

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8450
  %16 = icmp eq i32 %15, 8, !dbg !8451
  br i1 %16, label %17, label %14, !dbg !8449, !llvm.loop !8452

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8454
  br i1 %18, label %19, label %21, !dbg !8456

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8457
  br label %21, !dbg !8459

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8460
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8461
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8462
  ret i32 0, !dbg !8463
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8464 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8466
  %2 = and i32 %1, 240, !dbg !8466
  ret i32 %2, !dbg !8467
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8468 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8469
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8474
  br label %1, !dbg !8475

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8476
  %3 = icmp eq i32 %2, 1, !dbg !8477
  br i1 %3, label %4, label %1, !dbg !8475, !llvm.loop !8478

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8480
  br label %5, !dbg !8483

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8484
  %7 = icmp eq i32 %6, 1, !dbg !8485
  br i1 %7, label %8, label %5, !dbg !8483, !llvm.loop !8486

8:                                                ; preds = %5
  ret void, !dbg !8488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8489 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8490
  %2 = icmp eq i32 %1, 8, !dbg !8492
  br i1 %2, label %3, label %4, !dbg !8493

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8494
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8496
  br label %4, !dbg !8497

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8498
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8499
  %6 = and i32 %5, -196609, !dbg !8499
  %7 = or i32 %6, 65536, !dbg !8499
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8499
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8500
  %9 = and i32 %8, -251658241, !dbg !8500
  %10 = or i32 %9, 117440512, !dbg !8500
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8500
  tail call void @config_pll_sysclock() #27, !dbg !8501
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8502
  br label %11, !dbg !8503

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8504
  %13 = icmp eq i32 %12, 1, !dbg !8505
  br i1 %13, label %14, label %11, !dbg !8503, !llvm.loop !8506

14:                                               ; preds = %11
  ret void, !dbg !8508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8509 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8511, metadata !DIExpression()), !dbg !8512
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8513
  %2 = and i32 %1, -241, !dbg !8513
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8513
  ret void, !dbg !8514
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8517, metadata !DIExpression()), !dbg !8518
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8519
  %3 = and i32 %2, -4, !dbg !8519
  %4 = or i32 %3, %0, !dbg !8519
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8519
  ret void, !dbg !8520
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8521 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8522
  %2 = and i32 %1, 12, !dbg !8522
  ret i32 %2, !dbg !8523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8524 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8526, metadata !DIExpression()), !dbg !8527
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8528
  %2 = and i32 %1, -7169, !dbg !8528
  %3 = or i32 %2, 4096, !dbg !8528
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8528
  ret void, !dbg !8529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8530 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8532, metadata !DIExpression()), !dbg !8533
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8534
  %2 = and i32 %1, -57345, !dbg !8534
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8534
  ret void, !dbg !8535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8536 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8537
  %2 = icmp eq i32 %1, 1, !dbg !8539
  br i1 %2, label %7, label %3, !dbg !8540

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8541
  br label %4, !dbg !8543

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8544
  %6 = icmp eq i32 %5, 1, !dbg !8545
  br i1 %6, label %7, label %4, !dbg !8543, !llvm.loop !8546

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8548
  br label %8, !dbg !8549

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8550
  %10 = icmp eq i32 %9, 0, !dbg !8551
  br i1 %10, label %11, label %8, !dbg !8549, !llvm.loop !8552

11:                                               ; preds = %8
  ret void, !dbg !8554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8555 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8556
  %2 = and i32 %1, -16777217, !dbg !8556
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8558 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8559
  %2 = or i32 %1, 16777216, !dbg !8559
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8559
  ret void, !dbg !8560
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8561 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8562
  %2 = lshr i32 %1, 25, !dbg !8563
  %3 = and i32 %2, 1, !dbg !8563
  ret i32 %3, !dbg !8564
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8565 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8566
  %2 = lshr i32 %1, 1, !dbg !8567
  %3 = and i32 %2, 1, !dbg !8567
  ret i32 %3, !dbg !8568
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8569 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8570
  %2 = or i32 %1, 1, !dbg !8570
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8570
  ret void, !dbg !8571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8572 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8573
  %2 = and i32 %1, -262145, !dbg !8573
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8573
  ret void, !dbg !8574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8575 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8576
  %2 = or i32 %1, 65536, !dbg !8576
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8576
  ret void, !dbg !8577
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8578 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8579
  %2 = lshr i32 %1, 17, !dbg !8580
  %3 = and i32 %2, 1, !dbg !8580
  ret i32 %3, !dbg !8581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8582 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8583
  %2 = or i32 %1, 1, !dbg !8583
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8583
  ret void, !dbg !8584
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8585 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8586
  %2 = lshr i32 %1, 1, !dbg !8587
  %3 = and i32 %2, 1, !dbg !8587
  ret i32 %3, !dbg !8588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8589 {
  ret i32 16000000, !dbg !8591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8595 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8596
  ret void, !dbg !8597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8598 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8602, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 16, metadata !8603, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 336, metadata !8604, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 65536, metadata !8605, metadata !DIExpression()), !dbg !8606
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8607
  %2 = and i32 %1, -4227072, !dbg !8607
  %3 = or i32 %2, 4215824, !dbg !8607
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8607
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8608
  %5 = and i32 %4, -196609, !dbg !8608
  %6 = or i32 %5, 65536, !dbg !8608
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8608
  ret void, !dbg !8609
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8610 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8611
  ret void, !dbg !8612
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8613 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8616, metadata !DIExpression()), !dbg !8618
  %2 = bitcast i32* %1 to i8*, !dbg !8619
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8619
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8617, metadata !DIExpression()), !dbg !8620
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8621
  %4 = or i32 %3, 268435456, !dbg !8621
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8621
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8622
  %6 = and i32 %5, 268435456, !dbg !8622
  store volatile i32 %6, i32* %1, align 4, !dbg !8623
  %7 = load volatile i32, i32* %1, align 4, !dbg !8624
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8625
  ret void, !dbg !8625
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8626 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8628, metadata !DIExpression()), !dbg !8629
  %2 = tail call fastcc zeroext i1 @device_is_ready.96() #26, !dbg !8630
  br i1 %2, label %3, label %4, !dbg !8632

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8633
  br label %4, !dbg !8634

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8629
  ret i32 %5, !dbg !8635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.96() unnamed_addr #1 !dbg !8636 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8640, metadata !DIExpression()), !dbg !8641
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8642, !srcloc !8644
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.97() #26, !dbg !8645
  ret i1 %1, !dbg !8646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8647 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8648
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8649
  ret void, !dbg !8650
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8653, metadata !DIExpression()), !dbg !8654
  %2 = icmp eq i32 %0, 10, !dbg !8655
  br i1 %2, label %3, label %4, !dbg !8657

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8658
  br label %4, !dbg !8660

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8661
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8662
  ret i32 %0, !dbg !8663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8664 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8667, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.value(metadata i8 %0, metadata !8668, metadata !DIExpression()), !dbg !8669
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8670, !srcloc !8672
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8673
  ret void, !dbg !8674
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8675 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8677, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i8 %0, metadata !8678, metadata !DIExpression()), !dbg !8680
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8681
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8679, metadata !DIExpression()), !dbg !8680
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8682
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8682
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #27, !dbg !8683
  ret void, !dbg !8684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.97() unnamed_addr #1 !dbg !8685 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8687, metadata !DIExpression()), !dbg !8688
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #27, !dbg !8689
  ret i1 %1, !dbg !8690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8691 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8738, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8739, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8740, metadata !DIExpression()), !dbg !8741
  ret void, !dbg !8742
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8743 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8745, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8 %1, metadata !8746, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i32 %2, metadata !8747, metadata !DIExpression()), !dbg !8750
  %5 = bitcast i32* %4 to i8*, !dbg !8751
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8751
  call void @llvm.dbg.value(metadata i32* %4, metadata !8749, metadata !DIExpression(DW_OP_deref)), !dbg !8750
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8752
  call void @llvm.dbg.value(metadata i32 %6, metadata !8748, metadata !DIExpression()), !dbg !8750
  %7 = icmp eq i32 %6, 0, !dbg !8753
  br i1 %7, label %8, label %31, !dbg !8755

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8748, metadata !DIExpression()), !dbg !8750
  %9 = and i32 %2, 131072, !dbg !8756
  %10 = icmp eq i32 %9, 0, !dbg !8758
  br i1 %10, label %28, label %11, !dbg !8759

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8760
  %13 = icmp eq i32 %12, 0, !dbg !8763
  br i1 %13, label %18, label %14, !dbg !8764

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8765
  %16 = shl nuw i32 1, %15, !dbg !8765
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8767
  br label %25, !dbg !8768

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8769
  %20 = icmp eq i32 %19, 0, !dbg !8771
  %21 = zext i8 %1 to i32, !dbg !8750
  br i1 %20, label %25, label %22, !dbg !8772

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8773
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8775
  br label %25, !dbg !8776

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8777
  %27 = load i32, i32* %4, align 4, !dbg !8778
  call void @llvm.dbg.value(metadata i32 %30, metadata !8749, metadata !DIExpression()), !dbg !8750
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8779
  br label %31, !dbg !8780

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8777
  %30 = load i32, i32* %4, align 4, !dbg !8778
  call void @llvm.dbg.value(metadata i32 %30, metadata !8749, metadata !DIExpression()), !dbg !8750
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8779
  call void @llvm.dbg.value(metadata i32 0, metadata !8748, metadata !DIExpression()), !dbg !8750
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8781
  ret i32 %6, !dbg !8781
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8782 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8786, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata i32* %1, metadata !8787, metadata !DIExpression()), !dbg !8791
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8792
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8792
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8792
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8788, metadata !DIExpression()), !dbg !8791
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8793
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8793
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8793
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8790, metadata !DIExpression()), !dbg !8791
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8794
  store i32 %9, i32* %1, align 4, !dbg !8795
  ret i32 0, !dbg !8796
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8799, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i32 %1, metadata !8800, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i32 %2, metadata !8801, metadata !DIExpression()), !dbg !8805
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8806
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8806
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8806
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8802, metadata !DIExpression()), !dbg !8805
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8807
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8807
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8807
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8803, metadata !DIExpression()), !dbg !8805
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8808
  call void @llvm.dbg.value(metadata i32 %10, metadata !8804, metadata !DIExpression()), !dbg !8805
  %11 = xor i32 %1, -1, !dbg !8809
  %12 = and i32 %10, %11, !dbg !8810
  %13 = and i32 %2, %1, !dbg !8811
  %14 = or i32 %12, %13, !dbg !8812
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8813
  ret i32 0, !dbg !8814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8817, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i32 %1, metadata !8818, metadata !DIExpression()), !dbg !8821
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8822
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8822
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8822
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8819, metadata !DIExpression()), !dbg !8821
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8823
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8823
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8823
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8820, metadata !DIExpression()), !dbg !8821
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8824
  store volatile i32 %1, i32* %9, align 4, !dbg !8824
  ret i32 0, !dbg !8825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8828, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.value(metadata i32 %1, metadata !8829, metadata !DIExpression()), !dbg !8832
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8833
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8833
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8833
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8830, metadata !DIExpression()), !dbg !8832
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8834
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8834
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8834
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8831, metadata !DIExpression()), !dbg !8832
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8835
  ret i32 0, !dbg !8836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8837 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8839, metadata !DIExpression()), !dbg !8843
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()), !dbg !8843
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8844
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8844
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8844
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8841, metadata !DIExpression()), !dbg !8843
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8845
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8845
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8845
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8842, metadata !DIExpression()), !dbg !8843
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8846
  %10 = load volatile i32, i32* %9, align 4, !dbg !8846
  %11 = xor i32 %10, %1, !dbg !8846
  store volatile i32 %11, i32* %9, align 4, !dbg !8846
  ret i32 0, !dbg !8847
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8850, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.value(metadata i8 %1, metadata !8851, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.value(metadata i32 %2, metadata !8852, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.value(metadata i32 %3, metadata !8853, metadata !DIExpression()), !dbg !8860
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8861
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8861
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8861
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8854, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.value(metadata i8* undef, metadata !8855, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.value(metadata i32 0, metadata !8857, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.value(metadata i32 0, metadata !8858, metadata !DIExpression()), !dbg !8860
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8862

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8863
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8867
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8868
  %12 = load i32, i32* %11, align 4, !dbg !8868
  %13 = icmp eq i32 %10, %12, !dbg !8869
  br i1 %13, label %14, label %29, !dbg !8870

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !8871
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !8873
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !8874
  br label %29, !dbg !8875

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8876
  %17 = load i8*, i8** %16, align 4, !dbg !8876
  call void @llvm.dbg.value(metadata i8* %17, metadata !8855, metadata !DIExpression()), !dbg !8860
  %18 = zext i8 %1 to i32, !dbg !8877
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !8879
  %20 = icmp eq i32 %19, 0, !dbg !8880
  br i1 %20, label %21, label %29, !dbg !8881

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8882
  %23 = load i32, i32* %22, align 4, !dbg !8882
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8883
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8884

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8857, metadata !DIExpression()), !dbg !8860
  br label %27, !dbg !8885

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8857, metadata !DIExpression()), !dbg !8860
  br label %27, !dbg !8887

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8857, metadata !DIExpression()), !dbg !8860
  br label %27, !dbg !8888

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8860
  call void @llvm.dbg.value(metadata i32 %28, metadata !8857, metadata !DIExpression()), !dbg !8860
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !8889
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !8890
  br label %29, !dbg !8890

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8860
  call void @llvm.dbg.value(metadata i32 %30, metadata !8858, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.label(metadata !8859), !dbg !8891
  ret i32 %30, !dbg !8892
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8893 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8895, metadata !DIExpression()), !dbg !8899
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8896, metadata !DIExpression()), !dbg !8899
  call void @llvm.dbg.value(metadata i1 %2, metadata !8897, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8899
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8900
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8900
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8900
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8898, metadata !DIExpression()), !dbg !8899
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8901
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8902
  ret i32 %8, !dbg !8903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !8904 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8910, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8911, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i1 %2, metadata !8912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8913
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !8914
  br i1 %4, label %5, label %6, !dbg !8917

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #27, !dbg !8918
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0)) #27, !dbg !8918
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #27, !dbg !8918
  unreachable, !dbg !8918

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !8920
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !8920
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !8920
  br i1 %9, label %10, label %11, !dbg !8923

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #27, !dbg !8924
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #27, !dbg !8924
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #27, !dbg !8924
  unreachable, !dbg !8924

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8926
  br i1 %12, label %18, label %13, !dbg !8928

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8929
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #26, !dbg !8932
  %16 = or i1 %15, %2, !dbg !8933
  %17 = select i1 %16, i32 0, i32 -22, !dbg !8933
  br i1 %2, label %19, label %21, !dbg !8933

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !8934

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8935
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #26, !dbg !8938
  br label %21, !dbg !8939

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !8913
  ret i32 %22, !dbg !8940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8941 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8945, metadata !DIExpression()), !dbg !8946
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8947
  %3 = icmp eq %struct._snode* %2, null, !dbg !8947
  ret i1 %3, !dbg !8947
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8948 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8952, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8953, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8954, metadata !DIExpression()), !dbg !8956
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8957
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8955, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8954, metadata !DIExpression()), !dbg !8956
  %4 = icmp eq %struct._snode* %3, null, !dbg !8959
  br i1 %4, label %15, label %5, !dbg !8957

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8955, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8954, metadata !DIExpression()), !dbg !8956
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8961
  br i1 %6, label %9, label %11, !dbg !8964

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8955, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8954, metadata !DIExpression()), !dbg !8956
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8961
  br i1 %8, label %9, label %11, !dbg !8964, !llvm.loop !8965

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8966
  br label %15, !dbg !8966

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8955, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8954, metadata !DIExpression()), !dbg !8956
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8959
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8955, metadata !DIExpression()), !dbg !8956
  %14 = icmp eq %struct._snode* %13, null, !dbg !8959
  br i1 %14, label %15, label %7, !dbg !8957, !llvm.loop !8965

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8973, metadata !DIExpression()), !dbg !8975
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8974, metadata !DIExpression()), !dbg !8975
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8976
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8976
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8976
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8977
  %5 = icmp eq %struct._snode* %4, null, !dbg !8977
  br i1 %5, label %6, label %8, !dbg !8976

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8979
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8979
  br label %8, !dbg !8979

8:                                                ; preds = %6, %2
  ret void, !dbg !8976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8981 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8985, metadata !DIExpression()), !dbg !8986
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8987
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8987
  ret %struct._snode* %3, !dbg !8988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !8989 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8993, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8994, metadata !DIExpression()), !dbg !8995
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8996
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8997
  ret void, !dbg !8998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !8999 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9001, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9002, metadata !DIExpression()), !dbg !9003
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9004
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9005
  ret void, !dbg !9006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9007 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9009, metadata !DIExpression()), !dbg !9010
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9011
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9011
  ret %struct._snode* %3, !dbg !9012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !9013 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9015, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9016, metadata !DIExpression()), !dbg !9017
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9018
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9019
  ret void, !dbg !9020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9021 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9025, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9026, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9027, metadata !DIExpression()), !dbg !9028
  %4 = icmp eq %struct._snode* %1, null, !dbg !9029
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !9031
  br i1 %4, label %6, label %11, !dbg !9032

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !9033
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9035
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9035
  br i1 %8, label %9, label %15, !dbg !9033

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9037
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !9037
  br label %15, !dbg !9037

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !9039
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9041
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9041
  br i1 %13, label %14, label %15, !dbg !9039

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !9043
  br label %15, !dbg !9043

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !9032
  ret void, !dbg !9032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #7 !dbg !9045 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9049, metadata !DIExpression()), !dbg !9050
  %2 = icmp eq %struct._snode* %0, null, !dbg !9051
  br i1 %2, label %5, label %3, !dbg !9051

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !9051
  br label %5, !dbg !9051

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9051
  ret %struct._snode* %6, !dbg !9051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9052 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9054, metadata !DIExpression()), !dbg !9055
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !9056
  ret %struct._snode* %2, !dbg !9056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9057 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9059, metadata !DIExpression()), !dbg !9060
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9061
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9061
  ret %struct._snode* %3, !dbg !9062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9065, metadata !DIExpression()), !dbg !9068
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !9069, !range !9070
  call void @llvm.dbg.value(metadata i32 %2, metadata !9066, metadata !DIExpression()), !dbg !9068
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !9071
  call void @llvm.dbg.value(metadata i32 %3, metadata !9067, metadata !DIExpression()), !dbg !9068
  ret i32 %3, !dbg !9072
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9075, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata i8* %1, metadata !9076, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.value(metadata i8* %1, metadata !9077, metadata !DIExpression()), !dbg !9078
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9079
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9079
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9080
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9080
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9080
  %8 = shl nuw i32 1, %0, !dbg !9081
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !9082
  ret void, !dbg !9083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9084 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9088, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.value(metadata i32 %1, metadata !9089, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9090, metadata !DIExpression()), !dbg !9094
  %4 = bitcast i64* %3 to i8*, !dbg !9095
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9095
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9092, metadata !DIExpression()), !dbg !9094
  store i64 70368744177732, i64* %3, align 8, !dbg !9096
  call void @llvm.dbg.value(metadata i64* %3, metadata !9092, metadata !DIExpression(DW_OP_deref)), !dbg !9094
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %5, metadata !9093, metadata !DIExpression()), !dbg !9094
  %6 = icmp eq i32 %5, 0, !dbg !9098
  br i1 %6, label %7, label %8, !dbg !9100

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !9101
  br label %8, !dbg !9102

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9103
  ret void, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9104 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9106, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata i8* %0, metadata !9107, metadata !DIExpression()), !dbg !9109
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9110
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9108, metadata !DIExpression()), !dbg !9109
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9111
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9111
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !9112
  ret i32 %5, !dbg !9113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9116, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 %1, metadata !9117, metadata !DIExpression()), !dbg !9119
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !9120
  call void @llvm.dbg.value(metadata i32 %3, metadata !9118, metadata !DIExpression()), !dbg !9119
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !9121
  ret void, !dbg !9122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !9123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9127, metadata !DIExpression()), !dbg !9128
  %2 = sdiv i32 %0, 4, !dbg !9129
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9130
  %6 = add nsw i32 %5, 16, !dbg !9131
  %7 = shl i32 15, %6, !dbg !9132
  %8 = or i32 %7, %2, !dbg !9133
  ret i32 %8, !dbg !9134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9139, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 %1, metadata !9140, metadata !DIExpression()), !dbg !9141
  %3 = and i32 %1, 255, !dbg !9142
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9142
  %5 = load volatile i32, i32* %4, align 4, !dbg !9142
  %6 = lshr i32 %1, 16, !dbg !9142
  %7 = xor i32 %6, -1, !dbg !9142
  %8 = and i32 %5, %7, !dbg !9142
  call void @llvm.dbg.value(metadata i32 %6, metadata !9143, metadata !DIExpression()) #25, !dbg !9147
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9149, !srcloc !9150
  call void @llvm.dbg.value(metadata i32 %9, metadata !9146, metadata !DIExpression()) #25, !dbg !9147
  call void @llvm.dbg.value(metadata i32 %9, metadata !9151, metadata !DIExpression()) #25, !dbg !9156
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9158, !range !4206
  %11 = shl i32 %0, %10, !dbg !9142
  %12 = or i32 %11, %8, !dbg !9142
  store volatile i32 %12, i32* %4, align 4, !dbg !9142
  ret void, !dbg !9159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9160 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9164, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9165, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i32 %2, metadata !9166, metadata !DIExpression()), !dbg !9169
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9170
  %5 = icmp eq %struct._snode* %4, null, !dbg !9170
  br i1 %5, label %24, label %6, !dbg !9170

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !9172
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9168, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9167, metadata !DIExpression()), !dbg !9169
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9173
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9173
  %12 = load i32, i32* %11, align 4, !dbg !9173
  %13 = and i32 %12, %2, !dbg !9177
  %14 = icmp eq i32 %13, 0, !dbg !9177
  br i1 %14, label %22, label %15, !dbg !9178

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9179
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9179
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9179
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9179
  br i1 %19, label %20, label %21, !dbg !9183

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #27, !dbg !9184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #27, !dbg !9184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #27, !dbg !9184
  unreachable, !dbg !9184

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #27, !dbg !9186
  br label %22, !dbg !9187

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9167, metadata !DIExpression()), !dbg !9169
  %23 = icmp eq %struct._snode* %8, null, !dbg !9188
  br i1 %23, label %24, label %6, !dbg !9188

24:                                               ; preds = %22, %3
  ret void, !dbg !9189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9192, metadata !DIExpression()), !dbg !9193
  %2 = and i32 %0, 255, !dbg !9194
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9194
  %4 = load volatile i32, i32* %3, align 4, !dbg !9194
  %5 = lshr i32 %0, 16, !dbg !9194
  %6 = and i32 %4, %5, !dbg !9194
  call void @llvm.dbg.value(metadata i32 %5, metadata !9143, metadata !DIExpression()) #25, !dbg !9195
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9197, !srcloc !9150
  call void @llvm.dbg.value(metadata i32 %7, metadata !9146, metadata !DIExpression()) #25, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %7, metadata !9151, metadata !DIExpression()) #25, !dbg !9198
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9200, !range !4206
  %9 = lshr i32 %6, %8, !dbg !9201
  ret i32 %9, !dbg !9202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9203 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9208, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.value(metadata i32 %1, metadata !9209, metadata !DIExpression()), !dbg !9210
  %3 = shl i32 %1, 16, !dbg !9211
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9211
  store volatile i32 %3, i32* %4, align 4, !dbg !9211
  ret void, !dbg !9212
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9213 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9217, metadata !DIExpression()), !dbg !9218
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9219
  %3 = load volatile i32, i32* %2, align 4, !dbg !9219
  ret i32 %3, !dbg !9220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9221 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9223, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i32 %1, metadata !9224, metadata !DIExpression()), !dbg !9225
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9226
  store volatile i32 %1, i32* %3, align 4, !dbg !9226
  ret void, !dbg !9227
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9228 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9230, metadata !DIExpression()), !dbg !9231
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9232
  %3 = load volatile i32, i32* %2, align 4, !dbg !9232
  ret i32 %3, !dbg !9233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9238, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata i32* %1, metadata !9239, metadata !DIExpression()), !dbg !9240
  %3 = and i32 %0, 131072, !dbg !9241
  %4 = icmp eq i32 %3, 0, !dbg !9243
  br i1 %4, label %22, label %5, !dbg !9244

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9245
  %6 = and i32 %0, 2, !dbg !9247
  %7 = icmp eq i32 %6, 0, !dbg !9249
  br i1 %7, label %11, label %8, !dbg !9250

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9251
  %10 = icmp eq i32 %9, 0, !dbg !9251
  br i1 %10, label %33, label %11, !dbg !9254

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9255
  store i32 %12, i32* %1, align 4, !dbg !9255
  %13 = and i32 %0, 16, !dbg !9256
  %14 = icmp eq i32 %13, 0, !dbg !9258
  br i1 %14, label %17, label %15, !dbg !9259

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9260
  br label %31, !dbg !9262

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9263
  %19 = icmp eq i32 %18, 0, !dbg !9265
  br i1 %19, label %33, label %20, !dbg !9266

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9267
  br label %31, !dbg !9269

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9270
  %24 = icmp eq i32 %23, 0, !dbg !9272
  br i1 %24, label %31, label %25, !dbg !9273

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9274
  %27 = icmp eq i32 %26, 0, !dbg !9277
  br i1 %27, label %28, label %31, !dbg !9278

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9279
  br label %33, !dbg !9280

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9240
  ret i32 %34, !dbg !9280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9281 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9285, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.value(metadata i32 %1, metadata !9286, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.value(metadata i32 %2, metadata !9287, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.value(metadata i32 %3, metadata !9288, metadata !DIExpression()), !dbg !9296
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9297
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9297
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9297
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9289, metadata !DIExpression()), !dbg !9296
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9298
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9298
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9298
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9290, metadata !DIExpression()), !dbg !9296
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9299
  call void @llvm.dbg.value(metadata i32 %11, metadata !9291, metadata !DIExpression()), !dbg !9296
  %12 = and i32 %2, 48, !dbg !9300
  call void @llvm.dbg.value(metadata i32 %12, metadata !9292, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.value(metadata i32 %2, metadata !9293, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9296
  call void @llvm.dbg.value(metadata i32 %2, metadata !9294, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9296
  call void @llvm.dbg.value(metadata i32 %2, metadata !9295, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9296
  %13 = lshr i32 %2, 6, !dbg !9301
  %14 = and i32 %13, 1, !dbg !9301
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9302
  %15 = lshr i32 %2, 7, !dbg !9303
  %16 = and i32 %15, 3, !dbg !9303
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9304
  %17 = lshr i32 %2, 9, !dbg !9305
  %18 = and i32 %17, 3, !dbg !9305
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9306
  %19 = icmp eq i32 %12, 32, !dbg !9307
  br i1 %19, label %20, label %24, !dbg !9309

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9310
  br i1 %21, label %22, label %23, !dbg !9313

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9314
  br label %24, !dbg !9316

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9317
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9319
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9320
  ret void, !dbg !9321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9324, metadata !DIExpression()), !dbg !9326
  %2 = shl nuw i32 1, %0, !dbg !9327
  call void @llvm.dbg.value(metadata i32 %2, metadata !9325, metadata !DIExpression()), !dbg !9326
  ret i32 %2, !dbg !9328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9329 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9333, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.value(metadata i32 %1, metadata !9334, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.value(metadata i32 %2, metadata !9335, metadata !DIExpression()), !dbg !9336
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9337
  %5 = load volatile i32, i32* %4, align 4, !dbg !9337
  %6 = xor i32 %1, -1, !dbg !9337
  %7 = and i32 %5, %6, !dbg !9337
  %8 = mul i32 %2, %1, !dbg !9337
  %9 = or i32 %7, %8, !dbg !9337
  store volatile i32 %9, i32* %4, align 4, !dbg !9337
  ret void, !dbg !9338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9339 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9341, metadata !DIExpression()), !dbg !9344
  call void @llvm.dbg.value(metadata i32 %1, metadata !9342, metadata !DIExpression()), !dbg !9344
  call void @llvm.dbg.value(metadata i32 %2, metadata !9343, metadata !DIExpression()), !dbg !9344
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9345
  %5 = load volatile i32, i32* %4, align 4, !dbg !9345
  call void @llvm.dbg.value(metadata i32 %1, metadata !9143, metadata !DIExpression()) #25, !dbg !9346
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9348, !srcloc !9150
  call void @llvm.dbg.value(metadata i32 %6, metadata !9146, metadata !DIExpression()) #25, !dbg !9346
  call void @llvm.dbg.value(metadata i32 %6, metadata !9151, metadata !DIExpression()) #25, !dbg !9349
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9351, !range !4206
  %8 = shl nuw nsw i32 %7, 1, !dbg !9345
  %9 = shl i32 3, %8, !dbg !9345
  %10 = xor i32 %9, -1, !dbg !9345
  %11 = and i32 %5, %10, !dbg !9345
  call void @llvm.dbg.value(metadata i32 %1, metadata !9143, metadata !DIExpression()) #25, !dbg !9352
  call void @llvm.dbg.value(metadata i32 %6, metadata !9146, metadata !DIExpression()) #25, !dbg !9352
  call void @llvm.dbg.value(metadata i32 %6, metadata !9151, metadata !DIExpression()) #25, !dbg !9354
  %12 = shl i32 %2, %8, !dbg !9345
  %13 = or i32 %11, %12, !dbg !9345
  store volatile i32 %13, i32* %4, align 4, !dbg !9345
  ret void, !dbg !9356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9357 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9359, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i32 %1, metadata !9360, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i32 %2, metadata !9361, metadata !DIExpression()), !dbg !9362
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9363
  %5 = load volatile i32, i32* %4, align 4, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %1, metadata !9143, metadata !DIExpression()) #25, !dbg !9364
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9366, !srcloc !9150
  call void @llvm.dbg.value(metadata i32 %6, metadata !9146, metadata !DIExpression()) #25, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %6, metadata !9151, metadata !DIExpression()) #25, !dbg !9367
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9369, !range !4206
  %8 = shl nuw nsw i32 %7, 1, !dbg !9363
  %9 = shl i32 3, %8, !dbg !9363
  %10 = xor i32 %9, -1, !dbg !9363
  %11 = and i32 %5, %10, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %1, metadata !9143, metadata !DIExpression()) #25, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %6, metadata !9146, metadata !DIExpression()) #25, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %6, metadata !9151, metadata !DIExpression()) #25, !dbg !9372
  %12 = shl i32 %2, %8, !dbg !9363
  %13 = or i32 %11, %12, !dbg !9363
  store volatile i32 %13, i32* %4, align 4, !dbg !9363
  ret void, !dbg !9374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9375 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9377, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %1, metadata !9378, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %2, metadata !9379, metadata !DIExpression()), !dbg !9380
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9381
  %5 = load volatile i32, i32* %4, align 4, !dbg !9381
  call void @llvm.dbg.value(metadata i32 %1, metadata !9143, metadata !DIExpression()) #25, !dbg !9382
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9384, !srcloc !9150
  call void @llvm.dbg.value(metadata i32 %6, metadata !9146, metadata !DIExpression()) #25, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %6, metadata !9151, metadata !DIExpression()) #25, !dbg !9385
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9387, !range !4206
  %8 = shl nuw nsw i32 %7, 2, !dbg !9381
  %9 = shl i32 15, %8, !dbg !9381
  %10 = xor i32 %9, -1, !dbg !9381
  %11 = and i32 %5, %10, !dbg !9381
  call void @llvm.dbg.value(metadata i32 %1, metadata !9143, metadata !DIExpression()) #25, !dbg !9388
  call void @llvm.dbg.value(metadata i32 %6, metadata !9146, metadata !DIExpression()) #25, !dbg !9388
  call void @llvm.dbg.value(metadata i32 %6, metadata !9151, metadata !DIExpression()) #25, !dbg !9390
  %12 = shl i32 %2, %8, !dbg !9381
  %13 = or i32 %11, %12, !dbg !9381
  store volatile i32 %13, i32* %4, align 4, !dbg !9381
  ret void, !dbg !9392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9393 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9395, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i32 %1, metadata !9396, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i32 %2, metadata !9397, metadata !DIExpression()), !dbg !9398
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9399
  %5 = load volatile i32, i32* %4, align 4, !dbg !9399
  %6 = lshr i32 %1, 8, !dbg !9399
  call void @llvm.dbg.value(metadata i32 %6, metadata !9143, metadata !DIExpression()) #25, !dbg !9400
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9402, !srcloc !9150
  call void @llvm.dbg.value(metadata i32 %7, metadata !9146, metadata !DIExpression()) #25, !dbg !9400
  call void @llvm.dbg.value(metadata i32 %7, metadata !9151, metadata !DIExpression()) #25, !dbg !9403
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9405, !range !4206
  %9 = shl nuw nsw i32 %8, 2, !dbg !9399
  %10 = shl i32 15, %9, !dbg !9399
  %11 = xor i32 %10, -1, !dbg !9399
  %12 = and i32 %5, %11, !dbg !9399
  call void @llvm.dbg.value(metadata i32 %6, metadata !9143, metadata !DIExpression()) #25, !dbg !9406
  call void @llvm.dbg.value(metadata i32 %7, metadata !9146, metadata !DIExpression()) #25, !dbg !9406
  call void @llvm.dbg.value(metadata i32 %7, metadata !9151, metadata !DIExpression()) #25, !dbg !9408
  %13 = shl i32 %2, %9, !dbg !9399
  %14 = or i32 %12, %13, !dbg !9399
  store volatile i32 %14, i32* %4, align 4, !dbg !9399
  ret void, !dbg !9410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9411 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9413, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata i32 %1, metadata !9414, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata i32 %2, metadata !9415, metadata !DIExpression()), !dbg !9416
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9417
  %5 = load volatile i32, i32* %4, align 4, !dbg !9417
  call void @llvm.dbg.value(metadata i32 %1, metadata !9143, metadata !DIExpression()) #25, !dbg !9418
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9420, !srcloc !9150
  call void @llvm.dbg.value(metadata i32 %6, metadata !9146, metadata !DIExpression()) #25, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %6, metadata !9151, metadata !DIExpression()) #25, !dbg !9421
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9423, !range !4206
  %8 = shl nuw nsw i32 %7, 1, !dbg !9417
  %9 = shl i32 3, %8, !dbg !9417
  %10 = xor i32 %9, -1, !dbg !9417
  %11 = and i32 %5, %10, !dbg !9417
  call void @llvm.dbg.value(metadata i32 %1, metadata !9143, metadata !DIExpression()) #25, !dbg !9424
  call void @llvm.dbg.value(metadata i32 %6, metadata !9146, metadata !DIExpression()) #25, !dbg !9424
  call void @llvm.dbg.value(metadata i32 %6, metadata !9151, metadata !DIExpression()) #25, !dbg !9426
  %12 = shl i32 %2, %8, !dbg !9417
  %13 = or i32 %11, %12, !dbg !9417
  store volatile i32 %13, i32* %4, align 4, !dbg !9417
  ret void, !dbg !9428
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9429 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9431, metadata !DIExpression()), !dbg !9434
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9435
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9435
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9435
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9432, metadata !DIExpression()), !dbg !9434
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9436
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9437
  %6 = tail call fastcc zeroext i1 @device_is_ready.113() #26, !dbg !9438
  br i1 %6, label %7, label %11, !dbg !9440

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9441
  call void @llvm.dbg.value(metadata i32 %8, metadata !9433, metadata !DIExpression()), !dbg !9434
  %9 = icmp slt i32 %8, 0, !dbg !9442
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9444
  br label %11, !dbg !9444

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9434
  ret i32 %12, !dbg !9445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.113() unnamed_addr #1 !dbg !9446 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9450, metadata !DIExpression()), !dbg !9451
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9452, !srcloc !9454
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.114() #26, !dbg !9455
  ret i1 %1, !dbg !9456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9457 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9461, metadata !DIExpression()), !dbg !9466
  call void @llvm.dbg.value(metadata i8 1, metadata !9462, metadata !DIExpression()), !dbg !9466
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9467
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9467
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9467
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9463, metadata !DIExpression()), !dbg !9466
  call void @llvm.dbg.value(metadata i32 0, metadata !9464, metadata !DIExpression()), !dbg !9466
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9465, metadata !DIExpression()), !dbg !9466
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9468
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9471
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9472
  call void @llvm.dbg.value(metadata i32 %7, metadata !9464, metadata !DIExpression()), !dbg !9466
  ret i32 %7, !dbg !9473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.114() unnamed_addr #1 !dbg !9474 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9476, metadata !DIExpression()), !dbg !9477
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !9478
  ret i1 %1, !dbg !9479
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9484, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i32 %1, metadata !9485, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i32 %2, metadata !9486, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i32 %3, metadata !9487, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i32 0, metadata !9488, metadata !DIExpression()), !dbg !9492
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9493
  %5 = icmp eq i32 %3, 17, !dbg !9494
  br i1 %5, label %6, label %14, !dbg !9495

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9496
  call void @llvm.dbg.value(metadata i32 %7, metadata !9489, metadata !DIExpression()), !dbg !9497
  %8 = icmp eq i32 %7, 0, !dbg !9498
  %9 = shl nuw i32 1, %1, !dbg !9500
  br i1 %8, label %12, label %10, !dbg !9501

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9502
  br label %14, !dbg !9504

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9505
  br label %14, !dbg !9508

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9509
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9510 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9512, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.value(metadata i8* %1, metadata !9513, metadata !DIExpression()), !dbg !9516
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9517
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9517
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9517
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9514, metadata !DIExpression()), !dbg !9516
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9518
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9518
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9520
  %9 = icmp eq i32 %8, 0, !dbg !9520
  br i1 %9, label %12, label %10, !dbg !9521

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9522
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9524
  br label %12, !dbg !9525

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9526
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9528
  %15 = icmp eq i32 %14, 0, !dbg !9528
  br i1 %15, label %19, label %16, !dbg !9529

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9530
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9531
  store i8 %18, i8* %1, align 1, !dbg !9532
  br label %19, !dbg !9533

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9516
  ret i32 %20, !dbg !9534
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9535 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9537, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.value(metadata i8 %1, metadata !9538, metadata !DIExpression()), !dbg !9541
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9542
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9542
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9542
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9539, metadata !DIExpression()), !dbg !9541
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9543

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9544
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9547
  %10 = icmp eq i32 %9, 0, !dbg !9547
  br i1 %10, label %18, label %11, !dbg !9548

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9549, !srcloc !9556
  call void @llvm.dbg.value(metadata i32 undef, metadata !9552, metadata !DIExpression()) #25, !dbg !9557
  call void @llvm.dbg.value(metadata i32 undef, metadata !9553, metadata !DIExpression()) #25, !dbg !9557
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9541
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9558
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9560
  %15 = icmp eq i32 %14, 0, !dbg !9560
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9549
  br i1 %15, label %17, label %19, !dbg !9561

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9552, metadata !DIExpression()) #25, !dbg !9557
  call void @llvm.dbg.value(metadata i32 %16, metadata !9540, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.value(metadata i32 undef, metadata !9562, metadata !DIExpression()) #25, !dbg !9565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9567, !srcloc !9568
  br label %18, !dbg !9569

18:                                               ; preds = %17, %7
  br label %7, !dbg !9544, !llvm.loop !9570

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9549
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9572
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9573
  call void @llvm.dbg.value(metadata i32 %20, metadata !9562, metadata !DIExpression()) #25, !dbg !9574
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9576, !srcloc !9568
  ret void, !dbg !9577
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9578 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9580, metadata !DIExpression()), !dbg !9583
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9584
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9584
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9584
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9581, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32 0, metadata !9582, metadata !DIExpression()), !dbg !9583
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9585
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9585
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9587
  %8 = icmp ne i32 %7, 0, !dbg !9587
  %9 = zext i1 %8 to i32, !dbg !9588
  call void @llvm.dbg.value(metadata i32 %9, metadata !9582, metadata !DIExpression()), !dbg !9583
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9589
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9591
  %12 = icmp eq i32 %11, 0, !dbg !9591
  %13 = or i32 %9, 2, !dbg !9592
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9592
  call void @llvm.dbg.value(metadata i32 %14, metadata !9582, metadata !DIExpression()), !dbg !9583
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9593
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9595
  %17 = icmp eq i32 %16, 0, !dbg !9595
  %18 = or i32 %14, 4, !dbg !9596
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9596
  call void @llvm.dbg.value(metadata i32 %19, metadata !9582, metadata !DIExpression()), !dbg !9583
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9597
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9599
  %22 = icmp eq i32 %21, 0, !dbg !9599
  %23 = or i32 %19, 8, !dbg !9600
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9600
  call void @llvm.dbg.value(metadata i32 %24, metadata !9582, metadata !DIExpression()), !dbg !9583
  %25 = and i32 %24, 8, !dbg !9601
  %26 = icmp eq i32 %25, 0, !dbg !9601
  br i1 %26, label %29, label %27, !dbg !9603

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9604
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9606
  br label %29, !dbg !9607

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9608
  %31 = icmp eq i32 %30, 0, !dbg !9608
  br i1 %31, label %34, label %32, !dbg !9610

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9611
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9613
  br label %34, !dbg !9614

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9615
  %36 = icmp eq i32 %35, 0, !dbg !9615
  br i1 %36, label %39, label %37, !dbg !9617

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9618
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9620
  br label %39, !dbg !9621

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9622
  %41 = icmp eq i32 %40, 0, !dbg !9622
  br i1 %41, label %44, label %42, !dbg !9624

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9625
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9627
  br label %44, !dbg !9628

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9629
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9630
  ret i32 %24, !dbg !9631
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9632 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9634, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9635, metadata !DIExpression()), !dbg !9643
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9644
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9644
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9644
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9636, metadata !DIExpression()), !dbg !9643
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9645
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9645
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9645
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9637, metadata !DIExpression()), !dbg !9643
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9646
  %10 = load i8, i8* %9, align 4, !dbg !9646
  %11 = zext i8 %10 to i32, !dbg !9647
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9648
  call void @llvm.dbg.value(metadata i32 %12, metadata !9639, metadata !DIExpression()), !dbg !9643
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9649
  %14 = load i8, i8* %13, align 1, !dbg !9649
  %15 = zext i8 %14 to i32, !dbg !9650
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %16, metadata !9640, metadata !DIExpression()), !dbg !9643
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9652
  %18 = load i8, i8* %17, align 2, !dbg !9652
  %19 = zext i8 %18 to i32, !dbg !9653
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9654
  call void @llvm.dbg.value(metadata i32 %20, metadata !9641, metadata !DIExpression()), !dbg !9643
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9655
  %22 = load i8, i8* %21, align 1, !dbg !9655
  %23 = zext i8 %22 to i32, !dbg !9656
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9657
  call void @llvm.dbg.value(metadata i32 %24, metadata !9642, metadata !DIExpression()), !dbg !9643
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9658

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9660
  br i1 %26, label %69, label %27, !dbg !9662

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9663

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9664
  br i1 %29, label %65, label %30, !dbg !9664

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9666
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9643
  br i1 %31, label %38, label %34, !dbg !9668

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9669
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9669

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9672
  br i1 %37, label %38, label %69, !dbg !9673

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9674
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9675
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9676
  %41 = icmp eq i32 %12, %40, !dbg !9678
  br i1 %41, label %43, label %42, !dbg !9679

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9680
  br label %43, !dbg !9682

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9683
  %45 = icmp eq i32 %16, %44, !dbg !9685
  br i1 %45, label %47, label %46, !dbg !9686

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9687
  br label %47, !dbg !9689

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9690
  %49 = icmp eq i32 %20, %48, !dbg !9692
  br i1 %49, label %51, label %50, !dbg !9693

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9694
  br label %51, !dbg !9696

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9697
  %53 = icmp eq i32 %24, %52, !dbg !9699
  br i1 %53, label %55, label %54, !dbg !9700

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9701
  br label %55, !dbg !9703

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9704
  %57 = load i32, i32* %56, align 4, !dbg !9704
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9706
  %59 = load i32, i32* %58, align 4, !dbg !9706
  %60 = icmp eq i32 %57, %59, !dbg !9707
  br i1 %60, label %63, label %61, !dbg !9708

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9709
  %62 = load i32, i32* %56, align 4, !dbg !9711
  store i32 %62, i32* %58, align 4, !dbg !9712
  br label %63, !dbg !9713

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9714
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9715
  br label %69, !dbg !9716

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9664
  %67 = and i8 %66, 1, !dbg !9664
  %68 = icmp eq i8 %67, 0, !dbg !9664
  br i1 %68, label %30, label %69, !dbg !9664

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9643
  ret i32 %70, !dbg !9717
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9718 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9720, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9721, metadata !DIExpression()), !dbg !9723
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9724
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9724
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9724
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9722, metadata !DIExpression()), !dbg !9723
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9725
  %7 = load i32, i32* %6, align 4, !dbg !9725
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9726
  store i32 %7, i32* %8, align 4, !dbg !9727
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9728, !range !9729
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9730
  %11 = trunc i32 %10 to i8, !dbg !9730
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9731
  store i8 %11, i8* %12, align 4, !dbg !9732
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9733, !range !9734
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9735
  %15 = trunc i32 %14 to i8, !dbg !9735
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9736
  store i8 %15, i8* %16, align 1, !dbg !9737
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9738
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9739, !range !9729
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9740
  %20 = trunc i32 %19 to i8, !dbg !9740
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9741
  store i8 %20, i8* %21, align 2, !dbg !9742
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9743, !range !9744
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9745
  %24 = trunc i32 %23 to i8, !dbg !9745
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9746
  store i8 %24, i8* %25, align 1, !dbg !9747
  ret i32 0, !dbg !9748
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9749 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9753, metadata !DIExpression()), !dbg !9755
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9756
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9756
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9756
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9754, metadata !DIExpression()), !dbg !9755
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9757
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9757
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9758
  ret i32 %7, !dbg !9759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !9760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9764, metadata !DIExpression()), !dbg !9765
  %2 = icmp eq i32 %0, 1024, !dbg !9766
  %3 = select i1 %2, i32 2, i32 0, !dbg !9766
  %4 = icmp eq i32 %0, 1536, !dbg !9766
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9766
  ret i32 %5, !dbg !9767
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9770, metadata !DIExpression()), !dbg !9772
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9773
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9773
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9773
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9771, metadata !DIExpression()), !dbg !9772
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9774
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9774
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9775
  ret i32 %7, !dbg !9776
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #10 !dbg !9777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9781, metadata !DIExpression()), !dbg !9782
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9783
  %3 = icmp ult i32 %2, 4, !dbg !9783
  br i1 %3, label %4, label %7, !dbg !9783

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9783
  %6 = load i32, i32* %5, align 4, !dbg !9783
  br label %7, !dbg !9783

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9784
  ret i32 %8, !dbg !9786
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9787 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9789, metadata !DIExpression()), !dbg !9791
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9792
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9792
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9792
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9790, metadata !DIExpression()), !dbg !9791
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9793
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9793
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9794
  ret i32 %7, !dbg !9795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9800, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata i32 %1, metadata !9801, metadata !DIExpression()), !dbg !9802
  %3 = icmp eq i32 %0, 4096, !dbg !9803
  %4 = icmp eq i32 %1, 0, !dbg !9803
  %5 = select i1 %4, i32 4, i32 3, !dbg !9803
  %6 = select i1 %4, i32 3, i32 2, !dbg !9803
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9803
  ret i32 %7, !dbg !9804
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9805 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9807, metadata !DIExpression()), !dbg !9809
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9810
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9810
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9810
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9808, metadata !DIExpression()), !dbg !9809
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9811
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9811
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9812
  ret i32 %7, !dbg !9813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9818, metadata !DIExpression()), !dbg !9819
  %2 = icmp eq i32 %0, 768, !dbg !9820
  %3 = zext i1 %2 to i32, !dbg !9819
  ret i32 %3, !dbg !9822
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9823 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9828, metadata !DIExpression()), !dbg !9829
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9830
  %3 = load volatile i32, i32* %2, align 4, !dbg !9830
  %4 = and i32 %3, 768, !dbg !9830
  ret i32 %4, !dbg !9831
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9832 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9834, metadata !DIExpression()), !dbg !9835
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9836
  %3 = load volatile i32, i32* %2, align 4, !dbg !9836
  %4 = and i32 %3, 4096, !dbg !9836
  ret i32 %4, !dbg !9837
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9838 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9840, metadata !DIExpression()), !dbg !9841
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9842
  %3 = load volatile i32, i32* %2, align 4, !dbg !9842
  %4 = and i32 %3, 12288, !dbg !9842
  ret i32 %4, !dbg !9843
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9844 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9846, metadata !DIExpression()), !dbg !9847
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9848
  %3 = load volatile i32, i32* %2, align 4, !dbg !9848
  %4 = and i32 %3, 1536, !dbg !9848
  ret i32 %4, !dbg !9849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !9850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9854, metadata !DIExpression()), !dbg !9855
  %2 = icmp eq i32 %0, 2, !dbg !9856
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9856
  %4 = icmp eq i32 %0, 1, !dbg !9856
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9856
  ret i32 %5, !dbg !9857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !9858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9862, metadata !DIExpression()), !dbg !9863
  %2 = icmp ult i32 %0, 3, !dbg !9864
  br i1 %2, label %3, label %6, !dbg !9864

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9864
  %5 = load i32, i32* %4, align 4, !dbg !9864
  br label %6, !dbg !9864

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9865
  ret i32 %7, !dbg !9867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9872, metadata !DIExpression()), !dbg !9874
  call void @llvm.dbg.value(metadata i32 %1, metadata !9873, metadata !DIExpression()), !dbg !9874
  %3 = icmp eq i32 %0, 4, !dbg !9875
  %4 = icmp eq i32 %1, 0, !dbg !9875
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9875
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9875
  ret i32 %6, !dbg !9876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9881, metadata !DIExpression()), !dbg !9882
  %2 = icmp eq i32 %0, 1, !dbg !9883
  %3 = select i1 %2, i32 768, i32 0, !dbg !9882
  ret i32 %3, !dbg !9885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9886 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9890, metadata !DIExpression()), !dbg !9891
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9892
  %3 = load volatile i32, i32* %2, align 4, !dbg !9892
  %4 = and i32 %3, -8193, !dbg !9892
  store volatile i32 %4, i32* %2, align 4, !dbg !9892
  ret void, !dbg !9893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9898, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata i32 %1, metadata !9899, metadata !DIExpression()), !dbg !9901
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9902
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9902
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9902
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9900, metadata !DIExpression()), !dbg !9901
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9903
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9903
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9904
  ret void, !dbg !9905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9906 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9908, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i32 %1, metadata !9909, metadata !DIExpression()), !dbg !9911
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9912
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9912
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9912
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9910, metadata !DIExpression()), !dbg !9911
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9913
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9913
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9914
  ret void, !dbg !9915
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9916 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9918, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i32 %1, metadata !9919, metadata !DIExpression()), !dbg !9921
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9922
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9922
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9922
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9920, metadata !DIExpression()), !dbg !9921
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9923
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9923
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9924
  ret void, !dbg !9925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9926 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9928, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.value(metadata i32 %1, metadata !9929, metadata !DIExpression()), !dbg !9931
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9932
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9932
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9932
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9930, metadata !DIExpression()), !dbg !9931
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9933
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9933
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9934
  ret void, !dbg !9935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9936 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9938, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.value(metadata i32 %1, metadata !9939, metadata !DIExpression()), !dbg !9943
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9944
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9944
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9944
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9940, metadata !DIExpression()), !dbg !9943
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9945
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9945
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9945
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9941, metadata !DIExpression()), !dbg !9943
  %10 = bitcast i32* %3 to i8*, !dbg !9946
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !9946
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9947
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9947
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9951
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9951
  %15 = load i8*, i8** %14, align 4, !dbg !9951
  call void @llvm.dbg.value(metadata i32* %3, metadata !9942, metadata !DIExpression(DW_OP_deref)), !dbg !9943
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9952
  %17 = icmp slt i32 %16, 0, !dbg !9953
  br i1 %17, label %28, label %18, !dbg !9954

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9955
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9955
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9956
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9957
  %22 = load i32, i32* %3, align 4, !dbg !9958
  call void @llvm.dbg.value(metadata i32 %22, metadata !9942, metadata !DIExpression()), !dbg !9943
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9959
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9960
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 2, !dbg !9960
  %25 = load volatile i32, i32* %24, align 4, !dbg !9960
  %26 = icmp ugt i32 %25, 16, !dbg !9960
  br i1 %26, label %28, label %27, !dbg !9963

27:                                               ; preds = %18
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.120, i32 0, i32 0), i32 noundef 190) #27, !dbg !9964
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.121, i32 0, i32 0)) #27, !dbg !9964
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.120, i32 0, i32 0), i32 noundef 190) #27, !dbg !9964
  unreachable, !dbg !9964

28:                                               ; preds = %18, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !9966
  ret void, !dbg !9966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9967 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9969, metadata !DIExpression()), !dbg !9970
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9971
  %3 = load volatile i32, i32* %2, align 4, !dbg !9971
  %4 = or i32 %3, 8192, !dbg !9971
  store volatile i32 %4, i32* %2, align 4, !dbg !9971
  ret void, !dbg !9972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9973 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9975, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i8* %1, metadata !9976, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32* %2, metadata !9977, metadata !DIExpression()), !dbg !9979
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9980
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9980
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9980
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9978, metadata !DIExpression()), !dbg !9979
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9981
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9981
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9983
  br i1 %9, label %12, label %10, !dbg !9984

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !9985
  br label %12, !dbg !9986

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9979
  ret i32 %13, !dbg !9987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9988 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9992, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata i32 0, metadata !9993, metadata !DIExpression()), !dbg !9994
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9995
  %3 = load volatile i32, i32* %2, align 4, !dbg !9995
  %4 = and i32 %3, -32769, !dbg !9995
  store volatile i32 %4, i32* %2, align 4, !dbg !9995
  ret void, !dbg !9996
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9997 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10001, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata i32 %1, metadata !10002, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata i32 0, metadata !10003, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata i32 %2, metadata !10004, metadata !DIExpression()), !dbg !10005
  %4 = zext i32 %1 to i64, !dbg !10006
  %5 = mul nuw nsw i64 %4, 25, !dbg !10006
  %6 = zext i32 %2 to i64, !dbg !10006
  %7 = shl nuw nsw i64 %6, 2, !dbg !10006
  %8 = udiv i64 %5, %7, !dbg !10006
  %9 = trunc i64 %8 to i32, !dbg !10006
  %10 = udiv i32 %9, 100, !dbg !10006
  %11 = shl nuw nsw i32 %10, 4, !dbg !10006
  %12 = mul i32 %10, -100, !dbg !10006
  %13 = add i32 %12, %9, !dbg !10006
  %14 = shl i32 %13, 4, !dbg !10006
  %15 = add i32 %14, 50, !dbg !10006
  %16 = udiv i32 %15, 100, !dbg !10006
  %17 = and i32 %16, 240, !dbg !10006
  %18 = add nuw nsw i32 %17, %11, !dbg !10006
  %19 = and i32 %16, 15, !dbg !10006
  %20 = and i32 %18, 65520, !dbg !10009
  %21 = or i32 %20, %19, !dbg !10009
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10010
  store volatile i32 %21, i32* %22, align 4, !dbg !10011
  ret void, !dbg !10012
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10013 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10015, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i32 %1, metadata !10016, metadata !DIExpression()), !dbg !10017
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10018
  %4 = load volatile i32, i32* %3, align 4, !dbg !10018
  %5 = and i32 %4, -769, !dbg !10018
  %6 = or i32 %5, %1, !dbg !10018
  store volatile i32 %6, i32* %3, align 4, !dbg !10018
  ret void, !dbg !10019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10020 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10022, metadata !DIExpression()), !dbg !10024
  call void @llvm.dbg.value(metadata i32 %1, metadata !10023, metadata !DIExpression()), !dbg !10024
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10025
  %4 = load volatile i32, i32* %3, align 4, !dbg !10025
  %5 = and i32 %4, -4097, !dbg !10025
  %6 = or i32 %5, %1, !dbg !10025
  store volatile i32 %6, i32* %3, align 4, !dbg !10025
  ret void, !dbg !10026
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10027 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10029, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %1, metadata !10030, metadata !DIExpression()), !dbg !10031
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10032
  %4 = load volatile i32, i32* %3, align 4, !dbg !10032
  %5 = and i32 %4, -12289, !dbg !10032
  %6 = or i32 %5, %1, !dbg !10032
  store volatile i32 %6, i32* %3, align 4, !dbg !10032
  ret void, !dbg !10033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10034 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10036, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %1, metadata !10037, metadata !DIExpression()), !dbg !10038
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10039
  %4 = load volatile i32, i32* %3, align 4, !dbg !10039
  %5 = and i32 %4, -1537, !dbg !10039
  %6 = or i32 %5, %1, !dbg !10039
  store volatile i32 %6, i32* %3, align 4, !dbg !10039
  ret void, !dbg !10040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10041 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10043, metadata !DIExpression()), !dbg !10044
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10045
  %3 = load volatile i32, i32* %2, align 4, !dbg !10045
  %4 = lshr i32 %3, 3, !dbg !10046
  %5 = and i32 %4, 1, !dbg !10046
  ret i32 %5, !dbg !10047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10048 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10050, metadata !DIExpression()), !dbg !10051
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10052
  %3 = load volatile i32, i32* %2, align 4, !dbg !10052
  %4 = and i32 %3, 1, !dbg !10052
  ret i32 %4, !dbg !10053
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10054 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10056, metadata !DIExpression()), !dbg !10057
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10058
  %3 = load volatile i32, i32* %2, align 4, !dbg !10058
  %4 = lshr i32 %3, 1, !dbg !10059
  %5 = and i32 %4, 1, !dbg !10059
  ret i32 %5, !dbg !10060
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10061 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10063, metadata !DIExpression()), !dbg !10064
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10065
  %3 = load volatile i32, i32* %2, align 4, !dbg !10065
  %4 = lshr i32 %3, 8, !dbg !10066
  %5 = and i32 %4, 1, !dbg !10066
  ret i32 %5, !dbg !10067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10068 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10070, metadata !DIExpression()), !dbg !10071
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10072
  store volatile i32 -257, i32* %2, align 4, !dbg !10072
  ret void, !dbg !10073
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10074 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10076, metadata !DIExpression()), !dbg !10078
  %3 = bitcast i32* %2 to i8*, !dbg !10079
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10079
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10077, metadata !DIExpression()), !dbg !10080
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10081
  %5 = load volatile i32, i32* %4, align 4, !dbg !10081
  store volatile i32 %5, i32* %2, align 4, !dbg !10082
  %6 = load volatile i32, i32* %2, align 4, !dbg !10083
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10084
  %8 = load volatile i32, i32* %7, align 4, !dbg !10084
  store volatile i32 %8, i32* %2, align 4, !dbg !10085
  %9 = load volatile i32, i32* %2, align 4, !dbg !10086
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10087
  ret void, !dbg !10087
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10088 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10090, metadata !DIExpression()), !dbg !10092
  %3 = bitcast i32* %2 to i8*, !dbg !10093
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10093
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10091, metadata !DIExpression()), !dbg !10094
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10095
  %5 = load volatile i32, i32* %4, align 4, !dbg !10095
  store volatile i32 %5, i32* %2, align 4, !dbg !10096
  %6 = load volatile i32, i32* %2, align 4, !dbg !10097
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10098
  %8 = load volatile i32, i32* %7, align 4, !dbg !10098
  store volatile i32 %8, i32* %2, align 4, !dbg !10099
  %9 = load volatile i32, i32* %2, align 4, !dbg !10100
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10101
  ret void, !dbg !10101
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10102 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10104, metadata !DIExpression()), !dbg !10106
  %3 = bitcast i32* %2 to i8*, !dbg !10107
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10107
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10105, metadata !DIExpression()), !dbg !10108
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10109
  %5 = load volatile i32, i32* %4, align 4, !dbg !10109
  store volatile i32 %5, i32* %2, align 4, !dbg !10110
  %6 = load volatile i32, i32* %2, align 4, !dbg !10111
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10112
  %8 = load volatile i32, i32* %7, align 4, !dbg !10112
  store volatile i32 %8, i32* %2, align 4, !dbg !10113
  %9 = load volatile i32, i32* %2, align 4, !dbg !10114
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10115
  ret void, !dbg !10115
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10116 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10118, metadata !DIExpression()), !dbg !10120
  %3 = bitcast i32* %2 to i8*, !dbg !10121
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10121
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10119, metadata !DIExpression()), !dbg !10122
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10123
  %5 = load volatile i32, i32* %4, align 4, !dbg !10123
  store volatile i32 %5, i32* %2, align 4, !dbg !10124
  %6 = load volatile i32, i32* %2, align 4, !dbg !10125
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10126
  %8 = load volatile i32, i32* %7, align 4, !dbg !10126
  store volatile i32 %8, i32* %2, align 4, !dbg !10127
  %9 = load volatile i32, i32* %2, align 4, !dbg !10128
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10129
  ret void, !dbg !10129
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10130 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10132, metadata !DIExpression()), !dbg !10133
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10134
  %3 = load volatile i32, i32* %2, align 4, !dbg !10134
  %4 = lshr i32 %3, 7, !dbg !10135
  %5 = and i32 %4, 1, !dbg !10135
  ret i32 %5, !dbg !10136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10137 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10141, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i8 %1, metadata !10142, metadata !DIExpression()), !dbg !10143
  %3 = zext i8 %1 to i32, !dbg !10144
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10145
  store volatile i32 %3, i32* %4, align 4, !dbg !10146
  ret void, !dbg !10147
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10148 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10150, metadata !DIExpression()), !dbg !10151
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10152
  %3 = load volatile i32, i32* %2, align 4, !dbg !10152
  %4 = lshr i32 %3, 5, !dbg !10153
  %5 = and i32 %4, 1, !dbg !10153
  ret i32 %5, !dbg !10154
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10155 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10159, metadata !DIExpression()), !dbg !10160
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10161
  %3 = load volatile i32, i32* %2, align 4, !dbg !10161
  %4 = trunc i32 %3 to i8, !dbg !10162
  ret i8 %4, !dbg !10163
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10164 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10166, metadata !DIExpression()), !dbg !10172
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10173
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10173
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10173
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10167, metadata !DIExpression()), !dbg !10172
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10174
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10174
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10174
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10168, metadata !DIExpression()), !dbg !10172
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10175
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10176
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10176
  %10 = tail call fastcc zeroext i1 @device_is_ready.125(%struct.device* noundef %9) #26, !dbg !10178
  br i1 %10, label %11, label %49, !dbg !10179

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10180
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10181
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10181
  %15 = load i8*, i8** %14, align 4, !dbg !10181
  %16 = tail call fastcc i32 @clock_control_on.126(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10182
  call void @llvm.dbg.value(metadata i32 %16, metadata !10171, metadata !DIExpression()), !dbg !10172
  %17 = icmp eq i32 %16, 0, !dbg !10183
  br i1 %17, label %18, label %49, !dbg !10185

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10186
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10186
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10187
  call void @llvm.dbg.value(metadata i32 %21, metadata !10171, metadata !DIExpression()), !dbg !10172
  %22 = icmp slt i32 %21, 0, !dbg !10188
  br i1 %22, label %49, label %23, !dbg !10190

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10191
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10191
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10192
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10193
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10194
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10195
  %28 = load i32, i32* %27, align 4, !dbg !10195
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10197

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10169, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.value(metadata i32 4096, metadata !10170, metadata !DIExpression()), !dbg !10172
  br label %31, !dbg !10198

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10169, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.value(metadata i32 0, metadata !10170, metadata !DIExpression()), !dbg !10172
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10201
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10201
  call void @llvm.dbg.value(metadata i32 %33, metadata !10170, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.value(metadata i32 %32, metadata !10169, metadata !DIExpression()), !dbg !10172
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10202
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10203
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10204
  %36 = load i8, i8* %35, align 4, !dbg !10204, !range !6724
  %37 = icmp eq i8 %36, 0, !dbg !10204
  br i1 %37, label %39, label %38, !dbg !10206

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10207
  br label %39, !dbg !10209

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10210
  %41 = load i32, i32* %40, align 4, !dbg !10210
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10211
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10212
  %43 = load i8, i8* %42, align 4, !dbg !10212, !range !6724
  %44 = icmp eq i8 %43, 0, !dbg !10212
  br i1 %44, label %47, label %45, !dbg !10214

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10215
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10217
  br label %47, !dbg !10218

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10219
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10220
  br label %49, !dbg !10221

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10172
  ret i32 %50, !dbg !10222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10223 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10227, metadata !DIExpression()), !dbg !10231
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10232
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10232
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10232
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10228, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10229, metadata !DIExpression()), !dbg !10231
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10233
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10234
  ret void, !dbg !10235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.125(%struct.device* noundef %0) unnamed_addr #1 !dbg !10236 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10240, metadata !DIExpression()), !dbg !10241
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10242, !srcloc !10244
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.127(%struct.device* noundef %0) #26, !dbg !10245
  ret i1 %2, !dbg !10246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.126(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10247 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10249, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i8* %1, metadata !10250, metadata !DIExpression()), !dbg !10252
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10253
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10253
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10253
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10251, metadata !DIExpression()), !dbg !10252
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10254
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10254
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !10255
  ret i32 %8, !dbg !10256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10257 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10261, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i8 0, metadata !10262, metadata !DIExpression()), !dbg !10265
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10266
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10266
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10264, metadata !DIExpression(DW_OP_deref)), !dbg !10265
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !10267
  call void @llvm.dbg.value(metadata i32 %4, metadata !10263, metadata !DIExpression()), !dbg !10265
  %5 = icmp slt i32 %4, 0, !dbg !10268
  br i1 %5, label %9, label %6, !dbg !10270

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10271
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10264, metadata !DIExpression()), !dbg !10265
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10272
  br label %9, !dbg !10273

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10274
  ret i32 %10, !dbg !10274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10275 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10277, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i32 12, metadata !10278, metadata !DIExpression()), !dbg !10281
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10282

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10283, metadata !DIExpression()) #25, !dbg !10289
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10292, !srcloc !10293
  call void @llvm.dbg.value(metadata i32 %4, metadata !10288, metadata !DIExpression()) #25, !dbg !10289
  %5 = or i32 %4, 12, !dbg !10294
  call void @llvm.dbg.value(metadata i32 %5, metadata !10279, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i32 %5, metadata !10296, metadata !DIExpression()) #25, !dbg !10303
  call void @llvm.dbg.value(metadata i32* %2, metadata !10301, metadata !DIExpression()) #25, !dbg !10303
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10305, !srcloc !10306
  call void @llvm.dbg.value(metadata i32 %6, metadata !10302, metadata !DIExpression()) #25, !dbg !10303
  %7 = icmp eq i32 %6, 0, !dbg !10282
  br i1 %7, label %8, label %3, !dbg !10294, !llvm.loop !10307

8:                                                ; preds = %3
  ret void, !dbg !10308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10309 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10311, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata i32 %1, metadata !10312, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata i32 %2, metadata !10313, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata i32 0, metadata !10314, metadata !DIExpression()), !dbg !10315
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10316
  %5 = load volatile i32, i32* %4, align 4, !dbg !10316
  %6 = and i32 %5, -5633, !dbg !10316
  %7 = or i32 %2, %1, !dbg !10316
  %8 = or i32 %7, %6, !dbg !10316
  store volatile i32 %8, i32* %4, align 4, !dbg !10316
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10317
  %10 = load volatile i32, i32* %9, align 4, !dbg !10317
  %11 = and i32 %10, -12289, !dbg !10317
  store volatile i32 %11, i32* %9, align 4, !dbg !10317
  ret void, !dbg !10318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10319 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10321, metadata !DIExpression()), !dbg !10322
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10323
  %3 = load volatile i32, i32* %2, align 4, !dbg !10323
  %4 = or i32 %3, 8, !dbg !10323
  store volatile i32 %4, i32* %2, align 4, !dbg !10323
  ret void, !dbg !10324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10329, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10330, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i32 0, metadata !10331, metadata !DIExpression()), !dbg !10332
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10333
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10333
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10334
  %5 = load i8, i8* %4, align 4, !dbg !10334
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !10335
  ret i32 %6, !dbg !10336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.127(%struct.device* noundef %0) unnamed_addr #1 !dbg !10337 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10339, metadata !DIExpression()), !dbg !10340
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10341
  ret i1 %2, !dbg !10342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10343 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10345, metadata !DIExpression()), !dbg !10346
  tail call fastcc void @__NVIC_SetPriority.129() #26, !dbg !10347
  store i32 8399, i32* @last_load, align 4, !dbg !10348
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10349
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10350
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10351
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10352
  %3 = or i32 %2, 7, !dbg !10352
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10352
  ret i32 0, !dbg !10353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.129() unnamed_addr #15 !dbg !10354 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10356, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.value(metadata i32 1, metadata !10357, metadata !DIExpression()), !dbg !10358
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10359
  ret void, !dbg !10362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10363 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10365, metadata !DIExpression()), !dbg !10367
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10368
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10369
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10370
  %5 = add i32 %4, %3, !dbg !10370
  store i32 %5, i32* @cycle_count, align 4, !dbg !10370
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10371
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10372
  %7 = sub i32 %5, %6, !dbg !10375
  %8 = udiv i32 %7, 8400, !dbg !10376
  call void @llvm.dbg.value(metadata i32 %8, metadata !10366, metadata !DIExpression()), !dbg !10367
  %9 = mul nuw i32 %8, 8400, !dbg !10377
  %10 = add i32 %9, %6, !dbg !10378
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10378
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !10379
  tail call void @z_arm_int_exit() #27, !dbg !10380
  ret void, !dbg !10381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10382 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10387
  call void @llvm.dbg.value(metadata i32 %1, metadata !10384, metadata !DIExpression()), !dbg !10388
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10389
  call void @llvm.dbg.value(metadata i32 %2, metadata !10385, metadata !DIExpression()), !dbg !10388
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10390
  call void @llvm.dbg.value(metadata i32 %3, metadata !10386, metadata !DIExpression()), !dbg !10388
  %4 = and i32 %2, 65536, !dbg !10391
  %5 = icmp ne i32 %4, 0, !dbg !10391
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10393
  %8 = load i32, i32* @last_load, align 4, !dbg !10388
  br i1 %7, label %9, label %13, !dbg !10393

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10394
  %11 = add i32 %10, %8, !dbg !10394
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10394
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10396
  br label %13, !dbg !10397

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10398
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10399
  %16 = add i32 %14, %15, !dbg !10400
  ret i32 %16, !dbg !10401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10406, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata i1 %1, metadata !10407, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10419
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10420
  br i1 %4, label %5, label %8, !dbg !10420

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10422
  %7 = and i32 %6, -2, !dbg !10422
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10422
  store i32 -16777216, i32* @last_load, align 4, !dbg !10424
  br label %60, !dbg !10425

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10426
  call void @llvm.dbg.value(metadata i32 %9, metadata !10411, metadata !DIExpression()), !dbg !10419
  br i1 %3, label %18, label %10, !dbg !10427

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10427
  call void @llvm.dbg.value(metadata i32 undef, metadata !10406, metadata !DIExpression()), !dbg !10419
  %12 = icmp slt i32 %11, 1, !dbg !10428
  br i1 %12, label %18, label %13, !dbg !10428

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10428
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10428
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10428
  %17 = add nuw nsw i32 %16, 8399, !dbg !10428
  br label %18, !dbg !10428

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10406, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10429, metadata !DIExpression()) #25, !dbg !10436
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10438, !srcloc !10444
  call void @llvm.dbg.value(metadata i32 undef, metadata !10441, metadata !DIExpression()) #25, !dbg !10445
  call void @llvm.dbg.value(metadata i32 undef, metadata !10442, metadata !DIExpression()) #25, !dbg !10445
  call void @llvm.dbg.value(metadata i32 undef, metadata !10435, metadata !DIExpression()) #25, !dbg !10436
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10446
  br i1 %21, label %23, label %22, !dbg !10449

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #27, !dbg !10450
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.133, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #27, !dbg !10450
  unreachable, !dbg !10450

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %24, metadata !10441, metadata !DIExpression()) #25, !dbg !10445
  call void @llvm.dbg.value(metadata i32 %24, metadata !10435, metadata !DIExpression()) #25, !dbg !10436
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10452
  call void @llvm.dbg.value(metadata i32 %24, metadata !10412, metadata !DIExpression()), !dbg !10419
  %25 = tail call fastcc i32 @elapsed() #26, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %25, metadata !10417, metadata !DIExpression()), !dbg !10419
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10454
  call void @llvm.dbg.value(metadata i32 %26, metadata !10409, metadata !DIExpression()), !dbg !10419
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10455
  %28 = add i32 %27, %25, !dbg !10455
  store i32 %28, i32* @cycle_count, align 4, !dbg !10455
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10456
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10457
  %30 = sub i32 %28, %29, !dbg !10458
  call void @llvm.dbg.value(metadata i32 %30, metadata !10418, metadata !DIExpression()), !dbg !10419
  %31 = icmp slt i32 %30, 0, !dbg !10459
  br i1 %31, label %41, label %32, !dbg !10461

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10408, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata i32 undef, metadata !10408, metadata !DIExpression()), !dbg !10419
  %33 = add nuw i32 %19, %30, !dbg !10462
  %34 = urem i32 %33, 8400, !dbg !10464
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10408, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10419
  %35 = sub nuw nsw i32 %19, %34, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %35, metadata !10408, metadata !DIExpression()), !dbg !10419
  %36 = icmp ugt i32 %35, 1024, !dbg !10466
  br i1 %36, label %37, label %39, !dbg !10466

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10408, metadata !DIExpression()), !dbg !10419
  %38 = icmp ugt i32 %35, 16766400, !dbg !10467
  br i1 %38, label %41, label %39, !dbg !10469

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10470
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %43, metadata !10410, metadata !DIExpression()), !dbg !10419
  %44 = add nsw i32 %42, -1, !dbg !10472
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10473
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10474
  %45 = icmp ult i32 %26, %43, !dbg !10475
  br i1 %45, label %46, label %51, !dbg !10477

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10478
  %48 = add i32 %26, %9, !dbg !10480
  %49 = sub i32 %48, %43, !dbg !10481
  %50 = add i32 %49, %47, !dbg !10478
  br label %55, !dbg !10482

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10483
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10485
  %54 = add i32 %52, %53, !dbg !10485
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10486
  store i32 %56, i32* @cycle_count, align 4, !dbg !10486
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()) #25, !dbg !10493
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10492, metadata !DIExpression()) #25, !dbg !10493
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10495
  br i1 %57, label %59, label %58, !dbg !10498

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #27, !dbg !10499
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.135, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10499
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #27, !dbg !10499
  unreachable, !dbg !10499

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10487, metadata !DIExpression()) #25, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %24, metadata !10501, metadata !DIExpression()) #25, !dbg !10504
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !10506, !srcloc !10507
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10508
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10509 {
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10429, metadata !DIExpression()) #25, !dbg !10513
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10515, !srcloc !10444
  call void @llvm.dbg.value(metadata i32 undef, metadata !10441, metadata !DIExpression()) #25, !dbg !10517
  call void @llvm.dbg.value(metadata i32 undef, metadata !10442, metadata !DIExpression()) #25, !dbg !10517
  call void @llvm.dbg.value(metadata i32 undef, metadata !10435, metadata !DIExpression()) #25, !dbg !10513
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10518
  br i1 %2, label %4, label %3, !dbg !10519

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #27, !dbg !10520
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.133, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10520
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #27, !dbg !10520
  unreachable, !dbg !10520

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10441, metadata !DIExpression()) #25, !dbg !10517
  call void @llvm.dbg.value(metadata i32 undef, metadata !10435, metadata !DIExpression()) #25, !dbg !10513
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10521
  call void @llvm.dbg.value(metadata i32 undef, metadata !10511, metadata !DIExpression()), !dbg !10522
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !10523
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10524
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10525
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10512, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10522
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()) #25, !dbg !10526
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10492, metadata !DIExpression()) #25, !dbg !10526
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10528
  br i1 %8, label %10, label %9, !dbg !10529

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #27, !dbg !10530
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.135, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10530
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #27, !dbg !10530
  unreachable, !dbg !10530

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10531
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10512, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10522
  %12 = sub i32 %11, %7, !dbg !10532
  call void @llvm.dbg.value(metadata i32 %12, metadata !10512, metadata !DIExpression()), !dbg !10522
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10515
  call void @llvm.dbg.value(metadata i32 %13, metadata !10441, metadata !DIExpression()) #25, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %13, metadata !10435, metadata !DIExpression()) #25, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %13, metadata !10511, metadata !DIExpression()), !dbg !10522
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()) #25, !dbg !10526
  call void @llvm.dbg.value(metadata i32 undef, metadata !10501, metadata !DIExpression()) #25, !dbg !10533
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !10535, !srcloc !10507
  %14 = udiv i32 %12, 8400, !dbg !10536
  ret i32 %14, !dbg !10537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10538 {
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10429, metadata !DIExpression()) #25, !dbg !10542
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10544, !srcloc !10444
  call void @llvm.dbg.value(metadata i32 undef, metadata !10441, metadata !DIExpression()) #25, !dbg !10546
  call void @llvm.dbg.value(metadata i32 undef, metadata !10442, metadata !DIExpression()) #25, !dbg !10546
  call void @llvm.dbg.value(metadata i32 undef, metadata !10435, metadata !DIExpression()) #25, !dbg !10542
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10547
  br i1 %2, label %4, label %3, !dbg !10548

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #27, !dbg !10549
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.133, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10549
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #27, !dbg !10549
  unreachable, !dbg !10549

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10441, metadata !DIExpression()) #25, !dbg !10546
  call void @llvm.dbg.value(metadata i32 undef, metadata !10435, metadata !DIExpression()) #25, !dbg !10542
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10550
  call void @llvm.dbg.value(metadata i32 undef, metadata !10540, metadata !DIExpression()), !dbg !10551
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !10552
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10553
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10541, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10551
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()) #25, !dbg !10554
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10492, metadata !DIExpression()) #25, !dbg !10554
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10556
  br i1 %7, label %9, label %8, !dbg !10557

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #27, !dbg !10558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.135, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #27, !dbg !10558
  unreachable, !dbg !10558

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %10, metadata !10541, metadata !DIExpression()), !dbg !10551
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10544
  call void @llvm.dbg.value(metadata i32 %11, metadata !10441, metadata !DIExpression()) #25, !dbg !10546
  call void @llvm.dbg.value(metadata i32 %11, metadata !10435, metadata !DIExpression()) #25, !dbg !10542
  call void @llvm.dbg.value(metadata i32 %11, metadata !10540, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()) #25, !dbg !10554
  call void @llvm.dbg.value(metadata i32 undef, metadata !10501, metadata !DIExpression()) #25, !dbg !10560
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !10562, !srcloc !10507
  ret i32 %10, !dbg !10563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10564 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10565
  %2 = icmp eq i32 %1, -16777216, !dbg !10567
  br i1 %2, label %3, label %6, !dbg !10568

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10569
  %5 = or i32 %4, 1, !dbg !10569
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10569
  br label %6, !dbg !10571

6:                                                ; preds = %3, %0
  ret void, !dbg !10572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10573 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10574
  %2 = and i32 %1, -2, !dbg !10574
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10574
  ret void, !dbg !10575
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10576 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10602, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i8 %1, metadata !10603, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10604, metadata !DIExpression()), !dbg !10605
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10606
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10606
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10605
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10607
  %8 = load i8, i8* %6, align 4, !dbg !10608
  %9 = zext i8 %8 to i32, !dbg !10609
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10609
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10610
  br i1 %11, label %18, label %24, !dbg !10611

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10605
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10607
  %14 = load i8, i8* %6, align 4, !dbg !10608
  %15 = zext i8 %14 to i32, !dbg !10609
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10609
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10610
  br i1 %17, label %18, label %24, !dbg !10611, !llvm.loop !10612

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10614
  %21 = load i8, i8* %20, align 1, !dbg !10614
  %22 = icmp eq i8 %21, %1, !dbg !10617
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10618
  br i1 %22, label %24, label %12, !dbg !10619

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10605
  ret i32 %25, !dbg !10620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10621 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10632, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.value(metadata i8 %1, metadata !10633, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.value(metadata i32 %2, metadata !10634, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.value(metadata i32 0, metadata !10637, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.value(metadata i32 0, metadata !10638, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.value(metadata i8 0, metadata !10639, metadata !DIExpression()), !dbg !10649
  %4 = icmp eq i8 %1, 0, !dbg !10650
  br i1 %4, label %35, label %5, !dbg !10651

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10650
  br label %9, !dbg !10651

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10639, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.value(metadata i32 %29, metadata !10637, metadata !DIExpression()), !dbg !10648
  %8 = icmp eq i32 %34, %6, !dbg !10650
  br i1 %8, label %35, label %9, !dbg !10651, !llvm.loop !10652

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10639, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.value(metadata i32 %11, metadata !10637, metadata !DIExpression()), !dbg !10648
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10654
  %13 = load i32, i32* %12, align 4, !dbg !10654
  call void @llvm.dbg.value(metadata i32 %13, metadata !10636, metadata !DIExpression()), !dbg !10648
  %14 = and i32 %13, 31, !dbg !10655
  %15 = icmp ult i32 %14, 16, !dbg !10656
  br i1 %15, label %16, label %20, !dbg !10657

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10658
  %18 = load i32, i32* %17, align 4, !dbg !10658
  %19 = or i32 %18, 32, !dbg !10660
  call void @llvm.dbg.value(metadata i32 %19, metadata !10637, metadata !DIExpression()), !dbg !10648
  br label %28, !dbg !10661

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10662

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10663
  %23 = load i32, i32* %22, align 4, !dbg !10663
  call void @llvm.dbg.value(metadata i32 %23, metadata !10641, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10664
  %24 = lshr i32 %23, 7, !dbg !10665
  %25 = and i32 %24, 16, !dbg !10665
  %26 = or i32 %25, %23, !dbg !10665
  call void @llvm.dbg.value(metadata i32 %26, metadata !10637, metadata !DIExpression()), !dbg !10648
  br label %28, !dbg !10666

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10648
  call void @llvm.dbg.value(metadata i32 %29, metadata !10637, metadata !DIExpression()), !dbg !10648
  %30 = lshr i32 %13, 5, !dbg !10667
  %31 = and i32 %30, 255, !dbg !10667
  call void @llvm.dbg.value(metadata i32 %31, metadata !10635, metadata !DIExpression()), !dbg !10648
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10668
  call void @llvm.dbg.value(metadata i32 %32, metadata !10638, metadata !DIExpression()), !dbg !10648
  %33 = icmp slt i32 %32, 0, !dbg !10669
  %34 = add nuw nsw i32 %10, 1, !dbg !10671
  call void @llvm.dbg.value(metadata i32 %34, metadata !10639, metadata !DIExpression()), !dbg !10649
  br i1 %33, label %35, label %7, !dbg !10672

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10678, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata i32 %1, metadata !10679, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata i32 %2, metadata !10680, metadata !DIExpression()), !dbg !10682
  %4 = icmp ugt i32 %0, 175, !dbg !10683
  br i1 %4, label %16, label %5, !dbg !10685

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10686
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10687
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10687
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10681, metadata !DIExpression()), !dbg !10682
  %9 = add nsw i32 %6, -8, !dbg !10688
  %10 = icmp ult i32 %9, 3, !dbg !10688
  br i1 %10, label %16, label %11, !dbg !10690

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.140(%struct.device* noundef %8) #26, !dbg !10691
  br i1 %12, label %13, label %16, !dbg !10692

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10693
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !10694
  br label %16, !dbg !10695

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10682
  ret i32 %17, !dbg !10696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.140(%struct.device* noundef %0) unnamed_addr #1 !dbg !10697 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10701, metadata !DIExpression()), !dbg !10702
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10703, !srcloc !10705
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.141(%struct.device* noundef %0) #26, !dbg !10706
  ret i1 %2, !dbg !10707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.141(%struct.device* noundef %0) unnamed_addr #1 !dbg !10708 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10710, metadata !DIExpression()), !dbg !10711
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10712
  ret i1 %2, !dbg !10713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !10714 {
  ret void, !dbg !10715
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10716 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10718, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata i32 0, metadata !10719, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata i32 2, metadata !10720, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata i32 0, metadata !10721, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata i32 2, metadata !10722, metadata !DIExpression()), !dbg !10723
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10724
  %2 = and i32 %1, 12, !dbg !10725
  call void @llvm.dbg.value(metadata i32 %2, metadata !10718, metadata !DIExpression()), !dbg !10723
  %3 = icmp eq i32 %2, 8, !dbg !10726
  br i1 %3, label %4, label %18, !dbg !10726

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10727
  call void @llvm.dbg.value(metadata i32 %5, metadata !10721, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10723
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10729
  %7 = and i32 %6, 63, !dbg !10730
  call void @llvm.dbg.value(metadata i32 %7, metadata !10722, metadata !DIExpression()), !dbg !10723
  %8 = udiv i32 16000000, %7, !dbg !10731
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10731
  %10 = lshr i32 %9, 6, !dbg !10731
  %11 = and i32 %10, 511, !dbg !10731
  %12 = mul i32 %11, %8, !dbg !10731
  call void @llvm.dbg.value(metadata i32 %12, metadata !10719, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata i32 %12, metadata !10719, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata i32 %12, metadata !10719, metadata !DIExpression()), !dbg !10723
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10733
  %14 = lshr i32 %13, 15, !dbg !10734
  %15 = and i32 %14, 6, !dbg !10734
  %16 = add nuw nsw i32 %15, 2, !dbg !10734
  call void @llvm.dbg.value(metadata i32 %16, metadata !10720, metadata !DIExpression()), !dbg !10723
  %17 = udiv i32 %12, %16, !dbg !10735
  br label %18, !dbg !10736

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10737
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10738
  %21 = lshr i32 %20, 4, !dbg !10739
  %22 = and i32 %21, 15, !dbg !10739
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10740
  %24 = load i8, i8* %23, align 1, !dbg !10740
  %25 = zext i8 %24 to i32, !dbg !10740
  call void @llvm.dbg.value(metadata i32 %25, metadata !10718, metadata !DIExpression()), !dbg !10723
  %26 = lshr i32 %19, %25, !dbg !10741
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10741
  ret void, !dbg !10742
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10743 {
  ret i32 0, !dbg !10748
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10749 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10775, metadata !DIExpression()), !dbg !10786
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10787
  br i1 %3, label %311, label %4, !dbg !10789

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10790
  %6 = load i32, i32* %5, align 4, !dbg !10790
  %7 = and i32 %6, 1, !dbg !10792
  %8 = icmp eq i32 %7, 0, !dbg !10793
  br i1 %8, label %66, label %9, !dbg !10794

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10795
  %11 = and i32 %10, 12, !dbg !10795
  %12 = icmp eq i32 %11, 4, !dbg !10798
  br i1 %12, label %21, label %13, !dbg !10799

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10800
  %15 = and i32 %14, 12, !dbg !10800
  %16 = icmp eq i32 %15, 8, !dbg !10801
  br i1 %16, label %17, label %29, !dbg !10802

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10803
  %19 = and i32 %18, 4194304, !dbg !10804
  %20 = icmp eq i32 %19, 0, !dbg !10805
  br i1 %20, label %29, label %21, !dbg !10806

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10807
  %23 = and i32 %22, 131072, !dbg !10807
  %24 = icmp eq i32 %23, 0, !dbg !10807
  br i1 %24, label %66, label %25, !dbg !10810

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10811
  %27 = load i32, i32* %26, align 4, !dbg !10811
  %28 = icmp eq i32 %27, 0, !dbg !10812
  br i1 %28, label %311, label %66, !dbg !10813

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10814
  %31 = load i32, i32* %30, align 4, !dbg !10814
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10818

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10819
  %34 = or i32 %33, 65536, !dbg !10819
  br label %45, !dbg !10819

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10821
  %37 = or i32 %36, 262144, !dbg !10821
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10821
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10821
  %39 = or i32 %38, 65536, !dbg !10821
  br label %45, !dbg !10821

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10824
  %42 = and i32 %41, -65537, !dbg !10824
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10824
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10824
  %44 = and i32 %43, -262145, !dbg !10824
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10826
  %47 = load i32, i32* %30, align 4, !dbg !10827
  %48 = icmp eq i32 %47, 0, !dbg !10829
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !10830
  call void @llvm.dbg.value(metadata i32 %49, metadata !10776, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.value(metadata i32 %49, metadata !10776, metadata !DIExpression()), !dbg !10786
  br i1 %48, label %58, label %50, !dbg !10831

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10832
  %52 = and i32 %51, 131072, !dbg !10834
  %53 = icmp eq i32 %52, 0, !dbg !10834
  br i1 %53, label %54, label %66, !dbg !10835

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !10836
  %56 = sub i32 %55, %49, !dbg !10839
  %57 = icmp ugt i32 %56, 100, !dbg !10840
  br i1 %57, label %311, label %50, !dbg !10841, !llvm.loop !10842

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10844
  %60 = and i32 %59, 131072, !dbg !10844
  %61 = icmp eq i32 %60, 0, !dbg !10844
  br i1 %61, label %66, label %62, !dbg !10846

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !10847
  %64 = sub i32 %63, %49, !dbg !10850
  %65 = icmp ugt i32 %64, 100, !dbg !10851
  br i1 %65, label %311, label %58, !dbg !10852, !llvm.loop !10853

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10855
  %68 = and i32 %67, 2, !dbg !10857
  %69 = icmp eq i32 %68, 0, !dbg !10858
  br i1 %69, label %121, label %70, !dbg !10859

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10860
  %72 = and i32 %71, 12, !dbg !10860
  %73 = icmp eq i32 %72, 0, !dbg !10863
  br i1 %73, label %82, label %74, !dbg !10864

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10865
  %76 = and i32 %75, 12, !dbg !10865
  %77 = icmp eq i32 %76, 8, !dbg !10866
  br i1 %77, label %78, label %90, !dbg !10867

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10868
  %80 = and i32 %79, 4194304, !dbg !10869
  %81 = icmp eq i32 %80, 0, !dbg !10870
  br i1 %81, label %82, label %90, !dbg !10871

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10872
  %84 = and i32 %83, 2, !dbg !10872
  %85 = icmp eq i32 %84, 0, !dbg !10872
  br i1 %85, label %114, label %86, !dbg !10875

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10876
  %88 = load i32, i32* %87, align 4, !dbg !10876
  %89 = icmp eq i32 %88, 1, !dbg !10877
  br i1 %89, label %114, label %311, !dbg !10878

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10879
  %92 = load i32, i32* %91, align 4, !dbg !10879
  %93 = icmp eq i32 %92, 0, !dbg !10882
  br i1 %93, label %104, label %94, !dbg !10883

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10884
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !10886
  call void @llvm.dbg.value(metadata i32 %95, metadata !10776, metadata !DIExpression()), !dbg !10786
  br label %96, !dbg !10887

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10888
  %98 = and i32 %97, 2, !dbg !10889
  %99 = icmp eq i32 %98, 0, !dbg !10889
  br i1 %99, label %100, label %114, !dbg !10887

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !10890
  %102 = sub i32 %101, %95, !dbg !10893
  %103 = icmp ugt i32 %102, 2, !dbg !10894
  br i1 %103, label %311, label %96, !dbg !10895, !llvm.loop !10896

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10898
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !10900
  call void @llvm.dbg.value(metadata i32 %105, metadata !10776, metadata !DIExpression()), !dbg !10786
  br label %106, !dbg !10901

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10902
  %108 = and i32 %107, 2, !dbg !10902
  %109 = icmp eq i32 %108, 0, !dbg !10902
  br i1 %109, label %121, label %110, !dbg !10901

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !10903
  %112 = sub i32 %111, %105, !dbg !10906
  %113 = icmp ugt i32 %112, 2, !dbg !10907
  br i1 %113, label %311, label %106, !dbg !10908, !llvm.loop !10909

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10911
  %116 = and i32 %115, -249, !dbg !10911
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10911
  %118 = load i32, i32* %117, align 4, !dbg !10911
  %119 = shl i32 %118, 3, !dbg !10911
  %120 = or i32 %119, %116, !dbg !10911
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10911
  br label %121, !dbg !10912

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10912
  %123 = and i32 %122, 8, !dbg !10914
  %124 = icmp eq i32 %123, 0, !dbg !10915
  br i1 %124, label %149, label %125, !dbg !10916

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10917
  %127 = load i32, i32* %126, align 4, !dbg !10917
  %128 = icmp eq i32 %127, 0, !dbg !10920
  br i1 %128, label %139, label %129, !dbg !10921

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10922
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %130, metadata !10776, metadata !DIExpression()), !dbg !10786
  br label %131, !dbg !10925

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10926
  %133 = and i32 %132, 2, !dbg !10927
  %134 = icmp eq i32 %133, 0, !dbg !10927
  br i1 %134, label %135, label %149, !dbg !10925

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !10928
  %137 = sub i32 %136, %130, !dbg !10931
  %138 = icmp ugt i32 %137, 2, !dbg !10932
  br i1 %138, label %311, label %131, !dbg !10933, !llvm.loop !10934

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10936
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !10938
  call void @llvm.dbg.value(metadata i32 %140, metadata !10776, metadata !DIExpression()), !dbg !10786
  br label %141, !dbg !10939

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10940
  %143 = and i32 %142, 2, !dbg !10940
  %144 = icmp eq i32 %143, 0, !dbg !10940
  br i1 %144, label %149, label %145, !dbg !10939

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !10941
  %147 = sub i32 %146, %140, !dbg !10944
  %148 = icmp ugt i32 %147, 2, !dbg !10945
  br i1 %148, label %311, label %141, !dbg !10946, !llvm.loop !10947

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10949
  %151 = and i32 %150, 4, !dbg !10950
  %152 = icmp eq i32 %151, 0, !dbg !10951
  br i1 %152, label %221, label %153, !dbg !10952

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10778, metadata !DIExpression()), !dbg !10953
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10954
  %155 = and i32 %154, 268435456, !dbg !10954
  %156 = icmp eq i32 %155, 0, !dbg !10954
  br i1 %156, label %157, label %164, !dbg !10955

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10956
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10782, metadata !DIExpression()), !dbg !10956
  store volatile i32 0, i32* %2, align 4, !dbg !10956
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10956
  %160 = or i32 %159, 268435456, !dbg !10956
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10956
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10956
  %162 = and i32 %161, 268435456, !dbg !10956
  store volatile i32 %162, i32* %2, align 4, !dbg !10956
  %163 = load volatile i32, i32* %2, align 4, !dbg !10956
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10957
  call void @llvm.dbg.value(metadata i32 1, metadata !10778, metadata !DIExpression()), !dbg !10953
  br label %164, !dbg !10958

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10778, metadata !DIExpression()), !dbg !10953
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10959
  %166 = and i32 %165, 256, !dbg !10959
  %167 = icmp eq i32 %166, 0, !dbg !10959
  br i1 %167, label %168, label %180, !dbg !10961

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10962
  %170 = or i32 %169, 256, !dbg !10962
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10962
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !10964
  call void @llvm.dbg.value(metadata i32 %171, metadata !10776, metadata !DIExpression()), !dbg !10786
  br label %172, !dbg !10965

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10966
  %174 = and i32 %173, 256, !dbg !10966
  %175 = icmp eq i32 %174, 0, !dbg !10966
  br i1 %175, label %176, label %180, !dbg !10965

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !10967
  %178 = sub i32 %177, %171, !dbg !10970
  %179 = icmp ugt i32 %178, 2, !dbg !10971
  br i1 %179, label %311, label %172, !dbg !10972, !llvm.loop !10973

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10975
  %182 = load i32, i32* %181, align 4, !dbg !10975
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10978

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10979
  %185 = or i32 %184, 1, !dbg !10979
  br label %196, !dbg !10979

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10981
  %188 = or i32 %187, 4, !dbg !10981
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10981
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10981
  %190 = or i32 %189, 1, !dbg !10981
  br label %196, !dbg !10981

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10984
  %193 = and i32 %192, -2, !dbg !10984
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10984
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10984
  %195 = and i32 %194, -5, !dbg !10984
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10986
  %198 = load i32, i32* %181, align 4, !dbg !10987
  %199 = icmp eq i32 %198, 0, !dbg !10989
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %200, metadata !10776, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.value(metadata i32 %200, metadata !10776, metadata !DIExpression()), !dbg !10786
  br i1 %199, label %209, label %201, !dbg !10991

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10992
  %203 = and i32 %202, 2, !dbg !10994
  %204 = icmp eq i32 %203, 0, !dbg !10994
  br i1 %204, label %205, label %217, !dbg !10995

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !10996
  %207 = sub i32 %206, %200, !dbg !10999
  %208 = icmp ugt i32 %207, 5000, !dbg !11000
  br i1 %208, label %311, label %201, !dbg !11001, !llvm.loop !11002

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11004
  %211 = and i32 %210, 2, !dbg !11004
  %212 = icmp eq i32 %211, 0, !dbg !11004
  br i1 %212, label %217, label %213, !dbg !11006

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !11007
  %215 = sub i32 %214, %200, !dbg !11010
  %216 = icmp ugt i32 %215, 5000, !dbg !11011
  br i1 %216, label %311, label %209, !dbg !11012, !llvm.loop !11013

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11015

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11016
  %220 = and i32 %219, -268435457, !dbg !11016
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11016
  br label %221, !dbg !11019

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11020
  %223 = load i32, i32* %222, align 4, !dbg !11020
  %224 = icmp eq i32 %223, 0, !dbg !11022
  br i1 %224, label %310, label %225, !dbg !11023

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11024
  %227 = and i32 %226, 12, !dbg !11024
  %228 = icmp eq i32 %227, 8, !dbg !11027
  br i1 %228, label %277, label %229, !dbg !11028

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11029
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11032
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %231, metadata !10776, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.value(metadata i32 %231, metadata !10776, metadata !DIExpression()), !dbg !10786
  br i1 %230, label %232, label %269, !dbg !11033

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11034
  %234 = and i32 %233, 33554432, !dbg !11034
  %235 = icmp eq i32 %234, 0, !dbg !11034
  br i1 %235, label %240, label %236, !dbg !11036

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !11037
  %238 = sub i32 %237, %231, !dbg !11040
  %239 = icmp ugt i32 %238, 2, !dbg !11041
  br i1 %239, label %311, label %232, !dbg !11042, !llvm.loop !11043

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11045
  %242 = load i32, i32* %241, align 4, !dbg !11045
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11045
  %244 = load i32, i32* %243, align 4, !dbg !11045
  %245 = or i32 %244, %242, !dbg !11045
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11045
  %247 = load i32, i32* %246, align 4, !dbg !11045
  %248 = shl i32 %247, 6, !dbg !11045
  %249 = or i32 %245, %248, !dbg !11045
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11045
  %251 = load i32, i32* %250, align 4, !dbg !11045
  %252 = shl i32 %251, 15, !dbg !11045
  %253 = add i32 %252, -65536, !dbg !11045
  %254 = and i32 %253, -65536, !dbg !11045
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11045
  %256 = load i32, i32* %255, align 4, !dbg !11045
  %257 = shl i32 %256, 24, !dbg !11045
  %258 = or i32 %249, %257, !dbg !11045
  %259 = or i32 %258, %254, !dbg !11045
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11045
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11046
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !11047
  call void @llvm.dbg.value(metadata i32 %260, metadata !10776, metadata !DIExpression()), !dbg !10786
  br label %261, !dbg !11048

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11049
  %263 = and i32 %262, 33554432, !dbg !11050
  %264 = icmp eq i32 %263, 0, !dbg !11050
  br i1 %264, label %265, label %310, !dbg !11048

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !11051
  %267 = sub i32 %266, %260, !dbg !11054
  %268 = icmp ugt i32 %267, 2, !dbg !11055
  br i1 %268, label %311, label %261, !dbg !11056, !llvm.loop !11057

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11059
  %271 = and i32 %270, 33554432, !dbg !11059
  %272 = icmp eq i32 %271, 0, !dbg !11059
  br i1 %272, label %310, label %273, !dbg !11061

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !11062
  %275 = sub i32 %274, %231, !dbg !11065
  %276 = icmp ugt i32 %275, 2, !dbg !11066
  br i1 %276, label %311, label %269, !dbg !11067, !llvm.loop !11068

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11070
  br i1 %278, label %311, label %279, !dbg !11073

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %280, metadata !10777, metadata !DIExpression()), !dbg !10786
  %281 = and i32 %280, 4194304, !dbg !11076
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11078
  %283 = load i32, i32* %282, align 4, !dbg !11078
  %284 = icmp eq i32 %281, %283, !dbg !11079
  br i1 %284, label %285, label %311, !dbg !11080

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11081
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11082
  %288 = load i32, i32* %287, align 4, !dbg !11082
  %289 = icmp eq i32 %286, %288, !dbg !11083
  br i1 %289, label %290, label %311, !dbg !11084

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11085
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11086
  %293 = load i32, i32* %292, align 4, !dbg !11086
  %294 = shl i32 %293, 6, !dbg !11087
  %295 = icmp eq i32 %291, %294, !dbg !11088
  br i1 %295, label %296, label %311, !dbg !11089

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11090
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11091
  %299 = load i32, i32* %298, align 4, !dbg !11091
  %300 = shl i32 %299, 15, !dbg !11092
  %301 = add i32 %300, -65536, !dbg !11092
  %302 = and i32 %301, -65536, !dbg !11092
  %303 = icmp eq i32 %297, %302, !dbg !11093
  br i1 %303, label %304, label %311, !dbg !11094

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11095
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11096
  %307 = load i32, i32* %306, align 4, !dbg !11096
  %308 = shl i32 %307, 24, !dbg !11097
  %309 = icmp eq i32 %305, %308, !dbg !11098
  br i1 %309, label %310, label %311, !dbg !11099

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11100

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10786
  ret i32 %312, !dbg !11101
}

; Function Attrs: optsize
declare !dbg !11102 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11104 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11117, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata i32 %1, metadata !11118, metadata !DIExpression()), !dbg !11120
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11121
  br i1 %3, label %115, label %4, !dbg !11123

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11124
  %6 = and i32 %5, 7, !dbg !11124
  %7 = icmp ult i32 %6, %1, !dbg !11126
  br i1 %7, label %8, label %13, !dbg !11127

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11128
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11128
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11130
  %11 = and i32 %10, 7, !dbg !11130
  %12 = icmp eq i32 %11, %1, !dbg !11132
  br i1 %12, label %13, label %115, !dbg !11133

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11134
  %15 = load i32, i32* %14, align 4, !dbg !11134
  %16 = and i32 %15, 2, !dbg !11136
  %17 = icmp eq i32 %16, 0, !dbg !11137
  br i1 %17, label %39, label %18, !dbg !11138

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11139
  %20 = icmp eq i32 %19, 0, !dbg !11142
  br i1 %20, label %25, label %21, !dbg !11143

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11144
  %23 = or i32 %22, 7168, !dbg !11144
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11144
  %24 = load i32, i32* %14, align 4, !dbg !11146
  br label %25, !dbg !11148

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11146
  %27 = and i32 %26, 8, !dbg !11149
  %28 = icmp eq i32 %27, 0, !dbg !11150
  br i1 %28, label %32, label %29, !dbg !11151

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11152
  %31 = or i32 %30, 57344, !dbg !11152
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11152
  br label %32, !dbg !11154

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11155
  %34 = and i32 %33, -241, !dbg !11155
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11155
  %36 = load i32, i32* %35, align 4, !dbg !11155
  %37 = or i32 %34, %36, !dbg !11155
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11155
  %38 = load i32, i32* %14, align 4, !dbg !11156
  br label %39, !dbg !11158

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11156
  %41 = and i32 %40, 1, !dbg !11159
  %42 = icmp eq i32 %41, 0, !dbg !11160
  br i1 %42, label %73, label %43, !dbg !11161

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11162
  %45 = load i32, i32* %44, align 4, !dbg !11162
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11165

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11166
  %48 = and i32 %47, 131072, !dbg !11169
  %49 = icmp eq i32 %48, 0, !dbg !11169
  br i1 %49, label %115, label %58, !dbg !11170

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11171
  %52 = and i32 %51, 33554432, !dbg !11175
  %53 = icmp eq i32 %52, 0, !dbg !11175
  br i1 %53, label %115, label %58, !dbg !11176

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11177
  %56 = and i32 %55, 2, !dbg !11180
  %57 = icmp eq i32 %56, 0, !dbg !11180
  br i1 %57, label %115, label %58, !dbg !11181

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11182
  %60 = and i32 %59, -4, !dbg !11182
  %61 = or i32 %60, %45, !dbg !11182
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11182
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !11183
  call void @llvm.dbg.value(metadata i32 %62, metadata !11119, metadata !DIExpression()), !dbg !11120
  br label %63, !dbg !11184

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11185
  %65 = and i32 %64, 12, !dbg !11185
  %66 = load i32, i32* %44, align 4, !dbg !11186
  %67 = shl i32 %66, 2, !dbg !11187
  %68 = icmp eq i32 %65, %67, !dbg !11188
  br i1 %68, label %73, label %69, !dbg !11184

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !11189
  %71 = sub i32 %70, %62, !dbg !11192
  %72 = icmp ugt i32 %71, 5000, !dbg !11193
  br i1 %72, label %115, label %63, !dbg !11194, !llvm.loop !11195

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11197
  %75 = and i32 %74, 7, !dbg !11197
  %76 = icmp ugt i32 %75, %1, !dbg !11199
  br i1 %76, label %77, label %82, !dbg !11200

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11201
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11201
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11203
  %80 = and i32 %79, 7, !dbg !11203
  %81 = icmp eq i32 %80, %1, !dbg !11205
  br i1 %81, label %82, label %115, !dbg !11206

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11207
  %84 = and i32 %83, 4, !dbg !11209
  %85 = icmp eq i32 %84, 0, !dbg !11210
  br i1 %85, label %93, label %86, !dbg !11211

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11212
  %88 = and i32 %87, -7169, !dbg !11212
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11212
  %90 = load i32, i32* %89, align 4, !dbg !11212
  %91 = or i32 %88, %90, !dbg !11212
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11212
  %92 = load i32, i32* %14, align 4, !dbg !11214
  br label %93, !dbg !11216

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11214
  %95 = and i32 %94, 8, !dbg !11217
  %96 = icmp eq i32 %95, 0, !dbg !11218
  br i1 %96, label %104, label %97, !dbg !11219

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11220
  %99 = and i32 %98, -57345, !dbg !11220
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11220
  %101 = load i32, i32* %100, align 4, !dbg !11220
  %102 = shl i32 %101, 3, !dbg !11220
  %103 = or i32 %102, %99, !dbg !11220
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11220
  br label %104, !dbg !11222

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11223
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11224
  %107 = lshr i32 %106, 4, !dbg !11225
  %108 = and i32 %107, 15, !dbg !11225
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11226
  %110 = load i8, i8* %109, align 1, !dbg !11226
  %111 = zext i8 %110 to i32, !dbg !11226
  %112 = lshr i32 %105, %111, !dbg !11227
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11228
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11229
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !11230
  br label %115, !dbg !11231

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11120
  ret i32 %116, !dbg !11232
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11233 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11235, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.value(metadata i32 0, metadata !11236, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.value(metadata i32 0, metadata !11237, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.value(metadata i32 0, metadata !11238, metadata !DIExpression()), !dbg !11239
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11240
  %2 = and i32 %1, 12, !dbg !11241
  %3 = icmp eq i32 %2, 8, !dbg !11242
  br i1 %3, label %4, label %21, !dbg !11242

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11243
  %6 = and i32 %5, 63, !dbg !11246
  call void @llvm.dbg.value(metadata i32 %6, metadata !11235, metadata !DIExpression()), !dbg !11239
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11247
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11249
  %9 = lshr i32 %8, 6, !dbg !11249
  %10 = and i32 %9, 511, !dbg !11249
  %11 = zext i32 %10 to i64, !dbg !11249
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11249
  %13 = zext i32 %6 to i64, !dbg !11249
  %14 = udiv i64 %12, %13, !dbg !11249
  %15 = trunc i64 %14 to i32, !dbg !11249
  call void @llvm.dbg.value(metadata i32 %15, metadata !11236, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.value(metadata i32 %15, metadata !11236, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.value(metadata i32 %15, metadata !11236, metadata !DIExpression()), !dbg !11239
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11250
  %17 = lshr i32 %16, 15, !dbg !11251
  %18 = and i32 %17, 6, !dbg !11251
  %19 = add nuw nsw i32 %18, 2, !dbg !11251
  call void @llvm.dbg.value(metadata i32 %19, metadata !11237, metadata !DIExpression()), !dbg !11239
  %20 = udiv i32 %15, %19, !dbg !11252
  call void @llvm.dbg.value(metadata i32 %20, metadata !11238, metadata !DIExpression()), !dbg !11239
  br label %21, !dbg !11253

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11254
  call void @llvm.dbg.value(metadata i32 %22, metadata !11238, metadata !DIExpression()), !dbg !11239
  ret i32 %22, !dbg !11255
}

; Function Attrs: optsize
declare !dbg !11256 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11259 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11263, metadata !DIExpression()), !dbg !11283
  call void @llvm.dbg.value(metadata i32 %1, metadata !11264, metadata !DIExpression()), !dbg !11283
  call void @llvm.dbg.value(metadata i32 %2, metadata !11265, metadata !DIExpression()), !dbg !11283
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11284
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11284
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11266, metadata !DIExpression()), !dbg !11285
  %8 = icmp eq i32 %0, 0, !dbg !11286
  br i1 %8, label %9, label %23, !dbg !11287

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11288
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11288
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11276, metadata !DIExpression()), !dbg !11288
  store volatile i32 0, i32* %5, align 4, !dbg !11288
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11288
  %12 = or i32 %11, 1, !dbg !11288
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11288
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11288
  %14 = and i32 %13, 1, !dbg !11288
  store volatile i32 %14, i32* %5, align 4, !dbg !11288
  %15 = load volatile i32, i32* %5, align 4, !dbg !11288
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11289
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11290
  store i32 256, i32* %16, align 4, !dbg !11291
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11292
  store i32 2, i32* %17, align 4, !dbg !11293
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11294
  store i32 3, i32* %18, align 4, !dbg !11295
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11296
  store i32 0, i32* %19, align 4, !dbg !11297
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11298
  store i32 0, i32* %20, align 4, !dbg !11299
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11300
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11301
  %22 = and i32 %21, -123731969, !dbg !11301
  br label %38, !dbg !11302

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11303
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11303
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11280, metadata !DIExpression()), !dbg !11303
  store volatile i32 0, i32* %6, align 4, !dbg !11303
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11303
  %26 = or i32 %25, 4, !dbg !11303
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11303
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11303
  %28 = and i32 %27, 4, !dbg !11303
  store volatile i32 %28, i32* %6, align 4, !dbg !11303
  %29 = load volatile i32, i32* %6, align 4, !dbg !11303
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11304
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11305
  store i32 512, i32* %30, align 4, !dbg !11306
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11307
  store i32 2, i32* %31, align 4, !dbg !11308
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11309
  store i32 3, i32* %32, align 4, !dbg !11310
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11311
  store i32 0, i32* %33, align 4, !dbg !11312
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11313
  store i32 0, i32* %34, align 4, !dbg !11314
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11315
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11316
  %36 = and i32 %35, 134217727, !dbg !11316
  %37 = shl i32 %2, 3, !dbg !11316
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11317
  %42 = or i32 %41, %40, !dbg !11317
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11317
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11318
  ret void, !dbg !11318
}

; Function Attrs: optsize
declare !dbg !11319 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11323 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11324
  ret void, !dbg !11325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11326 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11327
  ret void, !dbg !11328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #7 !dbg !11329 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11330
  ret i32 %1, !dbg !11331
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11332 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11333
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11334
  %3 = lshr i32 %2, 10, !dbg !11335
  %4 = and i32 %3, 7, !dbg !11335
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11336
  %6 = load i8, i8* %5, align 1, !dbg !11336
  %7 = zext i8 %6 to i32, !dbg !11336
  %8 = lshr i32 %1, %7, !dbg !11337
  ret i32 %8, !dbg !11338
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11339 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11340
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11341
  %3 = lshr i32 %2, 13, !dbg !11342
  %4 = and i32 %3, 7, !dbg !11342
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11343
  %6 = load i8, i8* %5, align 1, !dbg !11343
  %7 = zext i8 %6 to i32, !dbg !11343
  %8 = lshr i32 %1, %7, !dbg !11344
  ret i32 %8, !dbg !11345
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11346 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11350, metadata !DIExpression()), !dbg !11351
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11352
  store i32 15, i32* %2, align 4, !dbg !11353
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11354
  %4 = and i32 %3, 262144, !dbg !11356
  %5 = icmp eq i32 %4, 0, !dbg !11357
  br i1 %5, label %8, label %6, !dbg !11358

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11359
  store i32 327680, i32* %7, align 4, !dbg !11361
  br label %15, !dbg !11362

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11363
  %10 = and i32 %9, 65536, !dbg !11365
  %11 = icmp eq i32 %10, 0, !dbg !11366
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11367
  br i1 %11, label %14, label %13, !dbg !11368

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11369
  br label %15, !dbg !11371

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11372
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11374
  %17 = and i32 %16, 1, !dbg !11376
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11377
  store i32 %17, i32* %18, align 4, !dbg !11379
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11380
  %20 = lshr i32 %19, 3, !dbg !11381
  %21 = and i32 %20, 31, !dbg !11381
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11382
  store i32 %21, i32* %22, align 4, !dbg !11383
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11384
  %24 = and i32 %23, 4, !dbg !11386
  %25 = icmp eq i32 %24, 0, !dbg !11387
  br i1 %25, label %28, label %26, !dbg !11388

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11389
  store i32 5, i32* %27, align 4, !dbg !11391
  br label %35, !dbg !11392

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11393
  %30 = and i32 %29, 1, !dbg !11395
  %31 = icmp eq i32 %30, 0, !dbg !11396
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11397
  br i1 %31, label %34, label %33, !dbg !11398

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11399
  br label %35, !dbg !11401

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11402
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11404
  %37 = and i32 %36, 1, !dbg !11406
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11407
  store i32 %37, i32* %38, align 4, !dbg !11409
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11410
  %40 = and i32 %39, 16777216, !dbg !11412
  %41 = icmp eq i32 %40, 0, !dbg !11413
  %42 = select i1 %41, i32 1, i32 2, !dbg !11414
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11415
  store i32 %42, i32* %43, align 4, !dbg !11417
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11418
  %45 = and i32 %44, 4194304, !dbg !11419
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11420
  store i32 %45, i32* %46, align 4, !dbg !11421
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11422
  %48 = and i32 %47, 63, !dbg !11423
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11424
  store i32 %48, i32* %49, align 4, !dbg !11425
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11426
  %51 = lshr i32 %50, 6, !dbg !11427
  %52 = and i32 %51, 511, !dbg !11427
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11428
  store i32 %52, i32* %53, align 4, !dbg !11429
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11430
  %55 = shl i32 %54, 1, !dbg !11431
  %56 = and i32 %55, 393216, !dbg !11431
  %57 = add nuw nsw i32 %56, 131072, !dbg !11431
  %58 = lshr exact i32 %57, 16, !dbg !11432
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11433
  store i32 %58, i32* %59, align 4, !dbg !11434
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11435
  %61 = lshr i32 %60, 24, !dbg !11436
  %62 = and i32 %61, 15, !dbg !11436
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11437
  store i32 %62, i32* %63, align 4, !dbg !11438
  ret void, !dbg !11439
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11440 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11444, metadata !DIExpression()), !dbg !11446
  call void @llvm.dbg.value(metadata i32* %1, metadata !11445, metadata !DIExpression()), !dbg !11446
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11447
  store i32 15, i32* %3, align 4, !dbg !11448
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11449
  %5 = and i32 %4, 3, !dbg !11450
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11451
  store i32 %5, i32* %6, align 4, !dbg !11452
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11453
  %8 = and i32 %7, 240, !dbg !11454
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11455
  store i32 %8, i32* %9, align 4, !dbg !11456
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11457
  %11 = and i32 %10, 7168, !dbg !11458
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11459
  store i32 %11, i32* %12, align 4, !dbg !11460
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11461
  %14 = lshr i32 %13, 3, !dbg !11462
  %15 = and i32 %14, 7168, !dbg !11462
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11463
  store i32 %15, i32* %16, align 4, !dbg !11464
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11465
  %18 = and i32 %17, 7, !dbg !11466
  store i32 %18, i32* %1, align 4, !dbg !11467
  ret void, !dbg !11468
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11469 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11470
  %2 = and i32 %1, 128, !dbg !11470
  %3 = icmp eq i32 %2, 0, !dbg !11470
  br i1 %3, label %5, label %4, !dbg !11472

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11473
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11475
  br label %5, !dbg !11476

5:                                                ; preds = %4, %0
  ret void, !dbg !11477
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11478 {
  ret void, !dbg !11479
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11480 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11483, metadata !DIExpression()), !dbg !11484
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11485
  ret void, !dbg !11486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11490, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.value(metadata i32 1000, metadata !11491, metadata !DIExpression()), !dbg !11492
  %2 = udiv i32 %0, 1000, !dbg !11493
  %3 = add nsw i32 %2, -1, !dbg !11494
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11495
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11496
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11497
  ret void, !dbg !11498
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11499 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11501, metadata !DIExpression()), !dbg !11503
  %3 = bitcast i32* %2 to i8*, !dbg !11504
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11504
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11502, metadata !DIExpression()), !dbg !11505
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11506
  store volatile i32 %4, i32* %2, align 4, !dbg !11505
  %5 = load volatile i32, i32* %2, align 4, !dbg !11507
  %6 = icmp eq i32 %0, -1, !dbg !11508
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11501, metadata !DIExpression()), !dbg !11503
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11503
  call void @llvm.dbg.value(metadata i32 %8, metadata !11501, metadata !DIExpression()), !dbg !11503
  br label %9, !dbg !11510

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11501, metadata !DIExpression()), !dbg !11503
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11511
  call void @llvm.dbg.value(metadata i32 undef, metadata !11501, metadata !DIExpression()), !dbg !11503
  %12 = shl i32 %11, 15, !dbg !11503
  %13 = ashr i32 %12, 31, !dbg !11503
  %14 = add i32 %13, %10, !dbg !11503
  call void @llvm.dbg.value(metadata i32 %14, metadata !11501, metadata !DIExpression()), !dbg !11503
  %15 = icmp eq i32 %14, 0, !dbg !11510
  br i1 %15, label %16, label %9, !dbg !11510

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11514
  ret void, !dbg !11514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !11515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11517, metadata !DIExpression()), !dbg !11518
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11519
  ret void, !dbg !11520
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11526, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.value(metadata i32 0, metadata !11529, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.value(metadata i32 0, metadata !11530, metadata !DIExpression()), !dbg !11531
  %2 = icmp eq i32 %0, 0, !dbg !11532
  br i1 %2, label %35, label %3, !dbg !11534

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11535
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11538
  %6 = icmp eq i32 %5, 32768, !dbg !11540
  br i1 %6, label %7, label %12, !dbg !11541

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !11542
  br i1 %8, label %12, label %9, !dbg !11545

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !11546
  %11 = zext i1 %10 to i32, !dbg !11549
  call void @llvm.dbg.value(metadata i32 %11, metadata !11529, metadata !DIExpression()), !dbg !11531
  br label %12, !dbg !11549

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !11531
  call void @llvm.dbg.value(metadata i32 %13, metadata !11529, metadata !DIExpression()), !dbg !11531
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11550
  %15 = icmp eq i32 %14, 16384, !dbg !11552
  br i1 %15, label %16, label %24, !dbg !11553

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !11554
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !11557
  br i1 %19, label %24, label %20, !dbg !11557

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !11558
  %22 = and i1 %21, %18, !dbg !11561
  %23 = select i1 %22, i32 1, i32 %13, !dbg !11561
  call void @llvm.dbg.value(metadata i32 %23, metadata !11529, metadata !DIExpression()), !dbg !11531
  br label %24, !dbg !11561

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !11562
  call void @llvm.dbg.value(metadata i32 %25, metadata !11529, metadata !DIExpression()), !dbg !11531
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #26, !dbg !11563
  call void @llvm.dbg.value(metadata i32 2, metadata !11527, metadata !DIExpression()), !dbg !11531
  br label %26, !dbg !11564

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !11562
  call void @llvm.dbg.value(metadata i32 %27, metadata !11527, metadata !DIExpression()), !dbg !11531
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11565
  call void @llvm.dbg.value(metadata i32 %28, metadata !11528, metadata !DIExpression()), !dbg !11531
  %29 = add nsw i32 %27, -1, !dbg !11567
  call void @llvm.dbg.value(metadata i32 %29, metadata !11527, metadata !DIExpression()), !dbg !11531
  %30 = icmp ne i32 %28, %25, !dbg !11568
  %31 = icmp ne i32 %29, 0, !dbg !11569
  %32 = select i1 %30, i1 %31, i1 false, !dbg !11569
  br i1 %32, label %26, label %33, !dbg !11570, !llvm.loop !11571

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !11573
  call void @llvm.dbg.value(metadata i32 %36, metadata !11530, metadata !DIExpression()), !dbg !11531
  ret i32 %36, !dbg !11574
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11575 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11577
  %2 = and i32 %1, 49152, !dbg !11577
  ret i32 %2, !dbg !11578
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11581, metadata !DIExpression()), !dbg !11582
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11583
  %3 = and i32 %2, -8, !dbg !11583
  %4 = or i32 %3, %0, !dbg !11583
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11583
  ret void, !dbg !11584
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11585 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11586
  %2 = and i32 %1, 7, !dbg !11586
  ret i32 %2, !dbg !11587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11588 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11606, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11607, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata i32 0, metadata !11608, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata i32 0, metadata !11609, metadata !DIExpression()), !dbg !11610
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11611
  %4 = icmp eq i32 %3, 0, !dbg !11613
  br i1 %4, label %5, label %21, !dbg !11614

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !11615
  call void @llvm.dbg.value(metadata i32 %6, metadata !11609, metadata !DIExpression()), !dbg !11610
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.150() #26, !dbg !11617
  %8 = icmp eq i32 %7, 1, !dbg !11619
  br i1 %8, label %13, label %9, !dbg !11620

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.151() #26, !dbg !11621
  br label %10, !dbg !11623

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.150() #26, !dbg !11624
  %12 = icmp eq i32 %11, 1, !dbg !11625
  br i1 %12, label %13, label %10, !dbg !11623, !llvm.loop !11626

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11628
  %15 = load i32, i32* %14, align 4, !dbg !11628
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11629
  %17 = load i32, i32* %16, align 4, !dbg !11629
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11630
  %19 = load i32, i32* %18, align 4, !dbg !11630
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.152(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11631
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !11632
  call void @llvm.dbg.value(metadata i32 %20, metadata !11608, metadata !DIExpression()), !dbg !11610
  br label %21, !dbg !11633

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11634
  call void @llvm.dbg.value(metadata i32 %22, metadata !11608, metadata !DIExpression()), !dbg !11610
  ret i32 %22, !dbg !11635
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11636 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11640, metadata !DIExpression()), !dbg !11641
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.154() #26, !dbg !11642
  %2 = icmp ne i32 %1, 0, !dbg !11644
  call void @llvm.dbg.value(metadata i1 %2, metadata !11640, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11641
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11645
  %4 = icmp ne i32 %3, 0, !dbg !11647
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11648
  %6 = zext i1 %5 to i32, !dbg !11648
  call void @llvm.dbg.value(metadata i32 %6, metadata !11640, metadata !DIExpression()), !dbg !11641
  ret i32 %6, !dbg !11649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #7 !dbg !11650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11654, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11655, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata i32 0, metadata !11656, metadata !DIExpression()), !dbg !11657
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11658
  %4 = load i32, i32* %3, align 4, !dbg !11658
  %5 = and i32 %4, 63, !dbg !11659
  %6 = udiv i32 %0, %5, !dbg !11660
  call void @llvm.dbg.value(metadata i32 %6, metadata !11656, metadata !DIExpression()), !dbg !11657
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11661
  %8 = load i32, i32* %7, align 4, !dbg !11661
  %9 = and i32 %8, 511, !dbg !11662
  %10 = mul i32 %9, %6, !dbg !11663
  call void @llvm.dbg.value(metadata i32 %10, metadata !11656, metadata !DIExpression()), !dbg !11657
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11664
  %12 = load i32, i32* %11, align 4, !dbg !11664
  %13 = lshr i32 %12, 15, !dbg !11665
  %14 = and i32 %13, 131070, !dbg !11665
  %15 = add nuw nsw i32 %14, 2, !dbg !11665
  %16 = udiv i32 %10, %15, !dbg !11666
  call void @llvm.dbg.value(metadata i32 %16, metadata !11656, metadata !DIExpression()), !dbg !11657
  ret i32 %16, !dbg !11667
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.150() unnamed_addr #16 !dbg !11668 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11669
  %2 = lshr i32 %1, 1, !dbg !11670
  %3 = and i32 %2, 1, !dbg !11670
  ret i32 %3, !dbg !11671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.151() unnamed_addr #15 !dbg !11672 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11673
  %2 = or i32 %1, 1, !dbg !11673
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11673
  ret void, !dbg !11674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.152(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11677, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.value(metadata i32 %1, metadata !11678, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.value(metadata i32 %2, metadata !11679, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.value(metadata i32 %3, metadata !11680, metadata !DIExpression()), !dbg !11681
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11682
  %6 = and i32 %5, -4227072, !dbg !11682
  %7 = or i32 %1, %0, !dbg !11682
  %8 = shl i32 %2, 6, !dbg !11682
  %9 = or i32 %7, %8, !dbg !11682
  %10 = or i32 %9, %6, !dbg !11682
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11682
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11683
  %12 = and i32 %11, -196609, !dbg !11683
  %13 = or i32 %12, %3, !dbg !11683
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11683
  ret void, !dbg !11684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11689, metadata !DIExpression()), !dbg !11693
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11690, metadata !DIExpression()), !dbg !11693
  call void @llvm.dbg.value(metadata i32 0, metadata !11691, metadata !DIExpression()), !dbg !11693
  call void @llvm.dbg.value(metadata i32 0, metadata !11692, metadata !DIExpression()), !dbg !11693
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11694
  %4 = load i32, i32* %3, align 4, !dbg !11694
  %5 = lshr i32 %4, 4, !dbg !11694
  %6 = and i32 %5, 15, !dbg !11694
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11694
  %8 = load i8, i8* %7, align 1, !dbg !11694
  %9 = zext i8 %8 to i32, !dbg !11694
  %10 = lshr i32 %0, %9, !dbg !11694
  call void @llvm.dbg.value(metadata i32 %10, metadata !11692, metadata !DIExpression()), !dbg !11693
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11695
  %12 = icmp ult i32 %11, %10, !dbg !11697
  br i1 %12, label %13, label %16, !dbg !11698

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %14, metadata !11691, metadata !DIExpression()), !dbg !11693
  %15 = icmp eq i32 %14, 0, !dbg !11701
  br i1 %15, label %16, label %30, !dbg !11703

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.153() #26, !dbg !11704
  br label %17, !dbg !11706

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.154() #26, !dbg !11707
  %19 = icmp eq i32 %18, 1, !dbg !11708
  br i1 %19, label %20, label %17, !dbg !11706, !llvm.loop !11709

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11711
  tail call fastcc void @LL_RCC_SetAHBPrescaler.155(i32 noundef %21) #26, !dbg !11712
  tail call fastcc void @LL_RCC_SetSysClkSource.156() #26, !dbg !11713
  br label %22, !dbg !11714

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.157() #26, !dbg !11715
  %24 = icmp eq i32 %23, 8, !dbg !11716
  br i1 %24, label %25, label %22, !dbg !11714, !llvm.loop !11717

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11719
  %27 = load i32, i32* %26, align 4, !dbg !11719
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.158(i32 noundef %27) #26, !dbg !11720
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11721
  %29 = load i32, i32* %28, align 4, !dbg !11721
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.159(i32 noundef %29) #26, !dbg !11722
  br label %30, !dbg !11723

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11724
  %33 = icmp ugt i32 %32, %10, !dbg !11726
  br i1 %33, label %34, label %36, !dbg !11727

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11728
  call void @llvm.dbg.value(metadata i32 %35, metadata !11691, metadata !DIExpression()), !dbg !11693
  br label %36, !dbg !11730

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11693
  call void @llvm.dbg.value(metadata i32 %37, metadata !11691, metadata !DIExpression()), !dbg !11693
  %38 = icmp eq i32 %37, 0, !dbg !11731
  br i1 %38, label %39, label %40, !dbg !11733

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11734
  br label %40, !dbg !11736

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11737
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.153() unnamed_addr #15 !dbg !11738 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11739
  %2 = or i32 %1, 16777216, !dbg !11739
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11739
  ret void, !dbg !11740
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.154() unnamed_addr #16 !dbg !11741 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11742
  %2 = lshr i32 %1, 25, !dbg !11743
  %3 = and i32 %2, 1, !dbg !11743
  ret i32 %3, !dbg !11744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.155(i32 noundef %0) unnamed_addr #15 !dbg !11745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11747, metadata !DIExpression()), !dbg !11748
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11749
  %3 = and i32 %2, -241, !dbg !11749
  %4 = or i32 %3, %0, !dbg !11749
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11749
  ret void, !dbg !11750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.156() unnamed_addr #15 !dbg !11751 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11753, metadata !DIExpression()), !dbg !11754
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11755
  %2 = and i32 %1, -4, !dbg !11755
  %3 = or i32 %2, 2, !dbg !11755
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11755
  ret void, !dbg !11756
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.157() unnamed_addr #16 !dbg !11757 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11758
  %2 = and i32 %1, 12, !dbg !11758
  ret i32 %2, !dbg !11759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.158(i32 noundef %0) unnamed_addr #15 !dbg !11760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11762, metadata !DIExpression()), !dbg !11763
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11764
  %3 = and i32 %2, -7169, !dbg !11764
  %4 = or i32 %3, %0, !dbg !11764
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11764
  ret void, !dbg !11765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.159(i32 noundef %0) unnamed_addr #15 !dbg !11766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11768, metadata !DIExpression()), !dbg !11769
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11770
  %3 = and i32 %2, -57345, !dbg !11770
  %4 = or i32 %3, %0, !dbg !11770
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11770
  ret void, !dbg !11771
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11772 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11773
  %2 = lshr i32 %1, 27, !dbg !11774
  %3 = and i32 %2, 1, !dbg !11774
  ret i32 %3, !dbg !11775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11780, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i32 %1, metadata !11781, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !11782, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11783, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i32 0, metadata !11784, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i32 0, metadata !11785, metadata !DIExpression()), !dbg !11786
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11787
  %6 = icmp eq i32 %5, 0, !dbg !11789
  br i1 %6, label %7, label %27, !dbg !11790

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !11791
  call void @llvm.dbg.value(metadata i32 %8, metadata !11785, metadata !DIExpression()), !dbg !11786
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.160() #26, !dbg !11793
  %10 = icmp eq i32 %9, 1, !dbg !11795
  br i1 %10, label %19, label %11, !dbg !11796

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11797
  br i1 %12, label %13, label %14, !dbg !11800

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11801
  br label %15, !dbg !11803

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.161() #26, !dbg !11804
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.162() #26, !dbg !11806
  br label %16, !dbg !11807

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.160() #26, !dbg !11808
  %18 = icmp eq i32 %17, 1, !dbg !11809
  br i1 %18, label %19, label %16, !dbg !11807, !llvm.loop !11810

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !11812
  %21 = load i32, i32* %20, align 4, !dbg !11812
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !11813
  %23 = load i32, i32* %22, align 4, !dbg !11813
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !11814
  %25 = load i32, i32* %24, align 4, !dbg !11814
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.152(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11815
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !11816
  call void @llvm.dbg.value(metadata i32 %26, metadata !11784, metadata !DIExpression()), !dbg !11786
  br label %27, !dbg !11817

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11818
  call void @llvm.dbg.value(metadata i32 %28, metadata !11784, metadata !DIExpression()), !dbg !11786
  ret i32 %28, !dbg !11819
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.160() unnamed_addr #16 !dbg !11820 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11821
  %2 = lshr i32 %1, 17, !dbg !11822
  %3 = and i32 %2, 1, !dbg !11822
  ret i32 %3, !dbg !11823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11824 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11825
  %2 = or i32 %1, 262144, !dbg !11825
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11825
  ret void, !dbg !11826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.161() unnamed_addr #15 !dbg !11827 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11828
  %2 = and i32 %1, -262145, !dbg !11828
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11828
  ret void, !dbg !11829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.162() unnamed_addr #15 !dbg !11830 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11831
  %2 = or i32 %1, 65536, !dbg !11831
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11831
  ret void, !dbg !11832
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11833 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11836, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 undef, metadata !11836, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 undef, metadata !11836, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11852
  ret void, !dbg !11853
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11854 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11858, metadata !DIExpression()), !dbg !11860
  %2 = icmp eq i8* %0, null, !dbg !11861
  br i1 %2, label %29, label %3, !dbg !11863

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11864
  %5 = icmp eq i8 %4, 0, !dbg !11865
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11866
  br i1 %6, label %29, label %8, !dbg !11866

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11859, metadata !DIExpression()), !dbg !11860
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11867

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11859, metadata !DIExpression()), !dbg !11860
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11869
  br i1 %10, label %11, label %15, !dbg !11874

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11875
  %13 = load i8*, i8** %12, align 4, !dbg !11875
  %14 = icmp eq i8* %13, %0, !dbg !11876
  br i1 %14, label %29, label %15, !dbg !11877

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11878
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11859, metadata !DIExpression()), !dbg !11860
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11879
  br i1 %17, label %7, label %8, !dbg !11880, !llvm.loop !11881

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11859, metadata !DIExpression()), !dbg !11860
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11883
  br i1 %20, label %21, label %26, !dbg !11887

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11888
  %23 = load i8*, i8** %22, align 4, !dbg !11888
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !11889
  %25 = icmp eq i32 %24, 0, !dbg !11890
  br i1 %25, label %29, label %26, !dbg !11891

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11892
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11859, metadata !DIExpression()), !dbg !11860
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11893
  br i1 %28, label %29, label %18, !dbg !11867, !llvm.loop !11894

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11860
  ret %struct.device* %30, !dbg !11896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #7 !dbg !11897 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11901, metadata !DIExpression()), !dbg !11902
  %2 = icmp eq %struct.device* %0, null, !dbg !11903
  br i1 %2, label %14, label %3, !dbg !11905

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11906
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11906
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11907
  %7 = load i8, i8* %6, align 1, !dbg !11907
  %8 = and i8 %7, 1, !dbg !11907
  %9 = icmp eq i8 %8, 0, !dbg !11907
  br i1 %9, label %14, label %10, !dbg !11908

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11909
  %12 = load i8, i8* %11, align 1, !dbg !11909
  %13 = icmp eq i8 %12, 0, !dbg !11910
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11902
  ret i1 %15, !dbg !11911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !11912 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11917, metadata !DIExpression()), !dbg !11918
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11919
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11920
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11921 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11929, metadata !DIExpression()), !dbg !11934
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11930, metadata !DIExpression()), !dbg !11934
  call void @llvm.dbg.value(metadata i8* %2, metadata !11931, metadata !DIExpression()), !dbg !11934
  %5 = bitcast i32* %4 to i8*, !dbg !11935
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11935
  call void @llvm.dbg.value(metadata i32 0, metadata !11932, metadata !DIExpression()), !dbg !11934
  store i32 0, i32* %4, align 4, !dbg !11936
  call void @llvm.dbg.value(metadata i32* %4, metadata !11932, metadata !DIExpression(DW_OP_deref)), !dbg !11934
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11937
  call void @llvm.dbg.value(metadata i16* %6, metadata !11933, metadata !DIExpression()), !dbg !11934
  %7 = load i32, i32* %4, align 4, !dbg !11938
  call void @llvm.dbg.value(metadata i32 %7, metadata !11932, metadata !DIExpression()), !dbg !11934
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11939
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11940
  ret i32 %8, !dbg !11941
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !11942 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11946, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i32* %1, metadata !11947, metadata !DIExpression()), !dbg !11952
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11953
  %4 = load i16*, i16** %3, align 4, !dbg !11953
  call void @llvm.dbg.value(metadata i16* %4, metadata !11948, metadata !DIExpression()), !dbg !11952
  %5 = icmp eq i16* %4, null, !dbg !11954
  br i1 %5, label %14, label %6, !dbg !11955

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11956
  call void @llvm.dbg.value(metadata i32 %7, metadata !11949, metadata !DIExpression()), !dbg !11956
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11957
  %9 = load i16, i16* %8, align 2, !dbg !11957
  %10 = add i16 %9, -32767, !dbg !11958
  %11 = icmp ult i16 %10, 2, !dbg !11958
  %12 = add i32 %7, 1, !dbg !11959
  call void @llvm.dbg.value(metadata i32 %12, metadata !11949, metadata !DIExpression()), !dbg !11956
  br i1 %11, label %13, label %6, !dbg !11958, !llvm.loop !11961

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11964
  br label %14, !dbg !11965

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11967 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11971, metadata !DIExpression()), !dbg !11982
  call void @llvm.dbg.value(metadata i32 %1, metadata !11972, metadata !DIExpression()), !dbg !11982
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11973, metadata !DIExpression()), !dbg !11982
  call void @llvm.dbg.value(metadata i8* %3, metadata !11974, metadata !DIExpression()), !dbg !11982
  call void @llvm.dbg.value(metadata i32 0, metadata !11975, metadata !DIExpression()), !dbg !11983
  %5 = icmp eq i32 %1, 0, !dbg !11984
  br i1 %5, label %16, label %8, !dbg !11985

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11975, metadata !DIExpression()), !dbg !11983
  %7 = icmp eq i32 %15, %1, !dbg !11984
  br i1 %7, label %16, label %8, !dbg !11985, !llvm.loop !11986

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11975, metadata !DIExpression()), !dbg !11983
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11988
  %11 = load i16, i16* %10, align 2, !dbg !11988
  call void @llvm.dbg.value(metadata i16 %11, metadata !11977, metadata !DIExpression()), !dbg !11989
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11990
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11980, metadata !DIExpression()), !dbg !11989
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !11991
  call void @llvm.dbg.value(metadata i32 %13, metadata !11981, metadata !DIExpression()), !dbg !11989
  %14 = icmp slt i32 %13, 0, !dbg !11992
  %15 = add nuw i32 %9, 1, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %15, metadata !11975, metadata !DIExpression()), !dbg !11983
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !11996 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12000, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12001, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12002, metadata !DIExpression()), !dbg !12003
  %2 = sext i16 %0 to i32, !dbg !12004
  %3 = icmp slt i16 %0, 1, !dbg !12006
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12007
  %6 = add nsw i32 %2, -1, !dbg !12007
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12007
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12007
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12001, metadata !DIExpression()), !dbg !12003
  ret %struct.device* %8, !dbg !12008
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12009 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12011, metadata !DIExpression()), !dbg !12016
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12012, metadata !DIExpression()), !dbg !12016
  call void @llvm.dbg.value(metadata i8* %2, metadata !12013, metadata !DIExpression()), !dbg !12016
  %5 = bitcast i32* %4 to i8*, !dbg !12017
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12017
  call void @llvm.dbg.value(metadata i32 0, metadata !12014, metadata !DIExpression()), !dbg !12016
  store i32 0, i32* %4, align 4, !dbg !12018
  call void @llvm.dbg.value(metadata i32* %4, metadata !12014, metadata !DIExpression(DW_OP_deref)), !dbg !12016
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12019
  call void @llvm.dbg.value(metadata i16* %6, metadata !12015, metadata !DIExpression()), !dbg !12016
  %7 = load i32, i32* %4, align 4, !dbg !12020
  call void @llvm.dbg.value(metadata i32 %7, metadata !12014, metadata !DIExpression()), !dbg !12016
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12021
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12022
  ret i32 %8, !dbg !12023
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12026, metadata !DIExpression()), !dbg !12031
  call void @llvm.dbg.value(metadata i32* %1, metadata !12027, metadata !DIExpression()), !dbg !12031
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12032
  %4 = load i16*, i16** %3, align 4, !dbg !12032
  call void @llvm.dbg.value(metadata i16* %4, metadata !12028, metadata !DIExpression()), !dbg !12031
  call void @llvm.dbg.value(metadata i32 0, metadata !12029, metadata !DIExpression()), !dbg !12031
  call void @llvm.dbg.value(metadata i32 0, metadata !12030, metadata !DIExpression()), !dbg !12031
  %5 = icmp eq i16* %4, null, !dbg !12033
  br i1 %5, label %22, label %6, !dbg !12035

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12029, metadata !DIExpression()), !dbg !12031
  call void @llvm.dbg.value(metadata i16* %8, metadata !12028, metadata !DIExpression()), !dbg !12031
  %9 = load i16, i16* %8, align 2, !dbg !12036
  %10 = icmp eq i16 %9, -32768, !dbg !12040
  call void @llvm.dbg.value(metadata i32 undef, metadata !12029, metadata !DIExpression()), !dbg !12031
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12041
  call void @llvm.dbg.value(metadata i16* %11, metadata !12028, metadata !DIExpression()), !dbg !12031
  %12 = zext i1 %10 to i32, !dbg !12042
  %13 = add i32 %7, %12, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %13, metadata !12029, metadata !DIExpression()), !dbg !12031
  %14 = icmp eq i32 %13, 2, !dbg !12043
  br i1 %14, label %15, label %6, !dbg !12044

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12031
  call void @llvm.dbg.value(metadata i32 %16, metadata !12030, metadata !DIExpression()), !dbg !12031
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12045
  %18 = load i16, i16* %17, align 2, !dbg !12045
  %19 = icmp eq i16 %18, 32767, !dbg !12046
  %20 = add i32 %16, 1, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %20, metadata !12030, metadata !DIExpression()), !dbg !12031
  br i1 %19, label %21, label %15, !dbg !12049, !llvm.loop !12050

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12052
  br label %22, !dbg !12053

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12054
  call void @llvm.dbg.value(metadata i16* %23, metadata !12028, metadata !DIExpression()), !dbg !12031
  ret i16* %23, !dbg !12055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #7 !dbg !12056 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12059
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12060
  ret i32* %2, !dbg !12061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12062 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12212, metadata !DIExpression()), !dbg !12215
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12213, metadata !DIExpression()), !dbg !12215
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12214, metadata !DIExpression()), !dbg !12215
  ret void, !dbg !12216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12221, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata i32 %1, metadata !12222, metadata !DIExpression()), !dbg !12223
  ret void, !dbg !12224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12225 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12229, metadata !DIExpression()), !dbg !12231
  call void @llvm.dbg.value(metadata i32 %1, metadata !12230, metadata !DIExpression()), !dbg !12231
  ret void, !dbg !12232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12237, metadata !DIExpression()), !dbg !12239
  call void @llvm.dbg.value(metadata i8* %1, metadata !12238, metadata !DIExpression()), !dbg !12239
  ret i32 -134, !dbg !12240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12245, metadata !DIExpression()), !dbg !12247
  call void @llvm.dbg.value(metadata i8* %1, metadata !12246, metadata !DIExpression()), !dbg !12247
  ret i32 -134, !dbg !12248
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !12249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12252, metadata !DIExpression()), !dbg !12253
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12254, !srcloc !12260
  call void @llvm.dbg.value(metadata i32 undef, metadata !12257, metadata !DIExpression()) #25, !dbg !12261
  call void @llvm.dbg.value(metadata i32 undef, metadata !12258, metadata !DIExpression()) #25, !dbg !12261
  br label %3, !dbg !12262

3:                                                ; preds = %3, %1
  br label %3, !dbg !12263, !llvm.loop !12266
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12273, metadata !DIExpression()), !dbg !12275
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12274, metadata !DIExpression()), !dbg !12275
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12276
  unreachable, !dbg !12276
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !12277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12279, metadata !DIExpression()), !dbg !12280
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12281
  unreachable, !dbg !12281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12284, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12285, metadata !DIExpression()), !dbg !12288
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12289, !srcloc !12260
  call void @llvm.dbg.value(metadata i32 undef, metadata !12257, metadata !DIExpression()) #25, !dbg !12291
  call void @llvm.dbg.value(metadata i32 undef, metadata !12258, metadata !DIExpression()) #25, !dbg !12291
  call void @llvm.dbg.value(metadata i32 undef, metadata !12286, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12287, metadata !DIExpression()), !dbg !12288
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !12292
  %4 = icmp eq i32 %0, 4, !dbg !12293
  br i1 %4, label %5, label %6, !dbg !12298

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.171, i32 0, i32 0), i32 noundef 148) #27, !dbg !12299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.172, i32 0, i32 0)) #27, !dbg !12299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.171, i32 0, i32 0), i32 noundef 148) #27, !dbg !12299
  unreachable, !dbg !12299

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !12289
  call void @llvm.dbg.value(metadata i32 %7, metadata !12257, metadata !DIExpression()) #25, !dbg !12291
  call void @llvm.dbg.value(metadata i32 %7, metadata !12286, metadata !DIExpression()), !dbg !12288
  %8 = tail call fastcc %struct.k_thread* @k_current_get.173() #28, !dbg !12301
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !12287, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #25, !dbg !12305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !12307, !srcloc !12308
  tail call fastcc void @k_thread_abort.174(%struct.k_thread* noundef %8) #26, !dbg !12309
  ret void, !dbg !12312
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.173() unnamed_addr #10 !dbg !12313 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.175() #28, !dbg !12317
  ret %struct.k_thread* %1, !dbg !12318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.174(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12319 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12323, metadata !DIExpression()), !dbg !12324
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12325, !srcloc !12327
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !12328
  ret void, !dbg !12329
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.175() unnamed_addr #10 !dbg !12330 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12331, !srcloc !12333
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !12334
  ret %struct.k_thread* %1, !dbg !12335
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12340, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i32 %1, metadata !12341, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i32 %2, metadata !12342, metadata !DIExpression()), !dbg !12343
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !12344
  ret void, !dbg !12345
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12346 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12350, metadata !DIExpression()), !dbg !12353
  call void @llvm.dbg.value(metadata i8* %1, metadata !12351, metadata !DIExpression()), !dbg !12353
  call void @llvm.dbg.value(metadata i32 %2, metadata !12352, metadata !DIExpression()), !dbg !12353
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !12354
  ret void, !dbg !12355
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12356 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12357
  ret void, !dbg !12358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12361, metadata !DIExpression()), !dbg !12362
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12363
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12364
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12365
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12366
  %4 = trunc i32 %0 to i8, !dbg !12367
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12368
  store i8 %4, i8* %5, align 4, !dbg !12369
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12370
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12371
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12372
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12373
  store i8* %8, i8** %9, align 4, !dbg !12374
  ret void, !dbg !12375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12378, metadata !DIExpression()), !dbg !12384
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12385
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12379, metadata !DIExpression()), !dbg !12384
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12386
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12380, metadata !DIExpression()), !dbg !12384
  call void @llvm.dbg.value(metadata i8* null, metadata !12383, metadata !DIExpression()), !dbg !12384
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12387
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12388
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !12389
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12390
  ret void, !dbg !12391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12392 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12396, metadata !DIExpression()), !dbg !12397
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12398
  ret i8* %2, !dbg !12399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12400 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12405, metadata !DIExpression()), !dbg !12406
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12407
  %3 = load i8, i8* %2, align 1, !dbg !12408
  %4 = and i8 %3, -5, !dbg !12408
  store i8 %4, i8* %2, align 1, !dbg !12408
  ret void, !dbg !12409
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #5 !dbg !12410 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12413
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !12414
  %3 = ptrtoint i8* %2 to i32, !dbg !12423
  %4 = add i32 %3, 2048, !dbg !12424
  call void @llvm.dbg.value(metadata i32 %4, metadata !12418, metadata !DIExpression()) #25, !dbg !12425
  call void @llvm.dbg.value(metadata i32 %4, metadata !12426, metadata !DIExpression()) #25, !dbg !12429
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12431, !srcloc !12432
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12433
  %6 = or i32 %5, 512, !dbg !12433
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12433
  tail call fastcc void @__NVIC_SetPriority.182(i32 noundef -2, i32 noundef 255) #27, !dbg !12434
  tail call fastcc void @__NVIC_SetPriority.182(i32 noundef -5, i32 noundef 0) #27, !dbg !12437
  tail call fastcc void @__NVIC_SetPriority.182(i32 noundef -12, i32 noundef 0) #27, !dbg !12438
  tail call fastcc void @__NVIC_SetPriority.182(i32 noundef -11, i32 noundef 0) #27, !dbg !12439
  tail call fastcc void @__NVIC_SetPriority.182(i32 noundef -10, i32 noundef 0) #27, !dbg !12440
  tail call fastcc void @__NVIC_SetPriority.182(i32 noundef -4, i32 noundef 0) #27, !dbg !12441
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12442
  %8 = or i32 %7, 458752, !dbg !12442
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12442
  tail call void @z_arm_fault_init() #27, !dbg !12443
  tail call void @z_arm_cpu_idle_init() #27, !dbg !12444
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12445
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12448
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !12449
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !12450
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12451
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12451
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12412, metadata !DIExpression()), !dbg !12452
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12453
  call void @z_device_state_init() #27, !dbg !12454
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12455
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12456
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12457
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12458
  unreachable, !dbg !12458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2179, metadata !DIExpression()), !dbg !12459
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12460
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12460
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2180, metadata !DIExpression()), !dbg !12459
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2180, metadata !DIExpression()), !dbg !12459
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12461
  br i1 %7, label %8, label %35, !dbg !12462

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2180, metadata !DIExpression()), !dbg !12459
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12463
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12463
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2190, metadata !DIExpression()), !dbg !12464
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12465
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12465
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !12466
  call void @llvm.dbg.value(metadata i32 %14, metadata !2194, metadata !DIExpression()), !dbg !12464
  %15 = icmp eq %struct.device* %11, null, !dbg !12467
  br i1 %15, label %32, label %16, !dbg !12469

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12470
  br i1 %17, label %26, label %18, !dbg !12473

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12474
  call void @llvm.dbg.value(metadata i32 %19, metadata !2194, metadata !DIExpression()), !dbg !12464
  %20 = icmp ult i32 %19, 255, !dbg !12476
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12476
  call void @llvm.dbg.value(metadata i32 %21, metadata !2194, metadata !DIExpression()), !dbg !12464
  %22 = trunc i32 %21 to i8, !dbg !12477
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12478
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12478
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12479
  store i8 %22, i8* %25, align 1, !dbg !12480
  br label %26, !dbg !12481

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12482
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12482
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12483
  %30 = load i8, i8* %29, align 1, !dbg !12484
  %31 = or i8 %30, 1, !dbg !12484
  store i8 %31, i8* %29, align 1, !dbg !12484
  br label %32, !dbg !12485

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12486
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2180, metadata !DIExpression()), !dbg !12459
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12461
  br i1 %34, label %8, label %35, !dbg !12462, !llvm.loop !12487

35:                                               ; preds = %32, %1
  ret void, !dbg !12489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.182(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12492, metadata !DIExpression()), !dbg !12494
  call void @llvm.dbg.value(metadata i32 %1, metadata !12493, metadata !DIExpression()), !dbg !12494
  %3 = trunc i32 %1 to i8, !dbg !12495
  %4 = shl i8 %3, 4, !dbg !12495
  %5 = and i32 %0, 15, !dbg !12498
  %6 = add nsw i32 %5, -4, !dbg !12499
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12500
  store volatile i8 %4, i8* %7, align 1, !dbg !12501
  ret void, !dbg !12502
}

; Function Attrs: optsize
declare !dbg !12503 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12504 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12507, metadata !DIExpression()), !dbg !12508
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12509
  store i8 1, i8* %2, align 1, !dbg !12510
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12511
  store i8 1, i8* %3, align 4, !dbg !12512
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12513
  store i32 0, i32* %4, align 4, !dbg !12514
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12515
  store i32 0, i32* %5, align 4, !dbg !12516
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #27, !dbg !12517
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12518
  ret void, !dbg !12519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12520 {
  tail call void @z_sched_init() #27, !dbg !12525
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12526
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.183, i32 0, i32 0)) #27, !dbg !12527
  call void @llvm.dbg.value(metadata i8* %1, metadata !12524, metadata !DIExpression()), !dbg !12528
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12529
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12530
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12531
  ret i8* %1, !dbg !12532
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #5 !dbg !12533 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12537, metadata !DIExpression()), !dbg !12538
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !12539
  unreachable, !dbg !12540
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12541 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12543, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata i8* %1, metadata !12544, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata i8* %2, metadata !12545, metadata !DIExpression()), !dbg !12546
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12547
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12548
  tail call void @boot_banner() #27, !dbg !12549
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12550
  tail call void @z_init_static_threads() #27, !dbg !12551
  tail call void @main() #27, !dbg !12552
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12553
  %5 = and i8 %4, -2, !dbg !12553
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12553
  ret void, !dbg !12554
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12555 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12565, metadata !DIExpression()), !dbg !12567
  call void @llvm.dbg.value(metadata i8* %1, metadata !12566, metadata !DIExpression()), !dbg !12567
  ret void, !dbg !12568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12569 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12571, metadata !DIExpression()), !dbg !12573
  call void @llvm.dbg.value(metadata i8* %1, metadata !12572, metadata !DIExpression()), !dbg !12573
  ret void, !dbg !12574
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12575 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12576, !srcloc !12583
  call void @llvm.dbg.value(metadata i32 %1, metadata !12579, metadata !DIExpression()) #25, !dbg !12584
  %2 = icmp ne i32 %1, 0, !dbg !12585
  ret i1 %2, !dbg !12586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !12587 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12588
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12589
  %3 = load i8, i8* %2, align 4, !dbg !12590
  %4 = or i8 %3, 1, !dbg !12590
  store i8 %4, i8* %2, align 4, !dbg !12590
  ret void, !dbg !12591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !12592 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12593
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12594
  %3 = load i8, i8* %2, align 4, !dbg !12595
  %4 = and i8 %3, -2, !dbg !12595
  store i8 %4, i8* %2, align 4, !dbg !12595
  ret void, !dbg !12596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #7 !dbg !12597 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12598
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12599
  %3 = load i8, i8* %2, align 4, !dbg !12599
  %4 = and i8 %3, 1, !dbg !12600
  %5 = icmp ne i8 %4, 0, !dbg !12601
  ret i1 %5, !dbg !12602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12603 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12607, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata i8* %1, metadata !12608, metadata !DIExpression()), !dbg !12609
  ret i32 -88, !dbg !12610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !12611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12615, metadata !DIExpression()), !dbg !12616
  ret i8* null, !dbg !12617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !12618 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12622, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i8* %1, metadata !12623, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i32 %2, metadata !12624, metadata !DIExpression()), !dbg !12625
  ret i32 -88, !dbg !12626
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2317, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i8* %1, metadata !2318, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 %2, metadata !2319, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 0, metadata !2320, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i8 undef, metadata !2322, metadata !DIExpression()), !dbg !12627
  %4 = icmp eq i8* %1, null, !dbg !12628
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12630
  br i1 %6, label %46, label %7, !dbg !12630

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12631
  %9 = load i8, i8* %8, align 1, !dbg !12631
  call void @llvm.dbg.value(metadata i8 %9, metadata !2322, metadata !DIExpression()), !dbg !12627
  %10 = add i32 %2, -1, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %10, metadata !2319, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i8 0, metadata !2323, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata i8 %9, metadata !2322, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 0, metadata !2320, metadata !DIExpression()), !dbg !12627
  %11 = icmp eq i8 %9, 0, !dbg !12634
  br i1 %11, label %12, label %15, !dbg !12636

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12637
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12638
  store i8 0, i8* %14, align 1, !dbg !12639
  br label %46, !dbg !12640

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2323, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata i8 %17, metadata !2322, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 %18, metadata !2320, metadata !DIExpression()), !dbg !12627
  %19 = zext i8 %17 to i32, !dbg !12641
  %20 = zext i8 %16 to i32, !dbg !12642
  %21 = shl nuw i32 1, %20, !dbg !12642
  call void @llvm.dbg.value(metadata i32 %21, metadata !2321, metadata !DIExpression()), !dbg !12627
  %22 = and i32 %21, %19, !dbg !12644
  %23 = icmp eq i32 %22, 0, !dbg !12646
  br i1 %23, label %42, label %24, !dbg !12647

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12648
  %26 = sub i32 %10, %18, !dbg !12649
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12650
  %28 = load i8*, i8** %27, align 4, !dbg !12650
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12651
  %30 = load i32, i32* %29, align 4, !dbg !12651
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12652
  %32 = add i32 %31, %18, !dbg !12653
  call void @llvm.dbg.value(metadata i32 %32, metadata !2320, metadata !DIExpression()), !dbg !12627
  %33 = trunc i32 %21 to i8, !dbg !12654
  %34 = xor i8 %33, -1, !dbg !12654
  %35 = and i8 %17, %34, !dbg !12654
  call void @llvm.dbg.value(metadata i8 %35, metadata !2322, metadata !DIExpression()), !dbg !12627
  %36 = icmp eq i8 %35, 0, !dbg !12655
  br i1 %36, label %12, label %37, !dbg !12657

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12658
  %39 = sub i32 %10, %32, !dbg !12660
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.184, i32 0, i32 0), i32 noundef 1) #26, !dbg !12661
  %41 = add i32 %40, %32, !dbg !12662
  call void @llvm.dbg.value(metadata i32 %41, metadata !2320, metadata !DIExpression()), !dbg !12627
  br label %42, !dbg !12663

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12627
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12627
  call void @llvm.dbg.value(metadata i8 %44, metadata !2322, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 %43, metadata !2320, metadata !DIExpression()), !dbg !12627
  %45 = add i8 %16, 1, !dbg !12664
  call void @llvm.dbg.value(metadata i8 %45, metadata !2323, metadata !DIExpression()), !dbg !12633
  br label %15, !dbg !12636

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.185, i32 0, i32 0), %3 ], !dbg !12627
  ret i8* %47, !dbg !12665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12666 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12670, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i32 %1, metadata !12671, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i8* %2, metadata !12672, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i32 %3, metadata !12673, metadata !DIExpression()), !dbg !12675
  %5 = icmp ult i32 %1, %3, !dbg !12676
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12676
  call void @llvm.dbg.value(metadata i32 %6, metadata !12674, metadata !DIExpression()), !dbg !12675
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !12677
  ret i32 %6, !dbg !12678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12683, metadata !DIExpression()), !dbg !12684
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !12685
  ret void, !dbg !12686
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12687 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12696, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12697, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i32 %2, metadata !12698, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12699, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i8* %4, metadata !12700, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i8* %5, metadata !12701, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i8* %6, metadata !12702, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i32 %7, metadata !12703, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i32 %8, metadata !12704, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i8* undef, metadata !12705, metadata !DIExpression()), !dbg !12707
  %11 = icmp eq i32 %7, 15, !dbg !12708
  br i1 %11, label %12, label %15, !dbg !12708

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !12708
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #26, !dbg !12708
  br i1 %14, label %19, label %18, !dbg !12708

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !12708
  %17 = icmp ult i32 %16, 31, !dbg !12708
  br i1 %17, label %19, label %18, !dbg !12708

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.197, i32 0, i32 0), i32 noundef 536) #27, !dbg !12712
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.198, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #27, !dbg !12712
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.197, i32 0, i32 0), i32 noundef 536) #27, !dbg !12712
  unreachable, !dbg !12712

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12714
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #26, !dbg !12715
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12716
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12717
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12718
  call void @llvm.dbg.value(metadata i8* %22, metadata !12706, metadata !DIExpression()), !dbg !12707
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !12719
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12720
  store i8* null, i8** %23, align 4, !dbg !12721
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12722
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !12722
  br i1 %25, label %29, label %26, !dbg !12724

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !12725
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !12725
  br label %29, !dbg !12726

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !12707
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12727
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !12729
  ret i8* %22, !dbg !12730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !12731 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12735, metadata !DIExpression()), !dbg !12736
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !12737
  ret i1 %2, !dbg !12738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !12739 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12744, metadata !DIExpression()), !dbg !12745
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12746
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12747
  ret void, !dbg !12748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !12749 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12754, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.value(metadata i32 %1, metadata !12755, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.value(metadata i32 %2, metadata !12756, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.value(metadata i32 %3, metadata !12757, metadata !DIExpression()), !dbg !12758
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12759
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12760
  %6 = trunc i32 %3 to i8, !dbg !12761
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12762
  store i8 %6, i8* %7, align 4, !dbg !12763
  %8 = trunc i32 %2 to i8, !dbg !12764
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12765
  store i8 %8, i8* %9, align 1, !dbg !12766
  %10 = trunc i32 %1 to i8, !dbg !12767
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12768
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12768
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12768
  store i8 %10, i8* %13, align 2, !dbg !12769
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12770
  store i8 0, i8* %14, align 1, !dbg !12771
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12772
  ret void, !dbg !12773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !12774 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12778, metadata !DIExpression()), !dbg !12786
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12779, metadata !DIExpression()), !dbg !12786
  call void @llvm.dbg.value(metadata i32 %2, metadata !12780, metadata !DIExpression()), !dbg !12786
  call void @llvm.dbg.value(metadata i32 0, metadata !12785, metadata !DIExpression()), !dbg !12786
  %4 = add i32 %2, 7, !dbg !12787
  %5 = and i32 %4, -8, !dbg !12787
  %6 = add i32 %5, 64, !dbg !12787
  call void @llvm.dbg.value(metadata i32 %6, metadata !12781, metadata !DIExpression()), !dbg !12786
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.199(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12789
  call void @llvm.dbg.value(metadata i8* %7, metadata !12784, metadata !DIExpression()), !dbg !12786
  call void @llvm.dbg.value(metadata i32 %5, metadata !12782, metadata !DIExpression()), !dbg !12786
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12790
  call void @llvm.dbg.value(metadata i8* %8, metadata !12783, metadata !DIExpression()), !dbg !12786
  call void @llvm.dbg.value(metadata i32 0, metadata !12785, metadata !DIExpression()), !dbg !12786
  %9 = ptrtoint i8* %7 to i32, !dbg !12791
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12792
  store i32 %9, i32* %10, align 4, !dbg !12793
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12794
  store i32 %5, i32* %11, align 4, !dbg !12795
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12796
  store i32 0, i32* %12, align 4, !dbg !12797
  call void @llvm.dbg.value(metadata i8* %8, metadata !12783, metadata !DIExpression()), !dbg !12786
  ret i8* %8, !dbg !12798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.199(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12799 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12803, metadata !DIExpression()), !dbg !12804
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12805
  ret i8* %2, !dbg !12806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !12807 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12812, metadata !DIExpression()), !dbg !12813
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12814
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12815
  ret void, !dbg !12816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !12817 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12819, metadata !DIExpression()), !dbg !12820
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12821
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12822
  ret void, !dbg !12823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !12824 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12828, metadata !DIExpression()), !dbg !12829
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12830
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12831
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12832
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12833
  ret void, !dbg !12834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !12835 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12840, metadata !DIExpression()), !dbg !12841
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12842
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12843
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12844
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12845
  ret void, !dbg !12846
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12847 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12864, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12855, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12856, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.value(metadata i32 %2, metadata !12857, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12858, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.value(metadata i8* %4, metadata !12859, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.value(metadata i8* %5, metadata !12860, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.value(metadata i8* %6, metadata !12861, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.value(metadata i32 %7, metadata !12862, metadata !DIExpression()), !dbg !12865
  call void @llvm.dbg.value(metadata i32 %8, metadata !12863, metadata !DIExpression()), !dbg !12865
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12866, !srcloc !12583
  call void @llvm.dbg.value(metadata i32 %11, metadata !12579, metadata !DIExpression()) #25, !dbg !12871
  %12 = icmp eq i32 %11, 0, !dbg !12872
  br i1 %12, label %14, label %13, !dbg !12873

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.197, i32 0, i32 0), i32 noundef 647) #27, !dbg !12874
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i32 0, i32 0)) #27, !dbg !12874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.197, i32 0, i32 0), i32 noundef 647) #27, !dbg !12874
  unreachable, !dbg !12874

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !12864, metadata !DIExpression()), !dbg !12865
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12876
  %17 = icmp eq i64 %15, -1, !dbg !12877
  br i1 %17, label %19, label %18, !dbg !12879

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12880
  br label %19, !dbg !12882

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !12883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12884 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12889, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12888, metadata !DIExpression()), !dbg !12890
  %4 = icmp eq i64 %3, 0, !dbg !12891
  br i1 %4, label %5, label %6, !dbg !12893

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12894
  br label %7, !dbg !12896

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12897
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12900 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12904, metadata !DIExpression()), !dbg !12905
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12906, !srcloc !12908
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12909
  ret void, !dbg !12910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12911 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12914, metadata !DIExpression()), !dbg !12915
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12913, metadata !DIExpression()), !dbg !12915
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12916
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !12917
  ret void, !dbg !12918
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12919 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12921, metadata !DIExpression()), !dbg !12940
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !12941

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.197, i32 0, i32 0), i32 noundef 750) #27, !dbg !12945
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0)) #27, !dbg !12945
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.197, i32 0, i32 0), i32 noundef 750) #27, !dbg !12945
  unreachable, !dbg !12945

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12921, metadata !DIExpression()), !dbg !12940
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12948
  br i1 %4, label %6, label %5, !dbg !12949

5:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !12950
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12938, metadata !DIExpression()), !dbg !12951
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !12952

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12956
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12956
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12958
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !12958
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12959
  %12 = load i32, i32* %11, align 4, !dbg !12959
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12960
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !12960
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12961
  %16 = load i8*, i8** %15, align 4, !dbg !12961
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12962
  %18 = load i8*, i8** %17, align 4, !dbg !12962
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12963
  %20 = load i8*, i8** %19, align 4, !dbg !12963
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12964
  %22 = load i32, i32* %21, align 4, !dbg !12964
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12965
  %24 = load i32, i32* %23, align 4, !dbg !12965
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #26, !dbg !12966
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12967
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !12968
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !12969
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !12969
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12970
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !12921, metadata !DIExpression()), !dbg !12940
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12971
  br i1 %30, label %1, label %2, !dbg !12941, !llvm.loop !12972

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.197, i32 0, i32 0), i32 noundef 781) #27, !dbg !12974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0)) #27, !dbg !12974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.197, i32 0, i32 0), i32 noundef 781) #27, !dbg !12974
  unreachable, !dbg !12974

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !12938, metadata !DIExpression()), !dbg !12951
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12977
  br i1 %34, label %36, label %35, !dbg !12978

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #27, !dbg !12979
  ret void, !dbg !12980

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !12981
  %38 = load i32, i32* %37, align 4, !dbg !12981
  %39 = icmp eq i32 %38, -1, !dbg !12984
  br i1 %39, label %48, label %40, !dbg !12985

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !12986
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !12986
  %43 = icmp sgt i32 %38, 0, !dbg !12988
  %44 = select i1 %43, i32 %38, i32 0, !dbg !12988
  %45 = zext i32 %44 to i64, !dbg !12988
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.203(i64 noundef %45) #26, !dbg !12988
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !12989
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #26, !dbg !12989
  br label %48, !dbg !12990

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !12991
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !12938, metadata !DIExpression()), !dbg !12951
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12992
  br i1 %50, label %31, label %32, !dbg !12952, !llvm.loop !12993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.203(i64 noundef %0) unnamed_addr #4 !dbg !12995 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12997, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.value(metadata i64 %0, metadata !12999, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i32 1000, metadata !13002, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i32 10000, metadata !13003, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i8 1, metadata !13004, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i8 0, metadata !13005, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i8 1, metadata !13006, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i8 0, metadata !13007, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i8 1, metadata !13008, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i8 0, metadata !13009, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i64 0, metadata !13010, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata i64 0, metadata !13010, metadata !DIExpression()), !dbg !13014
  %2 = mul i64 %0, 10, !dbg !13016
  ret i64 %2, !dbg !13022
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #5 !dbg !13023 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13025, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata i8* %1, metadata !13026, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata i8* %2, metadata !13027, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata i8* %3, metadata !13028, metadata !DIExpression()), !dbg !13029
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13030
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13031
  %7 = load i8, i8* %6, align 4, !dbg !13032
  %8 = or i8 %7, 4, !dbg !13032
  store i8 %8, i8* %6, align 4, !dbg !13032
  tail call void @z_thread_essential_clear() #26, !dbg !13033
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13034
  unreachable, !dbg !13034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct._sfnode* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !13035 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13040, metadata !DIExpression()), !dbg !13042
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13043
  %3 = load i32, i32* %2, align 4, !dbg !13043
  call void @llvm.dbg.value(metadata i32 %3, metadata !13041, metadata !DIExpression()), !dbg !13042
  %4 = icmp eq i32 %3, 0, !dbg !13044
  br i1 %4, label %10, label %5, !dbg !13046

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13047
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13050
  %8 = zext i8 %7 to i32, !dbg !13051
  %9 = icmp eq i32 %6, %8, !dbg !13052
  br i1 %9, label %11, label %10, !dbg !13053

10:                                               ; preds = %5, %1
  br label %11, !dbg !13054

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13042
  ret i1 %12, !dbg !13055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct._sfnode* nocapture noundef %0) local_unnamed_addr #9 !dbg !13056 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13058, metadata !DIExpression()), !dbg !13059
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13060
  %3 = load i32, i32* %2, align 4, !dbg !13060
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13062
  %5 = zext i8 %4 to i32, !dbg !13063
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13064
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13065
  %8 = or i32 %7, %5, !dbg !13066
  %9 = icmp eq i32 %3, %8, !dbg !13067
  br i1 %9, label %10, label %11, !dbg !13068

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13069
  br label %11, !dbg !13070

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct._sfnode* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13072 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13076, metadata !DIExpression()), !dbg !13077
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13078
  %3 = zext i8 %2 to i32, !dbg !13079
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13080
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13081
  %6 = or i32 %5, %3, !dbg !13082
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13083
  store i32 %6, i32* %7, align 4, !dbg !13084
  ret void, !dbg !13085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13086 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13090, metadata !DIExpression()), !dbg !13091
  ret i32 -134, !dbg !13092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13093 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13097, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i32 %1, metadata !13098, metadata !DIExpression()), !dbg !13099
  ret i32 -134, !dbg !13100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13101 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13108, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13109, metadata !DIExpression()), !dbg !13110
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13111
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13113
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13110
  ret i32 %6, !dbg !13114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13115 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13119, metadata !DIExpression()), !dbg !13120
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13121
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13120
  ret i32 %3, !dbg !13123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13124 {
  tail call void @sys_clock_idle_exit() #27, !dbg !13126
  ret void, !dbg !13127
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #5 !dbg !13128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13130, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i8* %1, metadata !13131, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i8* %2, metadata !13132, metadata !DIExpression()), !dbg !13133
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13134
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13134
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13134
  %7 = load i8, i8* %6, align 2, !dbg !13134
  %8 = icmp sgt i8 %7, -1, !dbg !13134
  br i1 %8, label %10, label %9, !dbg !13137

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.212, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.213, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.214, i32 0, i32 0), i32 noundef 39) #27, !dbg !13138
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.214, i32 0, i32 0), i32 noundef 39) #27, !dbg !13138
  unreachable, !dbg !13138

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13140, !srcloc !13147
  call void @llvm.dbg.value(metadata i32 undef, metadata !13143, metadata !DIExpression()) #25, !dbg !13148
  call void @llvm.dbg.value(metadata i32 undef, metadata !13144, metadata !DIExpression()) #25, !dbg !13148
  tail call fastcc void @k_cpu_idle() #26, !dbg !13149
  br label %10, !dbg !13150, !llvm.loop !13151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13153 {
  tail call void @arch_cpu_idle() #27, !dbg !13154
  ret void, !dbg !13155
}

; Function Attrs: optsize
declare !dbg !13156 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct._sfnode* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13157 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13161, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.value(metadata i1 %1, metadata !13162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13167
  %3 = icmp eq %struct._sfnode* %0, null, !dbg !13168
  br i1 %3, label %13, label %4, !dbg !13169

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* noundef nonnull %0) #26, !dbg !13170
  %6 = icmp eq i8 %5, 0, !dbg !13171
  br i1 %6, label %13, label %7, !dbg !13172

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13164, metadata !DIExpression()), !dbg !13173
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 1, !dbg !13174
  %9 = bitcast %struct._sfnode* %8 to i8**, !dbg !13174
  %10 = load i8*, i8** %9, align 4, !dbg !13174
  call void @llvm.dbg.value(metadata i8* %10, metadata !13163, metadata !DIExpression()), !dbg !13167
  br i1 %1, label %11, label %15, !dbg !13175

11:                                               ; preds = %7
  %12 = bitcast %struct._sfnode* %0 to i8*, !dbg !13176
  tail call void @k_free(i8* noundef nonnull %12) #27, !dbg !13177
  br label %15, !dbg !13180

13:                                               ; preds = %4, %2
  %14 = bitcast %struct._sfnode* %0 to i8*, !dbg !13181
  call void @llvm.dbg.value(metadata i8* %14, metadata !13163, metadata !DIExpression()), !dbg !13167
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !13183
  call void @llvm.dbg.value(metadata i8* %16, metadata !13163, metadata !DIExpression()), !dbg !13167
  ret i8* %16, !dbg !13184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13185 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13189, metadata !DIExpression()), !dbg !13190
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13191
  %3 = load i32, i32* %2, align 4, !dbg !13191
  %4 = trunc i32 %3 to i8, !dbg !13192
  %5 = and i8 %4, 3, !dbg !13192
  ret i8 %5, !dbg !13193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #6 !dbg !13194 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13217, metadata !DIExpression()), !dbg !13218
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13219
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #26, !dbg !13220
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, i32 0, !dbg !13221
  store i32 0, i32* %3, align 4, !dbg !13221
  %4 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13222
  tail call fastcc void @z_waitq_init.215(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !13223
  ret void, !dbg !13224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !13225 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13230, metadata !DIExpression()), !dbg !13231
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13232
  store %struct._sfnode* null, %struct._sfnode** %2, align 4, !dbg !13233
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13234
  store %struct._sfnode* null, %struct._sfnode** %3, align 4, !dbg !13235
  ret void, !dbg !13236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.215(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !13237 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13242, metadata !DIExpression()), !dbg !13243
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13244
  tail call fastcc void @sys_dlist_init.216(%struct._dnode* noundef %2) #26, !dbg !13245
  ret void, !dbg !13246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.216(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !13247 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13252, metadata !DIExpression()), !dbg !13253
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13254
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13255
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13256
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13257
  ret void, !dbg !13258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !13259 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13261, metadata !DIExpression()), !dbg !13347
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13348
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13349, metadata !DIExpression()) #25, !dbg !13356
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13358, !srcloc !13364
  call void @llvm.dbg.value(metadata i32 undef, metadata !13361, metadata !DIExpression()) #25, !dbg !13365
  call void @llvm.dbg.value(metadata i32 undef, metadata !13362, metadata !DIExpression()) #25, !dbg !13365
  call void @llvm.dbg.value(metadata i32 undef, metadata !13355, metadata !DIExpression()) #25, !dbg !13356
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %2) #27, !dbg !13366
  br i1 %4, label %6, label %5, !dbg !13369

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 148) #27, !dbg !13370
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.220, i32 0, i32 0), %struct._sfnode* noundef nonnull %2) #27, !dbg !13370
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 148) #27, !dbg !13370
  unreachable, !dbg !13370

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13361, metadata !DIExpression()) #25, !dbg !13365
  call void @llvm.dbg.value(metadata i32 undef, metadata !13355, metadata !DIExpression()) #25, !dbg !13356
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %2) #27, !dbg !13372
  call void @llvm.dbg.value(metadata i32 undef, metadata !13262, metadata !DIExpression()), !dbg !13347
  %7 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13373
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %7) #27, !dbg !13374
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13267, metadata !DIExpression()), !dbg !13347
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13375
  br i1 %9, label %11, label %10, !dbg !13377

10:                                               ; preds = %6
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %8, i8* noundef null) #26, !dbg !13378
  br label %11, !dbg !13380

11:                                               ; preds = %10, %6
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !13358
  call void @llvm.dbg.value(metadata i32 %12, metadata !13361, metadata !DIExpression()) #25, !dbg !13365
  call void @llvm.dbg.value(metadata i32 %12, metadata !13355, metadata !DIExpression()) #25, !dbg !13356
  call void @llvm.dbg.value(metadata i32 %12, metadata !13262, metadata !DIExpression()), !dbg !13347
  %13 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13381
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %2, [1 x i32] %13) #27, !dbg !13381
  ret void, !dbg !13382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13383 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13387, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.value(metadata i8* %1, metadata !13388, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13390, metadata !DIExpression()), !dbg !13398
  call void @llvm.dbg.value(metadata i32 0, metadata !13396, metadata !DIExpression()), !dbg !13398
  call void @llvm.dbg.value(metadata i8* %1, metadata !13397, metadata !DIExpression()), !dbg !13398
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13400, metadata !DIExpression()), !dbg !13406
  call void @llvm.dbg.value(metadata i32 0, metadata !13405, metadata !DIExpression()), !dbg !13406
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !13408
  store i32 0, i32* %3, align 4, !dbg !13409
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !13410
  store i8* %1, i8** %4, align 4, !dbg !13411
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !13412
  ret void, !dbg !13413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13414 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13418, metadata !DIExpression()), !dbg !13421
  call void @llvm.dbg.value(metadata i8* %1, metadata !13419, metadata !DIExpression()), !dbg !13421
  call void @llvm.dbg.value(metadata i8* %2, metadata !13420, metadata !DIExpression()), !dbg !13421
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #26, !dbg !13422
  ret void, !dbg !13423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !13424 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13428, metadata !DIExpression()), !dbg !13438
  call void @llvm.dbg.value(metadata i8* %1, metadata !13429, metadata !DIExpression()), !dbg !13438
  call void @llvm.dbg.value(metadata i8* %2, metadata !13430, metadata !DIExpression()), !dbg !13438
  call void @llvm.dbg.value(metadata i1 %3, metadata !13431, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13438
  call void @llvm.dbg.value(metadata i1 %4, metadata !13432, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13438
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13439
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !13349, metadata !DIExpression()) #25, !dbg !13440
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13442, !srcloc !13364
  call void @llvm.dbg.value(metadata i32 undef, metadata !13361, metadata !DIExpression()) #25, !dbg !13444
  call void @llvm.dbg.value(metadata i32 undef, metadata !13362, metadata !DIExpression()) #25, !dbg !13444
  call void @llvm.dbg.value(metadata i32 undef, metadata !13355, metadata !DIExpression()) #25, !dbg !13440
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %6) #27, !dbg !13445
  br i1 %8, label %10, label %9, !dbg !13446

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 148) #27, !dbg !13447
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.220, i32 0, i32 0), %struct._sfnode* noundef nonnull %6) #27, !dbg !13447
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 148) #27, !dbg !13447
  unreachable, !dbg !13447

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %7, 0, !dbg !13442
  call void @llvm.dbg.value(metadata i32 %11, metadata !13361, metadata !DIExpression()) #25, !dbg !13444
  call void @llvm.dbg.value(metadata i32 %11, metadata !13355, metadata !DIExpression()) #25, !dbg !13440
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %6) #27, !dbg !13448
  call void @llvm.dbg.value(metadata i32 %11, metadata !13434, metadata !DIExpression()), !dbg !13438
  br i1 %4, label %12, label %16, !dbg !13449

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13450
  %14 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %13) #26, !dbg !13453
  %15 = bitcast %struct._sfnode* %14 to i8*, !dbg !13453
  call void @llvm.dbg.value(metadata i8* %15, metadata !13429, metadata !DIExpression()), !dbg !13438
  br label %16, !dbg !13454

16:                                               ; preds = %12, %10
  %17 = phi i8* [ %15, %12 ], [ %1, %10 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !13429, metadata !DIExpression()), !dbg !13438
  %18 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13455
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %18) #27, !dbg !13456
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13433, metadata !DIExpression()), !dbg !13438
  %20 = icmp eq %struct.k_thread* %19, null, !dbg !13457
  br i1 %20, label %23, label %21, !dbg !13459

21:                                               ; preds = %16
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %19, i8* noundef %2) #26, !dbg !13460
  %22 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !13462
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %6, [1 x i32] %22) #27, !dbg !13462
  br label %42, !dbg !13463

23:                                               ; preds = %16
  br i1 %3, label %24, label %35, !dbg !13464

24:                                               ; preds = %23
  %25 = tail call fastcc i8* @z_thread_malloc() #26, !dbg !13465
  call void @llvm.dbg.value(metadata i8* %25, metadata !13435, metadata !DIExpression()), !dbg !13466
  %26 = icmp eq i8* %25, null, !dbg !13467
  br i1 %26, label %27, label %31, !dbg !13469

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13470, metadata !DIExpression()) #25, !dbg !13476
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !13475, metadata !DIExpression()) #25, !dbg !13476
  %28 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %6) #27, !dbg !13479
  br i1 %28, label %30, label %29, !dbg !13482

29:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 194) #27, !dbg !13483
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.222, i32 0, i32 0), %struct._sfnode* noundef nonnull %6) #27, !dbg !13483
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 194) #27, !dbg !13483
  unreachable, !dbg !13483

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %11, metadata !13470, metadata !DIExpression()) #25, !dbg !13476
  call void @llvm.dbg.value(metadata i32 %11, metadata !13485, metadata !DIExpression()) #25, !dbg !13488
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !13490, !srcloc !13491
  call void @llvm.dbg.value(metadata i8* %25, metadata !13430, metadata !DIExpression()), !dbg !13438
  br label %42

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i8* %25, metadata !13435, metadata !DIExpression()), !dbg !13466
  %32 = getelementptr inbounds i8, i8* %25, i32 4, !dbg !13492
  %33 = bitcast i8* %32 to i8**, !dbg !13492
  store i8* %2, i8** %33, align 4, !dbg !13493
  %34 = bitcast i8* %25 to %struct._sfnode*, !dbg !13494
  tail call fastcc void @sys_sfnode_init(%struct._sfnode* noundef nonnull %34, i8 noundef zeroext 1) #26, !dbg !13495
  call void @llvm.dbg.value(metadata i8* %25, metadata !13430, metadata !DIExpression()), !dbg !13438
  br label %37

35:                                               ; preds = %23
  %36 = bitcast i8* %2 to %struct._sfnode*, !dbg !13496
  tail call fastcc void @sys_sfnode_init(%struct._sfnode* noundef %36, i8 noundef zeroext 0) #26, !dbg !13498
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi %struct._sfnode* [ %34, %31 ], [ %36, %35 ], !dbg !13499
  call void @llvm.dbg.value(metadata i8* undef, metadata !13430, metadata !DIExpression()), !dbg !13438
  %39 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13500
  %40 = bitcast i8* %17 to %struct._sfnode*, !dbg !13501
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %39, %struct._sfnode* noundef %40, %struct._sfnode* noundef %38) #26, !dbg !13502
  %41 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !13503
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %6, [1 x i32] %41) #27, !dbg !13503
  br label %42, !dbg !13504

42:                                               ; preds = %30, %37, %21
  %43 = phi i32 [ 0, %21 ], [ 0, %37 ], [ -12, %30 ], !dbg !13438
  ret i32 %43, !dbg !13505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13506 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13510, metadata !DIExpression()), !dbg !13511
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13512
  %3 = load %struct._sfnode*, %struct._sfnode** %2, align 4, !dbg !13512
  ret %struct._sfnode* %3, !dbg !13513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !13514 {
  call void @llvm.dbg.value(metadata i32 8, metadata !13517, metadata !DIExpression()), !dbg !13518
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #27, !dbg !13519
  ret i8* %1, !dbg !13520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_sfnode_init(%struct._sfnode* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !13521 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13525, metadata !DIExpression()), !dbg !13527
  call void @llvm.dbg.value(metadata i8 %1, metadata !13526, metadata !DIExpression()), !dbg !13527
  %3 = zext i8 %1 to i32, !dbg !13528
  %4 = and i32 %3, 252, !dbg !13528
  %5 = icmp eq i32 %4, 0, !dbg !13528
  br i1 %5, label %7, label %6, !dbg !13531

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.224, i32 0, i32 0), i32 noundef 290) #27, !dbg !13532
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.225, i32 0, i32 0)) #27, !dbg !13532
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.224, i32 0, i32 0), i32 noundef 290) #27, !dbg !13532
  unreachable, !dbg !13532

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13534
  store i32 %3, i32* %8, align 4, !dbg !13535
  ret void, !dbg !13536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1, %struct._sfnode* noundef %2) unnamed_addr #9 !dbg !13537 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13541, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13542, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13543, metadata !DIExpression()), !dbg !13544
  %4 = icmp eq %struct._sfnode* %1, null, !dbg !13545
  br i1 %4, label %5, label %6, !dbg !13547

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct._sfnode* noundef %2) #26, !dbg !13548
  br label %11, !dbg !13548

6:                                                ; preds = %3
  %7 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef nonnull %1) #26, !dbg !13550
  %8 = icmp eq %struct._sfnode* %7, null, !dbg !13550
  br i1 %8, label %9, label %10, !dbg !13545

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct._sfnode* noundef %2) #26, !dbg !13552
  br label %11, !dbg !13552

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %2, %struct._sfnode* noundef nonnull %7) #26, !dbg !13554
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %1, %struct._sfnode* noundef %2) #26, !dbg !13554
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !13547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !13556 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13560, metadata !DIExpression()), !dbg !13562
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13561, metadata !DIExpression()), !dbg !13562
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13563
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %1, %struct._sfnode* noundef %3) #26, !dbg !13563
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13563
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13564
  %5 = icmp eq %struct._sfnode* %4, null, !dbg !13564
  br i1 %5, label %6, label %8, !dbg !13563

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13566
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %7) #26, !dbg !13566
  br label %8, !dbg !13566

8:                                                ; preds = %6, %2
  ret void, !dbg !13563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13568 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13572, metadata !DIExpression()), !dbg !13573
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13574
  %3 = load i32, i32* %2, align 4, !dbg !13574
  %4 = and i32 %3, -4, !dbg !13575
  %5 = inttoptr i32 %4 to %struct._sfnode*, !dbg !13576
  ret %struct._sfnode* %5, !dbg !13577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !13578 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13580, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13581, metadata !DIExpression()), !dbg !13582
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %1, %struct._sfnode* noundef null) #26, !dbg !13583
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13584
  %4 = icmp eq %struct._sfnode* %3, null, !dbg !13584
  br i1 %4, label %5, label %6, !dbg !13583

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13586
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13586
  br label %7, !dbg !13586

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %3, %struct._sfnode* noundef %1) #26, !dbg !13588
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13588
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct._sfnode* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !13590 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13594, metadata !DIExpression()), !dbg !13597
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13595, metadata !DIExpression()), !dbg !13597
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* noundef %0) #26, !dbg !13598
  call void @llvm.dbg.value(metadata i8 %3, metadata !13596, metadata !DIExpression()), !dbg !13597
  %4 = zext i8 %3 to i32, !dbg !13599
  %5 = ptrtoint %struct._sfnode* %1 to i32, !dbg !13600
  %6 = or i32 %4, %5, !dbg !13601
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13602
  store i32 %6, i32* %7, align 4, !dbg !13603
  ret void, !dbg !13604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct._sfnode* noundef %1) unnamed_addr #6 !dbg !13605 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13607, metadata !DIExpression()), !dbg !13609
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13608, metadata !DIExpression()), !dbg !13609
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13610
  store %struct._sfnode* %1, %struct._sfnode** %3, align 4, !dbg !13611
  ret void, !dbg !13612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct._sfnode* noundef %1) unnamed_addr #6 !dbg !13613 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13615, metadata !DIExpression()), !dbg !13617
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13616, metadata !DIExpression()), !dbg !13617
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13618
  store %struct._sfnode* %1, %struct._sfnode** %3, align 4, !dbg !13619
  ret void, !dbg !13620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13621 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13623, metadata !DIExpression()), !dbg !13624
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13625
  %3 = load %struct._sfnode*, %struct._sfnode** %2, align 4, !dbg !13625
  ret %struct._sfnode* %3, !dbg !13626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13627 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13631, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata i8* %1, metadata !13632, metadata !DIExpression()), !dbg !13633
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #26, !dbg !13634
  ret void, !dbg !13635
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13636 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13638, metadata !DIExpression()), !dbg !13640
  call void @llvm.dbg.value(metadata i8* %1, metadata !13639, metadata !DIExpression()), !dbg !13640
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #26, !dbg !13641
  ret void, !dbg !13642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13643 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13647, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.value(metadata i8* %1, metadata !13648, metadata !DIExpression()), !dbg !13650
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #26, !dbg !13651
  call void @llvm.dbg.value(metadata i32 %3, metadata !13649, metadata !DIExpression()), !dbg !13650
  ret i32 %3, !dbg !13652
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13653 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13655, metadata !DIExpression()), !dbg !13658
  call void @llvm.dbg.value(metadata i8* %1, metadata !13656, metadata !DIExpression()), !dbg !13658
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #26, !dbg !13659
  call void @llvm.dbg.value(metadata i32 %3, metadata !13657, metadata !DIExpression()), !dbg !13658
  ret i32 %3, !dbg !13660
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13661 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13665, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.value(metadata i8* %1, metadata !13666, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.value(metadata i8* %2, metadata !13667, metadata !DIExpression()), !dbg !13670
  %4 = icmp eq i8* %1, null, !dbg !13671
  %5 = icmp eq i8* %2, null, !dbg !13671
  %6 = or i1 %4, %5, !dbg !13671
  br i1 %6, label %32, label %7, !dbg !13671

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13673
  call void @llvm.dbg.value(metadata %struct._sfnode* %8, metadata !13349, metadata !DIExpression()) #25, !dbg !13674
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13676, !srcloc !13364
  call void @llvm.dbg.value(metadata i32 undef, metadata !13361, metadata !DIExpression()) #25, !dbg !13678
  call void @llvm.dbg.value(metadata i32 undef, metadata !13362, metadata !DIExpression()) #25, !dbg !13678
  call void @llvm.dbg.value(metadata i32 undef, metadata !13355, metadata !DIExpression()) #25, !dbg !13674
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %8) #27, !dbg !13679
  br i1 %10, label %12, label %11, !dbg !13680

11:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 148) #27, !dbg !13681
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.220, i32 0, i32 0), %struct._sfnode* noundef nonnull %8) #27, !dbg !13681
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 148) #27, !dbg !13681
  unreachable, !dbg !13681

12:                                               ; preds = %7
  %13 = extractvalue { i32, i32 } %9, 0, !dbg !13676
  call void @llvm.dbg.value(metadata i32 %13, metadata !13361, metadata !DIExpression()) #25, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %13, metadata !13355, metadata !DIExpression()) #25, !dbg !13674
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %8) #27, !dbg !13682
  call void @llvm.dbg.value(metadata i32 %13, metadata !13668, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13669, metadata !DIExpression()), !dbg !13670
  %14 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13683
  %15 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %14) #27, !dbg !13686
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13669, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13669, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.value(metadata i8* %1, metadata !13666, metadata !DIExpression()), !dbg !13670
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13687
  br i1 %16, label %27, label %17, !dbg !13688

17:                                               ; preds = %12, %17
  %18 = phi %struct.k_thread* [ %22, %17 ], [ %15, %12 ]
  %19 = phi i8* [ %21, %17 ], [ %1, %12 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !13669, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.value(metadata i8* %19, metadata !13666, metadata !DIExpression()), !dbg !13670
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %18, i8* noundef nonnull %19) #26, !dbg !13689
  %20 = bitcast i8* %19 to i8**, !dbg !13691
  %21 = load i8*, i8** %20, align 4, !dbg !13692
  call void @llvm.dbg.value(metadata i8* %21, metadata !13666, metadata !DIExpression()), !dbg !13670
  %22 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %14) #27, !dbg !13693
  call void @llvm.dbg.value(metadata %struct.k_thread* %22, metadata !13669, metadata !DIExpression()), !dbg !13670
  %23 = icmp ne i8* %21, null, !dbg !13694
  %24 = icmp ne %struct.k_thread* %22, null, !dbg !13687
  %25 = select i1 %23, i1 %24, i1 false, !dbg !13687
  br i1 %25, label %17, label %26, !dbg !13688, !llvm.loop !13695

26:                                               ; preds = %17
  br i1 %23, label %27, label %30, !dbg !13697

27:                                               ; preds = %12, %26
  %28 = phi i8* [ %21, %26 ], [ %1, %12 ]
  %29 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13698
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %29, i8* noundef nonnull %28, i8* noundef %2) #26, !dbg !13701
  br label %30, !dbg !13702

30:                                               ; preds = %26, %27
  %31 = insertvalue [1 x i32] poison, i32 %13, 0, !dbg !13703
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %8, [1 x i32] %31) #27, !dbg !13703
  br label %32

32:                                               ; preds = %3, %30
  %33 = phi i32 [ 0, %30 ], [ -22, %3 ], !dbg !13670
  ret i32 %33, !dbg !13704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #9 !dbg !13705 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13709, metadata !DIExpression()), !dbg !13712
  call void @llvm.dbg.value(metadata i8* %1, metadata !13710, metadata !DIExpression()), !dbg !13712
  call void @llvm.dbg.value(metadata i8* %2, metadata !13711, metadata !DIExpression()), !dbg !13712
  %4 = icmp ne i8* %1, null, !dbg !13713
  %5 = icmp ne i8* %2, null, !dbg !13713
  %6 = and i1 %4, %5, !dbg !13713
  br i1 %6, label %7, label %15, !dbg !13713

7:                                                ; preds = %3
  %8 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13715
  %9 = icmp eq %struct._sfnode* %8, null, !dbg !13715
  %10 = bitcast i8* %1 to %struct._sfnode*, !dbg !13718
  br i1 %9, label %11, label %12, !dbg !13719

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %10) #26, !dbg !13720
  br label %13, !dbg !13720

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %8, %struct._sfnode* noundef nonnull %10) #26, !dbg !13722
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct._sfnode*, !dbg !13719
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %14) #26, !dbg !13719
  br label %15, !dbg !13719

15:                                               ; preds = %13, %3
  ret void, !dbg !13724
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !13725 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13741, metadata !DIExpression()), !dbg !13744
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !13742, metadata !DIExpression()), !dbg !13744
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.228(%struct._slist* noundef %1) #26, !dbg !13745
  br i1 %3, label %13, label %4, !dbg !13747

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !13748
  %6 = load i8*, i8** %5, align 4, !dbg !13748
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !13749
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !13749
  %9 = load i8*, i8** %8, align 4, !dbg !13749
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #26, !dbg !13750
  call void @llvm.dbg.value(metadata i32 %10, metadata !13743, metadata !DIExpression()), !dbg !13744
  %11 = icmp eq i32 %10, 0, !dbg !13751
  br i1 %11, label %12, label %13, !dbg !13753

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #26, !dbg !13754
  br label %13, !dbg !13755

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !13744
  ret i32 %14, !dbg !13756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.228(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13757 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !13761, metadata !DIExpression()), !dbg !13762
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.229(%struct._slist* noundef %0) #26, !dbg !13763
  %3 = icmp eq %struct._snode* %2, null, !dbg !13763
  ret i1 %3, !dbg !13763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !13764 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !13768, metadata !DIExpression()), !dbg !13769
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !13770
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !13771
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !13772
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !13773
  ret void, !dbg !13774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.229(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13775 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !13779, metadata !DIExpression()), !dbg !13780
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !13781
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !13781
  ret %struct._snode* %3, !dbg !13782
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13783 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13792, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13791, metadata !DIExpression()), !dbg !13799
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13800
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13349, metadata !DIExpression()) #25, !dbg !13801
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13803, !srcloc !13364
  call void @llvm.dbg.value(metadata i32 undef, metadata !13361, metadata !DIExpression()) #25, !dbg !13805
  call void @llvm.dbg.value(metadata i32 undef, metadata !13362, metadata !DIExpression()) #25, !dbg !13805
  call void @llvm.dbg.value(metadata i32 undef, metadata !13355, metadata !DIExpression()) #25, !dbg !13801
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !13806
  br i1 %5, label %7, label %6, !dbg !13807

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 148) #27, !dbg !13808
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.220, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !13808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 148) #27, !dbg !13808
  unreachable, !dbg !13808

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !13803
  call void @llvm.dbg.value(metadata i32 %8, metadata !13361, metadata !DIExpression()) #25, !dbg !13805
  call void @llvm.dbg.value(metadata i32 %8, metadata !13355, metadata !DIExpression()) #25, !dbg !13801
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %3) #27, !dbg !13809
  call void @llvm.dbg.value(metadata i32 %8, metadata !13793, metadata !DIExpression()), !dbg !13799
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13810
  %10 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %9) #26, !dbg !13810
  br i1 %10, label %17, label %11, !dbg !13811, !prof !13812

11:                                               ; preds = %7
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_get_not_empty(%struct._sflist* noundef %9) #26, !dbg !13813
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13795, metadata !DIExpression()), !dbg !13814
  %13 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %12, i1 noundef zeroext true) #26, !dbg !13815
  call void @llvm.dbg.value(metadata i8* %13, metadata !13794, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 undef, metadata !13470, metadata !DIExpression()) #25, !dbg !13816
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13475, metadata !DIExpression()) #25, !dbg !13816
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !13818
  br i1 %14, label %16, label %15, !dbg !13819

15:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 194) #27, !dbg !13820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.222, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !13820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 194) #27, !dbg !13820
  unreachable, !dbg !13820

16:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %8, metadata !13470, metadata !DIExpression()) #25, !dbg !13816
  call void @llvm.dbg.value(metadata i32 %8, metadata !13485, metadata !DIExpression()) #25, !dbg !13821
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13823, !srcloc !13491
  br label %33

17:                                               ; preds = %7
  %18 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %18, metadata !13792, metadata !DIExpression()), !dbg !13799
  %19 = icmp eq i64 %18, 0, !dbg !13824
  br i1 %19, label %20, label %24, !dbg !13826

20:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13470, metadata !DIExpression()) #25, !dbg !13827
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13475, metadata !DIExpression()) #25, !dbg !13827
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !13830
  br i1 %21, label %23, label %22, !dbg !13831

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 194) #27, !dbg !13832
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.222, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !13832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.219, i32 0, i32 0), i32 noundef 194) #27, !dbg !13832
  unreachable, !dbg !13832

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %8, metadata !13470, metadata !DIExpression()) #25, !dbg !13827
  call void @llvm.dbg.value(metadata i32 %8, metadata !13485, metadata !DIExpression()) #25, !dbg !13833
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13835, !srcloc !13491
  br label %33, !dbg !13836

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13837
  %26 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13838
  %27 = tail call i32 @z_pend_curr(%struct._sfnode* noundef nonnull %3, [1 x i32] %26, %struct._wait_q_t* noundef nonnull %25, [1 x i64] %1) #27, !dbg !13838
  call void @llvm.dbg.value(metadata i32 %27, metadata !13798, metadata !DIExpression()), !dbg !13799
  %28 = icmp eq i32 %27, 0, !dbg !13839
  br i1 %28, label %29, label %33, !dbg !13840

29:                                               ; preds = %24
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13841
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %30, i32 0, i32 0, i32 6, !dbg !13842
  %32 = load i8*, i8** %31, align 4, !dbg !13842
  br label %33, !dbg !13840

33:                                               ; preds = %29, %24, %23, %16
  %34 = phi i8* [ %13, %16 ], [ null, %23 ], [ %32, %29 ], [ null, %24 ], !dbg !13799
  ret i8* %34, !dbg !13843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13844 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13848, metadata !DIExpression()), !dbg !13849
  %2 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13850
  %3 = icmp eq %struct._sfnode* %2, null, !dbg !13850
  ret i1 %3, !dbg !13850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct._sfnode* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #9 !dbg !13851 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13853, metadata !DIExpression()), !dbg !13855
  %2 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13856
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13854, metadata !DIExpression()), !dbg !13855
  %3 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %2) #26, !dbg !13856
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %3) #26, !dbg !13856
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13857
  %5 = icmp eq %struct._sfnode* %4, %2, !dbg !13857
  br i1 %5, label %6, label %8, !dbg !13856

6:                                                ; preds = %1
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13859
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %7) #26, !dbg !13859
  br label %8, !dbg !13859

8:                                                ; preds = %6, %1
  ret %struct._sfnode* %2, !dbg !13856
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !13861 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13865, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata i8* %1, metadata !13866, metadata !DIExpression()), !dbg !13868
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13869
  %4 = bitcast i8* %1 to %struct._sfnode*, !dbg !13870
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct._sfnode* noundef %4) #26, !dbg !13871
  call void @llvm.dbg.value(metadata i1 %5, metadata !13867, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13868
  ret i1 %5, !dbg !13872
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #14 !dbg !13873 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13877, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13878, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !13879, metadata !DIExpression()), !dbg !13881
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13882
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13880, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !13879, metadata !DIExpression()), !dbg !13881
  %4 = icmp eq %struct._sfnode* %3, null, !dbg !13884
  br i1 %4, label %15, label %5, !dbg !13882

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13880, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !13879, metadata !DIExpression()), !dbg !13881
  %6 = icmp eq %struct._sfnode* %3, %1, !dbg !13886
  br i1 %6, label %9, label %11, !dbg !13889

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._sfnode* %13, metadata !13880, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13879, metadata !DIExpression()), !dbg !13881
  %8 = icmp eq %struct._sfnode* %13, %1, !dbg !13886
  br i1 %8, label %9, label %11, !dbg !13889, !llvm.loop !13890

9:                                                ; preds = %7, %5
  %10 = phi %struct._sfnode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct._sfnode* noundef %10, %struct._sfnode* noundef %1) #26, !dbg !13891
  br label %15, !dbg !13891

11:                                               ; preds = %5, %7
  %12 = phi %struct._sfnode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13880, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13879, metadata !DIExpression()), !dbg !13881
  %13 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef nonnull %12) #26, !dbg !13884
  call void @llvm.dbg.value(metadata %struct._sfnode* %13, metadata !13880, metadata !DIExpression()), !dbg !13881
  %14 = icmp eq %struct._sfnode* %13, null, !dbg !13884
  br i1 %14, label %15, label %7, !dbg !13882, !llvm.loop !13890

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !13893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1, %struct._sfnode* noundef %2) unnamed_addr #9 !dbg !13894 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13896, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13897, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13898, metadata !DIExpression()), !dbg !13899
  %4 = icmp eq %struct._sfnode* %1, null, !dbg !13900
  %5 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %2) #26, !dbg !13902
  br i1 %4, label %6, label %11, !dbg !13903

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %5) #26, !dbg !13904
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13906
  %8 = icmp eq %struct._sfnode* %7, %2, !dbg !13906
  br i1 %8, label %9, label %15, !dbg !13904

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13908
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %10) #26, !dbg !13908
  br label %15, !dbg !13908

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %1, %struct._sfnode* noundef %5) #26, !dbg !13910
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13912
  %13 = icmp eq %struct._sfnode* %12, %2, !dbg !13912
  br i1 %13, label %14, label %15, !dbg !13910

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %1) #26, !dbg !13914
  br label %15, !dbg !13914

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %2, %struct._sfnode* noundef null) #26, !dbg !13903
  ret void, !dbg !13903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef readonly %0) unnamed_addr #7 !dbg !13916 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13918, metadata !DIExpression()), !dbg !13919
  %2 = icmp eq %struct._sfnode* %0, null, !dbg !13920
  br i1 %2, label %5, label %3, !dbg !13920

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next_no_check(%struct._sfnode* noundef nonnull %0) #26, !dbg !13920
  br label %5, !dbg !13920

5:                                                ; preds = %1, %3
  %6 = phi %struct._sfnode* [ %4, %3 ], [ null, %1 ], !dbg !13920
  ret %struct._sfnode* %6, !dbg !13920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_next_no_check(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13921 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13923, metadata !DIExpression()), !dbg !13924
  %2 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %0) #26, !dbg !13925
  ret %struct._sfnode* %2, !dbg !13925
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13926 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13928, metadata !DIExpression()), !dbg !13931
  call void @llvm.dbg.value(metadata i8* %1, metadata !13929, metadata !DIExpression()), !dbg !13931
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13932
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %3) #26, !dbg !13932
  call void @llvm.dbg.value(metadata %struct._sfnode* %4, metadata !13930, metadata !DIExpression()), !dbg !13931
  %5 = icmp eq %struct._sfnode* %4, null, !dbg !13934
  br i1 %5, label %14, label %6, !dbg !13932

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct._sfnode*
  br label %8, !dbg !13932

8:                                                ; preds = %6, %11
  %9 = phi %struct._sfnode* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !13930, metadata !DIExpression()), !dbg !13931
  %10 = icmp eq %struct._sfnode* %9, %7, !dbg !13936
  br i1 %10, label %15, label %11, !dbg !13939

11:                                               ; preds = %8
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef nonnull %9) #26, !dbg !13934
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13930, metadata !DIExpression()), !dbg !13931
  %13 = icmp eq %struct._sfnode* %12, null, !dbg !13934
  br i1 %13, label %14, label %8, !dbg !13932, !llvm.loop !13940

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #26, !dbg !13942
  br label %15, !dbg !13943

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !13944
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13945 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13949, metadata !DIExpression()), !dbg !13951
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13952
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %2) #26, !dbg !13953
  %4 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %3, i1 noundef zeroext false) #26, !dbg !13954
  call void @llvm.dbg.value(metadata i8* %4, metadata !13950, metadata !DIExpression()), !dbg !13951
  ret i8* %4, !dbg !13955
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13956 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13958, metadata !DIExpression()), !dbg !13960
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13961
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #26, !dbg !13962
  %4 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %3, i1 noundef zeroext false) #26, !dbg !13963
  call void @llvm.dbg.value(metadata i8* %4, metadata !13959, metadata !DIExpression()), !dbg !13960
  ret i8* %4, !dbg !13964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !13965 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13969, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13970, metadata !DIExpression()), !dbg !13973
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13974
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13974
  %5 = load i8, i8* %4, align 2, !dbg !13974
  call void @llvm.dbg.value(metadata i8 %5, metadata !13971, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13973
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13975
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13975
  %8 = load i8, i8* %7, align 2, !dbg !13975
  call void @llvm.dbg.value(metadata i8 %8, metadata !13972, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13973
  %9 = icmp eq i8 %8, %5, !dbg !13976
  %10 = sext i8 %5 to i32, !dbg !13978
  %11 = sext i8 %8 to i32, !dbg !13978
  %12 = sub nsw i32 %11, %10, !dbg !13978
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13978
  ret i32 %13, !dbg !13979
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13980 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13984, metadata !DIExpression()), !dbg !13985
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13986
  %3 = icmp eq i32 %2, 0, !dbg !13988
  br i1 %3, label %8, label %4, !dbg !13989

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !13990
  %6 = add i32 %5, %2, !dbg !13992
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13993
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13994
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !13995
  br label %8, !dbg !13996

8:                                                ; preds = %4, %1
  ret void, !dbg !13997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #7 !dbg !13998 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14002, metadata !DIExpression()), !dbg !14004
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14005
  call void @llvm.dbg.value(metadata i32 %1, metadata !14003, metadata !DIExpression()), !dbg !14004
  ret i32 %1, !dbg !14006
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14011, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i32 %1, metadata !14012, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i32 0, metadata !14013, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !14029
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14031, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14029
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14039
  br i1 %4, label %6, label %5, !dbg !14042

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14043
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14043
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14043
  unreachable, !dbg !14043

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14029
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14045
  call void @llvm.dbg.value(metadata i32 undef, metadata !14019, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()), !dbg !14021
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14046
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14049
  %8 = icmp sgt i32 %0, 0, !dbg !14050
  %9 = icmp sgt i32 %7, 2, !dbg !14052
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14052
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14052
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14053
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14054
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14062
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !14062
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14064
  br i1 %12, label %14, label %13, !dbg !14067

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14068
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14068
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14068
  unreachable, !dbg !14068

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14031
  call void @llvm.dbg.value(metadata i32 %15, metadata !14034, metadata !DIExpression()) #25, !dbg !14038
  call void @llvm.dbg.value(metadata i32 %15, metadata !14028, metadata !DIExpression()) #25, !dbg !14029
  call void @llvm.dbg.value(metadata i32 %15, metadata !14019, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14062
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !14073
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !14075, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !14013, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()), !dbg !14021
  ret void, !dbg !14077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14080, metadata !DIExpression()), !dbg !14081
  call void @llvm.dbg.value(metadata i32 %0, metadata !14082, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14097
  call void @llvm.dbg.value(metadata i32 1000, metadata !14085, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.value(metadata i32 10000, metadata !14086, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.value(metadata i8 1, metadata !14087, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.value(metadata i1 true, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14097
  call void @llvm.dbg.value(metadata i1 true, metadata !14089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14097
  call void @llvm.dbg.value(metadata i8 0, metadata !14090, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.value(metadata i1 true, metadata !14091, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14097
  call void @llvm.dbg.value(metadata i1 false, metadata !14092, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14097
  call void @llvm.dbg.value(metadata i64 0, metadata !14093, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.value(metadata i64 0, metadata !14093, metadata !DIExpression()), !dbg !14097
  %2 = mul i32 %0, 10, !dbg !14099
  ret i32 %2, !dbg !14105
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14108, metadata !DIExpression()), !dbg !14110
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !14111
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14113, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14115
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14115
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14111
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14116
  br i1 %3, label %5, label %4, !dbg !14117

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14118
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14118
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14118
  unreachable, !dbg !14118

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14113
  call void @llvm.dbg.value(metadata i32 %6, metadata !14034, metadata !DIExpression()) #25, !dbg !14115
  call void @llvm.dbg.value(metadata i32 %6, metadata !14028, metadata !DIExpression()) #25, !dbg !14111
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14119
  call void @llvm.dbg.value(metadata i32 %6, metadata !14109, metadata !DIExpression()), !dbg !14110
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14120
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14122
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14123
  br i1 %9, label %10, label %14, !dbg !14124

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14125
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14127
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !14127
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14129
  br i1 %11, label %13, label %12, !dbg !14130

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14131
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14131
  unreachable, !dbg !14131

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14056, metadata !DIExpression()) #25, !dbg !14127
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #25, !dbg !14132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14134, !srcloc !14076
  br label %33, !dbg !14135

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14136
  %15 = tail call fastcc i32 @slice_time() #26, !dbg !14137
  %16 = icmp eq i32 %15, 0, !dbg !14137
  br i1 %16, label %27, label %17, !dbg !14139

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #26, !dbg !14140
  br i1 %18, label %19, label %27, !dbg !14141

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14142
  %21 = icmp sgt i32 %20, %0, !dbg !14145
  br i1 %21, label %25, label %22, !dbg !14146

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14147
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #26, !dbg !14147
  call void @llvm.dbg.value(metadata i32 %24, metadata !14109, metadata !DIExpression()), !dbg !14110
  br label %28, !dbg !14149

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14150
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14150
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14152
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14110
  call void @llvm.dbg.value(metadata i32 %29, metadata !14109, metadata !DIExpression()), !dbg !14110
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14154
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !14154
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14156
  br i1 %30, label %32, label %31, !dbg !14157

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14158
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14158
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14158
  unreachable, !dbg !14158

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14056, metadata !DIExpression()) #25, !dbg !14154
  call void @llvm.dbg.value(metadata i32 %29, metadata !14070, metadata !DIExpression()) #25, !dbg !14159
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !14161, !srcloc !14076
  br label %33, !dbg !14162

33:                                               ; preds = %32, %13
  ret void, !dbg !14162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !14163 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14167, metadata !DIExpression()), !dbg !14169
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14170
  %3 = icmp eq i32 %2, 0, !dbg !14170
  br i1 %3, label %16, label %4, !dbg !14171

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14172
  br i1 %5, label %16, label %6, !dbg !14173

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14174
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14174
  %9 = load i8, i8* %8, align 2, !dbg !14174
  %10 = sext i8 %9 to i32, !dbg !14175
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14176
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14177
  br i1 %12, label %16, label %13, !dbg !14178

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14179
  %15 = xor i1 %14, true, !dbg !14180
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14169
  call void @llvm.dbg.value(metadata i1 %17, metadata !14168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14169
  ret i1 %17, !dbg !14181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14182 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()), !dbg !14188
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14189
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14187, metadata !DIExpression()), !dbg !14188
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14190
  br i1 %3, label %5, label %4, !dbg !14192

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14193
  br label %5, !dbg !14195

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14186, metadata !DIExpression()), !dbg !14188
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14196
  ret i32 %6, !dbg !14197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14198 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14200, metadata !DIExpression()), !dbg !14202
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14203
  %3 = load i8, i8* %2, align 1, !dbg !14203
  call void @llvm.dbg.value(metadata i8 %3, metadata !14201, metadata !DIExpression()), !dbg !14202
  %4 = and i8 %3, 31, !dbg !14204
  %5 = icmp ne i8 %4, 0, !dbg !14205
  ret i1 %5, !dbg !14206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14209, metadata !DIExpression()), !dbg !14210
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14211
  br i1 %2, label %3, label %7, !dbg !14213

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14214, metadata !DIExpression()) #25, !dbg !14217
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14220
  %5 = load i8, i8* %4, align 1, !dbg !14221
  %6 = and i8 %5, 127, !dbg !14221
  store i8 %6, i8* %4, align 1, !dbg !14221
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14222, metadata !DIExpression()) #25, !dbg !14225
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14229
  br label %7, !dbg !14230

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14231, metadata !DIExpression()) #25, !dbg !14234
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14236
  %9 = load i8, i8* %8, align 1, !dbg !14237
  %10 = or i8 %9, -128, !dbg !14237
  store i8 %10, i8* %8, align 1, !dbg !14237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14238, metadata !DIExpression()) #25, !dbg !14241
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14245, metadata !DIExpression()) #25, !dbg !14253
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14251, metadata !DIExpression()) #25, !dbg !14253
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !14255
  br i1 %11, label %12, label %13, !dbg !14258

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 186) #27, !dbg !14259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 186) #27, !dbg !14259
  unreachable, !dbg !14259

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14261
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14252, metadata !DIExpression()) #25, !dbg !14253
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14263
  br i1 %15, label %26, label %16, !dbg !14261

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14252, metadata !DIExpression()) #25, !dbg !14253
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14265
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14252, metadata !DIExpression()) #25, !dbg !14253
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #27, !dbg !14266
  %20 = icmp sgt i32 %19, 0, !dbg !14269
  br i1 %20, label %21, label %23, !dbg !14270

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14271
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #27, !dbg !14273
  br label %28, !dbg !14274

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #27, !dbg !14263
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14252, metadata !DIExpression()) #25, !dbg !14253
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14263
  br i1 %25, label %26, label %16, !dbg !14261, !llvm.loop !14275

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14277
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #27, !dbg !14278
  br label %28, !dbg !14279

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14280
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14281
  %31 = zext i1 %30 to i32, !dbg !14281
  tail call fastcc void @update_cache(i32 noundef %31) #26, !dbg !14282
  ret void, !dbg !14283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14284 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14286, metadata !DIExpression()), !dbg !14287
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #26, !dbg !14288
  ret i1 %2, !dbg !14289
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14290 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14292, metadata !DIExpression()), !dbg !14294
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14293, metadata !DIExpression()), !dbg !14294
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !14295
  br i1 %3, label %4, label %5, !dbg !14298

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1139) #27, !dbg !14299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1139) #27, !dbg !14299
  unreachable, !dbg !14299

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14301
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #26, !dbg !14302
  ret void, !dbg !14303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14304 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14306, metadata !DIExpression()), !dbg !14307
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14308
  ret i1 %2, !dbg !14309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14310 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14314, metadata !DIExpression()), !dbg !14315
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14316
  br i1 %2, label %6, label %3, !dbg !14316

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14317
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14317
  br label %6, !dbg !14316

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14316
  ret %struct._dnode* %7, !dbg !14318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14319 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14323, metadata !DIExpression()), !dbg !14327
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14324, metadata !DIExpression()), !dbg !14327
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14328
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14328
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14325, metadata !DIExpression()), !dbg !14327
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14329
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14330
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14331
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14332
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14333
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14334
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14335
  ret void, !dbg !14336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #7 !dbg !14337 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14341, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14342, metadata !DIExpression()), !dbg !14343
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14344
  br i1 %3, label %6, label %4, !dbg !14345

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !14346
  br label %6, !dbg !14345

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14345
  ret %struct._dnode* %7, !dbg !14347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14348 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14352, metadata !DIExpression()), !dbg !14355
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14353, metadata !DIExpression()), !dbg !14355
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14356
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14356
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14354, metadata !DIExpression()), !dbg !14355
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14357
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14358
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14359
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14360
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14361
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14362
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14363
  ret void, !dbg !14364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14367, metadata !DIExpression()), !dbg !14369
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14370
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14377, metadata !DIExpression()) #25, !dbg !14379
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14380
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14381
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14381
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14368, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14382, metadata !DIExpression()) #25, !dbg !14388
  call void @llvm.dbg.value(metadata i32 %0, metadata !14387, metadata !DIExpression()) #25, !dbg !14388
  %6 = icmp eq i32 %0, 0, !dbg !14391
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14393
  br i1 %6, label %8, label %18, !dbg !14394

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14395
  br i1 %9, label %10, label %11, !dbg !14398

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 137) #27, !dbg !14399
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #27, !dbg !14399
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 137) #27, !dbg !14399
  unreachable, !dbg !14399

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #27, !dbg !14401
  br i1 %12, label %18, label %13, !dbg !14403

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !14404
  br i1 %14, label %18, label %15, !dbg !14406

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #27, !dbg !14407
  %17 = icmp eq i32 %16, 0, !dbg !14407
  br i1 %17, label %21, label %18, !dbg !14409

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14410
  br i1 %19, label %21, label %20, !dbg !14413

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14414
  br label %21, !dbg !14416

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14393
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14393
  ret void, !dbg !14417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #7 !dbg !14418 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14422, metadata !DIExpression()), !dbg !14425
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14423, metadata !DIExpression()), !dbg !14425
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !14426
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14424, metadata !DIExpression()), !dbg !14425
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14423, metadata !DIExpression()), !dbg !14425
  ret %struct.k_thread* %3, !dbg !14427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14428 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14430, metadata !DIExpression()), !dbg !14431
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14432
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14433
  %4 = xor i1 %3, true, !dbg !14434
  ret i1 %4, !dbg !14435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14438, metadata !DIExpression()), !dbg !14439
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14440
  %3 = load i16, i16* %2, align 2, !dbg !14440
  %4 = icmp ult i16 %3, 128, !dbg !14441
  %5 = zext i1 %4 to i32, !dbg !14441
  ret i32 %5, !dbg !14442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14443 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14449, metadata !DIExpression()), !dbg !14450
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14451
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !14452
  %4 = xor i1 %3, true, !dbg !14453
  ret i1 %4, !dbg !14454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14455 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14461, metadata !DIExpression()), !dbg !14462
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14463
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14463
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14464
  ret i1 %4, !dbg !14465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #7 !dbg !14466 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14468, metadata !DIExpression()), !dbg !14470
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14469, metadata !DIExpression()), !dbg !14470
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14471
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14471
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14472
  br i1 %5, label %9, label %6, !dbg !14473

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14474
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14474
  br label %9, !dbg !14473

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14473
  ret %struct._dnode* %10, !dbg !14475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !14476 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14480, metadata !DIExpression()), !dbg !14481
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14482
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14482
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14483
  ret i1 %4, !dbg !14484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14485 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14489, metadata !DIExpression()), !dbg !14492
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14493
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14493
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14490, metadata !DIExpression()), !dbg !14492
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14494
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14494
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14491, metadata !DIExpression()), !dbg !14492
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14495
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14496
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14497
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14498
  tail call fastcc void @sys_dnode_init.241(%struct._dnode* noundef %0) #26, !dbg !14499
  ret void, !dbg !14500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.241(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14501 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14503, metadata !DIExpression()), !dbg !14504
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14505
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14506
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14507
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14508
  ret void, !dbg !14509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !14510 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14514, metadata !DIExpression()), !dbg !14516
  call void @llvm.dbg.value(metadata i32 %1, metadata !14515, metadata !DIExpression()), !dbg !14516
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14517
  %4 = load i8, i8* %3, align 1, !dbg !14517
  %5 = zext i8 %4 to i32, !dbg !14518
  %6 = and i32 %5, %1, !dbg !14519
  %7 = icmp ne i32 %6, 0, !dbg !14520
  ret i1 %7, !dbg !14521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14526, metadata !DIExpression()), !dbg !14528
  call void @llvm.dbg.value(metadata i32 %1, metadata !14527, metadata !DIExpression()), !dbg !14528
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14529
  ret i1 %3, !dbg !14530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14533, metadata !DIExpression()), !dbg !14535
  call void @llvm.dbg.value(metadata i32 %1, metadata !14534, metadata !DIExpression()), !dbg !14535
  %3 = icmp slt i32 %0, %1, !dbg !14536
  ret i1 %3, !dbg !14537
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14540, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i32 0, metadata !14541, metadata !DIExpression()), !dbg !14545
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !14546
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14548, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14550
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14550
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14546
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14551
  br i1 %3, label %5, label %4, !dbg !14552

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14553
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14553
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14553
  unreachable, !dbg !14553

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14550
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14546
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14554
  call void @llvm.dbg.value(metadata i32 undef, metadata !14543, metadata !DIExpression()), !dbg !14545
  call void @llvm.dbg.value(metadata i32 undef, metadata !14541, metadata !DIExpression()), !dbg !14545
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14555
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14560
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !14560
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14562
  br i1 %6, label %8, label %7, !dbg !14563

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14564
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14564
  unreachable, !dbg !14564

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14548
  call void @llvm.dbg.value(metadata i32 %9, metadata !14034, metadata !DIExpression()) #25, !dbg !14550
  call void @llvm.dbg.value(metadata i32 %9, metadata !14028, metadata !DIExpression()) #25, !dbg !14546
  call void @llvm.dbg.value(metadata i32 %9, metadata !14543, metadata !DIExpression()), !dbg !14545
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14560
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !14565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14567, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !14541, metadata !DIExpression()), !dbg !14545
  call void @llvm.dbg.value(metadata i32 undef, metadata !14541, metadata !DIExpression()), !dbg !14545
  ret void, !dbg !14568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14571, metadata !DIExpression()), !dbg !14572
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14573
  br i1 %2, label %27, label %3, !dbg !14575

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14576
  br i1 %4, label %5, label %27, !dbg !14577

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14231, metadata !DIExpression()) #25, !dbg !14578
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14581
  %7 = load i8, i8* %6, align 1, !dbg !14582
  %8 = or i8 %7, -128, !dbg !14582
  store i8 %8, i8* %6, align 1, !dbg !14582
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14238, metadata !DIExpression()) #25, !dbg !14583
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14245, metadata !DIExpression()) #25, !dbg !14585
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14251, metadata !DIExpression()) #25, !dbg !14585
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !14587
  br i1 %9, label %10, label %11, !dbg !14588

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 186) #27, !dbg !14589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 186) #27, !dbg !14589
  unreachable, !dbg !14589

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14590
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14252, metadata !DIExpression()) #25, !dbg !14585
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14591
  br i1 %13, label %24, label %14, !dbg !14590

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14252, metadata !DIExpression()) #25, !dbg !14585
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14592
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14252, metadata !DIExpression()) #25, !dbg !14585
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #27, !dbg !14593
  %18 = icmp sgt i32 %17, 0, !dbg !14594
  br i1 %18, label %19, label %21, !dbg !14595

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14596
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #27, !dbg !14597
  br label %26, !dbg !14598

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #27, !dbg !14591
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14252, metadata !DIExpression()) #25, !dbg !14585
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14591
  br i1 %23, label %24, label %14, !dbg !14590, !llvm.loop !14599

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14601
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #27, !dbg !14602
  br label %26, !dbg !14603

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14604
  br label %27, !dbg !14605

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14607 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14609, metadata !DIExpression()), !dbg !14610
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14611
  br i1 %2, label %6, label %3, !dbg !14612

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14613
  %5 = xor i1 %4, true, !dbg !14612
  br label %6, !dbg !14612

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14614
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14615 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14617, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata i32 0, metadata !14618, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !14623
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14625, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14623
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14628
  br i1 %3, label %5, label %4, !dbg !14629

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14630
  unreachable, !dbg !14630

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14623
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14631
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14618, metadata !DIExpression()), !dbg !14622
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14635
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !14635
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14637
  br i1 %6, label %8, label %7, !dbg !14638

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14639
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14639
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14639
  unreachable, !dbg !14639

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14625
  call void @llvm.dbg.value(metadata i32 %9, metadata !14034, metadata !DIExpression()) #25, !dbg !14627
  call void @llvm.dbg.value(metadata i32 %9, metadata !14028, metadata !DIExpression()) #25, !dbg !14623
  call void @llvm.dbg.value(metadata i32 %9, metadata !14620, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !14640
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14642, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !14618, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14618, metadata !DIExpression()), !dbg !14622
  ret void, !dbg !14643
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14644 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14646, metadata !DIExpression()), !dbg !14648
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !14649
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14651, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14653
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14653
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14649
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14654
  br i1 %3, label %5, label %4, !dbg !14655

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14656
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14656
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14656
  unreachable, !dbg !14656

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14651
  call void @llvm.dbg.value(metadata i32 %6, metadata !14034, metadata !DIExpression()) #25, !dbg !14653
  call void @llvm.dbg.value(metadata i32 %6, metadata !14028, metadata !DIExpression()) #25, !dbg !14649
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14657
  call void @llvm.dbg.value(metadata i32 %6, metadata !14647, metadata !DIExpression()), !dbg !14648
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14658
  br i1 %7, label %8, label %12, !dbg !14660

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14661
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !14661
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14664
  br i1 %9, label %11, label %10, !dbg !14665

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14666
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14666
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14666
  unreachable, !dbg !14666

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14056, metadata !DIExpression()) #25, !dbg !14661
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #25, !dbg !14667
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14669, !srcloc !14076
  br label %14, !dbg !14670

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.246(%struct.k_thread* noundef %0) #26, !dbg !14671
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14672
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14673
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !14673
  br label %14, !dbg !14674

14:                                               ; preds = %12, %11
  ret void, !dbg !14674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14675 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14677, metadata !DIExpression()), !dbg !14678
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14679
  %3 = load i8, i8* %2, align 1, !dbg !14679
  %4 = and i8 %3, 4, !dbg !14680
  %5 = icmp eq i8 %4, 0, !dbg !14681
  ret i1 %5, !dbg !14682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.246(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14685, metadata !DIExpression()), !dbg !14686
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14687
  %3 = load i8, i8* %2, align 1, !dbg !14688
  %4 = and i8 %3, -5, !dbg !14688
  store i8 %4, i8* %2, align 1, !dbg !14688
  ret void, !dbg !14689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct._sfnode* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14690 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14693, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14692, metadata !DIExpression()), !dbg !14694
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14695
  br i1 %4, label %5, label %12, !dbg !14697

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14698
  br i1 %6, label %7, label %12, !dbg !14699

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #25, !dbg !14706
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14705, metadata !DIExpression()) #25, !dbg !14706
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14709, metadata !DIExpression()) #25, !dbg !14714
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !14716
  br i1 %8, label %10, label %9, !dbg !14719

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !14720
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !14720
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !14720
  unreachable, !dbg !14720

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14700, metadata !DIExpression()) #25, !dbg !14706
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !14722
  br label %16, !dbg !14723

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14724
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14061, metadata !DIExpression()) #25, !dbg !14724
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !14727
  br i1 %13, label %15, label %14, !dbg !14728

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14729
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !14729
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14729
  unreachable, !dbg !14729

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14056, metadata !DIExpression()) #25, !dbg !14724
  call void @llvm.dbg.value(metadata i32 %3, metadata !14070, metadata !DIExpression()) #25, !dbg !14730
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14732, !srcloc !14076
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14738, metadata !DIExpression()), !dbg !14739
  call void @llvm.dbg.value(metadata i32 %0, metadata !14740, metadata !DIExpression()), !dbg !14745
  %2 = icmp eq i32 %0, 0, !dbg !14747
  br i1 %2, label %3, label %6, !dbg !14748

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14749, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %4, metadata !14752, metadata !DIExpression()) #25, !dbg !14757
  %5 = icmp eq i32 %4, 0, !dbg !14758
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14739
  ret i1 %7, !dbg !14759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #7 !dbg !14760 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14763
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14762, metadata !DIExpression()), !dbg !14764
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14765
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14766
  ret i1 %3, !dbg !14767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14770, metadata !DIExpression()), !dbg !14772
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !14773
  call void @llvm.dbg.value(metadata i32 %2, metadata !14771, metadata !DIExpression()), !dbg !14772
  ret i32 %2, !dbg !14774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14777, metadata !DIExpression()), !dbg !14781
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14782
  call void @llvm.dbg.value(metadata i32 0, metadata !14778, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !14784
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14786, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14784
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14789
  br i1 %4, label %6, label %5, !dbg !14790

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14791
  unreachable, !dbg !14791

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %7, metadata !14034, metadata !DIExpression()) #25, !dbg !14788
  call void @llvm.dbg.value(metadata i32 %7, metadata !14028, metadata !DIExpression()) #25, !dbg !14784
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14792
  call void @llvm.dbg.value(metadata i32 %7, metadata !14780, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14778, metadata !DIExpression()), !dbg !14783
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14793
  br i1 %8, label %9, label %13, !dbg !14797

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14214, metadata !DIExpression()) #25, !dbg !14798
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14801
  %11 = load i8, i8* %10, align 1, !dbg !14802
  %12 = and i8 %11, 127, !dbg !14802
  store i8 %12, i8* %10, align 1, !dbg !14802
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14222, metadata !DIExpression()) #25, !dbg !14803
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14805
  br label %13, !dbg !14806

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14807
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14808
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14809
  %16 = zext i1 %15 to i32, !dbg !14809
  tail call fastcc void @update_cache(i32 noundef %16) #26, !dbg !14810
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14811
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !14811
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14813
  br i1 %17, label %19, label %18, !dbg !14814

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14815
  unreachable, !dbg !14815

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14056, metadata !DIExpression()) #25, !dbg !14811
  call void @llvm.dbg.value(metadata i32 %7, metadata !14070, metadata !DIExpression()) #25, !dbg !14816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !14818, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !14778, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14778, metadata !DIExpression()), !dbg !14783
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14819
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14821
  br i1 %21, label %22, label %23, !dbg !14822

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14823
  br label %23, !dbg !14825

23:                                               ; preds = %22, %19
  ret void, !dbg !14826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14827 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14829, metadata !DIExpression()), !dbg !14830
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14831
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14832
  ret i32 %3, !dbg !14833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14834 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14836, metadata !DIExpression()), !dbg !14837
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14838
  %3 = load i8, i8* %2, align 1, !dbg !14839
  %4 = or i8 %3, 16, !dbg !14839
  store i8 %4, i8* %2, align 1, !dbg !14839
  ret void, !dbg !14840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14841 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14842, !srcloc !14037
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14842
  call void @llvm.dbg.value(metadata i32 %2, metadata !14034, metadata !DIExpression()) #25, !dbg !14844
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14844
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !14845
  ret void, !dbg !14846
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14849, metadata !DIExpression()), !dbg !14850
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !14851
  br i1 %2, label %3, label %5, !dbg !14853

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14854
  br label %6, !dbg !14856

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14070, metadata !DIExpression()) #25, !dbg !14857
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !14860, !srcloc !14076
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14861
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14862 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14864, metadata !DIExpression()), !dbg !14866
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !14867
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14869, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14867
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14872
  br i1 %3, label %5, label %4, !dbg !14873

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14874
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14874
  unreachable, !dbg !14874

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14869
  call void @llvm.dbg.value(metadata i32 %6, metadata !14034, metadata !DIExpression()) #25, !dbg !14871
  call void @llvm.dbg.value(metadata i32 %6, metadata !14028, metadata !DIExpression()) #25, !dbg !14867
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14875
  call void @llvm.dbg.value(metadata i32 %6, metadata !14865, metadata !DIExpression()), !dbg !14866
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !14876
  br i1 %7, label %12, label %8, !dbg !14878

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14879
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !14879
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14882
  br i1 %9, label %11, label %10, !dbg !14883

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14884
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14884
  unreachable, !dbg !14884

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14056, metadata !DIExpression()) #25, !dbg !14879
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #25, !dbg !14885
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14887, !srcloc !14076
  br label %14, !dbg !14888

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14889
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14890
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14891
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !14891
  br label %14, !dbg !14892

14:                                               ; preds = %12, %11
  ret void, !dbg !14892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14893 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()), !dbg !14896
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14897
  %3 = load i8, i8* %2, align 1, !dbg !14897
  %4 = and i8 %3, 16, !dbg !14898
  %5 = icmp ne i8 %4, 0, !dbg !14899
  ret i1 %5, !dbg !14900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14901 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14903, metadata !DIExpression()), !dbg !14904
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14905
  %3 = load i8, i8* %2, align 1, !dbg !14906
  %4 = and i8 %3, -17, !dbg !14906
  store i8 %4, i8* %2, align 1, !dbg !14906
  ret void, !dbg !14907
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14908 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14918, metadata !DIExpression()), !dbg !14922
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14916, metadata !DIExpression()), !dbg !14922
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14917, metadata !DIExpression()), !dbg !14922
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14923
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14923
  br i1 %5, label %9, label %6, !dbg !14923

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #26, !dbg !14923
  br i1 %7, label %9, label %8, !dbg !14926

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 773) #27, !dbg !14927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 773) #27, !dbg !14927
  unreachable, !dbg !14927

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14919, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !14930
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14932, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14934
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14934
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14930
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14935
  br i1 %11, label %13, label %12, !dbg !14936

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14937
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14937
  unreachable, !dbg !14937

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !14934
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !14930
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14938
  call void @llvm.dbg.value(metadata i32 undef, metadata !14921, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14919, metadata !DIExpression()), !dbg !14929
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14939
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14942
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !14942
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14944
  br i1 %14, label %16, label %15, !dbg !14945

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14946
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14946
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !14946
  unreachable, !dbg !14946

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14932
  call void @llvm.dbg.value(metadata i32 %17, metadata !14034, metadata !DIExpression()) #25, !dbg !14934
  call void @llvm.dbg.value(metadata i32 %17, metadata !14028, metadata !DIExpression()) #25, !dbg !14930
  call void @llvm.dbg.value(metadata i32 %17, metadata !14921, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !14942
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !14947
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #25, !dbg !14949, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !14919, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14919, metadata !DIExpression()), !dbg !14929
  ret void, !dbg !14950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14951 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14953, metadata !DIExpression()), !dbg !14954
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14955
  %3 = load i8, i8* %2, align 1, !dbg !14955
  %4 = and i8 %3, 1, !dbg !14956
  %5 = icmp ne i8 %4, 0, !dbg !14957
  ret i1 %5, !dbg !14958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14959 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14963, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14961, metadata !DIExpression()), !dbg !14964
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14962, metadata !DIExpression()), !dbg !14964
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !14965
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !14966
  ret void, !dbg !14967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14968 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14972, metadata !DIExpression()), !dbg !14974
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14973, metadata !DIExpression()), !dbg !14974
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !14975
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !14976
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14977
  br i1 %3, label %24, label %4, !dbg !14979

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14980
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14982
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14983
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14245, metadata !DIExpression()) #25, !dbg !14984
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14251, metadata !DIExpression()) #25, !dbg !14984
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !14986
  br i1 %7, label %8, label %9, !dbg !14987

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 186) #27, !dbg !14988
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 186) #27, !dbg !14988
  unreachable, !dbg !14988

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !14989
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14252, metadata !DIExpression()) #25, !dbg !14984
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14990
  br i1 %11, label %22, label %12, !dbg !14989

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14252, metadata !DIExpression()) #25, !dbg !14984
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14991
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14252, metadata !DIExpression()) #25, !dbg !14984
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #27, !dbg !14992
  %16 = icmp sgt i32 %15, 0, !dbg !14993
  br i1 %16, label %17, label %19, !dbg !14994

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14995
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !14996
  br label %24, !dbg !14997

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #27, !dbg !14990
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14252, metadata !DIExpression()) #25, !dbg !14984
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14990
  br i1 %21, label %22, label %12, !dbg !14989, !llvm.loop !14998

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15000
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #27, !dbg !15001
  br label %24, !dbg !15002

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15004 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15009, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15008, metadata !DIExpression()), !dbg !15010
  %4 = icmp eq i64 %3, -1, !dbg !15011
  br i1 %4, label %6, label %5, !dbg !15013

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.250(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15014
  br label %6, !dbg !15016

6:                                                ; preds = %5, %2
  ret void, !dbg !15017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.250(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15018 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15021, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15020, metadata !DIExpression()), !dbg !15022
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15023
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15024
  ret void, !dbg !15025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15026 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15028, metadata !DIExpression()), !dbg !15036
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15037
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15037
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15029, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 0, metadata !15030, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15039
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15041, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15043
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15043
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15039
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15044
  br i1 %5, label %7, label %6, !dbg !15045

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15046
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15046
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15046
  unreachable, !dbg !15046

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15043
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15039
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15047
  call void @llvm.dbg.value(metadata i32 undef, metadata !15032, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15030, metadata !DIExpression()), !dbg !15038
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15048
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15049
  %10 = load i8, i8* %9, align 1, !dbg !15049
  %11 = and i8 %10, 40, !dbg !15050
  %12 = icmp eq i8 %11, 0, !dbg !15050
  call void @llvm.dbg.value(metadata i1 %12, metadata !15033, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15051
  br i1 %12, label %13, label %20, !dbg !15052

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15053
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15053
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15053
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15057
  br i1 %17, label %19, label %18, !dbg !15058

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15059
  br label %19, !dbg !15061

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.246(%struct.k_thread* noundef nonnull %3) #26, !dbg !15062
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15063
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15064
  br label %20, !dbg !15065

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15066
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !15066
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15068
  br i1 %21, label %23, label %22, !dbg !15069

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15070
  unreachable, !dbg !15070

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15041
  call void @llvm.dbg.value(metadata i32 %24, metadata !14034, metadata !DIExpression()) #25, !dbg !15043
  call void @llvm.dbg.value(metadata i32 %24, metadata !14028, metadata !DIExpression()) #25, !dbg !15039
  call void @llvm.dbg.value(metadata i32 %24, metadata !15032, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15066
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !15071
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !15073, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !15030, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15030, metadata !DIExpression()), !dbg !15038
  ret void, !dbg !15074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15077, metadata !DIExpression()), !dbg !15078
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #26, !dbg !15079
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15080
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15081
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15082
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15083
  ret void, !dbg !15084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15085 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15089, metadata !DIExpression()), !dbg !15090
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15091
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15091
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15091
  br i1 %4, label %5, label %6, !dbg !15094

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 726) #27, !dbg !15095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 726) #27, !dbg !15095
  unreachable, !dbg !15095

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15098 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15100, metadata !DIExpression()), !dbg !15101
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15102
  %3 = load i8, i8* %2, align 1, !dbg !15103
  %4 = and i8 %3, -3, !dbg !15103
  store i8 %4, i8* %2, align 1, !dbg !15103
  ret void, !dbg !15104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15105 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15107, metadata !DIExpression()), !dbg !15108
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15109
  br i1 %2, label %3, label %7, !dbg !15111

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14214, metadata !DIExpression()) #25, !dbg !15112
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15115
  %5 = load i8, i8* %4, align 1, !dbg !15116
  %6 = and i8 %5, 127, !dbg !15116
  store i8 %6, i8* %4, align 1, !dbg !15116
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14222, metadata !DIExpression()) #25, !dbg !15117
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15119
  br label %7, !dbg !15120

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15121
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15122
  %10 = zext i1 %9 to i32, !dbg !15122
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15123
  ret void, !dbg !15124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15125 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15127, metadata !DIExpression()), !dbg !15128
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15129
  %3 = load i8, i8* %2, align 1, !dbg !15130
  %4 = or i8 %3, 2, !dbg !15130
  store i8 %4, i8* %2, align 1, !dbg !15130
  ret void, !dbg !15131
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #23 !dbg !15132 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15134, metadata !DIExpression()), !dbg !15138
  call void @llvm.dbg.value(metadata i32 0, metadata !15135, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15140
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15142, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15144
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15144
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15140
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15145
  br i1 %3, label %5, label %4, !dbg !15146

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15147
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15147
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15147
  unreachable, !dbg !15147

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15144
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15140
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15148
  call void @llvm.dbg.value(metadata i32 undef, metadata !15137, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()), !dbg !15139
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15149
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15152
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !15152
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15154
  br i1 %6, label %8, label %7, !dbg !15155

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15156
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15156
  unreachable, !dbg !15156

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15142
  call void @llvm.dbg.value(metadata i32 %9, metadata !14034, metadata !DIExpression()) #25, !dbg !15144
  call void @llvm.dbg.value(metadata i32 %9, metadata !14028, metadata !DIExpression()) #25, !dbg !15140
  call void @llvm.dbg.value(metadata i32 %9, metadata !15137, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15152
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !15157
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15159, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !15135, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()), !dbg !15139
  ret void, !dbg !15160
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15161 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15167, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i32 %0, metadata !15165, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15166, metadata !DIExpression()), !dbg !15172
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15173
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !15174
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15175
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15176
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15177
  call void @llvm.dbg.value(metadata i32 %6, metadata !15168, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i32 0, metadata !15169, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15179
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15181, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15183
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15183
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15179
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15184
  br i1 %8, label %10, label %9, !dbg !15185

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15186
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15186
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15186
  unreachable, !dbg !15186

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15183
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15179
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15187
  call void @llvm.dbg.value(metadata i32 undef, metadata !15171, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()), !dbg !15178
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15188
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15192
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15193
  br i1 %13, label %14, label %15, !dbg !15194

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15195
  br label %15, !dbg !15197

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15198
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !15198
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15200
  br i1 %16, label %18, label %17, !dbg !15201

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15202
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15202
  unreachable, !dbg !15202

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15181
  call void @llvm.dbg.value(metadata i32 %19, metadata !14034, metadata !DIExpression()) #25, !dbg !15183
  call void @llvm.dbg.value(metadata i32 %19, metadata !14028, metadata !DIExpression()) #25, !dbg !15179
  call void @llvm.dbg.value(metadata i32 %19, metadata !15171, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15198
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !15203
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #25, !dbg !15205, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !15169, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()), !dbg !15178
  ret i32 %6, !dbg !15206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15207 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15212, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i64 undef, metadata !15214, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !15211, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15213, metadata !DIExpression()), !dbg !15215
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15216
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15217
  %6 = icmp eq %struct._sfnode* %0, @sched_spinlock, !dbg !15218
  br i1 %6, label %7, label %8, !dbg !15221

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 846) #27, !dbg !15222
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 846) #27, !dbg !15222
  unreachable, !dbg !15222

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15224
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15226, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15228
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15228
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15224
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15229
  br i1 %10, label %12, label %11, !dbg !15230

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15231
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15231
  unreachable, !dbg !15231

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15228
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15224
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15232
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15233
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !15234
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14709, metadata !DIExpression()) #25, !dbg !15235
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !15237
  br i1 %14, label %16, label %15, !dbg !15238

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !15239
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !15239
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !15239
  unreachable, !dbg !15239

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #25, !dbg !15240
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14705, metadata !DIExpression()) #25, !dbg !15240
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14709, metadata !DIExpression()) #25, !dbg !15242
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15244
  br i1 %17, label %19, label %18, !dbg !15245

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !15246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !15246
  unreachable, !dbg !15246

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14700, metadata !DIExpression()) #25, !dbg !15240
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #27, !dbg !15247
  ret i32 %21, !dbg !15248
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15249 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15253, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15254, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata i32 0, metadata !15255, metadata !DIExpression()), !dbg !15259
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15260
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15262, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15264
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15264
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15260
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15265
  br i1 %3, label %5, label %4, !dbg !15266

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15267
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15267
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15267
  unreachable, !dbg !15267

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15264
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15260
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15268
  call void @llvm.dbg.value(metadata i32 undef, metadata !15257, metadata !DIExpression()), !dbg !15259
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15254, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata i32 undef, metadata !15255, metadata !DIExpression()), !dbg !15259
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !15269
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15254, metadata !DIExpression()), !dbg !15258
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15272
  br i1 %8, label %10, label %9, !dbg !15274

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15275
  br label %10, !dbg !15277

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15278
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !15278
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15280
  br i1 %11, label %13, label %12, !dbg !15281

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15282
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15282
  unreachable, !dbg !15282

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15262
  call void @llvm.dbg.value(metadata i32 %14, metadata !14034, metadata !DIExpression()) #25, !dbg !15264
  call void @llvm.dbg.value(metadata i32 %14, metadata !14028, metadata !DIExpression()) #25, !dbg !15260
  call void @llvm.dbg.value(metadata i32 %14, metadata !15257, metadata !DIExpression()), !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !15283
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !15285, !srcloc !14076
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15254, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata i32 undef, metadata !15255, metadata !DIExpression()), !dbg !15259
  ret %struct.k_thread* %7, !dbg !15286
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15287 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15289, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15290, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.value(metadata i32 0, metadata !15291, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15296
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15298, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15300
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15300
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15296
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15301
  br i1 %3, label %5, label %4, !dbg !15302

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15303
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15303
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15303
  unreachable, !dbg !15303

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15300
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15296
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15304
  call void @llvm.dbg.value(metadata i32 undef, metadata !15293, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15290, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !15291, metadata !DIExpression()), !dbg !15295
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !15305
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15290, metadata !DIExpression()), !dbg !15294
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15308
  br i1 %8, label %11, label %9, !dbg !15310

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15311
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15313
  br label %11, !dbg !15314

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15315
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !15315
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15317
  br i1 %12, label %14, label %13, !dbg !15318

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15319
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15319
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15319
  unreachable, !dbg !15319

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15298
  call void @llvm.dbg.value(metadata i32 %15, metadata !14034, metadata !DIExpression()) #25, !dbg !15300
  call void @llvm.dbg.value(metadata i32 %15, metadata !14028, metadata !DIExpression()) #25, !dbg !15296
  call void @llvm.dbg.value(metadata i32 %15, metadata !15293, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !15320
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !15322, !srcloc !14076
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15290, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !15291, metadata !DIExpression()), !dbg !15295
  ret %struct.k_thread* %7, !dbg !15323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15324 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15326, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15134, metadata !DIExpression()) #25, !dbg !15328
  call void @llvm.dbg.value(metadata i32 0, metadata !15135, metadata !DIExpression()) #25, !dbg !15330
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15331
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15333, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15331
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15336
  br i1 %3, label %5, label %4, !dbg !15337

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15338
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15338
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15338
  unreachable, !dbg !15338

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15331
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15339
  call void @llvm.dbg.value(metadata i32 undef, metadata !15137, metadata !DIExpression()) #25, !dbg !15330
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #25, !dbg !15330
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15340
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15341
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !15341
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15343
  br i1 %6, label %8, label %7, !dbg !15344

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15345
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15345
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15345
  unreachable, !dbg !15345

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15333
  call void @llvm.dbg.value(metadata i32 %9, metadata !14034, metadata !DIExpression()) #25, !dbg !15335
  call void @llvm.dbg.value(metadata i32 %9, metadata !14028, metadata !DIExpression()) #25, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %9, metadata !15137, metadata !DIExpression()) #25, !dbg !15330
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15341
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !15346
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15348, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !15135, metadata !DIExpression()) #25, !dbg !15330
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()) #25, !dbg !15330
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15349
  ret void, !dbg !15350
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15351 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15353, metadata !DIExpression()), !dbg !15359
  call void @llvm.dbg.value(metadata i32 %1, metadata !15354, metadata !DIExpression()), !dbg !15359
  call void @llvm.dbg.value(metadata i8 0, metadata !15355, metadata !DIExpression()), !dbg !15359
  call void @llvm.dbg.value(metadata i32 0, metadata !15356, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15361
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15363, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15365
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15365
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15361
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15366
  br i1 %4, label %6, label %5, !dbg !15367

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15368
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15368
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15368
  unreachable, !dbg !15368

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15365
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15361
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15369
  call void @llvm.dbg.value(metadata i32 undef, metadata !15358, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata i8 poison, metadata !15355, metadata !DIExpression()), !dbg !15359
  call void @llvm.dbg.value(metadata i32 undef, metadata !15356, metadata !DIExpression()), !dbg !15360
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15370
  call void @llvm.dbg.value(metadata i1 %9, metadata !15355, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15359
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15373

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14214, metadata !DIExpression()) #25, !dbg !15374
  %14 = load i8, i8* %7, align 1, !dbg !15380
  %15 = and i8 %14, 127, !dbg !15380
  store i8 %15, i8* %7, align 1, !dbg !15380
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14222, metadata !DIExpression()) #25, !dbg !15381
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15383
  store i8 %12, i8* %11, align 2, !dbg !15384
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14231, metadata !DIExpression()) #25, !dbg !15385
  %16 = load i8, i8* %7, align 1, !dbg !15387
  %17 = or i8 %16, -128, !dbg !15387
  store i8 %17, i8* %7, align 1, !dbg !15387
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14238, metadata !DIExpression()) #25, !dbg !15388
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14245, metadata !DIExpression()) #25, !dbg !15390
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14251, metadata !DIExpression()) #25, !dbg !15390
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !15392
  br i1 %18, label %19, label %20, !dbg !15393

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 186) #27, !dbg !15394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 186) #27, !dbg !15394
  unreachable, !dbg !15394

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15395
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14252, metadata !DIExpression()) #25, !dbg !15390
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15396
  br i1 %22, label %32, label %23, !dbg !15395

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14252, metadata !DIExpression()) #25, !dbg !15390
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15397
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14252, metadata !DIExpression()) #25, !dbg !15390
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #27, !dbg !15398
  %27 = icmp sgt i32 %26, 0, !dbg !15399
  br i1 %27, label %28, label %29, !dbg !15400

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #27, !dbg !15401
  br label %33, !dbg !15402

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #27, !dbg !15396
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14252, metadata !DIExpression()) #25, !dbg !15390
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15396
  br i1 %31, label %32, label %23, !dbg !15395, !llvm.loop !15403

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #27, !dbg !15405
  br label %33, !dbg !15406

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15407
  br label %35, !dbg !15408

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15409
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15411
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !15411
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15413
  br i1 %36, label %38, label %37, !dbg !15414

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15415
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15415
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15415
  unreachable, !dbg !15415

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15363
  call void @llvm.dbg.value(metadata i32 %39, metadata !14034, metadata !DIExpression()) #25, !dbg !15365
  call void @llvm.dbg.value(metadata i32 %39, metadata !14028, metadata !DIExpression()) #25, !dbg !15361
  call void @llvm.dbg.value(metadata i32 %39, metadata !15358, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15411
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !15416
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #25, !dbg !15418, !srcloc !14076
  call void @llvm.dbg.value(metadata i8 poison, metadata !15355, metadata !DIExpression()), !dbg !15359
  call void @llvm.dbg.value(metadata i32 undef, metadata !15356, metadata !DIExpression()), !dbg !15360
  ret i1 %9, !dbg !15419
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15424, metadata !DIExpression()), !dbg !15427
  call void @llvm.dbg.value(metadata i32 %1, metadata !15425, metadata !DIExpression()), !dbg !15427
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15428
  call void @llvm.dbg.value(metadata i1 %3, metadata !15426, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15427
  br i1 %3, label %4, label %12, !dbg !15429

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15431
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15432
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15432
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15432
  %9 = load i8, i8* %8, align 1, !dbg !15432
  %10 = icmp eq i8 %9, 0, !dbg !15433
  br i1 %10, label %11, label %12, !dbg !15434

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15435
  br label %12, !dbg !15437

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15438
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15439 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15441, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15445
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15447, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15445
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15450
  br i1 %2, label %4, label %3, !dbg !15451

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15452
  unreachable, !dbg !15452

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15445
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15443, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()), !dbg !15444
  tail call fastcc void @z_sched_lock() #26, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !15457
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15459
  br i1 %5, label %7, label %6, !dbg !15460

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15461
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15461
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15461
  unreachable, !dbg !15461

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15447
  call void @llvm.dbg.value(metadata i32 %8, metadata !14034, metadata !DIExpression()) #25, !dbg !15449
  call void @llvm.dbg.value(metadata i32 %8, metadata !14028, metadata !DIExpression()) #25, !dbg !15445
  call void @llvm.dbg.value(metadata i32 %8, metadata !15443, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !15462
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15464, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !15441, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()), !dbg !15444
  ret void, !dbg !15465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15466 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15467, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %1, metadata !14752, metadata !DIExpression()) #25, !dbg !15472
  %2 = icmp eq i32 %1, 0, !dbg !15473
  br i1 %2, label %4, label %3, !dbg !15474

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.262, i32 0, i32 0), i32 noundef 253) #27, !dbg !15475
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #27, !dbg !15475
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.262, i32 0, i32 0), i32 noundef 253) #27, !dbg !15475
  unreachable, !dbg !15475

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15477
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15477
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15477
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15477
  %9 = load i8, i8* %8, align 1, !dbg !15477
  %10 = icmp eq i8 %9, 1, !dbg !15477
  br i1 %10, label %11, label %12, !dbg !15480

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.262, i32 0, i32 0), i32 noundef 254) #27, !dbg !15481
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #27, !dbg !15481
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.262, i32 0, i32 0), i32 noundef 254) #27, !dbg !15481
  unreachable, !dbg !15481

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15483
  store i8 %13, i8* %8, align 1, !dbg !15483
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15484, !srcloc !15486
  ret void, !dbg !15487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15488 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15490, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15494
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15496, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15494
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15499
  br i1 %2, label %4, label %3, !dbg !15500

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15501
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15501
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15501
  unreachable, !dbg !15501

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15494
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15502
  call void @llvm.dbg.value(metadata i32 undef, metadata !15492, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !15490, metadata !DIExpression()), !dbg !15493
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15503
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15503
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15503
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15503
  %9 = load i8, i8* %8, align 1, !dbg !15503
  %10 = icmp eq i8 %9, 0, !dbg !15503
  br i1 %10, label %11, label %12, !dbg !15508

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 999) #27, !dbg !15509
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #27, !dbg !15509
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 999) #27, !dbg !15509
  unreachable, !dbg !15509

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15511, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %13, metadata !14752, metadata !DIExpression()) #25, !dbg !15516
  %14 = icmp eq i32 %13, 0, !dbg !15517
  br i1 %14, label %16, label %15, !dbg !15518

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1000) #27, !dbg !15519
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #27, !dbg !15519
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1000) #27, !dbg !15519
  unreachable, !dbg !15519

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15521
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15522
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15522
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15522
  %21 = load i8, i8* %20, align 1, !dbg !15523
  %22 = add i8 %21, 1, !dbg !15523
  store i8 %22, i8* %20, align 1, !dbg !15523
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15525
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !15525
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15527
  br i1 %23, label %25, label %24, !dbg !15528

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !15529
  unreachable, !dbg !15529

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15496
  call void @llvm.dbg.value(metadata i32 %26, metadata !14034, metadata !DIExpression()) #25, !dbg !15498
  call void @llvm.dbg.value(metadata i32 %26, metadata !14028, metadata !DIExpression()) #25, !dbg !15494
  call void @llvm.dbg.value(metadata i32 %26, metadata !15492, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !15525
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !15530
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #25, !dbg !15532, !srcloc !14076
  call void @llvm.dbg.value(metadata i32 1, metadata !15490, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !15490, metadata !DIExpression()), !dbg !15493
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15533
  ret void, !dbg !15534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #7 !dbg !15535 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15536
  ret %struct.k_thread* %1, !dbg !15537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !15538 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15542, metadata !DIExpression()), !dbg !15547
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15543, metadata !DIExpression()), !dbg !15547
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15548
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15544, metadata !DIExpression()), !dbg !15547
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15549
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15545, metadata !DIExpression()), !dbg !15547
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !15550
  call void @llvm.dbg.value(metadata i32 %5, metadata !15546, metadata !DIExpression()), !dbg !15547
  %6 = icmp sgt i32 %5, 0, !dbg !15551
  br i1 %6, label %17, label %7, !dbg !15553

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15554
  br i1 %8, label %17, label %9, !dbg !15556

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15557
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15557
  %12 = load i32, i32* %11, align 8, !dbg !15557
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15559
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15559
  %15 = load i32, i32* %14, align 8, !dbg !15559
  %16 = icmp ult i32 %12, %15, !dbg !15560
  br label %17, !dbg !15561

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15562
  ret i1 %18, !dbg !15563
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15564 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15581, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15582, metadata !DIExpression()), !dbg !15596
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !15597
  br i1 %4, label %5, label %6, !dbg !15600

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1179) #27, !dbg !15601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1179) #27, !dbg !15601
  unreachable, !dbg !15601

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15603
  %8 = load i32, i32* %7, align 4, !dbg !15604
  %9 = add nsw i32 %8, 1, !dbg !15604
  store i32 %9, i32* %7, align 4, !dbg !15604
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15605
  store i32 %8, i32* %10, align 8, !dbg !15606
  %11 = load i32, i32* %7, align 4, !dbg !15607
  %12 = icmp eq i32 %11, 0, !dbg !15608
  br i1 %12, label %13, label %35, !dbg !15609

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15610
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #25, !dbg !15610
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15584, metadata !DIExpression()), !dbg !15610
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15610
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15610
  %17 = load i32, i32* %16, align 4, !dbg !15610
  %18 = shl i32 %17, 2, !dbg !15610
  %19 = alloca i8, i32 %18, align 8, !dbg !15610
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15610
  store i8* %19, i8** %20, align 4, !dbg !15610
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15610
  %22 = alloca i8, i32 %17, align 8, !dbg !15610
  store i8* %22, i8** %21, align 4, !dbg !15610
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15610
  store i32 -1, i32* %23, align 4, !dbg !15610
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !15611
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15593, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15583, metadata !DIExpression()), !dbg !15596
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15613
  br i1 %25, label %26, label %27, !dbg !15610

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #25, !dbg !15613
  br label %35, !dbg !15614

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15583, metadata !DIExpression()), !dbg !15596
  %29 = load i32, i32* %7, align 4, !dbg !15615
  %30 = add nsw i32 %29, 1, !dbg !15615
  store i32 %30, i32* %7, align 4, !dbg !15615
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15617
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15617
  store i32 %29, i32* %32, align 8, !dbg !15618
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !15611
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15593, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15583, metadata !DIExpression()), !dbg !15596
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15613
  br i1 %34, label %26, label %27, !dbg !15610, !llvm.loop !15619

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15621
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15622
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #27, !dbg !15623
  ret void, !dbg !15624
}

; Function Attrs: optsize
declare !dbg !15625 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15630 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15633 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15635, metadata !DIExpression()), !dbg !15637
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15636, metadata !DIExpression()), !dbg !15637
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !15638
  br i1 %3, label %4, label %5, !dbg !15641

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1200) #27, !dbg !15642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1200) #27, !dbg !15642
  unreachable, !dbg !15642

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15644
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15645
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #27, !dbg !15646
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15647
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15647
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15649
  br i1 %10, label %11, label %13, !dbg !15650

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15651
  store i32 0, i32* %12, align 4, !dbg !15653
  br label %13, !dbg !15654

13:                                               ; preds = %11, %5
  ret void, !dbg !15655
}

; Function Attrs: optsize
declare !dbg !15656 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15657 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15661, metadata !DIExpression()), !dbg !15664
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15662, metadata !DIExpression()), !dbg !15664
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15665
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !15666
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15663, metadata !DIExpression()), !dbg !15664
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15662, metadata !DIExpression()), !dbg !15664
  ret %struct.k_thread* %4, !dbg !15667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15668 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15672, metadata !DIExpression()), !dbg !15673
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !15674
  ret %struct.rbnode* %2, !dbg !15675
}

; Function Attrs: optsize
declare !dbg !15676 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15679 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15691, metadata !DIExpression()), !dbg !15695
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15696
  %3 = load i32, i32* %2, align 4, !dbg !15696
  %4 = icmp eq i32 %3, 0, !dbg !15698
  br i1 %4, label %10, label %5, !dbg !15699

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15692, metadata !DIExpression()), !dbg !15695
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15700, !range !4206
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15701
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15693, metadata !DIExpression()), !dbg !15695
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !15702
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15694, metadata !DIExpression()), !dbg !15695
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15692, metadata !DIExpression()), !dbg !15695
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15695
  ret %struct.k_thread* %11, !dbg !15703
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15704 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15708, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata i32 0, metadata !15709, metadata !DIExpression()), !dbg !15711
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !15712
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15710, metadata !DIExpression()), !dbg !15711
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15713
  br i1 %3, label %8, label %4, !dbg !15714

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15715
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15717
  call void @llvm.dbg.value(metadata i32 1, metadata !15709, metadata !DIExpression()), !dbg !15711
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !15712
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15710, metadata !DIExpression()), !dbg !15711
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15713
  br i1 %7, label %8, label %4, !dbg !15714, !llvm.loop !15718

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15711
  ret i32 %9, !dbg !15720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #7 !dbg !15721 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15723, metadata !DIExpression()), !dbg !15724
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15725
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !15726
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15727
  ret %struct.k_thread* %4, !dbg !15728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !15729 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15738, metadata !DIExpression()), !dbg !15739
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15740
  tail call fastcc void @sys_dlist_init.267(%struct._dnode* noundef nonnull %2) #26, !dbg !15741
  ret void, !dbg !15742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.267(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !15743 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15747, metadata !DIExpression()), !dbg !15748
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15749
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15750
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15751
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15752
  ret void, !dbg !15753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15754 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15755
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15756
  ret void, !dbg !15757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !15758 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15763, metadata !DIExpression()), !dbg !15764
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15765
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15765
  %4 = load i8, i8* %3, align 2, !dbg !15765
  %5 = sext i8 %4 to i32, !dbg !15766
  ret i32 %5, !dbg !15767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15772, metadata !DIExpression()), !dbg !15775
  call void @llvm.dbg.value(metadata i32 %1, metadata !15773, metadata !DIExpression()), !dbg !15775
  %3 = add i32 %1, 16, !dbg !15776
  %4 = icmp ult i32 %3, 31, !dbg !15776
  br i1 %4, label %6, label %5, !dbg !15776

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1331) #27, !dbg !15780
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.271, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #27, !dbg !15780
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1331) #27, !dbg !15780
  unreachable, !dbg !15780

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15782, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %7, metadata !14752, metadata !DIExpression()) #25, !dbg !15787
  %8 = icmp eq i32 %7, 0, !dbg !15788
  br i1 %8, label %10, label %9, !dbg !15789

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1332) #27, !dbg !15790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #27, !dbg !15790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1332) #27, !dbg !15790
  unreachable, !dbg !15790

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15774, metadata !DIExpression()), !dbg !15775
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15792
  ret void, !dbg !15793
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15794 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15795
  br i1 %1, label %8, label %2, !dbg !15796

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !15797
  br i1 %3, label %8, label %4, !dbg !15798

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15799
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15800
  %7 = xor i1 %6, true, !dbg !15798
  br label %8, !dbg !15798

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #7 !dbg !15802 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15803, !range !6724
  %2 = icmp eq i8 %1, 0, !dbg !15803
  ret i1 %2, !dbg !15804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15805 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15808, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %1, metadata !14752, metadata !DIExpression()) #25, !dbg !15813
  %2 = icmp eq i32 %1, 0, !dbg !15814
  br i1 %2, label %4, label %3, !dbg !15815

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1392) #27, !dbg !15816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #27, !dbg !15816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1392) #27, !dbg !15816
  unreachable, !dbg !15816

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15818
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15820, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15818
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15823
  br i1 %6, label %8, label %7, !dbg !15824

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15825
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15825
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15825
  unreachable, !dbg !15825

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15818
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15826
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()), !dbg !15827
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15828
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14214, metadata !DIExpression()) #25, !dbg !15831
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15833
  %11 = load i8, i8* %10, align 1, !dbg !15834
  %12 = and i8 %11, 127, !dbg !15834
  store i8 %12, i8* %10, align 1, !dbg !15834
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14222, metadata !DIExpression()) #25, !dbg !15835
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #27, !dbg !15837
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15838
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14231, metadata !DIExpression()) #25, !dbg !15839
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15841
  %15 = load i8, i8* %14, align 1, !dbg !15842
  %16 = or i8 %15, -128, !dbg !15842
  store i8 %16, i8* %14, align 1, !dbg !15842
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14238, metadata !DIExpression()) #25, !dbg !15843
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14245, metadata !DIExpression()) #25, !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14251, metadata !DIExpression()) #25, !dbg !15845
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #27, !dbg !15847
  br i1 %17, label %18, label %19, !dbg !15848

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 186) #27, !dbg !15849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 186) #27, !dbg !15849
  unreachable, !dbg !15849

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15850
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14252, metadata !DIExpression()) #25, !dbg !15845
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15851
  br i1 %21, label %32, label %22, !dbg !15850

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14252, metadata !DIExpression()) #25, !dbg !15845
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15852
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14252, metadata !DIExpression()) #25, !dbg !15845
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #27, !dbg !15853
  %26 = icmp sgt i32 %25, 0, !dbg !15854
  br i1 %26, label %27, label %29, !dbg !15855

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15856
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #27, !dbg !15857
  br label %34, !dbg !15858

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #27, !dbg !15851
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14252, metadata !DIExpression()) #25, !dbg !15845
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15851
  br i1 %31, label %32, label %22, !dbg !15850, !llvm.loop !15859

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15861
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #27, !dbg !15862
  br label %34, !dbg !15863

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15864
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #25, !dbg !15865
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14705, metadata !DIExpression()) #25, !dbg !15865
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14709, metadata !DIExpression()) #25, !dbg !15867
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15869
  br i1 %35, label %37, label %36, !dbg !15870

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !15871
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15871
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !15871
  unreachable, !dbg !15871

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15820
  call void @llvm.dbg.value(metadata i32 %38, metadata !14034, metadata !DIExpression()) #25, !dbg !15822
  call void @llvm.dbg.value(metadata i32 %38, metadata !14028, metadata !DIExpression()) #25, !dbg !15818
  call void @llvm.dbg.value(metadata i32 %38, metadata !15807, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #25, !dbg !15865
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #27, !dbg !15872
  ret void, !dbg !15873
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15874 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15878, metadata !DIExpression()), !dbg !15881
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15882, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #25, !dbg !15887
  %4 = icmp eq i32 %3, 0, !dbg !15888
  br i1 %4, label %6, label %5, !dbg !15889

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1463) #27, !dbg !15890
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #27, !dbg !15890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1463) #27, !dbg !15890
  unreachable, !dbg !15890

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15892
  br i1 %7, label %8, label %10, !dbg !15894

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15895
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #26, !dbg !15897
  br label %15, !dbg !15898

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15879, metadata !DIExpression()), !dbg !15881
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15899
  %12 = sext i32 %11 to i64, !dbg !15899
  call void @llvm.dbg.value(metadata i64 %12, metadata !15879, metadata !DIExpression()), !dbg !15881
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #26, !dbg !15900
  %14 = trunc i64 %13 to i32, !dbg !15900
  call void @llvm.dbg.value(metadata i32 %14, metadata !15880, metadata !DIExpression()), !dbg !15881
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15881
  ret i32 %16, !dbg !15901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15902 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15906, metadata !DIExpression()), !dbg !15907
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15908, !srcloc !15910
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15911
  ret void, !dbg !15912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15913 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15917, metadata !DIExpression()), !dbg !15921
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15922, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %2, metadata !14752, metadata !DIExpression()) #25, !dbg !15927
  %3 = icmp eq i32 %2, 0, !dbg !15928
  br i1 %3, label %5, label %4, !dbg !15929

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1420) #27, !dbg !15930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #27, !dbg !15930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1420) #27, !dbg !15930
  unreachable, !dbg !15930

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15932
  br i1 %6, label %7, label %8, !dbg !15934

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #26, !dbg !15935
  br label %43, !dbg !15937

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15919, metadata !DIExpression()), !dbg !15921
  %9 = icmp sgt i64 %0, -3, !dbg !15938
  br i1 %9, label %10, label %14, !dbg !15940

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15941
  %12 = trunc i64 %0 to i32, !dbg !15943
  %13 = add i32 %11, %12, !dbg !15943
  call void @llvm.dbg.value(metadata i32 %13, metadata !15918, metadata !DIExpression()), !dbg !15921
  br label %17, !dbg !15944

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15945
  %16 = sub i32 -2, %15, !dbg !15945
  call void @llvm.dbg.value(metadata i32 %16, metadata !15918, metadata !DIExpression()), !dbg !15921
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15947
  call void @llvm.dbg.value(metadata i32 %18, metadata !15918, metadata !DIExpression()), !dbg !15921
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !15948
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15950, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15952
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15952
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15948
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15953
  br i1 %20, label %22, label %21, !dbg !15954

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15955
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15955
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !15955
  unreachable, !dbg !15955

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !15952
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !15948
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15956
  call void @llvm.dbg.value(metadata i32 undef, metadata !15920, metadata !DIExpression()), !dbg !15921
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15957
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15958
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #26, !dbg !15959
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15960
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15961
  tail call fastcc void @z_add_thread_timeout.250(%struct.k_thread* noundef %24, [1 x i64] %25) #26, !dbg !15961
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15962
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #26, !dbg !15963
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #25, !dbg !15964
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14705, metadata !DIExpression()) #25, !dbg !15964
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14709, metadata !DIExpression()) #25, !dbg !15966
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15968
  br i1 %27, label %29, label %28, !dbg !15969

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !15970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !15970
  unreachable, !dbg !15970

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15950
  call void @llvm.dbg.value(metadata i32 %30, metadata !14034, metadata !DIExpression()) #25, !dbg !15952
  call void @llvm.dbg.value(metadata i32 %30, metadata !14028, metadata !DIExpression()) #25, !dbg !15948
  call void @llvm.dbg.value(metadata i32 %30, metadata !15920, metadata !DIExpression()), !dbg !15921
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #25, !dbg !15964
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #27, !dbg !15971
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15972
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #26, !dbg !15972
  br i1 %33, label %34, label %35, !dbg !15975

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1448) #27, !dbg !15976
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.240, i32 0, i32 0)) #27, !dbg !15976
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1448) #27, !dbg !15976
  unreachable, !dbg !15976

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15978
  %37 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15979
  %38 = zext i32 %37 to i64, !dbg !15979
  %39 = sub nsw i64 %36, %38, !dbg !15980
  call void @llvm.dbg.value(metadata i64 %39, metadata !15917, metadata !DIExpression()), !dbg !15921
  %40 = icmp sgt i64 %39, 0, !dbg !15981
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15981
  %42 = trunc i64 %41 to i32, !dbg !15981
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15921
  ret i32 %44, !dbg !15982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15983 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15985, metadata !DIExpression()), !dbg !15986
  call void @llvm.dbg.value(metadata i64 %0, metadata !14082, metadata !DIExpression()), !dbg !15987
  call void @llvm.dbg.value(metadata i32 10000, metadata !14085, metadata !DIExpression()), !dbg !15987
  call void @llvm.dbg.value(metadata i32 1000, metadata !14086, metadata !DIExpression()), !dbg !15987
  call void @llvm.dbg.value(metadata i8 1, metadata !14087, metadata !DIExpression()), !dbg !15987
  call void @llvm.dbg.value(metadata i1 false, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15987
  call void @llvm.dbg.value(metadata i1 false, metadata !14089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15987
  call void @llvm.dbg.value(metadata i8 0, metadata !14090, metadata !DIExpression()), !dbg !15987
  call void @llvm.dbg.value(metadata i1 false, metadata !14091, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15987
  call void @llvm.dbg.value(metadata i1 true, metadata !14092, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15987
  call void @llvm.dbg.value(metadata i64 0, metadata !14093, metadata !DIExpression()), !dbg !15987
  call void @llvm.dbg.value(metadata i64 0, metadata !14093, metadata !DIExpression()), !dbg !15987
  call void @llvm.dbg.value(metadata i64 %0, metadata !14082, metadata !DIExpression()), !dbg !15987
  %2 = udiv i64 %0, 10, !dbg !15989
  ret i64 %2, !dbg !15993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15994 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15995, !srcloc !15997
  tail call void @z_impl_k_yield() #26, !dbg !15998
  ret void, !dbg !15999
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16004, metadata !DIExpression()), !dbg !16006
  %2 = sext i32 %0 to i64, !dbg !16007
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !16008
  call void @llvm.dbg.value(metadata i64 %3, metadata !16005, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16006
  %4 = shl i64 %3, 32, !dbg !16009
  %5 = ashr exact i64 %4, 32, !dbg !16009
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !16010
  call void @llvm.dbg.value(metadata i32 %6, metadata !16005, metadata !DIExpression()), !dbg !16006
  %7 = sext i32 %6 to i64, !dbg !16011
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !16012
  %9 = trunc i64 %8 to i32, !dbg !16012
  ret i32 %9, !dbg !16013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16014 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16016, metadata !DIExpression()), !dbg !16017
  call void @llvm.dbg.value(metadata i64 %0, metadata !14082, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14085, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i32 10000, metadata !14086, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i8 1, metadata !14087, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i1 false, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16018
  call void @llvm.dbg.value(metadata i1 true, metadata !14089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16018
  call void @llvm.dbg.value(metadata i8 0, metadata !14090, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i1 false, metadata !14091, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16018
  call void @llvm.dbg.value(metadata i1 true, metadata !14092, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16018
  call void @llvm.dbg.value(metadata i64 0, metadata !14093, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i64 0, metadata !14093, metadata !DIExpression()), !dbg !16018
  %2 = add i64 %0, 99, !dbg !16020
  call void @llvm.dbg.value(metadata i64 %2, metadata !14082, metadata !DIExpression()), !dbg !16018
  %3 = udiv i64 %2, 100, !dbg !16021
  ret i64 %3, !dbg !16022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16023 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16025, metadata !DIExpression()), !dbg !16026
  call void @llvm.dbg.value(metadata i64 %0, metadata !14082, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.value(metadata i32 10000, metadata !14085, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14086, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.value(metadata i8 1, metadata !14087, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.value(metadata i1 false, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16027
  call void @llvm.dbg.value(metadata i1 false, metadata !14089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16027
  call void @llvm.dbg.value(metadata i8 0, metadata !14090, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.value(metadata i1 true, metadata !14091, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16027
  call void @llvm.dbg.value(metadata i1 false, metadata !14092, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16027
  call void @llvm.dbg.value(metadata i64 0, metadata !14093, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.value(metadata i64 0, metadata !14093, metadata !DIExpression()), !dbg !16027
  %2 = mul i64 %0, 100, !dbg !16029
  ret i64 %2, !dbg !16031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16032 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16034, metadata !DIExpression()), !dbg !16035
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16036
  br i1 %2, label %14, label %3, !dbg !16038

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16039
  %5 = icmp slt i32 %4, 0, !dbg !16041
  br i1 %5, label %6, label %10, !dbg !16042

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16043
  %8 = load i8, i8* %7, align 1, !dbg !16043
  %9 = icmp eq i8 %8, 16, !dbg !16046
  br i1 %9, label %10, label %14, !dbg !16047

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16048
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16049
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16050, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %11, metadata !14752, metadata !DIExpression()) #25, !dbg !16054
  %12 = icmp eq i32 %11, 0, !dbg !16055
  br i1 %12, label %13, label %14, !dbg !16056

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16057
  br label %14, !dbg !16059

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !16061 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16063, metadata !DIExpression()), !dbg !16064
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16065
  %3 = load i8, i8* %2, align 1, !dbg !16065
  %4 = and i8 %3, 2, !dbg !16066
  %5 = icmp ne i8 %4, 0, !dbg !16067
  ret i1 %5, !dbg !16068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #7 !dbg !16069 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16074
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16073, metadata !DIExpression()), !dbg !16075
  ret %struct.k_thread* %1, !dbg !16076
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16077 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16078, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %1, metadata !14752, metadata !DIExpression()) #25, !dbg !16081
  %2 = icmp eq i32 %1, 0, !dbg !16082
  br i1 %2, label %3, label %8, !dbg !16083

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16084
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16085
  %6 = icmp ne i32 %5, 0, !dbg !16083
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16086
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16089, metadata !DIExpression()), !dbg !16091
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !16092
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16094, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !16096
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !16096
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !16092
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16097
  br i1 %3, label %5, label %4, !dbg !16098

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !16099
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16099
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !16099
  unreachable, !dbg !16099

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16094
  call void @llvm.dbg.value(metadata i32 %6, metadata !14034, metadata !DIExpression()) #25, !dbg !16096
  call void @llvm.dbg.value(metadata i32 %6, metadata !14028, metadata !DIExpression()) #25, !dbg !16092
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16100
  call void @llvm.dbg.value(metadata i32 %6, metadata !16090, metadata !DIExpression()), !dbg !16091
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16101
  %8 = load i8, i8* %7, align 4, !dbg !16101
  %9 = and i8 %8, 1, !dbg !16103
  %10 = icmp eq i8 %9, 0, !dbg !16104
  br i1 %10, label %15, label %11, !dbg !16105

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !16106
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !16106
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16109
  br i1 %12, label %14, label %13, !dbg !16110

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !16111
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !16111
  unreachable, !dbg !16111

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14056, metadata !DIExpression()) #25, !dbg !16106
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #25, !dbg !16112
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16114, !srcloc !14076
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1731) #27, !dbg !16115
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.280, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #27, !dbg !16115
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1731) #27, !dbg !16115
  unreachable, !dbg !16115

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16119
  %17 = load i8, i8* %16, align 1, !dbg !16119
  %18 = and i8 %17, 8, !dbg !16121
  %19 = icmp eq i8 %18, 0, !dbg !16122
  br i1 %19, label %24, label %20, !dbg !16123

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !16124
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !16124
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16127
  br i1 %21, label %23, label %22, !dbg !16128

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !16129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !16129
  unreachable, !dbg !16129

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14056, metadata !DIExpression()) #25, !dbg !16124
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #25, !dbg !16130
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16132, !srcloc !14076
  br label %39, !dbg !16133

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16134
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16135
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16137
  br i1 %26, label %27, label %35, !dbg !16138

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16139, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %28, metadata !14752, metadata !DIExpression()) #25, !dbg !16142
  %29 = icmp eq i32 %28, 0, !dbg !16143
  br i1 %29, label %30, label %35, !dbg !16144

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #25, !dbg !16145
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14705, metadata !DIExpression()) #25, !dbg !16145
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14709, metadata !DIExpression()) #25, !dbg !16148
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16150
  br i1 %31, label %33, label %32, !dbg !16151

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !16152
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16152
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !16152
  unreachable, !dbg !16152

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14700, metadata !DIExpression()) #25, !dbg !16145
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #27, !dbg !16153
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1778) #27, !dbg !16154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.281, i32 0, i32 0)) #27, !dbg !16154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1778) #27, !dbg !16154
  unreachable, !dbg !16154

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !16158
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !16158
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16160
  br i1 %36, label %38, label %37, !dbg !16161

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !16162
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !16162
  unreachable, !dbg !16162

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14056, metadata !DIExpression()) #25, !dbg !16158
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #25, !dbg !16163
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16165, !srcloc !14076
  br label %39, !dbg !16166

39:                                               ; preds = %38, %23
  ret void, !dbg !16166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16167 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16169, metadata !DIExpression()), !dbg !16170
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16171
  %3 = load i8, i8* %2, align 1, !dbg !16171
  %4 = and i8 %3, 8, !dbg !16173
  %5 = icmp eq i8 %4, 0, !dbg !16174
  br i1 %5, label %6, label %20, !dbg !16175

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16176
  %8 = or i8 %7, 8, !dbg !16176
  store i8 %8, i8* %2, align 1, !dbg !16176
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16178
  br i1 %9, label %10, label %12, !dbg !16180

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14214, metadata !DIExpression()) #25, !dbg !16181
  %11 = and i8 %8, 95, !dbg !16184
  store i8 %11, i8* %2, align 1, !dbg !16184
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14222, metadata !DIExpression()) #25, !dbg !16185
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !16187
  br label %12, !dbg !16188

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16189
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16189
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16191
  br i1 %15, label %17, label %16, !dbg !16192

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16193
  br label %17, !dbg !16195

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16196
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16197
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !16198
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16199
  br label %20, !dbg !16200

20:                                               ; preds = %17, %1
  ret void, !dbg !16201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16202 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16206, metadata !DIExpression()), !dbg !16208
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !16209
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16207, metadata !DIExpression()), !dbg !16208
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16210
  br i1 %3, label %10, label %4, !dbg !16211

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16212
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16214
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16215, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 0, metadata !16220, metadata !DIExpression()), !dbg !16221
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16223
  store i32 0, i32* %7, align 4, !dbg !16224
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16225
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !16209
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16207, metadata !DIExpression()), !dbg !16208
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16210
  br i1 %9, label %10, label %4, !dbg !16211, !llvm.loop !16226

10:                                               ; preds = %4, %1
  ret void, !dbg !16228
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16229 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16234, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16233, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !16238
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16240, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !16242
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !16242
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !16238
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16243
  br i1 %4, label %6, label %5, !dbg !16244

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !16245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !16245
  unreachable, !dbg !16245

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16240
  call void @llvm.dbg.value(metadata i32 %7, metadata !14034, metadata !DIExpression()) #25, !dbg !16242
  call void @llvm.dbg.value(metadata i32 %7, metadata !14028, metadata !DIExpression()) #25, !dbg !16238
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16246
  call void @llvm.dbg.value(metadata i32 %7, metadata !16235, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i32 0, metadata !16236, metadata !DIExpression()), !dbg !16237
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16247
  %9 = load i8, i8* %8, align 1, !dbg !16247
  %10 = and i8 %9, 8, !dbg !16249
  %11 = icmp eq i8 %10, 0, !dbg !16250
  br i1 %11, label %12, label %35, !dbg !16251

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16234, metadata !DIExpression()), !dbg !16237
  %14 = icmp eq i64 %13, 0, !dbg !16252
  br i1 %14, label %35, label %15, !dbg !16254

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16255
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16257
  br i1 %17, label %35, label %18, !dbg !16258

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16259
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16259
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16260
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16261
  br i1 %22, label %35, label %23, !dbg !16262

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16263, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 %24, metadata !14752, metadata !DIExpression()) #25, !dbg !16269
  %25 = icmp eq i32 %24, 0, !dbg !16270
  br i1 %25, label %27, label %26, !dbg !16271

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1809) #27, !dbg !16272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.282, i32 0, i32 0)) #27, !dbg !16272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.238, i32 0, i32 0), i32 noundef 1809) #27, !dbg !16272
  unreachable, !dbg !16272

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16274
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16275
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #26, !dbg !16276
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16277
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #26, !dbg !16278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #25, !dbg !16279
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14705, metadata !DIExpression()) #25, !dbg !16279
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14709, metadata !DIExpression()) #25, !dbg !16281
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16283
  br i1 %31, label %33, label %32, !dbg !16284

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !16285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 225) #27, !dbg !16285
  unreachable, !dbg !16285

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14700, metadata !DIExpression()) #25, !dbg !16279
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #27, !dbg !16286
  call void @llvm.dbg.value(metadata i32 %34, metadata !16236, metadata !DIExpression()), !dbg !16237
  br label %40, !dbg !16287

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16288
  call void @llvm.dbg.value(metadata i32 %36, metadata !16236, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !16289
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !16289
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16291
  br i1 %37, label %39, label %38, !dbg !16292

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !16293
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16293
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !16293
  unreachable, !dbg !16293

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14056, metadata !DIExpression()) #25, !dbg !16289
  call void @llvm.dbg.value(metadata i32 %7, metadata !14070, metadata !DIExpression()) #25, !dbg !16294
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !16296, !srcloc !14076
  br label %40, !dbg !16297

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16237
  ret i32 %41, !dbg !16298
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16299 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16303, metadata !DIExpression()), !dbg !16311
  call void @llvm.dbg.value(metadata i32 %1, metadata !16304, metadata !DIExpression()), !dbg !16311
  call void @llvm.dbg.value(metadata i8* %2, metadata !16305, metadata !DIExpression()), !dbg !16311
  call void @llvm.dbg.value(metadata i8 0, metadata !16307, metadata !DIExpression()), !dbg !16311
  call void @llvm.dbg.value(metadata i32 0, metadata !16308, metadata !DIExpression()), !dbg !16312
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14022, metadata !DIExpression()) #25, !dbg !16313
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16315, !srcloc !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !16317
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !16317
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !16313
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16318
  br i1 %5, label %7, label %6, !dbg !16319

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !16320
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16320
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !16320
  unreachable, !dbg !16320

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14034, metadata !DIExpression()) #25, !dbg !16317
  call void @llvm.dbg.value(metadata i32 undef, metadata !14028, metadata !DIExpression()) #25, !dbg !16313
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16321
  call void @llvm.dbg.value(metadata i32 undef, metadata !16310, metadata !DIExpression()), !dbg !16312
  call void @llvm.dbg.value(metadata i8 poison, metadata !16307, metadata !DIExpression()), !dbg !16311
  call void @llvm.dbg.value(metadata i32 undef, metadata !16308, metadata !DIExpression()), !dbg !16312
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #26, !dbg !16322
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16306, metadata !DIExpression()), !dbg !16311
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16325
  br i1 %10, label %15, label %11, !dbg !16327

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16328, metadata !DIExpression()), !dbg !16335
  call void @llvm.dbg.value(metadata i32 %1, metadata !16333, metadata !DIExpression()), !dbg !16335
  call void @llvm.dbg.value(metadata i8* %2, metadata !16334, metadata !DIExpression()), !dbg !16335
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16215, metadata !DIExpression()), !dbg !16338
  call void @llvm.dbg.value(metadata i32 %1, metadata !16220, metadata !DIExpression()), !dbg !16338
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !16340
  store i32 %1, i32* %12, align 4, !dbg !16341
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16342
  store i8* %2, i8** %13, align 4, !dbg !16343
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !16344
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !16345
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #26, !dbg !16346
  call void @llvm.dbg.value(metadata i8 1, metadata !16307, metadata !DIExpression()), !dbg !16311
  br label %15, !dbg !16347

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16307, metadata !DIExpression()), !dbg !16311
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !16348
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14061, metadata !DIExpression()) #25, !dbg !16348
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16350
  br i1 %16, label %18, label %17, !dbg !16351

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !16352
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.236, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16352
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.234, i32 0, i32 0), i32 noundef 194) #27, !dbg !16352
  unreachable, !dbg !16352

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16311
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16315
  call void @llvm.dbg.value(metadata i32 %20, metadata !14034, metadata !DIExpression()) #25, !dbg !16317
  call void @llvm.dbg.value(metadata i32 %20, metadata !14028, metadata !DIExpression()) #25, !dbg !16313
  call void @llvm.dbg.value(metadata i32 %20, metadata !16310, metadata !DIExpression()), !dbg !16312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()) #25, !dbg !16348
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #25, !dbg !16353
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !16355, !srcloc !14076
  call void @llvm.dbg.value(metadata i8 poison, metadata !16307, metadata !DIExpression()), !dbg !16311
  call void @llvm.dbg.value(metadata i32 undef, metadata !16308, metadata !DIExpression()), !dbg !16312
  ret i1 %19, !dbg !16356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16357 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16362, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i64 undef, metadata !16364, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !16361, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16363, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i8** %4, metadata !16365, metadata !DIExpression()), !dbg !16367
  %6 = tail call i32 @z_pend_curr(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !16368
  call void @llvm.dbg.value(metadata i32 %6, metadata !16366, metadata !DIExpression()), !dbg !16367
  %7 = icmp eq i8** %4, null, !dbg !16369
  br i1 %7, label %12, label %8, !dbg !16371

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16372
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16374
  %11 = load i8*, i8** %10, align 4, !dbg !16374
  store i8* %11, i8** %4, align 4, !dbg !16375
  br label %12, !dbg !16376

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16377
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16378 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !16380
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !16381
  ret void, !dbg !16382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16383 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16393, metadata !DIExpression()), !dbg !16410
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16391, metadata !DIExpression()), !dbg !16410
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16392, metadata !DIExpression()), !dbg !16410
  %5 = icmp eq i64 %4, -1, !dbg !16411
  br i1 %5, label %63, label %6, !dbg !16413

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16414
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.287(%struct._dnode* noundef %7) #26, !dbg !16414
  br i1 %8, label %9, label %10, !dbg !16417

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 99) #27, !dbg !16418
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.291, i32 0, i32 0)) #27, !dbg !16418
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 99) #27, !dbg !16418
  unreachable, !dbg !16418

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16420
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16421
  call void @llvm.dbg.value(metadata i32 0, metadata !16394, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16423, metadata !DIExpression()) #25, !dbg !16430
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16432, !srcloc !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16439
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16439
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16430
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16440
  br i1 %13, label %15, label %14, !dbg !16443

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16444
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.294, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16444
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16444
  unreachable, !dbg !16444

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16432
  call void @llvm.dbg.value(metadata i32 %16, metadata !16435, metadata !DIExpression()) #25, !dbg !16439
  call void @llvm.dbg.value(metadata i32 %16, metadata !16429, metadata !DIExpression()) #25, !dbg !16430
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16446
  call void @llvm.dbg.value(metadata i32 %16, metadata !16400, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()), !dbg !16422
  %17 = icmp slt i64 %4, -1, !dbg !16447
  br i1 %17, label %18, label %24, !dbg !16448

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16449
  %20 = add i64 %4, %19, !dbg !16450
  %21 = sub i64 -2, %20, !dbg !16450
  call void @llvm.dbg.value(metadata i64 %21, metadata !16404, metadata !DIExpression()), !dbg !16451
  %22 = icmp sgt i64 %21, 1, !dbg !16452
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16452
  br label %29, !dbg !16453

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16454
  %26 = tail call fastcc i32 @elapsed.295() #26, !dbg !16456
  %27 = sext i32 %26 to i64, !dbg !16456
  %28 = add nsw i64 %25, %27, !dbg !16457
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16458
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16459
  store i64 %30, i64* %31, align 8, !dbg !16460
  %32 = tail call fastcc %struct._timeout* @first() #26, !dbg !16461
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16401, metadata !DIExpression()), !dbg !16463
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16464
  br i1 %33, label %48, label %34, !dbg !16464

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16465
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16401, metadata !DIExpression()), !dbg !16463
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16469
  %38 = load i64, i64* %37, align 8, !dbg !16469
  %39 = icmp slt i64 %35, %38, !dbg !16470
  br i1 %39, label %40, label %44, !dbg !16471

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16469
  %42 = sub nsw i64 %38, %35, !dbg !16472
  store i64 %42, i64* %41, align 8, !dbg !16472
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16474
  tail call fastcc void @sys_dlist_insert.296(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #26, !dbg !16475
  br label %49, !dbg !16476

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16477
  store i64 %45, i64* %31, align 8, !dbg !16477
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #26, !dbg !16478
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16401, metadata !DIExpression()), !dbg !16463
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16464
  br i1 %47, label %48, label %34, !dbg !16464, !llvm.loop !16479

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.297(%struct._dnode* noundef nonnull %7) #26, !dbg !16481
  br label %49, !dbg !16484

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #26, !dbg !16485
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16486
  br i1 %51, label %52, label %59, !dbg !16487

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #26, !dbg !16488
  call void @llvm.dbg.value(metadata i32 %53, metadata !16407, metadata !DIExpression()), !dbg !16489
  %54 = icmp ne i32 %53, 0, !dbg !16490
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16492
  br i1 %57, label %59, label %58, !dbg !16492

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #27, !dbg !16493
  br label %59, !dbg !16495

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16502
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16501, metadata !DIExpression()) #25, !dbg !16502
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16504
  br i1 %60, label %62, label %61, !dbg !16507

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16508
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.299, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16508
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16508
  unreachable, !dbg !16508

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16496, metadata !DIExpression()) #25, !dbg !16502
  call void @llvm.dbg.value(metadata i32 %16, metadata !16510, metadata !DIExpression()) #25, !dbg !16513
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !16515, !srcloc !16516
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()), !dbg !16422
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.287(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !16518 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16524, metadata !DIExpression()), !dbg !16525
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16526
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16526
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16527
  ret i1 %4, !dbg !16528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.295() unnamed_addr #1 !dbg !16529 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16532
  %2 = icmp eq i32 %1, 0, !dbg !16533
  br i1 %2, label %3, label %5, !dbg !16532

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !16534
  br label %5, !dbg !16532

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16532
  ret i32 %6, !dbg !16535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #7 !dbg !16536 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.302() #26, !dbg !16542
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16540, metadata !DIExpression()), !dbg !16543
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16544
  ret %struct._timeout* %2, !dbg !16545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.296(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16546 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16550, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16551, metadata !DIExpression()), !dbg !16554
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16555
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16555
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16552, metadata !DIExpression()), !dbg !16554
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16556
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16557
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16558
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16559
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16560
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16561
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16562
  ret void, !dbg !16563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #7 !dbg !16564 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16568, metadata !DIExpression()), !dbg !16570
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16571
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.300(%struct._dnode* noundef %2) #26, !dbg !16572
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16569, metadata !DIExpression()), !dbg !16570
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16573
  ret %struct._timeout* %4, !dbg !16574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.297(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16575 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16580, metadata !DIExpression()), !dbg !16583
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16581, metadata !DIExpression()), !dbg !16583
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16584
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16582, metadata !DIExpression()), !dbg !16583
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16585
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16586
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16587
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16588
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16589
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16590
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16591
  ret void, !dbg !16592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16593 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16598
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16595, metadata !DIExpression()), !dbg !16599
  %2 = tail call fastcc i32 @elapsed.295() #26, !dbg !16600
  call void @llvm.dbg.value(metadata i32 %2, metadata !16596, metadata !DIExpression()), !dbg !16599
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16601
  br i1 %3, label %14, label %4, !dbg !16603

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16604
  %6 = load i64, i64* %5, align 8, !dbg !16604
  %7 = sext i32 %2 to i64, !dbg !16605
  %8 = sub nsw i64 %6, %7, !dbg !16606
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16607
  br i1 %9, label %14, label %10, !dbg !16608

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16609
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16609
  %13 = trunc i64 %12 to i32, !dbg !16609
  call void @llvm.dbg.value(metadata i32 %13, metadata !16597, metadata !DIExpression()), !dbg !16599
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16611
  call void @llvm.dbg.value(metadata i32 %15, metadata !16597, metadata !DIExpression()), !dbg !16599
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16612
  %17 = icmp ne i32 %16, 0, !dbg !16614
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16615
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16615
  call void @llvm.dbg.value(metadata i32 %20, metadata !16597, metadata !DIExpression()), !dbg !16599
  ret i32 %20, !dbg !16616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.300(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !16617 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16621, metadata !DIExpression()), !dbg !16623
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16622, metadata !DIExpression()), !dbg !16623
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16624
  br i1 %2, label %5, label %3, !dbg !16625

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.301(%struct._dnode* noundef nonnull %0) #26, !dbg !16626
  br label %5, !dbg !16625

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16625
  ret %struct._dnode* %6, !dbg !16627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.301(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !16628 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16630, metadata !DIExpression()), !dbg !16632
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16631, metadata !DIExpression()), !dbg !16632
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16633
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16634
  br i1 %3, label %7, label %4, !dbg !16635

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16636
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16636
  br label %7, !dbg !16635

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16635
  ret %struct._dnode* %8, !dbg !16637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.302() unnamed_addr #7 !dbg !16638 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16642, metadata !DIExpression()), !dbg !16643
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.303() #26, !dbg !16644
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16644
  ret %struct._dnode* %3, !dbg !16645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.303() unnamed_addr #7 !dbg !16646 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16650, metadata !DIExpression()), !dbg !16651
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16652
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16653
  ret i1 %2, !dbg !16654
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16655 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16659, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 -22, metadata !16660, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 0, metadata !16661, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16423, metadata !DIExpression()) #25, !dbg !16666
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16668, !srcloc !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16666
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16671
  br i1 %3, label %5, label %4, !dbg !16672

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16673
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.294, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16673
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16673
  unreachable, !dbg !16673

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16666
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16674
  call void @llvm.dbg.value(metadata i32 undef, metadata !16663, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata i32 -22, metadata !16660, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 undef, metadata !16661, metadata !DIExpression()), !dbg !16665
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16660, metadata !DIExpression()), !dbg !16664
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.287(%struct._dnode* noundef %6) #26, !dbg !16675
  br i1 %7, label %8, label %9, !dbg !16679

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16680
  call void @llvm.dbg.value(metadata i32 0, metadata !16660, metadata !DIExpression()), !dbg !16664
  br label %9, !dbg !16682

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16664
  call void @llvm.dbg.value(metadata i32 %10, metadata !16660, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16683
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16501, metadata !DIExpression()) #25, !dbg !16683
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16685
  br i1 %11, label %13, label %12, !dbg !16686

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16687
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.299, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16687
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16687
  unreachable, !dbg !16687

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16668
  call void @llvm.dbg.value(metadata i32 %14, metadata !16435, metadata !DIExpression()) #25, !dbg !16670
  call void @llvm.dbg.value(metadata i32 %14, metadata !16429, metadata !DIExpression()) #25, !dbg !16666
  call void @llvm.dbg.value(metadata i32 %14, metadata !16663, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16683
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #25, !dbg !16688
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16690, !srcloc !16516
  call void @llvm.dbg.value(metadata i32 %10, metadata !16660, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.value(metadata i32 undef, metadata !16661, metadata !DIExpression()), !dbg !16665
  ret i32 %10, !dbg !16691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !16692 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16694, metadata !DIExpression()), !dbg !16695
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !16696
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16698
  br i1 %3, label %10, label %4, !dbg !16699

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16700
  %6 = load i64, i64* %5, align 8, !dbg !16700
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16702
  %8 = load i64, i64* %7, align 8, !dbg !16703
  %9 = add nsw i64 %8, %6, !dbg !16703
  store i64 %9, i64* %7, align 8, !dbg !16703
  br label %10, !dbg !16704

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16705
  tail call fastcc void @sys_dlist_remove.306(%struct._dnode* noundef %11) #26, !dbg !16706
  ret void, !dbg !16707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.306(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !16708 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16712, metadata !DIExpression()), !dbg !16715
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16716
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16716
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16713, metadata !DIExpression()), !dbg !16715
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16717
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16717
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16714, metadata !DIExpression()), !dbg !16715
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16718
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16719
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16720
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16721
  tail call fastcc void @sys_dnode_init.307(%struct._dnode* noundef %0) #26, !dbg !16722
  ret void, !dbg !16723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.307(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !16724 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16726, metadata !DIExpression()), !dbg !16727
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16728
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16729
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16730
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16731
  ret void, !dbg !16732
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16733 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16739, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i64 0, metadata !16740, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i32 0, metadata !16741, metadata !DIExpression()), !dbg !16745
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16423, metadata !DIExpression()) #25, !dbg !16746
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16748, !srcloc !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16746
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16751
  br i1 %3, label %5, label %4, !dbg !16752

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16753
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.294, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16753
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16753
  unreachable, !dbg !16753

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16746
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16754
  call void @llvm.dbg.value(metadata i32 undef, metadata !16743, metadata !DIExpression()), !dbg !16745
  call void @llvm.dbg.value(metadata i64 0, metadata !16740, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()), !dbg !16745
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16755
  call void @llvm.dbg.value(metadata i64 %6, metadata !16740, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16758
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16501, metadata !DIExpression()) #25, !dbg !16758
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16760
  br i1 %7, label %9, label %8, !dbg !16761

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16762
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.299, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16762
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16762
  unreachable, !dbg !16762

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16748
  call void @llvm.dbg.value(metadata i32 %10, metadata !16435, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 %10, metadata !16429, metadata !DIExpression()) #25, !dbg !16746
  call void @llvm.dbg.value(metadata i32 %10, metadata !16743, metadata !DIExpression()), !dbg !16745
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16758
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #25, !dbg !16763
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !16765, !srcloc !16516
  call void @llvm.dbg.value(metadata i64 %6, metadata !16740, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()), !dbg !16745
  ret i64 %6, !dbg !16766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16767 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16769, metadata !DIExpression()), !dbg !16773
  call void @llvm.dbg.value(metadata i64 0, metadata !16770, metadata !DIExpression()), !dbg !16773
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.308(%struct._timeout* noundef %0) #26, !dbg !16774
  br i1 %2, label %21, label %3, !dbg !16776

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !16777
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16771, metadata !DIExpression()), !dbg !16778
  call void @llvm.dbg.value(metadata i64 0, metadata !16770, metadata !DIExpression()), !dbg !16773
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16779
  br i1 %5, label %16, label %6, !dbg !16781

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16771, metadata !DIExpression()), !dbg !16778
  call void @llvm.dbg.value(metadata i64 %8, metadata !16770, metadata !DIExpression()), !dbg !16773
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16782
  %10 = load i64, i64* %9, align 8, !dbg !16782
  %11 = add nsw i64 %10, %8, !dbg !16784
  call void @llvm.dbg.value(metadata i64 %11, metadata !16770, metadata !DIExpression()), !dbg !16773
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16785
  br i1 %12, label %16, label %13, !dbg !16787

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !16788
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16771, metadata !DIExpression()), !dbg !16778
  call void @llvm.dbg.value(metadata i64 %11, metadata !16770, metadata !DIExpression()), !dbg !16773
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16779
  br i1 %15, label %16, label %6, !dbg !16781, !llvm.loop !16789

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16773
  call void @llvm.dbg.value(metadata i64 %17, metadata !16770, metadata !DIExpression()), !dbg !16773
  %18 = tail call fastcc i32 @elapsed.295() #26, !dbg !16791
  %19 = sext i32 %18 to i64, !dbg !16791
  %20 = sub nsw i64 %17, %19, !dbg !16792
  br label %21, !dbg !16793

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16773
  ret i64 %22, !dbg !16794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.308(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #7 !dbg !16795 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16799, metadata !DIExpression()), !dbg !16800
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16801
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.287(%struct._dnode* noundef %2) #26, !dbg !16802
  %4 = xor i1 %3, true, !dbg !16803
  ret i1 %4, !dbg !16804
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16805 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16807, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata i64 0, metadata !16808, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata i32 0, metadata !16809, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16423, metadata !DIExpression()) #25, !dbg !16814
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16816, !srcloc !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16818
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16818
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16814
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16819
  br i1 %3, label %5, label %4, !dbg !16820

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16821
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.294, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16821
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16821
  unreachable, !dbg !16821

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16818
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16814
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16822
  call void @llvm.dbg.value(metadata i32 undef, metadata !16811, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata i64 0, metadata !16808, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata i32 undef, metadata !16809, metadata !DIExpression()), !dbg !16813
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16823
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16826
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16808, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16812
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16827
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16501, metadata !DIExpression()) #25, !dbg !16827
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16829
  br i1 %8, label %10, label %9, !dbg !16830

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.299, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16831
  unreachable, !dbg !16831

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16816
  call void @llvm.dbg.value(metadata i32 %11, metadata !16435, metadata !DIExpression()) #25, !dbg !16818
  call void @llvm.dbg.value(metadata i32 %11, metadata !16429, metadata !DIExpression()) #25, !dbg !16814
  call void @llvm.dbg.value(metadata i32 %11, metadata !16811, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16808, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16812
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16827
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #25, !dbg !16832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !16834, !srcloc !16516
  call void @llvm.dbg.value(metadata i32 undef, metadata !16809, metadata !DIExpression()), !dbg !16813
  %12 = add i64 %7, %6, !dbg !16835
  ret i64 %12, !dbg !16836
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16837 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16839, metadata !DIExpression()), !dbg !16843
  call void @llvm.dbg.value(metadata i32 0, metadata !16840, metadata !DIExpression()), !dbg !16844
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16423, metadata !DIExpression()) #25, !dbg !16845
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16847, !srcloc !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16849
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16849
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16845
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16850
  br i1 %2, label %4, label %3, !dbg !16851

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16852
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.294, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16852
  unreachable, !dbg !16852

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16849
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16845
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16853
  call void @llvm.dbg.value(metadata i32 undef, metadata !16842, metadata !DIExpression()), !dbg !16844
  call void @llvm.dbg.value(metadata i32 -1, metadata !16839, metadata !DIExpression()), !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !16840, metadata !DIExpression()), !dbg !16844
  %5 = tail call fastcc i32 @next_timeout() #26, !dbg !16854
  call void @llvm.dbg.value(metadata i32 %5, metadata !16839, metadata !DIExpression()), !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16857
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16501, metadata !DIExpression()) #25, !dbg !16857
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16859
  br i1 %6, label %8, label %7, !dbg !16860

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16861
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.299, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16861
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16861
  unreachable, !dbg !16861

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16847
  call void @llvm.dbg.value(metadata i32 %9, metadata !16435, metadata !DIExpression()) #25, !dbg !16849
  call void @llvm.dbg.value(metadata i32 %9, metadata !16429, metadata !DIExpression()) #25, !dbg !16845
  call void @llvm.dbg.value(metadata i32 %9, metadata !16842, metadata !DIExpression()), !dbg !16844
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16857
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #25, !dbg !16862
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16864, !srcloc !16516
  call void @llvm.dbg.value(metadata i32 %5, metadata !16839, metadata !DIExpression()), !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !16840, metadata !DIExpression()), !dbg !16844
  ret i32 %5, !dbg !16865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16868, metadata !DIExpression()), !dbg !16878
  call void @llvm.dbg.value(metadata i1 %1, metadata !16869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16878
  call void @llvm.dbg.value(metadata i32 0, metadata !16870, metadata !DIExpression()), !dbg !16879
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16423, metadata !DIExpression()) #25, !dbg !16880
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16882, !srcloc !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16884
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16884
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16880
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16885
  br i1 %4, label %6, label %5, !dbg !16886

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16887
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.294, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16887
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16887
  unreachable, !dbg !16887

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16884
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16880
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16888
  call void @llvm.dbg.value(metadata i32 undef, metadata !16872, metadata !DIExpression()), !dbg !16879
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()), !dbg !16879
  %7 = tail call fastcc i32 @next_timeout() #26, !dbg !16889
  call void @llvm.dbg.value(metadata i32 %7, metadata !16873, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.value(metadata i1 undef, metadata !16876, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16890
  %8 = icmp slt i32 %7, 2, !dbg !16891
  call void @llvm.dbg.value(metadata i1 %8, metadata !16877, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16890
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16892
  call void @llvm.dbg.value(metadata i1 %9, metadata !16876, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16890
  br i1 %10, label %14, label %11, !dbg !16892

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16894
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16894
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #27, !dbg !16896
  br label %14, !dbg !16897

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16898
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16501, metadata !DIExpression()) #25, !dbg !16898
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16900
  br i1 %15, label %17, label %16, !dbg !16901

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16902
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.299, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16902
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16902
  unreachable, !dbg !16902

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16882
  call void @llvm.dbg.value(metadata i32 %18, metadata !16435, metadata !DIExpression()) #25, !dbg !16884
  call void @llvm.dbg.value(metadata i32 %18, metadata !16429, metadata !DIExpression()) #25, !dbg !16880
  call void @llvm.dbg.value(metadata i32 %18, metadata !16872, metadata !DIExpression()), !dbg !16879
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16898
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #25, !dbg !16903
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16905, !srcloc !16516
  call void @llvm.dbg.value(metadata i32 1, metadata !16870, metadata !DIExpression()), !dbg !16879
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()), !dbg !16879
  ret void, !dbg !16906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16911, metadata !DIExpression()), !dbg !16916
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !16917
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16423, metadata !DIExpression()) #25, !dbg !16918
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16920, !srcloc !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16918
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16923
  br i1 %3, label %5, label %4, !dbg !16924

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16925
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.294, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16925
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16925
  unreachable, !dbg !16925

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16918
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16926
  call void @llvm.dbg.value(metadata i32 undef, metadata !16912, metadata !DIExpression()), !dbg !16916
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16916
  call void @llvm.dbg.value(metadata i32 undef, metadata !16912, metadata !DIExpression()), !dbg !16916
  %6 = tail call fastcc %struct._timeout* @first() #26, !dbg !16927
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16928
  br i1 %7, label %37, label %8, !dbg !16929

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16916
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16930
  %14 = load i64, i64* %13, align 8, !dbg !16930
  %15 = sext i32 %11 to i64, !dbg !16931
  %16 = icmp sgt i64 %14, %15, !dbg !16932
  br i1 %16, label %35, label %17, !dbg !16933

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16913, metadata !DIExpression()), !dbg !16934
  %18 = trunc i64 %14 to i32, !dbg !16935
  call void @llvm.dbg.value(metadata i32 %18, metadata !16915, metadata !DIExpression()), !dbg !16934
  %19 = sext i32 %18 to i64, !dbg !16936
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16937
  %21 = add i64 %20, %19, !dbg !16937
  store i64 %21, i64* @curr_tick, align 8, !dbg !16937
  store i64 0, i64* %13, align 8, !dbg !16938
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #26, !dbg !16939
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16940
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16501, metadata !DIExpression()) #25, !dbg !16940
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16942
  br i1 %22, label %24, label %23, !dbg !16943

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16944
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.299, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16944
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16944
  unreachable, !dbg !16944

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16496, metadata !DIExpression()) #25, !dbg !16940
  call void @llvm.dbg.value(metadata i32 %12, metadata !16510, metadata !DIExpression()) #25, !dbg !16945
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16947, !srcloc !16516
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16948
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16948
  tail call void %26(%struct._timeout* noundef nonnull %9) #27, !dbg !16949
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16423, metadata !DIExpression()) #25, !dbg !16950
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16952, !srcloc !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16954
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16954
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16950
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16955
  br i1 %28, label %30, label %29, !dbg !16956

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16957
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.294, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16957
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16957
  unreachable, !dbg !16957

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16954
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16950
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16958
  call void @llvm.dbg.value(metadata i32 undef, metadata !16912, metadata !DIExpression()), !dbg !16916
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16959
  %32 = sub nsw i32 %31, %18, !dbg !16959
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16916
  call void @llvm.dbg.value(metadata i32 undef, metadata !16912, metadata !DIExpression()), !dbg !16916
  %33 = tail call fastcc %struct._timeout* @first() #26, !dbg !16927
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16928
  br i1 %34, label %37, label %8, !dbg !16929, !llvm.loop !16960

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16962
  store i64 %36, i64* %13, align 8, !dbg !16962
  br label %41, !dbg !16965

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16916
  %40 = sext i32 %39 to i64, !dbg !16966
  br label %41, !dbg !16966

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16966
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16967
  %45 = add i64 %44, %42, !dbg !16967
  store i64 %45, i64* @curr_tick, align 8, !dbg !16967
  store i32 0, i32* @announce_remaining, align 4, !dbg !16968
  %46 = tail call fastcc i32 @next_timeout() #26, !dbg !16969
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #27, !dbg !16970
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !16971
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16501, metadata !DIExpression()) #25, !dbg !16971
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16973
  br i1 %47, label %49, label %48, !dbg !16974

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.299, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !16975
  unreachable, !dbg !16975

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16916
  call void @llvm.dbg.value(metadata i32 %50, metadata !16496, metadata !DIExpression()) #25, !dbg !16971
  call void @llvm.dbg.value(metadata i32 %50, metadata !16510, metadata !DIExpression()) #25, !dbg !16976
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #25, !dbg !16978, !srcloc !16516
  ret void, !dbg !16979
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16980 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16984, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata i32 0, metadata !16985, metadata !DIExpression()), !dbg !16989
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16423, metadata !DIExpression()) #25, !dbg !16990
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16992, !srcloc !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16994
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16994
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16990
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16995
  br i1 %2, label %4, label %3, !dbg !16996

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16997
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.294, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 148) #27, !dbg !16997
  unreachable, !dbg !16997

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16435, metadata !DIExpression()) #25, !dbg !16994
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()) #25, !dbg !16990
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16998
  call void @llvm.dbg.value(metadata i32 undef, metadata !16987, metadata !DIExpression()), !dbg !16989
  call void @llvm.dbg.value(metadata i64 0, metadata !16984, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata i32 undef, metadata !16985, metadata !DIExpression()), !dbg !16989
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16999
  %6 = tail call fastcc i32 @elapsed.295() #26, !dbg !17002
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16984, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16988
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !17003
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16501, metadata !DIExpression()) #25, !dbg !17003
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17005
  br i1 %7, label %9, label %8, !dbg !17006

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !17007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.299, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.293, i32 0, i32 0), i32 noundef 194) #27, !dbg !17007
  unreachable, !dbg !17007

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16992
  call void @llvm.dbg.value(metadata i32 %10, metadata !16435, metadata !DIExpression()) #25, !dbg !16994
  call void @llvm.dbg.value(metadata i32 %10, metadata !16429, metadata !DIExpression()) #25, !dbg !16990
  call void @llvm.dbg.value(metadata i32 %10, metadata !16987, metadata !DIExpression()), !dbg !16989
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16984, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16988
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16984, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16988
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #25, !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #25, !dbg !17008
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !17010, !srcloc !16516
  call void @llvm.dbg.value(metadata i32 undef, metadata !16985, metadata !DIExpression()), !dbg !16989
  %11 = sext i32 %6 to i64, !dbg !17002
  %12 = add i64 %5, %11, !dbg !17011
  ret i64 %12, !dbg !17012
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17013 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17014
  %2 = trunc i64 %1 to i32, !dbg !17015
  ret i32 %2, !dbg !17016
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17017 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17018
  ret i64 %1, !dbg !17019
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17022, metadata !DIExpression()), !dbg !17029
  %2 = icmp eq i32 %0, 0, !dbg !17030
  br i1 %2, label %10, label %3, !dbg !17032

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17033
  call void @llvm.dbg.value(metadata i32 %4, metadata !17023, metadata !DIExpression()), !dbg !17029
  %5 = mul i32 %0, 84, !dbg !17034
  call void @llvm.dbg.value(metadata i32 %5, metadata !17024, metadata !DIExpression()), !dbg !17029
  br label %6, !dbg !17035

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %7, metadata !17025, metadata !DIExpression()), !dbg !17037
  %8 = sub i32 %7, %4, !dbg !17038
  %9 = icmp ult i32 %8, %5, !dbg !17040
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17042 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17043
  ret i32 %1, !dbg !17044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17045 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !17047
  ret i32 %1, !dbg !17048
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17049 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17053, metadata !DIExpression()), !dbg !17055
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17056

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17057
  br label %14, !dbg !17061

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17054, metadata !DIExpression()), !dbg !17055
  %6 = icmp slt i64 %2, -1, !dbg !17062
  br i1 %6, label %7, label %9, !dbg !17065

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17066
  br label %14, !dbg !17067

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17069
  %11 = icmp ugt i64 %2, 1, !dbg !17070
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17070
  %13 = add nsw i64 %10, %12, !dbg !17071
  br label %14, !dbg !17072

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17073
  ret i64 %15, !dbg !17074
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !17075 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17077, metadata !DIExpression()), !dbg !17081
  %2 = icmp eq i8* %0, null, !dbg !17082
  br i1 %2, label %7, label %3, !dbg !17084

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !17078, metadata !DIExpression()), !dbg !17081
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !17085
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !17085
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !17078, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i8* %4, metadata !17077, metadata !DIExpression()), !dbg !17081
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !17087
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #27, !dbg !17088
  br label %7, !dbg !17089

7:                                                ; preds = %3, %1
  ret void, !dbg !17090
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17095, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 %1, metadata !17096, metadata !DIExpression()), !dbg !17098
  %3 = icmp ugt i32 %0, 3, !dbg !17099
  %4 = and i32 %0, 3, !dbg !17099
  %5 = icmp eq i32 %4, 0, !dbg !17099
  %6 = and i1 %3, %5, !dbg !17099
  br i1 %6, label %8, label %7, !dbg !17099

7:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.320, i32 0, i32 0), i32 noundef 68) #27, !dbg !17102
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.321, i32 0, i32 0)) #27, !dbg !17102
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.320, i32 0, i32 0), i32 noundef 68) #27, !dbg !17102
  unreachable, !dbg !17102

8:                                                ; preds = %2
  %9 = tail call i32 @llvm.ctpop.i32(i32 %0), !dbg !17104, !range !4206
  %10 = icmp ult i32 %9, 2, !dbg !17104
  br i1 %10, label %12, label %11, !dbg !17107

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.320, i32 0, i32 0), i32 noundef 71) #27, !dbg !17108
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.323, i32 0, i32 0)) #27, !dbg !17108
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.320, i32 0, i32 0), i32 noundef 71) #27, !dbg !17108
  unreachable, !dbg !17108

12:                                               ; preds = %8
  %13 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #26, !dbg !17110
  call void @llvm.dbg.value(metadata i8* %13, metadata !17097, metadata !DIExpression()), !dbg !17098
  ret i8* %13, !dbg !17111
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !17112 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17116, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 %1, metadata !17117, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 %2, metadata !17118, metadata !DIExpression()), !dbg !17122
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !17118, metadata !DIExpression(DW_OP_deref)), !dbg !17122
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !17123
  br i1 %5, label %21, label %6, !dbg !17125

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !17126
  call void @llvm.dbg.value(metadata i32 %7, metadata !17121, metadata !DIExpression()), !dbg !17122
  %8 = load i32, i32* %4, align 4, !dbg !17127
  call void @llvm.dbg.value(metadata i32 %8, metadata !17118, metadata !DIExpression()), !dbg !17122
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #27, !dbg !17128
  call void @llvm.dbg.value(metadata i8* %9, metadata !17119, metadata !DIExpression()), !dbg !17122
  %10 = icmp eq i8* %9, null, !dbg !17129
  br i1 %10, label %21, label %11, !dbg !17131

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17132
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !17120, metadata !DIExpression()), !dbg !17122
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17133
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17134
  call void @llvm.dbg.value(metadata i8* %13, metadata !17120, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i8* %13, metadata !17119, metadata !DIExpression()), !dbg !17122
  %14 = icmp eq i32 %1, 0, !dbg !17135
  br i1 %14, label %21, label %15, !dbg !17135

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i32, !dbg !17135
  %17 = add i32 %1, -1, !dbg !17135
  %18 = and i32 %17, %16, !dbg !17135
  %19 = icmp eq i32 %18, 0, !dbg !17135
  br i1 %19, label %21, label %20, !dbg !17138

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.320, i32 0, i32 0), i32 noundef 38) #27, !dbg !17139
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.325, i32 0, i32 0), i8* noundef nonnull %13, i32 noundef %1) #27, !dbg !17139
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.320, i32 0, i32 0), i32 noundef 38) #27, !dbg !17139
  unreachable, !dbg !17139

21:                                               ; preds = %11, %15, %6, %3
  %22 = phi i8* [ null, %3 ], [ null, %6 ], [ %13, %15 ], [ %13, %11 ], !dbg !17122
  ret i8* %22, !dbg !17141
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !17142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17147, metadata !DIExpression()), !dbg !17150
  call void @llvm.dbg.value(metadata i32 4, metadata !17148, metadata !DIExpression()), !dbg !17150
  call void @llvm.dbg.value(metadata i32* %1, metadata !17149, metadata !DIExpression()), !dbg !17150
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17151
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17151
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17151
  store i32 %5, i32* %1, align 4, !dbg !17151
  ret i1 %4, !dbg !17152
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !17153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17155, metadata !DIExpression()), !dbg !17157
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #26, !dbg !17158
  call void @llvm.dbg.value(metadata i8* %2, metadata !17156, metadata !DIExpression()), !dbg !17157
  ret i8* %2, !dbg !17159
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17160 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !17162, metadata !DIExpression()), !dbg !17166
  call void @llvm.dbg.value(metadata i32 %1, metadata !17163, metadata !DIExpression()), !dbg !17166
  %4 = bitcast i32* %3 to i8*, !dbg !17167
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !17167
  call void @llvm.dbg.value(metadata i32* %3, metadata !17165, metadata !DIExpression(DW_OP_deref)), !dbg !17166
  %5 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #26, !dbg !17168
  br i1 %5, label %12, label %6, !dbg !17170

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !17171
  call void @llvm.dbg.value(metadata i32 %7, metadata !17165, metadata !DIExpression()), !dbg !17166
  %8 = tail call i8* @k_malloc(i32 noundef %7) #26, !dbg !17172
  call void @llvm.dbg.value(metadata i8* %8, metadata !17164, metadata !DIExpression()), !dbg !17166
  %9 = icmp eq i8* %8, null, !dbg !17173
  br i1 %9, label %12, label %10, !dbg !17175

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !17165, metadata !DIExpression()), !dbg !17166
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #27, !dbg !17176
  br label %12, !dbg !17178

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !17166
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !17179
  ret i8* %13, !dbg !17179
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !17180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17182, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata i32 %1, metadata !17183, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata i32* %2, metadata !17184, metadata !DIExpression()), !dbg !17185
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !17186
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !17186
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !17186
  store i32 %6, i32* %2, align 4, !dbg !17186
  ret i1 %5, !dbg !17187
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !17188 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17262, metadata !DIExpression()), !dbg !17263
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !17264
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !17265
  ret void, !dbg !17266
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17269, metadata !DIExpression()), !dbg !17273
  call void @llvm.dbg.value(metadata i32 %1, metadata !17270, metadata !DIExpression()), !dbg !17273
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17274
  br i1 %3, label %9, label %4, !dbg !17276

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17277
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !17279
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !17279
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !17272, metadata !DIExpression()), !dbg !17273
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !17280
  br i1 %8, label %12, label %9, !dbg !17282

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #26, !dbg !17283
  call void @llvm.dbg.value(metadata i8* %11, metadata !17271, metadata !DIExpression()), !dbg !17273
  br label %12, !dbg !17285

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !17286
  call void @llvm.dbg.value(metadata i8* %13, metadata !17271, metadata !DIExpression()), !dbg !17273
  ret i8* %13, !dbg !17287
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !17288 {
  tail call void asm sideeffect "nop", ""() #25, !dbg !17290, !srcloc !17293
  ret void, !dbg !17294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17295 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.336, i32 0, i32 0)) #27, !dbg !17297
  ret void, !dbg !17298
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17299 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17301, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17302, metadata !DIExpression()), !dbg !17324
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !17325

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 24) #27, !dbg !17329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.341, i32 0, i32 0)) #27, !dbg !17329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 24) #27, !dbg !17329
  unreachable, !dbg !17329

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17302, metadata !DIExpression()), !dbg !17324
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17332
  br i1 %5, label %7, label %6, !dbg !17333

6:                                                ; preds = %3
  ret i32 0, !dbg !17334

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17335
  %9 = load i8*, i8** %8, align 4, !dbg !17335
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17338
  %11 = load i32, i32* %10, align 4, !dbg !17338
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #26, !dbg !17339
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17340
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !17302, metadata !DIExpression()), !dbg !17324
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17341
  br i1 %13, label %2, label %3, !dbg !17325, !llvm.loop !17342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17344 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17348, metadata !DIExpression()), !dbg !17351
  call void @llvm.dbg.value(metadata i8* %1, metadata !17349, metadata !DIExpression()), !dbg !17351
  call void @llvm.dbg.value(metadata i32 %2, metadata !17350, metadata !DIExpression()), !dbg !17351
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17352
  tail call fastcc void @z_waitq_init.342(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !17353
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17354
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !17355
  ret void, !dbg !17356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.342(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !17357 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17362, metadata !DIExpression()), !dbg !17363
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17364
  tail call fastcc void @sys_dlist_init.343(%struct._dnode* noundef %2) #26, !dbg !17365
  ret void, !dbg !17366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.343(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !17367 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17372, metadata !DIExpression()), !dbg !17373
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17374
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17375
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17376
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17377
  ret void, !dbg !17378
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17379 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17390, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17387, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i32 %1, metadata !17388, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i32 %2, metadata !17389, metadata !DIExpression()), !dbg !17400
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !17401
  call void @llvm.dbg.value(metadata i64 %6, metadata !17392, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i8* null, metadata !17393, metadata !DIExpression()), !dbg !17400
  %7 = icmp eq i64 %5, -1, !dbg !17402
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17402
  call void @llvm.dbg.value(metadata i64 %8, metadata !17392, metadata !DIExpression()), !dbg !17400
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17403
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !17404, metadata !DIExpression()) #25, !dbg !17411
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17413, !srcloc !17419
  call void @llvm.dbg.value(metadata i32 undef, metadata !17416, metadata !DIExpression()) #25, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !17417, metadata !DIExpression()) #25, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !17410, metadata !DIExpression()) #25, !dbg !17411
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !17421
  br i1 %11, label %13, label %12, !dbg !17424

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.347, i32 0, i32 0), i32 noundef 148) #27, !dbg !17425
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.348, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !17425
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.347, i32 0, i32 0), i32 noundef 148) #27, !dbg !17425
  unreachable, !dbg !17425

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17416, metadata !DIExpression()) #25, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !17410, metadata !DIExpression()) #25, !dbg !17411
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %9) #27, !dbg !17427
  call void @llvm.dbg.value(metadata i32 undef, metadata !17394, metadata !DIExpression()), !dbg !17400
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17428, !srcloc !17437
  call void @llvm.dbg.value(metadata i32 %14, metadata !17431, metadata !DIExpression()) #25, !dbg !17438
  %15 = icmp eq i32 %14, 0, !dbg !17439
  %16 = icmp eq i64 %5, 0, !dbg !17440
  %17 = select i1 %15, i1 true, i1 %16, !dbg !17440
  br i1 %17, label %18, label %25, !dbg !17440

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17393, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i8 0, metadata !17399, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i32 undef, metadata !17394, metadata !DIExpression()), !dbg !17400
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !17441
  call void @llvm.dbg.value(metadata i8* %20, metadata !17393, metadata !DIExpression()), !dbg !17400
  %21 = tail call i64 @sys_clock_tick_get() #27, !dbg !17443
  call void @llvm.dbg.value(metadata i64 %21, metadata !17391, metadata !DIExpression()), !dbg !17400
  %22 = icmp eq i8* %20, null, !dbg !17444
  br i1 %22, label %23, label %43, !dbg !17446

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !17394, metadata !DIExpression()), !dbg !17400
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !17446

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 76) #27, !dbg !17447
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.350, i32 0, i32 0)) #27, !dbg !17447
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 76) #27, !dbg !17447
  unreachable, !dbg !17447

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17399, metadata !DIExpression()), !dbg !17400
  %29 = sub nsw i64 %8, %27, !dbg !17449
  %30 = icmp slt i64 %29, 1, !dbg !17450
  br i1 %30, label %43, label %31, !dbg !17451

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !17400
  call void @llvm.dbg.value(metadata i8 undef, metadata !17399, metadata !DIExpression()), !dbg !17400
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !17452
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !17452
  %35 = tail call i32 @z_pend_curr(%struct._sfnode* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #27, !dbg !17452
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !17404, metadata !DIExpression()) #25, !dbg !17453
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17455, !srcloc !17419
  call void @llvm.dbg.value(metadata i32 undef, metadata !17416, metadata !DIExpression()) #25, !dbg !17457
  call void @llvm.dbg.value(metadata i32 undef, metadata !17417, metadata !DIExpression()) #25, !dbg !17457
  call void @llvm.dbg.value(metadata i32 undef, metadata !17410, metadata !DIExpression()) #25, !dbg !17453
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !17458
  br i1 %37, label %39, label %38, !dbg !17459

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.347, i32 0, i32 0), i32 noundef 148) #27, !dbg !17460
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.348, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !17460
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.347, i32 0, i32 0), i32 noundef 148) #27, !dbg !17460
  unreachable, !dbg !17460

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !17399, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i32 undef, metadata !17416, metadata !DIExpression()) #25, !dbg !17457
  call void @llvm.dbg.value(metadata i32 undef, metadata !17410, metadata !DIExpression()) #25, !dbg !17453
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %9) #27, !dbg !17461
  call void @llvm.dbg.value(metadata i32 undef, metadata !17394, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i8* null, metadata !17393, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i32 undef, metadata !17394, metadata !DIExpression()), !dbg !17400
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !17441
  call void @llvm.dbg.value(metadata i8* %40, metadata !17393, metadata !DIExpression()), !dbg !17400
  %41 = tail call i64 @sys_clock_tick_get() #27, !dbg !17443
  call void @llvm.dbg.value(metadata i64 %41, metadata !17391, metadata !DIExpression()), !dbg !17400
  %42 = icmp eq i8* %40, null, !dbg !17444
  br i1 %42, label %26, label %43, !dbg !17446, !llvm.loop !17462

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !17441
  call void @llvm.dbg.value(metadata i8* %45, metadata !17393, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #25, !dbg !17471
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !17470, metadata !DIExpression()) #25, !dbg !17471
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !17473
  br i1 %46, label %48, label %47, !dbg !17476

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.347, i32 0, i32 0), i32 noundef 194) #27, !dbg !17477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.352, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !17477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.347, i32 0, i32 0), i32 noundef 194) #27, !dbg !17477
  unreachable, !dbg !17477

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !17400
  call void @llvm.dbg.value(metadata i32 %49, metadata !17465, metadata !DIExpression()) #25, !dbg !17471
  call void @llvm.dbg.value(metadata i32 %49, metadata !17479, metadata !DIExpression()) #25, !dbg !17482
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #25, !dbg !17484, !srcloc !17485
  ret i8* %45, !dbg !17486
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17487 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17493, metadata !DIExpression()), !dbg !17495
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17491, metadata !DIExpression()), !dbg !17495
  call void @llvm.dbg.value(metadata i32 %1, metadata !17492, metadata !DIExpression()), !dbg !17495
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17496
  call void @llvm.dbg.value(metadata i8* %4, metadata !17494, metadata !DIExpression()), !dbg !17495
  ret i8* %4, !dbg !17497
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17498 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17502, metadata !DIExpression()), !dbg !17505
  call void @llvm.dbg.value(metadata i8* %1, metadata !17503, metadata !DIExpression()), !dbg !17505
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17506
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !17404, metadata !DIExpression()) #25, !dbg !17507
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17509, !srcloc !17419
  call void @llvm.dbg.value(metadata i32 undef, metadata !17416, metadata !DIExpression()) #25, !dbg !17511
  call void @llvm.dbg.value(metadata i32 undef, metadata !17417, metadata !DIExpression()) #25, !dbg !17511
  call void @llvm.dbg.value(metadata i32 undef, metadata !17410, metadata !DIExpression()) #25, !dbg !17507
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !17512
  br i1 %5, label %7, label %6, !dbg !17513

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.347, i32 0, i32 0), i32 noundef 148) #27, !dbg !17514
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.348, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !17514
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.347, i32 0, i32 0), i32 noundef 148) #27, !dbg !17514
  unreachable, !dbg !17514

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !17509
  call void @llvm.dbg.value(metadata i32 %8, metadata !17416, metadata !DIExpression()) #25, !dbg !17511
  call void @llvm.dbg.value(metadata i32 %8, metadata !17410, metadata !DIExpression()) #25, !dbg !17507
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %3) #27, !dbg !17515
  call void @llvm.dbg.value(metadata i32 %8, metadata !17504, metadata !DIExpression()), !dbg !17505
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17516
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #27, !dbg !17517
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17518
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #27, !dbg !17520
  %12 = icmp eq i32 %11, 0, !dbg !17521
  br i1 %12, label %15, label %13, !dbg !17522

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !17523
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %3, [1 x i32] %14) #27, !dbg !17523
  br label %19, !dbg !17525

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #25, !dbg !17526
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !17470, metadata !DIExpression()) #25, !dbg !17526
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !17529
  br i1 %16, label %18, label %17, !dbg !17530

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.347, i32 0, i32 0), i32 noundef 194) #27, !dbg !17531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.352, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !17531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.347, i32 0, i32 0), i32 noundef 194) #27, !dbg !17531
  unreachable, !dbg !17531

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !17465, metadata !DIExpression()) #25, !dbg !17526
  call void @llvm.dbg.value(metadata i32 %8, metadata !17479, metadata !DIExpression()) #25, !dbg !17532
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17534, !srcloc !17485
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !17535
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!893, !2, !2560, !27, !432, !2562, !2564, !2597, !2635, !2637, !443, !487, !2639, !2650, !2696, !2698, !2726, !2754, !2797, !2868, !2913, !516, !651, !2941, !687, !697, !722, !929, !2946, !1067, !1133, !1423, !1680, !2985, !1795, !1885, !2987, !3073, !3138, !1937, !3141, !1944, !2308, !3159, !3161, !2328, !3202, !2445, !2486, !3205, !3207, !2529}
!llvm.ident = !{!3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209, !3209}
!llvm.module.flags = !{!3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "printk_fifo", scope: !27, file: !218, line: 37, type: !410, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !112, globals: !215, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/threads/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!29 = !{!30, !101, !107}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !102, line: 506, baseType: !32, size: 32, elements: !103)
!102 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!105 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!106 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !102, line: 512, baseType: !32, size: 32, elements: !108)
!108 = !{!109, !110, !111}
!109 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!110 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!111 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!112 = !{!113, !117, !118, !119, !202, !207, !167, !107, !101, !212, !156, !213}
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !114, line: 46, baseType: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !116)
!116 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!118 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !122)
!122 = !{!123, !157, !163, !168, !172, !173, !174, !178, !198}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !121, file: !102, line: 524, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!118, !127, !154, !155}
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !131)
!130 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!131 = !{!132, !136, !137, !138, !147, !148}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !129, file: !130, line: 380, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !129, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !129, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !129, file: !130, line: 386, baseType: !139, size: 32, offset: 96)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !141)
!141 = !{!142, !145}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !140, file: !130, line: 359, baseType: !143, size: 8)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !144)
!144 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !140, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!146 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !129, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !129, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !130, line: 43, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !153)
!153 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !102, line: 237, baseType: !143)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !102, line: 257, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !121, file: !102, line: 530, baseType: !158, size: 32, offset: 32)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!159 = !DISubroutineType(types: !160)
!160 = !{!118, !127, !161}
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !102, line: 229, baseType: !156)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !121, file: !102, line: 532, baseType: !164, size: 32, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!165 = !DISubroutineType(types: !166)
!166 = !{!118, !127, !167, !162}
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !102, line: 216, baseType: !156)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !121, file: !102, line: 535, baseType: !169, size: 32, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DISubroutineType(types: !171)
!171 = !{!118, !127, !167}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !121, file: !102, line: 537, baseType: !169, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !121, file: !102, line: 539, baseType: !169, size: 32, offset: 160)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !121, file: !102, line: 541, baseType: !175, size: 32, offset: 192)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!176 = !DISubroutineType(types: !177)
!177 = !{!118, !127, !154, !101, !107}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !121, file: !102, line: 544, baseType: !179, size: 32, offset: 224)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!118, !127, !182, !146}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !184)
!184 = !{!185, !192, !197}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !183, file: !102, line: 482, baseType: !186, size: 32)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !189)
!189 = !{!190}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !188, file: !187, line: 30, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !183, file: !102, line: 485, baseType: !193, size: 32, offset: 32)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !194)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DISubroutineType(types: !196)
!196 = !{null, !127, !182, !167}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !183, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !121, file: !102, line: 547, baseType: !199, size: 32, offset: 256)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!156, !127}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !205)
!205 = !{!206}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !204, file: !102, line: 434, baseType: !167, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !210)
!210 = !{!211}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !209, file: !102, line: 447, baseType: !167, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !214)
!214 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!215 = !{!25, !216, !368, !372, !374, !376, !378, !380, !385, !387, !389, !391, !393, !395, !408}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "_k_thread_data_blink0_id", scope: !27, file: !218, line: 111, type: !219, isLocal: false, isDefinition: true, align: 32)
!218 = !DIFile(filename: "zephyr/samples/basic/threads/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !220, line: 620, size: 384, elements: !221)
!220 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!221 = !{!222, !342, !350, !351, !356, !357, !358, !359, !360, !361, !363, !367}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !219, file: !220, line: 621, baseType: !223, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !226)
!225 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !{!227, !294, !307, !308, !309, !310, !318, !337}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !224, file: !225, line: 247, baseType: !228, size: 384)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !229)
!229 = !{!230, !258, !266, !267, !268, !281, !282, !283}
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !228, file: !225, line: 60, baseType: !231, size: 64)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !228, file: !225, line: 60, size: 64, elements: !232)
!232 = !{!233, !249}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !231, file: !225, line: 61, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !236)
!235 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !237)
!237 = !{!238, !244}
!238 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !235, line: 38, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !235, line: 38, size: 32, elements: !240)
!240 = !{!241, !243}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !239, file: !235, line: 39, baseType: !242, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !239, file: !235, line: 40, baseType: !242, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !235, line: 42, baseType: !245, size: 32, offset: 32)
!245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !235, line: 42, size: 32, elements: !246)
!246 = !{!247, !248}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !245, file: !235, line: 43, baseType: !242, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !245, file: !235, line: 44, baseType: !242, size: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !231, file: !225, line: 62, baseType: !250, size: 64)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !250, file: !251, line: 50, baseType: !254, size: 64)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 64, elements: !256)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 32)
!256 = !{!257}
!257 = !DISubrange(count: 2)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !228, file: !225, line: 68, baseType: !259, size: 32, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !262)
!261 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !263)
!263 = !{!264}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !262, file: !261, line: 232, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !236)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !228, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !228, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !228, file: !225, line: 90, baseType: !269, size: 16, offset: 112)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !228, file: !225, line: 90, size: 16, elements: !270)
!270 = !{!271, !278}
!271 = !DIDerivedType(tag: DW_TAG_member, scope: !269, file: !225, line: 91, baseType: !272, size: 16)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !269, file: !225, line: 91, size: 16, elements: !273)
!273 = !{!274, !277}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !272, file: !225, line: 96, baseType: !275, size: 8)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !276)
!276 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !272, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !269, file: !225, line: 100, baseType: !279, size: 16)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !280)
!280 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !228, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !228, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !228, file: !225, line: 131, baseType: !284, size: 192, offset: 192)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !285)
!285 = !{!286, !287, !293}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !284, file: !261, line: 245, baseType: !234, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !284, file: !261, line: 246, baseType: !288, size: 32, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 32)
!290 = !DISubroutineType(types: !291)
!291 = !{null, !292}
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !284, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !224, file: !225, line: 250, baseType: !295, size: 288, offset: 384)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298, !299, !300, !301, !302, !303, !304, !305, !306}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !295, file: !296, line: 26, baseType: !156, size: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !295, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !295, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !295, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !295, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !295, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !295, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !295, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !295, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !224, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !224, file: !225, line: 256, baseType: !260, size: 64, offset: 704)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !224, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !224, file: !225, line: 300, baseType: !311, size: 96, offset: 800)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !312)
!312 = !{!313, !314, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !311, file: !225, line: 153, baseType: !22, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !311, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !316, line: 214, baseType: !32)
!316 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !311, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !224, file: !225, line: 325, baseType: !319, size: 32, offset: 896)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !321)
!321 = !{!322, !331, !332}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !320, file: !220, line: 5074, baseType: !323, size: 96)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !325)
!324 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !{!326, !329, !330}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !323, file: !324, line: 57, baseType: !327, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !324, line: 57, flags: DIFlagFwdDecl)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !323, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !323, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !320, file: !220, line: 5075, baseType: !260, size: 64, offset: 96)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !320, file: !220, line: 5076, baseType: !333, size: 32, offset: 160)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !333, file: !334, line: 52, baseType: !22, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !224, file: !225, line: 343, baseType: !338, size: 64, offset: 928)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !338, file: !296, line: 63, baseType: !156, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !338, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !219, file: !220, line: 622, baseType: !343, size: 32, offset: 32)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !348)
!347 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !346, file: !347, line: 48, baseType: !135, size: 8)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !219, file: !220, line: 623, baseType: !32, size: 32, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !219, file: !220, line: 624, baseType: !352, size: 32, offset: 96)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !345, line: 46, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = !DISubroutineType(types: !355)
!355 = !{null, !117, !117, !117}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !219, file: !220, line: 625, baseType: !117, size: 32, offset: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !219, file: !220, line: 626, baseType: !117, size: 32, offset: 160)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !219, file: !220, line: 627, baseType: !117, size: 32, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !219, file: !220, line: 628, baseType: !118, size: 32, offset: 224)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !219, file: !220, line: 629, baseType: !156, size: 32, offset: 256)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !219, file: !220, line: 630, baseType: !362, size: 32, offset: 288)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !118)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !219, file: !220, line: 631, baseType: !364, size: 32, offset: 320)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DISubroutineType(types: !366)
!366 = !{null}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !219, file: !220, line: 632, baseType: !133, size: 32, offset: 352)
!368 = !DIGlobalVariableExpression(var: !369, expr: !DIExpression())
!369 = distinct !DIGlobalVariable(name: "blink0_id", scope: !27, file: !218, line: 111, type: !370, isLocal: false, isDefinition: true)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !223)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "_k_thread_data_blink1_id", scope: !27, file: !218, line: 113, type: !219, isLocal: false, isDefinition: true, align: 32)
!374 = !DIGlobalVariableExpression(var: !375, expr: !DIExpression())
!375 = distinct !DIGlobalVariable(name: "blink1_id", scope: !27, file: !218, line: 113, type: !370, isLocal: false, isDefinition: true)
!376 = !DIGlobalVariableExpression(var: !377, expr: !DIExpression())
!377 = distinct !DIGlobalVariable(name: "_k_thread_data_uart_out_id", scope: !27, file: !218, line: 115, type: !219, isLocal: false, isDefinition: true, align: 32)
!378 = !DIGlobalVariableExpression(var: !379, expr: !DIExpression())
!379 = distinct !DIGlobalVariable(name: "uart_out_id", scope: !27, file: !218, line: 115, type: !370, isLocal: false, isDefinition: true)
!380 = !DIGlobalVariableExpression(var: !381, expr: !DIExpression())
!381 = distinct !DIGlobalVariable(name: "_k_thread_stack_blink0_id", scope: !27, file: !218, line: 111, type: !382, isLocal: false, isDefinition: true, align: 512)
!382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 8704, elements: !383)
!383 = !{!384}
!384 = !DISubrange(count: 1088)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_k_thread_obj_blink0_id", scope: !27, file: !218, line: 111, type: !224, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "_k_thread_stack_blink1_id", scope: !27, file: !218, line: 113, type: !382, isLocal: false, isDefinition: true, align: 512)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_thread_obj_blink1_id", scope: !27, file: !218, line: 113, type: !224, isLocal: false, isDefinition: true)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "_k_thread_stack_uart_out_id", scope: !27, file: !218, line: 115, type: !382, isLocal: false, isDefinition: true, align: 512)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "_k_thread_obj_uart_out_id", scope: !27, file: !218, line: 115, type: !224, isLocal: false, isDefinition: true)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "led0", scope: !27, file: !218, line: 44, type: !397, isLocal: true, isDefinition: true)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "led", file: !218, line: 39, size: 96, elements: !399)
!399 = !{!400, !407}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !398, file: !218, line: 40, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !102, line: 271, size: 64, elements: !402)
!402 = !{!403, !404, !405}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !401, file: !102, line: 273, baseType: !127, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !401, file: !102, line: 275, baseType: !154, size: 8, offset: 32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !401, file: !102, line: 277, baseType: !406, size: 16, offset: 48)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !102, line: 249, baseType: !279)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !398, file: !218, line: 41, baseType: !143, size: 8, offset: 64)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "led1", scope: !27, file: !218, line: 49, type: !397, isLocal: true, isDefinition: true)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !220, line: 2208, size: 160, elements: !411)
!411 = !{!412}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !410, file: !220, line: 2209, baseType: !413, size: 160)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !414)
!414 = !{!415, !428, !429}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !413, file: !220, line: 1710, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !418)
!417 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !419)
!419 = !{!420, !427}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !418, file: !417, line: 42, baseType: !421, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !424)
!424 = !{!425}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !423, file: !417, line: 36, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !417, line: 32, baseType: !156)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !418, file: !417, line: 43, baseType: !421, size: 32, offset: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !413, file: !220, line: 1711, baseType: !333, size: 32, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !413, file: !220, line: 1712, baseType: !260, size: 64, offset: 96)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "_char_out", scope: !432, file: !437, line: 54, type: !438, isLocal: false, isDefinition: true)
!432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !433, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, globals: !436, splitDebugInlining: false, nameTableKind: None)
!433 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!434 = !{!30}
!435 = !{!117, !118}
!436 = !{!430}
!437 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!439 = !DISubroutineType(types: !440)
!440 = !{!118, !118}
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !443, file: !460, line: 56, type: !461, isLocal: true, isDefinition: true, align: 32)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !445, globals: !459, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!445 = !{!446}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 258, baseType: !449)
!448 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 249, size: 224, elements: !450)
!450 = !{!451, !453, !454, !455, !456, !457, !458}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !449, file: !448, line: 251, baseType: !452, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !156)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !449, file: !448, line: 252, baseType: !452, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !449, file: !448, line: 253, baseType: !452, size: 32, offset: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !449, file: !448, line: 254, baseType: !452, size: 32, offset: 96)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !449, file: !448, line: 255, baseType: !452, size: 32, offset: 128)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !449, file: !448, line: 256, baseType: !452, size: 32, offset: 160)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !449, file: !448, line: 257, baseType: !452, size: 32, offset: 192)
!459 = !{!441}
!460 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !464)
!463 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = !{!465, !484}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !462, file: !463, line: 60, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{!118, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !472)
!472 = !{!473, !474, !475, !476, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !130, line: 380, baseType: !133, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !471, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !471, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !130, line: 386, baseType: !477, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !478, file: !130, line: 359, baseType: !143, size: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !478, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !471, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !462, file: !463, line: 65, baseType: !469, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !487, file: !490, line: 71, type: !491, isLocal: true, isDefinition: true, align: 32)
!487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !489, splitDebugInlining: false, nameTableKind: None)
!488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!489 = !{!485}
!490 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !493)
!493 = !{!494, !513}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !492, file: !463, line: 60, baseType: !495, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DISubroutineType(types: !497)
!497 = !{!118, !498}
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !501)
!501 = !{!502, !503, !504, !505, !511, !512}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !500, file: !130, line: 380, baseType: !133, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !500, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !500, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !500, file: !130, line: 386, baseType: !506, size: 32, offset: 96)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 32)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !508)
!508 = !{!509, !510}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !507, file: !130, line: 359, baseType: !143, size: 8)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !507, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !500, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !500, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !492, file: !463, line: 65, baseType: !498, size: 32, offset: 32)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "static_regions", scope: !516, file: !523, line: 62, type: !647, isLocal: true, isDefinition: true)
!516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !517, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !518, globals: !519, splitDebugInlining: false, nameTableKind: None)
!517 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!518 = !{!315, !118, !156, !117}
!519 = !{!520, !514}
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !522, file: !523, line: 198, type: !633, isLocal: true, isDefinition: true)
!522 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !523, file: !523, line: 175, type: !524, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !516, retainedNodes: !628)
!523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!524 = !DISubroutineType(types: !525)
!525 = !{null, !526}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !528)
!528 = !{!529, !587, !599, !600, !601, !602, !608, !623}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !527, file: !225, line: 247, baseType: !530, size: 384)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !531)
!531 = !{!532, !556, !563, !564, !565, !574, !575, !576}
!532 = !DIDerivedType(tag: DW_TAG_member, scope: !530, file: !225, line: 60, baseType: !533, size: 64)
!533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !530, file: !225, line: 60, size: 64, elements: !534)
!534 = !{!535, !550}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !533, file: !225, line: 61, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !538)
!538 = !{!539, !545}
!539 = !DIDerivedType(tag: DW_TAG_member, scope: !537, file: !235, line: 38, baseType: !540, size: 32)
!540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !537, file: !235, line: 38, size: 32, elements: !541)
!541 = !{!542, !544}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !540, file: !235, line: 39, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !540, file: !235, line: 40, baseType: !543, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, scope: !537, file: !235, line: 42, baseType: !546, size: 32, offset: 32)
!546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !537, file: !235, line: 42, size: 32, elements: !547)
!547 = !{!548, !549}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !546, file: !235, line: 43, baseType: !543, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !546, file: !235, line: 44, baseType: !543, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !533, file: !225, line: 62, baseType: !551, size: 64)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !552)
!552 = !{!553}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !551, file: !251, line: 50, baseType: !554, size: 64)
!554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !555, size: 64, elements: !256)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !530, file: !225, line: 68, baseType: !557, size: 32, offset: 64)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !559, file: !261, line: 232, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !537)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !530, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !530, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!565 = !DIDerivedType(tag: DW_TAG_member, scope: !530, file: !225, line: 90, baseType: !566, size: 16, offset: 112)
!566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !530, file: !225, line: 90, size: 16, elements: !567)
!567 = !{!568, !573}
!568 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !225, line: 91, baseType: !569, size: 16)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !566, file: !225, line: 91, size: 16, elements: !570)
!570 = !{!571, !572}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !569, file: !225, line: 96, baseType: !275, size: 8)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !569, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !566, file: !225, line: 100, baseType: !279, size: 16)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !530, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !530, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !530, file: !225, line: 131, baseType: !577, size: 192, offset: 192)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !578)
!578 = !{!579, !580, !586}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !577, file: !261, line: 245, baseType: !536, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !577, file: !261, line: 246, baseType: !581, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !582)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 32)
!583 = !DISubroutineType(types: !584)
!584 = !{null, !585}
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !577, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !527, file: !225, line: 250, baseType: !588, size: 288, offset: 384)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !589)
!589 = !{!590, !591, !592, !593, !594, !595, !596, !597, !598}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !588, file: !296, line: 26, baseType: !156, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !588, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !588, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !588, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !588, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !588, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !588, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !588, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !588, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !527, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !527, file: !225, line: 256, baseType: !558, size: 64, offset: 704)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !527, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !527, file: !225, line: 300, baseType: !603, size: 96, offset: 800)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !604)
!604 = !{!605, !606, !607}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !603, file: !225, line: 153, baseType: !22, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !603, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !603, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !527, file: !225, line: 325, baseType: !609, size: 32, offset: 896)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !611)
!611 = !{!612, !618, !619}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !610, file: !220, line: 5074, baseType: !613, size: 96)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !614)
!614 = !{!615, !616, !617}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !613, file: !324, line: 57, baseType: !327, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !613, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !613, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !610, file: !220, line: 5075, baseType: !558, size: 64, offset: 96)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !610, file: !220, line: 5076, baseType: !620, size: 32, offset: 160)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !621)
!621 = !{!622}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !620, file: !334, line: 52, baseType: !22, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !527, file: !225, line: 343, baseType: !624, size: 64, offset: 928)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !625)
!625 = !{!626, !627}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !624, file: !296, line: 63, baseType: !156, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !624, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!628 = !{!629, !630, !631, !632}
!629 = !DILocalVariable(name: "thread", arg: 1, scope: !522, file: !523, line: 175, type: !526)
!630 = !DILocalVariable(name: "region_num", scope: !522, file: !523, line: 200, type: !143)
!631 = !DILocalVariable(name: "guard_start", scope: !522, file: !523, line: 265, type: !22)
!632 = !DILocalVariable(name: "guard_size", scope: !522, file: !523, line: 266, type: !315)
!633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 96, elements: !645)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !635, line: 52, size: 96, elements: !636)
!635 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!636 = !{!637, !638, !639}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !634, file: !635, line: 53, baseType: !22, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !634, file: !635, line: 54, baseType: !315, size: 32, offset: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !634, file: !635, line: 55, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !641, line: 151, baseType: !642)
!641 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 149, size: 32, elements: !643)
!643 = !{!644}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !642, file: !641, line: 150, baseType: !156, size: 32)
!645 = !{!646}
!646 = !DISubrange(count: 1)
!647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 96, elements: !645)
!648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !651, file: !684, line: 39, type: !143, isLocal: true, isDefinition: true)
!651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !653, globals: !683, splitDebugInlining: false, nameTableKind: None)
!652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!653 = !{!654, !117, !118, !671, !143}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !656, line: 1226, baseType: !657)
!656 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 1213, size: 352, elements: !658)
!658 = !{!659, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !657, file: !656, line: 1215, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !657, file: !656, line: 1216, baseType: !452, size: 32, offset: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !657, file: !656, line: 1217, baseType: !452, size: 32, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !657, file: !656, line: 1218, baseType: !452, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !657, file: !656, line: 1219, baseType: !452, size: 32, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !657, file: !656, line: 1220, baseType: !452, size: 32, offset: 160)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !657, file: !656, line: 1221, baseType: !452, size: 32, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !657, file: !656, line: 1222, baseType: !452, size: 32, offset: 224)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !657, file: !656, line: 1223, baseType: !452, size: 32, offset: 256)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !657, file: !656, line: 1224, baseType: !452, size: 32, offset: 288)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !657, file: !656, line: 1225, baseType: !452, size: 32, offset: 320)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !674, line: 27, size: 96, elements: !675)
!674 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!675 = !{!676, !677, !678}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !673, file: !674, line: 29, baseType: !156, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !673, file: !674, line: 31, baseType: !133, size: 32, offset: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !673, file: !674, line: 37, baseType: !679, size: 32, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !641, line: 146, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !641, line: 141, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !680, file: !641, line: 143, baseType: !156, size: 32)
!683 = !{!649}
!684 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !687, file: !694, line: 21, type: !438, isLocal: true, isDefinition: true)
!687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !689, globals: !693, splitDebugInlining: false, nameTableKind: None)
!688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!689 = !{!690, !118, !117}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !692, line: 22, baseType: !118)
!692 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!693 = !{!685}
!694 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !697, file: !702, line: 13, type: !719, isLocal: true, isDefinition: true)
!697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !698, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !699, splitDebugInlining: false, nameTableKind: None)
!698 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!699 = !{!700, !695}
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "mpu_config", scope: !697, file: !702, line: 37, type: !703, isLocal: false, isDefinition: true)
!702 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !674, line: 41, size: 64, elements: !705)
!705 = !{!706, !707}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !704, file: !674, line: 43, baseType: !156, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !704, file: !674, line: 45, baseType: !708, size: 32, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !674, line: 27, size: 96, elements: !711)
!711 = !{!712, !713, !714}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !710, file: !674, line: 29, baseType: !156, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !710, file: !674, line: 31, baseType: !133, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !710, file: !674, line: 37, baseType: !715, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !641, line: 146, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !641, line: 141, size: 32, elements: !717)
!717 = !{!718}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !716, file: !641, line: 143, baseType: !156, size: 32)
!719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 192, elements: !256)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !722, file: !805, line: 72, type: !888, isLocal: true, isDefinition: true)
!722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !724, retainedTypes: !791, globals: !802, splitDebugInlining: false, nameTableKind: None)
!723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!724 = !{!30, !725}
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !448, line: 65, baseType: !118, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!727 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!728 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!729 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!730 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!731 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!732 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!733 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!734 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!735 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!736 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!737 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!738 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!739 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!740 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!741 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!742 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!743 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!744 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!745 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!746 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!747 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!748 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!749 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!750 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!751 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!752 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!753 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!754 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!755 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!756 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!757 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!758 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!759 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!760 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!761 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!762 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!763 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!764 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!765 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!766 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!767 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!768 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!769 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!770 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!771 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!772 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!773 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!774 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!775 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!776 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!777 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!778 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!779 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!780 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!781 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!782 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!783 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!784 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!785 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!786 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!787 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!788 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!789 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!790 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!791 = !{!315, !118, !117, !792}
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !448, line: 243, baseType: !794)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 235, size: 192, elements: !795)
!795 = !{!796, !797, !798, !799, !800, !801}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !794, file: !448, line: 237, baseType: !452, size: 32)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !794, file: !448, line: 238, baseType: !452, size: 32, offset: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !794, file: !448, line: 239, baseType: !452, size: 32, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !794, file: !448, line: 240, baseType: !452, size: 32, offset: 96)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !794, file: !448, line: 241, baseType: !452, size: 32, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !794, file: !448, line: 242, baseType: !452, size: 32, offset: 160)
!802 = !{!803, !809, !825, !836, !853, !720, !855, !868, !870, !872, !874, !876, !878, !880, !882, !884, !886}
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !722, file: !805, line: 424, type: !806, isLocal: false, isDefinition: true, align: 16)
!805 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !807)
!807 = !{!808}
!808 = !DISubrange(count: 4)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !722, file: !805, line: 424, type: !811, isLocal: false, isDefinition: true, align: 32)
!811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !812)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !813)
!813 = !{!814, !815, !816, !817, !823, !824}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !812, file: !130, line: 380, baseType: !133, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !812, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !812, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !812, file: !130, line: 386, baseType: !818, size: 32, offset: 96)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 32)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !820)
!820 = !{!821, !822}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !819, file: !130, line: 359, baseType: !143, size: 8)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !819, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !812, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !812, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !722, file: !805, line: 424, type: !827, isLocal: true, isDefinition: true, align: 32)
!827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !829)
!829 = !{!830, !835}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !828, file: !463, line: 60, baseType: !831, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 32)
!832 = !DISubroutineType(types: !833)
!833 = !{!118, !834}
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !828, file: !463, line: 65, baseType: !834, size: 32, offset: 32)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "exti_data", scope: !722, file: !805, line: 423, type: !838, isLocal: true, isDefinition: true)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !805, line: 107, size: 1472, elements: !839)
!839 = !{!840}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !838, file: !805, line: 109, baseType: !841, size: 1472)
!841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !842, size: 1472, elements: !851)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !805, line: 101, size: 64, elements: !843)
!843 = !{!844, !850}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !842, file: !805, line: 102, baseType: !845, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !846, line: 63, baseType: !847)
!846 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DISubroutineType(types: !849)
!849 = !{null, !118, !117}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !842, file: !805, line: 103, baseType: !117, size: 32, offset: 32)
!851 = !{!852}
!852 = !DISubrange(count: 23)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !722, file: !805, line: 424, type: !819, isLocal: true, isDefinition: true, align: 8)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !857, file: !805, line: 493, type: !862, isLocal: true, isDefinition: true, align: 32)
!857 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !805, file: !805, line: 460, type: !858, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !860)
!858 = !DISubroutineType(types: !859)
!859 = !{null, !834}
!860 = !{!861}
!861 = !DILocalVariable(name: "dev", arg: 1, scope: !857, file: !805, line: 460, type: !834)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !863)
!863 = !{!864, !865, !866, !867}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !862, file: !10, line: 55, baseType: !362, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !862, file: !10, line: 57, baseType: !362, size: 32, offset: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !862, file: !10, line: 59, baseType: !117, size: 32, offset: 64)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !862, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !857, file: !805, line: 497, type: !862, isLocal: true, isDefinition: true, align: 32)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !857, file: !805, line: 507, type: !862, isLocal: true, isDefinition: true, align: 32)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !857, file: !805, line: 512, type: !862, isLocal: true, isDefinition: true, align: 32)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !857, file: !805, line: 516, type: !862, isLocal: true, isDefinition: true, align: 32)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !857, file: !805, line: 523, type: !862, isLocal: true, isDefinition: true, align: 32)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !857, file: !805, line: 527, type: !862, isLocal: true, isDefinition: true, align: 32)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !857, file: !805, line: 581, type: !862, isLocal: true, isDefinition: true, align: 32)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !857, file: !805, line: 586, type: !862, isLocal: true, isDefinition: true, align: 32)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !857, file: !805, line: 591, type: !862, isLocal: true, isDefinition: true, align: 32)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !857, file: !805, line: 595, type: !862, isLocal: true, isDefinition: true, align: 32)
!888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 736, elements: !851)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !448, line: 133, baseType: !725)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !893, file: !898, line: 24, type: !924, isLocal: false, isDefinition: true, align: 16)
!893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !895, splitDebugInlining: false, nameTableKind: None)
!894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!895 = !{!896, !891, !902, !904, !906, !908, !910, !912, !914, !916, !918, !920, !922}
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !893, file: !898, line: 19, type: !899, isLocal: false, isDefinition: true, align: 16)
!898 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 224, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 14)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !893, file: !898, line: 31, type: !806, isLocal: false, isDefinition: true, align: 16)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !893, file: !898, line: 38, type: !806, isLocal: false, isDefinition: true, align: 16)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !893, file: !898, line: 45, type: !806, isLocal: false, isDefinition: true, align: 16)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !893, file: !898, line: 52, type: !806, isLocal: false, isDefinition: true, align: 16)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !893, file: !898, line: 59, type: !806, isLocal: false, isDefinition: true, align: 16)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !893, file: !898, line: 66, type: !806, isLocal: false, isDefinition: true, align: 16)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !893, file: !898, line: 73, type: !806, isLocal: false, isDefinition: true, align: 16)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !893, file: !898, line: 80, type: !806, isLocal: false, isDefinition: true, align: 16)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !893, file: !898, line: 87, type: !806, isLocal: false, isDefinition: true, align: 16)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !893, file: !898, line: 94, type: !806, isLocal: false, isDefinition: true, align: 16)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !893, file: !898, line: 101, type: !806, isLocal: false, isDefinition: true, align: 16)
!924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 48, elements: !925)
!925 = !{!926}
!926 = !DISubrange(count: 3)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !929, file: !993, line: 398, type: !1026, isLocal: true, isDefinition: true)
!929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !930, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !931, retainedTypes: !944, globals: !990, splitDebugInlining: false, nameTableKind: None)
!930 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!931 = !{!932, !30, !937}
!932 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !933, line: 197, baseType: !32, size: 32, elements: !934)
!933 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!934 = !{!935, !936}
!935 = !DIEnumerator(name: "SUCCESS", value: 0)
!936 = !DIEnumerator(name: "ERROR", value: 1)
!937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !938, line: 44, baseType: !32, size: 32, elements: !939)
!938 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!939 = !{!940, !941, !942, !943}
!940 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!941 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!942 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!943 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!944 = !{!117, !118, !156, !945, !983, !989}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 369, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 335, size: 1152, elements: !948)
!948 = !{!949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !982}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !947, file: !448, line: 337, baseType: !452, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !947, file: !448, line: 338, baseType: !452, size: 32, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !947, file: !448, line: 339, baseType: !452, size: 32, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !947, file: !448, line: 340, baseType: !452, size: 32, offset: 96)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !947, file: !448, line: 341, baseType: !452, size: 32, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !947, file: !448, line: 342, baseType: !452, size: 32, offset: 160)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !947, file: !448, line: 343, baseType: !452, size: 32, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !947, file: !448, line: 344, baseType: !156, size: 32, offset: 224)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !947, file: !448, line: 345, baseType: !452, size: 32, offset: 256)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !947, file: !448, line: 346, baseType: !452, size: 32, offset: 288)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !947, file: !448, line: 347, baseType: !960, size: 64, offset: 320)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 64, elements: !256)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !947, file: !448, line: 348, baseType: !452, size: 32, offset: 384)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !947, file: !448, line: 349, baseType: !452, size: 32, offset: 416)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !947, file: !448, line: 350, baseType: !452, size: 32, offset: 448)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !947, file: !448, line: 351, baseType: !156, size: 32, offset: 480)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !947, file: !448, line: 352, baseType: !452, size: 32, offset: 512)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !947, file: !448, line: 353, baseType: !452, size: 32, offset: 544)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !947, file: !448, line: 354, baseType: !960, size: 64, offset: 576)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !947, file: !448, line: 355, baseType: !452, size: 32, offset: 640)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !947, file: !448, line: 356, baseType: !452, size: 32, offset: 672)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !947, file: !448, line: 357, baseType: !452, size: 32, offset: 704)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !947, file: !448, line: 358, baseType: !156, size: 32, offset: 736)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !947, file: !448, line: 359, baseType: !452, size: 32, offset: 768)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !947, file: !448, line: 360, baseType: !452, size: 32, offset: 800)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !947, file: !448, line: 361, baseType: !960, size: 64, offset: 832)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !947, file: !448, line: 362, baseType: !452, size: 32, offset: 896)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !947, file: !448, line: 363, baseType: !452, size: 32, offset: 928)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !947, file: !448, line: 364, baseType: !960, size: 64, offset: 960)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !947, file: !448, line: 365, baseType: !452, size: 32, offset: 1024)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !947, file: !448, line: 366, baseType: !452, size: 32, offset: 1056)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !947, file: !448, line: 367, baseType: !981, size: 32, offset: 1088)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 32, elements: !645)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !947, file: !448, line: 368, baseType: !452, size: 32, offset: 1120)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !985, line: 343, size: 64, elements: !986)
!985 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!986 = !{!987, !988}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !984, file: !985, line: 344, baseType: !156, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !984, file: !985, line: 345, baseType: !156, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!990 = !{!991, !997, !1013, !1024, !927}
!991 = !DIGlobalVariableExpression(var: !992, expr: !DIExpression())
!992 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !929, file: !993, line: 752, type: !994, isLocal: false, isDefinition: true, align: 16)
!993 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 640, elements: !995)
!995 = !{!996}
!996 = !DISubrange(count: 40)
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !929, file: !993, line: 752, type: !999, isLocal: false, isDefinition: true, align: 32)
!999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1011, !1012}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1000, file: !130, line: 380, baseType: !133, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1000, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1000, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1000, file: !130, line: 386, baseType: !1006, size: 32, offset: 96)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 32)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1008)
!1008 = !{!1009, !1010}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1007, file: !130, line: 359, baseType: !143, size: 8)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1007, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1000, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1000, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !929, file: !993, line: 752, type: !1015, isLocal: true, isDefinition: true, align: 32)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1017)
!1017 = !{!1018, !1023}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1016, file: !463, line: 60, baseType: !1019, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!118, !1022}
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1016, file: !463, line: 65, baseType: !1022, size: 32, offset: 32)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !929, file: !993, line: 752, type: !1007, isLocal: true, isDefinition: true, align: 8)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !938, line: 100, size: 224, elements: !1027)
!1027 = !{!1028, !1034, !1035, !1044, !1049, !1054, !1060}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1026, file: !938, line: 101, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !938, line: 76, baseType: !1030)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!118, !1022, !1033}
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !938, line: 56, baseType: !117)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1026, file: !938, line: 102, baseType: !1029, size: 32, offset: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1026, file: !938, line: 103, baseType: !1036, size: 32, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !938, line: 83, baseType: !1037)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!118, !1022, !1033, !1040, !117}
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !938, line: 72, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{null, !1022, !1033, !117}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1026, file: !938, line: 104, baseType: !1045, size: 32, offset: 96)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !938, line: 79, baseType: !1046)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!118, !1022, !1033, !989}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1026, file: !938, line: 105, baseType: !1050, size: 32, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !938, line: 88, baseType: !1051)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!937, !1022, !1033}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1026, file: !938, line: 106, baseType: !1055, size: 32, offset: 160)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !938, line: 92, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!118, !1022, !1033, !1059}
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !938, line: 64, baseType: !117)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1026, file: !938, line: 107, baseType: !1061, size: 32, offset: 192)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !938, line: 96, baseType: !1062)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!118, !1022, !1033, !117}
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1067, file: !1124, line: 603, type: !1126, isLocal: true, isDefinition: true, align: 32)
!1067 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1068, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !1069, globals: !1121, splitDebugInlining: false, nameTableKind: None)
!1068 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!1069 = !{!117, !118, !1070}
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1072)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1073, line: 336, size: 160, elements: !1074)
!1073 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1074 = !{!1075, !1095, !1099, !1103, !1116}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1072, file: !1073, line: 365, baseType: !1076, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!118, !1079, !1094}
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1082)
!1082 = !{!1083, !1084, !1085, !1086, !1092, !1093}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1081, file: !130, line: 380, baseType: !133, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1081, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1081, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1081, file: !130, line: 386, baseType: !1087, size: 32, offset: 96)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1089)
!1089 = !{!1090, !1091}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1088, file: !130, line: 359, baseType: !143, size: 8)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1088, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1081, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1081, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1072, file: !1073, line: 366, baseType: !1096, size: 32, offset: 32)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !1079, !144}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1072, file: !1073, line: 374, baseType: !1100, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!118, !1079}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1072, file: !1073, line: 377, baseType: !1104, size: 32, offset: 96)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!118, !1079, !1107}
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1073, line: 122, size: 64, elements: !1110)
!1110 = !{!1111, !1112, !1113, !1114, !1115}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1109, file: !1073, line: 123, baseType: !156, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1109, file: !1073, line: 124, baseType: !143, size: 8, offset: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1109, file: !1073, line: 125, baseType: !143, size: 8, offset: 40)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1109, file: !1073, line: 126, baseType: !143, size: 8, offset: 48)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1109, file: !1073, line: 127, baseType: !143, size: 8, offset: 56)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1072, file: !1073, line: 379, baseType: !1117, size: 32, offset: 128)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!118, !1079, !1120}
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1121 = !{!1065, !1122}
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1067, file: !1124, line: 38, type: !1125, isLocal: true, isDefinition: true)
!1124 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1079)
!1126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1127)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1128)
!1128 = !{!1129, !1130}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1127, file: !463, line: 60, baseType: !1100, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1127, file: !463, line: 65, baseType: !1079, size: 32, offset: 32)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1133, file: !1286, line: 762, type: !1398, isLocal: true, isDefinition: true)
!1133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1134, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1135, retainedTypes: !1142, globals: !1283, splitDebugInlining: false, nameTableKind: None)
!1134 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!1135 = !{!30, !101, !107, !1136, !937}
!1136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !846, line: 43, baseType: !32, size: 32, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141}
!1138 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1139 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1140 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1141 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1142 = !{!117, !118, !1143, !1207, !1212, !167, !107, !101, !1217, !1218, !156, !1232, !1188, !1242, !1243, !1244}
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !1146)
!1146 = !{!1147, !1166, !1170, !1174, !1178, !1179, !1180, !1184, !1203}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1145, file: !102, line: 524, baseType: !1148, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!118, !1151, !154, !155}
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1164, !1165}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1153, file: !130, line: 380, baseType: !133, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1153, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1153, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1153, file: !130, line: 386, baseType: !1159, size: 32, offset: 96)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1161)
!1161 = !{!1162, !1163}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1160, file: !130, line: 359, baseType: !143, size: 8)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1160, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1153, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1153, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1145, file: !102, line: 530, baseType: !1167, size: 32, offset: 32)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!118, !1151, !161}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1145, file: !102, line: 532, baseType: !1171, size: 32, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!118, !1151, !167, !162}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1145, file: !102, line: 535, baseType: !1175, size: 32, offset: 96)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!118, !1151, !167}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1145, file: !102, line: 537, baseType: !1175, size: 32, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1145, file: !102, line: 539, baseType: !1175, size: 32, offset: 160)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1145, file: !102, line: 541, baseType: !1181, size: 32, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!118, !1151, !154, !101, !107}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1145, file: !102, line: 544, baseType: !1185, size: 32, offset: 224)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!118, !1151, !1188, !146}
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !1190)
!1190 = !{!1191, !1197, !1202}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1189, file: !102, line: 482, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !1194)
!1194 = !{!1195}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1193, file: !187, line: 30, baseType: !1196, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1189, file: !102, line: 485, baseType: !1198, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !1199)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{null, !1151, !1188, !167}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1189, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1145, file: !102, line: 547, baseType: !1204, size: 32, offset: 256)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!156, !1151}
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !1210)
!1210 = !{!1211}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1209, file: !102, line: 434, baseType: !167, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1214)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !1215)
!1215 = !{!1216}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1214, file: !102, line: 447, baseType: !167, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !448, line: 275, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 264, size: 320, elements: !1221)
!1221 = !{!1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1220, file: !448, line: 266, baseType: !452, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1220, file: !448, line: 267, baseType: !452, size: 32, offset: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1220, file: !448, line: 268, baseType: !452, size: 32, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1220, file: !448, line: 269, baseType: !452, size: 32, offset: 96)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1220, file: !448, line: 270, baseType: !452, size: 32, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1220, file: !448, line: 271, baseType: !452, size: 32, offset: 160)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1220, file: !448, line: 272, baseType: !452, size: 32, offset: 192)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1220, file: !448, line: 273, baseType: !452, size: 32, offset: 224)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1220, file: !448, line: 274, baseType: !1231, size: 64, offset: 256)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 64, elements: !256)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !448, line: 288, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 281, size: 288, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1240, !1241}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1234, file: !448, line: 283, baseType: !452, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1234, file: !448, line: 284, baseType: !452, size: 32, offset: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1234, file: !448, line: 285, baseType: !1239, size: 128, offset: 64)
!1239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 128, elements: !807)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1234, file: !448, line: 286, baseType: !960, size: 64, offset: 192)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1234, file: !448, line: 287, baseType: !452, size: 32, offset: 256)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !938, line: 100, size: 224, elements: !1247)
!1247 = !{!1248, !1253, !1254, !1263, !1268, !1273, !1278}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1246, file: !938, line: 101, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !938, line: 76, baseType: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!118, !1151, !1033}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1246, file: !938, line: 102, baseType: !1249, size: 32, offset: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1246, file: !938, line: 103, baseType: !1255, size: 32, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !938, line: 83, baseType: !1256)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!118, !1151, !1033, !1259, !117}
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !938, line: 72, baseType: !1260)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{null, !1151, !1033, !117}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1246, file: !938, line: 104, baseType: !1264, size: 32, offset: 96)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !938, line: 79, baseType: !1265)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!118, !1151, !1033, !989}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1246, file: !938, line: 105, baseType: !1269, size: 32, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !938, line: 88, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!937, !1151, !1033}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1246, file: !938, line: 106, baseType: !1274, size: 32, offset: 160)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !938, line: 92, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!118, !1151, !1033, !1059}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1246, file: !938, line: 107, baseType: !1279, size: 32, offset: 192)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !938, line: 96, baseType: !1280)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!118, !1151, !1033, !117}
!1283 = !{!1284, !1290, !1292, !1302, !1304, !1306, !1308, !1313, !1315, !1317, !1322, !1324, !1326, !1328, !1330, !1332, !1334, !1336, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1131, !1394, !1396, !1409, !1411, !1413, !1415, !1417, !1419}
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1133, file: !1286, line: 762, type: !1287, isLocal: false, isDefinition: true, align: 16)
!1286 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 112, elements: !1288)
!1288 = !{!1289}
!1289 = !DISubrange(count: 7)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1133, file: !1286, line: 762, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1133, file: !1286, line: 762, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1296)
!1296 = !{!1297, !1301}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1295, file: !463, line: 60, baseType: !1298, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!118, !1151}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1295, file: !463, line: 65, baseType: !1151, size: 32, offset: 32)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1133, file: !1286, line: 766, type: !1287, isLocal: false, isDefinition: true, align: 16)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1133, file: !1286, line: 766, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1133, file: !1286, line: 766, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1133, file: !1286, line: 770, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 80, elements: !1311)
!1311 = !{!1312}
!1312 = !DISubrange(count: 5)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1133, file: !1286, line: 770, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1133, file: !1286, line: 770, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1133, file: !1286, line: 774, type: !1319, isLocal: false, isDefinition: true, align: 16)
!1319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !1320)
!1320 = !{!1321}
!1321 = !DISubrange(count: 6)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1133, file: !1286, line: 774, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1133, file: !1286, line: 774, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1133, file: !1286, line: 778, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1133, file: !1286, line: 778, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1133, file: !1286, line: 778, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1133, file: !1286, line: 782, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1133, file: !1286, line: 782, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1133, file: !1286, line: 782, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1133, file: !1286, line: 786, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1133, file: !1286, line: 786, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1133, file: !1286, line: 786, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1133, file: !1286, line: 790, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1133, file: !1286, line: 790, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1133, file: !1286, line: 790, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1133, file: !1286, line: 762, type: !1352, isLocal: true, isDefinition: true)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1353, line: 237, size: 128, elements: !1354)
!1353 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1354 = !{!1355, !1356, !1357}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1352, file: !1353, line: 239, baseType: !1214, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1352, file: !1353, line: 241, baseType: !1151, size: 32, offset: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1352, file: !1353, line: 243, baseType: !1358, size: 64, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !187, line: 40, baseType: !1359)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !187, line: 35, size: 64, elements: !1360)
!1360 = !{!1361, !1363}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1359, file: !187, line: 36, baseType: !1362, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1359, file: !187, line: 37, baseType: !1362, size: 32, offset: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1133, file: !1286, line: 762, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1133, file: !1286, line: 766, type: !1352, isLocal: true, isDefinition: true)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1133, file: !1286, line: 766, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1133, file: !1286, line: 770, type: !1352, isLocal: true, isDefinition: true)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1133, file: !1286, line: 770, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1133, file: !1286, line: 774, type: !1352, isLocal: true, isDefinition: true)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1133, file: !1286, line: 774, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1133, file: !1286, line: 778, type: !1352, isLocal: true, isDefinition: true)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1133, file: !1286, line: 778, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1133, file: !1286, line: 782, type: !1352, isLocal: true, isDefinition: true)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1133, file: !1286, line: 782, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1133, file: !1286, line: 786, type: !1352, isLocal: true, isDefinition: true)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1133, file: !1286, line: 786, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1133, file: !1286, line: 790, type: !1352, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1133, file: !1286, line: 790, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1133, file: !1286, line: 656, type: !1144, isLocal: true, isDefinition: true)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1133, file: !1286, line: 766, type: !1398, isLocal: true, isDefinition: true)
!1398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1353, line: 224, size: 160, elements: !1400)
!1400 = !{!1401, !1402, !1403, !1404}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1399, file: !1353, line: 226, baseType: !1209, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1399, file: !1353, line: 228, baseType: !989, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1399, file: !1353, line: 230, baseType: !118, size: 32, offset: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1399, file: !1353, line: 231, baseType: !1405, size: 64, offset: 96)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !985, line: 343, size: 64, elements: !1406)
!1406 = !{!1407, !1408}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1405, file: !985, line: 344, baseType: !156, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1405, file: !985, line: 345, baseType: !156, size: 32, offset: 32)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1133, file: !1286, line: 770, type: !1398, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1133, file: !1286, line: 774, type: !1398, isLocal: true, isDefinition: true)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1133, file: !1286, line: 778, type: !1398, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1133, file: !1286, line: 782, type: !1398, isLocal: true, isDefinition: true)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1133, file: !1286, line: 786, type: !1398, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1133, file: !1286, line: 790, type: !1398, isLocal: true, isDefinition: true)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1423, file: !1562, line: 1914, type: !1641, isLocal: true, isDefinition: true)
!1423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1424, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1425, retainedTypes: !1458, globals: !1559, splitDebugInlining: false, nameTableKind: None)
!1424 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!1425 = !{!30, !1426, !1433, !1440, !1447, !1453, !937}
!1426 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1073, line: 47, baseType: !32, size: 32, elements: !1427)
!1427 = !{!1428, !1429, !1430, !1431, !1432}
!1428 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1429 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1430 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1431 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1432 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1433 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1073, line: 75, baseType: !32, size: 32, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1438, !1439}
!1435 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1436 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1437 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1438 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1439 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1440 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1073, line: 92, baseType: !32, size: 32, elements: !1441)
!1441 = !{!1442, !1443, !1444, !1445, !1446}
!1442 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1443 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1444 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1445 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1446 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1447 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1073, line: 84, baseType: !32, size: 32, elements: !1448)
!1448 = !{!1449, !1450, !1451, !1452}
!1449 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1450 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1451 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1452 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1453 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1073, line: 107, baseType: !32, size: 32, elements: !1454)
!1454 = !{!1455, !1456, !1457}
!1455 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1456 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1457 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1458 = !{!117, !118, !1459, !144, !143, !1508, !156, !1033, !1519, !279, !213, !1558}
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1073, line: 336, size: 160, elements: !1462)
!1462 = !{!1463, !1482, !1486, !1490, !1503}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1461, file: !1073, line: 365, baseType: !1464, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!118, !1467, !1094}
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1480, !1481}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1469, file: !130, line: 380, baseType: !133, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1469, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1469, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1469, file: !130, line: 386, baseType: !1475, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1477)
!1477 = !{!1478, !1479}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1476, file: !130, line: 359, baseType: !143, size: 8)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1476, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1469, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1469, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1461, file: !1073, line: 366, baseType: !1483, size: 32, offset: 32)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{null, !1467, !144}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1461, file: !1073, line: 374, baseType: !1487, size: 32, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!118, !1467}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1461, file: !1073, line: 377, baseType: !1491, size: 32, offset: 96)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!118, !1467, !1494}
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1496)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1073, line: 122, size: 64, elements: !1497)
!1497 = !{!1498, !1499, !1500, !1501, !1502}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1496, file: !1073, line: 123, baseType: !156, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1496, file: !1073, line: 124, baseType: !143, size: 8, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1496, file: !1073, line: 125, baseType: !143, size: 8, offset: 40)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1496, file: !1073, line: 126, baseType: !143, size: 8, offset: 48)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1496, file: !1073, line: 127, baseType: !143, size: 8, offset: 56)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1461, file: !1073, line: 379, baseType: !1504, size: 32, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!118, !1467, !1507}
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !448, line: 507, baseType: !1510)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 498, size: 224, elements: !1511)
!1511 = !{!1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1510, file: !448, line: 500, baseType: !452, size: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1510, file: !448, line: 501, baseType: !452, size: 32, offset: 32)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1510, file: !448, line: 502, baseType: !452, size: 32, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1510, file: !448, line: 503, baseType: !452, size: 32, offset: 96)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1510, file: !448, line: 504, baseType: !452, size: 32, offset: 128)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1510, file: !448, line: 505, baseType: !452, size: 32, offset: 160)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1510, file: !448, line: 506, baseType: !452, size: 32, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !938, line: 100, size: 224, elements: !1522)
!1522 = !{!1523, !1528, !1529, !1538, !1543, !1548, !1553}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1521, file: !938, line: 101, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !938, line: 76, baseType: !1525)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!118, !1467, !1033}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1521, file: !938, line: 102, baseType: !1524, size: 32, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1521, file: !938, line: 103, baseType: !1530, size: 32, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !938, line: 83, baseType: !1531)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 32)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!118, !1467, !1033, !1534, !117}
!1534 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !938, line: 72, baseType: !1535)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{null, !1467, !1033, !117}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1521, file: !938, line: 104, baseType: !1539, size: 32, offset: 96)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !938, line: 79, baseType: !1540)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!118, !1467, !1033, !989}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1521, file: !938, line: 105, baseType: !1544, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !938, line: 88, baseType: !1545)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!937, !1467, !1033}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1521, file: !938, line: 106, baseType: !1549, size: 32, offset: 160)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !938, line: 92, baseType: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!118, !1467, !1033, !1059}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1521, file: !938, line: 107, baseType: !1554, size: 32, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !938, line: 96, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{!118, !1467, !1033, !117}
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!1559 = !{!1560, !1566, !1568, !1575, !1577, !1579, !1581, !1583, !1585, !1587, !1589, !1591, !1421, !1593, !1601, !1624, !1627, !1630, !1632, !1639, !1656, !1658, !1660, !1662, !1664, !1666, !1668, !1670, !1672, !1674, !1676}
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1423, file: !1562, line: 1914, type: !1563, isLocal: false, isDefinition: true, align: 16)
!1562 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !1564)
!1564 = !{!1565}
!1565 = !DISubrange(count: 8)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1423, file: !1562, line: 1914, type: !1468, isLocal: false, isDefinition: true, align: 32)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1423, file: !1562, line: 1914, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1572)
!1572 = !{!1573, !1574}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1571, file: !463, line: 60, baseType: !1487, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1571, file: !463, line: 65, baseType: !1467, size: 32, offset: 32)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1423, file: !1562, line: 1914, type: !1563, isLocal: false, isDefinition: true, align: 16)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1423, file: !1562, line: 1914, type: !1468, isLocal: false, isDefinition: true, align: 32)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1423, file: !1562, line: 1914, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1423, file: !1562, line: 1914, type: !1563, isLocal: false, isDefinition: true, align: 16)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1423, file: !1562, line: 1914, type: !1468, isLocal: false, isDefinition: true, align: 32)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1423, file: !1562, line: 1914, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1423, file: !1562, line: 1914, type: !1476, isLocal: true, isDefinition: true, align: 8)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1423, file: !1562, line: 1914, type: !1476, isLocal: true, isDefinition: true, align: 8)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1423, file: !1562, line: 1914, type: !1476, isLocal: true, isDefinition: true, align: 8)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1423, file: !1562, line: 1914, type: !1595, isLocal: true, isDefinition: true)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1596, size: 64, elements: !645)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !985, line: 343, size: 64, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1597, file: !985, line: 344, baseType: !156, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1597, file: !985, line: 345, baseType: !156, size: 32, offset: 32)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1423, file: !1562, line: 1914, type: !1603, isLocal: true, isDefinition: true)
!1603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1605, line: 60, size: 64, elements: !1606)
!1605 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1606 = !{!1607, !1623}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1604, file: !1605, line: 69, baseType: !1608, size: 32)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1605, line: 50, size: 64, elements: !1611)
!1611 = !{!1612, !1621, !1622}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1610, file: !1605, line: 52, baseType: !1613, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1616, line: 37, baseType: !1617)
!1616 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1616, line: 32, size: 64, elements: !1618)
!1618 = !{!1619, !1620}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1617, file: !1616, line: 34, baseType: !156, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1617, file: !1616, line: 36, baseType: !156, size: 32, offset: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1610, file: !1605, line: 54, baseType: !143, size: 8, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1610, file: !1605, line: 56, baseType: !143, size: 8, offset: 40)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1604, file: !1605, line: 71, baseType: !143, size: 8, offset: 32)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1423, file: !1562, line: 1914, type: !1626, isLocal: true, isDefinition: true)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1609, size: 64, elements: !645)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1423, file: !1562, line: 1914, type: !1629, isLocal: true, isDefinition: true)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1614, size: 128, elements: !256)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1423, file: !1562, line: 1539, type: !1460, isLocal: true, isDefinition: true)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1423, file: !1562, line: 1914, type: !1634, isLocal: true, isDefinition: true)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1635, line: 74, size: 64, elements: !1636)
!1635 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1636 = !{!1637, !1638}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1634, file: !1635, line: 76, baseType: !156, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1634, file: !1635, line: 78, baseType: !1467, size: 32, offset: 32)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1423, file: !1562, line: 1914, type: !1641, isLocal: true, isDefinition: true)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1635, line: 22, size: 224, elements: !1643)
!1643 = !{!1644, !1645, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1642, file: !1635, line: 24, baseType: !1508, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1642, file: !1635, line: 26, baseType: !1646, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1642, file: !1635, line: 28, baseType: !315, size: 32, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1642, file: !1635, line: 30, baseType: !146, size: 8, offset: 96)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1642, file: !1635, line: 32, baseType: !118, size: 32, offset: 128)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1642, file: !1635, line: 34, baseType: !146, size: 8, offset: 160)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1642, file: !1635, line: 36, baseType: !146, size: 8, offset: 168)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1642, file: !1635, line: 38, baseType: !146, size: 8, offset: 176)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1642, file: !1635, line: 40, baseType: !146, size: 8, offset: 184)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1642, file: !1635, line: 41, baseType: !1655, size: 32, offset: 192)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1423, file: !1562, line: 1914, type: !1595, isLocal: true, isDefinition: true)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1423, file: !1562, line: 1914, type: !1603, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1423, file: !1562, line: 1914, type: !1626, isLocal: true, isDefinition: true)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1423, file: !1562, line: 1914, type: !1629, isLocal: true, isDefinition: true)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1423, file: !1562, line: 1914, type: !1634, isLocal: true, isDefinition: true)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1423, file: !1562, line: 1914, type: !1641, isLocal: true, isDefinition: true)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1423, file: !1562, line: 1914, type: !1595, isLocal: true, isDefinition: true)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1423, file: !1562, line: 1914, type: !1603, isLocal: true, isDefinition: true)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1423, file: !1562, line: 1914, type: !1626, isLocal: true, isDefinition: true)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1423, file: !1562, line: 1914, type: !1629, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1423, file: !1562, line: 1914, type: !1634, isLocal: true, isDefinition: true)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1680, file: !1758, line: 65, type: !452, isLocal: true, isDefinition: true)
!1680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1681, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1682, retainedTypes: !1683, globals: !1755, splitDebugInlining: false, nameTableKind: None)
!1681 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!1682 = !{!725}
!1683 = !{!113, !1684, !362, !143, !156, !1692, !1723}
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !656, line: 770, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 764, size: 128, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1686, file: !656, line: 766, baseType: !452, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1686, file: !656, line: 767, baseType: !452, size: 32, offset: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1686, file: !656, line: 768, baseType: !452, size: 32, offset: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1686, file: !656, line: 769, baseType: !660, size: 32, offset: 96)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !1694)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !1695)
!1695 = !{!1696, !1698, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1713, !1718, !1722}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1694, file: !656, line: 413, baseType: !1697, size: 256)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !1564)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1694, file: !656, line: 414, baseType: !1699, size: 768, offset: 256)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 768, elements: !1700)
!1700 = !{!1701}
!1701 = !DISubrange(count: 24)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1694, file: !656, line: 415, baseType: !1697, size: 256, offset: 1024)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1694, file: !656, line: 416, baseType: !1699, size: 768, offset: 1280)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1694, file: !656, line: 417, baseType: !1697, size: 256, offset: 2048)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1694, file: !656, line: 418, baseType: !1699, size: 768, offset: 2304)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1694, file: !656, line: 419, baseType: !1697, size: 256, offset: 3072)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1694, file: !656, line: 420, baseType: !1699, size: 768, offset: 3328)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1694, file: !656, line: 421, baseType: !1697, size: 256, offset: 4096)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1694, file: !656, line: 422, baseType: !1710, size: 1792, offset: 4352)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 1792, elements: !1711)
!1711 = !{!1712}
!1712 = !DISubrange(count: 56)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1694, file: !656, line: 423, baseType: !1714, size: 1920, offset: 6144)
!1714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1715, size: 1920, elements: !1716)
!1715 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !143)
!1716 = !{!1717}
!1717 = !DISubrange(count: 240)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1694, file: !656, line: 424, baseType: !1719, size: 20608, offset: 8064)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 20608, elements: !1720)
!1720 = !{!1721}
!1721 = !DISubrange(count: 644)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1694, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !1726)
!1726 = !{!1727, !1728, !1729, !1730, !1731, !1732, !1733, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1746, !1747, !1748, !1750, !1752, !1754}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1725, file: !656, line: 447, baseType: !660, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1725, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1725, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1725, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1725, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1725, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1725, file: !656, line: 453, baseType: !1734, size: 96, offset: 192)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1715, size: 96, elements: !1735)
!1735 = !{!1736}
!1736 = !DISubrange(count: 12)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1725, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1725, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1725, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1725, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1725, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1725, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1725, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1725, file: !656, line: 461, baseType: !1745, size: 64, offset: 512)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 64, elements: !256)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1725, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1725, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1725, file: !656, line: 464, baseType: !1749, size: 128, offset: 640)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 128, elements: !807)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1725, file: !656, line: 465, baseType: !1751, size: 160, offset: 768)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 160, elements: !1311)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1725, file: !656, line: 466, baseType: !1753, size: 160, offset: 928)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 160, elements: !1311)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1725, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!1755 = !{!1756, !1782, !1787, !1789, !1791, !1678}
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1680, file: !1758, line: 285, type: !1759, isLocal: true, isDefinition: true, align: 32)
!1758 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1761)
!1761 = !{!1762, !1781}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1760, file: !463, line: 60, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!118, !1766}
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1769)
!1769 = !{!1770, !1771, !1772, !1773, !1779, !1780}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1768, file: !130, line: 380, baseType: !133, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1768, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1768, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1768, file: !130, line: 386, baseType: !1774, size: 32, offset: 96)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1776)
!1776 = !{!1777, !1778}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1775, file: !130, line: 359, baseType: !143, size: 8)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1775, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1768, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1768, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1760, file: !463, line: 65, baseType: !1766, size: 32, offset: 32)
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(name: "lock", scope: !1680, file: !1758, line: 34, type: !1784, isLocal: true, isDefinition: true)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !1785)
!1785 = !{!1786}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1784, file: !334, line: 52, baseType: !22, size: 32)
!1787 = !DIGlobalVariableExpression(var: !1788, expr: !DIExpression())
!1788 = distinct !DIGlobalVariable(name: "last_load", scope: !1680, file: !1758, line: 36, type: !156, isLocal: true, isDefinition: true)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1680, file: !1758, line: 48, type: !156, isLocal: true, isDefinition: true)
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1680, file: !1758, line: 54, type: !156, isLocal: true, isDefinition: true)
!1793 = !DIGlobalVariableExpression(var: !1794, expr: !DIExpression())
!1794 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1795, file: !1877, line: 22, type: !1879, isLocal: true, isDefinition: true)
!1795 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1796, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1797, retainedTypes: !1798, globals: !1874, splitDebugInlining: false, nameTableKind: None)
!1796 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!1797 = !{!101, !107}
!1798 = !{!1799, !1863, !1868, !167, !107, !101, !1873, !117}
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !1802)
!1802 = !{!1803, !1822, !1826, !1830, !1834, !1835, !1836, !1840, !1859}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1801, file: !102, line: 524, baseType: !1804, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!118, !1807, !154, !155}
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1810)
!1810 = !{!1811, !1812, !1813, !1814, !1820, !1821}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1809, file: !130, line: 380, baseType: !133, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1809, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1809, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1809, file: !130, line: 386, baseType: !1815, size: 32, offset: 96)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1817)
!1817 = !{!1818, !1819}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1816, file: !130, line: 359, baseType: !143, size: 8)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1816, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1809, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1809, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1801, file: !102, line: 530, baseType: !1823, size: 32, offset: 32)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!118, !1807, !161}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1801, file: !102, line: 532, baseType: !1827, size: 32, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!118, !1807, !167, !162}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1801, file: !102, line: 535, baseType: !1831, size: 32, offset: 96)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!118, !1807, !167}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1801, file: !102, line: 537, baseType: !1831, size: 32, offset: 128)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1801, file: !102, line: 539, baseType: !1831, size: 32, offset: 160)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1801, file: !102, line: 541, baseType: !1837, size: 32, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!118, !1807, !154, !101, !107}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1801, file: !102, line: 544, baseType: !1841, size: 32, offset: 224)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{!118, !1807, !1844, !146}
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !1846)
!1846 = !{!1847, !1853, !1858}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1845, file: !102, line: 482, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !1850)
!1850 = !{!1851}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1849, file: !187, line: 30, baseType: !1852, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1845, file: !102, line: 485, baseType: !1854, size: 32, offset: 32)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !1855)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{null, !1807, !1844, !167}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1845, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1801, file: !102, line: 547, baseType: !1860, size: 32, offset: 256)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!156, !1807}
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1865)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !1866)
!1866 = !{!1867}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1865, file: !102, line: 434, baseType: !167, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1870)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !1871)
!1871 = !{!1872}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1870, file: !102, line: 447, baseType: !167, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1874 = !{!1875, !1793}
!1875 = !DIGlobalVariableExpression(var: !1876, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1876 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1795, file: !1877, line: 37, type: !1878, isLocal: true, isDefinition: true)
!1877 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !315)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1880, size: 352, elements: !1881)
!1880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1807)
!1881 = !{!1882}
!1882 = !DISubrange(count: 11)
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1885, file: !1927, line: 139, type: !1934, isLocal: false, isDefinition: true)
!1885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1887, globals: !1924, splitDebugInlining: false, nameTableKind: None)
!1886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!1887 = !{!1888}
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 369, baseType: !1890)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 335, size: 1152, elements: !1891)
!1891 = !{!1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1890, file: !448, line: 337, baseType: !452, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1890, file: !448, line: 338, baseType: !452, size: 32, offset: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1890, file: !448, line: 339, baseType: !452, size: 32, offset: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1890, file: !448, line: 340, baseType: !452, size: 32, offset: 96)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1890, file: !448, line: 341, baseType: !452, size: 32, offset: 128)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1890, file: !448, line: 342, baseType: !452, size: 32, offset: 160)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1890, file: !448, line: 343, baseType: !452, size: 32, offset: 192)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1890, file: !448, line: 344, baseType: !156, size: 32, offset: 224)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1890, file: !448, line: 345, baseType: !452, size: 32, offset: 256)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1890, file: !448, line: 346, baseType: !452, size: 32, offset: 288)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1890, file: !448, line: 347, baseType: !960, size: 64, offset: 320)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1890, file: !448, line: 348, baseType: !452, size: 32, offset: 384)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1890, file: !448, line: 349, baseType: !452, size: 32, offset: 416)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1890, file: !448, line: 350, baseType: !452, size: 32, offset: 448)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1890, file: !448, line: 351, baseType: !156, size: 32, offset: 480)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1890, file: !448, line: 352, baseType: !452, size: 32, offset: 512)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1890, file: !448, line: 353, baseType: !452, size: 32, offset: 544)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1890, file: !448, line: 354, baseType: !960, size: 64, offset: 576)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1890, file: !448, line: 355, baseType: !452, size: 32, offset: 640)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1890, file: !448, line: 356, baseType: !452, size: 32, offset: 672)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1890, file: !448, line: 357, baseType: !452, size: 32, offset: 704)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1890, file: !448, line: 358, baseType: !156, size: 32, offset: 736)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1890, file: !448, line: 359, baseType: !452, size: 32, offset: 768)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1890, file: !448, line: 360, baseType: !452, size: 32, offset: 800)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1890, file: !448, line: 361, baseType: !960, size: 64, offset: 832)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1890, file: !448, line: 362, baseType: !452, size: 32, offset: 896)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1890, file: !448, line: 363, baseType: !452, size: 32, offset: 928)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1890, file: !448, line: 364, baseType: !960, size: 64, offset: 960)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1890, file: !448, line: 365, baseType: !452, size: 32, offset: 1024)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1890, file: !448, line: 366, baseType: !452, size: 32, offset: 1056)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1890, file: !448, line: 367, baseType: !981, size: 32, offset: 1088)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1890, file: !448, line: 368, baseType: !452, size: 32, offset: 1120)
!1924 = !{!1925, !1928, !1883}
!1925 = !DIGlobalVariableExpression(var: !1926, expr: !DIExpression())
!1926 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1885, file: !1927, line: 137, type: !156, isLocal: false, isDefinition: true)
!1927 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1885, file: !1927, line: 138, type: !1930, isLocal: false, isDefinition: true)
!1930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 128, elements: !1932)
!1931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!1932 = !{!1933}
!1933 = !DISubrange(count: 16)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 64, elements: !1564)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1937, file: !1940, line: 23, type: !1941, isLocal: false, isDefinition: true)
!1937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1938, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, globals: !1939, splitDebugInlining: false, nameTableKind: None)
!1938 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!1939 = !{!1935}
!1940 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1944, file: !1948, line: 86, type: !2196, isLocal: false, isDefinition: true, align: 512)
!1944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1946, retainedTypes: !1955, globals: !2029, splitDebugInlining: false, nameTableKind: None)
!1945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!1946 = !{!1947, !30, !725}
!1947 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1948, line: 63, baseType: !32, size: 32, elements: !1949)
!1948 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1949 = !{!1950, !1951, !1952, !1953, !1954}
!1950 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1951 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1952 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1953 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1954 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1955 = !{!315, !117, !118, !1956, !1242, !156, !1987, !362, !143, !2012}
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1958)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1959, line: 51, size: 64, elements: !1960)
!1959 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1960 = !{!1961, !1982}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1958, file: !1959, line: 52, baseType: !1962, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1959, line: 38, baseType: !1963)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = !DISubroutineType(types: !1965)
!1965 = !{!118, !1966, !1981, !279}
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1968)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1969)
!1969 = !{!1970, !1971, !1972, !1973, !1979, !1980}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1968, file: !130, line: 380, baseType: !133, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1968, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1968, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1968, file: !130, line: 386, baseType: !1974, size: 32, offset: 96)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 32)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1976)
!1976 = !{!1977, !1978}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1975, file: !130, line: 359, baseType: !143, size: 8)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1975, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1968, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1968, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1958, file: !1959, line: 53, baseType: !1983, size: 32, offset: 32)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1959, line: 47, baseType: !1984)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!118, !1966, !1981, !279, !156}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1989, file: !656, line: 447, baseType: !660, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1989, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1989, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1989, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1989, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1989, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1989, file: !656, line: 453, baseType: !1734, size: 96, offset: 192)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1989, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1989, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1989, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1989, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1989, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1989, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1989, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1989, file: !656, line: 461, baseType: !1745, size: 64, offset: 512)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1989, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1989, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1989, file: !656, line: 464, baseType: !1749, size: 128, offset: 640)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1989, file: !656, line: 465, baseType: !1751, size: 160, offset: 768)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1989, file: !656, line: 466, baseType: !1753, size: 160, offset: 928)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1989, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2014, file: !656, line: 413, baseType: !1697, size: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2014, file: !656, line: 414, baseType: !1699, size: 768, offset: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2014, file: !656, line: 415, baseType: !1697, size: 256, offset: 1024)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2014, file: !656, line: 416, baseType: !1699, size: 768, offset: 1280)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2014, file: !656, line: 417, baseType: !1697, size: 256, offset: 2048)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2014, file: !656, line: 418, baseType: !1699, size: 768, offset: 2304)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2014, file: !656, line: 419, baseType: !1697, size: 256, offset: 3072)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2014, file: !656, line: 420, baseType: !1699, size: 768, offset: 3328)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2014, file: !656, line: 421, baseType: !1697, size: 256, offset: 4096)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2014, file: !656, line: 422, baseType: !1710, size: 1792, offset: 4352)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2014, file: !656, line: 423, baseType: !1714, size: 1920, offset: 6144)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2014, file: !656, line: 424, baseType: !1719, size: 20608, offset: 8064)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2014, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2029 = !{!2030, !2155, !2161, !2163, !1942, !2166, !2168, !2173}
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "_kernel", scope: !1944, file: !1948, line: 40, type: !2032, isLocal: false, isDefinition: true)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !261, line: 158, size: 288, elements: !2033)
!2033 = !{!2034, !2150}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2032, file: !261, line: 159, baseType: !2035, size: 192)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2036, size: 192, elements: !645)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !261, line: 100, size: 192, elements: !2037)
!2037 = !{!2038, !2039, !2040, !2143, !2144, !2145, !2146}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2036, file: !261, line: 102, baseType: !156, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2036, file: !261, line: 105, baseType: !1242, size: 32, offset: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2036, file: !261, line: 108, baseType: !2041, size: 32, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2043)
!2043 = !{!2044, !2102, !2114, !2115, !2116, !2117, !2123, !2138}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2042, file: !225, line: 247, baseType: !2045, size: 384)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2046)
!2046 = !{!2047, !2071, !2078, !2079, !2080, !2089, !2090, !2091}
!2047 = !DIDerivedType(tag: DW_TAG_member, scope: !2045, file: !225, line: 60, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2045, file: !225, line: 60, size: 64, elements: !2049)
!2049 = !{!2050, !2065}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2048, file: !225, line: 61, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2052)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2053)
!2053 = !{!2054, !2060}
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !235, line: 38, baseType: !2055, size: 32)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !235, line: 38, size: 32, elements: !2056)
!2056 = !{!2057, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2055, file: !235, line: 39, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2055, file: !235, line: 40, baseType: !2058, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !235, line: 42, baseType: !2061, size: 32, offset: 32)
!2061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !235, line: 42, size: 32, elements: !2062)
!2062 = !{!2063, !2064}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2061, file: !235, line: 43, baseType: !2058, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2061, file: !235, line: 44, baseType: !2058, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2048, file: !225, line: 62, baseType: !2066, size: 64)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2067)
!2067 = !{!2068}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2066, file: !251, line: 50, baseType: !2069, size: 64)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2070, size: 64, elements: !256)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2045, file: !225, line: 68, baseType: !2072, size: 32, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2075)
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2074, file: !261, line: 232, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2052)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2045, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2045, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2080 = !DIDerivedType(tag: DW_TAG_member, scope: !2045, file: !225, line: 90, baseType: !2081, size: 16, offset: 112)
!2081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2045, file: !225, line: 90, size: 16, elements: !2082)
!2082 = !{!2083, !2088}
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !2081, file: !225, line: 91, baseType: !2084, size: 16)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2081, file: !225, line: 91, size: 16, elements: !2085)
!2085 = !{!2086, !2087}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2084, file: !225, line: 96, baseType: !275, size: 8)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2084, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2081, file: !225, line: 100, baseType: !279, size: 16)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2045, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2045, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2045, file: !225, line: 131, baseType: !2092, size: 192, offset: 192)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2093)
!2093 = !{!2094, !2095, !2101}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2092, file: !261, line: 245, baseType: !2051, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2092, file: !261, line: 246, baseType: !2096, size: 32, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2097)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{null, !2100}
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2092, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2042, file: !225, line: 250, baseType: !2103, size: 288, offset: 384)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2103, file: !296, line: 26, baseType: !156, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2103, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2103, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2103, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2103, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2103, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2103, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2103, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2103, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2042, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2042, file: !225, line: 256, baseType: !2073, size: 64, offset: 704)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2042, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2042, file: !225, line: 300, baseType: !2118, size: 96, offset: 800)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2119)
!2119 = !{!2120, !2121, !2122}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2118, file: !225, line: 153, baseType: !22, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2118, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2118, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2042, file: !225, line: 325, baseType: !2124, size: 32, offset: 896)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2126)
!2126 = !{!2127, !2133, !2134}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2125, file: !220, line: 5074, baseType: !2128, size: 96)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2129)
!2129 = !{!2130, !2131, !2132}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2128, file: !324, line: 57, baseType: !327, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2128, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2128, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2125, file: !220, line: 5075, baseType: !2073, size: 64, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2125, file: !220, line: 5076, baseType: !2135, size: 32, offset: 160)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2136)
!2136 = !{!2137}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2135, file: !334, line: 52, baseType: !22, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2042, file: !225, line: 343, baseType: !2139, size: 64, offset: 928)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2140)
!2140 = !{!2141, !2142}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2139, file: !296, line: 63, baseType: !156, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2139, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2036, file: !261, line: 111, baseType: !2041, size: 32, offset: 96)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2036, file: !261, line: 124, baseType: !118, size: 32, offset: 128)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2036, file: !261, line: 127, baseType: !143, size: 8, offset: 160)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2036, file: !261, line: 153, baseType: !2147, offset: 168)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2148, line: 33, elements: !2149)
!2148 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2149 = !{}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2032, file: !261, line: 170, baseType: !2151, size: 96, offset: 192)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !261, line: 83, size: 96, elements: !2152)
!2152 = !{!2153, !2154}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2151, file: !261, line: 86, baseType: !2041, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2151, file: !261, line: 90, baseType: !2077, size: 64, offset: 32)
!2155 = !DIGlobalVariableExpression(var: !2156, expr: !DIExpression())
!2156 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1944, file: !1948, line: 43, type: !2157, isLocal: false, isDefinition: true, align: 512)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2158, size: 8704, elements: !383)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !2159)
!2159 = !{!2160}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2158, file: !347, line: 48, baseType: !135, size: 8)
!2161 = !DIGlobalVariableExpression(var: !2162, expr: !DIExpression())
!2162 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1944, file: !1948, line: 44, type: !2042, isLocal: false, isDefinition: true)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1944, file: !1948, line: 48, type: !2165, isLocal: false, isDefinition: true)
!2165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 1024, elements: !645)
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1944, file: !1948, line: 217, type: !146, isLocal: false, isDefinition: true)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1944, file: !1948, line: 50, type: !2170, isLocal: true, isDefinition: true, align: 512)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2158, size: 3072, elements: !2171)
!2171 = !{!646, !2172}
!2172 = !DISubrange(count: 384)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "levels", scope: !2175, file: !1948, line: 232, type: !2195, isLocal: true, isDefinition: true)
!2175 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1948, file: !1948, line: 230, type: !2176, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !2178)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{null, !1947}
!2178 = !{!2179, !2180, !2190, !2194}
!2179 = !DILocalVariable(name: "level", arg: 1, scope: !2175, file: !1948, line: 230, type: !1947)
!2180 = !DILocalVariable(name: "entry", scope: !2175, file: !1948, line: 244, type: !2181)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !2184)
!2184 = !{!2185, !2189}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2183, file: !463, line: 60, baseType: !2186, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 32)
!2187 = !DISubroutineType(types: !2188)
!2188 = !{!118, !1966}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2183, file: !463, line: 65, baseType: !1966, size: 32, offset: 32)
!2190 = !DILocalVariable(name: "dev", scope: !2191, file: !1948, line: 247, type: !1966)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !1948, line: 246, column: 64)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !1948, line: 246, column: 2)
!2193 = distinct !DILexicalBlock(scope: !2175, file: !1948, line: 246, column: 2)
!2194 = !DILocalVariable(name: "rc", scope: !2191, file: !1948, line: 248, type: !118)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2181, size: 192, elements: !1320)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2158, size: 16896, elements: !2197)
!2197 = !{!646, !2198}
!2198 = !DISubrange(count: 2112)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "states_str", scope: !2201, file: !2202, line: 276, type: !2325, isLocal: true, isDefinition: true)
!2201 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2202, file: !2202, line: 271, type: !2203, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2316)
!2202 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!133, !2205, !1242, !315}
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !2206)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2208)
!2208 = !{!2209, !2267, !2279, !2280, !2281, !2282, !2288, !2303}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2207, file: !225, line: 247, baseType: !2210, size: 384)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2211)
!2211 = !{!2212, !2236, !2243, !2244, !2245, !2254, !2255, !2256}
!2212 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !225, line: 60, baseType: !2213, size: 64)
!2213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !225, line: 60, size: 64, elements: !2214)
!2214 = !{!2215, !2230}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2213, file: !225, line: 61, baseType: !2216, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2217)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2218)
!2218 = !{!2219, !2225}
!2219 = !DIDerivedType(tag: DW_TAG_member, scope: !2217, file: !235, line: 38, baseType: !2220, size: 32)
!2220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2217, file: !235, line: 38, size: 32, elements: !2221)
!2221 = !{!2222, !2224}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2220, file: !235, line: 39, baseType: !2223, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2220, file: !235, line: 40, baseType: !2223, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, scope: !2217, file: !235, line: 42, baseType: !2226, size: 32, offset: 32)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2217, file: !235, line: 42, size: 32, elements: !2227)
!2227 = !{!2228, !2229}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2226, file: !235, line: 43, baseType: !2223, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2226, file: !235, line: 44, baseType: !2223, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2213, file: !225, line: 62, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2232)
!2232 = !{!2233}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2231, file: !251, line: 50, baseType: !2234, size: 64)
!2234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2235, size: 64, elements: !256)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2210, file: !225, line: 68, baseType: !2237, size: 32, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2239)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2240)
!2240 = !{!2241}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2239, file: !261, line: 232, baseType: !2242, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2217)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2210, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2210, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2245 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !225, line: 90, baseType: !2246, size: 16, offset: 112)
!2246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !225, line: 90, size: 16, elements: !2247)
!2247 = !{!2248, !2253}
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2246, file: !225, line: 91, baseType: !2249, size: 16)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2246, file: !225, line: 91, size: 16, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2249, file: !225, line: 96, baseType: !275, size: 8)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2249, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2246, file: !225, line: 100, baseType: !279, size: 16)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2210, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2210, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2210, file: !225, line: 131, baseType: !2257, size: 192, offset: 192)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2258)
!2258 = !{!2259, !2260, !2266}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2257, file: !261, line: 245, baseType: !2216, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2257, file: !261, line: 246, baseType: !2261, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2262)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{null, !2265}
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2257, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2207, file: !225, line: 250, baseType: !2268, size: 288, offset: 384)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2269)
!2269 = !{!2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2268, file: !296, line: 26, baseType: !156, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2268, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2268, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2268, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2268, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2268, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2268, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2268, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2268, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2207, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2207, file: !225, line: 256, baseType: !2238, size: 64, offset: 704)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2207, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2207, file: !225, line: 300, baseType: !2283, size: 96, offset: 800)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2284)
!2284 = !{!2285, !2286, !2287}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2283, file: !225, line: 153, baseType: !22, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2283, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2283, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2207, file: !225, line: 325, baseType: !2289, size: 32, offset: 896)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2291)
!2291 = !{!2292, !2298, !2299}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2290, file: !220, line: 5074, baseType: !2293, size: 96)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2294)
!2294 = !{!2295, !2296, !2297}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2293, file: !324, line: 57, baseType: !327, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2293, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2293, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2290, file: !220, line: 5075, baseType: !2238, size: 64, offset: 96)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2290, file: !220, line: 5076, baseType: !2300, size: 32, offset: 160)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2301)
!2301 = !{!2302}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2300, file: !334, line: 52, baseType: !22, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2207, file: !225, line: 343, baseType: !2304, size: 64, offset: 928)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2305)
!2305 = !{!2306, !2307}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2304, file: !296, line: 63, baseType: !156, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2304, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2308 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2309, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2310, globals: !2312, splitDebugInlining: false, nameTableKind: None)
!2309 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2310 = !{!117, !133, !113, !143, !22, !118, !2311, !24, !315, !1242, !156, !213}
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!2312 = !{!2199, !2313}
!2313 = !DIGlobalVariableExpression(var: !2314, expr: !DIExpression())
!2314 = distinct !DIGlobalVariable(name: "states_sz", scope: !2201, file: !2202, line: 279, type: !2315, isLocal: true, isDefinition: true)
!2315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1878, size: 256, elements: !1564)
!2316 = !{!2317, !2318, !2319, !2320, !2321, !2322, !2323}
!2317 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2201, file: !2202, line: 271, type: !2205)
!2318 = !DILocalVariable(name: "buf", arg: 2, scope: !2201, file: !2202, line: 271, type: !1242)
!2319 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2201, file: !2202, line: 271, type: !315)
!2320 = !DILocalVariable(name: "off", scope: !2201, file: !2202, line: 273, type: !315)
!2321 = !DILocalVariable(name: "bit", scope: !2201, file: !2202, line: 274, type: !143)
!2322 = !DILocalVariable(name: "thread_state", scope: !2201, file: !2202, line: 275, type: !143)
!2323 = !DILocalVariable(name: "index", scope: !2324, file: !2202, line: 293, type: !143)
!2324 = distinct !DILexicalBlock(scope: !2201, file: !2202, line: 293, column: 2)
!2325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 256, elements: !1564)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2328, file: !2438, line: 56, type: !2425, isLocal: false, isDefinition: true)
!2328 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2329, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2330, globals: !2435, splitDebugInlining: false, nameTableKind: None)
!2329 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2330 = !{!2331, !1242, !117, !2433, !1981, !113, !362, !118, !156, !213, !2434}
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2333)
!2333 = !{!2334, !2392, !2404, !2405, !2406, !2407, !2413, !2428}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2332, file: !225, line: 247, baseType: !2335, size: 384)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2336)
!2336 = !{!2337, !2361, !2368, !2369, !2370, !2379, !2380, !2381}
!2337 = !DIDerivedType(tag: DW_TAG_member, scope: !2335, file: !225, line: 60, baseType: !2338, size: 64)
!2338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2335, file: !225, line: 60, size: 64, elements: !2339)
!2339 = !{!2340, !2355}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2338, file: !225, line: 61, baseType: !2341, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2342)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2343)
!2343 = !{!2344, !2350}
!2344 = !DIDerivedType(tag: DW_TAG_member, scope: !2342, file: !235, line: 38, baseType: !2345, size: 32)
!2345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2342, file: !235, line: 38, size: 32, elements: !2346)
!2346 = !{!2347, !2349}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2345, file: !235, line: 39, baseType: !2348, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2345, file: !235, line: 40, baseType: !2348, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, scope: !2342, file: !235, line: 42, baseType: !2351, size: 32, offset: 32)
!2351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2342, file: !235, line: 42, size: 32, elements: !2352)
!2352 = !{!2353, !2354}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2351, file: !235, line: 43, baseType: !2348, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2351, file: !235, line: 44, baseType: !2348, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2338, file: !225, line: 62, baseType: !2356, size: 64)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2357)
!2357 = !{!2358}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2356, file: !251, line: 50, baseType: !2359, size: 64)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2360, size: 64, elements: !256)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2335, file: !225, line: 68, baseType: !2362, size: 32, offset: 64)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2364)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2365)
!2365 = !{!2366}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2364, file: !261, line: 232, baseType: !2367, size: 64)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2342)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2335, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2335, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2370 = !DIDerivedType(tag: DW_TAG_member, scope: !2335, file: !225, line: 90, baseType: !2371, size: 16, offset: 112)
!2371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2335, file: !225, line: 90, size: 16, elements: !2372)
!2372 = !{!2373, !2378}
!2373 = !DIDerivedType(tag: DW_TAG_member, scope: !2371, file: !225, line: 91, baseType: !2374, size: 16)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2371, file: !225, line: 91, size: 16, elements: !2375)
!2375 = !{!2376, !2377}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2374, file: !225, line: 96, baseType: !275, size: 8)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2374, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2371, file: !225, line: 100, baseType: !279, size: 16)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2335, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2335, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2335, file: !225, line: 131, baseType: !2382, size: 192, offset: 192)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2383)
!2383 = !{!2384, !2385, !2391}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2382, file: !261, line: 245, baseType: !2341, size: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2382, file: !261, line: 246, baseType: !2386, size: 32, offset: 64)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2387)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{null, !2390}
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2382, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2332, file: !225, line: 250, baseType: !2393, size: 288, offset: 384)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2394)
!2394 = !{!2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2393, file: !296, line: 26, baseType: !156, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2393, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2393, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2393, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2393, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2393, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2393, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2393, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2393, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2332, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2332, file: !225, line: 256, baseType: !2363, size: 64, offset: 704)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2332, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2332, file: !225, line: 300, baseType: !2408, size: 96, offset: 800)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2409)
!2409 = !{!2410, !2411, !2412}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2408, file: !225, line: 153, baseType: !22, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2408, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2408, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2332, file: !225, line: 325, baseType: !2414, size: 32, offset: 896)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2416)
!2416 = !{!2417, !2423, !2424}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2415, file: !220, line: 5074, baseType: !2418, size: 96)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2419)
!2419 = !{!2420, !2421, !2422}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2418, file: !324, line: 57, baseType: !327, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2418, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2418, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2415, file: !220, line: 5075, baseType: !2363, size: 64, offset: 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2415, file: !220, line: 5076, baseType: !2425, size: 32, offset: 160)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2426)
!2426 = !{!2427}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2425, file: !334, line: 52, baseType: !22, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2332, file: !225, line: 343, baseType: !2429, size: 64, offset: 928)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2430)
!2430 = !{!2431, !2432}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2429, file: !296, line: 63, baseType: !156, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2429, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2435 = !{!2326, !2436, !2439, !2441}
!2436 = !DIGlobalVariableExpression(var: !2437, expr: !DIExpression())
!2437 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2328, file: !2438, line: 404, type: !118, isLocal: true, isDefinition: true)
!2438 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2328, file: !2438, line: 405, type: !118, isLocal: true, isDefinition: true)
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(name: "pending_current", scope: !2328, file: !2438, line: 425, type: !2331, isLocal: true, isDefinition: true)
!2443 = !DIGlobalVariableExpression(var: !2444, expr: !DIExpression())
!2444 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2445, file: !2475, line: 19, type: !2481, isLocal: true, isDefinition: true)
!2445 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2446, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2447, globals: !2472, splitDebugInlining: false, nameTableKind: None)
!2446 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2447 = !{!113, !117, !362, !156, !213, !118, !2448, !1242, !115}
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 32)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2450)
!2450 = !{!2451, !2466, !2471}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2449, file: !261, line: 245, baseType: !2452, size: 64)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2453)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2454)
!2454 = !{!2455, !2461}
!2455 = !DIDerivedType(tag: DW_TAG_member, scope: !2453, file: !235, line: 38, baseType: !2456, size: 32)
!2456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2453, file: !235, line: 38, size: 32, elements: !2457)
!2457 = !{!2458, !2460}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2456, file: !235, line: 39, baseType: !2459, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2456, file: !235, line: 40, baseType: !2459, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, scope: !2453, file: !235, line: 42, baseType: !2462, size: 32, offset: 32)
!2462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2453, file: !235, line: 42, size: 32, elements: !2463)
!2463 = !{!2464, !2465}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2462, file: !235, line: 43, baseType: !2459, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2462, file: !235, line: 44, baseType: !2459, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2449, file: !261, line: 246, baseType: !2467, size: 32, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2468)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 32)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{null, !2448}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2449, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2472 = !{!2473, !2443, !2476, !2478}
!2473 = !DIGlobalVariableExpression(var: !2474, expr: !DIExpression())
!2474 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2445, file: !2475, line: 15, type: !213, isLocal: true, isDefinition: true)
!2475 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2445, file: !2475, line: 25, type: !118, isLocal: true, isDefinition: true)
!2478 = !DIGlobalVariableExpression(var: !2479, expr: !DIExpression())
!2479 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2445, file: !2475, line: 17, type: !2480, isLocal: true, isDefinition: true)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2453)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2482)
!2482 = !{!2483}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2481, file: !334, line: 52, baseType: !22, size: 32)
!2484 = !DIGlobalVariableExpression(var: !2485, expr: !DIExpression())
!2485 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2486, file: !2492, line: 61, type: !2524, isLocal: false, isDefinition: true, align: 64)
!2486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2488, globals: !2489, splitDebugInlining: false, nameTableKind: None)
!2487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2488 = !{!117, !118, !22}
!2489 = !{!2490, !2484}
!2490 = !DIGlobalVariableExpression(var: !2491, expr: !DIExpression())
!2491 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2486, file: !2492, line: 61, type: !2493, isLocal: false, isDefinition: true, align: 32)
!2492 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2494)
!2494 = !{!2495, !2501, !2520}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2493, file: !220, line: 5074, baseType: !2496, size: 96)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2497)
!2497 = !{!2498, !2499, !2500}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2496, file: !324, line: 57, baseType: !327, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2496, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2496, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2493, file: !220, line: 5075, baseType: !2502, size: 64, offset: 96)
!2502 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2503)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2504)
!2504 = !{!2505}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2503, file: !261, line: 232, baseType: !2506, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2507)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2508)
!2508 = !{!2509, !2515}
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !235, line: 38, baseType: !2510, size: 32)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !235, line: 38, size: 32, elements: !2511)
!2511 = !{!2512, !2514}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2510, file: !235, line: 39, baseType: !2513, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2510, file: !235, line: 40, baseType: !2513, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !235, line: 42, baseType: !2516, size: 32, offset: 32)
!2516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !235, line: 42, size: 32, elements: !2517)
!2517 = !{!2518, !2519}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2516, file: !235, line: 43, baseType: !2513, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2516, file: !235, line: 44, baseType: !2513, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2493, file: !220, line: 5076, baseType: !2521, size: 32, offset: 160)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2522)
!2522 = !{!2523}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2521, file: !334, line: 52, baseType: !22, size: 32)
!2524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 2048, elements: !2525)
!2525 = !{!2526}
!2526 = !DISubrange(count: 256)
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2529, file: !2548, line: 55, type: !2549, isLocal: true, isDefinition: true, align: 32)
!2529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2531, globals: !2547, splitDebugInlining: false, nameTableKind: None)
!2530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2531 = !{!117, !113, !118, !2532}
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2534)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2535)
!2535 = !{!2536, !2542}
!2536 = !DIDerivedType(tag: DW_TAG_member, scope: !2534, file: !235, line: 38, baseType: !2537, size: 32)
!2537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2534, file: !235, line: 38, size: 32, elements: !2538)
!2538 = !{!2539, !2541}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2537, file: !235, line: 39, baseType: !2540, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2537, file: !235, line: 40, baseType: !2540, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, scope: !2534, file: !235, line: 42, baseType: !2543, size: 32, offset: 32)
!2543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2534, file: !235, line: 42, size: 32, elements: !2544)
!2544 = !{!2545, !2546}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2543, file: !235, line: 43, baseType: !2540, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2543, file: !235, line: 44, baseType: !2540, size: 32)
!2547 = !{!2527}
!2548 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2550)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !2551)
!2551 = !{!2552, !2559}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2550, file: !463, line: 60, baseType: !2553, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!118, !2556}
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2558)
!2558 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !463, line: 48, flags: DIFlagFwdDecl)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2550, file: !463, line: 65, baseType: !2556, size: 32, offset: 32)
!2560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2561, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2561 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2562 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2563, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2563 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2566, retainedTypes: !2574, splitDebugInlining: false, nameTableKind: None)
!2565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2566 = !{!30, !2567}
!2567 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2568, line: 54, baseType: !32, size: 32, elements: !2569)
!2568 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2569 = !{!2570, !2571, !2572, !2573}
!2570 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2571 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2572 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2573 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2574 = !{!117, !315, !1981, !24, !2575, !22, !2581, !118, !989, !2596}
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2568, line: 58, baseType: !2577)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2568, line: 58, size: 64, elements: !2578)
!2578 = !{!2579}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2577, file: !2568, line: 58, baseType: !2580, size: 64)
!2580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 64, elements: !1564)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 32)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2568, line: 68, size: 128, elements: !2583)
!2583 = !{!2584, !2587, !2588, !2589}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2582, file: !2568, line: 69, baseType: !2585, size: 64)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2586, size: 64, elements: !256)
!2586 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2568, line: 61, baseType: !156)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2582, file: !2568, line: 70, baseType: !2586, size: 32, offset: 64)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2582, file: !2568, line: 71, baseType: !156, size: 32, offset: 96)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2582, file: !2568, line: 77, baseType: !2590, offset: 128)
!2590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2591, elements: !2594)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2568, line: 64, size: 32, elements: !2592)
!2592 = !{!2593}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2591, file: !2568, line: 65, baseType: !2586, size: 32)
!2594 = !{!2595}
!2595 = !DISubrange(count: 0)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!2597 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2598, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2599, retainedTypes: !2619, splitDebugInlining: false, nameTableKind: None)
!2598 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2599 = !{!2600, !2608}
!2600 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2601, line: 69, baseType: !32, size: 32, elements: !2602)
!2601 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2602 = !{!2603, !2604, !2605, !2606, !2607}
!2603 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2604 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2605 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2606 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2607 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2608 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2601, line: 56, baseType: !32, size: 32, elements: !2609)
!2609 = !{!2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618}
!2610 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2611 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2612 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2613 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2614 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2615 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2616 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2617 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2618 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2619 = !{!118, !2600, !2608, !2620, !276, !153, !2622, !2623, !144, !280, !133, !315, !117, !22, !32, !2625, !2626, !2627, !2628, !2629, !116, !2630, !2621, !2631, !2632, !2633, !2634}
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2601, line: 31, baseType: !2621)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !116)
!2622 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !316, line: 329, baseType: !32)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2601, line: 32, baseType: !2624)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !214)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!2628 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !316, line: 145, baseType: !118)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 32)
!2635 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2636, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2636 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2637 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2638, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2638 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2641, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2641 = !{!2642, !30}
!2642 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2643, line: 27, baseType: !32, size: 32, elements: !2644)
!2643 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2644 = !{!2645, !2646, !2647, !2648, !2649}
!2645 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2646 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2647 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2648 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2649 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2651, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2652, retainedTypes: !2653, splitDebugInlining: false, nameTableKind: None)
!2651 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2652 = !{!725, !2642, !30}
!2653 = !{!890, !2654, !117, !118, !362, !156, !143, !2671}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !2656)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !2657)
!2657 = !{!2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2656, file: !656, line: 413, baseType: !1697, size: 256)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2656, file: !656, line: 414, baseType: !1699, size: 768, offset: 256)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2656, file: !656, line: 415, baseType: !1697, size: 256, offset: 1024)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2656, file: !656, line: 416, baseType: !1699, size: 768, offset: 1280)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2656, file: !656, line: 417, baseType: !1697, size: 256, offset: 2048)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2656, file: !656, line: 418, baseType: !1699, size: 768, offset: 2304)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2656, file: !656, line: 419, baseType: !1697, size: 256, offset: 3072)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2656, file: !656, line: 420, baseType: !1699, size: 768, offset: 3328)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2656, file: !656, line: 421, baseType: !1697, size: 256, offset: 4096)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2656, file: !656, line: 422, baseType: !1710, size: 1792, offset: 4352)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2656, file: !656, line: 423, baseType: !1714, size: 1920, offset: 6144)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2656, file: !656, line: 424, baseType: !1719, size: 20608, offset: 8064)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2656, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2673)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2674)
!2674 = !{!2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2673, file: !656, line: 447, baseType: !660, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2673, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2673, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2673, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2673, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2673, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2673, file: !656, line: 453, baseType: !1734, size: 96, offset: 192)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2673, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2673, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2673, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2673, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2673, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2673, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2673, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2673, file: !656, line: 461, baseType: !1745, size: 64, offset: 512)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2673, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2673, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2673, file: !656, line: 464, baseType: !1749, size: 128, offset: 640)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2673, file: !656, line: 465, baseType: !1751, size: 160, offset: 768)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2673, file: !656, line: 466, baseType: !1753, size: 160, offset: 928)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2673, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2699, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2700, splitDebugInlining: false, nameTableKind: None)
!2699 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2700 = !{!117, !118, !22, !2701}
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2703)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2704)
!2704 = !{!2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2703, file: !656, line: 447, baseType: !660, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2703, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2703, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2703, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2703, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2703, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2703, file: !656, line: 453, baseType: !1734, size: 96, offset: 192)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2703, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2703, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2703, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2703, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2703, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2703, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2703, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2703, file: !656, line: 461, baseType: !1745, size: 64, offset: 512)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2703, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2703, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2703, file: !656, line: 464, baseType: !1749, size: 128, offset: 640)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2703, file: !656, line: 465, baseType: !1751, size: 160, offset: 768)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2703, file: !656, line: 466, baseType: !1753, size: 160, offset: 928)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2703, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2728, splitDebugInlining: false, nameTableKind: None)
!2727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2728 = !{!2729, !117, !118}
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2731)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2732)
!2732 = !{!2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2731, file: !656, line: 447, baseType: !660, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2731, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2731, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2731, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2731, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2731, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2731, file: !656, line: 453, baseType: !1734, size: 96, offset: 192)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2731, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2731, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2731, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2731, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2731, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2731, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2731, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2731, file: !656, line: 461, baseType: !1745, size: 64, offset: 512)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2731, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2731, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2731, file: !656, line: 464, baseType: !1749, size: 128, offset: 640)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2731, file: !656, line: 465, baseType: !1751, size: 160, offset: 768)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2731, file: !656, line: 466, baseType: !1753, size: 160, offset: 928)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2731, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2754 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2755, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2756, splitDebugInlining: false, nameTableKind: None)
!2755 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2756 = !{!2757, !156, !117, !118}
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2759, line: 98, size: 256, elements: !2760)
!2759 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2760 = !{!2761, !2766, !2771, !2776, !2781, !2786, !2791, !2796}
!2761 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !2759, line: 99, baseType: !2762, size: 32)
!2762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2758, file: !2759, line: 99, size: 32, elements: !2763)
!2763 = !{!2764, !2765}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2762, file: !2759, line: 99, baseType: !156, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2762, file: !2759, line: 99, baseType: !156, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !2759, line: 100, baseType: !2767, size: 32, offset: 32)
!2767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2758, file: !2759, line: 100, size: 32, elements: !2768)
!2768 = !{!2769, !2770}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2767, file: !2759, line: 100, baseType: !156, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2767, file: !2759, line: 100, baseType: !156, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !2759, line: 101, baseType: !2772, size: 32, offset: 64)
!2772 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2758, file: !2759, line: 101, size: 32, elements: !2773)
!2773 = !{!2774, !2775}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2772, file: !2759, line: 101, baseType: !156, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2772, file: !2759, line: 101, baseType: !156, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !2759, line: 102, baseType: !2777, size: 32, offset: 96)
!2777 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2758, file: !2759, line: 102, size: 32, elements: !2778)
!2778 = !{!2779, !2780}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2777, file: !2759, line: 102, baseType: !156, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2777, file: !2759, line: 102, baseType: !156, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !2759, line: 103, baseType: !2782, size: 32, offset: 128)
!2782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2758, file: !2759, line: 103, size: 32, elements: !2783)
!2783 = !{!2784, !2785}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2782, file: !2759, line: 103, baseType: !156, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2782, file: !2759, line: 103, baseType: !156, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !2759, line: 104, baseType: !2787, size: 32, offset: 160)
!2787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2758, file: !2759, line: 104, size: 32, elements: !2788)
!2788 = !{!2789, !2790}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2787, file: !2759, line: 104, baseType: !156, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2787, file: !2759, line: 104, baseType: !156, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !2759, line: 105, baseType: !2792, size: 32, offset: 192)
!2792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2758, file: !2759, line: 105, size: 32, elements: !2793)
!2793 = !{!2794, !2795}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2792, file: !2759, line: 105, baseType: !156, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2792, file: !2759, line: 105, baseType: !156, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2758, file: !2759, line: 106, baseType: !156, size: 32, offset: 224)
!2797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2641, retainedTypes: !2799, splitDebugInlining: false, nameTableKind: None)
!2798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2799 = !{!2800, !117, !118, !2825, !2596, !156}
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2802)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2803)
!2803 = !{!2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2802, file: !656, line: 447, baseType: !660, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2802, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2802, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2802, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2802, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2802, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2802, file: !656, line: 453, baseType: !1734, size: 96, offset: 192)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2802, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2802, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2802, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2802, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2802, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2802, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2802, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2802, file: !656, line: 461, baseType: !1745, size: 64, offset: 512)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2802, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2802, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2802, file: !656, line: 464, baseType: !1749, size: 128, offset: 640)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2802, file: !656, line: 465, baseType: !1751, size: 160, offset: 768)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2802, file: !656, line: 466, baseType: !1753, size: 160, offset: 928)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2802, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2759, line: 141, baseType: !2827)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2759, line: 97, size: 256, elements: !2828)
!2828 = !{!2829}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2827, file: !2759, line: 107, baseType: !2830, size: 256)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2759, line: 98, size: 256, elements: !2831)
!2831 = !{!2832, !2837, !2842, !2847, !2852, !2857, !2862, !2867}
!2832 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2759, line: 99, baseType: !2833, size: 32)
!2833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2759, line: 99, size: 32, elements: !2834)
!2834 = !{!2835, !2836}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2833, file: !2759, line: 99, baseType: !156, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2833, file: !2759, line: 99, baseType: !156, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2759, line: 100, baseType: !2838, size: 32, offset: 32)
!2838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2759, line: 100, size: 32, elements: !2839)
!2839 = !{!2840, !2841}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2838, file: !2759, line: 100, baseType: !156, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2838, file: !2759, line: 100, baseType: !156, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2759, line: 101, baseType: !2843, size: 32, offset: 64)
!2843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2759, line: 101, size: 32, elements: !2844)
!2844 = !{!2845, !2846}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2843, file: !2759, line: 101, baseType: !156, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2843, file: !2759, line: 101, baseType: !156, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2759, line: 102, baseType: !2848, size: 32, offset: 96)
!2848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2759, line: 102, size: 32, elements: !2849)
!2849 = !{!2850, !2851}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2848, file: !2759, line: 102, baseType: !156, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2848, file: !2759, line: 102, baseType: !156, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2759, line: 103, baseType: !2853, size: 32, offset: 128)
!2853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2759, line: 103, size: 32, elements: !2854)
!2854 = !{!2855, !2856}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2853, file: !2759, line: 103, baseType: !156, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2853, file: !2759, line: 103, baseType: !156, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2759, line: 104, baseType: !2858, size: 32, offset: 160)
!2858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2759, line: 104, size: 32, elements: !2859)
!2859 = !{!2860, !2861}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2858, file: !2759, line: 104, baseType: !156, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2858, file: !2759, line: 104, baseType: !156, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, scope: !2830, file: !2759, line: 105, baseType: !2863, size: 32, offset: 192)
!2863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2830, file: !2759, line: 105, size: 32, elements: !2864)
!2864 = !{!2865, !2866}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2863, file: !2759, line: 105, baseType: !156, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2863, file: !2759, line: 105, baseType: !156, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2830, file: !2759, line: 106, baseType: !156, size: 32, offset: 224)
!2868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1682, retainedTypes: !2870, splitDebugInlining: false, nameTableKind: None)
!2869 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2870 = !{!890, !362, !143, !156, !2871, !2888}
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !2873)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !2874)
!2874 = !{!2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2873, file: !656, line: 413, baseType: !1697, size: 256)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2873, file: !656, line: 414, baseType: !1699, size: 768, offset: 256)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2873, file: !656, line: 415, baseType: !1697, size: 256, offset: 1024)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2873, file: !656, line: 416, baseType: !1699, size: 768, offset: 1280)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2873, file: !656, line: 417, baseType: !1697, size: 256, offset: 2048)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2873, file: !656, line: 418, baseType: !1699, size: 768, offset: 2304)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2873, file: !656, line: 419, baseType: !1697, size: 256, offset: 3072)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2873, file: !656, line: 420, baseType: !1699, size: 768, offset: 3328)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2873, file: !656, line: 421, baseType: !1697, size: 256, offset: 4096)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2873, file: !656, line: 422, baseType: !1710, size: 1792, offset: 4352)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2873, file: !656, line: 423, baseType: !1714, size: 1920, offset: 6144)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2873, file: !656, line: 424, baseType: !1719, size: 20608, offset: 8064)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2873, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2890)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2891)
!2891 = !{!2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2890, file: !656, line: 447, baseType: !660, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2890, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2890, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2890, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2890, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2890, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2890, file: !656, line: 453, baseType: !1734, size: 96, offset: 192)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2890, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2890, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2890, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2890, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2890, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2890, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2890, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2890, file: !656, line: 461, baseType: !1745, size: 64, offset: 512)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2890, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2890, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2890, file: !656, line: 464, baseType: !1749, size: 128, offset: 640)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2890, file: !656, line: 465, baseType: !1751, size: 160, offset: 768)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2890, file: !656, line: 466, baseType: !1753, size: 160, offset: 928)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2890, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2913 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2914, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2915, splitDebugInlining: false, nameTableKind: None)
!2914 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2915 = !{!2916, !117, !118}
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2918)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2919)
!2919 = !{!2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2918, file: !656, line: 447, baseType: !660, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2918, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2918, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2918, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2918, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2918, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2918, file: !656, line: 453, baseType: !1734, size: 96, offset: 192)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2918, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2918, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2918, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2918, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2918, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2918, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2918, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2918, file: !656, line: 461, baseType: !1745, size: 64, offset: 512)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2918, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2918, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2918, file: !656, line: 464, baseType: !1749, size: 128, offset: 640)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2918, file: !656, line: 465, baseType: !1751, size: 160, offset: 768)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2918, file: !656, line: 466, baseType: !1753, size: 160, offset: 928)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2918, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2942, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2943, splitDebugInlining: false, nameTableKind: None)
!2942 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2943 = !{!135, !1242, !315, !1094, !2944, !144, !117}
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!2946 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2947, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2948, splitDebugInlining: false, nameTableKind: None)
!2947 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2948 = !{!2949}
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 369, baseType: !2951)
!2951 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 335, size: 1152, elements: !2952)
!2952 = !{!2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2951, file: !448, line: 337, baseType: !452, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2951, file: !448, line: 338, baseType: !452, size: 32, offset: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2951, file: !448, line: 339, baseType: !452, size: 32, offset: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2951, file: !448, line: 340, baseType: !452, size: 32, offset: 96)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2951, file: !448, line: 341, baseType: !452, size: 32, offset: 128)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2951, file: !448, line: 342, baseType: !452, size: 32, offset: 160)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2951, file: !448, line: 343, baseType: !452, size: 32, offset: 192)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2951, file: !448, line: 344, baseType: !156, size: 32, offset: 224)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2951, file: !448, line: 345, baseType: !452, size: 32, offset: 256)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2951, file: !448, line: 346, baseType: !452, size: 32, offset: 288)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2951, file: !448, line: 347, baseType: !960, size: 64, offset: 320)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2951, file: !448, line: 348, baseType: !452, size: 32, offset: 384)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2951, file: !448, line: 349, baseType: !452, size: 32, offset: 416)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2951, file: !448, line: 350, baseType: !452, size: 32, offset: 448)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2951, file: !448, line: 351, baseType: !156, size: 32, offset: 480)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2951, file: !448, line: 352, baseType: !452, size: 32, offset: 512)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2951, file: !448, line: 353, baseType: !452, size: 32, offset: 544)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2951, file: !448, line: 354, baseType: !960, size: 64, offset: 576)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2951, file: !448, line: 355, baseType: !452, size: 32, offset: 640)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2951, file: !448, line: 356, baseType: !452, size: 32, offset: 672)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2951, file: !448, line: 357, baseType: !452, size: 32, offset: 704)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2951, file: !448, line: 358, baseType: !156, size: 32, offset: 736)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2951, file: !448, line: 359, baseType: !452, size: 32, offset: 768)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2951, file: !448, line: 360, baseType: !452, size: 32, offset: 800)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2951, file: !448, line: 361, baseType: !960, size: 64, offset: 832)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2951, file: !448, line: 362, baseType: !452, size: 32, offset: 896)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2951, file: !448, line: 363, baseType: !452, size: 32, offset: 928)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2951, file: !448, line: 364, baseType: !960, size: 64, offset: 960)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2951, file: !448, line: 365, baseType: !452, size: 32, offset: 1024)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2951, file: !448, line: 366, baseType: !452, size: 32, offset: 1056)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2951, file: !448, line: 367, baseType: !981, size: 32, offset: 1088)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2951, file: !448, line: 368, baseType: !452, size: 32, offset: 1120)
!2985 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2986, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2986 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2988, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2989, retainedTypes: !3005, splitDebugInlining: false, nameTableKind: None)
!2988 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!2989 = !{!2990, !2997, !3001}
!2990 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2991, line: 38, baseType: !32, size: 32, elements: !2992)
!2991 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2992 = !{!2993, !2994, !2995, !2996}
!2993 = !DIEnumerator(name: "HAL_OK", value: 0)
!2994 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2995 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2996 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2997 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !933, line: 184, baseType: !32, size: 32, elements: !2998)
!2998 = !{!2999, !3000}
!2999 = !DIEnumerator(name: "RESET", value: 0)
!3000 = !DIEnumerator(name: "SET", value: 1)
!3001 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !933, line: 190, baseType: !32, size: 32, elements: !3002)
!3002 = !{!3003, !3004}
!3003 = !DIEnumerator(name: "DISABLE", value: 0)
!3004 = !DIEnumerator(name: "ENABLE", value: 1)
!3005 = !{!117, !3006, !143, !156, !1558, !3042, !3048, !3059, !279, !3060, !213}
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 369, baseType: !3008)
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 335, size: 1152, elements: !3009)
!3009 = !{!3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3008, file: !448, line: 337, baseType: !452, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3008, file: !448, line: 338, baseType: !452, size: 32, offset: 32)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3008, file: !448, line: 339, baseType: !452, size: 32, offset: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3008, file: !448, line: 340, baseType: !452, size: 32, offset: 96)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3008, file: !448, line: 341, baseType: !452, size: 32, offset: 128)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3008, file: !448, line: 342, baseType: !452, size: 32, offset: 160)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3008, file: !448, line: 343, baseType: !452, size: 32, offset: 192)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3008, file: !448, line: 344, baseType: !156, size: 32, offset: 224)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3008, file: !448, line: 345, baseType: !452, size: 32, offset: 256)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3008, file: !448, line: 346, baseType: !452, size: 32, offset: 288)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3008, file: !448, line: 347, baseType: !960, size: 64, offset: 320)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3008, file: !448, line: 348, baseType: !452, size: 32, offset: 384)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3008, file: !448, line: 349, baseType: !452, size: 32, offset: 416)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3008, file: !448, line: 350, baseType: !452, size: 32, offset: 448)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3008, file: !448, line: 351, baseType: !156, size: 32, offset: 480)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3008, file: !448, line: 352, baseType: !452, size: 32, offset: 512)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3008, file: !448, line: 353, baseType: !452, size: 32, offset: 544)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3008, file: !448, line: 354, baseType: !960, size: 64, offset: 576)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3008, file: !448, line: 355, baseType: !452, size: 32, offset: 640)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3008, file: !448, line: 356, baseType: !452, size: 32, offset: 672)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3008, file: !448, line: 357, baseType: !452, size: 32, offset: 704)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3008, file: !448, line: 358, baseType: !156, size: 32, offset: 736)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3008, file: !448, line: 359, baseType: !452, size: 32, offset: 768)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3008, file: !448, line: 360, baseType: !452, size: 32, offset: 800)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3008, file: !448, line: 361, baseType: !960, size: 64, offset: 832)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3008, file: !448, line: 362, baseType: !452, size: 32, offset: 896)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3008, file: !448, line: 363, baseType: !452, size: 32, offset: 928)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3008, file: !448, line: 364, baseType: !960, size: 64, offset: 960)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3008, file: !448, line: 365, baseType: !452, size: 32, offset: 1024)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3008, file: !448, line: 366, baseType: !452, size: 32, offset: 1056)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3008, file: !448, line: 367, baseType: !981, size: 32, offset: 1088)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3008, file: !448, line: 368, baseType: !452, size: 32, offset: 1120)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 32)
!3043 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !448, line: 329, baseType: !3044)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 325, size: 64, elements: !3045)
!3045 = !{!3046, !3047}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3044, file: !448, line: 327, baseType: !452, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3044, file: !448, line: 328, baseType: !452, size: 32, offset: 32)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 32)
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 258, baseType: !3050)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 249, size: 224, elements: !3051)
!3051 = !{!3052, !3053, !3054, !3055, !3056, !3057, !3058}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3050, file: !448, line: 251, baseType: !452, size: 32)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3050, file: !448, line: 252, baseType: !452, size: 32, offset: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3050, file: !448, line: 253, baseType: !452, size: 32, offset: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3050, file: !448, line: 254, baseType: !452, size: 32, offset: 96)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3050, file: !448, line: 255, baseType: !452, size: 32, offset: 128)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3050, file: !448, line: 256, baseType: !452, size: 32, offset: 160)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3050, file: !448, line: 257, baseType: !452, size: 32, offset: 192)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !448, line: 275, baseType: !3062)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 264, size: 320, elements: !3063)
!3063 = !{!3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3062, file: !448, line: 266, baseType: !452, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3062, file: !448, line: 267, baseType: !452, size: 32, offset: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3062, file: !448, line: 268, baseType: !452, size: 32, offset: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3062, file: !448, line: 269, baseType: !452, size: 32, offset: 96)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3062, file: !448, line: 270, baseType: !452, size: 32, offset: 128)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3062, file: !448, line: 271, baseType: !452, size: 32, offset: 160)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3062, file: !448, line: 272, baseType: !452, size: 32, offset: 192)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3062, file: !448, line: 273, baseType: !452, size: 32, offset: 224)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3062, file: !448, line: 274, baseType: !1231, size: 64, offset: 256)
!3073 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3074, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3075, retainedTypes: !3076, splitDebugInlining: false, nameTableKind: None)
!3074 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3075 = !{!932}
!3076 = !{!3077, !156, !3085, !3091, !3102}
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !656, line: 770, baseType: !3079)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 764, size: 128, elements: !3080)
!3080 = !{!3081, !3082, !3083, !3084}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3079, file: !656, line: 766, baseType: !452, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3079, file: !656, line: 767, baseType: !452, size: 32, offset: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3079, file: !656, line: 768, baseType: !452, size: 32, offset: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3079, file: !656, line: 769, baseType: !660, size: 32, offset: 96)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !448, line: 329, baseType: !3087)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 325, size: 64, elements: !3088)
!3088 = !{!3089, !3090}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3087, file: !448, line: 327, baseType: !452, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3087, file: !448, line: 328, baseType: !452, size: 32, offset: 32)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 258, baseType: !3093)
!3093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 249, size: 224, elements: !3094)
!3094 = !{!3095, !3096, !3097, !3098, !3099, !3100, !3101}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3093, file: !448, line: 251, baseType: !452, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3093, file: !448, line: 252, baseType: !452, size: 32, offset: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3093, file: !448, line: 253, baseType: !452, size: 32, offset: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3093, file: !448, line: 254, baseType: !452, size: 32, offset: 96)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3093, file: !448, line: 255, baseType: !452, size: 32, offset: 128)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3093, file: !448, line: 256, baseType: !452, size: 32, offset: 160)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3093, file: !448, line: 257, baseType: !452, size: 32, offset: 192)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 369, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 335, size: 1152, elements: !3105)
!3105 = !{!3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3104, file: !448, line: 337, baseType: !452, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3104, file: !448, line: 338, baseType: !452, size: 32, offset: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3104, file: !448, line: 339, baseType: !452, size: 32, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3104, file: !448, line: 340, baseType: !452, size: 32, offset: 96)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3104, file: !448, line: 341, baseType: !452, size: 32, offset: 128)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3104, file: !448, line: 342, baseType: !452, size: 32, offset: 160)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3104, file: !448, line: 343, baseType: !452, size: 32, offset: 192)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3104, file: !448, line: 344, baseType: !156, size: 32, offset: 224)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3104, file: !448, line: 345, baseType: !452, size: 32, offset: 256)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3104, file: !448, line: 346, baseType: !452, size: 32, offset: 288)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3104, file: !448, line: 347, baseType: !960, size: 64, offset: 320)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3104, file: !448, line: 348, baseType: !452, size: 32, offset: 384)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3104, file: !448, line: 349, baseType: !452, size: 32, offset: 416)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3104, file: !448, line: 350, baseType: !452, size: 32, offset: 448)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3104, file: !448, line: 351, baseType: !156, size: 32, offset: 480)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3104, file: !448, line: 352, baseType: !452, size: 32, offset: 512)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3104, file: !448, line: 353, baseType: !452, size: 32, offset: 544)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3104, file: !448, line: 354, baseType: !960, size: 64, offset: 576)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3104, file: !448, line: 355, baseType: !452, size: 32, offset: 640)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3104, file: !448, line: 356, baseType: !452, size: 32, offset: 672)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3104, file: !448, line: 357, baseType: !452, size: 32, offset: 704)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3104, file: !448, line: 358, baseType: !156, size: 32, offset: 736)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3104, file: !448, line: 359, baseType: !452, size: 32, offset: 768)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3104, file: !448, line: 360, baseType: !452, size: 32, offset: 800)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3104, file: !448, line: 361, baseType: !960, size: 64, offset: 832)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3104, file: !448, line: 362, baseType: !452, size: 32, offset: 896)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3104, file: !448, line: 363, baseType: !452, size: 32, offset: 928)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3104, file: !448, line: 364, baseType: !960, size: 64, offset: 960)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3104, file: !448, line: 365, baseType: !452, size: 32, offset: 1024)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3104, file: !448, line: 366, baseType: !452, size: 32, offset: 1056)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3104, file: !448, line: 367, baseType: !981, size: 32, offset: 1088)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3104, file: !448, line: 368, baseType: !452, size: 32, offset: 1120)
!3138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !3140, splitDebugInlining: false, nameTableKind: None)
!3139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3140 = !{!117, !315}
!3141 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3142, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3143, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3142 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3143 = !{!3144, !3151, !2642, !30}
!3144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3145, line: 14, baseType: !32, size: 32, elements: !3146)
!3145 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3146 = !{!3147, !3148, !3149, !3150}
!3147 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3148 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3149 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3150 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3145, line: 42, baseType: !32, size: 32, elements: !3152)
!3152 = !{!3153, !3154, !3155, !3156, !3157, !3158}
!3153 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3154 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3155 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3156 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3157 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3158 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3159 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3160, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3160 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3161 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3162, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3163, retainedTypes: !3174, splitDebugInlining: false, nameTableKind: None)
!3162 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3163 = !{!3164, !30}
!3164 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !220, line: 5323, baseType: !32, size: 32, elements: !3165)
!3165 = !{!3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173}
!3166 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3167 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3168 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3169 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3170 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3171 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3172 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3173 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3174 = !{!117, !143, !3175, !1242, !3185, !146, !3186, !118, !3187, !426}
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 32)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3177, line: 25, size: 64, elements: !3178)
!3177 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3178 = !{!3179, !3184}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3176, file: !3177, line: 26, baseType: !3180, size: 32)
!3180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !3181)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !3182)
!3182 = !{!3183}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3181, file: !417, line: 36, baseType: !426, size: 32)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3176, file: !3177, line: 27, baseType: !117, size: 32, offset: 32)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 32)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 32)
!3188 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !3189)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !3190)
!3190 = !{!3191, !3197}
!3191 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !235, line: 38, baseType: !3192, size: 32)
!3192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3189, file: !235, line: 38, size: 32, elements: !3193)
!3193 = !{!3194, !3196}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3192, file: !235, line: 39, baseType: !3195, size: 32)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3192, file: !235, line: 40, baseType: !3195, size: 32)
!3197 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !235, line: 42, baseType: !3198, size: 32, offset: 32)
!3198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3189, file: !235, line: 42, size: 32, elements: !3199)
!3199 = !{!3200, !3201}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3198, file: !235, line: 43, baseType: !3195, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3198, file: !235, line: 44, baseType: !3195, size: 32)
!3202 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3203, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !3204, splitDebugInlining: false, nameTableKind: None)
!3203 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3204 = !{!22, !117, !118}
!3205 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3206, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3206 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3207 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3208, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3208 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3209 = !{!"Ubuntu clang version 14.0.6"}
!3210 = !{i32 7, !"Dwarf Version", i32 4}
!3211 = !{i32 2, !"Debug Info Version", i32 3}
!3212 = !{i32 1, !"wchar_size", i32 4}
!3213 = !{i32 1, !"min_enum_size", i32 4}
!3214 = !{i32 1, !"branch-target-enforcement", i32 0}
!3215 = !{i32 1, !"sign-return-address", i32 0}
!3216 = !{i32 1, !"sign-return-address-all", i32 0}
!3217 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3218 = !{i32 7, !"frame-pointer", i32 2}
!3219 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3220, file: !3220, line: 26, type: !365, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !2149)
!3220 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3221 = !DILocation(line: 28, column: 1, scope: !3219)
!3222 = !{i64 2154448638, i64 2154448658, i64 2154448721}
!3223 = !DILocation(line: 29, column: 1, scope: !3219)
!3224 = !{i64 2154449053, i64 2154449073, i64 2154449136}
!3225 = !DILocation(line: 30, column: 1, scope: !3219)
!3226 = !{i64 2154449472, i64 2154449492, i64 2154449555}
!3227 = !DILocation(line: 31, column: 1, scope: !3219)
!3228 = !{i64 2154449891, i64 2154449911, i64 2154449974}
!3229 = !DILocation(line: 33, column: 1, scope: !3219)
!3230 = !{i64 2154450183, i64 2154450203, i64 2154450266}
!3231 = !DILocation(line: 35, column: 1, scope: !3219)
!3232 = !{i64 2154450508, i64 2154450528, i64 2154450591}
!3233 = !DILocation(line: 50, column: 1, scope: !3219)
!3234 = !{i64 2154450935, i64 2154450955, i64 2154451018}
!3235 = !DILocation(line: 54, column: 1, scope: !3219)
!3236 = !{i64 2154451374, i64 2154451394, i64 2154451457}
!3237 = !DILocation(line: 61, column: 1, scope: !3219)
!3238 = !{i64 2154451691, i64 2154451711, i64 2154451774}
!3239 = !DILocation(line: 63, column: 1, scope: !3219)
!3240 = !{i64 2154456132, i64 2154456152, i64 2154456215}
!3241 = !DILocation(line: 64, column: 1, scope: !3219)
!3242 = !{i64 2154456654, i64 2154456674, i64 2154456737}
!3243 = !DILocation(line: 65, column: 1, scope: !3219)
!3244 = !{i64 2154457152, i64 2154457172, i64 2154457235}
!3245 = !DILocation(line: 66, column: 1, scope: !3219)
!3246 = !{i64 2154457634, i64 2154457654, i64 2154457717}
!3247 = !DILocation(line: 67, column: 1, scope: !3219)
!3248 = !{i64 2154458141, i64 2154458161, i64 2154458224}
!3249 = !DILocation(line: 68, column: 1, scope: !3219)
!3250 = !{i64 2154458629, i64 2154458649, i64 2154458712}
!3251 = !DILocation(line: 70, column: 1, scope: !3219)
!3252 = !{i64 2154459097, i64 2154459117, i64 2154459180}
!3253 = !DILocation(line: 71, column: 1, scope: !3219)
!3254 = !{i64 2154459539, i64 2154459559, i64 2154459622}
!3255 = !DILocation(line: 72, column: 1, scope: !3219)
!3256 = !{i64 2154459997, i64 2154460017, i64 2154460080}
!3257 = !DILocation(line: 79, column: 1, scope: !3219)
!3258 = !{i64 2154460451, i64 2154460471, i64 2154460534}
!3259 = !DILocation(line: 80, column: 1, scope: !3219)
!3260 = !{i64 2154460962, i64 2154460982, i64 2154461045}
!3261 = !DILocation(line: 82, column: 1, scope: !3219)
!3262 = !{i64 2154461453, i64 2154461473, i64 2154461536}
!3263 = !DILocation(line: 97, column: 1, scope: !3219)
!3264 = !{i64 2154461790, i64 2154461810, i64 2154461873}
!3265 = !DILocation(line: 99, column: 1, scope: !3219)
!3266 = !{i64 2154462008, i64 2154462028, i64 2154462091}
!3267 = !DILocation(line: 102, column: 1, scope: !3219)
!3268 = !{i64 2154462265, i64 2154462285, i64 2154462348}
!3269 = !DILocation(line: 105, column: 1, scope: !3219)
!3270 = !{i64 2154462505, i64 2154462525, i64 2154462588}
!3271 = !DILocation(line: 115, column: 1, scope: !3219)
!3272 = !{i64 2154462844, i64 2154462864, i64 2154462927}
!3273 = !DILocation(line: 118, column: 1, scope: !3219)
!3274 = !{i64 2154463188, i64 2154463208, i64 2154463271}
!3275 = !DILocation(line: 32, column: 1, scope: !3276)
!3276 = !DILexicalBlockFile(scope: !3219, file: !3277, discriminator: 0)
!3277 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3278 = !{i64 2154463544, i64 2154463564, i64 2154463627}
!3279 = !DILocation(line: 33, column: 1, scope: !3276)
!3280 = !{i64 2154464056, i64 2154464076, i64 2154464139}
!3281 = !DILocation(line: 53, column: 1, scope: !3276)
!3282 = !{i64 2154464564, i64 2154464584, i64 2154464647}
!3283 = !DILocation(line: 54, column: 1, scope: !3276)
!3284 = !{i64 2154464982, i64 2154465002, i64 2154465065}
!3285 = !DILocation(line: 55, column: 1, scope: !3276)
!3286 = !{i64 2154469461, i64 2154469481, i64 2154469544}
!3287 = !DILocation(line: 56, column: 1, scope: !3276)
!3288 = !{i64 2154469879, i64 2154469899, i64 2154469962}
!3289 = !DILocation(line: 57, column: 1, scope: !3276)
!3290 = !{i64 2154470297, i64 2154470317, i64 2154470380}
!3291 = !DILocation(line: 58, column: 1, scope: !3276)
!3292 = !{i64 2154470715, i64 2154470735, i64 2154470798}
!3293 = !DILocation(line: 59, column: 1, scope: !3276)
!3294 = !{i64 2154471133, i64 2154471153, i64 2154471216}
!3295 = !DILocation(line: 60, column: 1, scope: !3276)
!3296 = !{i64 2154471557, i64 2154471577, i64 2154471640}
!3297 = !DILocation(line: 61, column: 1, scope: !3276)
!3298 = !{i64 2154471874, i64 2154471894, i64 2154471957}
!3299 = !DILocation(line: 70, column: 1, scope: !3276)
!3300 = !{i64 2154472103, i64 2154472123, i64 2154472186}
!3301 = !DILocation(line: 72, column: 1, scope: !3276)
!3302 = !{i64 2154472435, i64 2154472455, i64 2154472518}
!3303 = !DILocation(line: 73, column: 1, scope: !3276)
!3304 = !{i64 2154472885, i64 2154472905, i64 2154472968}
!3305 = !DILocation(line: 74, column: 1, scope: !3276)
!3306 = !{i64 2154473335, i64 2154473355, i64 2154473418}
!3307 = !DILocation(line: 75, column: 1, scope: !3276)
!3308 = !{i64 2154473785, i64 2154473805, i64 2154473868}
!3309 = !DILocation(line: 76, column: 1, scope: !3276)
!3310 = !{i64 2154474235, i64 2154474255, i64 2154474318}
!3311 = !DILocation(line: 77, column: 1, scope: !3276)
!3312 = !{i64 2154474685, i64 2154474705, i64 2154474768}
!3313 = !DILocation(line: 78, column: 1, scope: !3276)
!3314 = !{i64 2154475135, i64 2154475155, i64 2154475218}
!3315 = !DILocation(line: 79, column: 1, scope: !3276)
!3316 = !{i64 2154475585, i64 2154475605, i64 2154475668}
!3317 = !DILocation(line: 80, column: 1, scope: !3276)
!3318 = !{i64 2154476038, i64 2154476058, i64 2154476121}
!3319 = !DILocation(line: 84, column: 1, scope: !3276)
!3320 = !{i64 2154476370, i64 2154476390, i64 2154476453}
!3321 = !DILocation(line: 91, column: 1, scope: !3276)
!3322 = !{i64 2154476767, i64 2154476787, i64 2154476850}
!3323 = !DILocation(line: 93, column: 1, scope: !3276)
!3324 = !{i64 2154477134, i64 2154477154, i64 2154477217}
!3325 = !DILocation(line: 106, column: 1, scope: !3276)
!3326 = !{i64 2154477404, i64 2154477424, i64 2154477487}
!3327 = !DILocation(line: 11, column: 1, scope: !3328)
!3328 = !DILexicalBlockFile(scope: !3219, file: !3329, discriminator: 0)
!3329 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3330 = distinct !DISubprogram(name: "blink0", scope: !218, file: !218, line: 90, type: !365, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2149)
!3331 = !DILocation(line: 92, column: 2, scope: !3330)
!3332 = !DILocation(line: 93, column: 1, scope: !3330)
!3333 = distinct !DISubprogram(name: "blink", scope: !218, file: !218, line: 54, type: !3334, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3337)
!3334 = !DISubroutineType(types: !3335)
!3335 = !{null, !3336, !156, !156}
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 32)
!3337 = !{!3338, !3339, !3340, !3341, !3344, !3345, !3346, !3353, !3354}
!3338 = !DILocalVariable(name: "led", arg: 1, scope: !3333, file: !218, line: 54, type: !3336)
!3339 = !DILocalVariable(name: "sleep_ms", arg: 2, scope: !3333, file: !218, line: 54, type: !156)
!3340 = !DILocalVariable(name: "id", arg: 3, scope: !3333, file: !218, line: 54, type: !156)
!3341 = !DILocalVariable(name: "spec", scope: !3333, file: !218, line: 56, type: !3342)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 32)
!3343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !401)
!3344 = !DILocalVariable(name: "cnt", scope: !3333, file: !218, line: 57, type: !118)
!3345 = !DILocalVariable(name: "ret", scope: !3333, file: !218, line: 58, type: !118)
!3346 = !DILocalVariable(name: "tx_data", scope: !3347, file: !218, line: 75, type: !3348)
!3347 = distinct !DILexicalBlock(scope: !3333, file: !218, line: 72, column: 12)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "printk_data_t", file: !218, line: 31, size: 96, elements: !3349)
!3349 = !{!3350, !3351, !3352}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_reserved", scope: !3348, file: !218, line: 32, baseType: !117, size: 32)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !3348, file: !218, line: 33, baseType: !156, size: 32, offset: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3348, file: !218, line: 34, baseType: !156, size: 32, offset: 64)
!3353 = !DILocalVariable(name: "size", scope: !3347, file: !218, line: 77, type: !315)
!3354 = !DILocalVariable(name: "mem_ptr", scope: !3347, file: !218, line: 78, type: !1242)
!3355 = !DILocation(line: 0, scope: !3333)
!3356 = !DILocation(line: 60, column: 29, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3333, file: !218, line: 60, column: 6)
!3358 = !DILocation(line: 60, column: 7, scope: !3357)
!3359 = !DILocation(line: 60, column: 6, scope: !3333)
!3360 = !DILocation(line: 61, column: 51, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3357, file: !218, line: 60, column: 36)
!3362 = !DILocation(line: 61, column: 57, scope: !3361)
!3363 = !DILocation(line: 61, column: 3, scope: !3361)
!3364 = !DILocation(line: 62, column: 3, scope: !3361)
!3365 = !DILocation(line: 56, column: 42, scope: !3333)
!3366 = !DILocation(line: 65, column: 8, scope: !3333)
!3367 = !DILocation(line: 66, column: 10, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3333, file: !218, line: 66, column: 6)
!3369 = !DILocation(line: 66, column: 6, scope: !3333)
!3370 = !DILocation(line: 73, column: 22, scope: !3347)
!3371 = !DILocation(line: 73, column: 34, scope: !3347)
!3372 = !DILocation(line: 73, column: 3, scope: !3347)
!3373 = !DILocation(line: 75, column: 3, scope: !3347)
!3374 = !DILocation(line: 75, column: 24, scope: !3347)
!3375 = !DILocation(line: 75, column: 34, scope: !3347)
!3376 = !DILocation(line: 0, scope: !3347)
!3377 = !DILocation(line: 78, column: 19, scope: !3347)
!3378 = !DILocation(line: 79, column: 3, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3380, file: !218, line: 79, column: 3)
!3380 = distinct !DILexicalBlock(scope: !3347, file: !218, line: 79, column: 3)
!3381 = !DILocation(line: 79, column: 3, scope: !3380)
!3382 = !DILocation(line: 68, column: 15, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3368, file: !218, line: 66, column: 16)
!3384 = !DILocation(line: 68, column: 9, scope: !3383)
!3385 = !DILocation(line: 68, column: 25, scope: !3383)
!3386 = !DILocation(line: 68, column: 20, scope: !3383)
!3387 = !DILocation(line: 67, column: 3, scope: !3383)
!3388 = !DILocation(line: 69, column: 3, scope: !3383)
!3389 = !DILocation(line: 79, column: 3, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3379, file: !218, line: 79, column: 3)
!3391 = !DILocation(line: 81, column: 3, scope: !3347)
!3392 = !DILocation(line: 83, column: 3, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3347, file: !218, line: 83, column: 3)
!3394 = !DILocation(line: 85, column: 3, scope: !3347)
!3395 = !DILocation(line: 86, column: 6, scope: !3347)
!3396 = !DILocation(line: 87, column: 2, scope: !3333)
!3397 = !DILocation(line: 73, column: 43, scope: !3347)
!3398 = distinct !{!3398, !3399, !3396}
!3399 = !DILocation(line: 72, column: 2, scope: !3333)
!3400 = !DILocation(line: 88, column: 1, scope: !3333)
!3401 = distinct !DISubprogram(name: "device_is_ready", scope: !3402, file: !3402, line: 47, type: !3403, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3405)
!3402 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!146, !127}
!3405 = !{!3406}
!3406 = !DILocalVariable(name: "dev", arg: 1, scope: !3401, file: !3402, line: 47, type: !127)
!3407 = !DILocation(line: 0, scope: !3401)
!3408 = !DILocation(line: 55, column: 2, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3401, file: !3402, line: 55, column: 2)
!3410 = !{i64 2154347226}
!3411 = !DILocation(line: 56, column: 9, scope: !3401)
!3412 = !DILocation(line: 56, column: 2, scope: !3401)
!3413 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !102, file: !102, line: 731, type: !3414, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3416)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!118, !3342, !155}
!3416 = !{!3417, !3418}
!3417 = !DILocalVariable(name: "spec", arg: 1, scope: !3413, file: !102, line: 731, type: !3342)
!3418 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !3413, file: !102, line: 732, type: !155)
!3419 = !DILocation(line: 0, scope: !3413)
!3420 = !DILocation(line: 734, column: 34, scope: !3413)
!3421 = !DILocation(line: 735, column: 13, scope: !3413)
!3422 = !DILocation(line: 736, column: 13, scope: !3413)
!3423 = !DILocation(line: 736, column: 7, scope: !3413)
!3424 = !DILocation(line: 736, column: 22, scope: !3413)
!3425 = !DILocation(line: 734, column: 9, scope: !3413)
!3426 = !DILocation(line: 734, column: 2, scope: !3413)
!3427 = distinct !DISubprogram(name: "gpio_pin_set", scope: !102, file: !102, line: 1287, type: !3428, scopeLine: 1289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3430)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{!118, !127, !154, !118}
!3430 = !{!3431, !3432, !3433, !3434, !3436}
!3431 = !DILocalVariable(name: "port", arg: 1, scope: !3427, file: !102, line: 1287, type: !127)
!3432 = !DILocalVariable(name: "pin", arg: 2, scope: !3427, file: !102, line: 1287, type: !154)
!3433 = !DILocalVariable(name: "value", arg: 3, scope: !3427, file: !102, line: 1288, type: !118)
!3434 = !DILocalVariable(name: "cfg", scope: !3427, file: !102, line: 1290, type: !3435)
!3435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!3436 = !DILocalVariable(name: "data", scope: !3427, file: !102, line: 1292, type: !3437)
!3437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!3438 = !DILocation(line: 0, scope: !3427)
!3439 = !DILocation(line: 1291, column: 44, scope: !3427)
!3440 = !DILocation(line: 1295, column: 2, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !102, line: 1295, column: 2)
!3442 = distinct !DILexicalBlock(scope: !3427, file: !102, line: 1295, column: 2)
!3443 = !DILocation(line: 1295, column: 2, scope: !3442)
!3444 = !DILocation(line: 1295, column: 2, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3441, file: !102, line: 1295, column: 2)
!3446 = !DILocation(line: 1293, column: 43, scope: !3427)
!3447 = !DILocation(line: 1298, column: 12, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3427, file: !102, line: 1298, column: 6)
!3449 = !DILocation(line: 1298, column: 19, scope: !3448)
!3450 = !DILocation(line: 1298, column: 6, scope: !3427)
!3451 = !DILocation(line: 1302, column: 9, scope: !3427)
!3452 = !DILocation(line: 1302, column: 2, scope: !3427)
!3453 = distinct !DISubprogram(name: "k_msleep", scope: !220, file: !220, line: 439, type: !3454, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3456)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!362, !362}
!3456 = !{!3457}
!3457 = !DILocalVariable(name: "ms", arg: 1, scope: !3453, file: !220, line: 439, type: !362)
!3458 = !DILocation(line: 0, scope: !3453)
!3459 = !DILocation(line: 441, column: 17, scope: !3453)
!3460 = !DILocation(line: 441, column: 9, scope: !3453)
!3461 = !DILocation(line: 441, column: 2, scope: !3453)
!3462 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3463, file: !3463, line: 403, type: !3464, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3466)
!3463 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3464 = !DISubroutineType(types: !3465)
!3465 = !{!213, !213}
!3466 = !{!3467}
!3467 = !DILocalVariable(name: "t", arg: 1, scope: !3462, file: !3463, line: 403, type: !213)
!3468 = !DILocation(line: 0, scope: !3462)
!3469 = !DILocalVariable(name: "t", arg: 1, scope: !3470, file: !3463, line: 102, type: !213)
!3470 = distinct !DISubprogram(name: "z_tmcvt", scope: !3463, file: !3463, line: 102, type: !3471, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3473)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{!213, !213, !156, !156, !146, !146, !146, !146}
!3473 = !{!3469, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483}
!3474 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3470, file: !3463, line: 102, type: !156)
!3475 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3470, file: !3463, line: 103, type: !156)
!3476 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3470, file: !3463, line: 103, type: !146)
!3477 = !DILocalVariable(name: "result32", arg: 5, scope: !3470, file: !3463, line: 104, type: !146)
!3478 = !DILocalVariable(name: "round_up", arg: 6, scope: !3470, file: !3463, line: 104, type: !146)
!3479 = !DILocalVariable(name: "round_off", arg: 7, scope: !3470, file: !3463, line: 105, type: !146)
!3480 = !DILocalVariable(name: "mul_ratio", scope: !3470, file: !3463, line: 107, type: !146)
!3481 = !DILocalVariable(name: "div_ratio", scope: !3470, file: !3463, line: 109, type: !146)
!3482 = !DILocalVariable(name: "off", scope: !3470, file: !3463, line: 116, type: !213)
!3483 = !DILocalVariable(name: "rdivisor", scope: !3484, file: !3463, line: 119, type: !156)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !3463, line: 118, column: 18)
!3485 = distinct !DILexicalBlock(scope: !3470, file: !3463, line: 118, column: 6)
!3486 = !DILocation(line: 0, scope: !3470, inlinedAt: !3487)
!3487 = distinct !DILocation(line: 406, column: 9, scope: !3462)
!3488 = !DILocation(line: 145, column: 13, scope: !3489, inlinedAt: !3487)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !3463, line: 144, column: 10)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !3463, line: 142, column: 7)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !3463, line: 141, column: 24)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !3463, line: 141, column: 13)
!3493 = distinct !DILexicalBlock(scope: !3470, file: !3463, line: 134, column: 6)
!3494 = !DILocation(line: 406, column: 2, scope: !3462)
!3495 = distinct !DISubprogram(name: "k_sleep", scope: !3496, file: !3496, line: 91, type: !3497, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3503)
!3496 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3497 = !DISubroutineType(types: !3498)
!3498 = !{!362, !3499}
!3499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !3500)
!3500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !3501)
!3501 = !{!3502}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3500, file: !114, line: 66, baseType: !113, size: 64)
!3503 = !{!3504}
!3504 = !DILocalVariable(name: "timeout", arg: 1, scope: !3495, file: !3496, line: 91, type: !3499)
!3505 = !DILocation(line: 0, scope: !3495)
!3506 = !DILocation(line: 99, column: 2, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3495, file: !3496, line: 99, column: 2)
!3508 = !{i64 2154154628}
!3509 = !DILocation(line: 100, column: 9, scope: !3495)
!3510 = !DILocation(line: 100, column: 2, scope: !3495)
!3511 = distinct !DISubprogram(name: "gpio_pin_set_raw", scope: !102, file: !102, line: 1247, type: !3428, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3512)
!3512 = !{!3513, !3514, !3515, !3516, !3517}
!3513 = !DILocalVariable(name: "port", arg: 1, scope: !3511, file: !102, line: 1247, type: !127)
!3514 = !DILocalVariable(name: "pin", arg: 2, scope: !3511, file: !102, line: 1247, type: !154)
!3515 = !DILocalVariable(name: "value", arg: 3, scope: !3511, file: !102, line: 1248, type: !118)
!3516 = !DILocalVariable(name: "cfg", scope: !3511, file: !102, line: 1250, type: !3435)
!3517 = !DILocalVariable(name: "ret", scope: !3511, file: !102, line: 1252, type: !118)
!3518 = !DILocation(line: 0, scope: !3511)
!3519 = !DILocation(line: 1251, column: 44, scope: !3511)
!3520 = !DILocation(line: 1254, column: 2, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !102, line: 1254, column: 2)
!3522 = distinct !DILexicalBlock(scope: !3511, file: !102, line: 1254, column: 2)
!3523 = !DILocation(line: 1254, column: 2, scope: !3522)
!3524 = !DILocation(line: 1254, column: 2, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3521, file: !102, line: 1254, column: 2)
!3526 = !DILocation(line: 1257, column: 12, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3511, file: !102, line: 1257, column: 6)
!3528 = !DILocation(line: 1257, column: 6, scope: !3511)
!3529 = !DILocation(line: 1258, column: 9, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3527, file: !102, line: 1257, column: 18)
!3531 = !DILocation(line: 1259, column: 2, scope: !3530)
!3532 = !DILocation(line: 1260, column: 9, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3527, file: !102, line: 1259, column: 9)
!3534 = !DILocation(line: 1263, column: 2, scope: !3511)
!3535 = distinct !DISubprogram(name: "gpio_port_set_bits_raw", scope: !3536, file: !3536, line: 174, type: !170, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3537)
!3536 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!3537 = !{!3538, !3539}
!3538 = !DILocalVariable(name: "port", arg: 1, scope: !3535, file: !3536, line: 174, type: !127)
!3539 = !DILocalVariable(name: "pins", arg: 2, scope: !3535, file: !3536, line: 174, type: !167)
!3540 = !DILocation(line: 0, scope: !3535)
!3541 = !DILocation(line: 183, column: 2, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3535, file: !3536, line: 183, column: 2)
!3543 = !{i64 2154458335}
!3544 = !DILocation(line: 184, column: 9, scope: !3535)
!3545 = !DILocation(line: 184, column: 2, scope: !3535)
!3546 = distinct !DISubprogram(name: "gpio_port_clear_bits_raw", scope: !3536, file: !3536, line: 198, type: !170, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3547)
!3547 = !{!3548, !3549}
!3548 = !DILocalVariable(name: "port", arg: 1, scope: !3546, file: !3536, line: 198, type: !127)
!3549 = !DILocalVariable(name: "pins", arg: 2, scope: !3546, file: !3536, line: 198, type: !167)
!3550 = !DILocation(line: 0, scope: !3546)
!3551 = !DILocation(line: 207, column: 2, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3546, file: !3536, line: 207, column: 2)
!3553 = !{i64 2154458403}
!3554 = !DILocation(line: 208, column: 9, scope: !3546)
!3555 = !DILocation(line: 208, column: 2, scope: !3546)
!3556 = distinct !DISubprogram(name: "z_impl_gpio_port_clear_bits_raw", scope: !102, file: !102, line: 1060, type: !170, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3557)
!3557 = !{!3558, !3559, !3560}
!3558 = !DILocalVariable(name: "port", arg: 1, scope: !3556, file: !102, line: 1060, type: !127)
!3559 = !DILocalVariable(name: "pins", arg: 2, scope: !3556, file: !102, line: 1061, type: !167)
!3560 = !DILocalVariable(name: "api", scope: !3556, file: !102, line: 1063, type: !119)
!3561 = !DILocation(line: 0, scope: !3556)
!3562 = !DILocation(line: 1064, column: 41, scope: !3556)
!3563 = !DILocation(line: 1066, column: 14, scope: !3556)
!3564 = !DILocation(line: 1066, column: 9, scope: !3556)
!3565 = !DILocation(line: 1066, column: 2, scope: !3556)
!3566 = distinct !DISubprogram(name: "z_impl_gpio_port_set_bits_raw", scope: !102, file: !102, line: 1022, type: !170, scopeLine: 1024, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3567)
!3567 = !{!3568, !3569, !3570}
!3568 = !DILocalVariable(name: "port", arg: 1, scope: !3566, file: !102, line: 1022, type: !127)
!3569 = !DILocalVariable(name: "pins", arg: 2, scope: !3566, file: !102, line: 1023, type: !167)
!3570 = !DILocalVariable(name: "api", scope: !3566, file: !102, line: 1025, type: !119)
!3571 = !DILocation(line: 0, scope: !3566)
!3572 = !DILocation(line: 1026, column: 41, scope: !3566)
!3573 = !DILocation(line: 1028, column: 14, scope: !3566)
!3574 = !DILocation(line: 1028, column: 9, scope: !3566)
!3575 = !DILocation(line: 1028, column: 2, scope: !3566)
!3576 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !3536, file: !3536, line: 49, type: !125, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3577)
!3577 = !{!3578, !3579, !3580}
!3578 = !DILocalVariable(name: "port", arg: 1, scope: !3576, file: !3536, line: 49, type: !127)
!3579 = !DILocalVariable(name: "pin", arg: 2, scope: !3576, file: !3536, line: 49, type: !154)
!3580 = !DILocalVariable(name: "flags", arg: 3, scope: !3576, file: !3536, line: 49, type: !155)
!3581 = !DILocation(line: 0, scope: !3576)
!3582 = !DILocation(line: 59, column: 2, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3576, file: !3536, line: 59, column: 2)
!3584 = !{i64 2154457995}
!3585 = !DILocation(line: 60, column: 9, scope: !3576)
!3586 = !DILocation(line: 60, column: 2, scope: !3576)
!3587 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !102, file: !102, line: 667, type: !125, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3588)
!3588 = !{!3589, !3590, !3591, !3592, !3593, !3594}
!3589 = !DILocalVariable(name: "port", arg: 1, scope: !3587, file: !102, line: 667, type: !127)
!3590 = !DILocalVariable(name: "pin", arg: 2, scope: !3587, file: !102, line: 668, type: !154)
!3591 = !DILocalVariable(name: "flags", arg: 3, scope: !3587, file: !102, line: 669, type: !155)
!3592 = !DILocalVariable(name: "api", scope: !3587, file: !102, line: 671, type: !119)
!3593 = !DILocalVariable(name: "cfg", scope: !3587, file: !102, line: 673, type: !3435)
!3594 = !DILocalVariable(name: "data", scope: !3587, file: !102, line: 675, type: !212)
!3595 = !DILocation(line: 0, scope: !3587)
!3596 = !DILocation(line: 672, column: 41, scope: !3587)
!3597 = !DILocation(line: 674, column: 44, scope: !3587)
!3598 = !DILocation(line: 676, column: 36, scope: !3587)
!3599 = !DILocation(line: 678, column: 2, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !102, line: 678, column: 2)
!3601 = distinct !DILexicalBlock(scope: !3587, file: !102, line: 678, column: 2)
!3602 = !DILocation(line: 678, column: 2, scope: !3601)
!3603 = !DILocation(line: 678, column: 2, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3600, file: !102, line: 678, column: 2)
!3605 = !DILocation(line: 681, column: 2, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !102, line: 681, column: 2)
!3607 = distinct !DILexicalBlock(scope: !3587, file: !102, line: 681, column: 2)
!3608 = !DILocation(line: 681, column: 2, scope: !3607)
!3609 = !DILocation(line: 681, column: 2, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3606, file: !102, line: 681, column: 2)
!3611 = !DILocation(line: 685, column: 2, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !102, line: 685, column: 2)
!3613 = distinct !DILexicalBlock(scope: !3587, file: !102, line: 685, column: 2)
!3614 = !DILocation(line: 685, column: 2, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3612, file: !102, line: 685, column: 2)
!3616 = !DILocation(line: 689, column: 2, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !102, line: 689, column: 2)
!3618 = distinct !DILexicalBlock(scope: !3587, file: !102, line: 689, column: 2)
!3619 = !DILocation(line: 689, column: 2, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3617, file: !102, line: 689, column: 2)
!3621 = !DILocation(line: 692, column: 2, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !102, line: 692, column: 2)
!3623 = distinct !DILexicalBlock(scope: !3587, file: !102, line: 692, column: 2)
!3624 = !DILocation(line: 692, column: 2, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3622, file: !102, line: 692, column: 2)
!3626 = !DILocation(line: 696, column: 2, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !102, line: 696, column: 2)
!3628 = distinct !DILexicalBlock(scope: !3587, file: !102, line: 696, column: 2)
!3629 = !DILocation(line: 696, column: 2, scope: !3628)
!3630 = !DILocation(line: 696, column: 2, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3627, file: !102, line: 696, column: 2)
!3632 = !DILocation(line: 701, column: 6, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3587, file: !102, line: 700, column: 6)
!3634 = !DILocation(line: 708, column: 2, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !102, line: 708, column: 2)
!3636 = distinct !DILexicalBlock(scope: !3587, file: !102, line: 708, column: 2)
!3637 = !DILocation(line: 708, column: 2, scope: !3636)
!3638 = !DILocation(line: 708, column: 2, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3635, file: !102, line: 708, column: 2)
!3640 = !DILocation(line: 711, column: 13, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3587, file: !102, line: 711, column: 6)
!3642 = !DILocation(line: 711, column: 32, scope: !3641)
!3643 = !DILocation(line: 711, column: 6, scope: !3587)
!3644 = !DILocation(line: 712, column: 9, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3641, file: !102, line: 711, column: 38)
!3646 = !DILocation(line: 712, column: 16, scope: !3645)
!3647 = !DILocation(line: 713, column: 2, scope: !3645)
!3648 = !DILocation(line: 714, column: 19, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3641, file: !102, line: 713, column: 9)
!3650 = !DILocation(line: 714, column: 9, scope: !3649)
!3651 = !DILocation(line: 714, column: 16, scope: !3649)
!3652 = !DILocation(line: 706, column: 8, scope: !3587)
!3653 = !DILocation(line: 717, column: 14, scope: !3587)
!3654 = !DILocation(line: 717, column: 9, scope: !3587)
!3655 = !DILocation(line: 717, column: 2, scope: !3587)
!3656 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !3403, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3657)
!3657 = !{!3658}
!3658 = !DILocalVariable(name: "dev", arg: 1, scope: !3656, file: !130, line: 730, type: !127)
!3659 = !DILocation(line: 0, scope: !3656)
!3660 = !DILocation(line: 732, column: 9, scope: !3656)
!3661 = !DILocation(line: 732, column: 2, scope: !3656)
!3662 = distinct !DISubprogram(name: "blink1", scope: !218, file: !218, line: 95, type: !365, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2149)
!3663 = !DILocation(line: 97, column: 2, scope: !3662)
!3664 = !DILocation(line: 98, column: 1, scope: !3662)
!3665 = distinct !DISubprogram(name: "uart_out", scope: !218, file: !218, line: 100, type: !365, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3666)
!3666 = !{!3667, !3670}
!3667 = !DILocalVariable(name: "rx_data", scope: !3668, file: !218, line: 103, type: !3669)
!3668 = distinct !DILexicalBlock(scope: !3665, file: !218, line: 102, column: 12)
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 32)
!3670 = !DILocalVariable(name: "ret", scope: !3671, file: !218, line: 103, type: !117)
!3671 = distinct !DILexicalBlock(scope: !3668, file: !218, line: 103, column: 35)
!3672 = !DILocation(line: 102, column: 2, scope: !3665)
!3673 = !DILocation(line: 103, column: 35, scope: !3671)
!3674 = !DILocation(line: 0, scope: !3671)
!3675 = !DILocation(line: 0, scope: !3668)
!3676 = !DILocation(line: 106, column: 19, scope: !3668)
!3677 = !DILocation(line: 106, column: 33, scope: !3668)
!3678 = !DILocation(line: 105, column: 3, scope: !3668)
!3679 = !DILocation(line: 107, column: 3, scope: !3668)
!3680 = distinct !{!3680, !3672, !3681}
!3681 = !DILocation(line: 108, column: 2, scope: !3665)
!3682 = distinct !DISubprogram(name: "k_queue_get", scope: !3496, file: !3496, line: 649, type: !3683, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3686)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{!117, !3685, !3499}
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 32)
!3686 = !{!3687, !3688}
!3687 = !DILocalVariable(name: "queue", arg: 1, scope: !3682, file: !3496, line: 649, type: !3685)
!3688 = !DILocalVariable(name: "timeout", arg: 2, scope: !3682, file: !3496, line: 649, type: !3499)
!3689 = !DILocation(line: 0, scope: !3682)
!3690 = !DILocation(line: 658, column: 2, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3682, file: !3496, line: 658, column: 2)
!3692 = !{i64 2154156872}
!3693 = !DILocation(line: 659, column: 9, scope: !3682)
!3694 = !DILocation(line: 659, column: 2, scope: !3682)
!3695 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !437, file: !437, line: 45, type: !439, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3696)
!3696 = !{!3697}
!3697 = !DILocalVariable(name: "c", arg: 1, scope: !3695, file: !437, line: 45, type: !118)
!3698 = !DILocation(line: 0, scope: !3695)
!3699 = !DILocation(line: 50, column: 2, scope: !3695)
!3700 = distinct !DISubprogram(name: "__printk_hook_install", scope: !437, file: !437, line: 63, type: !3701, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3703)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{null, !438}
!3703 = !{!3704}
!3704 = !DILocalVariable(name: "fn", arg: 1, scope: !3700, file: !437, line: 63, type: !438)
!3705 = !DILocation(line: 0, scope: !3700)
!3706 = !DILocation(line: 65, column: 12, scope: !3700)
!3707 = !DILocation(line: 66, column: 1, scope: !3700)
!3708 = distinct !DISubprogram(name: "__printk_get_hook", scope: !437, file: !437, line: 76, type: !3709, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !2149)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{!117}
!3711 = !DILocation(line: 78, column: 9, scope: !3708)
!3712 = !DILocation(line: 78, column: 2, scope: !3708)
!3713 = distinct !DISubprogram(name: "vprintk", scope: !437, file: !437, line: 113, type: !3714, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3723)
!3714 = !DISubroutineType(types: !3715)
!3715 = !{null, !133, !3716}
!3716 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3717, line: 99, baseType: !3718)
!3717 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3718 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3717, line: 40, baseType: !3719)
!3719 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !437, baseType: !3720)
!3720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3721)
!3721 = !{!3722}
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3720, file: !437, line: 79, baseType: !117, size: 32)
!3723 = !{!3724, !3725, !3726}
!3724 = !DILocalVariable(name: "fmt", arg: 1, scope: !3713, file: !437, line: 113, type: !133)
!3725 = !DILocalVariable(name: "ap", arg: 2, scope: !3713, file: !437, line: 113, type: !3716)
!3726 = !DILocalVariable(name: "ctx", scope: !3727, file: !437, line: 121, type: !3729)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !437, line: 120, column: 27)
!3728 = distinct !DILexicalBlock(scope: !3713, file: !437, line: 120, column: 6)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !437, line: 81, size: 32, elements: !3730)
!3730 = !{!3731, !3732}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3729, file: !437, line: 85, baseType: !32, size: 32)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3729, file: !437, line: 86, baseType: !3733, offset: 32)
!3733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, elements: !2594)
!3734 = !DILocation(line: 0, scope: !3713)
!3735 = !DILocation(line: 148, column: 3, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3728, file: !437, line: 138, column: 9)
!3737 = !DILocation(line: 155, column: 1, scope: !3713)
!3738 = distinct !DISubprogram(name: "char_out", scope: !437, file: !437, line: 107, type: !3739, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3741)
!3739 = !DISubroutineType(types: !3740)
!3740 = !{!118, !118, !117}
!3741 = !{!3742, !3743}
!3742 = !DILocalVariable(name: "c", arg: 1, scope: !3738, file: !437, line: 107, type: !118)
!3743 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3738, file: !437, line: 107, type: !117)
!3744 = !DILocation(line: 0, scope: !3738)
!3745 = !DILocation(line: 110, column: 9, scope: !3738)
!3746 = !DILocation(line: 110, column: 2, scope: !3738)
!3747 = distinct !DISubprogram(name: "cbvprintf", scope: !3748, file: !3748, line: 739, type: !3749, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3755)
!3748 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3749 = !DISubroutineType(types: !3750)
!3750 = !{!118, !3751, !117, !133, !3716}
!3751 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3748, line: 297, baseType: !3752)
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 32)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!118, null}
!3755 = !{!3756, !3757, !3758, !3759}
!3756 = !DILocalVariable(name: "out", arg: 1, scope: !3747, file: !3748, line: 739, type: !3751)
!3757 = !DILocalVariable(name: "ctx", arg: 2, scope: !3747, file: !3748, line: 739, type: !117)
!3758 = !DILocalVariable(name: "format", arg: 3, scope: !3747, file: !3748, line: 739, type: !133)
!3759 = !DILocalVariable(name: "ap", arg: 4, scope: !3747, file: !3748, line: 739, type: !3716)
!3760 = !DILocation(line: 0, scope: !3747)
!3761 = !DILocation(line: 741, column: 9, scope: !3747)
!3762 = !DILocation(line: 741, column: 2, scope: !3747)
!3763 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !437, file: !437, line: 157, type: !3764, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3766)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{null, !1242, !315}
!3766 = !{!3767, !3768, !3769}
!3767 = !DILocalVariable(name: "c", arg: 1, scope: !3763, file: !437, line: 157, type: !1242)
!3768 = !DILocalVariable(name: "n", arg: 2, scope: !3763, file: !437, line: 157, type: !315)
!3769 = !DILocalVariable(name: "i", scope: !3763, file: !437, line: 159, type: !315)
!3770 = !DILocation(line: 0, scope: !3763)
!3771 = !DILocation(line: 164, column: 16, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !437, line: 164, column: 2)
!3773 = distinct !DILexicalBlock(scope: !3763, file: !437, line: 164, column: 2)
!3774 = !DILocation(line: 164, column: 2, scope: !3773)
!3775 = !DILocation(line: 165, column: 3, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3772, file: !437, line: 164, column: 26)
!3777 = !DILocation(line: 165, column: 13, scope: !3776)
!3778 = !DILocation(line: 164, column: 22, scope: !3772)
!3779 = distinct !{!3779, !3774, !3780}
!3780 = !DILocation(line: 166, column: 2, scope: !3773)
!3781 = !DILocation(line: 171, column: 1, scope: !3763)
!3782 = distinct !DISubprogram(name: "printk", scope: !437, file: !437, line: 203, type: !3783, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3785)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{null, !133, null}
!3785 = !{!3786, !3787}
!3786 = !DILocalVariable(name: "fmt", arg: 1, scope: !3782, file: !437, line: 203, type: !133)
!3787 = !DILocalVariable(name: "ap", scope: !3782, file: !437, line: 205, type: !3716)
!3788 = !DILocation(line: 0, scope: !3782)
!3789 = !DILocation(line: 205, column: 2, scope: !3782)
!3790 = !DILocation(line: 205, column: 10, scope: !3782)
!3791 = !DILocation(line: 207, column: 2, scope: !3782)
!3792 = !DILocation(line: 209, column: 2, scope: !3782)
!3793 = !DILocation(line: 211, column: 2, scope: !3782)
!3794 = !DILocation(line: 212, column: 1, scope: !3782)
!3795 = distinct !DISubprogram(name: "snprintk", scope: !437, file: !437, line: 239, type: !3796, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3798)
!3796 = !DISubroutineType(types: !3797)
!3797 = !{!118, !1242, !315, !133, null}
!3798 = !{!3799, !3800, !3801, !3802, !3803}
!3799 = !DILocalVariable(name: "str", arg: 1, scope: !3795, file: !437, line: 239, type: !1242)
!3800 = !DILocalVariable(name: "size", arg: 2, scope: !3795, file: !437, line: 239, type: !315)
!3801 = !DILocalVariable(name: "fmt", arg: 3, scope: !3795, file: !437, line: 239, type: !133)
!3802 = !DILocalVariable(name: "ap", scope: !3795, file: !437, line: 241, type: !3716)
!3803 = !DILocalVariable(name: "ret", scope: !3795, file: !437, line: 242, type: !118)
!3804 = !DILocation(line: 0, scope: !3795)
!3805 = !DILocation(line: 241, column: 2, scope: !3795)
!3806 = !DILocation(line: 241, column: 10, scope: !3795)
!3807 = !DILocation(line: 244, column: 2, scope: !3795)
!3808 = !DILocation(line: 245, column: 8, scope: !3795)
!3809 = !DILocation(line: 246, column: 2, scope: !3795)
!3810 = !DILocation(line: 249, column: 1, scope: !3795)
!3811 = !DILocation(line: 248, column: 2, scope: !3795)
!3812 = distinct !DISubprogram(name: "vsnprintk", scope: !437, file: !437, line: 251, type: !3813, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3815)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!118, !1242, !315, !133, !3716}
!3815 = !{!3816, !3817, !3818, !3819, !3820}
!3816 = !DILocalVariable(name: "str", arg: 1, scope: !3812, file: !437, line: 251, type: !1242)
!3817 = !DILocalVariable(name: "size", arg: 2, scope: !3812, file: !437, line: 251, type: !315)
!3818 = !DILocalVariable(name: "fmt", arg: 3, scope: !3812, file: !437, line: 251, type: !133)
!3819 = !DILocalVariable(name: "ap", arg: 4, scope: !3812, file: !437, line: 251, type: !3716)
!3820 = !DILocalVariable(name: "ctx", scope: !3812, file: !437, line: 253, type: !3821)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !437, line: 217, size: 96, elements: !3822)
!3822 = !{!3823, !3824, !3825}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3821, file: !437, line: 218, baseType: !1242, size: 32)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3821, file: !437, line: 219, baseType: !118, size: 32, offset: 32)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3821, file: !437, line: 220, baseType: !118, size: 32, offset: 64)
!3826 = !DILocation(line: 0, scope: !3812)
!3827 = !DILocation(line: 253, column: 2, scope: !3812)
!3828 = !DILocation(line: 253, column: 21, scope: !3812)
!3829 = !DILocation(line: 253, column: 27, scope: !3812)
!3830 = !DILocation(line: 255, column: 2, scope: !3812)
!3831 = !DILocation(line: 257, column: 10, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3812, file: !437, line: 257, column: 6)
!3833 = !DILocation(line: 257, column: 22, scope: !3832)
!3834 = !DILocation(line: 257, column: 16, scope: !3832)
!3835 = !DILocation(line: 257, column: 6, scope: !3812)
!3836 = !DILocation(line: 258, column: 3, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3832, file: !437, line: 257, column: 27)
!3838 = !DILocation(line: 258, column: 18, scope: !3837)
!3839 = !DILocation(line: 259, column: 2, scope: !3837)
!3840 = !DILocation(line: 262, column: 1, scope: !3812)
!3841 = !DILocation(line: 261, column: 2, scope: !3812)
!3842 = distinct !DISubprogram(name: "str_out", scope: !437, file: !437, line: 223, type: !3843, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3846)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!118, !118, !3845}
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3821, size: 32)
!3846 = !{!3847, !3848}
!3847 = !DILocalVariable(name: "c", arg: 1, scope: !3842, file: !437, line: 223, type: !118)
!3848 = !DILocalVariable(name: "ctx", arg: 2, scope: !3842, file: !437, line: 223, type: !3845)
!3849 = !DILocation(line: 0, scope: !3842)
!3850 = !DILocation(line: 225, column: 11, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3842, file: !437, line: 225, column: 6)
!3852 = !DILocation(line: 225, column: 15, scope: !3851)
!3853 = !DILocation(line: 0, scope: !3851)
!3854 = !DILocation(line: 225, column: 23, scope: !3851)
!3855 = !DILocation(line: 225, column: 45, scope: !3851)
!3856 = !DILocation(line: 225, column: 37, scope: !3851)
!3857 = !DILocation(line: 225, column: 6, scope: !3842)
!3858 = !DILocation(line: 226, column: 8, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3851, file: !437, line: 225, column: 50)
!3860 = !DILocation(line: 226, column: 13, scope: !3859)
!3861 = !DILocation(line: 227, column: 3, scope: !3859)
!3862 = !DILocation(line: 230, column: 29, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3842, file: !437, line: 230, column: 6)
!3864 = !DILocation(line: 230, column: 17, scope: !3863)
!3865 = !DILocation(line: 230, column: 6, scope: !3842)
!3866 = !DILocation(line: 231, column: 22, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3863, file: !437, line: 230, column: 34)
!3868 = !DILocation(line: 231, column: 3, scope: !3867)
!3869 = !DILocation(line: 231, column: 26, scope: !3867)
!3870 = !DILocation(line: 232, column: 2, scope: !3867)
!3871 = !DILocation(line: 233, column: 28, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3863, file: !437, line: 232, column: 9)
!3873 = !DILocation(line: 233, column: 22, scope: !3872)
!3874 = !DILocation(line: 233, column: 3, scope: !3872)
!3875 = !DILocation(line: 233, column: 26, scope: !3872)
!3876 = !DILocation(line: 237, column: 1, scope: !3842)
!3877 = distinct !DISubprogram(name: "z_thread_entry", scope: !3878, file: !3878, line: 30, type: !3879, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !3881)
!3878 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3879 = !DISubroutineType(types: !3880)
!3880 = !{null, !352, !117, !117, !117}
!3881 = !{!3882, !3883, !3884, !3885}
!3882 = !DILocalVariable(name: "entry", arg: 1, scope: !3877, file: !3878, line: 30, type: !352)
!3883 = !DILocalVariable(name: "p1", arg: 2, scope: !3877, file: !3878, line: 31, type: !117)
!3884 = !DILocalVariable(name: "p2", arg: 3, scope: !3877, file: !3878, line: 31, type: !117)
!3885 = !DILocalVariable(name: "p3", arg: 4, scope: !3877, file: !3878, line: 31, type: !117)
!3886 = !DILocation(line: 0, scope: !3877)
!3887 = !DILocation(line: 36, column: 2, scope: !3877)
!3888 = !DILocation(line: 38, column: 17, scope: !3877)
!3889 = !DILocation(line: 38, column: 2, scope: !3877)
!3890 = !DILocation(line: 45, column: 2, scope: !3877)
!3891 = distinct !DISubprogram(name: "k_current_get", scope: !220, file: !220, line: 530, type: !3892, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !2149)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{!3894}
!3894 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !3895)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 32)
!3896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !3897)
!3897 = !{!3898, !3956, !3968, !3969, !3970, !3971, !3977, !3992}
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3896, file: !225, line: 247, baseType: !3899, size: 384)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !3900)
!3900 = !{!3901, !3925, !3932, !3933, !3934, !3943, !3944, !3945}
!3901 = !DIDerivedType(tag: DW_TAG_member, scope: !3899, file: !225, line: 60, baseType: !3902, size: 64)
!3902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3899, file: !225, line: 60, size: 64, elements: !3903)
!3903 = !{!3904, !3919}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3902, file: !225, line: 61, baseType: !3905, size: 64)
!3905 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !3906)
!3906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !3907)
!3907 = !{!3908, !3914}
!3908 = !DIDerivedType(tag: DW_TAG_member, scope: !3906, file: !235, line: 38, baseType: !3909, size: 32)
!3909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3906, file: !235, line: 38, size: 32, elements: !3910)
!3910 = !{!3911, !3913}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3909, file: !235, line: 39, baseType: !3912, size: 32)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 32)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3909, file: !235, line: 40, baseType: !3912, size: 32)
!3914 = !DIDerivedType(tag: DW_TAG_member, scope: !3906, file: !235, line: 42, baseType: !3915, size: 32, offset: 32)
!3915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3906, file: !235, line: 42, size: 32, elements: !3916)
!3916 = !{!3917, !3918}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3915, file: !235, line: 43, baseType: !3912, size: 32)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3915, file: !235, line: 44, baseType: !3912, size: 32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3902, file: !225, line: 62, baseType: !3920, size: 64)
!3920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !3921)
!3921 = !{!3922}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3920, file: !251, line: 50, baseType: !3923, size: 64)
!3923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3924, size: 64, elements: !256)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3899, file: !225, line: 68, baseType: !3926, size: 32, offset: 64)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 32)
!3927 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !3928)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !3929)
!3929 = !{!3930}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3928, file: !261, line: 232, baseType: !3931, size: 64)
!3931 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !3906)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3899, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3899, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!3934 = !DIDerivedType(tag: DW_TAG_member, scope: !3899, file: !225, line: 90, baseType: !3935, size: 16, offset: 112)
!3935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3899, file: !225, line: 90, size: 16, elements: !3936)
!3936 = !{!3937, !3942}
!3937 = !DIDerivedType(tag: DW_TAG_member, scope: !3935, file: !225, line: 91, baseType: !3938, size: 16)
!3938 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3935, file: !225, line: 91, size: 16, elements: !3939)
!3939 = !{!3940, !3941}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3938, file: !225, line: 96, baseType: !275, size: 8)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3938, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3935, file: !225, line: 100, baseType: !279, size: 16)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3899, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3899, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3899, file: !225, line: 131, baseType: !3946, size: 192, offset: 192)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !3947)
!3947 = !{!3948, !3949, !3955}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3946, file: !261, line: 245, baseType: !3905, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3946, file: !261, line: 246, baseType: !3950, size: 32, offset: 64)
!3950 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !3951)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 32)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{null, !3954}
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 32)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3946, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3896, file: !225, line: 250, baseType: !3957, size: 288, offset: 384)
!3957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !3958)
!3958 = !{!3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3957, file: !296, line: 26, baseType: !156, size: 32)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3957, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3957, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3957, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3957, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3957, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3957, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3957, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3957, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3896, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3896, file: !225, line: 256, baseType: !3927, size: 64, offset: 704)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3896, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3896, file: !225, line: 300, baseType: !3972, size: 96, offset: 800)
!3972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !3973)
!3973 = !{!3974, !3975, !3976}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3972, file: !225, line: 153, baseType: !22, size: 32)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3972, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3972, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3896, file: !225, line: 325, baseType: !3978, size: 32, offset: 896)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 32)
!3979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !3980)
!3980 = !{!3981, !3987, !3988}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3979, file: !220, line: 5074, baseType: !3982, size: 96)
!3982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !3983)
!3983 = !{!3984, !3985, !3986}
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3982, file: !324, line: 57, baseType: !327, size: 32)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3982, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3982, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3979, file: !220, line: 5075, baseType: !3927, size: 64, offset: 96)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3979, file: !220, line: 5076, baseType: !3989, size: 32, offset: 160)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !3990)
!3990 = !{!3991}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3989, file: !334, line: 52, baseType: !22, size: 32)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3896, file: !225, line: 343, baseType: !3993, size: 64, offset: 928)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !3994)
!3994 = !{!3995, !3996}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3993, file: !296, line: 63, baseType: !156, size: 32)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3993, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!3997 = !DILocation(line: 535, column: 9, scope: !3891)
!3998 = !DILocation(line: 535, column: 2, scope: !3891)
!3999 = distinct !DISubprogram(name: "k_thread_abort", scope: !3496, file: !3496, line: 188, type: !4000, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !4002)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{null, !3894}
!4002 = !{!4003}
!4003 = !DILocalVariable(name: "thread", arg: 1, scope: !3999, file: !3496, line: 188, type: !3894)
!4004 = !DILocation(line: 0, scope: !3999)
!4005 = !DILocation(line: 197, column: 2, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3999, file: !3496, line: 197, column: 2)
!4007 = !{i64 2154153729}
!4008 = !DILocation(line: 198, column: 2, scope: !3999)
!4009 = !DILocation(line: 199, column: 1, scope: !3999)
!4010 = distinct !DISubprogram(name: "z_current_get", scope: !3496, file: !3496, line: 173, type: !3892, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !2149)
!4011 = !DILocation(line: 180, column: 2, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4010, file: !3496, line: 180, column: 2)
!4013 = !{i64 2154153661}
!4014 = !DILocation(line: 181, column: 9, scope: !4010)
!4015 = !DILocation(line: 181, column: 2, scope: !4010)
!4016 = distinct !DISubprogram(name: "sys_heap_free", scope: !4017, file: !4017, line: 163, type: !4018, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4026)
!4017 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4018 = !DISubroutineType(types: !4019)
!4019 = !{null, !4020, !117}
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 32)
!4021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !4022)
!4022 = !{!4023, !4024, !4025}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4021, file: !324, line: 57, baseType: !2581, size: 32)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4021, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4021, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!4026 = !{!4027, !4028, !4029, !4030}
!4027 = !DILocalVariable(name: "heap", arg: 1, scope: !4016, file: !4017, line: 163, type: !4020)
!4028 = !DILocalVariable(name: "mem", arg: 2, scope: !4016, file: !4017, line: 163, type: !117)
!4029 = !DILocalVariable(name: "h", scope: !4016, file: !4017, line: 168, type: !2581)
!4030 = !DILocalVariable(name: "c", scope: !4016, file: !4017, line: 169, type: !2586)
!4031 = !DILocation(line: 0, scope: !4016)
!4032 = !DILocation(line: 165, column: 10, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4016, file: !4017, line: 165, column: 6)
!4034 = !DILocation(line: 165, column: 6, scope: !4016)
!4035 = !DILocation(line: 168, column: 27, scope: !4016)
!4036 = !DILocation(line: 169, column: 16, scope: !4016)
!4037 = !{i32 0, i32 536870912}
!4038 = !DILocation(line: 175, column: 2, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !4017, line: 175, column: 2)
!4040 = distinct !DILexicalBlock(scope: !4016, file: !4017, line: 175, column: 2)
!4041 = !DILocation(line: 175, column: 2, scope: !4040)
!4042 = !DILocation(line: 175, column: 2, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4039, file: !4017, line: 175, column: 2)
!4044 = !DILocation(line: 183, column: 2, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !4017, line: 183, column: 2)
!4046 = distinct !DILexicalBlock(scope: !4016, file: !4017, line: 183, column: 2)
!4047 = !DILocation(line: 183, column: 2, scope: !4046)
!4048 = !DILocation(line: 183, column: 2, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4045, file: !4017, line: 183, column: 2)
!4050 = !DILocation(line: 187, column: 2, scope: !4016)
!4051 = !DILocation(line: 197, column: 2, scope: !4016)
!4052 = !DILocation(line: 198, column: 1, scope: !4016)
!4053 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4017, file: !4017, line: 157, type: !4054, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4056)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!2586, !2581, !117}
!4056 = !{!4057, !4058, !4059, !4060}
!4057 = !DILocalVariable(name: "h", arg: 1, scope: !4053, file: !4017, line: 157, type: !2581)
!4058 = !DILocalVariable(name: "p", arg: 2, scope: !4053, file: !4017, line: 157, type: !117)
!4059 = !DILocalVariable(name: "mem", scope: !4053, file: !4017, line: 159, type: !1981)
!4060 = !DILocalVariable(name: "base", scope: !4053, file: !4017, line: 159, type: !1981)
!4061 = !DILocation(line: 0, scope: !4053)
!4062 = !DILocation(line: 159, column: 39, scope: !4053)
!4063 = !DILocation(line: 160, column: 14, scope: !4053)
!4064 = !DILocation(line: 160, column: 38, scope: !4053)
!4065 = !DILocation(line: 160, column: 46, scope: !4053)
!4066 = !DILocation(line: 160, column: 2, scope: !4053)
!4067 = distinct !DISubprogram(name: "chunk_used", scope: !2568, file: !2568, line: 137, type: !4068, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4070)
!4068 = !DISubroutineType(types: !4069)
!4069 = !{!146, !2581, !2586}
!4070 = !{!4071, !4072}
!4071 = !DILocalVariable(name: "h", arg: 1, scope: !4067, file: !2568, line: 137, type: !2581)
!4072 = !DILocalVariable(name: "c", arg: 2, scope: !4067, file: !2568, line: 137, type: !2586)
!4073 = !DILocation(line: 0, scope: !4067)
!4074 = !DILocation(line: 139, column: 9, scope: !4067)
!4075 = !DILocation(line: 139, column: 42, scope: !4067)
!4076 = !DILocation(line: 139, column: 2, scope: !4067)
!4077 = distinct !DISubprogram(name: "right_chunk", scope: !2568, file: !2568, line: 204, type: !4078, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4080)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!2586, !2581, !2586}
!4080 = !{!4081, !4082}
!4081 = !DILocalVariable(name: "h", arg: 1, scope: !4077, file: !2568, line: 204, type: !2581)
!4082 = !DILocalVariable(name: "c", arg: 2, scope: !4077, file: !2568, line: 204, type: !2586)
!4083 = !DILocation(line: 0, scope: !4077)
!4084 = !DILocation(line: 206, column: 13, scope: !4077)
!4085 = !DILocation(line: 206, column: 11, scope: !4077)
!4086 = !DILocation(line: 206, column: 2, scope: !4077)
!4087 = distinct !DISubprogram(name: "left_chunk", scope: !2568, file: !2568, line: 199, type: !4078, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4088)
!4088 = !{!4089, !4090}
!4089 = !DILocalVariable(name: "h", arg: 1, scope: !4087, file: !2568, line: 199, type: !2581)
!4090 = !DILocalVariable(name: "c", arg: 2, scope: !4087, file: !2568, line: 199, type: !2586)
!4091 = !DILocation(line: 0, scope: !4087)
!4092 = !DILocation(line: 201, column: 13, scope: !4087)
!4093 = !DILocation(line: 201, column: 11, scope: !4087)
!4094 = !DILocation(line: 201, column: 2, scope: !4087)
!4095 = distinct !DISubprogram(name: "set_chunk_used", scope: !2568, file: !2568, line: 147, type: !4096, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4098)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{null, !2581, !2586, !146}
!4098 = !{!4099, !4100, !4101, !4102, !4103}
!4099 = !DILocalVariable(name: "h", arg: 1, scope: !4095, file: !2568, line: 147, type: !2581)
!4100 = !DILocalVariable(name: "c", arg: 2, scope: !4095, file: !2568, line: 147, type: !2586)
!4101 = !DILocalVariable(name: "used", arg: 3, scope: !4095, file: !2568, line: 147, type: !146)
!4102 = !DILocalVariable(name: "buf", scope: !4095, file: !2568, line: 149, type: !2575)
!4103 = !DILocalVariable(name: "cmem", scope: !4095, file: !2568, line: 150, type: !117)
!4104 = !DILocation(line: 0, scope: !4095)
!4105 = !DILocation(line: 149, column: 22, scope: !4095)
!4106 = !DILocation(line: 0, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !2568, line: 159, column: 7)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !2568, line: 158, column: 9)
!4109 = distinct !DILexicalBlock(scope: !4095, file: !2568, line: 152, column: 6)
!4110 = !DILocation(line: 159, column: 7, scope: !4108)
!4111 = !DILocation(line: 165, column: 1, scope: !4095)
!4112 = distinct !DISubprogram(name: "free_chunk", scope: !4017, file: !4017, line: 133, type: !4113, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4115)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{null, !2581, !2586}
!4115 = !{!4116, !4117}
!4116 = !DILocalVariable(name: "h", arg: 1, scope: !4112, file: !4017, line: 133, type: !2581)
!4117 = !DILocalVariable(name: "c", arg: 2, scope: !4112, file: !4017, line: 133, type: !2586)
!4118 = !DILocation(line: 0, scope: !4112)
!4119 = !DILocation(line: 136, column: 21, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4112, file: !4017, line: 136, column: 6)
!4121 = !DILocation(line: 136, column: 7, scope: !4120)
!4122 = !DILocation(line: 136, column: 6, scope: !4112)
!4123 = !DILocation(line: 137, column: 3, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4120, file: !4017, line: 136, column: 41)
!4125 = !DILocation(line: 138, column: 22, scope: !4124)
!4126 = !DILocation(line: 138, column: 3, scope: !4124)
!4127 = !DILocation(line: 139, column: 2, scope: !4124)
!4128 = !DILocation(line: 142, column: 21, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4112, file: !4017, line: 142, column: 6)
!4130 = !DILocation(line: 142, column: 7, scope: !4129)
!4131 = !DILocation(line: 142, column: 6, scope: !4112)
!4132 = !DILocation(line: 143, column: 3, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4129, file: !4017, line: 142, column: 40)
!4134 = !DILocation(line: 144, column: 19, scope: !4133)
!4135 = !DILocation(line: 144, column: 3, scope: !4133)
!4136 = !DILocation(line: 145, column: 7, scope: !4133)
!4137 = !DILocation(line: 146, column: 2, scope: !4133)
!4138 = !DILocation(line: 148, column: 2, scope: !4112)
!4139 = !DILocation(line: 149, column: 1, scope: !4112)
!4140 = distinct !DISubprogram(name: "free_list_remove", scope: !4017, file: !4017, line: 60, type: !4113, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4141)
!4141 = !{!4142, !4143, !4144}
!4142 = !DILocalVariable(name: "h", arg: 1, scope: !4140, file: !4017, line: 60, type: !2581)
!4143 = !DILocalVariable(name: "c", arg: 2, scope: !4140, file: !4017, line: 60, type: !2586)
!4144 = !DILocalVariable(name: "bidx", scope: !4145, file: !4017, line: 63, type: !118)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !4017, line: 62, column: 31)
!4146 = distinct !DILexicalBlock(scope: !4140, file: !4017, line: 62, column: 6)
!4147 = !DILocation(line: 0, scope: !4140)
!4148 = !DILocation(line: 63, column: 28, scope: !4145)
!4149 = !{i32 0, i32 32768}
!4150 = !DILocation(line: 63, column: 14, scope: !4145)
!4151 = !DILocation(line: 0, scope: !4145)
!4152 = !DILocation(line: 64, column: 3, scope: !4145)
!4153 = !DILocation(line: 66, column: 1, scope: !4140)
!4154 = distinct !DISubprogram(name: "merge_chunks", scope: !4017, file: !4017, line: 125, type: !4155, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4157)
!4155 = !DISubroutineType(types: !4156)
!4156 = !{null, !2581, !2586, !2586}
!4157 = !{!4158, !4159, !4160, !4161}
!4158 = !DILocalVariable(name: "h", arg: 1, scope: !4154, file: !4017, line: 125, type: !2581)
!4159 = !DILocalVariable(name: "lc", arg: 2, scope: !4154, file: !4017, line: 125, type: !2586)
!4160 = !DILocalVariable(name: "rc", arg: 3, scope: !4154, file: !4017, line: 125, type: !2586)
!4161 = !DILocalVariable(name: "newsz", scope: !4154, file: !4017, line: 127, type: !4162)
!4162 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2568, line: 62, baseType: !156)
!4163 = !DILocation(line: 0, scope: !4154)
!4164 = !DILocation(line: 127, column: 20, scope: !4154)
!4165 = !DILocation(line: 127, column: 40, scope: !4154)
!4166 = !DILocation(line: 127, column: 38, scope: !4154)
!4167 = !DILocation(line: 129, column: 2, scope: !4154)
!4168 = !DILocation(line: 130, column: 25, scope: !4154)
!4169 = !DILocation(line: 130, column: 2, scope: !4154)
!4170 = !DILocation(line: 131, column: 1, scope: !4154)
!4171 = distinct !DISubprogram(name: "free_list_add", scope: !4017, file: !4017, line: 98, type: !4113, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4172)
!4172 = !{!4173, !4174, !4175}
!4173 = !DILocalVariable(name: "h", arg: 1, scope: !4171, file: !4017, line: 98, type: !2581)
!4174 = !DILocalVariable(name: "c", arg: 2, scope: !4171, file: !4017, line: 98, type: !2586)
!4175 = !DILocalVariable(name: "bidx", scope: !4176, file: !4017, line: 101, type: !118)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !4017, line: 100, column: 31)
!4177 = distinct !DILexicalBlock(scope: !4171, file: !4017, line: 100, column: 6)
!4178 = !DILocation(line: 0, scope: !4171)
!4179 = !DILocation(line: 101, column: 28, scope: !4176)
!4180 = !DILocation(line: 101, column: 14, scope: !4176)
!4181 = !DILocation(line: 0, scope: !4176)
!4182 = !DILocation(line: 102, column: 3, scope: !4176)
!4183 = !DILocation(line: 104, column: 1, scope: !4171)
!4184 = distinct !DISubprogram(name: "chunk_size", scope: !2568, file: !2568, line: 142, type: !4185, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4187)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!4162, !2581, !2586}
!4187 = !{!4188, !4189}
!4188 = !DILocalVariable(name: "h", arg: 1, scope: !4184, file: !2568, line: 142, type: !2581)
!4189 = !DILocalVariable(name: "c", arg: 2, scope: !4184, file: !2568, line: 142, type: !2586)
!4190 = !DILocation(line: 0, scope: !4184)
!4191 = !DILocation(line: 144, column: 9, scope: !4184)
!4192 = !DILocation(line: 144, column: 42, scope: !4184)
!4193 = !DILocation(line: 144, column: 2, scope: !4184)
!4194 = distinct !DISubprogram(name: "bucket_idx", scope: !2568, file: !2568, line: 250, type: !4195, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4197)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!118, !2581, !4162}
!4197 = !{!4198, !4199, !4200}
!4198 = !DILocalVariable(name: "h", arg: 1, scope: !4194, file: !2568, line: 250, type: !2581)
!4199 = !DILocalVariable(name: "sz", arg: 2, scope: !4194, file: !2568, line: 250, type: !4162)
!4200 = !DILocalVariable(name: "usable_sz", scope: !4194, file: !2568, line: 252, type: !32)
!4201 = !DILocation(line: 0, scope: !4194)
!4202 = !DILocation(line: 252, column: 32, scope: !4194)
!4203 = !DILocation(line: 252, column: 30, scope: !4194)
!4204 = !DILocation(line: 252, column: 50, scope: !4194)
!4205 = !DILocation(line: 253, column: 14, scope: !4194)
!4206 = !{i32 0, i32 33}
!4207 = !DILocation(line: 253, column: 12, scope: !4194)
!4208 = !DILocation(line: 253, column: 2, scope: !4194)
!4209 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4017, file: !4017, line: 68, type: !4210, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4212)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{null, !2581, !2586, !118}
!4212 = !{!4213, !4214, !4215, !4216, !4218, !4221}
!4213 = !DILocalVariable(name: "h", arg: 1, scope: !4209, file: !4017, line: 68, type: !2581)
!4214 = !DILocalVariable(name: "c", arg: 2, scope: !4209, file: !4017, line: 68, type: !2586)
!4215 = !DILocalVariable(name: "bidx", arg: 3, scope: !4209, file: !4017, line: 68, type: !118)
!4216 = !DILocalVariable(name: "b", scope: !4209, file: !4017, line: 70, type: !4217)
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!4218 = !DILocalVariable(name: "second", scope: !4219, file: !4017, line: 84, type: !2586)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !4017, line: 80, column: 9)
!4220 = distinct !DILexicalBlock(scope: !4209, file: !4017, line: 72, column: 6)
!4221 = !DILocalVariable(name: "first", scope: !4219, file: !4017, line: 85, type: !2586)
!4222 = !DILocation(line: 0, scope: !4209)
!4223 = !DILocation(line: 72, column: 9, scope: !4220)
!4224 = !DILocation(line: 72, column: 14, scope: !4220)
!4225 = !DILocation(line: 72, column: 6, scope: !4209)
!4226 = !DILocation(line: 76, column: 23, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4220, file: !4017, line: 72, column: 21)
!4228 = !DILocation(line: 76, column: 6, scope: !4227)
!4229 = !DILocation(line: 76, column: 20, scope: !4227)
!4230 = !DILocation(line: 77, column: 11, scope: !4227)
!4231 = !DILocation(line: 78, column: 3, scope: !4227)
!4232 = !DILocation(line: 79, column: 3, scope: !4227)
!4233 = !DILocation(line: 80, column: 2, scope: !4227)
!4234 = !DILocation(line: 0, scope: !4219)
!4235 = !DILocation(line: 85, column: 21, scope: !4219)
!4236 = !{i32 0, i32 65536}
!4237 = !DILocation(line: 87, column: 3, scope: !4219)
!4238 = !DILocation(line: 88, column: 3, scope: !4219)
!4239 = !DILocation(line: 89, column: 3, scope: !4219)
!4240 = !DILocation(line: 90, column: 3, scope: !4219)
!4241 = !DILocation(line: 96, column: 1, scope: !4209)
!4242 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2568, file: !2568, line: 187, type: !4155, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4243)
!4243 = !{!4244, !4245, !4246}
!4244 = !DILocalVariable(name: "h", arg: 1, scope: !4242, file: !2568, line: 187, type: !2581)
!4245 = !DILocalVariable(name: "c", arg: 2, scope: !4242, file: !2568, line: 187, type: !2586)
!4246 = !DILocalVariable(name: "prev", arg: 3, scope: !4242, file: !2568, line: 188, type: !2586)
!4247 = !DILocation(line: 0, scope: !4242)
!4248 = !DILocation(line: 190, column: 2, scope: !4242)
!4249 = !DILocation(line: 191, column: 1, scope: !4242)
!4250 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2568, file: !2568, line: 193, type: !4155, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4251)
!4251 = !{!4252, !4253, !4254}
!4252 = !DILocalVariable(name: "h", arg: 1, scope: !4250, file: !2568, line: 193, type: !2581)
!4253 = !DILocalVariable(name: "c", arg: 2, scope: !4250, file: !2568, line: 193, type: !2586)
!4254 = !DILocalVariable(name: "next", arg: 3, scope: !4250, file: !2568, line: 194, type: !2586)
!4255 = !DILocation(line: 0, scope: !4250)
!4256 = !DILocation(line: 196, column: 2, scope: !4250)
!4257 = !DILocation(line: 197, column: 1, scope: !4250)
!4258 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2568, file: !2568, line: 177, type: !4078, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4259)
!4259 = !{!4260, !4261}
!4260 = !DILocalVariable(name: "h", arg: 1, scope: !4258, file: !2568, line: 177, type: !2581)
!4261 = !DILocalVariable(name: "c", arg: 2, scope: !4258, file: !2568, line: 177, type: !2586)
!4262 = !DILocation(line: 0, scope: !4258)
!4263 = !DILocation(line: 179, column: 9, scope: !4258)
!4264 = !DILocation(line: 179, column: 2, scope: !4258)
!4265 = distinct !DISubprogram(name: "chunk_field", scope: !2568, file: !2568, line: 107, type: !4266, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4268)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{!2586, !2581, !2586, !2567}
!4268 = !{!4269, !4270, !4271, !4272, !4273}
!4269 = !DILocalVariable(name: "h", arg: 1, scope: !4265, file: !2568, line: 107, type: !2581)
!4270 = !DILocalVariable(name: "c", arg: 2, scope: !4265, file: !2568, line: 107, type: !2586)
!4271 = !DILocalVariable(name: "f", arg: 3, scope: !4265, file: !2568, line: 108, type: !2567)
!4272 = !DILocalVariable(name: "buf", scope: !4265, file: !2568, line: 110, type: !2575)
!4273 = !DILocalVariable(name: "cmem", scope: !4265, file: !2568, line: 111, type: !117)
!4274 = !DILocation(line: 0, scope: !4265)
!4275 = !DILocation(line: 110, column: 22, scope: !4265)
!4276 = !DILocation(line: 111, column: 15, scope: !4265)
!4277 = !DILocation(line: 116, column: 11, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !2568, line: 115, column: 9)
!4279 = distinct !DILexicalBlock(scope: !4265, file: !2568, line: 113, column: 6)
!4280 = !DILocation(line: 116, column: 10, scope: !4278)
!4281 = !DILocation(line: 118, column: 1, scope: !4265)
!4282 = distinct !DISubprogram(name: "chunk_buf", scope: !2568, file: !2568, line: 101, type: !4283, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4285)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!2575, !2581}
!4285 = !{!4286}
!4286 = !DILocalVariable(name: "h", arg: 1, scope: !4282, file: !2568, line: 101, type: !2581)
!4287 = !DILocation(line: 0, scope: !4282)
!4288 = !DILocation(line: 104, column: 9, scope: !4282)
!4289 = !DILocation(line: 104, column: 2, scope: !4282)
!4290 = distinct !DISubprogram(name: "chunk_set", scope: !2568, file: !2568, line: 120, type: !4291, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4293)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{null, !2581, !2586, !2567, !2586}
!4293 = !{!4294, !4295, !4296, !4297, !4298, !4299}
!4294 = !DILocalVariable(name: "h", arg: 1, scope: !4290, file: !2568, line: 120, type: !2581)
!4295 = !DILocalVariable(name: "c", arg: 2, scope: !4290, file: !2568, line: 120, type: !2586)
!4296 = !DILocalVariable(name: "f", arg: 3, scope: !4290, file: !2568, line: 121, type: !2567)
!4297 = !DILocalVariable(name: "val", arg: 4, scope: !4290, file: !2568, line: 121, type: !2586)
!4298 = !DILocalVariable(name: "buf", scope: !4290, file: !2568, line: 125, type: !2575)
!4299 = !DILocalVariable(name: "cmem", scope: !4290, file: !2568, line: 126, type: !117)
!4300 = !DILocation(line: 0, scope: !4290)
!4301 = !DILocation(line: 125, column: 22, scope: !4290)
!4302 = !DILocation(line: 126, column: 15, scope: !4290)
!4303 = !DILocation(line: 133, column: 27, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !2568, line: 131, column: 9)
!4305 = distinct !DILexicalBlock(scope: !4290, file: !2568, line: 128, column: 6)
!4306 = !DILocation(line: 133, column: 4, scope: !4304)
!4307 = !DILocation(line: 133, column: 3, scope: !4304)
!4308 = !DILocation(line: 133, column: 25, scope: !4304)
!4309 = !DILocation(line: 135, column: 1, scope: !4290)
!4310 = distinct !DISubprogram(name: "min_chunk_size", scope: !2568, file: !2568, line: 240, type: !4311, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4313)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!4162, !2581}
!4313 = !{!4314}
!4314 = !DILocalVariable(name: "h", arg: 1, scope: !4310, file: !2568, line: 240, type: !2581)
!4315 = !DILocation(line: 0, scope: !4310)
!4316 = !DILocation(line: 242, column: 9, scope: !4310)
!4317 = !DILocation(line: 242, column: 2, scope: !4310)
!4318 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2568, file: !2568, line: 235, type: !4319, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4321)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{!4162, !2581, !315}
!4321 = !{!4322, !4323}
!4322 = !DILocalVariable(name: "h", arg: 1, scope: !4318, file: !2568, line: 235, type: !2581)
!4323 = !DILocalVariable(name: "bytes", arg: 2, scope: !4318, file: !2568, line: 235, type: !315)
!4324 = !DILocation(line: 0, scope: !4318)
!4325 = !DILocation(line: 237, column: 39, scope: !4318)
!4326 = !DILocation(line: 237, column: 9, scope: !4318)
!4327 = !DILocation(line: 237, column: 2, scope: !4318)
!4328 = distinct !DISubprogram(name: "chunksz", scope: !2568, file: !2568, line: 230, type: !4329, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4331)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!4162, !315}
!4331 = !{!4332}
!4332 = !DILocalVariable(name: "bytes", arg: 1, scope: !4328, file: !2568, line: 230, type: !315)
!4333 = !DILocation(line: 0, scope: !4328)
!4334 = !DILocation(line: 232, column: 29, scope: !4328)
!4335 = !DILocation(line: 232, column: 35, scope: !4328)
!4336 = !DILocation(line: 232, column: 2, scope: !4328)
!4337 = distinct !DISubprogram(name: "set_chunk_size", scope: !2568, file: !2568, line: 172, type: !4338, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4340)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{null, !2581, !2586, !4162}
!4340 = !{!4341, !4342, !4343}
!4341 = !DILocalVariable(name: "h", arg: 1, scope: !4337, file: !2568, line: 172, type: !2581)
!4342 = !DILocalVariable(name: "c", arg: 2, scope: !4337, file: !2568, line: 172, type: !2586)
!4343 = !DILocalVariable(name: "size", arg: 3, scope: !4337, file: !2568, line: 172, type: !4162)
!4344 = !DILocation(line: 0, scope: !4337)
!4345 = !DILocation(line: 174, column: 38, scope: !4337)
!4346 = !DILocation(line: 174, column: 2, scope: !4337)
!4347 = !DILocation(line: 175, column: 1, scope: !4337)
!4348 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2568, file: !2568, line: 209, type: !4338, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4349)
!4349 = !{!4350, !4351, !4352}
!4350 = !DILocalVariable(name: "h", arg: 1, scope: !4348, file: !2568, line: 209, type: !2581)
!4351 = !DILocalVariable(name: "c", arg: 2, scope: !4348, file: !2568, line: 209, type: !2586)
!4352 = !DILocalVariable(name: "size", arg: 3, scope: !4348, file: !2568, line: 210, type: !4162)
!4353 = !DILocation(line: 0, scope: !4348)
!4354 = !DILocation(line: 212, column: 2, scope: !4348)
!4355 = !DILocation(line: 213, column: 1, scope: !4348)
!4356 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4017, file: !4017, line: 34, type: !4210, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4357)
!4357 = !{!4358, !4359, !4360, !4361, !4362, !4365}
!4358 = !DILocalVariable(name: "h", arg: 1, scope: !4356, file: !4017, line: 34, type: !2581)
!4359 = !DILocalVariable(name: "c", arg: 2, scope: !4356, file: !4017, line: 34, type: !2586)
!4360 = !DILocalVariable(name: "bidx", arg: 3, scope: !4356, file: !4017, line: 34, type: !118)
!4361 = !DILocalVariable(name: "b", scope: !4356, file: !4017, line: 36, type: !4217)
!4362 = !DILocalVariable(name: "first", scope: !4363, file: !4017, line: 47, type: !2586)
!4363 = distinct !DILexicalBlock(scope: !4364, file: !4017, line: 46, column: 9)
!4364 = distinct !DILexicalBlock(scope: !4356, file: !4017, line: 42, column: 6)
!4365 = !DILocalVariable(name: "second", scope: !4363, file: !4017, line: 48, type: !2586)
!4366 = !DILocation(line: 0, scope: !4356)
!4367 = !DILocation(line: 36, column: 29, scope: !4356)
!4368 = !DILocation(line: 42, column: 6, scope: !4364)
!4369 = !DILocation(line: 42, column: 28, scope: !4364)
!4370 = !DILocation(line: 42, column: 6, scope: !4356)
!4371 = !DILocation(line: 44, column: 24, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4364, file: !4017, line: 42, column: 34)
!4373 = !DILocation(line: 44, column: 23, scope: !4372)
!4374 = !DILocation(line: 44, column: 6, scope: !4372)
!4375 = !DILocation(line: 44, column: 20, scope: !4372)
!4376 = !DILocation(line: 45, column: 6, scope: !4372)
!4377 = !DILocation(line: 45, column: 11, scope: !4372)
!4378 = !DILocation(line: 46, column: 2, scope: !4372)
!4379 = !DILocation(line: 47, column: 21, scope: !4363)
!4380 = !DILocation(line: 0, scope: !4363)
!4381 = !DILocation(line: 50, column: 6, scope: !4363)
!4382 = !DILocation(line: 50, column: 11, scope: !4363)
!4383 = !DILocation(line: 51, column: 3, scope: !4363)
!4384 = !DILocation(line: 52, column: 3, scope: !4363)
!4385 = !DILocation(line: 58, column: 1, scope: !4356)
!4386 = distinct !DISubprogram(name: "next_free_chunk", scope: !2568, file: !2568, line: 182, type: !4078, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4387)
!4387 = !{!4388, !4389}
!4388 = !DILocalVariable(name: "h", arg: 1, scope: !4386, file: !2568, line: 182, type: !2581)
!4389 = !DILocalVariable(name: "c", arg: 2, scope: !4386, file: !2568, line: 182, type: !2586)
!4390 = !DILocation(line: 0, scope: !4386)
!4391 = !DILocation(line: 184, column: 9, scope: !4386)
!4392 = !DILocation(line: 184, column: 2, scope: !4386)
!4393 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4017, file: !4017, line: 200, type: !4394, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4396)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{!315, !4020, !117}
!4396 = !{!4397, !4398, !4399, !4400, !4401, !4402, !4403}
!4397 = !DILocalVariable(name: "heap", arg: 1, scope: !4393, file: !4017, line: 200, type: !4020)
!4398 = !DILocalVariable(name: "mem", arg: 2, scope: !4393, file: !4017, line: 200, type: !117)
!4399 = !DILocalVariable(name: "h", scope: !4393, file: !4017, line: 202, type: !2581)
!4400 = !DILocalVariable(name: "c", scope: !4393, file: !4017, line: 203, type: !2586)
!4401 = !DILocalVariable(name: "addr", scope: !4393, file: !4017, line: 204, type: !315)
!4402 = !DILocalVariable(name: "chunk_base", scope: !4393, file: !4017, line: 205, type: !315)
!4403 = !DILocalVariable(name: "chunk_sz", scope: !4393, file: !4017, line: 206, type: !315)
!4404 = !DILocation(line: 0, scope: !4393)
!4405 = !DILocation(line: 202, column: 27, scope: !4393)
!4406 = !DILocation(line: 203, column: 16, scope: !4393)
!4407 = !DILocation(line: 204, column: 16, scope: !4393)
!4408 = !DILocation(line: 205, column: 31, scope: !4393)
!4409 = !DILocation(line: 205, column: 22, scope: !4393)
!4410 = !DILocation(line: 206, column: 20, scope: !4393)
!4411 = !DILocation(line: 206, column: 37, scope: !4393)
!4412 = !DILocation(line: 208, column: 26, scope: !4393)
!4413 = !DILocation(line: 208, column: 18, scope: !4393)
!4414 = !DILocation(line: 208, column: 2, scope: !4393)
!4415 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4017, file: !4017, line: 263, type: !4416, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!117, !4020, !315}
!4418 = !{!4419, !4420, !4421, !4422, !4423, !4424}
!4419 = !DILocalVariable(name: "heap", arg: 1, scope: !4415, file: !4017, line: 263, type: !4020)
!4420 = !DILocalVariable(name: "bytes", arg: 2, scope: !4415, file: !4017, line: 263, type: !315)
!4421 = !DILocalVariable(name: "h", scope: !4415, file: !4017, line: 265, type: !2581)
!4422 = !DILocalVariable(name: "mem", scope: !4415, file: !4017, line: 266, type: !117)
!4423 = !DILocalVariable(name: "chunk_sz", scope: !4415, file: !4017, line: 272, type: !4162)
!4424 = !DILocalVariable(name: "c", scope: !4415, file: !4017, line: 273, type: !2586)
!4425 = !DILocation(line: 0, scope: !4415)
!4426 = !DILocation(line: 265, column: 27, scope: !4415)
!4427 = !DILocation(line: 268, column: 12, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4415, file: !4017, line: 268, column: 6)
!4429 = !DILocation(line: 268, column: 18, scope: !4428)
!4430 = !DILocation(line: 268, column: 21, scope: !4428)
!4431 = !DILocation(line: 268, column: 6, scope: !4415)
!4432 = !DILocation(line: 272, column: 23, scope: !4415)
!4433 = !DILocation(line: 273, column: 16, scope: !4415)
!4434 = !DILocation(line: 274, column: 8, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4415, file: !4017, line: 274, column: 6)
!4436 = !DILocation(line: 274, column: 6, scope: !4415)
!4437 = !DILocation(line: 279, column: 6, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4415, file: !4017, line: 279, column: 6)
!4439 = !DILocation(line: 279, column: 23, scope: !4438)
!4440 = !DILocation(line: 279, column: 6, scope: !4415)
!4441 = !DILocation(line: 280, column: 24, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4438, file: !4017, line: 279, column: 35)
!4443 = !DILocation(line: 280, column: 3, scope: !4442)
!4444 = !DILocation(line: 281, column: 3, scope: !4442)
!4445 = !DILocation(line: 282, column: 2, scope: !4442)
!4446 = !DILocation(line: 284, column: 2, scope: !4415)
!4447 = !DILocation(line: 286, column: 8, scope: !4415)
!4448 = !DILocation(line: 298, column: 2, scope: !4415)
!4449 = !DILocation(line: 299, column: 1, scope: !4415)
!4450 = distinct !DISubprogram(name: "size_too_big", scope: !2568, file: !2568, line: 256, type: !4451, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4453)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{!146, !2581, !315}
!4453 = !{!4454, !4455}
!4454 = !DILocalVariable(name: "h", arg: 1, scope: !4450, file: !2568, line: 256, type: !2581)
!4455 = !DILocalVariable(name: "bytes", arg: 2, scope: !4450, file: !2568, line: 256, type: !315)
!4456 = !DILocation(line: 0, scope: !4450)
!4457 = !DILocation(line: 262, column: 16, scope: !4450)
!4458 = !DILocation(line: 262, column: 36, scope: !4450)
!4459 = !DILocation(line: 262, column: 30, scope: !4450)
!4460 = !DILocation(line: 262, column: 2, scope: !4450)
!4461 = distinct !DISubprogram(name: "alloc_chunk", scope: !4017, file: !4017, line: 211, type: !4462, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4464)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{!2586, !2581, !4162}
!4464 = !{!4465, !4466, !4467, !4468, !4469, !4472, !4473, !4475, !4476, !4479}
!4465 = !DILocalVariable(name: "h", arg: 1, scope: !4461, file: !4017, line: 211, type: !2581)
!4466 = !DILocalVariable(name: "sz", arg: 2, scope: !4461, file: !4017, line: 211, type: !4162)
!4467 = !DILocalVariable(name: "bi", scope: !4461, file: !4017, line: 213, type: !118)
!4468 = !DILocalVariable(name: "b", scope: !4461, file: !4017, line: 214, type: !4217)
!4469 = !DILocalVariable(name: "first", scope: !4470, file: !4017, line: 233, type: !2586)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !4017, line: 232, column: 15)
!4471 = distinct !DILexicalBlock(scope: !4461, file: !4017, line: 232, column: 6)
!4472 = !DILocalVariable(name: "i", scope: !4470, file: !4017, line: 234, type: !118)
!4473 = !DILocalVariable(name: "c", scope: !4474, file: !4017, line: 236, type: !2586)
!4474 = distinct !DILexicalBlock(scope: !4470, file: !4017, line: 235, column: 6)
!4475 = !DILocalVariable(name: "bmask", scope: !4461, file: !4017, line: 249, type: !156)
!4476 = !DILocalVariable(name: "minbucket", scope: !4477, file: !4017, line: 252, type: !118)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !4017, line: 251, column: 19)
!4478 = distinct !DILexicalBlock(scope: !4461, file: !4017, line: 251, column: 6)
!4479 = !DILocalVariable(name: "c", scope: !4477, file: !4017, line: 253, type: !2586)
!4480 = !DILocation(line: 0, scope: !4461)
!4481 = !DILocation(line: 213, column: 11, scope: !4461)
!4482 = !DILocation(line: 232, column: 9, scope: !4471)
!4483 = !DILocation(line: 232, column: 6, scope: !4471)
!4484 = !DILocation(line: 232, column: 6, scope: !4461)
!4485 = !DILocation(line: 236, column: 21, scope: !4474)
!4486 = !DILocation(line: 0, scope: !4470)
!4487 = !DILocation(line: 0, scope: !4474)
!4488 = !DILocation(line: 237, column: 8, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4474, file: !4017, line: 237, column: 8)
!4490 = !DILocation(line: 237, column: 25, scope: !4489)
!4491 = !DILocation(line: 237, column: 8, scope: !4474)
!4492 = !DILocation(line: 238, column: 5, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4489, file: !4017, line: 237, column: 32)
!4494 = !DILocation(line: 241, column: 14, scope: !4474)
!4495 = !DILocation(line: 241, column: 12, scope: !4474)
!4496 = !DILocation(line: 243, column: 12, scope: !4470)
!4497 = !DILocation(line: 243, column: 16, scope: !4470)
!4498 = distinct !{!4498, !4499, !4500}
!4499 = !DILocation(line: 235, column: 3, scope: !4470)
!4500 = !DILocation(line: 243, column: 35, scope: !4470)
!4501 = !DILocation(line: 249, column: 22, scope: !4461)
!4502 = !DILocation(line: 249, column: 39, scope: !4461)
!4503 = !DILocation(line: 249, column: 36, scope: !4461)
!4504 = !DILocation(line: 251, column: 12, scope: !4478)
!4505 = !DILocation(line: 251, column: 6, scope: !4461)
!4506 = !DILocation(line: 252, column: 19, scope: !4477)
!4507 = !DILocation(line: 0, scope: !4477)
!4508 = !DILocation(line: 253, column: 39, scope: !4477)
!4509 = !DILocation(line: 255, column: 3, scope: !4477)
!4510 = !DILocation(line: 261, column: 1, scope: !4461)
!4511 = distinct !DISubprogram(name: "split_chunks", scope: !4017, file: !4017, line: 109, type: !4155, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4512)
!4512 = !{!4513, !4514, !4515, !4516, !4517, !4518}
!4513 = !DILocalVariable(name: "h", arg: 1, scope: !4511, file: !4017, line: 109, type: !2581)
!4514 = !DILocalVariable(name: "lc", arg: 2, scope: !4511, file: !4017, line: 109, type: !2586)
!4515 = !DILocalVariable(name: "rc", arg: 3, scope: !4511, file: !4017, line: 109, type: !2586)
!4516 = !DILocalVariable(name: "sz0", scope: !4511, file: !4017, line: 114, type: !4162)
!4517 = !DILocalVariable(name: "lsz", scope: !4511, file: !4017, line: 115, type: !4162)
!4518 = !DILocalVariable(name: "rsz", scope: !4511, file: !4017, line: 116, type: !4162)
!4519 = !DILocation(line: 0, scope: !4511)
!4520 = !DILocation(line: 114, column: 18, scope: !4511)
!4521 = !DILocation(line: 115, column: 21, scope: !4511)
!4522 = !DILocation(line: 116, column: 22, scope: !4511)
!4523 = !DILocation(line: 118, column: 2, scope: !4511)
!4524 = !DILocation(line: 119, column: 2, scope: !4511)
!4525 = !DILocation(line: 120, column: 2, scope: !4511)
!4526 = !DILocation(line: 121, column: 25, scope: !4511)
!4527 = !DILocation(line: 121, column: 2, scope: !4511)
!4528 = !DILocation(line: 122, column: 1, scope: !4511)
!4529 = distinct !DISubprogram(name: "chunk_mem", scope: !4017, file: !4017, line: 24, type: !4530, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4532)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!117, !2581, !2586}
!4532 = !{!4533, !4534, !4535, !4536}
!4533 = !DILocalVariable(name: "h", arg: 1, scope: !4529, file: !4017, line: 24, type: !2581)
!4534 = !DILocalVariable(name: "c", arg: 2, scope: !4529, file: !4017, line: 24, type: !2586)
!4535 = !DILocalVariable(name: "buf", scope: !4529, file: !4017, line: 26, type: !2575)
!4536 = !DILocalVariable(name: "ret", scope: !4529, file: !4017, line: 27, type: !1981)
!4537 = !DILocation(line: 0, scope: !4529)
!4538 = !DILocation(line: 26, column: 22, scope: !4529)
!4539 = !DILocation(line: 27, column: 38, scope: !4529)
!4540 = !DILocation(line: 31, column: 2, scope: !4529)
!4541 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4017, file: !4017, line: 301, type: !4542, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4544)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!117, !4020, !315, !315}
!4544 = !{!4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556}
!4545 = !DILocalVariable(name: "heap", arg: 1, scope: !4541, file: !4017, line: 301, type: !4020)
!4546 = !DILocalVariable(name: "align", arg: 2, scope: !4541, file: !4017, line: 301, type: !315)
!4547 = !DILocalVariable(name: "bytes", arg: 3, scope: !4541, file: !4017, line: 301, type: !315)
!4548 = !DILocalVariable(name: "h", scope: !4541, file: !4017, line: 303, type: !2581)
!4549 = !DILocalVariable(name: "gap", scope: !4541, file: !4017, line: 304, type: !315)
!4550 = !DILocalVariable(name: "rew", scope: !4541, file: !4017, line: 304, type: !315)
!4551 = !DILocalVariable(name: "padded_sz", scope: !4541, file: !4017, line: 335, type: !4162)
!4552 = !DILocalVariable(name: "c0", scope: !4541, file: !4017, line: 336, type: !2586)
!4553 = !DILocalVariable(name: "mem", scope: !4541, file: !4017, line: 341, type: !1981)
!4554 = !DILocalVariable(name: "end", scope: !4541, file: !4017, line: 345, type: !2575)
!4555 = !DILocalVariable(name: "c", scope: !4541, file: !4017, line: 348, type: !2586)
!4556 = !DILocalVariable(name: "c_end", scope: !4541, file: !4017, line: 349, type: !2586)
!4557 = !DILocation(line: 0, scope: !4541)
!4558 = !DILocation(line: 303, column: 27, scope: !4541)
!4559 = !DILocation(line: 313, column: 16, scope: !4541)
!4560 = !DILocation(line: 313, column: 14, scope: !4541)
!4561 = !DILocation(line: 314, column: 12, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4541, file: !4017, line: 314, column: 6)
!4563 = !DILocation(line: 314, column: 6, scope: !4541)
!4564 = !DILocation(line: 315, column: 9, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4562, file: !4017, line: 314, column: 20)
!4566 = !DILocation(line: 316, column: 9, scope: !4565)
!4567 = !DILocation(line: 318, column: 13, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !4017, line: 318, column: 7)
!4569 = distinct !DILexicalBlock(scope: !4562, file: !4017, line: 317, column: 9)
!4570 = !DILocation(line: 318, column: 7, scope: !4569)
!4571 = !DILocation(line: 319, column: 11, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4568, file: !4017, line: 318, column: 39)
!4573 = !DILocation(line: 319, column: 4, scope: !4572)
!4574 = !DILocation(line: 0, scope: !4562)
!4575 = !DILocation(line: 324, column: 2, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !4017, line: 324, column: 2)
!4577 = distinct !DILexicalBlock(scope: !4541, file: !4017, line: 324, column: 2)
!4578 = !DILocation(line: 324, column: 2, scope: !4577)
!4579 = !DILocation(line: 324, column: 2, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4576, file: !4017, line: 324, column: 2)
!4581 = !DILocation(line: 326, column: 12, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4541, file: !4017, line: 326, column: 6)
!4583 = !DILocation(line: 326, column: 17, scope: !4582)
!4584 = !DILocation(line: 326, column: 20, scope: !4582)
!4585 = !DILocation(line: 326, column: 6, scope: !4541)
!4586 = !DILocation(line: 335, column: 50, scope: !4541)
!4587 = !DILocation(line: 335, column: 58, scope: !4541)
!4588 = !DILocation(line: 335, column: 24, scope: !4541)
!4589 = !DILocation(line: 336, column: 17, scope: !4541)
!4590 = !DILocation(line: 338, column: 9, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4541, file: !4017, line: 338, column: 6)
!4592 = !DILocation(line: 338, column: 6, scope: !4541)
!4593 = !DILocation(line: 341, column: 17, scope: !4541)
!4594 = !DILocation(line: 344, column: 20, scope: !4541)
!4595 = !DILocation(line: 344, column: 8, scope: !4541)
!4596 = !DILocation(line: 344, column: 47, scope: !4541)
!4597 = !DILocation(line: 345, column: 39, scope: !4541)
!4598 = !DILocation(line: 348, column: 16, scope: !4541)
!4599 = !DILocation(line: 349, column: 26, scope: !4541)
!4600 = !DILocation(line: 349, column: 24, scope: !4541)
!4601 = !DILocation(line: 353, column: 8, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4541, file: !4017, line: 353, column: 6)
!4603 = !DILocation(line: 353, column: 6, scope: !4541)
!4604 = !DILocation(line: 354, column: 3, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4602, file: !4017, line: 353, column: 14)
!4606 = !DILocation(line: 355, column: 3, scope: !4605)
!4607 = !DILocation(line: 356, column: 2, scope: !4605)
!4608 = !DILocation(line: 359, column: 6, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4541, file: !4017, line: 359, column: 6)
!4610 = !DILocation(line: 359, column: 24, scope: !4609)
!4611 = !DILocation(line: 359, column: 6, scope: !4541)
!4612 = !DILocation(line: 360, column: 3, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4609, file: !4017, line: 359, column: 33)
!4614 = !DILocation(line: 361, column: 3, scope: !4613)
!4615 = !DILocation(line: 362, column: 2, scope: !4613)
!4616 = !DILocation(line: 364, column: 2, scope: !4541)
!4617 = !DILocation(line: 377, column: 1, scope: !4541)
!4618 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4017, file: !4017, line: 379, type: !4619, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4621)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{!117, !4020, !117, !315, !315}
!4621 = !{!4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4637, !4638}
!4622 = !DILocalVariable(name: "heap", arg: 1, scope: !4618, file: !4017, line: 379, type: !4020)
!4623 = !DILocalVariable(name: "ptr", arg: 2, scope: !4618, file: !4017, line: 379, type: !117)
!4624 = !DILocalVariable(name: "align", arg: 3, scope: !4618, file: !4017, line: 380, type: !315)
!4625 = !DILocalVariable(name: "bytes", arg: 4, scope: !4618, file: !4017, line: 380, type: !315)
!4626 = !DILocalVariable(name: "h", scope: !4618, file: !4017, line: 382, type: !2581)
!4627 = !DILocalVariable(name: "c", scope: !4618, file: !4017, line: 399, type: !2586)
!4628 = !DILocalVariable(name: "rc", scope: !4618, file: !4017, line: 400, type: !2586)
!4629 = !DILocalVariable(name: "align_gap", scope: !4618, file: !4017, line: 401, type: !315)
!4630 = !DILocalVariable(name: "chunks_need", scope: !4618, file: !4017, line: 402, type: !4162)
!4631 = !DILocalVariable(name: "split_size", scope: !4632, file: !4017, line: 435, type: !4162)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !4017, line: 433, column: 61)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !4017, line: 432, column: 13)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !4017, line: 409, column: 13)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !4017, line: 406, column: 13)
!4636 = distinct !DILexicalBlock(scope: !4618, file: !4017, line: 404, column: 6)
!4637 = !DILocalVariable(name: "ptr2", scope: !4618, file: !4017, line: 474, type: !117)
!4638 = !DILocalVariable(name: "prev_size", scope: !4639, file: !4017, line: 477, type: !315)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !4017, line: 476, column: 20)
!4640 = distinct !DILexicalBlock(scope: !4618, file: !4017, line: 476, column: 6)
!4641 = !DILocation(line: 0, scope: !4618)
!4642 = !DILocation(line: 382, column: 27, scope: !4618)
!4643 = !DILocation(line: 385, column: 10, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4618, file: !4017, line: 385, column: 6)
!4645 = !DILocation(line: 385, column: 6, scope: !4618)
!4646 = !DILocation(line: 386, column: 10, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4644, file: !4017, line: 385, column: 19)
!4648 = !DILocation(line: 386, column: 3, scope: !4647)
!4649 = !DILocation(line: 388, column: 12, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4618, file: !4017, line: 388, column: 6)
!4651 = !DILocation(line: 388, column: 6, scope: !4618)
!4652 = !DILocation(line: 389, column: 3, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4650, file: !4017, line: 388, column: 18)
!4654 = !DILocation(line: 390, column: 3, scope: !4653)
!4655 = !DILocation(line: 393, column: 2, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !4017, line: 393, column: 2)
!4657 = distinct !DILexicalBlock(scope: !4618, file: !4017, line: 393, column: 2)
!4658 = !DILocation(line: 393, column: 2, scope: !4657)
!4659 = !DILocation(line: 393, column: 2, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4656, file: !4017, line: 393, column: 2)
!4661 = !DILocation(line: 395, column: 6, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4618, file: !4017, line: 395, column: 6)
!4663 = !DILocation(line: 395, column: 6, scope: !4618)
!4664 = !DILocation(line: 399, column: 16, scope: !4618)
!4665 = !DILocation(line: 400, column: 17, scope: !4618)
!4666 = !DILocation(line: 401, column: 49, scope: !4618)
!4667 = !DILocation(line: 401, column: 36, scope: !4618)
!4668 = !DILocation(line: 402, column: 52, scope: !4618)
!4669 = !DILocation(line: 402, column: 26, scope: !4618)
!4670 = !DILocation(line: 404, column: 6, scope: !4636)
!4671 = !DILocation(line: 404, column: 12, scope: !4636)
!4672 = !DILocation(line: 406, column: 13, scope: !4635)
!4673 = !DILocation(line: 406, column: 30, scope: !4635)
!4674 = !DILocation(line: 406, column: 13, scope: !4636)
!4675 = !DILocation(line: 409, column: 30, scope: !4634)
!4676 = !DILocation(line: 409, column: 13, scope: !4635)
!4677 = !DILocation(line: 420, column: 24, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4634, file: !4017, line: 409, column: 45)
!4679 = !DILocation(line: 420, column: 3, scope: !4678)
!4680 = !DILocation(line: 421, column: 3, scope: !4678)
!4681 = !DILocation(line: 422, column: 3, scope: !4678)
!4682 = !DILocation(line: 431, column: 3, scope: !4678)
!4683 = !DILocation(line: 432, column: 14, scope: !4633)
!4684 = !DILocation(line: 432, column: 32, scope: !4633)
!4685 = !DILocation(line: 433, column: 26, scope: !4633)
!4686 = !DILocation(line: 433, column: 24, scope: !4633)
!4687 = !DILocation(line: 433, column: 44, scope: !4633)
!4688 = !DILocation(line: 432, column: 13, scope: !4634)
!4689 = !DILocation(line: 435, column: 38, scope: !4632)
!4690 = !DILocation(line: 0, scope: !4632)
!4691 = !DILocation(line: 445, column: 3, scope: !4632)
!4692 = !DILocation(line: 447, column: 20, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4632, file: !4017, line: 447, column: 7)
!4694 = !DILocation(line: 447, column: 18, scope: !4693)
!4695 = !DILocation(line: 447, column: 7, scope: !4632)
!4696 = !DILocation(line: 448, column: 27, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4693, file: !4017, line: 447, column: 39)
!4698 = !DILocation(line: 448, column: 4, scope: !4697)
!4699 = !DILocation(line: 449, column: 4, scope: !4697)
!4700 = !DILocation(line: 450, column: 3, scope: !4697)
!4701 = !DILocation(line: 452, column: 3, scope: !4632)
!4702 = !DILocation(line: 453, column: 3, scope: !4632)
!4703 = !DILocation(line: 474, column: 15, scope: !4618)
!4704 = !DILocation(line: 476, column: 11, scope: !4640)
!4705 = !DILocation(line: 476, column: 6, scope: !4618)
!4706 = !DILocation(line: 477, column: 42, scope: !4639)
!4707 = !DILocation(line: 477, column: 22, scope: !4639)
!4708 = !DILocation(line: 477, column: 60, scope: !4639)
!4709 = !DILocation(line: 0, scope: !4639)
!4710 = !DILocation(line: 479, column: 21, scope: !4639)
!4711 = !DILocation(line: 479, column: 3, scope: !4639)
!4712 = !DILocation(line: 480, column: 3, scope: !4639)
!4713 = !DILocation(line: 481, column: 2, scope: !4639)
!4714 = !DILocation(line: 483, column: 1, scope: !4618)
!4715 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2568, file: !2568, line: 245, type: !4716, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4718)
!4716 = !DISubroutineType(types: !4717)
!4717 = !{!315, !2581, !4162}
!4718 = !{!4719, !4720}
!4719 = !DILocalVariable(name: "h", arg: 1, scope: !4715, file: !2568, line: 245, type: !2581)
!4720 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4715, file: !2568, line: 245, type: !4162)
!4721 = !DILocation(line: 0, scope: !4715)
!4722 = !DILocation(line: 247, column: 20, scope: !4715)
!4723 = !DILocation(line: 247, column: 33, scope: !4715)
!4724 = !DILocation(line: 247, column: 2, scope: !4715)
!4725 = distinct !DISubprogram(name: "sys_heap_init", scope: !4017, file: !4017, line: 485, type: !4726, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !4728)
!4726 = !DISubroutineType(types: !4727)
!4727 = !{null, !4020, !117, !315}
!4728 = !{!4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738}
!4729 = !DILocalVariable(name: "heap", arg: 1, scope: !4725, file: !4017, line: 485, type: !4020)
!4730 = !DILocalVariable(name: "mem", arg: 2, scope: !4725, file: !4017, line: 485, type: !117)
!4731 = !DILocalVariable(name: "bytes", arg: 3, scope: !4725, file: !4017, line: 485, type: !315)
!4732 = !DILocalVariable(name: "addr", scope: !4725, file: !4017, line: 502, type: !22)
!4733 = !DILocalVariable(name: "end", scope: !4725, file: !4017, line: 503, type: !22)
!4734 = !DILocalVariable(name: "heap_sz", scope: !4725, file: !4017, line: 504, type: !4162)
!4735 = !DILocalVariable(name: "h", scope: !4725, file: !4017, line: 509, type: !2581)
!4736 = !DILocalVariable(name: "nb_buckets", scope: !4725, file: !4017, line: 520, type: !118)
!4737 = !DILocalVariable(name: "chunk0_size", scope: !4725, file: !4017, line: 521, type: !4162)
!4738 = !DILocalVariable(name: "i", scope: !4739, file: !4017, line: 526, type: !118)
!4739 = distinct !DILexicalBlock(scope: !4725, file: !4017, line: 526, column: 2)
!4740 = !DILocation(line: 0, scope: !4725)
!4741 = !DILocation(line: 491, column: 3, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !4017, line: 491, column: 3)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !4017, line: 491, column: 3)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !4017, line: 489, column: 46)
!4745 = distinct !DILexicalBlock(scope: !4725, file: !4017, line: 489, column: 6)
!4746 = !DILocation(line: 491, column: 3, scope: !4743)
!4747 = !DILocation(line: 491, column: 3, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4742, file: !4017, line: 491, column: 3)
!4749 = !DILocation(line: 498, column: 2, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !4017, line: 498, column: 2)
!4751 = distinct !DILexicalBlock(scope: !4725, file: !4017, line: 498, column: 2)
!4752 = !DILocation(line: 498, column: 2, scope: !4751)
!4753 = !DILocation(line: 498, column: 2, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4750, file: !4017, line: 498, column: 2)
!4755 = !DILocation(line: 499, column: 8, scope: !4725)
!4756 = !DILocation(line: 502, column: 19, scope: !4725)
!4757 = !DILocation(line: 503, column: 18, scope: !4725)
!4758 = !DILocation(line: 504, column: 27, scope: !4725)
!4759 = !DILocation(line: 504, column: 35, scope: !4725)
!4760 = !DILocation(line: 507, column: 2, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !4017, line: 507, column: 2)
!4762 = distinct !DILexicalBlock(scope: !4725, file: !4017, line: 507, column: 2)
!4763 = !DILocation(line: 507, column: 2, scope: !4762)
!4764 = !DILocation(line: 507, column: 2, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4761, file: !4017, line: 507, column: 2)
!4766 = !DILocation(line: 509, column: 21, scope: !4725)
!4767 = !DILocation(line: 510, column: 8, scope: !4725)
!4768 = !DILocation(line: 510, column: 13, scope: !4725)
!4769 = !DILocation(line: 511, column: 5, scope: !4725)
!4770 = !DILocation(line: 511, column: 15, scope: !4725)
!4771 = !DILocation(line: 512, column: 5, scope: !4725)
!4772 = !DILocation(line: 512, column: 19, scope: !4725)
!4773 = !DILocation(line: 520, column: 19, scope: !4725)
!4774 = !DILocation(line: 522, column: 21, scope: !4725)
!4775 = !DILocation(line: 521, column: 56, scope: !4725)
!4776 = !DILocation(line: 521, column: 26, scope: !4725)
!4777 = !DILocation(line: 524, column: 2, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4779, file: !4017, line: 524, column: 2)
!4779 = distinct !DILexicalBlock(scope: !4725, file: !4017, line: 524, column: 2)
!4780 = !DILocation(line: 524, column: 2, scope: !4779)
!4781 = !DILocation(line: 0, scope: !4739)
!4782 = !DILocation(line: 526, column: 20, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4739, file: !4017, line: 526, column: 2)
!4784 = !DILocation(line: 526, column: 2, scope: !4739)
!4785 = !DILocation(line: 524, column: 2, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4778, file: !4017, line: 524, column: 2)
!4787 = !DILocation(line: 531, column: 2, scope: !4725)
!4788 = !DILocation(line: 532, column: 2, scope: !4725)
!4789 = !DILocation(line: 533, column: 2, scope: !4725)
!4790 = !DILocation(line: 536, column: 41, scope: !4725)
!4791 = !DILocation(line: 536, column: 2, scope: !4725)
!4792 = !DILocation(line: 537, column: 2, scope: !4725)
!4793 = !DILocation(line: 540, column: 2, scope: !4725)
!4794 = !DILocation(line: 541, column: 2, scope: !4725)
!4795 = !DILocation(line: 542, column: 2, scope: !4725)
!4796 = !DILocation(line: 544, column: 2, scope: !4725)
!4797 = !DILocation(line: 545, column: 1, scope: !4725)
!4798 = !DILocation(line: 527, column: 17, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4783, file: !4017, line: 526, column: 39)
!4800 = !DILocation(line: 527, column: 22, scope: !4799)
!4801 = !DILocation(line: 526, column: 35, scope: !4783)
!4802 = distinct !{!4802, !4784, !4803}
!4803 = !DILocation(line: 528, column: 2, scope: !4739)
!4804 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2601, file: !2601, line: 1338, type: !4805, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !4813)
!4805 = !DISubroutineType(types: !4806)
!4806 = !{!118, !3751, !117, !133, !4807, !156}
!4807 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3717, line: 99, baseType: !4808)
!4808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3717, line: 40, baseType: !4809)
!4809 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2601, baseType: !4810)
!4810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4811)
!4811 = !{!4812}
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4810, file: !2601, baseType: !117, size: 32)
!4813 = !{!4814, !4815, !4816, !4817, !4818, !4819, !4823, !4824, !4825, !4827, !4832, !4877, !4880, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4892, !4893, !4894, !4898, !4901, !4903, !4906, !4907, !4908, !4913, !4919, !4922, !4926, !4932, !4936, !4939, !4941, !4944}
!4814 = !DILocalVariable(name: "out", arg: 1, scope: !4804, file: !2601, line: 1338, type: !3751)
!4815 = !DILocalVariable(name: "ctx", arg: 2, scope: !4804, file: !2601, line: 1338, type: !117)
!4816 = !DILocalVariable(name: "fp", arg: 3, scope: !4804, file: !2601, line: 1338, type: !133)
!4817 = !DILocalVariable(name: "ap", arg: 4, scope: !4804, file: !2601, line: 1339, type: !4807)
!4818 = !DILocalVariable(name: "flags", arg: 5, scope: !4804, file: !2601, line: 1339, type: !156)
!4819 = !DILocalVariable(name: "buf", scope: !4804, file: !2601, line: 1341, type: !4820)
!4820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 176, elements: !4821)
!4821 = !{!4822}
!4822 = !DISubrange(count: 22)
!4823 = !DILocalVariable(name: "count", scope: !4804, file: !2601, line: 1342, type: !315)
!4824 = !DILocalVariable(name: "sint", scope: !4804, file: !2601, line: 1343, type: !2620)
!4825 = !DILocalVariable(name: "tagged_ap", scope: !4804, file: !2601, line: 1345, type: !4826)
!4826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!4827 = !DILocalVariable(name: "rc", scope: !4828, file: !2601, line: 1377, type: !118)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !2601, line: 1377, column: 4)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !2601, line: 1376, column: 19)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1376, column: 7)
!4831 = distinct !DILexicalBlock(scope: !4804, file: !2601, line: 1375, column: 19)
!4832 = !DILocalVariable(name: "state", scope: !4831, file: !2601, line: 1395, type: !4833)
!4833 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4804, file: !2601, line: 1392, size: 192, elements: !4834)
!4834 = !{!4835, !4845}
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4833, file: !2601, line: 1393, baseType: !4836, size: 64)
!4836 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2601, line: 166, size: 64, elements: !4837)
!4837 = !{!4838, !4839, !4840, !4842, !4844}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4836, file: !2601, line: 168, baseType: !2620, size: 64)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4836, file: !2601, line: 171, baseType: !2623, size: 64)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4836, file: !2601, line: 174, baseType: !4841, size: 64)
!4841 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4836, file: !2601, line: 177, baseType: !4843, size: 64)
!4843 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4836, file: !2601, line: 180, baseType: !117, size: 32)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4833, file: !2601, line: 1394, baseType: !4846, size: 96, offset: 64)
!4846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2601, line: 189, size: 96, elements: !4847)
!4847 = !{!4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4862, !4863, !4864, !4865, !4866, !4867, !4872}
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4846, file: !2601, line: 191, baseType: !146, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4846, file: !2601, line: 194, baseType: !146, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4846, file: !2601, line: 197, baseType: !146, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4846, file: !2601, line: 200, baseType: !146, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4846, file: !2601, line: 203, baseType: !146, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4846, file: !2601, line: 206, baseType: !146, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4846, file: !2601, line: 209, baseType: !146, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4846, file: !2601, line: 212, baseType: !146, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4846, file: !2601, line: 219, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4846, file: !2601, line: 222, baseType: !146, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4846, file: !2601, line: 229, baseType: !146, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4846, file: !2601, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4846, file: !2601, line: 238, baseType: !146, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4846, file: !2601, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4846, file: !2601, line: 244, baseType: !146, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4846, file: !2601, line: 247, baseType: !146, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4846, file: !2601, line: 252, baseType: !146, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4846, file: !2601, line: 257, baseType: !146, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4846, file: !2601, line: 260, baseType: !144, size: 8, offset: 24)
!4867 = !DIDerivedType(tag: DW_TAG_member, scope: !4846, file: !2601, line: 262, baseType: !4868, size: 32, offset: 32)
!4868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4846, file: !2601, line: 262, size: 32, elements: !4869)
!4869 = !{!4870, !4871}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4868, file: !2601, line: 267, baseType: !118, size: 32)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4868, file: !2601, line: 289, baseType: !118, size: 32)
!4872 = !DIDerivedType(tag: DW_TAG_member, scope: !4846, file: !2601, line: 292, baseType: !4873, size: 32, offset: 64)
!4873 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4846, file: !2601, line: 292, size: 32, elements: !4874)
!4874 = !{!4875, !4876}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4873, file: !2601, line: 297, baseType: !118, size: 32)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4873, file: !2601, line: 306, baseType: !118, size: 32)
!4877 = !DILocalVariable(name: "conv", scope: !4831, file: !2601, line: 1400, type: !4878)
!4878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4879)
!4879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 32)
!4880 = !DILocalVariable(name: "value", scope: !4831, file: !2601, line: 1401, type: !4881)
!4881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4882)
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 32)
!4883 = !DILocalVariable(name: "sp", scope: !4831, file: !2601, line: 1402, type: !133)
!4884 = !DILocalVariable(name: "width", scope: !4831, file: !2601, line: 1403, type: !118)
!4885 = !DILocalVariable(name: "precision", scope: !4831, file: !2601, line: 1404, type: !118)
!4886 = !DILocalVariable(name: "bps", scope: !4831, file: !2601, line: 1405, type: !133)
!4887 = !DILocalVariable(name: "bpe", scope: !4831, file: !2601, line: 1406, type: !133)
!4888 = !DILocalVariable(name: "sign", scope: !4831, file: !2601, line: 1407, type: !135)
!4889 = !DILocalVariable(name: "arg", scope: !4890, file: !2601, line: 1432, type: !118)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !2601, line: 1431, column: 24)
!4891 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1431, column: 7)
!4892 = !DILocalVariable(name: "specifier_cat", scope: !4831, file: !2601, line: 1468, type: !2600)
!4893 = !DILocalVariable(name: "length_mod", scope: !4831, file: !2601, line: 1470, type: !2608)
!4894 = !DILocalVariable(name: "rc", scope: !4895, file: !2601, line: 1575, type: !118)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !2601, line: 1575, column: 4)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !2601, line: 1574, column: 43)
!4897 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1574, column: 7)
!4898 = !DILocalVariable(name: "rc", scope: !4899, file: !2601, line: 1584, type: !118)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !2601, line: 1584, column: 4)
!4900 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1582, column: 28)
!4901 = !DILocalVariable(name: "len", scope: !4902, file: !2601, line: 1589, type: !315)
!4902 = distinct !DILexicalBlock(scope: !4900, file: !2601, line: 1586, column: 13)
!4903 = !DILocalVariable(name: "len", scope: !4904, file: !2601, line: 1641, type: !315)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !2601, line: 1640, column: 24)
!4905 = distinct !DILexicalBlock(scope: !4900, file: !2601, line: 1640, column: 8)
!4906 = !DILocalVariable(name: "nj_len", scope: !4831, file: !2601, line: 1722, type: !315)
!4907 = !DILocalVariable(name: "pad_len", scope: !4831, file: !2601, line: 1723, type: !118)
!4908 = !DILocalVariable(name: "pad", scope: !4909, file: !2601, line: 1751, type: !135)
!4909 = distinct !DILexicalBlock(scope: !4910, file: !2601, line: 1750, column: 26)
!4910 = distinct !DILexicalBlock(scope: !4911, file: !2601, line: 1750, column: 8)
!4911 = distinct !DILexicalBlock(scope: !4912, file: !2601, line: 1747, column: 18)
!4912 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1747, column: 7)
!4913 = !DILocalVariable(name: "rc", scope: !4914, file: !2601, line: 1758, type: !118)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !2601, line: 1758, column: 7)
!4915 = distinct !DILexicalBlock(scope: !4916, file: !2601, line: 1757, column: 21)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !2601, line: 1757, column: 10)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !2601, line: 1756, column: 26)
!4918 = distinct !DILexicalBlock(scope: !4909, file: !2601, line: 1756, column: 9)
!4919 = !DILocalVariable(name: "rc", scope: !4920, file: !2601, line: 1765, type: !118)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !2601, line: 1765, column: 6)
!4921 = distinct !DILexicalBlock(scope: !4909, file: !2601, line: 1764, column: 25)
!4922 = !DILocalVariable(name: "rc", scope: !4923, file: !2601, line: 1774, type: !118)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !2601, line: 1774, column: 4)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !2601, line: 1773, column: 18)
!4925 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1773, column: 7)
!4926 = !DILocalVariable(name: "rc", scope: !4927, file: !2601, line: 1819, type: !118)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !2601, line: 1819, column: 5)
!4928 = distinct !DILexicalBlock(scope: !4929, file: !2601, line: 1818, column: 44)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !2601, line: 1818, column: 8)
!4930 = distinct !DILexicalBlock(scope: !4931, file: !2601, line: 1817, column: 10)
!4931 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1777, column: 7)
!4932 = !DILocalVariable(name: "rc", scope: !4933, file: !2601, line: 1823, type: !118)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !2601, line: 1823, column: 5)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !2601, line: 1822, column: 26)
!4935 = distinct !DILexicalBlock(scope: !4930, file: !2601, line: 1822, column: 8)
!4936 = !DILocalVariable(name: "rc", scope: !4937, file: !2601, line: 1828, type: !118)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !2601, line: 1828, column: 5)
!4938 = distinct !DILexicalBlock(scope: !4930, file: !2601, line: 1827, column: 26)
!4939 = !DILocalVariable(name: "rc", scope: !4940, file: !2601, line: 1831, type: !118)
!4940 = distinct !DILexicalBlock(scope: !4930, file: !2601, line: 1831, column: 4)
!4941 = !DILocalVariable(name: "rc", scope: !4942, file: !2601, line: 1836, type: !118)
!4942 = distinct !DILexicalBlock(scope: !4943, file: !2601, line: 1836, column: 4)
!4943 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1835, column: 21)
!4944 = !DILabel(scope: !4900, name: "prec_int_pad0", file: !2601, line: 1634)
!4945 = !DILocation(line: 0, scope: !4804)
!4946 = !DILocation(line: 1341, column: 2, scope: !4804)
!4947 = !DILocation(line: 1341, column: 7, scope: !4804)
!4948 = !DILocation(line: 1375, column: 2, scope: !4804)
!4949 = !DILocation(line: 1342, column: 9, scope: !4804)
!4950 = !DILocation(line: 1375, column: 9, scope: !4804)
!4951 = !DILocation(line: 1377, column: 4, scope: !4828)
!4952 = !DILocation(line: 0, scope: !4828)
!4953 = !DILocation(line: 1377, column: 4, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4828, file: !2601, line: 1377, column: 4)
!4955 = distinct !{!4955, !4948, !4956}
!4956 = !DILocation(line: 1839, column: 2, scope: !4804)
!4957 = !DILocation(line: 1392, column: 3, scope: !4831)
!4958 = !DILocation(line: 1395, column: 5, scope: !4831)
!4959 = !DILocation(line: 0, scope: !4831)
!4960 = !DILocation(line: 1409, column: 8, scope: !4831)
!4961 = !DILocation(line: 1414, column: 13, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1414, column: 7)
!4963 = !DILocation(line: 1414, column: 7, scope: !4831)
!4964 = !DILocation(line: 1415, column: 12, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4962, file: !2601, line: 1414, column: 25)
!4966 = !DILocation(line: 1417, column: 14, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4965, file: !2601, line: 1417, column: 8)
!4968 = !DILocation(line: 1417, column: 8, scope: !4965)
!4969 = !DILocation(line: 1418, column: 21, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4967, file: !2601, line: 1417, column: 19)
!4971 = !DILocation(line: 1419, column: 13, scope: !4970)
!4972 = !DILocation(line: 1420, column: 4, scope: !4970)
!4973 = !DILocation(line: 1421, column: 20, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4962, file: !2601, line: 1421, column: 14)
!4975 = !DILocation(line: 1421, column: 14, scope: !4962)
!4976 = !DILocation(line: 1431, column: 13, scope: !4891)
!4977 = !DILocation(line: 1431, column: 7, scope: !4831)
!4978 = !DILocation(line: 1432, column: 14, scope: !4890)
!4979 = !DILocation(line: 0, scope: !4890)
!4980 = !DILocation(line: 1434, column: 12, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4890, file: !2601, line: 1434, column: 8)
!4982 = !DILocation(line: 1434, column: 8, scope: !4890)
!4983 = !DILocation(line: 1435, column: 24, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4981, file: !2601, line: 1434, column: 17)
!4985 = !DILocation(line: 1436, column: 4, scope: !4984)
!4986 = !DILocation(line: 1439, column: 20, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4891, file: !2601, line: 1439, column: 14)
!4988 = !DILocation(line: 1439, column: 14, scope: !4891)
!4989 = !DILocation(line: 1469, column: 37, scope: !4831)
!4990 = !DILocation(line: 1448, column: 20, scope: !4831)
!4991 = !DILocation(line: 1449, column: 22, scope: !4831)
!4992 = !DILocation(line: 1471, column: 34, scope: !4831)
!4993 = !DILocation(line: 1478, column: 7, scope: !4831)
!4994 = !DILocation(line: 1479, column: 4, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4996, file: !2601, line: 1478, column: 40)
!4996 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1478, column: 7)
!4997 = !DILocation(line: 1484, column: 19, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4995, file: !2601, line: 1479, column: 24)
!4999 = !DILocation(line: 1484, column: 17, scope: !4998)
!5000 = !DILocation(line: 1485, column: 5, scope: !4998)
!5001 = !DILocation(line: 1492, column: 20, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !5003, file: !2601, line: 1491, column: 12)
!5003 = distinct !DILexicalBlock(scope: !4998, file: !2601, line: 1487, column: 9)
!5004 = !DILocation(line: 1492, column: 18, scope: !5002)
!5005 = !DILocation(line: 1494, column: 5, scope: !4998)
!5006 = !DILocation(line: 1497, column: 23, scope: !4998)
!5007 = !DILocation(line: 1496, column: 17, scope: !4998)
!5008 = !DILocation(line: 1498, column: 5, scope: !4998)
!5009 = !DILocation(line: 1501, column: 23, scope: !4998)
!5010 = !DILocation(line: 1500, column: 17, scope: !4998)
!5011 = !DILocation(line: 1502, column: 5, scope: !4998)
!5012 = !DILocation(line: 1513, column: 23, scope: !4998)
!5013 = !DILocation(line: 1513, column: 6, scope: !4998)
!5014 = !DILocation(line: 1512, column: 17, scope: !4998)
!5015 = !DILocation(line: 1514, column: 5, scope: !4998)
!5016 = !DILocation(line: 0, scope: !4998)
!5017 = !DILocation(line: 1516, column: 8, scope: !4995)
!5018 = !DILocation(line: 1517, column: 19, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5020, file: !2601, line: 1516, column: 33)
!5020 = distinct !DILexicalBlock(scope: !4995, file: !2601, line: 1516, column: 8)
!5021 = !DILocation(line: 1517, column: 17, scope: !5019)
!5022 = !DILocation(line: 1518, column: 4, scope: !5019)
!5023 = !DILocation(line: 1519, column: 19, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5025, file: !2601, line: 1518, column: 39)
!5025 = distinct !DILexicalBlock(scope: !5020, file: !2601, line: 1518, column: 15)
!5026 = !DILocation(line: 1519, column: 17, scope: !5024)
!5027 = !DILocation(line: 1520, column: 4, scope: !5024)
!5028 = !DILocation(line: 1522, column: 4, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5030, file: !2601, line: 1521, column: 47)
!5030 = distinct !DILexicalBlock(scope: !4996, file: !2601, line: 1521, column: 14)
!5031 = !DILocation(line: 1527, column: 19, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5029, file: !2601, line: 1522, column: 24)
!5033 = !DILocation(line: 1527, column: 17, scope: !5032)
!5034 = !DILocation(line: 1528, column: 5, scope: !5032)
!5035 = !DILocation(line: 0, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5032, file: !2601, line: 1530, column: 9)
!5037 = !DILocation(line: 1540, column: 23, scope: !5032)
!5038 = !DILocation(line: 1539, column: 17, scope: !5032)
!5039 = !DILocation(line: 1542, column: 5, scope: !5032)
!5040 = !DILocation(line: 1545, column: 23, scope: !5032)
!5041 = !DILocation(line: 1544, column: 17, scope: !5032)
!5042 = !DILocation(line: 1547, column: 5, scope: !5032)
!5043 = !DILocation(line: 1551, column: 23, scope: !5032)
!5044 = !DILocation(line: 1551, column: 6, scope: !5032)
!5045 = !DILocation(line: 1550, column: 17, scope: !5032)
!5046 = !DILocation(line: 1552, column: 5, scope: !5032)
!5047 = !DILocation(line: 0, scope: !5032)
!5048 = !DILocation(line: 1554, column: 8, scope: !5029)
!5049 = !DILocation(line: 1555, column: 19, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5051, file: !2601, line: 1554, column: 33)
!5051 = distinct !DILexicalBlock(scope: !5029, file: !2601, line: 1554, column: 8)
!5052 = !DILocation(line: 1555, column: 17, scope: !5050)
!5053 = !DILocation(line: 1556, column: 4, scope: !5050)
!5054 = !DILocation(line: 1557, column: 19, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5056, file: !2601, line: 1556, column: 39)
!5056 = distinct !DILexicalBlock(scope: !5051, file: !2601, line: 1556, column: 15)
!5057 = !DILocation(line: 1557, column: 17, scope: !5055)
!5058 = !DILocation(line: 1558, column: 4, scope: !5055)
!5059 = !DILocation(line: 0, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5061, file: !2601, line: 1560, column: 8)
!5061 = distinct !DILexicalBlock(scope: !5062, file: !2601, line: 1559, column: 45)
!5062 = distinct !DILexicalBlock(scope: !5030, file: !2601, line: 1559, column: 14)
!5063 = !DILocation(line: 1566, column: 17, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5065, file: !2601, line: 1565, column: 46)
!5065 = distinct !DILexicalBlock(scope: !5062, file: !2601, line: 1565, column: 14)
!5066 = !DILocation(line: 1566, column: 15, scope: !5064)
!5067 = !DILocation(line: 1567, column: 3, scope: !5064)
!5068 = !DILocation(line: 1574, column: 21, scope: !4897)
!5069 = !DILocation(line: 1575, column: 4, scope: !4895)
!5070 = !DILocation(line: 0, scope: !4895)
!5071 = !DILocation(line: 1575, column: 4, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !4895, file: !2601, line: 1575, column: 4)
!5073 = !DILocation(line: 1582, column: 17, scope: !4831)
!5074 = !DILocation(line: 1582, column: 3, scope: !4831)
!5075 = !DILocation(line: 1584, column: 4, scope: !4899)
!5076 = !DILocation(line: 0, scope: !4899)
!5077 = !DILocation(line: 1584, column: 4, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !4899, file: !2601, line: 1584, column: 4)
!5079 = !DILocation(line: 1587, column: 31, scope: !4902)
!5080 = !DILocation(line: 1591, column: 18, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !4902, file: !2601, line: 1591, column: 8)
!5082 = !DILocation(line: 1591, column: 8, scope: !4902)
!5083 = !DILocation(line: 1592, column: 11, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5081, file: !2601, line: 1591, column: 24)
!5085 = !DILocation(line: 0, scope: !4902)
!5086 = !DILocation(line: 1593, column: 4, scope: !5084)
!5087 = !DILocation(line: 1594, column: 11, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5081, file: !2601, line: 1593, column: 11)
!5089 = !DILocation(line: 1604, column: 51, scope: !4900)
!5090 = !DILocation(line: 1604, column: 13, scope: !4900)
!5091 = !DILocation(line: 1604, column: 11, scope: !4900)
!5092 = !DILocation(line: 1606, column: 4, scope: !4900)
!5093 = !DILocation(line: 1609, column: 14, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !4900, file: !2601, line: 1609, column: 8)
!5095 = !DILocation(line: 1609, column: 8, scope: !4900)
!5096 = !DILocation(line: 1619, column: 18, scope: !4900)
!5097 = !DILocation(line: 1620, column: 13, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !4900, file: !2601, line: 1620, column: 8)
!5099 = !DILocation(line: 1620, column: 8, scope: !4900)
!5100 = !DILocation(line: 1622, column: 36, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5098, file: !2601, line: 1620, column: 18)
!5102 = !DILocation(line: 1622, column: 17, scope: !5101)
!5103 = !DILocation(line: 1623, column: 4, scope: !5101)
!5104 = !DILocation(line: 1632, column: 29, scope: !4900)
!5105 = !DILocation(line: 1632, column: 10, scope: !4900)
!5106 = !DILocation(line: 1632, column: 4, scope: !4900)
!5107 = !DILocation(line: 1407, column: 8, scope: !4831)
!5108 = !DILocation(line: 0, scope: !4900)
!5109 = !DILocation(line: 1634, column: 3, scope: !4900)
!5110 = !DILocation(line: 1640, column: 18, scope: !4905)
!5111 = !DILocation(line: 1640, column: 8, scope: !4900)
!5112 = !DILocation(line: 1729, column: 13, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1729, column: 7)
!5114 = !DILocation(line: 1641, column: 22, scope: !4904)
!5115 = !DILocation(line: 0, scope: !4904)
!5116 = !DILocation(line: 1646, column: 21, scope: !4904)
!5117 = !DILocation(line: 1649, column: 13, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !4904, file: !2601, line: 1649, column: 9)
!5119 = !DILocation(line: 1649, column: 9, scope: !4904)
!5120 = !DILocation(line: 1650, column: 35, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5118, file: !2601, line: 1649, column: 34)
!5122 = !DILocation(line: 1650, column: 23, scope: !5121)
!5123 = !DILocation(line: 1651, column: 5, scope: !5121)
!5124 = !DILocation(line: 1660, column: 15, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !4900, file: !2601, line: 1660, column: 8)
!5126 = !DILocation(line: 1660, column: 19, scope: !5125)
!5127 = !DILocation(line: 1660, column: 8, scope: !4900)
!5128 = !DILocation(line: 1661, column: 23, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5125, file: !2601, line: 1660, column: 28)
!5130 = !DILocation(line: 1661, column: 11, scope: !5129)
!5131 = !DILocation(line: 1665, column: 22, scope: !5129)
!5132 = !DILocation(line: 1666, column: 21, scope: !5129)
!5133 = !DILocation(line: 1668, column: 5, scope: !5129)
!5134 = !DILocation(line: 1677, column: 30, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5136, file: !2601, line: 1676, column: 49)
!5136 = distinct !DILexicalBlock(scope: !4900, file: !2601, line: 1676, column: 8)
!5137 = !DILocation(line: 1677, column: 5, scope: !5135)
!5138 = !DILocation(line: 1680, column: 4, scope: !4900)
!5139 = !DILocation(line: 0, scope: !5081)
!5140 = !DILocation(line: 1597, column: 14, scope: !4902)
!5141 = !DILocation(line: 1699, column: 11, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1699, column: 7)
!5143 = !DILocation(line: 1699, column: 7, scope: !4831)
!5144 = !DILocation(line: 1725, column: 7, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1725, column: 7)
!5146 = !DILocation(line: 1725, column: 12, scope: !5145)
!5147 = !DILocation(line: 1747, column: 13, scope: !4912)
!5148 = !DILocation(line: 1747, column: 7, scope: !4831)
!5149 = !DILocation(line: 1722, column: 24, scope: !4831)
!5150 = !DILocation(line: 1725, column: 7, scope: !4831)
!5151 = !DILocation(line: 1729, column: 7, scope: !4831)
!5152 = !DILocation(line: 1736, column: 13, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !4831, file: !2601, line: 1736, column: 7)
!5154 = !DILocation(line: 1735, column: 19, scope: !4831)
!5155 = !DILocation(line: 1736, column: 7, scope: !4831)
!5156 = !DILocation(line: 1748, column: 10, scope: !4911)
!5157 = !DILocation(line: 1750, column: 15, scope: !4910)
!5158 = !DILocation(line: 1750, column: 8, scope: !4911)
!5159 = !DILocation(line: 0, scope: !4909)
!5160 = !DILocation(line: 1756, column: 15, scope: !4918)
!5161 = !DILocation(line: 1756, column: 9, scope: !4909)
!5162 = !DILocation(line: 1758, column: 7, scope: !4914)
!5163 = !DILocation(line: 0, scope: !4914)
!5164 = !DILocation(line: 1758, column: 7, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !4914, file: !2601, line: 1758, column: 7)
!5166 = !DILocation(line: 1764, column: 5, scope: !4909)
!5167 = !DILocation(line: 0, scope: !4911)
!5168 = !DILocation(line: 1764, column: 20, scope: !4909)
!5169 = !DILocation(line: 1764, column: 17, scope: !4909)
!5170 = !DILocation(line: 1765, column: 6, scope: !4920)
!5171 = !DILocation(line: 0, scope: !4920)
!5172 = !DILocation(line: 1765, column: 6, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !4920, file: !2601, line: 1765, column: 6)
!5174 = distinct !{!5174, !5166, !5175}
!5175 = !DILocation(line: 1766, column: 5, scope: !4909)
!5176 = !DILocation(line: 1773, column: 12, scope: !4925)
!5177 = !DILocation(line: 1773, column: 7, scope: !4831)
!5178 = !DILocation(line: 1773, column: 7, scope: !4925)
!5179 = !DILocation(line: 1774, column: 4, scope: !4923)
!5180 = !DILocation(line: 0, scope: !4923)
!5181 = !DILocation(line: 1774, column: 4, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !4923, file: !2601, line: 1774, column: 4)
!5183 = !DILocation(line: 1818, column: 8, scope: !4929)
!5184 = !DILocation(line: 1818, column: 27, scope: !4929)
!5185 = !DILocation(line: 1818, column: 25, scope: !4929)
!5186 = !DILocation(line: 1818, column: 8, scope: !4930)
!5187 = !DILocation(line: 1819, column: 5, scope: !4927)
!5188 = !DILocation(line: 0, scope: !4927)
!5189 = !DILocation(line: 1819, column: 5, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !4927, file: !2601, line: 1819, column: 5)
!5191 = !DILocation(line: 1822, column: 14, scope: !4935)
!5192 = !DILocation(line: 1822, column: 8, scope: !4930)
!5193 = !DILocation(line: 1823, column: 5, scope: !4933)
!5194 = !DILocation(line: 0, scope: !4933)
!5195 = !DILocation(line: 1823, column: 5, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !4933, file: !2601, line: 1823, column: 5)
!5197 = !DILocation(line: 1826, column: 20, scope: !4930)
!5198 = !DILocation(line: 1827, column: 4, scope: !4930)
!5199 = !DILocation(line: 0, scope: !4930)
!5200 = !DILocation(line: 1827, column: 21, scope: !4930)
!5201 = !DILocation(line: 1827, column: 18, scope: !4930)
!5202 = !DILocation(line: 1828, column: 5, scope: !4937)
!5203 = !DILocation(line: 0, scope: !4937)
!5204 = !DILocation(line: 1828, column: 5, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !4937, file: !2601, line: 1828, column: 5)
!5206 = distinct !{!5206, !5198, !5207}
!5207 = !DILocation(line: 1829, column: 4, scope: !4930)
!5208 = !DILocation(line: 1831, column: 4, scope: !4940)
!5209 = !DILocation(line: 0, scope: !4940)
!5210 = !DILocation(line: 1831, column: 4, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !4940, file: !2601, line: 1831, column: 4)
!5212 = !DILocation(line: 1835, column: 16, scope: !4831)
!5213 = !DILocation(line: 1835, column: 3, scope: !4831)
!5214 = !DILocation(line: 1836, column: 4, scope: !4942)
!5215 = !DILocation(line: 0, scope: !4942)
!5216 = !DILocation(line: 1836, column: 4, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !4942, file: !2601, line: 1836, column: 4)
!5218 = !DILocation(line: 1837, column: 4, scope: !4943)
!5219 = distinct !{!5219, !5213, !5220}
!5220 = !DILocation(line: 1838, column: 3, scope: !4831)
!5221 = !DILocation(line: 1844, column: 1, scope: !4804)
!5222 = distinct !DISubprogram(name: "extract_conversion", scope: !2601, file: !2601, line: 642, type: !5223, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5225)
!5223 = !DISubroutineType(types: !5224)
!5224 = !{!133, !4879, !133}
!5225 = !{!5226, !5227}
!5226 = !DILocalVariable(name: "conv", arg: 1, scope: !5222, file: !2601, line: 642, type: !4879)
!5227 = !DILocalVariable(name: "sp", arg: 2, scope: !5222, file: !2601, line: 643, type: !133)
!5228 = !DILocation(line: 0, scope: !5222)
!5229 = !DILocation(line: 645, column: 10, scope: !5222)
!5230 = !DILocation(line: 653, column: 2, scope: !5222)
!5231 = !DILocation(line: 654, column: 6, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5222, file: !2601, line: 654, column: 6)
!5233 = !DILocation(line: 654, column: 10, scope: !5232)
!5234 = !DILocation(line: 654, column: 6, scope: !5222)
!5235 = !DILocation(line: 655, column: 24, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5232, file: !2601, line: 654, column: 18)
!5237 = !DILocation(line: 655, column: 19, scope: !5236)
!5238 = !DILocation(line: 656, column: 3, scope: !5236)
!5239 = !DILocation(line: 659, column: 7, scope: !5222)
!5240 = !DILocation(line: 660, column: 7, scope: !5222)
!5241 = !DILocation(line: 661, column: 7, scope: !5222)
!5242 = !DILocation(line: 662, column: 7, scope: !5222)
!5243 = !DILocation(line: 663, column: 7, scope: !5222)
!5244 = !DILocation(line: 665, column: 2, scope: !5222)
!5245 = !DILocation(line: 666, column: 1, scope: !5222)
!5246 = distinct !DISubprogram(name: "outs", scope: !2601, file: !2601, line: 1319, type: !5247, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5249)
!5247 = !DISubroutineType(types: !5248)
!5248 = !{!118, !3751, !117, !133, !133}
!5249 = !{!5250, !5251, !5252, !5253, !5254, !5255}
!5250 = !DILocalVariable(name: "out", arg: 1, scope: !5246, file: !2601, line: 1319, type: !3751)
!5251 = !DILocalVariable(name: "ctx", arg: 2, scope: !5246, file: !2601, line: 1320, type: !117)
!5252 = !DILocalVariable(name: "sp", arg: 3, scope: !5246, file: !2601, line: 1321, type: !133)
!5253 = !DILocalVariable(name: "ep", arg: 4, scope: !5246, file: !2601, line: 1322, type: !133)
!5254 = !DILocalVariable(name: "count", scope: !5246, file: !2601, line: 1324, type: !315)
!5255 = !DILocalVariable(name: "rc", scope: !5256, file: !2601, line: 1327, type: !118)
!5256 = distinct !DILexicalBlock(scope: !5246, file: !2601, line: 1326, column: 45)
!5257 = !DILocation(line: 0, scope: !5246)
!5258 = !DILocation(line: 1326, column: 2, scope: !5246)
!5259 = !DILocation(line: 1324, column: 9, scope: !5246)
!5260 = !DILocation(line: 1326, column: 13, scope: !5246)
!5261 = !DILocation(line: 1326, column: 19, scope: !5246)
!5262 = !DILocation(line: 1327, column: 21, scope: !5256)
!5263 = !DILocation(line: 1326, column: 36, scope: !5246)
!5264 = !DILocation(line: 1326, column: 39, scope: !5246)
!5265 = !DILocation(line: 1327, column: 24, scope: !5256)
!5266 = !DILocation(line: 1327, column: 16, scope: !5256)
!5267 = !DILocation(line: 1327, column: 12, scope: !5256)
!5268 = !DILocation(line: 0, scope: !5256)
!5269 = !DILocation(line: 1329, column: 10, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5256, file: !2601, line: 1329, column: 7)
!5271 = !DILocation(line: 1329, column: 7, scope: !5256)
!5272 = distinct !{!5272, !5258, !5273}
!5273 = !DILocation(line: 1333, column: 2, scope: !5246)
!5274 = !DILocation(line: 1336, column: 1, scope: !5246)
!5275 = distinct !DISubprogram(name: "encode_uint", scope: !2601, file: !2601, line: 788, type: !5276, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5278)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{!1242, !2623, !4879, !1242, !133}
!5278 = !{!5279, !5280, !5281, !5282, !5283, !5284, !5286, !5287}
!5279 = !DILocalVariable(name: "value", arg: 1, scope: !5275, file: !2601, line: 788, type: !2623)
!5280 = !DILocalVariable(name: "conv", arg: 2, scope: !5275, file: !2601, line: 789, type: !4879)
!5281 = !DILocalVariable(name: "bps", arg: 3, scope: !5275, file: !2601, line: 790, type: !1242)
!5282 = !DILocalVariable(name: "bpe", arg: 4, scope: !5275, file: !2601, line: 791, type: !133)
!5283 = !DILocalVariable(name: "upcase", scope: !5275, file: !2601, line: 793, type: !146)
!5284 = !DILocalVariable(name: "radix", scope: !5275, file: !2601, line: 794, type: !5285)
!5285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5286 = !DILocalVariable(name: "bp", scope: !5275, file: !2601, line: 795, type: !1242)
!5287 = !DILocalVariable(name: "lsv", scope: !5288, file: !2601, line: 798, type: !32)
!5288 = distinct !DILexicalBlock(scope: !5275, file: !2601, line: 797, column: 5)
!5289 = !DILocation(line: 0, scope: !5275)
!5290 = !DILocation(line: 793, column: 35, scope: !5275)
!5291 = !DILocation(line: 793, column: 24, scope: !5275)
!5292 = !DILocation(line: 793, column: 16, scope: !5275)
!5293 = !DILocation(line: 794, column: 29, scope: !5275)
!5294 = !DILocation(line: 795, column: 24, scope: !5275)
!5295 = !DILocation(line: 795, column: 17, scope: !5275)
!5296 = !DILocation(line: 797, column: 2, scope: !5275)
!5297 = !DILocation(line: 802, column: 9, scope: !5288)
!5298 = !DILocation(line: 798, column: 22, scope: !5288)
!5299 = !DILocation(line: 0, scope: !5288)
!5300 = !DILocation(line: 800, column: 16, scope: !5288)
!5301 = !DILocation(line: 800, column: 11, scope: !5288)
!5302 = !DILocation(line: 800, column: 4, scope: !5288)
!5303 = !DILocation(line: 800, column: 9, scope: !5288)
!5304 = !DILocation(line: 803, column: 18, scope: !5275)
!5305 = !DILocation(line: 803, column: 24, scope: !5275)
!5306 = !DILocation(line: 803, column: 2, scope: !5288)
!5307 = distinct !{!5307, !5296, !5308}
!5308 = !DILocation(line: 803, column: 37, scope: !5275)
!5309 = !DILocation(line: 808, column: 12, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5275, file: !2601, line: 808, column: 6)
!5311 = !DILocation(line: 808, column: 6, scope: !5275)
!5312 = !DILocation(line: 809, column: 7, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5310, file: !2601, line: 808, column: 23)
!5314 = !DILocation(line: 813, column: 3, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !2601, line: 811, column: 27)
!5316 = distinct !DILexicalBlock(scope: !5317, file: !2601, line: 811, column: 14)
!5317 = distinct !DILexicalBlock(scope: !5313, file: !2601, line: 809, column: 7)
!5318 = !DILocation(line: 0, scope: !5317)
!5319 = !DILocation(line: 818, column: 2, scope: !5275)
!5320 = distinct !DISubprogram(name: "store_count", scope: !2601, file: !2601, line: 1280, type: !5321, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5325)
!5321 = !DISubroutineType(types: !5322)
!5322 = !{null, !5323, !117, !118}
!5323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5324, size: 32)
!5324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4846)
!5325 = !{!5326, !5327, !5328}
!5326 = !DILocalVariable(name: "conv", arg: 1, scope: !5320, file: !2601, line: 1280, type: !5323)
!5327 = !DILocalVariable(name: "dp", arg: 2, scope: !5320, file: !2601, line: 1281, type: !117)
!5328 = !DILocalVariable(name: "count", arg: 3, scope: !5320, file: !2601, line: 1282, type: !118)
!5329 = !DILocation(line: 0, scope: !5320)
!5330 = !DILocation(line: 1284, column: 38, scope: !5320)
!5331 = !DILocation(line: 1284, column: 2, scope: !5320)
!5332 = !DILocation(line: 1286, column: 4, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5320, file: !2601, line: 1284, column: 50)
!5334 = !DILocation(line: 1286, column: 14, scope: !5333)
!5335 = !DILocation(line: 1287, column: 3, scope: !5333)
!5336 = !DILocation(line: 1289, column: 24, scope: !5333)
!5337 = !DILocation(line: 1289, column: 22, scope: !5333)
!5338 = !DILocation(line: 1290, column: 3, scope: !5333)
!5339 = !DILocation(line: 1292, column: 18, scope: !5333)
!5340 = !DILocation(line: 1292, column: 4, scope: !5333)
!5341 = !DILocation(line: 1292, column: 16, scope: !5333)
!5342 = !DILocation(line: 1293, column: 3, scope: !5333)
!5343 = !DILocation(line: 1295, column: 4, scope: !5333)
!5344 = !DILocation(line: 1295, column: 15, scope: !5333)
!5345 = !DILocation(line: 1296, column: 3, scope: !5333)
!5346 = !DILocation(line: 1298, column: 22, scope: !5333)
!5347 = !DILocation(line: 1298, column: 4, scope: !5333)
!5348 = !DILocation(line: 1298, column: 20, scope: !5333)
!5349 = !DILocation(line: 1299, column: 3, scope: !5333)
!5350 = !DILocation(line: 1301, column: 21, scope: !5333)
!5351 = !DILocation(line: 1301, column: 4, scope: !5333)
!5352 = !DILocation(line: 1301, column: 19, scope: !5333)
!5353 = !DILocation(line: 1302, column: 3, scope: !5333)
!5354 = !DILocation(line: 1304, column: 4, scope: !5333)
!5355 = !DILocation(line: 1304, column: 17, scope: !5333)
!5356 = !DILocation(line: 1305, column: 3, scope: !5333)
!5357 = !DILocation(line: 1307, column: 4, scope: !5333)
!5358 = !DILocation(line: 1307, column: 20, scope: !5333)
!5359 = !DILocation(line: 1308, column: 3, scope: !5333)
!5360 = !DILocation(line: 1316, column: 1, scope: !5320)
!5361 = distinct !DISubprogram(name: "isupper", scope: !5362, file: !5362, line: 16, type: !439, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5363)
!5362 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5363 = !{!5364}
!5364 = !DILocalVariable(name: "a", arg: 1, scope: !5361, file: !5362, line: 16, type: !118)
!5365 = !DILocation(line: 0, scope: !5361)
!5366 = !DILocation(line: 18, column: 29, scope: !5361)
!5367 = !DILocation(line: 18, column: 45, scope: !5361)
!5368 = !DILocation(line: 18, column: 2, scope: !5361)
!5369 = distinct !DISubprogram(name: "conversion_radix", scope: !2601, file: !2601, line: 761, type: !5370, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5372)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{!315, !135}
!5372 = !{!5373}
!5373 = !DILocalVariable(name: "specifier", arg: 1, scope: !5369, file: !2601, line: 761, type: !135)
!5374 = !DILocation(line: 0, scope: !5369)
!5375 = !DILocation(line: 763, column: 2, scope: !5369)
!5376 = !DILocation(line: 770, column: 3, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5369, file: !2601, line: 763, column: 21)
!5378 = !DILocation(line: 774, column: 3, scope: !5377)
!5379 = !DILocation(line: 0, scope: !5377)
!5380 = !DILocation(line: 776, column: 1, scope: !5369)
!5381 = distinct !DISubprogram(name: "extract_flags", scope: !2601, file: !2601, line: 339, type: !5223, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5382)
!5382 = !{!5383, !5384, !5385}
!5383 = !DILocalVariable(name: "conv", arg: 1, scope: !5381, file: !2601, line: 339, type: !4879)
!5384 = !DILocalVariable(name: "sp", arg: 2, scope: !5381, file: !2601, line: 340, type: !133)
!5385 = !DILocalVariable(name: "loop", scope: !5381, file: !2601, line: 342, type: !146)
!5386 = !DILocation(line: 0, scope: !5381)
!5387 = !DILocation(line: 344, column: 2, scope: !5381)
!5388 = !DILocation(line: 345, column: 11, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5381, file: !2601, line: 344, column: 5)
!5390 = !DILocation(line: 345, column: 3, scope: !5389)
!5391 = !DILocation(line: 351, column: 4, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5389, file: !2601, line: 345, column: 16)
!5393 = !DILocation(line: 354, column: 4, scope: !5392)
!5394 = !DILocation(line: 357, column: 4, scope: !5392)
!5395 = !DILocation(line: 360, column: 4, scope: !5392)
!5396 = !DILocation(line: 0, scope: !5392)
!5397 = !DILocation(line: 370, column: 12, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5381, file: !2601, line: 370, column: 6)
!5399 = !DILocation(line: 370, column: 22, scope: !5398)
!5400 = !DILocation(line: 371, column: 19, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5398, file: !2601, line: 370, column: 42)
!5402 = !DILocation(line: 372, column: 2, scope: !5401)
!5403 = !DILocation(line: 376, column: 2, scope: !5381)
!5404 = distinct !DISubprogram(name: "extract_width", scope: !2601, file: !2601, line: 388, type: !5223, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5405)
!5405 = !{!5406, !5407, !5408, !5409}
!5406 = !DILocalVariable(name: "conv", arg: 1, scope: !5404, file: !2601, line: 388, type: !4879)
!5407 = !DILocalVariable(name: "sp", arg: 2, scope: !5404, file: !2601, line: 389, type: !133)
!5408 = !DILocalVariable(name: "wp", scope: !5404, file: !2601, line: 398, type: !133)
!5409 = !DILocalVariable(name: "width", scope: !5404, file: !2601, line: 399, type: !315)
!5410 = !DILocation(line: 0, scope: !5404)
!5411 = !DILocation(line: 391, column: 8, scope: !5404)
!5412 = !DILocation(line: 391, column: 22, scope: !5404)
!5413 = !DILocation(line: 393, column: 6, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5404, file: !2601, line: 393, column: 6)
!5415 = !DILocation(line: 393, column: 10, scope: !5414)
!5416 = !DILocation(line: 393, column: 6, scope: !5404)
!5417 = !DILocation(line: 394, column: 20, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5414, file: !2601, line: 393, column: 18)
!5419 = !DILocation(line: 395, column: 10, scope: !5418)
!5420 = !DILocation(line: 395, column: 3, scope: !5418)
!5421 = !DILocation(line: 399, column: 17, scope: !5404)
!5422 = !DILocation(line: 401, column: 6, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5404, file: !2601, line: 401, column: 6)
!5424 = !DILocation(line: 401, column: 9, scope: !5423)
!5425 = !DILocation(line: 401, column: 6, scope: !5404)
!5426 = !DILocation(line: 402, column: 23, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5423, file: !2601, line: 401, column: 16)
!5428 = !DILocation(line: 403, column: 9, scope: !5427)
!5429 = !DILocation(line: 403, column: 21, scope: !5427)
!5430 = !DILocation(line: 405, column: 11, scope: !5427)
!5431 = !DILocation(line: 404, column: 21, scope: !5427)
!5432 = !DILocation(line: 406, column: 2, scope: !5427)
!5433 = !DILocation(line: 409, column: 1, scope: !5404)
!5434 = distinct !DISubprogram(name: "extract_prec", scope: !2601, file: !2601, line: 420, type: !5223, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5435)
!5435 = !{!5436, !5437, !5438}
!5436 = !DILocalVariable(name: "conv", arg: 1, scope: !5434, file: !2601, line: 420, type: !4879)
!5437 = !DILocalVariable(name: "sp", arg: 2, scope: !5434, file: !2601, line: 421, type: !133)
!5438 = !DILocalVariable(name: "prec", scope: !5434, file: !2601, line: 435, type: !315)
!5439 = !DILocation(line: 0, scope: !5434)
!5440 = !DILocation(line: 423, column: 24, scope: !5434)
!5441 = !DILocation(line: 423, column: 28, scope: !5434)
!5442 = !DILocation(line: 423, column: 8, scope: !5434)
!5443 = !DILocation(line: 423, column: 21, scope: !5434)
!5444 = !DILocation(line: 425, column: 6, scope: !5434)
!5445 = !DILocation(line: 428, column: 2, scope: !5434)
!5446 = !DILocation(line: 430, column: 6, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5434, file: !2601, line: 430, column: 6)
!5448 = !DILocation(line: 430, column: 10, scope: !5447)
!5449 = !DILocation(line: 430, column: 6, scope: !5434)
!5450 = !DILocation(line: 431, column: 19, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5447, file: !2601, line: 430, column: 18)
!5452 = !DILocation(line: 432, column: 10, scope: !5451)
!5453 = !DILocation(line: 432, column: 3, scope: !5451)
!5454 = !DILocation(line: 435, column: 16, scope: !5434)
!5455 = !DILocation(line: 437, column: 8, scope: !5434)
!5456 = !DILocation(line: 437, column: 19, scope: !5434)
!5457 = !DILocation(line: 439, column: 10, scope: !5434)
!5458 = !DILocation(line: 438, column: 20, scope: !5434)
!5459 = !DILocation(line: 441, column: 9, scope: !5434)
!5460 = !DILocation(line: 442, column: 1, scope: !5434)
!5461 = distinct !DISubprogram(name: "extract_length", scope: !2601, file: !2601, line: 453, type: !5223, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5462)
!5462 = !{!5463, !5464}
!5463 = !DILocalVariable(name: "conv", arg: 1, scope: !5461, file: !2601, line: 453, type: !4879)
!5464 = !DILocalVariable(name: "sp", arg: 2, scope: !5461, file: !2601, line: 454, type: !133)
!5465 = !DILocation(line: 0, scope: !5461)
!5466 = !DILocation(line: 456, column: 10, scope: !5461)
!5467 = !DILocation(line: 456, column: 2, scope: !5461)
!5468 = !DILocation(line: 458, column: 8, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !2601, line: 458, column: 7)
!5470 = distinct !DILexicalBlock(scope: !5461, file: !2601, line: 456, column: 15)
!5471 = !DILocation(line: 458, column: 7, scope: !5469)
!5472 = !DILocation(line: 458, column: 13, scope: !5469)
!5473 = !DILocation(line: 0, scope: !5469)
!5474 = !DILocation(line: 458, column: 7, scope: !5470)
!5475 = !DILocation(line: 459, column: 21, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5469, file: !2601, line: 458, column: 21)
!5477 = !DILocation(line: 460, column: 4, scope: !5476)
!5478 = !DILocation(line: 461, column: 3, scope: !5476)
!5479 = !DILocation(line: 462, column: 21, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5469, file: !2601, line: 461, column: 10)
!5481 = !DILocation(line: 466, column: 8, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5470, file: !2601, line: 466, column: 7)
!5483 = !DILocation(line: 466, column: 7, scope: !5482)
!5484 = !DILocation(line: 466, column: 13, scope: !5482)
!5485 = !DILocation(line: 0, scope: !5482)
!5486 = !DILocation(line: 466, column: 7, scope: !5470)
!5487 = !DILocation(line: 467, column: 21, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5482, file: !2601, line: 466, column: 21)
!5489 = !DILocation(line: 468, column: 4, scope: !5488)
!5490 = !DILocation(line: 469, column: 3, scope: !5488)
!5491 = !DILocation(line: 470, column: 21, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5482, file: !2601, line: 469, column: 10)
!5493 = !DILocation(line: 474, column: 9, scope: !5470)
!5494 = !DILocation(line: 474, column: 20, scope: !5470)
!5495 = !DILocation(line: 475, column: 3, scope: !5470)
!5496 = !DILocation(line: 476, column: 3, scope: !5470)
!5497 = !DILocation(line: 478, column: 9, scope: !5470)
!5498 = !DILocation(line: 478, column: 20, scope: !5470)
!5499 = !DILocation(line: 479, column: 3, scope: !5470)
!5500 = !DILocation(line: 480, column: 3, scope: !5470)
!5501 = !DILocation(line: 482, column: 9, scope: !5470)
!5502 = !DILocation(line: 482, column: 20, scope: !5470)
!5503 = !DILocation(line: 483, column: 3, scope: !5470)
!5504 = !DILocation(line: 484, column: 3, scope: !5470)
!5505 = !DILocation(line: 486, column: 9, scope: !5470)
!5506 = !DILocation(line: 486, column: 20, scope: !5470)
!5507 = !DILocation(line: 487, column: 3, scope: !5470)
!5508 = !DILocation(line: 492, column: 21, scope: !5470)
!5509 = !DILocation(line: 493, column: 3, scope: !5470)
!5510 = !DILocation(line: 495, column: 9, scope: !5470)
!5511 = !DILocation(line: 495, column: 20, scope: !5470)
!5512 = !DILocation(line: 496, column: 3, scope: !5470)
!5513 = !DILocation(line: 498, column: 2, scope: !5461)
!5514 = distinct !DISubprogram(name: "extract_specifier", scope: !2601, file: !2601, line: 513, type: !5223, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5515)
!5515 = !{!5516, !5517, !5518, !5519}
!5516 = !DILocalVariable(name: "conv", arg: 1, scope: !5514, file: !2601, line: 513, type: !4879)
!5517 = !DILocalVariable(name: "sp", arg: 2, scope: !5514, file: !2601, line: 514, type: !133)
!5518 = !DILocalVariable(name: "unsupported", scope: !5514, file: !2601, line: 516, type: !146)
!5519 = !DILabel(scope: !5520, name: "int_conv", file: !2601, line: 526)
!5520 = distinct !DILexicalBlock(scope: !5514, file: !2601, line: 520, column: 27)
!5521 = !DILocation(line: 0, scope: !5514)
!5522 = !DILocation(line: 518, column: 20, scope: !5514)
!5523 = !DILocation(line: 518, column: 8, scope: !5514)
!5524 = !DILocation(line: 518, column: 18, scope: !5514)
!5525 = !DILocation(line: 520, column: 2, scope: !5514)
!5526 = !DILocation(line: 525, column: 3, scope: !5520)
!5527 = !DILocation(line: 0, scope: !5520)
!5528 = !DILocation(line: 526, column: 1, scope: !5520)
!5529 = !DILocation(line: 528, column: 24, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5520, file: !2601, line: 528, column: 7)
!5531 = !DILocation(line: 528, column: 7, scope: !5520)
!5532 = !DILocation(line: 535, column: 23, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5520, file: !2601, line: 535, column: 7)
!5534 = !DILocation(line: 535, column: 7, scope: !5520)
!5535 = !DILocation(line: 536, column: 36, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5533, file: !2601, line: 535, column: 31)
!5537 = !DILocation(line: 537, column: 3, scope: !5536)
!5538 = !DILocation(line: 570, column: 9, scope: !5520)
!5539 = !DILocation(line: 570, column: 23, scope: !5520)
!5540 = !DILocation(line: 575, column: 4, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5542, file: !2601, line: 573, column: 48)
!5542 = distinct !DILexicalBlock(scope: !5520, file: !2601, line: 573, column: 7)
!5543 = !DILocation(line: 603, column: 9, scope: !5520)
!5544 = !DILocation(line: 603, column: 23, scope: !5520)
!5545 = !DILocation(line: 605, column: 24, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5520, file: !2601, line: 605, column: 7)
!5547 = !DILocation(line: 605, column: 7, scope: !5520)
!5548 = !DILocation(line: 612, column: 9, scope: !5520)
!5549 = !DILocation(line: 612, column: 23, scope: !5520)
!5550 = !DILocation(line: 619, column: 24, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5520, file: !2601, line: 619, column: 7)
!5552 = !DILocation(line: 619, column: 7, scope: !5520)
!5553 = !DILocation(line: 625, column: 9, scope: !5520)
!5554 = !DILocation(line: 625, column: 17, scope: !5520)
!5555 = !DILocation(line: 626, column: 3, scope: !5520)
!5556 = !DILocation(line: 629, column: 20, scope: !5514)
!5557 = !DILocation(line: 629, column: 8, scope: !5514)
!5558 = !DILocation(line: 518, column: 23, scope: !5514)
!5559 = !DILocation(line: 631, column: 2, scope: !5514)
!5560 = distinct !DISubprogram(name: "extract_decimal", scope: !2601, file: !2601, line: 318, type: !5561, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5564)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{!315, !5563}
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!5564 = !{!5565, !5566, !5567}
!5565 = !DILocalVariable(name: "str", arg: 1, scope: !5560, file: !2601, line: 318, type: !5563)
!5566 = !DILocalVariable(name: "sp", scope: !5560, file: !2601, line: 320, type: !133)
!5567 = !DILocalVariable(name: "val", scope: !5560, file: !2601, line: 321, type: !315)
!5568 = !DILocation(line: 0, scope: !5560)
!5569 = !DILocation(line: 320, column: 19, scope: !5560)
!5570 = !DILocation(line: 323, column: 37, scope: !5560)
!5571 = !DILocation(line: 323, column: 17, scope: !5560)
!5572 = !DILocation(line: 323, column: 9, scope: !5560)
!5573 = !DILocation(line: 323, column: 2, scope: !5560)
!5574 = !DILocation(line: 324, column: 13, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5560, file: !2601, line: 323, column: 43)
!5576 = !DILocation(line: 324, column: 24, scope: !5575)
!5577 = !DILocation(line: 324, column: 19, scope: !5575)
!5578 = !DILocation(line: 324, column: 27, scope: !5575)
!5579 = distinct !{!5579, !5573, !5580}
!5580 = !DILocation(line: 325, column: 2, scope: !5560)
!5581 = !DILocation(line: 326, column: 7, scope: !5560)
!5582 = !DILocation(line: 327, column: 2, scope: !5560)
!5583 = distinct !DISubprogram(name: "isdigit", scope: !5362, file: !5362, line: 43, type: !439, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !5584)
!5584 = !{!5585}
!5585 = !DILocalVariable(name: "a", arg: 1, scope: !5583, file: !5362, line: 43, type: !118)
!5586 = !DILocation(line: 0, scope: !5583)
!5587 = !DILocation(line: 45, column: 29, scope: !5583)
!5588 = !DILocation(line: 45, column: 45, scope: !5583)
!5589 = !DILocation(line: 45, column: 2, scope: !5583)
!5590 = distinct !DISubprogram(name: "assert_post_action", scope: !5591, file: !5591, line: 26, type: !5592, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2635, retainedNodes: !5594)
!5591 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5592 = !DISubroutineType(types: !5593)
!5593 = !{null, !133, !32}
!5594 = !{!5595, !5596}
!5595 = !DILocalVariable(name: "file", arg: 1, scope: !5590, file: !5591, line: 26, type: !133)
!5596 = !DILocalVariable(name: "line", arg: 2, scope: !5590, file: !5591, line: 26, type: !32)
!5597 = !DILocation(line: 0, scope: !5590)
!5598 = !DILocation(line: 43, column: 2, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5590, file: !5591, line: 43, column: 2)
!5600 = !{i64 2154159073, i64 2154159089, i64 2154159115, i64 2154159143, i64 2154159163}
!5601 = !DILocation(line: 44, column: 1, scope: !5590)
!5602 = distinct !DISubprogram(name: "assert_print", scope: !5591, file: !5591, line: 46, type: !3783, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2635, retainedNodes: !5603)
!5603 = !{!5604, !5605}
!5604 = !DILocalVariable(name: "fmt", arg: 1, scope: !5602, file: !5591, line: 46, type: !133)
!5605 = !DILocalVariable(name: "ap", scope: !5602, file: !5591, line: 48, type: !5606)
!5606 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3717, line: 99, baseType: !5607)
!5607 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3717, line: 40, baseType: !5608)
!5608 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5591, baseType: !5609)
!5609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5610)
!5610 = !{!5611}
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5609, file: !5591, line: 48, baseType: !117, size: 32)
!5612 = !DILocation(line: 0, scope: !5602)
!5613 = !DILocation(line: 48, column: 2, scope: !5602)
!5614 = !DILocation(line: 48, column: 10, scope: !5602)
!5615 = !DILocation(line: 50, column: 2, scope: !5602)
!5616 = !DILocation(line: 52, column: 2, scope: !5602)
!5617 = !DILocation(line: 54, column: 2, scope: !5602)
!5618 = !DILocation(line: 55, column: 1, scope: !5602)
!5619 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5620, file: !5620, line: 9, type: !365, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !2149)
!5620 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!5621 = !DILocation(line: 11, column: 1, scope: !5619)
!5622 = !{i64 2147561350, i64 2147561393, i64 2147561433}
!5623 = !DILocation(line: 12, column: 1, scope: !5619)
!5624 = !{i64 2147565577, i64 2147565620, i64 2147565660}
!5625 = !DILocation(line: 13, column: 1, scope: !5619)
!5626 = !{i64 2147565786, i64 2147565829, i64 2147565869}
!5627 = !DILocation(line: 14, column: 1, scope: !5619)
!5628 = !{i64 2147565955, i64 2147565998, i64 2147566038}
!5629 = !DILocation(line: 15, column: 1, scope: !5619)
!5630 = !{i64 2147566118, i64 2147566161, i64 2147566201}
!5631 = !DILocation(line: 16, column: 1, scope: !5619)
!5632 = !{i64 2147566302, i64 2147566345, i64 2147566385}
!5633 = !DILocation(line: 17, column: 1, scope: !5619)
!5634 = !{i64 2147566481, i64 2147566524, i64 2147566564}
!5635 = !DILocation(line: 18, column: 1, scope: !5619)
!5636 = !{i64 2147566723, i64 2147566766, i64 2147566806}
!5637 = !DILocation(line: 19, column: 1, scope: !5619)
!5638 = !{i64 2147566958, i64 2147567001, i64 2147567041}
!5639 = !DILocation(line: 20, column: 1, scope: !5619)
!5640 = !{i64 2147567144, i64 2147567187, i64 2147567227}
!5641 = !DILocation(line: 21, column: 1, scope: !5619)
!5642 = !{i64 2147567360, i64 2147567403, i64 2147567443}
!5643 = !DILocation(line: 22, column: 1, scope: !5619)
!5644 = !{i64 2147567563, i64 2147567606, i64 2147567646}
!5645 = !DILocation(line: 23, column: 1, scope: !5619)
!5646 = !{i64 2147567766, i64 2147567809, i64 2147567849}
!5647 = !DILocation(line: 24, column: 1, scope: !5619)
!5648 = !{i64 2147567941, i64 2147567984, i64 2147568024}
!5649 = !DILocation(line: 25, column: 1, scope: !5619)
!5650 = !{i64 2147568151, i64 2147568194, i64 2147568234}
!5651 = !DILocation(line: 26, column: 1, scope: !5619)
!5652 = !{i64 2147568355, i64 2147568398, i64 2147568438}
!5653 = !DILocation(line: 27, column: 1, scope: !5619)
!5654 = !{i64 2147568548, i64 2147568591, i64 2147568631}
!5655 = !DILocation(line: 28, column: 1, scope: !5619)
!5656 = !{i64 2147568750, i64 2147568793, i64 2147568833}
!5657 = !DILocation(line: 29, column: 1, scope: !5619)
!5658 = !{i64 2147568977, i64 2147569020, i64 2147569060}
!5659 = !DILocation(line: 30, column: 1, scope: !5619)
!5660 = !{i64 2147569179, i64 2147569222, i64 2147569262}
!5661 = !DILocation(line: 31, column: 1, scope: !5619)
!5662 = !{i64 2147569394, i64 2147569437, i64 2147569477}
!5663 = !DILocation(line: 32, column: 1, scope: !5619)
!5664 = !{i64 2147569566, i64 2147569609, i64 2147569649}
!5665 = !DILocation(line: 33, column: 1, scope: !5619)
!5666 = !{i64 2147569768, i64 2147569811, i64 2147569851}
!5667 = !DILocation(line: 34, column: 1, scope: !5619)
!5668 = !{i64 2147569994, i64 2147570037, i64 2147570077}
!5669 = !DILocation(line: 35, column: 1, scope: !5619)
!5670 = !{i64 2147570193, i64 2147570236, i64 2147570276}
!5671 = !DILocation(line: 36, column: 1, scope: !5619)
!5672 = !{i64 2147570368, i64 2147570411, i64 2147570451}
!5673 = !DILocation(line: 37, column: 1, scope: !5619)
!5674 = !{i64 2147570621, i64 2147570664, i64 2147570704}
!5675 = !DILocation(line: 38, column: 1, scope: !5619)
!5676 = !{i64 2147570862, i64 2147570905, i64 2147570945}
!5677 = !DILocation(line: 39, column: 1, scope: !5619)
!5678 = !{i64 2147571097, i64 2147571140, i64 2147571180}
!5679 = !DILocation(line: 40, column: 1, scope: !5619)
!5680 = !{i64 2147571329, i64 2147571372, i64 2147571412}
!5681 = !DILocation(line: 41, column: 1, scope: !5619)
!5682 = !{i64 2147571576, i64 2147571619, i64 2147571659}
!5683 = !DILocation(line: 42, column: 1, scope: !5619)
!5684 = !{i64 2147571802, i64 2147571845, i64 2147571885}
!5685 = !DILocation(line: 43, column: 1, scope: !5619)
!5686 = !{i64 2147572028, i64 2147572071, i64 2147572111}
!5687 = !DILocation(line: 44, column: 1, scope: !5619)
!5688 = !{i64 2147572287, i64 2147572330, i64 2147572370}
!5689 = !DILocation(line: 45, column: 1, scope: !5619)
!5690 = !{i64 2147572513, i64 2147572556, i64 2147572596}
!5691 = !DILocation(line: 46, column: 1, scope: !5619)
!5692 = !{i64 2147572748, i64 2147572791, i64 2147572831}
!5693 = !DILocation(line: 47, column: 1, scope: !5619)
!5694 = !{i64 2147572986, i64 2147573029, i64 2147573069}
!5695 = !DILocation(line: 48, column: 1, scope: !5619)
!5696 = !{i64 2147573260, i64 2147573303, i64 2147573343}
!5697 = !DILocation(line: 49, column: 1, scope: !5619)
!5698 = !{i64 2147573498, i64 2147573541, i64 2147573581}
!5699 = !DILocation(line: 50, column: 1, scope: !5619)
!5700 = !{i64 2147573751, i64 2147573794, i64 2147573834}
!5701 = !DILocation(line: 51, column: 1, scope: !5619)
!5702 = !{i64 2147573995, i64 2147574038, i64 2147574078}
!5703 = !DILocation(line: 52, column: 1, scope: !5619)
!5704 = !{i64 2147578306, i64 2147578349, i64 2147578389}
!5705 = !DILocation(line: 53, column: 1, scope: !5619)
!5706 = !{i64 2147578547, i64 2147578590, i64 2147578630}
!5707 = !DILocation(line: 54, column: 1, scope: !5619)
!5708 = !{i64 2147578794, i64 2147578837, i64 2147578877}
!5709 = !DILocation(line: 55, column: 1, scope: !5619)
!5710 = !{i64 2147579029, i64 2147579072, i64 2147579112}
!5711 = !DILocation(line: 56, column: 1, scope: !5619)
!5712 = !{i64 2147579264, i64 2147579307, i64 2147579347}
!5713 = !DILocation(line: 57, column: 1, scope: !5619)
!5714 = !{i64 2147579499, i64 2147579542, i64 2147579582}
!5715 = !DILocation(line: 58, column: 1, scope: !5619)
!5716 = !{i64 2147579737, i64 2147579780, i64 2147579820}
!5717 = !DILocation(line: 59, column: 1, scope: !5619)
!5718 = !{i64 2147579978, i64 2147580021, i64 2147580061}
!5719 = !DILocation(line: 60, column: 1, scope: !5619)
!5720 = !{i64 2147580258, i64 2147580301, i64 2147580341}
!5721 = !DILocation(line: 61, column: 1, scope: !5619)
!5722 = !{i64 2147580517, i64 2147580560, i64 2147580600}
!5723 = !DILocation(line: 62, column: 1, scope: !5619)
!5724 = !{i64 2147580755, i64 2147580798, i64 2147580838}
!5725 = !DILocation(line: 63, column: 1, scope: !5619)
!5726 = !{i64 2147581005, i64 2147581048, i64 2147581088}
!5727 = !DILocation(line: 64, column: 1, scope: !5619)
!5728 = !{i64 2147581234, i64 2147581277, i64 2147581317}
!5729 = !DILocation(line: 65, column: 1, scope: !5619)
!5730 = !{i64 2147581442, i64 2147581485, i64 2147581525}
!5731 = !DILocation(line: 66, column: 1, scope: !5619)
!5732 = !{i64 2147581653, i64 2147581696, i64 2147581736}
!5733 = !DILocation(line: 67, column: 1, scope: !5619)
!5734 = !{i64 2147581888, i64 2147581931, i64 2147581971}
!5735 = !DILocation(line: 68, column: 1, scope: !5619)
!5736 = !{i64 2147582117, i64 2147582160, i64 2147582200}
!5737 = !DILocation(line: 69, column: 1, scope: !5619)
!5738 = !{i64 2147582355, i64 2147582398, i64 2147582438}
!5739 = !DILocation(line: 70, column: 1, scope: !5619)
!5740 = !{i64 2147582587, i64 2147582630, i64 2147582670}
!5741 = !DILocation(line: 71, column: 1, scope: !5619)
!5742 = !{i64 2147582813, i64 2147582856, i64 2147582896}
!5743 = !DILocation(line: 72, column: 1, scope: !5619)
!5744 = !{i64 2147583030, i64 2147583073, i64 2147583113}
!5745 = !DILocation(line: 73, column: 1, scope: !5619)
!5746 = !{i64 2147583262, i64 2147583305, i64 2147583345}
!5747 = !DILocation(line: 74, column: 1, scope: !5619)
!5748 = !{i64 2147583488, i64 2147583531, i64 2147583571}
!5749 = !DILocation(line: 75, column: 1, scope: !5619)
!5750 = !{i64 2147583702, i64 2147583745, i64 2147583785}
!5751 = !DILocation(line: 76, column: 1, scope: !5619)
!5752 = !{i64 2147583922, i64 2147583965, i64 2147584005}
!5753 = !DILocation(line: 77, column: 1, scope: !5619)
!5754 = !{i64 2147584154, i64 2147584197, i64 2147584237}
!5755 = !DILocation(line: 78, column: 1, scope: !5619)
!5756 = !{i64 2147584362, i64 2147584405, i64 2147584445}
!5757 = !DILocation(line: 79, column: 1, scope: !5619)
!5758 = !{i64 2147584567, i64 2147584610, i64 2147584650}
!5759 = !DILocation(line: 80, column: 1, scope: !5619)
!5760 = !{i64 2147584784, i64 2147584827, i64 2147584867}
!5761 = !DILocation(line: 81, column: 1, scope: !5619)
!5762 = !{i64 2147584998, i64 2147585041, i64 2147585081}
!5763 = !DILocation(line: 82, column: 1, scope: !5619)
!5764 = !{i64 2147585224, i64 2147585267, i64 2147585307}
!5765 = !DILocation(line: 83, column: 1, scope: !5619)
!5766 = !{i64 2147585444, i64 2147585487, i64 2147585527}
!5767 = !DILocation(line: 84, column: 1, scope: !5619)
!5768 = !{i64 2147585649, i64 2147585692, i64 2147585732}
!5769 = !DILocation(line: 85, column: 1, scope: !5619)
!5770 = !{i64 2147585881, i64 2147585924, i64 2147585964}
!5771 = !DILocation(line: 86, column: 1, scope: !5619)
!5772 = !{i64 2147586116, i64 2147586159, i64 2147586199}
!5773 = !DILocation(line: 87, column: 1, scope: !5619)
!5774 = !{i64 2147586366, i64 2147586409, i64 2147586449}
!5775 = !DILocation(line: 88, column: 1, scope: !5619)
!5776 = !{i64 2147590677, i64 2147590720, i64 2147590760}
!5777 = !DILocation(line: 89, column: 1, scope: !5619)
!5778 = !{i64 2147590915, i64 2147590958, i64 2147590998}
!5779 = !DILocation(line: 90, column: 1, scope: !5619)
!5780 = !{i64 2147591126, i64 2147591169, i64 2147591209}
!5781 = !DILocation(line: 91, column: 1, scope: !5619)
!5782 = !{i64 2147591343, i64 2147591386, i64 2147591426}
!5783 = !DILocation(line: 92, column: 1, scope: !5619)
!5784 = !{i64 2147591539, i64 2147591582, i64 2147591622}
!5785 = !DILocation(line: 93, column: 1, scope: !5619)
!5786 = !{i64 2147591741, i64 2147591784, i64 2147591824}
!5787 = !DILocation(line: 94, column: 1, scope: !5619)
!5788 = !{i64 2147591934, i64 2147591977, i64 2147592017}
!5789 = !DILocation(line: 95, column: 1, scope: !5619)
!5790 = !{i64 2147592142, i64 2147592185, i64 2147592225}
!5791 = !DILocation(line: 96, column: 1, scope: !5619)
!5792 = !{i64 2147592338, i64 2147592381, i64 2147592421}
!5793 = !DILocation(line: 97, column: 1, scope: !5619)
!5794 = !{i64 2147592540, i64 2147592583, i64 2147592623}
!5795 = !DILocation(line: 98, column: 1, scope: !5619)
!5796 = !{i64 2147592751, i64 2147592794, i64 2147592834}
!5797 = !DILocation(line: 99, column: 1, scope: !5619)
!5798 = !{i64 2147592950, i64 2147592993, i64 2147593033}
!5799 = !DILocation(line: 100, column: 1, scope: !5619)
!5800 = !{i64 2147593125, i64 2147593168, i64 2147593208}
!5801 = !DILocation(line: 101, column: 1, scope: !5619)
!5802 = !{i64 2147593309, i64 2147593352, i64 2147593392}
!5803 = !DILocation(line: 102, column: 1, scope: !5619)
!5804 = !{i64 2147593511, i64 2147593554, i64 2147593594}
!5805 = !DILocation(line: 103, column: 1, scope: !5619)
!5806 = !{i64 2147593710, i64 2147593753, i64 2147593793}
!5807 = !DILocation(line: 104, column: 1, scope: !5619)
!5808 = !{i64 2147593876, i64 2147593919, i64 2147593959}
!5809 = !DILocation(line: 105, column: 1, scope: !5619)
!5810 = !{i64 2147594060, i64 2147594103, i64 2147594143}
!5811 = !DILocation(line: 106, column: 1, scope: !5619)
!5812 = !{i64 2147594250, i64 2147594293, i64 2147594333}
!5813 = !DILocation(line: 107, column: 1, scope: !5619)
!5814 = !{i64 2147594434, i64 2147594477, i64 2147594517}
!5815 = !DILocation(line: 108, column: 1, scope: !5619)
!5816 = !{i64 2147594648, i64 2147594691, i64 2147594731}
!5817 = !DILocation(line: 109, column: 1, scope: !5619)
!5818 = !{i64 2147594859, i64 2147594902, i64 2147594942}
!5819 = !DILocation(line: 110, column: 1, scope: !5619)
!5820 = !{i64 2147595082, i64 2147595125, i64 2147595165}
!5821 = !DILocation(line: 111, column: 1, scope: !5619)
!5822 = !{i64 2147595266, i64 2147595309, i64 2147595349}
!5823 = !DILocation(line: 112, column: 1, scope: !5619)
!5824 = !{i64 2147595480, i64 2147595523, i64 2147595563}
!5825 = !DILocation(line: 113, column: 1, scope: !5619)
!5826 = !{i64 2147595646, i64 2147595689, i64 2147595729}
!5827 = !DILocation(line: 114, column: 1, scope: !5619)
!5828 = !{i64 2147595827, i64 2147595870, i64 2147595910}
!5829 = !DILocation(line: 115, column: 1, scope: !5619)
!5830 = !{i64 2147596020, i64 2147596063, i64 2147596103}
!5831 = !DILocation(line: 116, column: 1, scope: !5619)
!5832 = !{i64 2147596246, i64 2147596289, i64 2147596329}
!5833 = !DILocation(line: 117, column: 1, scope: !5619)
!5834 = !{i64 2147596460, i64 2147596503, i64 2147596543}
!5835 = !DILocation(line: 118, column: 1, scope: !5619)
!5836 = !{i64 2147596686, i64 2147596729, i64 2147596769}
!5837 = !DILocation(line: 119, column: 1, scope: !5619)
!5838 = !{i64 2147596903, i64 2147596946, i64 2147596986}
!5839 = !DILocation(line: 120, column: 1, scope: !5619)
!5840 = !{i64 2147597180, i64 2147597223, i64 2147597263}
!5841 = !DILocation(line: 121, column: 1, scope: !5619)
!5842 = !{i64 2147597406, i64 2147597449, i64 2147597489}
!5843 = !DILocation(line: 122, column: 1, scope: !5619)
!5844 = !{i64 2147597614, i64 2147597657, i64 2147597697}
!5845 = !DILocation(line: 123, column: 1, scope: !5619)
!5846 = !{i64 2147597810, i64 2147597853, i64 2147597893}
!5847 = !DILocation(line: 124, column: 1, scope: !5619)
!5848 = !{i64 2147598075, i64 2147598118, i64 2147598158}
!5849 = !DILocation(line: 125, column: 1, scope: !5619)
!5850 = !{i64 2147598289, i64 2147598332, i64 2147598372}
!5851 = !DILocation(line: 126, column: 1, scope: !5619)
!5852 = !{i64 2147598464, i64 2147598507, i64 2147598547}
!5853 = !DILocation(line: 127, column: 1, scope: !5619)
!5854 = !{i64 2147598718, i64 2147598761, i64 2147598801}
!5855 = !DILocation(line: 128, column: 1, scope: !5619)
!5856 = !{i64 2147598917, i64 2147598960, i64 2147599000}
!5857 = !DILocation(line: 129, column: 1, scope: !5619)
!5858 = !{i64 2147599159, i64 2147599202, i64 2147599242}
!5859 = !DILocation(line: 130, column: 1, scope: !5619)
!5860 = !{i64 2147599322, i64 2147599365, i64 2147599405}
!5861 = !DILocation(line: 131, column: 1, scope: !5619)
!5862 = !{i64 2147599509, i64 2147599552, i64 2147599592}
!5863 = !DILocation(line: 132, column: 1, scope: !5619)
!5864 = !{i64 2147599702, i64 2147599745, i64 2147599785}
!5865 = !DILocation(line: 133, column: 1, scope: !5619)
!5866 = !{i64 2147603945, i64 2147603988, i64 2147604028}
!5867 = !DILocation(line: 134, column: 1, scope: !5619)
!5868 = !{i64 2147604159, i64 2147604202, i64 2147604242}
!5869 = !DILocation(line: 135, column: 1, scope: !5619)
!5870 = !{i64 2147604370, i64 2147604413, i64 2147604453}
!5871 = !DILocation(line: 136, column: 1, scope: !5619)
!5872 = !{i64 2147604590, i64 2147604633, i64 2147604673}
!5873 = !DILocation(line: 137, column: 1, scope: !5619)
!5874 = !{i64 2147604797, i64 2147604840, i64 2147604880}
!5875 = !DILocation(line: 138, column: 1, scope: !5619)
!5876 = !{i64 2147605070, i64 2147605113, i64 2147605153}
!5877 = !DILocation(line: 139, column: 1, scope: !5619)
!5878 = !{i64 2147605318, i64 2147605361, i64 2147605401}
!5879 = !DILocation(line: 140, column: 1, scope: !5619)
!5880 = !{i64 2147605517, i64 2147605560, i64 2147605600}
!5881 = !DILocation(line: 141, column: 1, scope: !5619)
!5882 = !{i64 2147605752, i64 2147605795, i64 2147605835}
!5883 = !DILocation(line: 142, column: 1, scope: !5619)
!5884 = !{i64 2147606002, i64 2147606045, i64 2147606085}
!5885 = !DILocation(line: 143, column: 1, scope: !5619)
!5886 = !{i64 2147606204, i64 2147606247, i64 2147606287}
!5887 = !DILocation(line: 144, column: 1, scope: !5619)
!5888 = !{i64 2147606427, i64 2147606470, i64 2147606510}
!5889 = !DILocation(line: 145, column: 1, scope: !5619)
!5890 = !{i64 2147606641, i64 2147606684, i64 2147606724}
!5891 = !DILocation(line: 146, column: 1, scope: !5619)
!5892 = !{i64 2147606885, i64 2147606928, i64 2147606968}
!5893 = !DILocation(line: 147, column: 1, scope: !5619)
!5894 = !{i64 2147607114, i64 2147607157, i64 2147607197}
!5895 = !DILocation(line: 148, column: 1, scope: !5619)
!5896 = !{i64 2147607343, i64 2147607386, i64 2147607426}
!5897 = !DILocation(line: 149, column: 1, scope: !5619)
!5898 = !{i64 2147607551, i64 2147607594, i64 2147607634}
!5899 = !DILocation(line: 150, column: 1, scope: !5619)
!5900 = !{i64 2147607789, i64 2147607832, i64 2147607872}
!5901 = !DILocation(line: 151, column: 1, scope: !5619)
!5902 = !{i64 2147608015, i64 2147608058, i64 2147608098}
!5903 = !DILocation(line: 152, column: 1, scope: !5619)
!5904 = !{i64 2147608274, i64 2147608317, i64 2147608357}
!5905 = !DILocation(line: 153, column: 1, scope: !5619)
!5906 = !{i64 2147608494, i64 2147608537, i64 2147608577}
!5907 = !DILocation(line: 154, column: 1, scope: !5619)
!5908 = !{i64 2147608726, i64 2147608769, i64 2147608809}
!5909 = !DILocation(line: 155, column: 1, scope: !5619)
!5910 = !{i64 2147608967, i64 2147609010, i64 2147609050}
!5911 = !DILocation(line: 156, column: 1, scope: !5619)
!5912 = !{i64 2147609208, i64 2147609251, i64 2147609291}
!5913 = !DILocation(line: 157, column: 1, scope: !5619)
!5914 = !{i64 2147609431, i64 2147609474, i64 2147609514}
!5915 = !DILocation(line: 158, column: 1, scope: !5619)
!5916 = !{i64 2147609648, i64 2147609691, i64 2147609731}
!5917 = !DILocation(line: 159, column: 1, scope: !5619)
!5918 = !{i64 2147609889, i64 2147609932, i64 2147609972}
!5919 = !DILocation(line: 160, column: 1, scope: !5619)
!5920 = !{i64 2147610076, i64 2147610119, i64 2147610159}
!5921 = !DILocation(line: 161, column: 1, scope: !5619)
!5922 = !{i64 2147610263, i64 2147610306, i64 2147610346}
!5923 = !DILocation(line: 162, column: 1, scope: !5619)
!5924 = !{i64 2147610426, i64 2147610469, i64 2147610509}
!5925 = !DILocation(line: 163, column: 1, scope: !5619)
!5926 = !{i64 2147610685, i64 2147610728, i64 2147610768}
!5927 = !DILocation(line: 164, column: 1, scope: !5619)
!5928 = !{i64 2147610908, i64 2147610951, i64 2147610991}
!5929 = !DILocation(line: 165, column: 1, scope: !5619)
!5930 = !{i64 2147611137, i64 2147611180, i64 2147611220}
!5931 = !DILocation(line: 166, column: 1, scope: !5619)
!5932 = !{i64 2147611333, i64 2147611376, i64 2147611416}
!5933 = !DILocation(line: 167, column: 1, scope: !5619)
!5934 = !{i64 2147611545, i64 2147611588, i64 2147611628}
!5935 = !DILocation(line: 168, column: 1, scope: !5619)
!5936 = !{i64 2147611766, i64 2147611809, i64 2147611849}
!5937 = !DILocation(line: 169, column: 1, scope: !5619)
!5938 = !{i64 2147611980, i64 2147612023, i64 2147612063}
!5939 = !DILocation(line: 170, column: 1, scope: !5619)
!5940 = !{i64 2147612170, i64 2147612213, i64 2147612253}
!5941 = !DILocation(line: 171, column: 1, scope: !5619)
!5942 = !{i64 2147616430, i64 2147616473, i64 2147616513}
!5943 = !DILocation(line: 172, column: 1, scope: !5619)
!5944 = !{i64 2147616635, i64 2147616678, i64 2147616718}
!5945 = !DILocation(line: 173, column: 1, scope: !5619)
!5946 = !{i64 2147616855, i64 2147616898, i64 2147616938}
!5947 = !DILocation(line: 174, column: 1, scope: !5619)
!5948 = !{i64 2147617056, i64 2147617099, i64 2147617139}
!5949 = !DILocation(line: 175, column: 1, scope: !5619)
!5950 = !{i64 2147617255, i64 2147617298, i64 2147617338}
!5951 = !DILocation(line: 176, column: 1, scope: !5619)
!5952 = !{i64 2147617460, i64 2147617503, i64 2147617543}
!5953 = !DILocation(line: 177, column: 1, scope: !5619)
!5954 = !{i64 2147617629, i64 2147617672, i64 2147617712}
!5955 = !DILocation(line: 178, column: 1, scope: !5619)
!5956 = !{i64 2147617813, i64 2147617856, i64 2147617896}
!5957 = !DILocation(line: 179, column: 1, scope: !5619)
!5958 = !{i64 2147617997, i64 2147618040, i64 2147618080}
!5959 = !DILocation(line: 180, column: 1, scope: !5619)
!5960 = !{i64 2147618184, i64 2147618227, i64 2147618267}
!5961 = !DILocation(line: 181, column: 1, scope: !5619)
!5962 = !{i64 2147618368, i64 2147618411, i64 2147618451}
!5963 = !DILocation(line: 182, column: 1, scope: !5619)
!5964 = !{i64 2147618606, i64 2147618649, i64 2147618689}
!5965 = !DILocation(line: 183, column: 1, scope: !5619)
!5966 = !{i64 2147618836, i64 2147618879, i64 2147618919}
!5967 = !DILocation(line: 184, column: 1, scope: !5619)
!5968 = !{i64 2147619065, i64 2147619108, i64 2147619148}
!5969 = !DILocation(line: 185, column: 1, scope: !5619)
!5970 = !{i64 2147619252, i64 2147619295, i64 2147619335}
!5971 = !DILocation(line: 186, column: 1, scope: !5619)
!5972 = !{i64 2147619448, i64 2147619491, i64 2147619531}
!5973 = !DILocation(line: 187, column: 1, scope: !5619)
!5974 = !{i64 2147619656, i64 2147619699, i64 2147619739}
!5975 = !DILocation(line: 188, column: 1, scope: !5619)
!5976 = !{i64 2147619868, i64 2147619911, i64 2147619951}
!5977 = !DILocation(line: 189, column: 1, scope: !5619)
!5978 = !{i64 2147620067, i64 2147620110, i64 2147620150}
!5979 = !DILocation(line: 190, column: 1, scope: !5619)
!5980 = !{i64 2147620305, i64 2147620348, i64 2147620388}
!5981 = !DILocation(line: 191, column: 1, scope: !5619)
!5982 = !{i64 2147620501, i64 2147620544, i64 2147620584}
!5983 = !DILocation(line: 192, column: 1, scope: !5619)
!5984 = !{i64 2147620703, i64 2147620746, i64 2147620786}
!5985 = !DILocation(line: 193, column: 1, scope: !5619)
!5986 = !{i64 2147620896, i64 2147620939, i64 2147620979}
!5987 = !DILocation(line: 194, column: 1, scope: !5619)
!5988 = !{i64 2147621130, i64 2147621173, i64 2147621213}
!5989 = !DILocation(line: 195, column: 1, scope: !5619)
!5990 = !{i64 2147621293, i64 2147621336, i64 2147621376}
!5991 = !DILocation(line: 196, column: 1, scope: !5619)
!5992 = !{i64 2147621532, i64 2147621575, i64 2147621615}
!5993 = !DILocation(line: 197, column: 1, scope: !5619)
!5994 = !{i64 2147621771, i64 2147621814, i64 2147621854}
!5995 = !DILocation(line: 198, column: 1, scope: !5619)
!5996 = !{i64 2147622007, i64 2147622050, i64 2147622090}
!5997 = !DILocation(line: 199, column: 1, scope: !5619)
!5998 = !{i64 2147622237, i64 2147622280, i64 2147622320}
!5999 = !DILocation(line: 200, column: 1, scope: !5619)
!6000 = !{i64 2147622424, i64 2147622467, i64 2147622507}
!6001 = !DILocation(line: 201, column: 1, scope: !5619)
!6002 = !{i64 2147622623, i64 2147622666, i64 2147622706}
!6003 = !DILocation(line: 202, column: 1, scope: !5619)
!6004 = !{i64 2147622894, i64 2147622937, i64 2147622977}
!6005 = !DILocation(line: 203, column: 1, scope: !5619)
!6006 = !{i64 2147623069, i64 2147623112, i64 2147623152}
!6007 = !DILocation(line: 204, column: 1, scope: !5619)
!6008 = !{i64 2147623303, i64 2147623346, i64 2147623386}
!6009 = !DILocation(line: 205, column: 1, scope: !5619)
!6010 = !{i64 2147623511, i64 2147623554, i64 2147623594}
!6011 = !DILocation(line: 206, column: 1, scope: !5619)
!6012 = !{i64 2147623729, i64 2147623772, i64 2147623812}
!6013 = !DILocation(line: 207, column: 1, scope: !5619)
!6014 = !{i64 2147623919, i64 2147623962, i64 2147624002}
!6015 = !DILocation(line: 208, column: 1, scope: !5619)
!6016 = !{i64 2147624115, i64 2147624158, i64 2147624198}
!6017 = !DILocation(line: 209, column: 1, scope: !5619)
!6018 = !{i64 2147624321, i64 2147624364, i64 2147624404}
!6019 = !DILocation(line: 210, column: 1, scope: !5619)
!6020 = !{i64 2147624526, i64 2147624569, i64 2147624609}
!6021 = !DILocation(line: 211, column: 1, scope: !5619)
!6022 = !{i64 2147624752, i64 2147624795, i64 2147624835}
!6023 = !DILocation(line: 212, column: 1, scope: !5619)
!6024 = !{i64 2147624984, i64 2147625027, i64 2147625067}
!6025 = !DILocation(line: 213, column: 1, scope: !5619)
!6026 = !{i64 2147625168, i64 2147625211, i64 2147625251}
!6027 = !DILocation(line: 214, column: 1, scope: !5619)
!6028 = !{i64 2147625377, i64 2147625420, i64 2147625460}
!6029 = !DILocation(line: 215, column: 1, scope: !5619)
!6030 = !{i64 2147625561, i64 2147625604, i64 2147625644}
!6031 = !DILocation(line: 216, column: 1, scope: !5619)
!6032 = !{i64 2147629848, i64 2147629891, i64 2147629931}
!6033 = !DILocation(line: 217, column: 1, scope: !5619)
!6034 = !{i64 2147630074, i64 2147630117, i64 2147630157}
!6035 = !DILocation(line: 218, column: 1, scope: !5619)
!6036 = !{i64 2147630300, i64 2147630343, i64 2147630383}
!6037 = !DILocation(line: 219, column: 1, scope: !5619)
!6038 = !{i64 2147630526, i64 2147630569, i64 2147630609}
!6039 = !DILocation(line: 220, column: 1, scope: !5619)
!6040 = !{i64 2147630752, i64 2147630795, i64 2147630835}
!6041 = !DILocation(line: 221, column: 1, scope: !5619)
!6042 = !{i64 2147630984, i64 2147631027, i64 2147631067}
!6043 = !DILocation(line: 222, column: 1, scope: !5619)
!6044 = !{i64 2147631222, i64 2147631265, i64 2147631305}
!6045 = !DILocation(line: 223, column: 1, scope: !5619)
!6046 = !{i64 2147631442, i64 2147631485, i64 2147631525}
!6047 = !DILocation(line: 224, column: 1, scope: !5619)
!6048 = !{i64 2147631686, i64 2147631729, i64 2147631769}
!6049 = !DILocation(line: 225, column: 1, scope: !5619)
!6050 = !{i64 2147631927, i64 2147631970, i64 2147632010}
!6051 = !DILocation(line: 226, column: 1, scope: !5619)
!6052 = !{i64 2147632162, i64 2147632205, i64 2147632245}
!6053 = !DILocation(line: 227, column: 1, scope: !5619)
!6054 = !{i64 2147632394, i64 2147632437, i64 2147632477}
!6055 = !DILocation(line: 228, column: 1, scope: !5619)
!6056 = !{i64 2147632596, i64 2147632639, i64 2147632679}
!6057 = !DILocation(line: 229, column: 1, scope: !5619)
!6058 = !{i64 2147632846, i64 2147632889, i64 2147632929}
!6059 = !DILocation(line: 230, column: 1, scope: !5619)
!6060 = !{i64 2147633084, i64 2147633127, i64 2147633167}
!6061 = !DILocation(line: 231, column: 1, scope: !5619)
!6062 = !{i64 2147633268, i64 2147633311, i64 2147633351}
!6063 = !DILocation(line: 232, column: 1, scope: !5619)
!6064 = !{i64 2147633492, i64 2147633535, i64 2147633575}
!6065 = !DILocation(line: 233, column: 1, scope: !5619)
!6066 = !{i64 2147633730, i64 2147633773, i64 2147633813}
!6067 = !DILocation(line: 234, column: 1, scope: !5619)
!6068 = !{i64 2147633968, i64 2147634011, i64 2147634051}
!6069 = !DILocation(line: 235, column: 1, scope: !5619)
!6070 = !{i64 2147634161, i64 2147634204, i64 2147634244}
!6071 = !DILocation(line: 236, column: 1, scope: !5619)
!6072 = !{i64 2147634414, i64 2147634457, i64 2147634497}
!6073 = !DILocation(line: 237, column: 1, scope: !5619)
!6074 = !{i64 2147634628, i64 2147634671, i64 2147634711}
!6075 = !DILocation(line: 238, column: 1, scope: !5619)
!6076 = !{i64 2147634836, i64 2147634879, i64 2147634919}
!6077 = !DILocation(line: 239, column: 1, scope: !5619)
!6078 = !{i64 2147635026, i64 2147635069, i64 2147635109}
!6079 = !DILocation(line: 240, column: 1, scope: !5619)
!6080 = !{i64 2147635240, i64 2147635283, i64 2147635323}
!6081 = !DILocation(line: 241, column: 1, scope: !5619)
!6082 = !{i64 2147635502, i64 2147635545, i64 2147635585}
!6083 = !DILocation(line: 242, column: 1, scope: !5619)
!6084 = !{i64 2147635713, i64 2147635756, i64 2147635796}
!6085 = !DILocation(line: 243, column: 1, scope: !5619)
!6086 = !{i64 2147635957, i64 2147636000, i64 2147636040}
!6087 = !DILocation(line: 244, column: 1, scope: !5619)
!6088 = !{i64 2147636168, i64 2147636211, i64 2147636251}
!6089 = !DILocation(line: 245, column: 1, scope: !5619)
!6090 = !{i64 2147636397, i64 2147636440, i64 2147636480}
!6091 = !DILocation(line: 246, column: 1, scope: !5619)
!6092 = !{i64 2147636662, i64 2147636705, i64 2147636745}
!6093 = !DILocation(line: 247, column: 1, scope: !5619)
!6094 = !{i64 2147636867, i64 2147636910, i64 2147636950}
!6095 = !DILocation(line: 248, column: 1, scope: !5619)
!6096 = !{i64 2147637063, i64 2147637106, i64 2147637146}
!6097 = !DILocation(line: 249, column: 1, scope: !5619)
!6098 = !{i64 2147637286, i64 2147637329, i64 2147637369}
!6099 = !DILocation(line: 250, column: 1, scope: !5619)
!6100 = !{i64 2147637449, i64 2147637492, i64 2147637532}
!6101 = !DILocation(line: 251, column: 1, scope: !5619)
!6102 = !{i64 2147637654, i64 2147637697, i64 2147637737}
!6103 = !DILocation(line: 252, column: 1, scope: !5619)
!6104 = !{i64 2147637874, i64 2147637917, i64 2147637957}
!6105 = !DILocation(line: 253, column: 1, scope: !5619)
!6106 = !{i64 2147638088, i64 2147638131, i64 2147638171}
!6107 = !DILocation(line: 254, column: 1, scope: !5619)
!6108 = !{i64 2147642363, i64 2147642406, i64 2147642446}
!6109 = !DILocation(line: 255, column: 1, scope: !5619)
!6110 = !{i64 2147642574, i64 2147642617, i64 2147642657}
!6111 = !DILocation(line: 256, column: 1, scope: !5619)
!6112 = !{i64 2147642767, i64 2147642810, i64 2147642850}
!6113 = !DILocation(line: 257, column: 1, scope: !5619)
!6114 = !{i64 2147642966, i64 2147643009, i64 2147643049}
!6115 = !DILocation(line: 258, column: 1, scope: !5619)
!6116 = !{i64 2147643138, i64 2147643181, i64 2147643221}
!6117 = !DILocation(line: 259, column: 1, scope: !5619)
!6118 = !{i64 2147643331, i64 2147643374, i64 2147643414}
!6119 = !DILocation(line: 260, column: 1, scope: !5619)
!6120 = !{i64 2147643503, i64 2147643546, i64 2147643586}
!6121 = !DILocation(line: 261, column: 1, scope: !5619)
!6122 = !{i64 2147643693, i64 2147643736, i64 2147643776}
!6123 = !DILocation(line: 262, column: 1, scope: !5619)
!6124 = !{i64 2147643886, i64 2147643929, i64 2147643969}
!6125 = !DILocation(line: 263, column: 1, scope: !5619)
!6126 = !{i64 2147644082, i64 2147644125, i64 2147644165}
!6127 = !DILocation(line: 264, column: 1, scope: !5619)
!6128 = !{i64 2147644309, i64 2147644352, i64 2147644392}
!6129 = !DILocation(line: 265, column: 1, scope: !5619)
!6130 = !{i64 2147644526, i64 2147644569, i64 2147644609}
!6131 = !DILocation(line: 266, column: 1, scope: !5619)
!6132 = !{i64 2147644818, i64 2147644861, i64 2147644901}
!6133 = !DILocation(line: 267, column: 1, scope: !5619)
!6134 = !{i64 2147645050, i64 2147645093, i64 2147645133}
!6135 = !DILocation(line: 268, column: 1, scope: !5619)
!6136 = !{i64 2147645267, i64 2147645310, i64 2147645350}
!6137 = !DILocation(line: 269, column: 1, scope: !5619)
!6138 = !{i64 2147645474, i64 2147645517, i64 2147645557}
!6139 = !DILocation(line: 270, column: 1, scope: !5619)
!6140 = !{i64 2147645675, i64 2147645718, i64 2147645758}
!6141 = !DILocation(line: 271, column: 1, scope: !5619)
!6142 = !{i64 2147645907, i64 2147645950, i64 2147645990}
!6143 = !DILocation(line: 272, column: 1, scope: !5619)
!6144 = !{i64 2147646115, i64 2147646158, i64 2147646198}
!6145 = !DILocation(line: 273, column: 1, scope: !5619)
!6146 = !{i64 2147646305, i64 2147646348, i64 2147646388}
!6147 = !DILocation(line: 274, column: 1, scope: !5619)
!6148 = !{i64 2147646531, i64 2147646574, i64 2147646614}
!6149 = !DILocation(line: 275, column: 1, scope: !5619)
!6150 = !{i64 2147646720, i64 2147646763, i64 2147646803}
!6151 = !DILocation(line: 276, column: 1, scope: !5619)
!6152 = !{i64 2147646991, i64 2147647034, i64 2147647074}
!6153 = !DILocation(line: 277, column: 1, scope: !5619)
!6154 = !{i64 2147647211, i64 2147647254, i64 2147647294}
!6155 = !DILocation(line: 278, column: 1, scope: !5619)
!6156 = !{i64 2147647464, i64 2147647507, i64 2147647547}
!6157 = !DILocation(line: 279, column: 1, scope: !5619)
!6158 = !{i64 2147647672, i64 2147647715, i64 2147647755}
!6159 = !DILocation(line: 280, column: 1, scope: !5619)
!6160 = !{i64 2147647904, i64 2147647947, i64 2147647987}
!6161 = !DILocation(line: 281, column: 1, scope: !5619)
!6162 = !{i64 2147648115, i64 2147648158, i64 2147648198}
!6163 = !DILocation(line: 282, column: 1, scope: !5619)
!6164 = !{i64 2147648305, i64 2147648348, i64 2147648388}
!6165 = !DILocation(line: 283, column: 1, scope: !5619)
!6166 = !{i64 2147648519, i64 2147648562, i64 2147648602}
!6167 = !DILocation(line: 284, column: 1, scope: !5619)
!6168 = !{i64 2147648718, i64 2147648761, i64 2147648801}
!6169 = !DILocation(line: 285, column: 1, scope: !5619)
!6170 = !{i64 2147648905, i64 2147648948, i64 2147648988}
!6171 = !DILocation(line: 286, column: 1, scope: !5619)
!6172 = !{i64 2147649113, i64 2147649156, i64 2147649196}
!6173 = !DILocation(line: 287, column: 1, scope: !5619)
!6174 = !{i64 2147649342, i64 2147649385, i64 2147649425}
!6175 = !DILocation(line: 288, column: 1, scope: !5619)
!6176 = !{i64 2147649544, i64 2147649587, i64 2147649627}
!6177 = !DILocation(line: 289, column: 1, scope: !5619)
!6178 = !{i64 2147649743, i64 2147649786, i64 2147649826}
!6179 = !DILocation(line: 290, column: 1, scope: !5619)
!6180 = !{i64 2147649960, i64 2147650003, i64 2147650043}
!6181 = !DILocation(line: 292, column: 1, scope: !5619)
!6182 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !460, file: !460, line: 30, type: !467, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6183)
!6183 = !{!6184, !6185}
!6184 = !DILocalVariable(name: "arg", arg: 1, scope: !6182, file: !460, line: 30, type: !469)
!6185 = !DILocalVariable(name: "key", scope: !6182, file: !460, line: 32, type: !156)
!6186 = !DILocation(line: 0, scope: !6182)
!6187 = !DILocation(line: 37, column: 2, scope: !6182)
!6188 = !DILocation(line: 38, column: 2, scope: !6182)
!6189 = !DILocation(line: 55, column: 2, scope: !6190, inlinedAt: !6197)
!6190 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6191, file: !6191, line: 42, type: !6192, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6194)
!6191 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6192 = !DISubroutineType(types: !6193)
!6193 = !{!32}
!6194 = !{!6195, !6196}
!6195 = !DILocalVariable(name: "key", scope: !6190, file: !6191, line: 44, type: !32)
!6196 = !DILocalVariable(name: "tmp", scope: !6190, file: !6191, line: 53, type: !32)
!6197 = distinct !DILocation(line: 40, column: 8, scope: !6182)
!6198 = !{i64 1935808}
!6199 = !DILocation(line: 0, scope: !6190, inlinedAt: !6197)
!6200 = !DILocalVariable(name: "key", arg: 1, scope: !6201, file: !6191, line: 84, type: !32)
!6201 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6191, file: !6191, line: 84, type: !6202, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6204)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{null, !32}
!6204 = !{!6200}
!6205 = !DILocation(line: 0, scope: !6201, inlinedAt: !6206)
!6206 = distinct !DILocation(line: 47, column: 2, scope: !6182)
!6207 = !DILocation(line: 95, column: 2, scope: !6201, inlinedAt: !6206)
!6208 = !{i64 1936625}
!6209 = !DILocation(line: 51, column: 18, scope: !6182)
!6210 = !DILocation(line: 53, column: 2, scope: !6182)
!6211 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6212, file: !6212, line: 1609, type: !365, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !2149)
!6212 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6213 = !DILocation(line: 1611, column: 3, scope: !6211)
!6214 = !DILocation(line: 1612, column: 1, scope: !6211)
!6215 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6212, file: !6212, line: 1629, type: !365, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !2149)
!6216 = !DILocation(line: 1631, column: 3, scope: !6215)
!6217 = !DILocation(line: 1632, column: 1, scope: !6215)
!6218 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !490, file: !490, line: 26, type: !496, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !6219)
!6219 = !{!6220}
!6220 = !DILocalVariable(name: "dev", arg: 1, scope: !6218, file: !490, line: 26, type: !498)
!6221 = !DILocation(line: 0, scope: !6218)
!6222 = !DILocation(line: 68, column: 2, scope: !6218)
!6223 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6224, file: !6224, line: 57, type: !6225, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !6271)
!6224 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6225 = !DISubroutineType(types: !6226)
!6226 = !{null, !32, !6227}
!6227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6228, size: 32)
!6228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6229)
!6229 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2759, line: 141, baseType: !6230)
!6230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2759, line: 97, size: 256, elements: !6231)
!6231 = !{!6232}
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6230, file: !2759, line: 107, baseType: !6233, size: 256)
!6233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2759, line: 98, size: 256, elements: !6234)
!6234 = !{!6235, !6240, !6245, !6250, !6255, !6260, !6265, !6270}
!6235 = !DIDerivedType(tag: DW_TAG_member, scope: !6233, file: !2759, line: 99, baseType: !6236, size: 32)
!6236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6233, file: !2759, line: 99, size: 32, elements: !6237)
!6237 = !{!6238, !6239}
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6236, file: !2759, line: 99, baseType: !156, size: 32)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6236, file: !2759, line: 99, baseType: !156, size: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, scope: !6233, file: !2759, line: 100, baseType: !6241, size: 32, offset: 32)
!6241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6233, file: !2759, line: 100, size: 32, elements: !6242)
!6242 = !{!6243, !6244}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6241, file: !2759, line: 100, baseType: !156, size: 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6241, file: !2759, line: 100, baseType: !156, size: 32)
!6245 = !DIDerivedType(tag: DW_TAG_member, scope: !6233, file: !2759, line: 101, baseType: !6246, size: 32, offset: 64)
!6246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6233, file: !2759, line: 101, size: 32, elements: !6247)
!6247 = !{!6248, !6249}
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6246, file: !2759, line: 101, baseType: !156, size: 32)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6246, file: !2759, line: 101, baseType: !156, size: 32)
!6250 = !DIDerivedType(tag: DW_TAG_member, scope: !6233, file: !2759, line: 102, baseType: !6251, size: 32, offset: 96)
!6251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6233, file: !2759, line: 102, size: 32, elements: !6252)
!6252 = !{!6253, !6254}
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6251, file: !2759, line: 102, baseType: !156, size: 32)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6251, file: !2759, line: 102, baseType: !156, size: 32)
!6255 = !DIDerivedType(tag: DW_TAG_member, scope: !6233, file: !2759, line: 103, baseType: !6256, size: 32, offset: 128)
!6256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6233, file: !2759, line: 103, size: 32, elements: !6257)
!6257 = !{!6258, !6259}
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6256, file: !2759, line: 103, baseType: !156, size: 32)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6256, file: !2759, line: 103, baseType: !156, size: 32)
!6260 = !DIDerivedType(tag: DW_TAG_member, scope: !6233, file: !2759, line: 104, baseType: !6261, size: 32, offset: 160)
!6261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6233, file: !2759, line: 104, size: 32, elements: !6262)
!6262 = !{!6263, !6264}
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6261, file: !2759, line: 104, baseType: !156, size: 32)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6261, file: !2759, line: 104, baseType: !156, size: 32)
!6265 = !DIDerivedType(tag: DW_TAG_member, scope: !6233, file: !2759, line: 105, baseType: !6266, size: 32, offset: 192)
!6266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6233, file: !2759, line: 105, size: 32, elements: !6267)
!6267 = !{!6268, !6269}
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6266, file: !2759, line: 105, baseType: !156, size: 32)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6266, file: !2759, line: 105, baseType: !156, size: 32)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6233, file: !2759, line: 106, baseType: !156, size: 32, offset: 224)
!6271 = !{!6272, !6273}
!6272 = !DILocalVariable(name: "reason", arg: 1, scope: !6223, file: !6224, line: 57, type: !32)
!6273 = !DILocalVariable(name: "esf", arg: 2, scope: !6223, file: !6224, line: 57, type: !6227)
!6274 = !DILocation(line: 0, scope: !6223)
!6275 = !DILocation(line: 63, column: 2, scope: !6223)
!6276 = !DILocation(line: 64, column: 1, scope: !6223)
!6277 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6224, file: !6224, line: 82, type: !6278, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !6293)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{null, !6227, !6280}
!6280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6281, size: 32)
!6281 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !296, line: 37, baseType: !6282)
!6282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6283)
!6283 = !{!6284, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6292}
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6282, file: !296, line: 26, baseType: !156, size: 32)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6282, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6282, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6282, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6282, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6282, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6282, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6282, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6282, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6293 = !{!6294, !6295, !6296}
!6294 = !DILocalVariable(name: "esf", arg: 1, scope: !6277, file: !6224, line: 82, type: !6227)
!6295 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6277, file: !6224, line: 82, type: !6280)
!6296 = !DILocalVariable(name: "reason", scope: !6277, file: !6224, line: 88, type: !32)
!6297 = !DILocation(line: 0, scope: !6277)
!6298 = !DILocation(line: 88, column: 35, scope: !6277)
!6299 = !DILocation(line: 108, column: 2, scope: !6277)
!6300 = !DILocation(line: 131, column: 1, scope: !6277)
!6301 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6224, file: !6224, line: 133, type: !6302, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !6304)
!6302 = !DISubroutineType(types: !6303)
!6303 = !{null, !117}
!6304 = !{!6305, !6306, !6307}
!6305 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6301, file: !6224, line: 133, type: !117)
!6306 = !DILocalVariable(name: "ssf_contents", scope: !6301, file: !6224, line: 135, type: !989)
!6307 = !DILocalVariable(name: "oops_esf", scope: !6301, file: !6224, line: 136, type: !6229)
!6308 = !DILocation(line: 0, scope: !6301)
!6309 = !DILocation(line: 136, column: 2, scope: !6301)
!6310 = !DILocation(line: 136, column: 15, scope: !6301)
!6311 = !DILocation(line: 139, column: 22, scope: !6301)
!6312 = !DILocation(line: 139, column: 17, scope: !6301)
!6313 = !DILocation(line: 139, column: 20, scope: !6301)
!6314 = !DILocation(line: 141, column: 2, scope: !6301)
!6315 = !DILocation(line: 142, column: 2, scope: !6301)
!6316 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6317, file: !6317, line: 40, type: !6202, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !6318)
!6317 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6318 = !{!6319}
!6319 = !DILocalVariable(name: "irq", arg: 1, scope: !6316, file: !6317, line: 40, type: !32)
!6320 = !DILocation(line: 0, scope: !6316)
!6321 = !DILocation(line: 42, column: 2, scope: !6316)
!6322 = !DILocation(line: 43, column: 1, scope: !6316)
!6323 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !656, file: !656, line: 1684, type: !6324, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !6326)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{null, !890}
!6326 = !{!6327}
!6327 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6323, file: !656, line: 1684, type: !890)
!6328 = !DILocation(line: 0, scope: !6323)
!6329 = !DILocation(line: 1686, column: 23, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6323, file: !656, line: 1686, column: 7)
!6331 = !DILocation(line: 1686, column: 7, scope: !6323)
!6332 = !DILocation(line: 1688, column: 5, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6330, file: !656, line: 1687, column: 3)
!6334 = !{i64 2150443539}
!6335 = !DILocation(line: 1689, column: 81, scope: !6333)
!6336 = !DILocation(line: 1689, column: 60, scope: !6333)
!6337 = !DILocation(line: 1689, column: 34, scope: !6333)
!6338 = !DILocation(line: 1689, column: 5, scope: !6333)
!6339 = !DILocation(line: 1689, column: 43, scope: !6333)
!6340 = !DILocation(line: 1690, column: 5, scope: !6333)
!6341 = !{i64 2150443653}
!6342 = !DILocation(line: 1691, column: 3, scope: !6333)
!6343 = !DILocation(line: 1692, column: 1, scope: !6323)
!6344 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6317, file: !6317, line: 45, type: !6202, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !6345)
!6345 = !{!6346}
!6346 = !DILocalVariable(name: "irq", arg: 1, scope: !6344, file: !6317, line: 45, type: !32)
!6347 = !DILocation(line: 0, scope: !6344)
!6348 = !DILocation(line: 47, column: 2, scope: !6344)
!6349 = !DILocation(line: 48, column: 1, scope: !6344)
!6350 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !656, file: !656, line: 1722, type: !6324, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !6351)
!6351 = !{!6352}
!6352 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6350, file: !656, line: 1722, type: !890)
!6353 = !DILocation(line: 0, scope: !6350)
!6354 = !DILocation(line: 1724, column: 23, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6350, file: !656, line: 1724, column: 7)
!6356 = !DILocation(line: 1724, column: 7, scope: !6350)
!6357 = !DILocation(line: 1726, column: 81, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6355, file: !656, line: 1725, column: 3)
!6359 = !DILocation(line: 1726, column: 60, scope: !6358)
!6360 = !DILocation(line: 1726, column: 34, scope: !6358)
!6361 = !DILocation(line: 1726, column: 5, scope: !6358)
!6362 = !DILocation(line: 1726, column: 43, scope: !6358)
!6363 = !DILocation(line: 271, column: 3, scope: !6364, inlinedAt: !6366)
!6364 = distinct !DISubprogram(name: "__DSB", scope: !6365, file: !6365, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !2149)
!6365 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6366 = distinct !DILocation(line: 1727, column: 5, scope: !6358)
!6367 = !{i64 2897922}
!6368 = !DILocation(line: 260, column: 3, scope: !6369, inlinedAt: !6370)
!6369 = distinct !DISubprogram(name: "__ISB", scope: !6365, file: !6365, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !2149)
!6370 = distinct !DILocation(line: 1728, column: 5, scope: !6358)
!6371 = !{i64 2897639}
!6372 = !DILocation(line: 1729, column: 3, scope: !6358)
!6373 = !DILocation(line: 1730, column: 1, scope: !6350)
!6374 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6317, file: !6317, line: 50, type: !6375, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !6377)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{!118, !32}
!6377 = !{!6378}
!6378 = !DILocalVariable(name: "irq", arg: 1, scope: !6374, file: !6317, line: 50, type: !32)
!6379 = !DILocation(line: 0, scope: !6374)
!6380 = !DILocation(line: 52, column: 20, scope: !6374)
!6381 = !DILocation(line: 52, column: 9, scope: !6374)
!6382 = !DILocation(line: 52, column: 41, scope: !6374)
!6383 = !DILocation(line: 52, column: 39, scope: !6374)
!6384 = !DILocation(line: 52, column: 2, scope: !6374)
!6385 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6317, file: !6317, line: 64, type: !6386, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !6388)
!6386 = !DISubroutineType(types: !6387)
!6387 = !{null, !32, !32, !156}
!6388 = !{!6389, !6390, !6391}
!6389 = !DILocalVariable(name: "irq", arg: 1, scope: !6385, file: !6317, line: 64, type: !32)
!6390 = !DILocalVariable(name: "prio", arg: 2, scope: !6385, file: !6317, line: 64, type: !32)
!6391 = !DILocalVariable(name: "flags", arg: 3, scope: !6385, file: !6317, line: 64, type: !156)
!6392 = !DILocation(line: 0, scope: !6385)
!6393 = !DILocation(line: 83, column: 8, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !6317, line: 82, column: 9)
!6395 = distinct !DILexicalBlock(scope: !6385, file: !6317, line: 76, column: 6)
!6396 = !DILocation(line: 91, column: 2, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !6317, line: 91, column: 2)
!6398 = distinct !DILexicalBlock(scope: !6385, file: !6317, line: 91, column: 2)
!6399 = !DILocation(line: 91, column: 2, scope: !6398)
!6400 = !DILocation(line: 91, column: 2, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6397, file: !6317, line: 91, column: 2)
!6402 = !DILocation(line: 95, column: 2, scope: !6385)
!6403 = !DILocation(line: 96, column: 1, scope: !6385)
!6404 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6405, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !6407)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{null, !890, !156}
!6407 = !{!6408, !6409}
!6408 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6404, file: !656, line: 1814, type: !890)
!6409 = !DILocalVariable(name: "priority", arg: 2, scope: !6404, file: !656, line: 1814, type: !156)
!6410 = !DILocation(line: 0, scope: !6404)
!6411 = !DILocation(line: 0, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6404, file: !656, line: 1816, column: 7)
!6413 = !DILocation(line: 1816, column: 7, scope: !6404)
!6414 = !DILocation(line: 1824, column: 1, scope: !6404)
!6415 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6317, file: !6317, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !6416)
!6416 = !{!6417}
!6417 = !DILocalVariable(name: "unused", arg: 1, scope: !6415, file: !6317, line: 155, type: !13)
!6418 = !DILocation(line: 0, scope: !6415)
!6419 = !DILocation(line: 159, column: 2, scope: !6415)
!6420 = !DILocation(line: 160, column: 1, scope: !6415)
!6421 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6422, file: !6422, line: 87, type: !365, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !2149)
!6422 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6423 = !DILocation(line: 89, column: 2, scope: !6421)
!6424 = !DILocation(line: 90, column: 2, scope: !6421)
!6425 = !DILocation(line: 91, column: 1, scope: !6421)
!6426 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6422, file: !6422, line: 23, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!6427 = !DISubprogram(name: "z_arm_int_exit", scope: !6428, file: !6428, line: 153, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!6428 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6429 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6430, file: !6430, line: 256, type: !365, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !2149)
!6430 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6431 = !DILocation(line: 258, column: 2, scope: !6429)
!6432 = !DILocation(line: 260, column: 2, scope: !6429)
!6433 = !DILocation(line: 262, column: 2, scope: !6429)
!6434 = !DILocation(line: 263, column: 2, scope: !6429)
!6435 = !DILocation(line: 267, column: 2, scope: !6429)
!6436 = !DILocation(line: 268, column: 2, scope: !6429)
!6437 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6430, file: !6430, line: 53, type: !365, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !2149)
!6438 = !DILocation(line: 55, column: 12, scope: !6437)
!6439 = !DILocation(line: 271, column: 3, scope: !6440, inlinedAt: !6441)
!6440 = distinct !DISubprogram(name: "__DSB", scope: !6365, file: !6365, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !2149)
!6441 = distinct !DILocation(line: 56, column: 2, scope: !6437)
!6442 = !{i64 2896593}
!6443 = !DILocation(line: 260, column: 3, scope: !6444, inlinedAt: !6445)
!6444 = distinct !DISubprogram(name: "__ISB", scope: !6365, file: !6365, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !2149)
!6445 = distinct !DILocation(line: 57, column: 2, scope: !6437)
!6446 = !{i64 2896310}
!6447 = !DILocation(line: 58, column: 1, scope: !6437)
!6448 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6430, file: !6430, line: 96, type: !365, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !2149)
!6449 = !DILocation(line: 103, column: 13, scope: !6448)
!6450 = !DILocation(line: 975, column: 3, scope: !6451, inlinedAt: !6456)
!6451 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6365, file: !6365, line: 971, type: !6452, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !6454)
!6452 = !DISubroutineType(types: !6453)
!6453 = !{!156}
!6454 = !{!6455}
!6455 = !DILocalVariable(name: "result", scope: !6451, file: !6365, line: 973, type: !156)
!6456 = distinct !DILocation(line: 189, column: 16, scope: !6448)
!6457 = !{i64 2917423}
!6458 = !DILocation(line: 0, scope: !6451, inlinedAt: !6456)
!6459 = !DILocation(line: 189, column: 32, scope: !6448)
!6460 = !DILocalVariable(name: "control", arg: 1, scope: !6461, file: !6365, line: 1001, type: !156)
!6461 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6365, file: !6365, line: 1001, type: !6462, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !6464)
!6462 = !DISubroutineType(types: !6463)
!6463 = !{null, !156}
!6464 = !{!6460}
!6465 = !DILocation(line: 0, scope: !6461, inlinedAt: !6466)
!6466 = distinct !DILocation(line: 189, column: 2, scope: !6448)
!6467 = !DILocation(line: 1003, column: 3, scope: !6461, inlinedAt: !6466)
!6468 = !{i64 2918143}
!6469 = !DILocation(line: 260, column: 3, scope: !6444, inlinedAt: !6470)
!6470 = distinct !DILocation(line: 1004, column: 3, scope: !6461, inlinedAt: !6466)
!6471 = !DILocation(line: 191, column: 1, scope: !6448)
!6472 = distinct !DISubprogram(name: "arch_swap", scope: !6473, file: !6473, line: 33, type: !6375, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6474)
!6473 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6474 = !{!6475}
!6475 = !DILocalVariable(name: "key", arg: 1, scope: !6472, file: !6473, line: 33, type: !32)
!6476 = !DILocation(line: 0, scope: !6472)
!6477 = !DILocation(line: 36, column: 2, scope: !6472)
!6478 = !DILocation(line: 36, column: 17, scope: !6472)
!6479 = !DILocation(line: 36, column: 25, scope: !6472)
!6480 = !DILocation(line: 37, column: 37, scope: !6472)
!6481 = !DILocation(line: 37, column: 17, scope: !6472)
!6482 = !DILocation(line: 37, column: 35, scope: !6472)
!6483 = !DILocation(line: 41, column: 12, scope: !6472)
!6484 = !DILocalVariable(name: "key", arg: 1, scope: !6485, file: !6191, line: 84, type: !32)
!6485 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6191, file: !6191, line: 84, type: !6202, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6486)
!6486 = !{!6484}
!6487 = !DILocation(line: 0, scope: !6485, inlinedAt: !6488)
!6488 = distinct !DILocation(line: 44, column: 2, scope: !6472)
!6489 = !DILocation(line: 95, column: 2, scope: !6485, inlinedAt: !6488)
!6490 = !{i64 2038953}
!6491 = !DILocation(line: 53, column: 9, scope: !6472)
!6492 = !DILocation(line: 53, column: 24, scope: !6472)
!6493 = !DILocation(line: 53, column: 2, scope: !6472)
!6494 = distinct !DISubprogram(name: "arch_new_thread", scope: !6495, file: !6495, line: 56, type: !6496, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6605)
!6495 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6496 = !DISubroutineType(types: !6497)
!6497 = !{null, !6498, !6600, !1242, !352, !117, !117, !117}
!6498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6499, size: 32)
!6499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !6500)
!6500 = !{!6501, !6559, !6571, !6572, !6573, !6574, !6580, !6595}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6499, file: !225, line: 247, baseType: !6502, size: 384)
!6502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !6503)
!6503 = !{!6504, !6528, !6535, !6536, !6537, !6546, !6547, !6548}
!6504 = !DIDerivedType(tag: DW_TAG_member, scope: !6502, file: !225, line: 60, baseType: !6505, size: 64)
!6505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6502, file: !225, line: 60, size: 64, elements: !6506)
!6506 = !{!6507, !6522}
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6505, file: !225, line: 61, baseType: !6508, size: 64)
!6508 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !6509)
!6509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !6510)
!6510 = !{!6511, !6517}
!6511 = !DIDerivedType(tag: DW_TAG_member, scope: !6509, file: !235, line: 38, baseType: !6512, size: 32)
!6512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6509, file: !235, line: 38, size: 32, elements: !6513)
!6513 = !{!6514, !6516}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6512, file: !235, line: 39, baseType: !6515, size: 32)
!6515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6509, size: 32)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6512, file: !235, line: 40, baseType: !6515, size: 32)
!6517 = !DIDerivedType(tag: DW_TAG_member, scope: !6509, file: !235, line: 42, baseType: !6518, size: 32, offset: 32)
!6518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6509, file: !235, line: 42, size: 32, elements: !6519)
!6519 = !{!6520, !6521}
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6518, file: !235, line: 43, baseType: !6515, size: 32)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6518, file: !235, line: 44, baseType: !6515, size: 32)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6505, file: !225, line: 62, baseType: !6523, size: 64)
!6523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !6524)
!6524 = !{!6525}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6523, file: !251, line: 50, baseType: !6526, size: 64)
!6526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6527, size: 64, elements: !256)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6523, size: 32)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6502, file: !225, line: 68, baseType: !6529, size: 32, offset: 64)
!6529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6530, size: 32)
!6530 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !6531)
!6531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !6532)
!6532 = !{!6533}
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6531, file: !261, line: 232, baseType: !6534, size: 64)
!6534 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !6509)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6502, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6502, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!6537 = !DIDerivedType(tag: DW_TAG_member, scope: !6502, file: !225, line: 90, baseType: !6538, size: 16, offset: 112)
!6538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6502, file: !225, line: 90, size: 16, elements: !6539)
!6539 = !{!6540, !6545}
!6540 = !DIDerivedType(tag: DW_TAG_member, scope: !6538, file: !225, line: 91, baseType: !6541, size: 16)
!6541 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6538, file: !225, line: 91, size: 16, elements: !6542)
!6542 = !{!6543, !6544}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6541, file: !225, line: 96, baseType: !275, size: 8)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6541, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6538, file: !225, line: 100, baseType: !279, size: 16)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6502, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6502, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6502, file: !225, line: 131, baseType: !6549, size: 192, offset: 192)
!6549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !6550)
!6550 = !{!6551, !6552, !6558}
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6549, file: !261, line: 245, baseType: !6508, size: 64)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6549, file: !261, line: 246, baseType: !6553, size: 32, offset: 64)
!6553 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !6554)
!6554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6555, size: 32)
!6555 = !DISubroutineType(types: !6556)
!6556 = !{null, !6557}
!6557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 32)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6549, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6499, file: !225, line: 250, baseType: !6560, size: 288, offset: 384)
!6560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6561)
!6561 = !{!6562, !6563, !6564, !6565, !6566, !6567, !6568, !6569, !6570}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6560, file: !296, line: 26, baseType: !156, size: 32)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6560, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6560, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6560, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6560, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6560, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6560, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6560, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6560, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6499, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6499, file: !225, line: 256, baseType: !6530, size: 64, offset: 704)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6499, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6499, file: !225, line: 300, baseType: !6575, size: 96, offset: 800)
!6575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !6576)
!6576 = !{!6577, !6578, !6579}
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6575, file: !225, line: 153, baseType: !22, size: 32)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6575, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6575, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6499, file: !225, line: 325, baseType: !6581, size: 32, offset: 896)
!6581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6582, size: 32)
!6582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !6583)
!6583 = !{!6584, !6590, !6591}
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6582, file: !220, line: 5074, baseType: !6585, size: 96)
!6585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !6586)
!6586 = !{!6587, !6588, !6589}
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6585, file: !324, line: 57, baseType: !327, size: 32)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6585, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6585, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6582, file: !220, line: 5075, baseType: !6530, size: 64, offset: 96)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6582, file: !220, line: 5076, baseType: !6592, size: 32, offset: 160)
!6592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !6593)
!6593 = !{!6594}
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6592, file: !334, line: 52, baseType: !22, size: 32)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6499, file: !225, line: 343, baseType: !6596, size: 64, offset: 928)
!6596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !6597)
!6597 = !{!6598, !6599}
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6596, file: !296, line: 63, baseType: !156, size: 32)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6596, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!6600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6601, size: 32)
!6601 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !6602)
!6602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !6603)
!6603 = !{!6604}
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6602, file: !347, line: 48, baseType: !135, size: 8)
!6605 = !{!6606, !6607, !6608, !6609, !6610, !6611, !6612, !6613}
!6606 = !DILocalVariable(name: "thread", arg: 1, scope: !6494, file: !6495, line: 56, type: !6498)
!6607 = !DILocalVariable(name: "stack", arg: 2, scope: !6494, file: !6495, line: 56, type: !6600)
!6608 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6494, file: !6495, line: 57, type: !1242)
!6609 = !DILocalVariable(name: "entry", arg: 4, scope: !6494, file: !6495, line: 57, type: !352)
!6610 = !DILocalVariable(name: "p1", arg: 5, scope: !6494, file: !6495, line: 58, type: !117)
!6611 = !DILocalVariable(name: "p2", arg: 6, scope: !6494, file: !6495, line: 58, type: !117)
!6612 = !DILocalVariable(name: "p3", arg: 7, scope: !6494, file: !6495, line: 58, type: !117)
!6613 = !DILocalVariable(name: "iframe", scope: !6494, file: !6495, line: 60, type: !2757)
!6614 = !DILocation(line: 0, scope: !6494)
!6615 = !DILocation(line: 85, column: 11, scope: !6494)
!6616 = !DILocation(line: 93, column: 10, scope: !6494)
!6617 = !DILocation(line: 98, column: 13, scope: !6494)
!6618 = !DILocation(line: 100, column: 15, scope: !6494)
!6619 = !DILocation(line: 100, column: 10, scope: !6494)
!6620 = !DILocation(line: 100, column: 13, scope: !6494)
!6621 = !DILocation(line: 101, column: 15, scope: !6494)
!6622 = !DILocation(line: 101, column: 10, scope: !6494)
!6623 = !DILocation(line: 101, column: 13, scope: !6494)
!6624 = !DILocation(line: 102, column: 15, scope: !6494)
!6625 = !DILocation(line: 102, column: 10, scope: !6494)
!6626 = !DILocation(line: 102, column: 13, scope: !6494)
!6627 = !DILocation(line: 103, column: 15, scope: !6494)
!6628 = !DILocation(line: 103, column: 10, scope: !6494)
!6629 = !DILocation(line: 103, column: 13, scope: !6494)
!6630 = !DILocation(line: 106, column: 10, scope: !6494)
!6631 = !DILocation(line: 106, column: 15, scope: !6494)
!6632 = !DILocation(line: 122, column: 29, scope: !6494)
!6633 = !DILocation(line: 122, column: 23, scope: !6494)
!6634 = !DILocation(line: 122, column: 27, scope: !6494)
!6635 = !DILocation(line: 123, column: 15, scope: !6494)
!6636 = !DILocation(line: 123, column: 23, scope: !6494)
!6637 = !DILocation(line: 143, column: 1, scope: !6494)
!6638 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6495, file: !6495, line: 385, type: !6639, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6642)
!6639 = !DISubroutineType(types: !6640)
!6640 = !{!156, !6641, !6641}
!6641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!6642 = !{!6643, !6644, !6645, !6648}
!6643 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6638, file: !6495, line: 385, type: !6641)
!6644 = !DILocalVariable(name: "psp", arg: 2, scope: !6638, file: !6495, line: 385, type: !6641)
!6645 = !DILocalVariable(name: "thread", scope: !6638, file: !6495, line: 388, type: !6646)
!6646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6647, size: 32)
!6647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6499)
!6648 = !DILocalVariable(name: "guard_len", scope: !6638, file: !6495, line: 405, type: !156)
!6649 = !DILocation(line: 0, scope: !6638)
!6650 = !DILocation(line: 388, column: 34, scope: !6638)
!6651 = !DILocation(line: 390, column: 13, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6638, file: !6495, line: 390, column: 6)
!6653 = !DILocation(line: 390, column: 6, scope: !6638)
!6654 = !DILocation(line: 438, column: 6, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6638, file: !6495, line: 438, column: 6)
!6656 = !DILocation(line: 438, column: 6, scope: !6638)
!6657 = !DILocation(line: 442, column: 3, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6655, file: !6495, line: 440, column: 22)
!6659 = !DILocation(line: 455, column: 1, scope: !6638)
!6660 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6495, file: !6495, line: 530, type: !6661, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6663)
!6661 = !DISubroutineType(types: !6662)
!6662 = !{null, !6498, !1242, !352}
!6663 = !{!6664, !6665, !6666}
!6664 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6660, file: !6495, line: 530, type: !6498)
!6665 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6660, file: !6495, line: 530, type: !1242)
!6666 = !DILocalVariable(name: "_main", arg: 3, scope: !6660, file: !6495, line: 531, type: !352)
!6667 = !DILocation(line: 0, scope: !6660)
!6668 = !DILocation(line: 535, column: 11, scope: !6660)
!6669 = !DILocation(line: 560, column: 2, scope: !6660)
!6670 = !DILocation(line: 576, column: 2, scope: !6660)
!6671 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6672 = !DILocation(line: 603, column: 2, scope: !6660)
!6673 = distinct !DISubprogram(name: "z_arm_fault", scope: !6674, file: !6674, line: 1036, type: !6675, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !6690)
!6674 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6675 = !DISubroutineType(types: !6676)
!6676 = !{null, !156, !156, !156, !6677}
!6677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6678, size: 32)
!6678 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !296, line: 37, baseType: !6679)
!6679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6680)
!6680 = !{!6681, !6682, !6683, !6684, !6685, !6686, !6687, !6688, !6689}
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6679, file: !296, line: 26, baseType: !156, size: 32)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6679, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6679, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6679, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6679, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6679, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6679, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6679, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6679, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6690 = !{!6691, !6692, !6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700}
!6691 = !DILocalVariable(name: "msp", arg: 1, scope: !6673, file: !6674, line: 1036, type: !156)
!6692 = !DILocalVariable(name: "psp", arg: 2, scope: !6673, file: !6674, line: 1036, type: !156)
!6693 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6673, file: !6674, line: 1036, type: !156)
!6694 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6673, file: !6674, line: 1037, type: !6677)
!6695 = !DILocalVariable(name: "reason", scope: !6673, file: !6674, line: 1039, type: !156)
!6696 = !DILocalVariable(name: "fault", scope: !6673, file: !6674, line: 1040, type: !118)
!6697 = !DILocalVariable(name: "recoverable", scope: !6673, file: !6674, line: 1041, type: !146)
!6698 = !DILocalVariable(name: "nested_exc", scope: !6673, file: !6674, line: 1041, type: !146)
!6699 = !DILocalVariable(name: "esf", scope: !6673, file: !6674, line: 1042, type: !2825)
!6700 = !DILocalVariable(name: "esf_copy", scope: !6673, file: !6674, line: 1047, type: !2826)
!6701 = !DILocation(line: 0, scope: !6673)
!6702 = !DILocation(line: 1040, column: 19, scope: !6673)
!6703 = !DILocation(line: 1041, column: 2, scope: !6673)
!6704 = !DILocation(line: 1047, column: 2, scope: !6673)
!6705 = !DILocation(line: 1047, column: 15, scope: !6673)
!6706 = !DILocalVariable(name: "key", arg: 1, scope: !6707, file: !6191, line: 84, type: !32)
!6707 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6191, file: !6191, line: 84, type: !6202, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !6708)
!6708 = !{!6706}
!6709 = !DILocation(line: 0, scope: !6707, inlinedAt: !6710)
!6710 = distinct !DILocation(line: 1050, column: 2, scope: !6673)
!6711 = !DILocation(line: 95, column: 2, scope: !6707, inlinedAt: !6710)
!6712 = !{i64 2072197}
!6713 = !DILocation(line: 1055, column: 9, scope: !6673)
!6714 = !DILocation(line: 1056, column: 2, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !6674, line: 1056, column: 2)
!6716 = distinct !DILexicalBlock(scope: !6673, file: !6674, line: 1056, column: 2)
!6717 = !DILocation(line: 1056, column: 2, scope: !6716)
!6718 = !DILocation(line: 1056, column: 2, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6715, file: !6674, line: 1056, column: 2)
!6720 = !DILocation(line: 1040, column: 24, scope: !6673)
!6721 = !DILocation(line: 1063, column: 11, scope: !6673)
!6722 = !DILocation(line: 1064, column: 6, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6673, file: !6674, line: 1064, column: 6)
!6724 = !{i8 0, i8 2}
!6725 = !DILocation(line: 1064, column: 6, scope: !6673)
!6726 = !DILocation(line: 1070, column: 20, scope: !6673)
!6727 = !DILocation(line: 1070, column: 2, scope: !6673)
!6728 = !DILocation(line: 1089, column: 6, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6673, file: !6674, line: 1089, column: 6)
!6730 = !DILocation(line: 0, scope: !6729)
!6731 = !DILocation(line: 1089, column: 6, scope: !6673)
!6732 = !DILocation(line: 1090, column: 28, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6734, file: !6674, line: 1090, column: 7)
!6734 = distinct !DILexicalBlock(scope: !6729, file: !6674, line: 1089, column: 18)
!6735 = !DILocation(line: 1090, column: 44, scope: !6733)
!6736 = !DILocation(line: 1090, column: 7, scope: !6734)
!6737 = !DILocation(line: 1091, column: 24, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6733, file: !6674, line: 1090, column: 50)
!6739 = !DILocation(line: 1092, column: 3, scope: !6738)
!6740 = !DILocation(line: 1094, column: 23, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6729, file: !6674, line: 1093, column: 9)
!6742 = !DILocation(line: 1097, column: 2, scope: !6673)
!6743 = !DILocation(line: 1098, column: 1, scope: !6673)
!6744 = distinct !DISubprogram(name: "get_esf", scope: !6674, file: !6674, line: 894, type: !6745, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !6748)
!6745 = !DISubroutineType(types: !6746)
!6746 = !{!2825, !156, !156, !156, !6747}
!6747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!6748 = !{!6749, !6750, !6751, !6752, !6753, !6754}
!6749 = !DILocalVariable(name: "msp", arg: 1, scope: !6744, file: !6674, line: 894, type: !156)
!6750 = !DILocalVariable(name: "psp", arg: 2, scope: !6744, file: !6674, line: 894, type: !156)
!6751 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6744, file: !6674, line: 894, type: !156)
!6752 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6744, file: !6674, line: 895, type: !6747)
!6753 = !DILocalVariable(name: "alternative_state_exc", scope: !6744, file: !6674, line: 897, type: !146)
!6754 = !DILocalVariable(name: "ptr_esf", scope: !6744, file: !6674, line: 898, type: !2825)
!6755 = !DILocation(line: 0, scope: !6744)
!6756 = !DILocation(line: 900, column: 14, scope: !6744)
!6757 = !DILocation(line: 902, column: 49, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6744, file: !6674, line: 902, column: 6)
!6759 = !DILocation(line: 902, column: 6, scope: !6744)
!6760 = !DILocation(line: 983, column: 18, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6744, file: !6674, line: 983, column: 6)
!6762 = !DILocation(line: 991, column: 7, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !6674, line: 990, column: 30)
!6764 = distinct !DILexicalBlock(scope: !6744, file: !6674, line: 990, column: 6)
!6765 = !DILocation(line: 998, column: 16, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !6674, line: 995, column: 10)
!6767 = distinct !DILexicalBlock(scope: !6763, file: !6674, line: 991, column: 7)
!6768 = !DILocation(line: 1002, column: 2, scope: !6744)
!6769 = !DILocation(line: 1003, column: 1, scope: !6744)
!6770 = distinct !DISubprogram(name: "fault_handle", scope: !6674, file: !6674, line: 786, type: !6771, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !6773)
!6771 = !DISubroutineType(types: !6772)
!6772 = !{!156, !2825, !118, !6747}
!6773 = !{!6774, !6775, !6776, !6777}
!6774 = !DILocalVariable(name: "esf", arg: 1, scope: !6770, file: !6674, line: 786, type: !2825)
!6775 = !DILocalVariable(name: "fault", arg: 2, scope: !6770, file: !6674, line: 786, type: !118)
!6776 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6770, file: !6674, line: 786, type: !6747)
!6777 = !DILocalVariable(name: "reason", scope: !6770, file: !6674, line: 788, type: !156)
!6778 = !DILocation(line: 0, scope: !6770)
!6779 = !DILocation(line: 790, column: 15, scope: !6770)
!6780 = !DILocation(line: 792, column: 2, scope: !6770)
!6781 = !DILocation(line: 794, column: 12, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6770, file: !6674, line: 792, column: 17)
!6783 = !DILocation(line: 795, column: 3, scope: !6782)
!6784 = !DILocation(line: 800, column: 12, scope: !6782)
!6785 = !DILocation(line: 801, column: 3, scope: !6782)
!6786 = !DILocation(line: 803, column: 12, scope: !6782)
!6787 = !DILocation(line: 804, column: 3, scope: !6782)
!6788 = !DILocation(line: 806, column: 12, scope: !6782)
!6789 = !DILocation(line: 807, column: 3, scope: !6782)
!6790 = !DILocation(line: 814, column: 3, scope: !6782)
!6791 = !DILocation(line: 815, column: 3, scope: !6782)
!6792 = !DILocation(line: 829, column: 2, scope: !6770)
!6793 = distinct !DISubprogram(name: "hard_fault", scope: !6674, file: !6674, line: 709, type: !6794, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !6796)
!6794 = !DISubroutineType(types: !6795)
!6795 = !{!156, !2825, !6747}
!6796 = !{!6797, !6798, !6799}
!6797 = !DILocalVariable(name: "esf", arg: 1, scope: !6793, file: !6674, line: 709, type: !2825)
!6798 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6793, file: !6674, line: 709, type: !6747)
!6799 = !DILocalVariable(name: "reason", scope: !6793, file: !6674, line: 711, type: !156)
!6800 = !DILocation(line: 0, scope: !6793)
!6801 = !DILocation(line: 732, column: 15, scope: !6793)
!6802 = !DILocation(line: 734, column: 12, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6793, file: !6674, line: 734, column: 6)
!6804 = !DILocation(line: 734, column: 17, scope: !6803)
!6805 = !DILocation(line: 734, column: 41, scope: !6803)
!6806 = !DILocation(line: 734, column: 6, scope: !6793)
!6807 = !DILocation(line: 736, column: 19, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6803, file: !6674, line: 736, column: 13)
!6809 = !DILocation(line: 736, column: 49, scope: !6808)
!6810 = !DILocation(line: 736, column: 13, scope: !6803)
!6811 = !DILocation(line: 738, column: 19, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6808, file: !6674, line: 738, column: 13)
!6813 = !DILocation(line: 738, column: 24, scope: !6812)
!6814 = !DILocation(line: 738, column: 47, scope: !6812)
!6815 = !DILocation(line: 738, column: 13, scope: !6808)
!6816 = !DILocation(line: 740, column: 7, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6674, line: 740, column: 7)
!6818 = distinct !DILexicalBlock(scope: !6812, file: !6674, line: 738, column: 53)
!6819 = !DILocation(line: 740, column: 7, scope: !6818)
!6820 = !DILocation(line: 742, column: 24, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6817, file: !6674, line: 740, column: 38)
!6822 = !DILocation(line: 743, column: 3, scope: !6821)
!6823 = !DILocation(line: 743, column: 20, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6817, file: !6674, line: 743, column: 14)
!6825 = !DILocation(line: 743, column: 25, scope: !6824)
!6826 = !DILocation(line: 743, column: 52, scope: !6824)
!6827 = !DILocation(line: 743, column: 14, scope: !6817)
!6828 = !DILocation(line: 744, column: 13, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6824, file: !6674, line: 743, column: 58)
!6830 = !DILocation(line: 745, column: 3, scope: !6829)
!6831 = !DILocation(line: 745, column: 20, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6824, file: !6674, line: 745, column: 14)
!6833 = !DILocation(line: 745, column: 25, scope: !6832)
!6834 = !DILocation(line: 745, column: 52, scope: !6832)
!6835 = !DILocation(line: 745, column: 14, scope: !6824)
!6836 = !DILocation(line: 746, column: 13, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6832, file: !6674, line: 745, column: 58)
!6838 = !DILocation(line: 747, column: 3, scope: !6837)
!6839 = !DILocation(line: 747, column: 20, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6832, file: !6674, line: 747, column: 14)
!6841 = !DILocation(line: 747, column: 52, scope: !6840)
!6842 = !DILocation(line: 747, column: 14, scope: !6832)
!6843 = !DILocation(line: 748, column: 13, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6840, file: !6674, line: 747, column: 58)
!6845 = !DILocation(line: 754, column: 4, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !6674, line: 754, column: 4)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6674, line: 754, column: 4)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6674, line: 754, column: 4)
!6849 = distinct !DILexicalBlock(scope: !6840, file: !6674, line: 753, column: 10)
!6850 = !DILocation(line: 758, column: 3, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6674, line: 758, column: 3)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !6674, line: 758, column: 3)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !6674, line: 758, column: 3)
!6854 = distinct !DILexicalBlock(scope: !6812, file: !6674, line: 757, column: 9)
!6855 = !DILocation(line: 766, column: 2, scope: !6793)
!6856 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6674, file: !6674, line: 229, type: !6771, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !6857)
!6857 = !{!6858, !6859, !6860, !6861, !6862, !6863, !6866}
!6858 = !DILocalVariable(name: "esf", arg: 1, scope: !6856, file: !6674, line: 229, type: !2825)
!6859 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6856, file: !6674, line: 229, type: !118)
!6860 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6856, file: !6674, line: 230, type: !6747)
!6861 = !DILocalVariable(name: "reason", scope: !6856, file: !6674, line: 232, type: !156)
!6862 = !DILocalVariable(name: "mmfar", scope: !6856, file: !6674, line: 233, type: !156)
!6863 = !DILocalVariable(name: "temp", scope: !6864, file: !6674, line: 254, type: !156)
!6864 = distinct !DILexicalBlock(scope: !6865, file: !6674, line: 244, column: 48)
!6865 = distinct !DILexicalBlock(scope: !6856, file: !6674, line: 244, column: 6)
!6866 = !DILocalVariable(name: "min_stack_ptr", scope: !6867, file: !6674, line: 309, type: !156)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6674, line: 308, column: 43)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !6674, line: 308, column: 7)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6674, line: 289, column: 40)
!6870 = distinct !DILexicalBlock(scope: !6856, file: !6674, line: 288, column: 6)
!6871 = !DILocation(line: 0, scope: !6856)
!6872 = !DILocation(line: 237, column: 12, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6856, file: !6674, line: 237, column: 6)
!6874 = !DILocation(line: 241, column: 12, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6856, file: !6674, line: 241, column: 6)
!6876 = !DILocation(line: 244, column: 12, scope: !6865)
!6877 = !DILocation(line: 244, column: 17, scope: !6865)
!6878 = !DILocation(line: 244, column: 42, scope: !6865)
!6879 = !DILocation(line: 244, column: 6, scope: !6856)
!6880 = !DILocation(line: 254, column: 24, scope: !6864)
!6881 = !DILocation(line: 0, scope: !6864)
!6882 = !DILocation(line: 256, column: 13, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6864, file: !6674, line: 256, column: 7)
!6884 = !DILocation(line: 256, column: 18, scope: !6883)
!6885 = !DILocation(line: 256, column: 44, scope: !6883)
!6886 = !DILocation(line: 256, column: 7, scope: !6864)
!6887 = !DILocation(line: 259, column: 24, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !6674, line: 259, column: 8)
!6889 = distinct !DILexicalBlock(scope: !6883, file: !6674, line: 256, column: 50)
!6890 = !DILocation(line: 259, column: 8, scope: !6889)
!6891 = !DILocation(line: 261, column: 15, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6888, file: !6674, line: 259, column: 30)
!6893 = !DILocation(line: 262, column: 4, scope: !6892)
!6894 = !DILocation(line: 265, column: 12, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6856, file: !6674, line: 265, column: 6)
!6896 = !DILocation(line: 269, column: 12, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6856, file: !6674, line: 269, column: 6)
!6898 = !DILocation(line: 288, column: 12, scope: !6870)
!6899 = !DILocation(line: 288, column: 17, scope: !6870)
!6900 = !DILocation(line: 288, column: 41, scope: !6870)
!6901 = !DILocation(line: 289, column: 9, scope: !6870)
!6902 = !DILocation(line: 289, column: 14, scope: !6870)
!6903 = !DILocation(line: 288, column: 6, scope: !6856)
!6904 = !DILocation(line: 308, column: 12, scope: !6868)
!6905 = !DILocation(line: 308, column: 17, scope: !6868)
!6906 = !DILocation(line: 308, column: 7, scope: !6869)
!6907 = !DILocation(line: 310, column: 6, scope: !6867)
!6908 = !DILocation(line: 309, column: 29, scope: !6867)
!6909 = !DILocation(line: 0, scope: !6867)
!6910 = !DILocation(line: 312, column: 8, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6867, file: !6674, line: 312, column: 8)
!6912 = !DILocation(line: 312, column: 8, scope: !6867)
!6913 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6914, file: !6365, line: 1099, type: !156)
!6914 = distinct !DISubprogram(name: "__set_PSP", scope: !6365, file: !6365, line: 1099, type: !6462, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !6915)
!6915 = !{!6913}
!6916 = !DILocation(line: 0, scope: !6914, inlinedAt: !6917)
!6917 = distinct !DILocation(line: 338, column: 5, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6911, file: !6674, line: 312, column: 23)
!6919 = !DILocation(line: 1101, column: 3, scope: !6914, inlinedAt: !6917)
!6920 = !{i64 2947562}
!6921 = !DILocation(line: 341, column: 4, scope: !6918)
!6922 = !DILocation(line: 342, column: 5, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !6674, line: 342, column: 5)
!6924 = distinct !DILexicalBlock(scope: !6925, file: !6674, line: 342, column: 5)
!6925 = distinct !DILexicalBlock(scope: !6911, file: !6674, line: 341, column: 11)
!6926 = !DILocation(line: 342, column: 5, scope: !6924)
!6927 = !DILocation(line: 342, column: 5, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6923, file: !6674, line: 342, column: 5)
!6929 = !DILocation(line: 360, column: 12, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6856, file: !6674, line: 360, column: 6)
!6931 = !DILocation(line: 360, column: 17, scope: !6930)
!6932 = !DILocation(line: 360, column: 41, scope: !6930)
!6933 = !DILocation(line: 360, column: 6, scope: !6856)
!6934 = !DILocation(line: 361, column: 14, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6930, file: !6674, line: 360, column: 47)
!6936 = !DILocation(line: 362, column: 2, scope: !6935)
!6937 = !DILocation(line: 366, column: 12, scope: !6856)
!6938 = !DILocation(line: 369, column: 15, scope: !6856)
!6939 = !DILocation(line: 371, column: 2, scope: !6856)
!6940 = distinct !DISubprogram(name: "bus_fault", scope: !6674, file: !6674, line: 383, type: !6941, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !6943)
!6941 = !DISubroutineType(types: !6942)
!6942 = !{!118, !2825, !118, !6747}
!6943 = !{!6944, !6945, !6946, !6947, !6948}
!6944 = !DILocalVariable(name: "esf", arg: 1, scope: !6940, file: !6674, line: 383, type: !2825)
!6945 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6940, file: !6674, line: 383, type: !118)
!6946 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6940, file: !6674, line: 383, type: !6747)
!6947 = !DILocalVariable(name: "reason", scope: !6940, file: !6674, line: 385, type: !156)
!6948 = !DILocalVariable(name: "bfar", scope: !6949, file: !6674, line: 405, type: !156)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6674, line: 395, column: 42)
!6950 = distinct !DILexicalBlock(scope: !6940, file: !6674, line: 395, column: 6)
!6951 = !DILocation(line: 0, scope: !6940)
!6952 = !DILocation(line: 389, column: 11, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6940, file: !6674, line: 389, column: 6)
!6954 = !DILocation(line: 392, column: 11, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6940, file: !6674, line: 392, column: 6)
!6956 = !DILocation(line: 395, column: 11, scope: !6950)
!6957 = !DILocation(line: 395, column: 16, scope: !6950)
!6958 = !DILocation(line: 395, column: 6, scope: !6940)
!6959 = !DILocation(line: 405, column: 3, scope: !6949)
!6960 = !DILocation(line: 0, scope: !6949)
!6961 = !DILocation(line: 407, column: 13, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6949, file: !6674, line: 407, column: 7)
!6963 = !DILocation(line: 407, column: 18, scope: !6962)
!6964 = !DILocation(line: 407, column: 44, scope: !6962)
!6965 = !DILocation(line: 407, column: 7, scope: !6949)
!6966 = !DILocation(line: 411, column: 15, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6674, line: 409, column: 30)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6674, line: 409, column: 8)
!6969 = distinct !DILexicalBlock(scope: !6962, file: !6674, line: 407, column: 50)
!6970 = !DILocation(line: 412, column: 4, scope: !6967)
!6971 = !DILocation(line: 415, column: 11, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6940, file: !6674, line: 415, column: 6)
!6973 = !DILocation(line: 418, column: 12, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6940, file: !6674, line: 418, column: 6)
!6975 = !DILocation(line: 418, column: 17, scope: !6974)
!6976 = !DILocation(line: 418, column: 41, scope: !6974)
!6977 = !DILocation(line: 418, column: 6, scope: !6940)
!6978 = !DILocation(line: 423, column: 18, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6974, file: !6674, line: 423, column: 13)
!6980 = !DILocation(line: 524, column: 12, scope: !6940)
!6981 = !DILocation(line: 526, column: 15, scope: !6940)
!6982 = !DILocation(line: 528, column: 2, scope: !6940)
!6983 = distinct !DISubprogram(name: "usage_fault", scope: !6674, file: !6674, line: 539, type: !6984, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !6988)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{!156, !6986}
!6986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6987, size: 32)
!6987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2826)
!6988 = !{!6989, !6990}
!6989 = !DILocalVariable(name: "esf", arg: 1, scope: !6983, file: !6674, line: 539, type: !6986)
!6990 = !DILocalVariable(name: "reason", scope: !6983, file: !6674, line: 541, type: !156)
!6991 = !DILocation(line: 0, scope: !6983)
!6992 = !DILocation(line: 546, column: 12, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6983, file: !6674, line: 546, column: 6)
!6994 = !DILocation(line: 549, column: 12, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6983, file: !6674, line: 549, column: 6)
!6996 = !DILocation(line: 567, column: 12, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6983, file: !6674, line: 567, column: 6)
!6998 = !DILocation(line: 570, column: 12, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6983, file: !6674, line: 570, column: 6)
!7000 = !DILocation(line: 573, column: 12, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6983, file: !6674, line: 573, column: 6)
!7002 = !DILocation(line: 576, column: 12, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6983, file: !6674, line: 576, column: 6)
!7004 = !DILocation(line: 581, column: 12, scope: !6983)
!7005 = !DILocation(line: 583, column: 2, scope: !6983)
!7006 = distinct !DISubprogram(name: "debug_monitor", scope: !6674, file: !6674, line: 632, type: !7007, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !7009)
!7007 = !DISubroutineType(types: !7008)
!7008 = !{null, !2825, !6747}
!7009 = !{!7010, !7011}
!7010 = !DILocalVariable(name: "esf", arg: 1, scope: !7006, file: !6674, line: 632, type: !2825)
!7011 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7006, file: !6674, line: 632, type: !6747)
!7012 = !DILocation(line: 0, scope: !7006)
!7013 = !DILocation(line: 634, column: 15, scope: !7006)
!7014 = !DILocation(line: 652, column: 1, scope: !7006)
!7015 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6674, file: !6674, line: 658, type: !7016, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !7018)
!7016 = !DISubroutineType(types: !7017)
!7017 = !{!146, !2825}
!7018 = !{!7019, !7020, !7021}
!7019 = !DILocalVariable(name: "esf", arg: 1, scope: !7015, file: !6674, line: 658, type: !2825)
!7020 = !DILocalVariable(name: "ret_addr", scope: !7015, file: !6674, line: 660, type: !2596)
!7021 = !DILocalVariable(name: "fault_insn", scope: !7015, file: !6674, line: 686, type: !279)
!7022 = !DILocation(line: 0, scope: !7015)
!7023 = !DILocation(line: 660, column: 46, scope: !7015)
!7024 = !DILocation(line: 660, column: 23, scope: !7015)
!7025 = !DILocation(line: 682, column: 11, scope: !7015)
!7026 = !DILocation(line: 271, column: 3, scope: !7027, inlinedAt: !7028)
!7027 = distinct !DISubprogram(name: "__DSB", scope: !6365, file: !6365, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2149)
!7028 = distinct !DILocation(line: 683, column: 2, scope: !7015)
!7029 = !{i64 2923697}
!7030 = !DILocation(line: 260, column: 3, scope: !7031, inlinedAt: !7032)
!7031 = distinct !DISubprogram(name: "__ISB", scope: !6365, file: !6365, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2149)
!7032 = distinct !DILocation(line: 684, column: 2, scope: !7015)
!7033 = !{i64 2923414}
!7034 = !DILocation(line: 686, column: 35, scope: !7015)
!7035 = !DILocation(line: 686, column: 24, scope: !7015)
!7036 = !DILocation(line: 688, column: 11, scope: !7015)
!7037 = !DILocation(line: 271, column: 3, scope: !7027, inlinedAt: !7038)
!7038 = distinct !DILocation(line: 689, column: 2, scope: !7015)
!7039 = !DILocation(line: 260, column: 3, scope: !7031, inlinedAt: !7040)
!7040 = distinct !DILocation(line: 690, column: 2, scope: !7015)
!7041 = !DILocation(line: 693, column: 45, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7015, file: !6674, line: 693, column: 6)
!7043 = !DILocation(line: 699, column: 1, scope: !7015)
!7044 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6674, file: !6674, line: 1107, type: !365, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !2149)
!7045 = !DILocation(line: 1111, column: 11, scope: !7044)
!7046 = !DILocation(line: 1136, column: 1, scope: !7044)
!7047 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7048, file: !7048, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !7049)
!7048 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7049 = !{!7050}
!7050 = !DILocalVariable(name: "irq", scope: !7047, file: !7048, line: 28, type: !118)
!7051 = !DILocation(line: 0, scope: !7047)
!7052 = !DILocation(line: 30, column: 2, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7047, file: !7048, line: 30, column: 2)
!7054 = !DILocation(line: 31, column: 3, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !7048, line: 30, column: 39)
!7056 = distinct !DILexicalBlock(scope: !7053, file: !7048, line: 30, column: 2)
!7057 = !DILocation(line: 30, column: 35, scope: !7056)
!7058 = !DILocation(line: 30, column: 13, scope: !7056)
!7059 = distinct !{!7059, !7052, !7060}
!7060 = !DILocation(line: 32, column: 2, scope: !7053)
!7061 = !DILocation(line: 33, column: 1, scope: !7047)
!7062 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6405, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !7063)
!7063 = !{!7064, !7065}
!7064 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7062, file: !656, line: 1814, type: !890)
!7065 = !DILocalVariable(name: "priority", arg: 2, scope: !7062, file: !656, line: 1814, type: !156)
!7066 = !DILocation(line: 0, scope: !7062)
!7067 = !DILocation(line: 1816, column: 7, scope: !7062)
!7068 = !DILocation(line: 0, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7062, file: !656, line: 1816, column: 7)
!7070 = !DILocation(line: 1824, column: 1, scope: !7062)
!7071 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7072, file: !7072, line: 27, type: !7073, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !7178)
!7072 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7073 = !DISubroutineType(types: !7074)
!7074 = !{null, !7075}
!7075 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !7076)
!7076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7077, size: 32)
!7077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !7078)
!7078 = !{!7079, !7137, !7149, !7150, !7151, !7152, !7158, !7173}
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7077, file: !225, line: 247, baseType: !7080, size: 384)
!7080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !7081)
!7081 = !{!7082, !7106, !7113, !7114, !7115, !7124, !7125, !7126}
!7082 = !DIDerivedType(tag: DW_TAG_member, scope: !7080, file: !225, line: 60, baseType: !7083, size: 64)
!7083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7080, file: !225, line: 60, size: 64, elements: !7084)
!7084 = !{!7085, !7100}
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7083, file: !225, line: 61, baseType: !7086, size: 64)
!7086 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !7087)
!7087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !7088)
!7088 = !{!7089, !7095}
!7089 = !DIDerivedType(tag: DW_TAG_member, scope: !7087, file: !235, line: 38, baseType: !7090, size: 32)
!7090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7087, file: !235, line: 38, size: 32, elements: !7091)
!7091 = !{!7092, !7094}
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7090, file: !235, line: 39, baseType: !7093, size: 32)
!7093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7087, size: 32)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7090, file: !235, line: 40, baseType: !7093, size: 32)
!7095 = !DIDerivedType(tag: DW_TAG_member, scope: !7087, file: !235, line: 42, baseType: !7096, size: 32, offset: 32)
!7096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7087, file: !235, line: 42, size: 32, elements: !7097)
!7097 = !{!7098, !7099}
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7096, file: !235, line: 43, baseType: !7093, size: 32)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7096, file: !235, line: 44, baseType: !7093, size: 32)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7083, file: !225, line: 62, baseType: !7101, size: 64)
!7101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !7102)
!7102 = !{!7103}
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7101, file: !251, line: 50, baseType: !7104, size: 64)
!7104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7105, size: 64, elements: !256)
!7105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7101, size: 32)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7080, file: !225, line: 68, baseType: !7107, size: 32, offset: 64)
!7107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7108, size: 32)
!7108 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !7109)
!7109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !7110)
!7110 = !{!7111}
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7109, file: !261, line: 232, baseType: !7112, size: 64)
!7112 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !7087)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7080, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7080, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!7115 = !DIDerivedType(tag: DW_TAG_member, scope: !7080, file: !225, line: 90, baseType: !7116, size: 16, offset: 112)
!7116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7080, file: !225, line: 90, size: 16, elements: !7117)
!7117 = !{!7118, !7123}
!7118 = !DIDerivedType(tag: DW_TAG_member, scope: !7116, file: !225, line: 91, baseType: !7119, size: 16)
!7119 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7116, file: !225, line: 91, size: 16, elements: !7120)
!7120 = !{!7121, !7122}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7119, file: !225, line: 96, baseType: !275, size: 8)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7119, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7116, file: !225, line: 100, baseType: !279, size: 16)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7080, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7080, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7080, file: !225, line: 131, baseType: !7127, size: 192, offset: 192)
!7127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !7128)
!7128 = !{!7129, !7130, !7136}
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7127, file: !261, line: 245, baseType: !7086, size: 64)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7127, file: !261, line: 246, baseType: !7131, size: 32, offset: 64)
!7131 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !7132)
!7132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7133, size: 32)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{null, !7135}
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7127, size: 32)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7127, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7077, file: !225, line: 250, baseType: !7138, size: 288, offset: 384)
!7138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !7139)
!7139 = !{!7140, !7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148}
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7138, file: !296, line: 26, baseType: !156, size: 32)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7138, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7138, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7138, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7138, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7138, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7138, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7138, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7138, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7077, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7077, file: !225, line: 256, baseType: !7108, size: 64, offset: 704)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7077, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7077, file: !225, line: 300, baseType: !7153, size: 96, offset: 800)
!7153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !7154)
!7154 = !{!7155, !7156, !7157}
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7153, file: !225, line: 153, baseType: !22, size: 32)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7153, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7153, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7077, file: !225, line: 325, baseType: !7159, size: 32, offset: 896)
!7159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7160, size: 32)
!7160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !7161)
!7161 = !{!7162, !7168, !7169}
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7160, file: !220, line: 5074, baseType: !7163, size: 96)
!7163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !7164)
!7164 = !{!7165, !7166, !7167}
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7163, file: !324, line: 57, baseType: !327, size: 32)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7163, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7163, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7160, file: !220, line: 5075, baseType: !7108, size: 64, offset: 96)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7160, file: !220, line: 5076, baseType: !7170, size: 32, offset: 160)
!7170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !7171)
!7171 = !{!7172}
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7170, file: !334, line: 52, baseType: !22, size: 32)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7077, file: !225, line: 343, baseType: !7174, size: 64, offset: 928)
!7174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !7175)
!7175 = !{!7176, !7177}
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7174, file: !296, line: 63, baseType: !156, size: 32)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7174, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!7178 = !{!7179}
!7179 = !DILocalVariable(name: "thread", arg: 1, scope: !7071, file: !7072, line: 27, type: !7075)
!7180 = !DILocation(line: 0, scope: !7071)
!7181 = !DILocation(line: 29, column: 6, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7071, file: !7072, line: 29, column: 6)
!7183 = !DILocation(line: 29, column: 15, scope: !7182)
!7184 = !DILocation(line: 29, column: 6, scope: !7071)
!7185 = !DILocation(line: 1031, column: 3, scope: !7186, inlinedAt: !7189)
!7186 = distinct !DISubprogram(name: "__get_IPSR", scope: !6365, file: !6365, line: 1027, type: !6452, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !7187)
!7187 = !{!7188}
!7188 = !DILocalVariable(name: "result", scope: !7186, file: !6365, line: 1029, type: !156)
!7189 = distinct !DILocation(line: 48, column: 10, scope: !7190, inlinedAt: !7194)
!7190 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7191, file: !7191, line: 46, type: !7192, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !2149)
!7191 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7192 = !DISubroutineType(types: !7193)
!7193 = !{!146}
!7194 = distinct !DILocation(line: 30, column: 7, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7196, file: !7072, line: 30, column: 7)
!7196 = distinct !DILexicalBlock(scope: !7182, file: !7072, line: 29, column: 26)
!7197 = !{i64 2912545}
!7198 = !DILocation(line: 0, scope: !7186, inlinedAt: !7189)
!7199 = !DILocation(line: 48, column: 9, scope: !7190, inlinedAt: !7194)
!7200 = !DILocation(line: 30, column: 7, scope: !7196)
!7201 = !DILocation(line: 42, column: 14, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7195, file: !7072, line: 30, column: 25)
!7203 = !DILocation(line: 48, column: 15, scope: !7202)
!7204 = !DILocation(line: 49, column: 3, scope: !7202)
!7205 = !DILocation(line: 52, column: 2, scope: !7071)
!7206 = !DILocation(line: 53, column: 1, scope: !7071)
!7207 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !523, file: !523, line: 127, type: !365, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !516, retainedNodes: !2149)
!7208 = !DILocation(line: 134, column: 2, scope: !7207)
!7209 = !DILocation(line: 156, column: 1, scope: !7207)
!7210 = !DILocation(line: 0, scope: !522)
!7211 = !DILocation(line: 289, column: 36, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !522, file: !523, line: 285, column: 2)
!7213 = !DILocation(line: 289, column: 42, scope: !7212)
!7214 = !DILocation(line: 300, column: 36, scope: !522)
!7215 = !DILocation(line: 301, column: 35, scope: !522)
!7216 = !DILocation(line: 302, column: 37, scope: !522)
!7217 = !DILocation(line: 311, column: 2, scope: !522)
!7218 = !DILocation(line: 316, column: 1, scope: !522)
!7219 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !684, file: !684, line: 180, type: !365, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2149)
!7220 = !DILocation(line: 188, column: 12, scope: !7219)
!7221 = !DILocation(line: 271, column: 3, scope: !7222, inlinedAt: !7223)
!7222 = distinct !DISubprogram(name: "__DSB", scope: !6365, file: !6365, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2149)
!7223 = distinct !DILocation(line: 192, column: 2, scope: !7219)
!7224 = !{i64 3088560}
!7225 = !DILocation(line: 260, column: 3, scope: !7226, inlinedAt: !7227)
!7226 = distinct !DISubprogram(name: "__ISB", scope: !6365, file: !6365, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2149)
!7227 = distinct !DILocation(line: 193, column: 2, scope: !7219)
!7228 = !{i64 3088277}
!7229 = !DILocation(line: 194, column: 1, scope: !7219)
!7230 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !684, file: !684, line: 199, type: !365, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2149)
!7231 = !DILocation(line: 282, column: 3, scope: !7232, inlinedAt: !7233)
!7232 = distinct !DISubprogram(name: "__DMB", scope: !6365, file: !6365, line: 280, type: !365, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2149)
!7233 = distinct !DILocation(line: 202, column: 2, scope: !7230)
!7234 = !{i64 3088836}
!7235 = !DILocation(line: 205, column: 12, scope: !7230)
!7236 = !DILocation(line: 206, column: 1, scope: !7230)
!7237 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !684, file: !684, line: 275, type: !7238, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7251)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{null, !7240, !1931, !6641, !6641}
!7240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7241, size: 32)
!7241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7242)
!7242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !635, line: 52, size: 96, elements: !7243)
!7243 = !{!7244, !7245, !7246}
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7242, file: !635, line: 53, baseType: !22, size: 32)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7242, file: !635, line: 54, baseType: !315, size: 32, offset: 32)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7242, file: !635, line: 55, baseType: !7247, size: 32, offset: 64)
!7247 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !641, line: 151, baseType: !7248)
!7248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 149, size: 32, elements: !7249)
!7249 = !{!7250}
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7248, file: !641, line: 150, baseType: !156, size: 32)
!7251 = !{!7252, !7253, !7254, !7255}
!7252 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7237, file: !684, line: 276, type: !7240)
!7253 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7237, file: !684, line: 276, type: !1931)
!7254 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7237, file: !684, line: 277, type: !6641)
!7255 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7237, file: !684, line: 277, type: !6641)
!7256 = !DILocation(line: 0, scope: !7237)
!7257 = !DILocation(line: 279, column: 6, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7237, file: !684, line: 279, column: 6)
!7259 = !DILocation(line: 280, column: 57, scope: !7258)
!7260 = !DILocation(line: 279, column: 6, scope: !7237)
!7261 = !DILocation(line: 282, column: 3, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !684, line: 282, column: 3)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !684, line: 282, column: 3)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !684, line: 282, column: 3)
!7265 = distinct !DILexicalBlock(scope: !7258, file: !684, line: 280, column: 69)
!7266 = !DILocation(line: 285, column: 1, scope: !7237)
!7267 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7268, file: !7268, line: 220, type: !7269, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7271)
!7268 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7269 = !DISubroutineType(types: !7270)
!7270 = !{!118, !7240, !1931, !6641, !6641}
!7271 = !{!7272, !7273, !7274, !7275, !7276}
!7272 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7267, file: !7268, line: 221, type: !7240)
!7273 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7267, file: !7268, line: 221, type: !1931)
!7274 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7267, file: !7268, line: 222, type: !6641)
!7275 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7267, file: !7268, line: 223, type: !6641)
!7276 = !DILocalVariable(name: "mpu_reg_index", scope: !7267, file: !7268, line: 225, type: !118)
!7277 = !DILocation(line: 0, scope: !7267)
!7278 = !DILocation(line: 225, column: 22, scope: !7267)
!7279 = !DILocation(line: 233, column: 18, scope: !7267)
!7280 = !DILocation(line: 236, column: 23, scope: !7267)
!7281 = !DILocation(line: 236, column: 21, scope: !7267)
!7282 = !DILocation(line: 238, column: 2, scope: !7267)
!7283 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !684, file: !684, line: 105, type: !7284, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7286)
!7284 = !DISubroutineType(types: !7285)
!7285 = !{!118, !7240, !143, !143, !146}
!7286 = !{!7287, !7288, !7289, !7290, !7291, !7292}
!7287 = !DILocalVariable(name: "regions", arg: 1, scope: !7283, file: !684, line: 106, type: !7240)
!7288 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7283, file: !684, line: 106, type: !143)
!7289 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7283, file: !684, line: 106, type: !143)
!7290 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7283, file: !684, line: 107, type: !146)
!7291 = !DILocalVariable(name: "i", scope: !7283, file: !684, line: 109, type: !118)
!7292 = !DILocalVariable(name: "reg_index", scope: !7283, file: !684, line: 110, type: !118)
!7293 = !DILocation(line: 0, scope: !7283)
!7294 = !DILocation(line: 110, column: 18, scope: !7283)
!7295 = !DILocation(line: 112, column: 16, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7297, file: !684, line: 112, column: 2)
!7297 = distinct !DILexicalBlock(scope: !7283, file: !684, line: 112, column: 2)
!7298 = !DILocation(line: 112, column: 2, scope: !7297)
!7299 = !DILocation(line: 113, column: 7, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !684, line: 113, column: 7)
!7301 = distinct !DILexicalBlock(scope: !7296, file: !684, line: 112, column: 36)
!7302 = !DILocation(line: 113, column: 18, scope: !7300)
!7303 = !DILocation(line: 113, column: 23, scope: !7300)
!7304 = !DILocation(line: 113, column: 7, scope: !7301)
!7305 = !DILocation(line: 118, column: 23, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7301, file: !684, line: 118, column: 7)
!7307 = !DILocation(line: 119, column: 7, scope: !7306)
!7308 = !DILocation(line: 118, column: 7, scope: !7301)
!7309 = !DILocation(line: 124, column: 36, scope: !7301)
!7310 = !DILocation(line: 124, column: 15, scope: !7301)
!7311 = !DILocation(line: 126, column: 17, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7301, file: !684, line: 126, column: 7)
!7313 = !DILocation(line: 126, column: 7, scope: !7301)
!7314 = !DILocation(line: 131, column: 12, scope: !7301)
!7315 = !DILocation(line: 132, column: 2, scope: !7301)
!7316 = !DILocation(line: 112, column: 32, scope: !7296)
!7317 = distinct !{!7317, !7298, !7318}
!7318 = !DILocation(line: 132, column: 2, scope: !7297)
!7319 = !DILocation(line: 135, column: 1, scope: !7283)
!7320 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7268, file: !7268, line: 63, type: !7321, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7323)
!7321 = !DISubroutineType(types: !7322)
!7322 = !{!118, !7240}
!7323 = !{!7324, !7325}
!7324 = !DILocalVariable(name: "part", arg: 1, scope: !7320, file: !7268, line: 63, type: !7240)
!7325 = !DILocalVariable(name: "partition_is_valid", scope: !7320, file: !7268, line: 70, type: !118)
!7326 = !DILocation(line: 0, scope: !7320)
!7327 = !DILocation(line: 71, column: 11, scope: !7320)
!7328 = !DILocation(line: 71, column: 37, scope: !7320)
!7329 = !DILocation(line: 72, column: 3, scope: !7320)
!7330 = !DILocation(line: 71, column: 30, scope: !7320)
!7331 = !DILocation(line: 75, column: 11, scope: !7320)
!7332 = !DILocation(line: 75, column: 17, scope: !7320)
!7333 = !DILocation(line: 75, column: 38, scope: !7320)
!7334 = !DILocation(line: 77, column: 2, scope: !7320)
!7335 = distinct !DISubprogram(name: "mpu_configure_region", scope: !684, file: !684, line: 79, type: !7336, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7338)
!7336 = !DISubroutineType(types: !7337)
!7337 = !{!118, !1931, !7240}
!7338 = !{!7339, !7340, !7341}
!7339 = !DILocalVariable(name: "index", arg: 1, scope: !7335, file: !684, line: 79, type: !1931)
!7340 = !DILocalVariable(name: "new_region", arg: 2, scope: !7335, file: !684, line: 80, type: !7240)
!7341 = !DILocalVariable(name: "region_conf", scope: !7335, file: !684, line: 82, type: !673)
!7342 = !DILocation(line: 0, scope: !7335)
!7343 = !DILocation(line: 82, column: 2, scope: !7335)
!7344 = !DILocation(line: 82, column: 24, scope: !7335)
!7345 = !DILocation(line: 87, column: 33, scope: !7335)
!7346 = !DILocation(line: 87, column: 14, scope: !7335)
!7347 = !DILocation(line: 87, column: 19, scope: !7335)
!7348 = !DILocation(line: 91, column: 55, scope: !7335)
!7349 = !DILocation(line: 92, column: 16, scope: !7335)
!7350 = !DILocation(line: 92, column: 53, scope: !7335)
!7351 = !DILocation(line: 91, column: 2, scope: !7335)
!7352 = !DILocation(line: 95, column: 9, scope: !7335)
!7353 = !DILocation(line: 97, column: 1, scope: !7335)
!7354 = !DILocation(line: 95, column: 2, scope: !7335)
!7355 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7268, file: !7268, line: 113, type: !7356, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7361)
!7356 = !DISubroutineType(types: !7357)
!7357 = !{null, !7358, !7359, !156, !156}
!7358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!7359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7360, size: 32)
!7360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7247)
!7361 = !{!7362, !7363, !7364, !7365}
!7362 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7355, file: !7268, line: 114, type: !7358)
!7363 = !DILocalVariable(name: "attr", arg: 2, scope: !7355, file: !7268, line: 115, type: !7359)
!7364 = !DILocalVariable(name: "base", arg: 3, scope: !7355, file: !7268, line: 115, type: !156)
!7365 = !DILocalVariable(name: "size", arg: 4, scope: !7355, file: !7268, line: 115, type: !156)
!7366 = !DILocation(line: 0, scope: !7355)
!7367 = !DILocation(line: 127, column: 23, scope: !7355)
!7368 = !DILocation(line: 127, column: 35, scope: !7355)
!7369 = !DILocation(line: 127, column: 33, scope: !7355)
!7370 = !DILocation(line: 127, column: 10, scope: !7355)
!7371 = !DILocation(line: 127, column: 15, scope: !7355)
!7372 = !DILocation(line: 129, column: 1, scope: !7355)
!7373 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !684, file: !684, line: 57, type: !7374, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7376)
!7374 = !DISubroutineType(types: !7375)
!7375 = !{!118, !1931, !671}
!7376 = !{!7377, !7378}
!7377 = !DILocalVariable(name: "index", arg: 1, scope: !7373, file: !684, line: 57, type: !1931)
!7378 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7373, file: !684, line: 58, type: !671)
!7379 = !DILocation(line: 0, scope: !7373)
!7380 = !DILocation(line: 61, column: 6, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7373, file: !684, line: 61, column: 6)
!7382 = !DILocation(line: 61, column: 12, scope: !7381)
!7383 = !DILocation(line: 61, column: 6, scope: !7373)
!7384 = !DILocation(line: 71, column: 2, scope: !7373)
!7385 = !DILocation(line: 73, column: 2, scope: !7373)
!7386 = !DILocation(line: 74, column: 1, scope: !7373)
!7387 = distinct !DISubprogram(name: "region_init", scope: !7268, file: !7268, line: 29, type: !7388, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7390)
!7388 = !DISubroutineType(types: !7389)
!7389 = !{null, !6641, !671}
!7390 = !{!7391, !7392}
!7391 = !DILocalVariable(name: "index", arg: 1, scope: !7387, file: !7268, line: 29, type: !6641)
!7392 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7387, file: !7268, line: 30, type: !671)
!7393 = !DILocation(line: 0, scope: !7387)
!7394 = !DILocation(line: 33, column: 2, scope: !7387)
!7395 = !DILocation(line: 47, column: 28, scope: !7387)
!7396 = !DILocation(line: 47, column: 33, scope: !7387)
!7397 = !DILocation(line: 48, column: 26, scope: !7387)
!7398 = !DILocation(line: 47, column: 12, scope: !7387)
!7399 = !DILocation(line: 49, column: 32, scope: !7387)
!7400 = !DILocation(line: 49, column: 37, scope: !7387)
!7401 = !DILocation(line: 49, column: 12, scope: !7387)
!7402 = !DILocation(line: 53, column: 1, scope: !7387)
!7403 = distinct !DISubprogram(name: "set_region_number", scope: !7404, file: !7404, line: 32, type: !6462, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7405)
!7404 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7405 = !{!7406}
!7406 = !DILocalVariable(name: "index", arg: 1, scope: !7403, file: !7404, line: 32, type: !156)
!7407 = !DILocation(line: 0, scope: !7403)
!7408 = !DILocation(line: 34, column: 11, scope: !7403)
!7409 = !DILocation(line: 35, column: 1, scope: !7403)
!7410 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7268, file: !7268, line: 88, type: !7411, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7413)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{!156, !156}
!7413 = !{!7414}
!7414 = !DILocalVariable(name: "size", arg: 1, scope: !7410, file: !7268, line: 88, type: !156)
!7415 = !DILocation(line: 0, scope: !7410)
!7416 = !DILocation(line: 91, column: 11, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7410, file: !7268, line: 91, column: 6)
!7418 = !DILocation(line: 91, column: 6, scope: !7410)
!7419 = !DILocation(line: 100, column: 11, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7410, file: !7268, line: 100, column: 6)
!7421 = !DILocation(line: 100, column: 6, scope: !7410)
!7422 = !DILocation(line: 104, column: 35, scope: !7410)
!7423 = !DILocation(line: 104, column: 16, scope: !7410)
!7424 = !DILocation(line: 104, column: 50, scope: !7410)
!7425 = !DILocation(line: 104, column: 72, scope: !7410)
!7426 = !DILocation(line: 104, column: 2, scope: !7410)
!7427 = !DILocation(line: 106, column: 1, scope: !7410)
!7428 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !684, file: !684, line: 307, type: !7429, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7431)
!7429 = !DISubroutineType(types: !7430)
!7430 = !{null, !7240, !143}
!7431 = !{!7432, !7433}
!7432 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7428, file: !684, line: 308, type: !7240)
!7433 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7428, file: !684, line: 308, type: !143)
!7434 = !DILocation(line: 0, scope: !7428)
!7435 = !DILocation(line: 310, column: 6, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7428, file: !684, line: 310, column: 6)
!7437 = !DILocation(line: 311, column: 3, scope: !7436)
!7438 = !DILocation(line: 310, column: 6, scope: !7428)
!7439 = !DILocation(line: 313, column: 3, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7441, file: !684, line: 313, column: 3)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !684, line: 313, column: 3)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !684, line: 313, column: 3)
!7443 = distinct !DILexicalBlock(scope: !7436, file: !684, line: 311, column: 15)
!7444 = !DILocation(line: 316, column: 1, scope: !7428)
!7445 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7268, file: !7268, line: 249, type: !7446, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7448)
!7446 = !DISubroutineType(types: !7447)
!7447 = !{!118, !7240, !143}
!7448 = !{!7449, !7450, !7451, !7452}
!7449 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7445, file: !7268, line: 250, type: !7240)
!7450 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7445, file: !7268, line: 250, type: !143)
!7451 = !DILocalVariable(name: "mpu_reg_index", scope: !7445, file: !7268, line: 252, type: !118)
!7452 = !DILocalVariable(name: "i", scope: !7453, file: !7268, line: 264, type: !118)
!7453 = distinct !DILexicalBlock(scope: !7454, file: !7268, line: 264, column: 3)
!7454 = distinct !DILexicalBlock(scope: !7455, file: !7268, line: 261, column: 32)
!7455 = distinct !DILexicalBlock(scope: !7445, file: !7268, line: 261, column: 6)
!7456 = !DILocation(line: 0, scope: !7445)
!7457 = !DILocation(line: 252, column: 22, scope: !7445)
!7458 = !DILocation(line: 258, column: 18, scope: !7445)
!7459 = !DILocation(line: 261, column: 20, scope: !7455)
!7460 = !DILocation(line: 261, column: 6, scope: !7445)
!7461 = !DILocation(line: 0, scope: !7453)
!7462 = !DILocation(line: 265, column: 4, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !7268, line: 264, column: 59)
!7464 = distinct !DILexicalBlock(scope: !7453, file: !7268, line: 264, column: 3)
!7465 = !DILocation(line: 264, column: 55, scope: !7464)
!7466 = !DILocation(line: 264, column: 33, scope: !7464)
!7467 = !DILocation(line: 264, column: 3, scope: !7453)
!7468 = distinct !{!7468, !7467, !7469}
!7469 = !DILocation(line: 266, column: 3, scope: !7453)
!7470 = !DILocation(line: 269, column: 2, scope: !7445)
!7471 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7472, file: !7472, line: 218, type: !6462, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7473)
!7472 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7473 = !{!7474}
!7474 = !DILocalVariable(name: "rnr", arg: 1, scope: !7471, file: !7472, line: 218, type: !156)
!7475 = !DILocation(line: 0, scope: !7471)
!7476 = !DILocation(line: 220, column: 12, scope: !7471)
!7477 = !DILocation(line: 221, column: 13, scope: !7471)
!7478 = !DILocation(line: 222, column: 1, scope: !7471)
!7479 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !684, file: !684, line: 326, type: !7480, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7482)
!7480 = !DISubroutineType(types: !7481)
!7481 = !{!118}
!7482 = !{!7483}
!7483 = !DILocalVariable(name: "r_index", scope: !7479, file: !684, line: 328, type: !156)
!7484 = !DILocation(line: 330, column: 17, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7479, file: !684, line: 330, column: 6)
!7486 = !DILocation(line: 330, column: 29, scope: !7485)
!7487 = !DILocation(line: 330, column: 6, scope: !7479)
!7488 = !DILocation(line: 337, column: 3, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7490, file: !684, line: 337, column: 3)
!7490 = distinct !DILexicalBlock(scope: !7491, file: !684, line: 337, column: 3)
!7491 = distinct !DILexicalBlock(scope: !7492, file: !684, line: 337, column: 3)
!7492 = distinct !DILexicalBlock(scope: !7485, file: !684, line: 330, column: 50)
!7493 = !DILocation(line: 347, column: 2, scope: !7479)
!7494 = !DILocation(line: 0, scope: !7479)
!7495 = !DILocation(line: 364, column: 29, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7497, file: !684, line: 364, column: 2)
!7497 = distinct !DILexicalBlock(scope: !7479, file: !684, line: 364, column: 2)
!7498 = !DILocation(line: 364, column: 2, scope: !7497)
!7499 = !DILocation(line: 365, column: 25, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7496, file: !684, line: 364, column: 66)
!7501 = !DILocation(line: 365, column: 3, scope: !7500)
!7502 = !DILocation(line: 364, column: 62, scope: !7496)
!7503 = distinct !{!7503, !7498, !7504}
!7504 = !DILocation(line: 366, column: 2, scope: !7497)
!7505 = !DILocation(line: 369, column: 23, scope: !7479)
!7506 = !DILocation(line: 369, column: 21, scope: !7479)
!7507 = !DILocation(line: 372, column: 2, scope: !7479)
!7508 = !DILocation(line: 433, column: 2, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !684, line: 433, column: 2)
!7510 = distinct !DILexicalBlock(scope: !7479, file: !684, line: 433, column: 2)
!7511 = !DILocation(line: 433, column: 2, scope: !7510)
!7512 = !DILocation(line: 433, column: 2, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7509, file: !684, line: 433, column: 2)
!7514 = !DILocation(line: 444, column: 1, scope: !7479)
!7515 = distinct !DISubprogram(name: "strcpy", scope: !7516, file: !7516, line: 20, type: !7517, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7521)
!7516 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7517 = !DISubroutineType(types: !7518)
!7518 = !{!1242, !7519, !7520}
!7519 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1242)
!7520 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !133)
!7521 = !{!7522, !7523, !7524}
!7522 = !DILocalVariable(name: "d", arg: 1, scope: !7515, file: !7516, line: 20, type: !7519)
!7523 = !DILocalVariable(name: "s", arg: 2, scope: !7515, file: !7516, line: 20, type: !7520)
!7524 = !DILocalVariable(name: "dest", scope: !7515, file: !7516, line: 22, type: !1242)
!7525 = !DILocation(line: 0, scope: !7515)
!7526 = !DILocation(line: 24, column: 9, scope: !7515)
!7527 = !DILocation(line: 24, column: 12, scope: !7515)
!7528 = !DILocation(line: 24, column: 2, scope: !7515)
!7529 = !DILocation(line: 25, column: 6, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7515, file: !7516, line: 24, column: 21)
!7531 = !DILocation(line: 26, column: 4, scope: !7530)
!7532 = !DILocation(line: 27, column: 4, scope: !7530)
!7533 = distinct !{!7533, !7528, !7534}
!7534 = !DILocation(line: 28, column: 2, scope: !7515)
!7535 = !DILocation(line: 30, column: 5, scope: !7515)
!7536 = !DILocation(line: 32, column: 2, scope: !7515)
!7537 = distinct !DISubprogram(name: "strncpy", scope: !7516, file: !7516, line: 42, type: !7538, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7540)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{!1242, !7519, !7520, !315}
!7540 = !{!7541, !7542, !7543, !7544}
!7541 = !DILocalVariable(name: "d", arg: 1, scope: !7537, file: !7516, line: 42, type: !7519)
!7542 = !DILocalVariable(name: "s", arg: 2, scope: !7537, file: !7516, line: 42, type: !7520)
!7543 = !DILocalVariable(name: "n", arg: 3, scope: !7537, file: !7516, line: 42, type: !315)
!7544 = !DILocalVariable(name: "dest", scope: !7537, file: !7516, line: 44, type: !1242)
!7545 = !DILocation(line: 0, scope: !7537)
!7546 = !DILocation(line: 46, column: 12, scope: !7537)
!7547 = !DILocation(line: 46, column: 17, scope: !7537)
!7548 = !DILocation(line: 46, column: 20, scope: !7537)
!7549 = !DILocation(line: 46, column: 23, scope: !7537)
!7550 = !DILocation(line: 46, column: 2, scope: !7537)
!7551 = !DILocation(line: 47, column: 6, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7537, file: !7516, line: 46, column: 32)
!7553 = !DILocation(line: 48, column: 4, scope: !7552)
!7554 = !DILocation(line: 49, column: 4, scope: !7552)
!7555 = !DILocation(line: 50, column: 4, scope: !7552)
!7556 = distinct !{!7556, !7550, !7557}
!7557 = !DILocation(line: 51, column: 2, scope: !7537)
!7558 = !DILocation(line: 54, column: 6, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7537, file: !7516, line: 53, column: 16)
!7560 = !DILocation(line: 55, column: 4, scope: !7559)
!7561 = !DILocation(line: 56, column: 4, scope: !7559)
!7562 = !DILocation(line: 53, column: 11, scope: !7537)
!7563 = !DILocation(line: 53, column: 2, scope: !7537)
!7564 = distinct !{!7564, !7563, !7565}
!7565 = !DILocation(line: 57, column: 2, scope: !7537)
!7566 = !DILocation(line: 59, column: 2, scope: !7537)
!7567 = distinct !DISubprogram(name: "strchr", scope: !7516, file: !7516, line: 69, type: !7568, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7570)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!1242, !133, !118}
!7570 = !{!7571, !7572, !7573}
!7571 = !DILocalVariable(name: "s", arg: 1, scope: !7567, file: !7516, line: 69, type: !133)
!7572 = !DILocalVariable(name: "c", arg: 2, scope: !7567, file: !7516, line: 69, type: !118)
!7573 = !DILocalVariable(name: "tmp", scope: !7567, file: !7516, line: 71, type: !135)
!7574 = !DILocation(line: 0, scope: !7567)
!7575 = !DILocation(line: 73, column: 2, scope: !7567)
!7576 = !DILocation(line: 73, column: 10, scope: !7567)
!7577 = !DILocation(line: 73, column: 13, scope: !7567)
!7578 = !DILocation(line: 73, column: 21, scope: !7567)
!7579 = !DILocation(line: 74, column: 4, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7567, file: !7516, line: 73, column: 38)
!7581 = distinct !{!7581, !7575, !7582}
!7582 = !DILocation(line: 75, column: 2, scope: !7567)
!7583 = !DILocation(line: 77, column: 9, scope: !7567)
!7584 = !DILocation(line: 77, column: 2, scope: !7567)
!7585 = distinct !DISubprogram(name: "strrchr", scope: !7516, file: !7516, line: 87, type: !7568, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7586)
!7586 = !{!7587, !7588, !7589}
!7587 = !DILocalVariable(name: "s", arg: 1, scope: !7585, file: !7516, line: 87, type: !133)
!7588 = !DILocalVariable(name: "c", arg: 2, scope: !7585, file: !7516, line: 87, type: !118)
!7589 = !DILocalVariable(name: "match", scope: !7585, file: !7516, line: 89, type: !1242)
!7590 = !DILocation(line: 0, scope: !7585)
!7591 = !DILocation(line: 91, column: 2, scope: !7585)
!7592 = !DILocation(line: 92, column: 7, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !7516, line: 92, column: 7)
!7594 = distinct !DILexicalBlock(scope: !7585, file: !7516, line: 91, column: 5)
!7595 = !DILocation(line: 92, column: 10, scope: !7593)
!7596 = !DILocation(line: 92, column: 7, scope: !7594)
!7597 = !DILocation(line: 95, column: 13, scope: !7585)
!7598 = !DILocation(line: 95, column: 2, scope: !7594)
!7599 = distinct !{!7599, !7591, !7600}
!7600 = !DILocation(line: 95, column: 15, scope: !7585)
!7601 = !DILocation(line: 97, column: 2, scope: !7585)
!7602 = distinct !DISubprogram(name: "strlen", scope: !7516, file: !7516, line: 107, type: !7603, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7605)
!7603 = !DISubroutineType(types: !7604)
!7604 = !{!315, !133}
!7605 = !{!7606, !7607}
!7606 = !DILocalVariable(name: "s", arg: 1, scope: !7602, file: !7516, line: 107, type: !133)
!7607 = !DILocalVariable(name: "n", scope: !7602, file: !7516, line: 109, type: !315)
!7608 = !DILocation(line: 0, scope: !7602)
!7609 = !DILocation(line: 111, column: 9, scope: !7602)
!7610 = !DILocation(line: 111, column: 12, scope: !7602)
!7611 = !DILocation(line: 111, column: 2, scope: !7602)
!7612 = !DILocation(line: 112, column: 4, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7602, file: !7516, line: 111, column: 21)
!7614 = !DILocation(line: 113, column: 4, scope: !7613)
!7615 = distinct !{!7615, !7611, !7616}
!7616 = !DILocation(line: 114, column: 2, scope: !7602)
!7617 = !DILocation(line: 116, column: 2, scope: !7602)
!7618 = distinct !DISubprogram(name: "strnlen", scope: !7516, file: !7516, line: 126, type: !7619, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7621)
!7619 = !DISubroutineType(types: !7620)
!7620 = !{!315, !133, !315}
!7621 = !{!7622, !7623, !7624}
!7622 = !DILocalVariable(name: "s", arg: 1, scope: !7618, file: !7516, line: 126, type: !133)
!7623 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7618, file: !7516, line: 126, type: !315)
!7624 = !DILocalVariable(name: "n", scope: !7618, file: !7516, line: 128, type: !315)
!7625 = !DILocation(line: 0, scope: !7618)
!7626 = !DILocation(line: 130, column: 9, scope: !7618)
!7627 = !DILocation(line: 130, column: 12, scope: !7618)
!7628 = !DILocation(line: 130, column: 20, scope: !7618)
!7629 = !DILocation(line: 130, column: 2, scope: !7618)
!7630 = !DILocation(line: 131, column: 4, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7618, file: !7516, line: 130, column: 35)
!7632 = !DILocation(line: 132, column: 4, scope: !7631)
!7633 = distinct !{!7633, !7629, !7634}
!7634 = !DILocation(line: 133, column: 2, scope: !7618)
!7635 = !DILocation(line: 135, column: 2, scope: !7618)
!7636 = distinct !DISubprogram(name: "strcmp", scope: !7516, file: !7516, line: 145, type: !7637, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7639)
!7637 = !DISubroutineType(types: !7638)
!7638 = !{!118, !133, !133}
!7639 = !{!7640, !7641}
!7640 = !DILocalVariable(name: "s1", arg: 1, scope: !7636, file: !7516, line: 145, type: !133)
!7641 = !DILocalVariable(name: "s2", arg: 2, scope: !7636, file: !7516, line: 145, type: !133)
!7642 = !DILocation(line: 0, scope: !7636)
!7643 = !DILocation(line: 147, column: 10, scope: !7636)
!7644 = !DILocation(line: 147, column: 17, scope: !7636)
!7645 = !DILocation(line: 147, column: 14, scope: !7636)
!7646 = !DILocation(line: 147, column: 22, scope: !7636)
!7647 = !DILocation(line: 148, column: 5, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7636, file: !7516, line: 147, column: 40)
!7649 = !DILocation(line: 149, column: 5, scope: !7648)
!7650 = distinct !{!7650, !7651, !7652}
!7651 = !DILocation(line: 147, column: 2, scope: !7636)
!7652 = !DILocation(line: 150, column: 2, scope: !7636)
!7653 = !DILocation(line: 152, column: 9, scope: !7636)
!7654 = !DILocation(line: 152, column: 15, scope: !7636)
!7655 = !DILocation(line: 152, column: 13, scope: !7636)
!7656 = !DILocation(line: 152, column: 2, scope: !7636)
!7657 = distinct !DISubprogram(name: "strncmp", scope: !7516, file: !7516, line: 162, type: !7658, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7660)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{!118, !133, !133, !315}
!7660 = !{!7661, !7662, !7663}
!7661 = !DILocalVariable(name: "s1", arg: 1, scope: !7657, file: !7516, line: 162, type: !133)
!7662 = !DILocalVariable(name: "s2", arg: 2, scope: !7657, file: !7516, line: 162, type: !133)
!7663 = !DILocalVariable(name: "n", arg: 3, scope: !7657, file: !7516, line: 162, type: !315)
!7664 = !DILocation(line: 0, scope: !7657)
!7665 = !DILocation(line: 164, column: 17, scope: !7657)
!7666 = !DILocation(line: 164, column: 21, scope: !7657)
!7667 = !DILocation(line: 164, column: 28, scope: !7657)
!7668 = !DILocation(line: 164, column: 25, scope: !7657)
!7669 = !DILocation(line: 164, column: 33, scope: !7657)
!7670 = !DILocation(line: 165, column: 5, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7657, file: !7516, line: 164, column: 51)
!7672 = !DILocation(line: 166, column: 5, scope: !7671)
!7673 = !DILocation(line: 167, column: 4, scope: !7671)
!7674 = distinct !{!7674, !7675, !7676}
!7675 = !DILocation(line: 164, column: 2, scope: !7657)
!7676 = !DILocation(line: 168, column: 2, scope: !7657)
!7677 = !DILocation(line: 170, column: 25, scope: !7657)
!7678 = !DILocation(line: 170, column: 31, scope: !7657)
!7679 = !DILocation(line: 170, column: 29, scope: !7657)
!7680 = !DILocation(line: 170, column: 9, scope: !7657)
!7681 = !DILocation(line: 170, column: 2, scope: !7657)
!7682 = distinct !DISubprogram(name: "strtok_r", scope: !7516, file: !7516, line: 180, type: !7683, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7686)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{!1242, !1242, !133, !7685}
!7685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!7686 = !{!7687, !7688, !7689, !7690, !7691}
!7687 = !DILocalVariable(name: "str", arg: 1, scope: !7682, file: !7516, line: 180, type: !1242)
!7688 = !DILocalVariable(name: "sep", arg: 2, scope: !7682, file: !7516, line: 180, type: !133)
!7689 = !DILocalVariable(name: "state", arg: 3, scope: !7682, file: !7516, line: 180, type: !7685)
!7690 = !DILocalVariable(name: "start", scope: !7682, file: !7516, line: 182, type: !1242)
!7691 = !DILocalVariable(name: "end", scope: !7682, file: !7516, line: 182, type: !1242)
!7692 = !DILocation(line: 0, scope: !7682)
!7693 = !DILocation(line: 184, column: 10, scope: !7682)
!7694 = !DILocation(line: 184, column: 22, scope: !7682)
!7695 = !DILocation(line: 187, column: 9, scope: !7682)
!7696 = !DILocation(line: 187, column: 16, scope: !7682)
!7697 = !DILocation(line: 187, column: 19, scope: !7682)
!7698 = !DILocation(line: 187, column: 2, scope: !7682)
!7699 = !DILocation(line: 188, column: 8, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7682, file: !7516, line: 187, column: 40)
!7701 = distinct !{!7701, !7698, !7702}
!7702 = !DILocation(line: 189, column: 2, scope: !7682)
!7703 = !DILocation(line: 198, column: 9, scope: !7682)
!7704 = !DILocation(line: 198, column: 18, scope: !7682)
!7705 = !DILocation(line: 198, column: 17, scope: !7682)
!7706 = !DILocation(line: 198, column: 2, scope: !7682)
!7707 = !DILocation(line: 199, column: 6, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7682, file: !7516, line: 198, column: 37)
!7709 = !DILocation(line: 198, column: 14, scope: !7682)
!7710 = distinct !{!7710, !7706, !7711}
!7711 = !DILocation(line: 200, column: 2, scope: !7682)
!7712 = !DILocation(line: 203, column: 8, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !7516, line: 202, column: 20)
!7714 = distinct !DILexicalBlock(scope: !7682, file: !7516, line: 202, column: 6)
!7715 = !DILocation(line: 204, column: 16, scope: !7713)
!7716 = !DILocation(line: 205, column: 2, scope: !7713)
!7717 = !DILocation(line: 210, column: 1, scope: !7682)
!7718 = distinct !DISubprogram(name: "strcat", scope: !7516, file: !7516, line: 212, type: !7517, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7719)
!7719 = !{!7720, !7721}
!7720 = !DILocalVariable(name: "dest", arg: 1, scope: !7718, file: !7516, line: 212, type: !7519)
!7721 = !DILocalVariable(name: "src", arg: 2, scope: !7718, file: !7516, line: 212, type: !7520)
!7722 = !DILocation(line: 0, scope: !7718)
!7723 = !DILocation(line: 214, column: 16, scope: !7718)
!7724 = !DILocation(line: 214, column: 14, scope: !7718)
!7725 = !DILocation(line: 214, column: 2, scope: !7718)
!7726 = !DILocation(line: 215, column: 2, scope: !7718)
!7727 = distinct !DISubprogram(name: "strncat", scope: !7516, file: !7516, line: 218, type: !7538, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7728)
!7728 = !{!7729, !7730, !7731, !7732, !7733}
!7729 = !DILocalVariable(name: "dest", arg: 1, scope: !7727, file: !7516, line: 218, type: !7519)
!7730 = !DILocalVariable(name: "src", arg: 2, scope: !7727, file: !7516, line: 218, type: !7520)
!7731 = !DILocalVariable(name: "n", arg: 3, scope: !7727, file: !7516, line: 219, type: !315)
!7732 = !DILocalVariable(name: "orig_dest", scope: !7727, file: !7516, line: 221, type: !1242)
!7733 = !DILocalVariable(name: "len", scope: !7727, file: !7516, line: 222, type: !315)
!7734 = !DILocation(line: 0, scope: !7727)
!7735 = !DILocation(line: 222, column: 15, scope: !7727)
!7736 = !DILocation(line: 224, column: 7, scope: !7727)
!7737 = !DILocation(line: 225, column: 14, scope: !7727)
!7738 = !DILocation(line: 225, column: 19, scope: !7727)
!7739 = !DILocation(line: 225, column: 11, scope: !7727)
!7740 = !DILocation(line: 225, column: 23, scope: !7727)
!7741 = !DILocation(line: 225, column: 28, scope: !7727)
!7742 = !DILocation(line: 225, column: 2, scope: !7727)
!7743 = !DILocation(line: 226, column: 17, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7727, file: !7516, line: 225, column: 38)
!7745 = !DILocation(line: 226, column: 8, scope: !7744)
!7746 = !DILocation(line: 226, column: 11, scope: !7744)
!7747 = distinct !{!7747, !7742, !7748}
!7748 = !DILocation(line: 227, column: 2, scope: !7727)
!7749 = !DILocation(line: 228, column: 8, scope: !7727)
!7750 = !DILocation(line: 230, column: 2, scope: !7727)
!7751 = distinct !DISubprogram(name: "memcmp", scope: !7516, file: !7516, line: 239, type: !7752, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7754)
!7752 = !DISubroutineType(types: !7753)
!7753 = !{!118, !13, !13, !315}
!7754 = !{!7755, !7756, !7757, !7758, !7759}
!7755 = !DILocalVariable(name: "m1", arg: 1, scope: !7751, file: !7516, line: 239, type: !13)
!7756 = !DILocalVariable(name: "m2", arg: 2, scope: !7751, file: !7516, line: 239, type: !13)
!7757 = !DILocalVariable(name: "n", arg: 3, scope: !7751, file: !7516, line: 239, type: !315)
!7758 = !DILocalVariable(name: "c1", scope: !7751, file: !7516, line: 241, type: !133)
!7759 = !DILocalVariable(name: "c2", scope: !7751, file: !7516, line: 242, type: !133)
!7760 = !DILocation(line: 0, scope: !7751)
!7761 = !DILocation(line: 244, column: 7, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7751, file: !7516, line: 244, column: 6)
!7763 = !DILocation(line: 244, column: 6, scope: !7751)
!7764 = !DILocation(line: 248, column: 10, scope: !7751)
!7765 = !DILocation(line: 248, column: 14, scope: !7751)
!7766 = !DILocation(line: 248, column: 19, scope: !7751)
!7767 = !DILocation(line: 248, column: 2, scope: !7751)
!7768 = !DILocation(line: 248, column: 23, scope: !7751)
!7769 = !DILocation(line: 248, column: 30, scope: !7751)
!7770 = !DILocation(line: 248, column: 27, scope: !7751)
!7771 = !DILocation(line: 249, column: 5, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7751, file: !7516, line: 248, column: 36)
!7773 = !DILocation(line: 250, column: 5, scope: !7772)
!7774 = distinct !{!7774, !7767, !7775}
!7775 = !DILocation(line: 251, column: 2, scope: !7751)
!7776 = !DILocation(line: 253, column: 9, scope: !7751)
!7777 = !DILocation(line: 253, column: 15, scope: !7751)
!7778 = !DILocation(line: 253, column: 13, scope: !7751)
!7779 = !DILocation(line: 253, column: 2, scope: !7751)
!7780 = !DILocation(line: 254, column: 1, scope: !7751)
!7781 = distinct !DISubprogram(name: "memmove", scope: !7516, file: !7516, line: 263, type: !7782, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7784)
!7782 = !DISubroutineType(types: !7783)
!7783 = !{!117, !117, !13, !315}
!7784 = !{!7785, !7786, !7787, !7788, !7789}
!7785 = !DILocalVariable(name: "d", arg: 1, scope: !7781, file: !7516, line: 263, type: !117)
!7786 = !DILocalVariable(name: "s", arg: 2, scope: !7781, file: !7516, line: 263, type: !13)
!7787 = !DILocalVariable(name: "n", arg: 3, scope: !7781, file: !7516, line: 263, type: !315)
!7788 = !DILocalVariable(name: "dest", scope: !7781, file: !7516, line: 265, type: !1242)
!7789 = !DILocalVariable(name: "src", scope: !7781, file: !7516, line: 266, type: !133)
!7790 = !DILocation(line: 0, scope: !7781)
!7791 = !DILocation(line: 268, column: 21, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7781, file: !7516, line: 268, column: 6)
!7793 = !DILocation(line: 268, column: 28, scope: !7792)
!7794 = !DILocation(line: 268, column: 6, scope: !7781)
!7795 = !DILocation(line: 280, column: 12, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7792, file: !7516, line: 278, column: 9)
!7797 = !DILocation(line: 280, column: 3, scope: !7796)
!7798 = !DILocation(line: 275, column: 5, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !7516, line: 274, column: 17)
!7800 = distinct !DILexicalBlock(scope: !7792, file: !7516, line: 268, column: 33)
!7801 = !DILocation(line: 276, column: 14, scope: !7799)
!7802 = !DILocation(line: 276, column: 4, scope: !7799)
!7803 = !DILocation(line: 276, column: 12, scope: !7799)
!7804 = !DILocation(line: 274, column: 12, scope: !7800)
!7805 = !DILocation(line: 274, column: 3, scope: !7800)
!7806 = distinct !{!7806, !7805, !7807}
!7807 = !DILocation(line: 277, column: 3, scope: !7800)
!7808 = !DILocation(line: 281, column: 12, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7796, file: !7516, line: 280, column: 17)
!7810 = !DILocation(line: 281, column: 10, scope: !7809)
!7811 = !DILocation(line: 282, column: 8, scope: !7809)
!7812 = !DILocation(line: 283, column: 7, scope: !7809)
!7813 = !DILocation(line: 284, column: 5, scope: !7809)
!7814 = distinct !{!7814, !7797, !7815}
!7815 = !DILocation(line: 285, column: 3, scope: !7796)
!7816 = !DILocation(line: 288, column: 2, scope: !7781)
!7817 = distinct !DISubprogram(name: "memcpy", scope: !7516, file: !7516, line: 298, type: !7818, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7822)
!7818 = !DISubroutineType(types: !7819)
!7819 = !{!117, !7820, !7821, !315}
!7820 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !117)
!7821 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7822 = !{!7823, !7824, !7825, !7826, !7827}
!7823 = !DILocalVariable(name: "d", arg: 1, scope: !7817, file: !7516, line: 298, type: !7820)
!7824 = !DILocalVariable(name: "s", arg: 2, scope: !7817, file: !7516, line: 298, type: !7821)
!7825 = !DILocalVariable(name: "n", arg: 3, scope: !7817, file: !7516, line: 298, type: !315)
!7826 = !DILocalVariable(name: "d_byte", scope: !7817, file: !7516, line: 302, type: !1094)
!7827 = !DILocalVariable(name: "s_byte", scope: !7817, file: !7516, line: 303, type: !2944)
!7828 = !DILocation(line: 0, scope: !7817)
!7829 = !DILocation(line: 337, column: 11, scope: !7817)
!7830 = !DILocation(line: 337, column: 2, scope: !7817)
!7831 = !DILocation(line: 338, column: 25, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7817, file: !7516, line: 337, column: 16)
!7833 = !DILocation(line: 338, column: 17, scope: !7832)
!7834 = !DILocation(line: 338, column: 11, scope: !7832)
!7835 = !DILocation(line: 338, column: 15, scope: !7832)
!7836 = !DILocation(line: 339, column: 4, scope: !7832)
!7837 = distinct !{!7837, !7830, !7838}
!7838 = !DILocation(line: 340, column: 2, scope: !7817)
!7839 = !DILocation(line: 342, column: 2, scope: !7817)
!7840 = distinct !DISubprogram(name: "memset", scope: !7516, file: !7516, line: 352, type: !7841, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7843)
!7841 = !DISubroutineType(types: !7842)
!7842 = !{!117, !117, !118, !315}
!7843 = !{!7844, !7845, !7846, !7847, !7848}
!7844 = !DILocalVariable(name: "buf", arg: 1, scope: !7840, file: !7516, line: 352, type: !117)
!7845 = !DILocalVariable(name: "c", arg: 2, scope: !7840, file: !7516, line: 352, type: !118)
!7846 = !DILocalVariable(name: "n", arg: 3, scope: !7840, file: !7516, line: 352, type: !315)
!7847 = !DILocalVariable(name: "d_byte", scope: !7840, file: !7516, line: 356, type: !1094)
!7848 = !DILocalVariable(name: "c_byte", scope: !7840, file: !7516, line: 357, type: !144)
!7849 = !DILocation(line: 0, scope: !7840)
!7850 = !DILocation(line: 357, column: 25, scope: !7840)
!7851 = !DILocation(line: 389, column: 11, scope: !7840)
!7852 = !DILocation(line: 389, column: 2, scope: !7840)
!7853 = !DILocation(line: 390, column: 11, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7840, file: !7516, line: 389, column: 16)
!7855 = !DILocation(line: 390, column: 15, scope: !7854)
!7856 = !DILocation(line: 391, column: 4, scope: !7854)
!7857 = distinct !{!7857, !7852, !7858}
!7858 = !DILocation(line: 392, column: 2, scope: !7840)
!7859 = !DILocation(line: 394, column: 2, scope: !7840)
!7860 = distinct !DISubprogram(name: "memchr", scope: !7516, file: !7516, line: 404, type: !7861, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !7863)
!7861 = !DISubroutineType(types: !7862)
!7862 = !{!117, !13, !118, !315}
!7863 = !{!7864, !7865, !7866, !7867}
!7864 = !DILocalVariable(name: "s", arg: 1, scope: !7860, file: !7516, line: 404, type: !13)
!7865 = !DILocalVariable(name: "c", arg: 2, scope: !7860, file: !7516, line: 404, type: !118)
!7866 = !DILocalVariable(name: "n", arg: 3, scope: !7860, file: !7516, line: 404, type: !315)
!7867 = !DILocalVariable(name: "p", scope: !7868, file: !7516, line: 407, type: !2944)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !7516, line: 406, column: 14)
!7869 = distinct !DILexicalBlock(scope: !7860, file: !7516, line: 406, column: 6)
!7870 = !DILocation(line: 0, scope: !7860)
!7871 = !DILocation(line: 406, column: 8, scope: !7869)
!7872 = !DILocation(line: 406, column: 6, scope: !7860)
!7873 = !DILocation(line: 409, column: 3, scope: !7868)
!7874 = !DILocation(line: 0, scope: !7868)
!7875 = !DILocation(line: 410, column: 8, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7877, file: !7516, line: 410, column: 8)
!7877 = distinct !DILexicalBlock(scope: !7868, file: !7516, line: 409, column: 6)
!7878 = !DILocation(line: 410, column: 13, scope: !7876)
!7879 = !DILocation(line: 410, column: 8, scope: !7877)
!7880 = distinct !{!7880, !7873, !7881}
!7881 = !DILocation(line: 414, column: 20, scope: !7868)
!7882 = !DILocation(line: 417, column: 2, scope: !7860)
!7883 = !DILocation(line: 418, column: 1, scope: !7860)
!7884 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !694, file: !694, line: 23, type: !3701, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7885)
!7885 = !{!7886}
!7886 = !DILocalVariable(name: "hook", arg: 1, scope: !7884, file: !694, line: 23, type: !438)
!7887 = !DILocation(line: 0, scope: !7884)
!7888 = !DILocation(line: 25, column: 15, scope: !7884)
!7889 = !DILocation(line: 26, column: 1, scope: !7884)
!7890 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !694, file: !694, line: 14, type: !439, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7891)
!7891 = !{!7892}
!7892 = !DILocalVariable(name: "c", arg: 1, scope: !7890, file: !694, line: 14, type: !118)
!7893 = !DILocation(line: 0, scope: !7890)
!7894 = !DILocation(line: 18, column: 2, scope: !7890)
!7895 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !694, file: !694, line: 28, type: !7896, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7898)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{!118, !118, !690}
!7898 = !{!7899, !7900}
!7899 = !DILocalVariable(name: "c", arg: 1, scope: !7895, file: !694, line: 28, type: !118)
!7900 = !DILocalVariable(name: "stream", arg: 2, scope: !7895, file: !694, line: 28, type: !690)
!7901 = !DILocation(line: 0, scope: !7895)
!7902 = !DILocation(line: 30, column: 27, scope: !7895)
!7903 = !DILocation(line: 30, column: 50, scope: !7895)
!7904 = !DILocation(line: 30, column: 9, scope: !7895)
!7905 = !DILocation(line: 30, column: 2, scope: !7895)
!7906 = distinct !DISubprogram(name: "fputc", scope: !694, file: !694, line: 41, type: !7896, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7907)
!7907 = !{!7908, !7909}
!7908 = !DILocalVariable(name: "c", arg: 1, scope: !7906, file: !694, line: 41, type: !118)
!7909 = !DILocalVariable(name: "stream", arg: 2, scope: !7906, file: !694, line: 41, type: !690)
!7910 = !DILocation(line: 0, scope: !7906)
!7911 = !DILocation(line: 43, column: 9, scope: !7906)
!7912 = !DILocation(line: 43, column: 2, scope: !7906)
!7913 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7914, file: !7914, line: 72, type: !7896, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7915)
!7914 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!7915 = !{!7916, !7917}
!7916 = !DILocalVariable(name: "c", arg: 1, scope: !7913, file: !7914, line: 72, type: !118)
!7917 = !DILocalVariable(name: "stream", arg: 2, scope: !7913, file: !7914, line: 72, type: !690)
!7918 = !DILocation(line: 0, scope: !7913)
!7919 = !DILocation(line: 81, column: 2, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7913, file: !7914, line: 81, column: 2)
!7921 = !{i64 2154219278}
!7922 = !DILocation(line: 82, column: 9, scope: !7913)
!7923 = !DILocation(line: 82, column: 2, scope: !7913)
!7924 = distinct !DISubprogram(name: "fputs", scope: !694, file: !694, line: 46, type: !7925, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7928)
!7925 = !DISubroutineType(types: !7926)
!7926 = !{!118, !7520, !7927}
!7927 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !690)
!7928 = !{!7929, !7930, !7931, !7932}
!7929 = !DILocalVariable(name: "s", arg: 1, scope: !7924, file: !694, line: 46, type: !7520)
!7930 = !DILocalVariable(name: "stream", arg: 2, scope: !7924, file: !694, line: 46, type: !7927)
!7931 = !DILocalVariable(name: "len", scope: !7924, file: !694, line: 48, type: !118)
!7932 = !DILocalVariable(name: "ret", scope: !7924, file: !694, line: 49, type: !118)
!7933 = !DILocation(line: 0, scope: !7924)
!7934 = !DILocation(line: 48, column: 12, scope: !7924)
!7935 = !DILocation(line: 51, column: 8, scope: !7924)
!7936 = !DILocation(line: 53, column: 13, scope: !7924)
!7937 = !DILocation(line: 53, column: 9, scope: !7924)
!7938 = !DILocation(line: 53, column: 2, scope: !7924)
!7939 = distinct !DISubprogram(name: "fwrite", scope: !694, file: !694, line: 99, type: !7940, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7942)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!315, !7821, !315, !315, !7927}
!7942 = !{!7943, !7944, !7945, !7946}
!7943 = !DILocalVariable(name: "ptr", arg: 1, scope: !7939, file: !694, line: 99, type: !7821)
!7944 = !DILocalVariable(name: "size", arg: 2, scope: !7939, file: !694, line: 99, type: !315)
!7945 = !DILocalVariable(name: "nitems", arg: 3, scope: !7939, file: !694, line: 99, type: !315)
!7946 = !DILocalVariable(name: "stream", arg: 4, scope: !7939, file: !694, line: 100, type: !7927)
!7947 = !DILocation(line: 0, scope: !7939)
!7948 = !DILocation(line: 102, column: 9, scope: !7939)
!7949 = !DILocation(line: 102, column: 2, scope: !7939)
!7950 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7914, file: !7914, line: 96, type: !7940, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7951)
!7951 = !{!7952, !7953, !7954, !7955}
!7952 = !DILocalVariable(name: "ptr", arg: 1, scope: !7950, file: !7914, line: 96, type: !7821)
!7953 = !DILocalVariable(name: "size", arg: 2, scope: !7950, file: !7914, line: 96, type: !315)
!7954 = !DILocalVariable(name: "nitems", arg: 3, scope: !7950, file: !7914, line: 96, type: !315)
!7955 = !DILocalVariable(name: "stream", arg: 4, scope: !7950, file: !7914, line: 96, type: !7927)
!7956 = !DILocation(line: 0, scope: !7950)
!7957 = !DILocation(line: 107, column: 2, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7950, file: !7914, line: 107, column: 2)
!7959 = !{i64 2154219382}
!7960 = !DILocation(line: 108, column: 9, scope: !7950)
!7961 = !DILocation(line: 108, column: 2, scope: !7950)
!7962 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !694, file: !694, line: 56, type: !7940, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7963)
!7963 = !{!7964, !7965, !7966, !7967, !7968, !7969, !7970, !7971}
!7964 = !DILocalVariable(name: "ptr", arg: 1, scope: !7962, file: !694, line: 56, type: !7821)
!7965 = !DILocalVariable(name: "size", arg: 2, scope: !7962, file: !694, line: 56, type: !315)
!7966 = !DILocalVariable(name: "nitems", arg: 3, scope: !7962, file: !694, line: 57, type: !315)
!7967 = !DILocalVariable(name: "stream", arg: 4, scope: !7962, file: !694, line: 57, type: !7927)
!7968 = !DILocalVariable(name: "i", scope: !7962, file: !694, line: 59, type: !315)
!7969 = !DILocalVariable(name: "j", scope: !7962, file: !694, line: 60, type: !315)
!7970 = !DILocalVariable(name: "p", scope: !7962, file: !694, line: 61, type: !2944)
!7971 = !DILabel(scope: !7962, name: "done", file: !694, line: 82)
!7972 = !DILocation(line: 0, scope: !7962)
!7973 = !DILocation(line: 63, column: 14, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7962, file: !694, line: 63, column: 6)
!7975 = !DILocation(line: 63, column: 24, scope: !7974)
!7976 = !DILocation(line: 72, column: 3, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7962, file: !694, line: 70, column: 5)
!7978 = !DILocation(line: 0, scope: !7977)
!7979 = !DILocation(line: 73, column: 8, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7981, file: !694, line: 73, column: 8)
!7981 = distinct !DILexicalBlock(scope: !7977, file: !694, line: 72, column: 6)
!7982 = !DILocation(line: 73, column: 29, scope: !7980)
!7983 = !DILocation(line: 73, column: 27, scope: !7980)
!7984 = !DILocation(line: 73, column: 21, scope: !7980)
!7985 = !DILocation(line: 73, column: 33, scope: !7980)
!7986 = !DILocation(line: 73, column: 8, scope: !7981)
!7987 = !DILocation(line: 76, column: 5, scope: !7981)
!7988 = !DILocation(line: 77, column: 14, scope: !7977)
!7989 = !DILocation(line: 77, column: 3, scope: !7981)
!7990 = distinct !{!7990, !7976, !7991}
!7991 = !DILocation(line: 77, column: 17, scope: !7977)
!7992 = !DILocation(line: 79, column: 4, scope: !7977)
!7993 = !DILocation(line: 80, column: 13, scope: !7962)
!7994 = !DILocation(line: 80, column: 2, scope: !7977)
!7995 = distinct !{!7995, !7996, !7997}
!7996 = !DILocation(line: 70, column: 2, scope: !7962)
!7997 = !DILocation(line: 80, column: 16, scope: !7962)
!7998 = !DILocation(line: 82, column: 1, scope: !7962)
!7999 = !DILocation(line: 83, column: 17, scope: !7962)
!8000 = !DILocation(line: 83, column: 2, scope: !7962)
!8001 = !DILocation(line: 84, column: 1, scope: !7962)
!8002 = distinct !DISubprogram(name: "puts", scope: !694, file: !694, line: 106, type: !8003, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8005)
!8003 = !DISubroutineType(types: !8004)
!8004 = !{!118, !133}
!8005 = !{!8006}
!8006 = !DILocalVariable(name: "s", arg: 1, scope: !8002, file: !694, line: 106, type: !133)
!8007 = !DILocation(line: 0, scope: !8002)
!8008 = !DILocation(line: 108, column: 6, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8002, file: !694, line: 108, column: 6)
!8010 = !DILocation(line: 108, column: 23, scope: !8009)
!8011 = !DILocation(line: 108, column: 6, scope: !8002)
!8012 = !DILocation(line: 112, column: 9, scope: !8002)
!8013 = !DILocation(line: 112, column: 29, scope: !8002)
!8014 = !DILocation(line: 112, column: 2, scope: !8002)
!8015 = !DILocation(line: 113, column: 1, scope: !8002)
!8016 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !805, file: !805, line: 368, type: !858, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8017)
!8017 = !{!8018}
!8018 = !DILocalVariable(name: "dev", arg: 1, scope: !8016, file: !805, line: 368, type: !834)
!8019 = !DILocation(line: 0, scope: !8016)
!8020 = !DILocation(line: 370, column: 2, scope: !8016)
!8021 = !DILocation(line: 371, column: 1, scope: !8016)
!8022 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !805, file: !805, line: 243, type: !8023, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8025)
!8023 = !DISubroutineType(types: !8024)
!8024 = !{null, !118, !118, !834}
!8025 = !{!8026, !8027, !8028, !8029, !8031}
!8026 = !DILocalVariable(name: "min", arg: 1, scope: !8022, file: !805, line: 243, type: !118)
!8027 = !DILocalVariable(name: "max", arg: 2, scope: !8022, file: !805, line: 243, type: !118)
!8028 = !DILocalVariable(name: "dev", arg: 3, scope: !8022, file: !805, line: 243, type: !834)
!8029 = !DILocalVariable(name: "data", scope: !8022, file: !805, line: 245, type: !8030)
!8030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!8031 = !DILocalVariable(name: "line", scope: !8022, file: !805, line: 246, type: !118)
!8032 = !DILocation(line: 0, scope: !8022)
!8033 = !DILocation(line: 245, column: 38, scope: !8022)
!8034 = !DILocation(line: 249, column: 24, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8036, file: !805, line: 249, column: 2)
!8036 = distinct !DILexicalBlock(scope: !8022, file: !805, line: 249, column: 2)
!8037 = !DILocation(line: 249, column: 2, scope: !8036)
!8038 = !DILocation(line: 251, column: 7, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8040, file: !805, line: 251, column: 7)
!8040 = distinct !DILexicalBlock(scope: !8035, file: !805, line: 249, column: 39)
!8041 = !DILocation(line: 251, column: 7, scope: !8040)
!8042 = !DILocation(line: 253, column: 4, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8039, file: !805, line: 251, column: 36)
!8044 = !DILocation(line: 256, column: 24, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8043, file: !805, line: 256, column: 8)
!8046 = !DILocation(line: 256, column: 9, scope: !8045)
!8047 = !DILocation(line: 256, column: 8, scope: !8043)
!8048 = !DILocation(line: 260, column: 43, scope: !8043)
!8049 = !DILocation(line: 260, column: 4, scope: !8043)
!8050 = !DILocation(line: 261, column: 3, scope: !8043)
!8051 = !DILocation(line: 249, column: 35, scope: !8035)
!8052 = distinct !{!8052, !8037, !8053}
!8053 = !DILocation(line: 262, column: 2, scope: !8036)
!8054 = !DILocation(line: 263, column: 1, scope: !8022)
!8055 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !805, file: !805, line: 158, type: !439, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8056)
!8056 = !{!8057}
!8057 = !DILocalVariable(name: "line", arg: 1, scope: !8055, file: !805, line: 158, type: !118)
!8058 = !DILocation(line: 0, scope: !8055)
!8059 = !DILocation(line: 170, column: 38, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8061, file: !805, line: 160, column: 17)
!8061 = distinct !DILexicalBlock(scope: !8055, file: !805, line: 160, column: 6)
!8062 = !DILocation(line: 170, column: 10, scope: !8060)
!8063 = !DILocation(line: 176, column: 1, scope: !8055)
!8064 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !805, file: !805, line: 183, type: !8065, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8067)
!8065 = !DISubroutineType(types: !8066)
!8066 = !{null, !118}
!8067 = !{!8068}
!8068 = !DILocalVariable(name: "line", arg: 1, scope: !8064, file: !805, line: 183, type: !118)
!8069 = !DILocation(line: 0, scope: !8064)
!8070 = !DILocation(line: 195, column: 28, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !805, line: 185, column: 17)
!8072 = distinct !DILexicalBlock(scope: !8064, file: !805, line: 185, column: 6)
!8073 = !DILocation(line: 195, column: 3, scope: !8071)
!8074 = !DILocation(line: 200, column: 1, scope: !8064)
!8075 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8076, file: !8076, line: 910, type: !6462, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8077)
!8076 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8077 = !{!8078}
!8078 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8075, file: !8076, line: 910, type: !156)
!8079 = !DILocation(line: 0, scope: !8075)
!8080 = !DILocation(line: 912, column: 3, scope: !8075)
!8081 = !DILocation(line: 913, column: 1, scope: !8075)
!8082 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8076, file: !8076, line: 834, type: !7411, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8083)
!8083 = !{!8084}
!8084 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8082, file: !8076, line: 834, type: !156)
!8085 = !DILocation(line: 0, scope: !8082)
!8086 = !DILocation(line: 836, column: 11, scope: !8082)
!8087 = !DILocation(line: 836, column: 40, scope: !8082)
!8088 = !DILocation(line: 836, column: 3, scope: !8082)
!8089 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !805, file: !805, line: 304, type: !858, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8090)
!8090 = !{!8091}
!8091 = !DILocalVariable(name: "dev", arg: 1, scope: !8089, file: !805, line: 304, type: !834)
!8092 = !DILocation(line: 0, scope: !8089)
!8093 = !DILocation(line: 306, column: 2, scope: !8089)
!8094 = !DILocation(line: 307, column: 1, scope: !8089)
!8095 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !805, file: !805, line: 299, type: !858, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8096)
!8096 = !{!8097}
!8097 = !DILocalVariable(name: "dev", arg: 1, scope: !8095, file: !805, line: 299, type: !834)
!8098 = !DILocation(line: 0, scope: !8095)
!8099 = !DILocation(line: 301, column: 2, scope: !8095)
!8100 = !DILocation(line: 302, column: 1, scope: !8095)
!8101 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !805, file: !805, line: 294, type: !858, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8102)
!8102 = !{!8103}
!8103 = !DILocalVariable(name: "dev", arg: 1, scope: !8101, file: !805, line: 294, type: !834)
!8104 = !DILocation(line: 0, scope: !8101)
!8105 = !DILocation(line: 296, column: 2, scope: !8101)
!8106 = !DILocation(line: 297, column: 1, scope: !8101)
!8107 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !805, file: !805, line: 397, type: !858, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8108)
!8108 = !{!8109}
!8109 = !DILocalVariable(name: "dev", arg: 1, scope: !8107, file: !805, line: 397, type: !834)
!8110 = !DILocation(line: 0, scope: !8107)
!8111 = !DILocation(line: 399, column: 2, scope: !8107)
!8112 = !DILocation(line: 400, column: 1, scope: !8107)
!8113 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !805, file: !805, line: 392, type: !858, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8114)
!8114 = !{!8115}
!8115 = !DILocalVariable(name: "dev", arg: 1, scope: !8113, file: !805, line: 392, type: !834)
!8116 = !DILocation(line: 0, scope: !8113)
!8117 = !DILocation(line: 394, column: 2, scope: !8113)
!8118 = !DILocation(line: 395, column: 1, scope: !8113)
!8119 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !805, file: !805, line: 289, type: !858, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8120)
!8120 = !{!8121}
!8121 = !DILocalVariable(name: "dev", arg: 1, scope: !8119, file: !805, line: 289, type: !834)
!8122 = !DILocation(line: 0, scope: !8119)
!8123 = !DILocation(line: 291, column: 2, scope: !8119)
!8124 = !DILocation(line: 292, column: 1, scope: !8119)
!8125 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !805, file: !805, line: 387, type: !858, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8126)
!8126 = !{!8127}
!8127 = !DILocalVariable(name: "dev", arg: 1, scope: !8125, file: !805, line: 387, type: !834)
!8128 = !DILocation(line: 0, scope: !8125)
!8129 = !DILocation(line: 389, column: 2, scope: !8125)
!8130 = !DILocation(line: 390, column: 1, scope: !8125)
!8131 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !805, file: !805, line: 382, type: !858, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8132)
!8132 = !{!8133}
!8133 = !DILocalVariable(name: "dev", arg: 1, scope: !8131, file: !805, line: 382, type: !834)
!8134 = !DILocation(line: 0, scope: !8131)
!8135 = !DILocation(line: 384, column: 2, scope: !8131)
!8136 = !DILocation(line: 385, column: 1, scope: !8131)
!8137 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !805, file: !805, line: 373, type: !858, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8138)
!8138 = !{!8139}
!8139 = !DILocalVariable(name: "dev", arg: 1, scope: !8137, file: !805, line: 373, type: !834)
!8140 = !DILocation(line: 0, scope: !8137)
!8141 = !DILocation(line: 375, column: 2, scope: !8137)
!8142 = !DILocation(line: 376, column: 1, scope: !8137)
!8143 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !805, file: !805, line: 284, type: !858, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8144)
!8144 = !{!8145}
!8145 = !DILocalVariable(name: "dev", arg: 1, scope: !8143, file: !805, line: 284, type: !834)
!8146 = !DILocation(line: 0, scope: !8143)
!8147 = !DILocation(line: 286, column: 2, scope: !8143)
!8148 = !DILocation(line: 287, column: 1, scope: !8143)
!8149 = distinct !DISubprogram(name: "stm32_exti_init", scope: !805, file: !805, line: 416, type: !832, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8150)
!8150 = !{!8151}
!8151 = !DILocalVariable(name: "dev", arg: 1, scope: !8149, file: !805, line: 416, type: !834)
!8152 = !DILocation(line: 0, scope: !8149)
!8153 = !DILocation(line: 418, column: 2, scope: !8149)
!8154 = !DILocation(line: 420, column: 2, scope: !8149)
!8155 = !DILocation(line: 0, scope: !857)
!8156 = !DILocation(line: 493, column: 2, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !857, file: !805, line: 493, column: 2)
!8158 = !DILocation(line: 497, column: 2, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !857, file: !805, line: 497, column: 2)
!8160 = !DILocation(line: 507, column: 2, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !857, file: !805, line: 507, column: 2)
!8162 = !DILocation(line: 512, column: 2, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !857, file: !805, line: 512, column: 2)
!8164 = !DILocation(line: 516, column: 2, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !857, file: !805, line: 516, column: 2)
!8166 = !DILocation(line: 523, column: 2, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !857, file: !805, line: 523, column: 2)
!8168 = !DILocation(line: 527, column: 2, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !857, file: !805, line: 527, column: 2)
!8170 = !DILocation(line: 581, column: 2, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !857, file: !805, line: 581, column: 2)
!8172 = !DILocation(line: 586, column: 2, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !857, file: !805, line: 586, column: 2)
!8174 = !DILocation(line: 591, column: 2, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !857, file: !805, line: 591, column: 2)
!8176 = !DILocation(line: 595, column: 2, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !857, file: !805, line: 595, column: 2)
!8178 = !DILocation(line: 607, column: 1, scope: !857)
!8179 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !805, file: !805, line: 112, type: !8065, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8180)
!8180 = !{!8181, !8182}
!8181 = !DILocalVariable(name: "line", arg: 1, scope: !8179, file: !805, line: 112, type: !118)
!8182 = !DILocalVariable(name: "irqnum", scope: !8179, file: !805, line: 114, type: !118)
!8183 = !DILocation(line: 0, scope: !8179)
!8184 = !DILocation(line: 122, column: 13, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8179, file: !805, line: 122, column: 6)
!8186 = !DILocation(line: 122, column: 6, scope: !8179)
!8187 = !DILocation(line: 123, column: 3, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !805, line: 123, column: 3)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !805, line: 123, column: 3)
!8190 = distinct !DILexicalBlock(scope: !8191, file: !805, line: 123, column: 3)
!8191 = distinct !DILexicalBlock(scope: !8185, file: !805, line: 122, column: 22)
!8192 = !DILocation(line: 121, column: 11, scope: !8179)
!8193 = !DILocation(line: 130, column: 26, scope: !8179)
!8194 = !DILocation(line: 130, column: 2, scope: !8179)
!8195 = !DILocation(line: 134, column: 2, scope: !8179)
!8196 = !DILocation(line: 135, column: 1, scope: !8179)
!8197 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8076, file: !8076, line: 268, type: !6462, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8198)
!8198 = !{!8199}
!8199 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8197, file: !8076, line: 268, type: !156)
!8200 = !DILocation(line: 0, scope: !8197)
!8201 = !DILocation(line: 270, column: 3, scope: !8197)
!8202 = !DILocation(line: 271, column: 1, scope: !8197)
!8203 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !805, file: !805, line: 137, type: !8065, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8204)
!8204 = !{!8205}
!8205 = !DILocalVariable(name: "line", arg: 1, scope: !8203, file: !805, line: 137, type: !118)
!8206 = !DILocation(line: 0, scope: !8203)
!8207 = !DILocation(line: 141, column: 11, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8203, file: !805, line: 141, column: 6)
!8209 = !DILocation(line: 141, column: 6, scope: !8203)
!8210 = !DILocation(line: 145, column: 28, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8208, file: !805, line: 141, column: 17)
!8212 = !DILocation(line: 145, column: 3, scope: !8211)
!8213 = !DILocation(line: 147, column: 2, scope: !8211)
!8214 = !DILocation(line: 151, column: 1, scope: !8203)
!8215 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8076, file: !8076, line: 309, type: !6462, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8216)
!8216 = !{!8217}
!8217 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8215, file: !8076, line: 309, type: !156)
!8218 = !DILocation(line: 0, scope: !8215)
!8219 = !DILocation(line: 311, column: 3, scope: !8215)
!8220 = !DILocation(line: 312, column: 1, scope: !8215)
!8221 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !805, file: !805, line: 202, type: !8222, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8224)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{null, !118, !118}
!8224 = !{!8225, !8226}
!8225 = !DILocalVariable(name: "line", arg: 1, scope: !8221, file: !805, line: 202, type: !118)
!8226 = !DILocalVariable(name: "trigger", arg: 2, scope: !8221, file: !805, line: 202, type: !118)
!8227 = !DILocation(line: 0, scope: !8221)
!8228 = !DILocation(line: 211, column: 2, scope: !8221)
!8229 = !DILocation(line: 213, column: 36, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8221, file: !805, line: 211, column: 19)
!8231 = !DILocation(line: 213, column: 3, scope: !8230)
!8232 = !DILocation(line: 214, column: 3, scope: !8230)
!8233 = !DILocation(line: 215, column: 3, scope: !8230)
!8234 = !DILocation(line: 217, column: 35, scope: !8230)
!8235 = !DILocation(line: 217, column: 3, scope: !8230)
!8236 = !DILocation(line: 218, column: 3, scope: !8230)
!8237 = !DILocation(line: 219, column: 3, scope: !8230)
!8238 = !DILocation(line: 221, column: 36, scope: !8230)
!8239 = !DILocation(line: 221, column: 3, scope: !8230)
!8240 = !DILocation(line: 222, column: 3, scope: !8230)
!8241 = !DILocation(line: 223, column: 3, scope: !8230)
!8242 = !DILocation(line: 225, column: 35, scope: !8230)
!8243 = !DILocation(line: 225, column: 3, scope: !8230)
!8244 = !DILocation(line: 226, column: 3, scope: !8230)
!8245 = !DILocation(line: 227, column: 3, scope: !8230)
!8246 = !DILocation(line: 232, column: 1, scope: !8221)
!8247 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8076, file: !8076, line: 573, type: !6462, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8248)
!8248 = !{!8249}
!8249 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8247, file: !8076, line: 573, type: !156)
!8250 = !DILocation(line: 0, scope: !8247)
!8251 = !DILocation(line: 575, column: 3, scope: !8247)
!8252 = !DILocation(line: 577, column: 1, scope: !8247)
!8253 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8076, file: !8076, line: 703, type: !6462, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8254)
!8254 = !{!8255}
!8255 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8253, file: !8076, line: 703, type: !156)
!8256 = !DILocation(line: 0, scope: !8253)
!8257 = !DILocation(line: 705, column: 3, scope: !8253)
!8258 = !DILocation(line: 706, column: 1, scope: !8253)
!8259 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8076, file: !8076, line: 529, type: !6462, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8260)
!8260 = !{!8261}
!8261 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8259, file: !8076, line: 529, type: !156)
!8262 = !DILocation(line: 0, scope: !8259)
!8263 = !DILocation(line: 531, column: 3, scope: !8259)
!8264 = !DILocation(line: 533, column: 1, scope: !8259)
!8265 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8076, file: !8076, line: 661, type: !6462, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8266)
!8266 = !{!8267}
!8267 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8265, file: !8076, line: 661, type: !156)
!8268 = !DILocation(line: 0, scope: !8265)
!8269 = !DILocation(line: 663, column: 3, scope: !8265)
!8270 = !DILocation(line: 664, column: 1, scope: !8265)
!8271 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !805, file: !805, line: 433, type: !8272, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8274)
!8272 = !DISubroutineType(types: !8273)
!8273 = !{!118, !118, !845, !117}
!8274 = !{!8275, !8276, !8277, !8278, !8280}
!8275 = !DILocalVariable(name: "line", arg: 1, scope: !8271, file: !805, line: 433, type: !118)
!8276 = !DILocalVariable(name: "cb", arg: 2, scope: !8271, file: !805, line: 433, type: !845)
!8277 = !DILocalVariable(name: "arg", arg: 3, scope: !8271, file: !805, line: 433, type: !117)
!8278 = !DILocalVariable(name: "dev", scope: !8271, file: !805, line: 435, type: !8279)
!8279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !834)
!8280 = !DILocalVariable(name: "data", scope: !8271, file: !805, line: 436, type: !8030)
!8281 = !DILocation(line: 0, scope: !8271)
!8282 = !DILocation(line: 438, column: 21, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8271, file: !805, line: 438, column: 6)
!8284 = !DILocation(line: 438, column: 6, scope: !8283)
!8285 = !DILocation(line: 438, column: 6, scope: !8271)
!8286 = !DILocation(line: 442, column: 20, scope: !8271)
!8287 = !DILocation(line: 443, column: 17, scope: !8271)
!8288 = !DILocation(line: 443, column: 22, scope: !8271)
!8289 = !DILocation(line: 445, column: 2, scope: !8271)
!8290 = !DILocation(line: 446, column: 1, scope: !8271)
!8291 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !805, file: !805, line: 448, type: !8065, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8292)
!8292 = !{!8293, !8294, !8295}
!8293 = !DILocalVariable(name: "line", arg: 1, scope: !8291, file: !805, line: 448, type: !118)
!8294 = !DILocalVariable(name: "dev", scope: !8291, file: !805, line: 450, type: !8279)
!8295 = !DILocalVariable(name: "data", scope: !8291, file: !805, line: 451, type: !8030)
!8296 = !DILocation(line: 0, scope: !8291)
!8297 = !DILocation(line: 453, column: 17, scope: !8291)
!8298 = !DILocation(line: 453, column: 20, scope: !8291)
!8299 = !DILocation(line: 454, column: 17, scope: !8291)
!8300 = !DILocation(line: 454, column: 22, scope: !8291)
!8301 = !DILocation(line: 455, column: 1, scope: !8291)
!8302 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !993, file: !993, line: 183, type: !1031, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8303)
!8303 = !{!8304, !8305, !8306, !8307, !8308}
!8304 = !DILocalVariable(name: "dev", arg: 1, scope: !8302, file: !993, line: 183, type: !1022)
!8305 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8302, file: !993, line: 184, type: !1033)
!8306 = !DILocalVariable(name: "pclken", scope: !8302, file: !993, line: 186, type: !983)
!8307 = !DILocalVariable(name: "reg", scope: !8302, file: !993, line: 187, type: !1558)
!8308 = !DILocalVariable(name: "reg_val", scope: !8302, file: !993, line: 188, type: !156)
!8309 = !DILocation(line: 0, scope: !8302)
!8310 = !DILocation(line: 192, column: 6, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8302, file: !993, line: 192, column: 6)
!8312 = !DILocation(line: 192, column: 6, scope: !8302)
!8313 = !DILocation(line: 197, column: 52, scope: !8302)
!8314 = !DILocation(line: 197, column: 8, scope: !8302)
!8315 = !DILocation(line: 198, column: 12, scope: !8302)
!8316 = !DILocation(line: 199, column: 21, scope: !8302)
!8317 = !DILocation(line: 199, column: 10, scope: !8302)
!8318 = !DILocation(line: 200, column: 7, scope: !8302)
!8319 = !DILocation(line: 202, column: 2, scope: !8302)
!8320 = !DILocation(line: 203, column: 1, scope: !8302)
!8321 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !993, file: !993, line: 205, type: !1031, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8322)
!8322 = !{!8323, !8324, !8325, !8326, !8327}
!8323 = !DILocalVariable(name: "dev", arg: 1, scope: !8321, file: !993, line: 205, type: !1022)
!8324 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8321, file: !993, line: 206, type: !1033)
!8325 = !DILocalVariable(name: "pclken", scope: !8321, file: !993, line: 208, type: !983)
!8326 = !DILocalVariable(name: "reg", scope: !8321, file: !993, line: 209, type: !1558)
!8327 = !DILocalVariable(name: "reg_val", scope: !8321, file: !993, line: 210, type: !156)
!8328 = !DILocation(line: 0, scope: !8321)
!8329 = !DILocation(line: 214, column: 6, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8321, file: !993, line: 214, column: 6)
!8331 = !DILocation(line: 214, column: 6, scope: !8321)
!8332 = !DILocation(line: 219, column: 52, scope: !8321)
!8333 = !DILocation(line: 219, column: 8, scope: !8321)
!8334 = !DILocation(line: 220, column: 12, scope: !8321)
!8335 = !DILocation(line: 221, column: 22, scope: !8321)
!8336 = !DILocation(line: 221, column: 13, scope: !8321)
!8337 = !DILocation(line: 221, column: 10, scope: !8321)
!8338 = !DILocation(line: 222, column: 7, scope: !8321)
!8339 = !DILocation(line: 224, column: 2, scope: !8321)
!8340 = !DILocation(line: 225, column: 1, scope: !8321)
!8341 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !993, file: !993, line: 262, type: !1047, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8342)
!8342 = !{!8343, !8344, !8345, !8346, !8347, !8348, !8349, !8350}
!8343 = !DILocalVariable(name: "clock", arg: 1, scope: !8341, file: !993, line: 262, type: !1022)
!8344 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8341, file: !993, line: 263, type: !1033)
!8345 = !DILocalVariable(name: "rate", arg: 3, scope: !8341, file: !993, line: 264, type: !989)
!8346 = !DILocalVariable(name: "pclken", scope: !8341, file: !993, line: 266, type: !983)
!8347 = !DILocalVariable(name: "ahb_clock", scope: !8341, file: !993, line: 273, type: !156)
!8348 = !DILocalVariable(name: "apb1_clock", scope: !8341, file: !993, line: 274, type: !156)
!8349 = !DILocalVariable(name: "apb2_clock", scope: !8341, file: !993, line: 276, type: !156)
!8350 = !DILocalVariable(name: "ahb3_clock", scope: !8341, file: !993, line: 286, type: !156)
!8351 = !DILocation(line: 0, scope: !8341)
!8352 = !DILocation(line: 273, column: 23, scope: !8341)
!8353 = !DILocation(line: 299, column: 18, scope: !8341)
!8354 = !DILocation(line: 299, column: 2, scope: !8341)
!8355 = !DILocation(line: 274, column: 24, scope: !8341)
!8356 = !DILocation(line: 319, column: 3, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8341, file: !993, line: 299, column: 23)
!8358 = !DILocation(line: 276, column: 24, scope: !8341)
!8359 = !DILocation(line: 323, column: 3, scope: !8357)
!8360 = !DILocation(line: 346, column: 33, scope: !8357)
!8361 = !DILocation(line: 346, column: 11, scope: !8357)
!8362 = !DILocation(line: 350, column: 3, scope: !8357)
!8363 = !DILocation(line: 354, column: 33, scope: !8357)
!8364 = !DILocation(line: 354, column: 11, scope: !8357)
!8365 = !DILocation(line: 358, column: 3, scope: !8357)
!8366 = !DILocation(line: 374, column: 3, scope: !8357)
!8367 = !DILocation(line: 379, column: 3, scope: !8357)
!8368 = !DILocation(line: 0, scope: !8357)
!8369 = !DILocation(line: 396, column: 1, scope: !8341)
!8370 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !993, file: !993, line: 227, type: !1063, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8371)
!8371 = !{!8372, !8373, !8374, !8375, !8376, !8377, !8378, !8379}
!8372 = !DILocalVariable(name: "dev", arg: 1, scope: !8370, file: !993, line: 227, type: !1022)
!8373 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8370, file: !993, line: 228, type: !1033)
!8374 = !DILocalVariable(name: "data", arg: 3, scope: !8370, file: !993, line: 229, type: !117)
!8375 = !DILocalVariable(name: "pclken", scope: !8370, file: !993, line: 233, type: !983)
!8376 = !DILocalVariable(name: "reg", scope: !8370, file: !993, line: 234, type: !1558)
!8377 = !DILocalVariable(name: "reg_val", scope: !8370, file: !993, line: 235, type: !156)
!8378 = !DILocalVariable(name: "dt_val", scope: !8370, file: !993, line: 235, type: !156)
!8379 = !DILocalVariable(name: "err", scope: !8370, file: !993, line: 236, type: !118)
!8380 = !DILocation(line: 0, scope: !8370)
!8381 = !DILocation(line: 241, column: 30, scope: !8370)
!8382 = !DILocation(line: 241, column: 8, scope: !8370)
!8383 = !DILocation(line: 242, column: 10, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8370, file: !993, line: 242, column: 6)
!8385 = !DILocation(line: 242, column: 6, scope: !8370)
!8386 = !DILocation(line: 247, column: 11, scope: !8370)
!8387 = !DILocation(line: 248, column: 6, scope: !8370)
!8388 = !DILocation(line: 247, column: 44, scope: !8370)
!8389 = !DILocation(line: 250, column: 6, scope: !8370)
!8390 = !DILocation(line: 249, column: 52, scope: !8370)
!8391 = !DILocation(line: 249, column: 8, scope: !8370)
!8392 = !DILocation(line: 251, column: 12, scope: !8370)
!8393 = !DILocation(line: 252, column: 10, scope: !8370)
!8394 = !DILocation(line: 253, column: 7, scope: !8370)
!8395 = !DILocation(line: 255, column: 2, scope: !8370)
!8396 = !DILocation(line: 260, column: 1, scope: !8370)
!8397 = distinct !DISubprogram(name: "enabled_clock", scope: !993, file: !993, line: 100, type: !8398, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8400)
!8398 = !DISubroutineType(types: !8399)
!8399 = !{!118, !156}
!8400 = !{!8401, !8402}
!8401 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8397, file: !993, line: 100, type: !156)
!8402 = !DILocalVariable(name: "r", scope: !8397, file: !993, line: 102, type: !118)
!8403 = !DILocation(line: 0, scope: !8397)
!8404 = !DILocation(line: 104, column: 2, scope: !8397)
!8405 = !DILocation(line: 180, column: 2, scope: !8397)
!8406 = !DILocation(line: 181, column: 1, scope: !8397)
!8407 = distinct !DISubprogram(name: "get_bus_clock", scope: !993, file: !993, line: 79, type: !8408, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8410)
!8408 = !DISubroutineType(types: !8409)
!8409 = !{!156, !156, !156}
!8410 = !{!8411, !8412}
!8411 = !DILocalVariable(name: "clock", arg: 1, scope: !8407, file: !993, line: 79, type: !156)
!8412 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8407, file: !993, line: 79, type: !156)
!8413 = !DILocation(line: 0, scope: !8407)
!8414 = !DILocation(line: 81, column: 15, scope: !8407)
!8415 = !DILocation(line: 81, column: 2, scope: !8407)
!8416 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !993, file: !993, line: 68, type: !8417, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8419)
!8417 = !DISubroutineType(types: !8418)
!8418 = !{!156, !156, !118, !118, !118}
!8419 = !{!8420, !8421, !8422, !8423}
!8420 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8416, file: !993, line: 68, type: !156)
!8421 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8416, file: !993, line: 69, type: !118)
!8422 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8416, file: !993, line: 70, type: !118)
!8423 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8416, file: !993, line: 71, type: !118)
!8424 = !DILocation(line: 0, scope: !8416)
!8425 = !DILocation(line: 75, column: 22, scope: !8416)
!8426 = !DILocation(line: 76, column: 13, scope: !8416)
!8427 = !DILocation(line: 75, column: 34, scope: !8416)
!8428 = !DILocation(line: 75, column: 2, scope: !8416)
!8429 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !993, file: !993, line: 641, type: !1020, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8430)
!8430 = !{!8431, !8432, !8433}
!8431 = !DILocalVariable(name: "dev", arg: 1, scope: !8429, file: !993, line: 641, type: !1022)
!8432 = !DILocalVariable(name: "old_flash_freq", scope: !8429, file: !993, line: 664, type: !156)
!8433 = !DILocalVariable(name: "new_flash_freq", scope: !8429, file: !993, line: 665, type: !156)
!8434 = !DILocation(line: 0, scope: !8429)
!8435 = !DILocation(line: 646, column: 2, scope: !8429)
!8436 = !DILocation(line: 667, column: 19, scope: !8429)
!8437 = !DILocation(line: 674, column: 21, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8429, file: !993, line: 674, column: 6)
!8439 = !DILocation(line: 674, column: 6, scope: !8429)
!8440 = !DILocation(line: 675, column: 3, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8438, file: !993, line: 674, column: 59)
!8442 = !DILocation(line: 676, column: 2, scope: !8441)
!8443 = !DILocation(line: 680, column: 2, scope: !8429)
!8444 = !DILocation(line: 683, column: 2, scope: !8429)
!8445 = !DILocation(line: 690, column: 3, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8447, file: !993, line: 689, column: 9)
!8447 = distinct !DILexicalBlock(scope: !8429, file: !993, line: 685, column: 6)
!8448 = !DILocation(line: 695, column: 2, scope: !8429)
!8449 = !DILocation(line: 696, column: 2, scope: !8429)
!8450 = !DILocation(line: 696, column: 9, scope: !8429)
!8451 = !DILocation(line: 696, column: 34, scope: !8429)
!8452 = distinct !{!8452, !8449, !8453}
!8453 = !DILocation(line: 697, column: 2, scope: !8429)
!8454 = !DILocation(line: 720, column: 21, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8429, file: !993, line: 720, column: 6)
!8456 = !DILocation(line: 720, column: 6, scope: !8429)
!8457 = !DILocation(line: 721, column: 3, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8455, file: !993, line: 720, column: 60)
!8459 = !DILocation(line: 722, column: 2, scope: !8458)
!8460 = !DILocation(line: 725, column: 18, scope: !8429)
!8461 = !DILocation(line: 728, column: 2, scope: !8429)
!8462 = !DILocation(line: 730, column: 2, scope: !8429)
!8463 = !DILocation(line: 745, column: 2, scope: !8429)
!8464 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8465, file: !8465, line: 3275, type: !6452, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8465 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8466 = !DILocation(line: 3277, column: 21, scope: !8464)
!8467 = !DILocation(line: 3277, column: 3, scope: !8464)
!8468 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !993, file: !993, line: 507, type: !365, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8469 = !DILocation(line: 516, column: 4, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8471, file: !993, line: 515, column: 10)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !993, line: 513, column: 7)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !993, line: 510, column: 37)
!8473 = distinct !DILexicalBlock(scope: !8468, file: !993, line: 510, column: 6)
!8474 = !DILocation(line: 526, column: 3, scope: !8472)
!8475 = !DILocation(line: 527, column: 3, scope: !8472)
!8476 = !DILocation(line: 527, column: 10, scope: !8472)
!8477 = !DILocation(line: 527, column: 31, scope: !8472)
!8478 = distinct !{!8478, !8475, !8479}
!8479 = !DILocation(line: 529, column: 3, scope: !8472)
!8480 = !DILocation(line: 583, column: 3, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !993, line: 577, column: 37)
!8482 = distinct !DILexicalBlock(scope: !8468, file: !993, line: 577, column: 6)
!8483 = !DILocation(line: 584, column: 3, scope: !8481)
!8484 = !DILocation(line: 584, column: 10, scope: !8481)
!8485 = !DILocation(line: 584, column: 31, scope: !8481)
!8486 = distinct !{!8486, !8483, !8487}
!8487 = !DILocation(line: 585, column: 3, scope: !8481)
!8488 = !DILocation(line: 627, column: 1, scope: !8468)
!8489 = distinct !DISubprogram(name: "set_up_plls", scope: !993, file: !993, line: 448, type: !365, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8490 = !DILocation(line: 460, column: 6, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8489, file: !993, line: 460, column: 6)
!8492 = !DILocation(line: 460, column: 31, scope: !8491)
!8493 = !DILocation(line: 460, column: 6, scope: !8489)
!8494 = !DILocation(line: 461, column: 3, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8491, file: !993, line: 460, column: 67)
!8496 = !DILocation(line: 462, column: 3, scope: !8495)
!8497 = !DILocation(line: 463, column: 2, scope: !8495)
!8498 = !DILocation(line: 464, column: 2, scope: !8489)
!8499 = !DILocation(line: 488, column: 2, scope: !8489)
!8500 = !DILocation(line: 492, column: 2, scope: !8489)
!8501 = !DILocation(line: 496, column: 2, scope: !8489)
!8502 = !DILocation(line: 499, column: 2, scope: !8489)
!8503 = !DILocation(line: 500, column: 2, scope: !8489)
!8504 = !DILocation(line: 500, column: 9, scope: !8489)
!8505 = !DILocation(line: 500, column: 30, scope: !8489)
!8506 = distinct !{!8506, !8503, !8507}
!8507 = !DILocation(line: 502, column: 2, scope: !8489)
!8508 = !DILocation(line: 505, column: 1, scope: !8489)
!8509 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8465, file: !8465, line: 3224, type: !6462, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8510)
!8510 = !{!8511}
!8511 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8509, file: !8465, line: 3224, type: !156)
!8512 = !DILocation(line: 0, scope: !8509)
!8513 = !DILocation(line: 3226, column: 3, scope: !8509)
!8514 = !DILocation(line: 3227, column: 1, scope: !8509)
!8515 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8465, file: !8465, line: 3188, type: !6462, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8516)
!8516 = !{!8517}
!8517 = !DILocalVariable(name: "Source", arg: 1, scope: !8515, file: !8465, line: 3188, type: !156)
!8518 = !DILocation(line: 0, scope: !8515)
!8519 = !DILocation(line: 3190, column: 3, scope: !8515)
!8520 = !DILocation(line: 3191, column: 1, scope: !8515)
!8521 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8465, file: !8465, line: 3204, type: !6452, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8522 = !DILocation(line: 3206, column: 21, scope: !8521)
!8523 = !DILocation(line: 3206, column: 3, scope: !8521)
!8524 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8465, file: !8465, line: 3240, type: !6462, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8525)
!8525 = !{!8526}
!8526 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8524, file: !8465, line: 3240, type: !156)
!8527 = !DILocation(line: 0, scope: !8524)
!8528 = !DILocation(line: 3242, column: 3, scope: !8524)
!8529 = !DILocation(line: 3243, column: 1, scope: !8524)
!8530 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8465, file: !8465, line: 3256, type: !6462, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !8531)
!8531 = !{!8532}
!8532 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8530, file: !8465, line: 3256, type: !156)
!8533 = !DILocation(line: 0, scope: !8530)
!8534 = !DILocation(line: 3258, column: 3, scope: !8530)
!8535 = !DILocation(line: 3259, column: 1, scope: !8530)
!8536 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !993, file: !993, line: 409, type: !365, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8537 = !DILocation(line: 412, column: 6, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8536, file: !993, line: 412, column: 6)
!8539 = !DILocation(line: 412, column: 27, scope: !8538)
!8540 = !DILocation(line: 412, column: 6, scope: !8536)
!8541 = !DILocation(line: 414, column: 3, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8538, file: !993, line: 412, column: 33)
!8543 = !DILocation(line: 415, column: 3, scope: !8542)
!8544 = !DILocation(line: 415, column: 10, scope: !8542)
!8545 = !DILocation(line: 415, column: 31, scope: !8542)
!8546 = distinct !{!8546, !8543, !8547}
!8547 = !DILocation(line: 417, column: 3, scope: !8542)
!8548 = !DILocation(line: 421, column: 2, scope: !8536)
!8549 = !DILocation(line: 422, column: 2, scope: !8536)
!8550 = !DILocation(line: 422, column: 9, scope: !8536)
!8551 = !DILocation(line: 422, column: 34, scope: !8536)
!8552 = distinct !{!8552, !8549, !8553}
!8553 = !DILocation(line: 423, column: 2, scope: !8536)
!8554 = !DILocation(line: 424, column: 1, scope: !8536)
!8555 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8465, file: !8465, line: 4195, type: !365, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8556 = !DILocation(line: 4197, column: 3, scope: !8555)
!8557 = !DILocation(line: 4198, column: 1, scope: !8555)
!8558 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8465, file: !8465, line: 4184, type: !365, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8559 = !DILocation(line: 4186, column: 3, scope: !8558)
!8560 = !DILocation(line: 4187, column: 1, scope: !8558)
!8561 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8465, file: !8465, line: 4205, type: !6452, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8562 = !DILocation(line: 4207, column: 11, scope: !8561)
!8563 = !DILocation(line: 4207, column: 44, scope: !8561)
!8564 = !DILocation(line: 4207, column: 3, scope: !8561)
!8565 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8465, file: !8465, line: 3007, type: !6452, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8566 = !DILocation(line: 3009, column: 11, scope: !8565)
!8567 = !DILocation(line: 3009, column: 44, scope: !8565)
!8568 = !DILocation(line: 3009, column: 3, scope: !8565)
!8569 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8465, file: !8465, line: 2987, type: !365, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8570 = !DILocation(line: 2989, column: 3, scope: !8569)
!8571 = !DILocation(line: 2990, column: 1, scope: !8569)
!8572 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8465, file: !8465, line: 2939, type: !365, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8573 = !DILocation(line: 2941, column: 3, scope: !8572)
!8574 = !DILocation(line: 2942, column: 1, scope: !8572)
!8575 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8465, file: !8465, line: 2949, type: !365, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8576 = !DILocation(line: 2951, column: 3, scope: !8575)
!8577 = !DILocation(line: 2952, column: 1, scope: !8575)
!8578 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8465, file: !8465, line: 2969, type: !6452, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8579 = !DILocation(line: 2971, column: 11, scope: !8578)
!8580 = !DILocation(line: 2971, column: 44, scope: !8578)
!8581 = !DILocation(line: 2971, column: 3, scope: !8578)
!8582 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8465, file: !8465, line: 3143, type: !365, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8583 = !DILocation(line: 3145, column: 3, scope: !8582)
!8584 = !DILocation(line: 3146, column: 1, scope: !8582)
!8585 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8465, file: !8465, line: 3163, type: !6452, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !2149)
!8586 = !DILocation(line: 3165, column: 11, scope: !8585)
!8587 = !DILocation(line: 3165, column: 46, scope: !8585)
!8588 = !DILocation(line: 3165, column: 3, scope: !8585)
!8589 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8590, file: !8590, line: 40, type: !6452, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !2149)
!8590 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8591 = !DILocation(line: 45, column: 3, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8593, file: !8590, line: 44, column: 44)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !8590, line: 44, column: 13)
!8594 = distinct !DILexicalBlock(scope: !8589, file: !8590, line: 42, column: 6)
!8595 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8590, file: !8590, line: 56, type: !365, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !2149)
!8596 = !DILocation(line: 58, column: 2, scope: !8595)
!8597 = !DILocation(line: 62, column: 1, scope: !8595)
!8598 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8465, file: !8465, line: 4304, type: !8599, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !8601)
!8599 = !DISubroutineType(types: !8600)
!8600 = !{null, !156, !156, !156, !156}
!8601 = !{!8602, !8603, !8604, !8605}
!8602 = !DILocalVariable(name: "Source", arg: 1, scope: !8598, file: !8465, line: 4304, type: !156)
!8603 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8598, file: !8465, line: 4304, type: !156)
!8604 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8598, file: !8465, line: 4304, type: !156)
!8605 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8598, file: !8465, line: 4304, type: !156)
!8606 = !DILocation(line: 0, scope: !8598)
!8607 = !DILocation(line: 4306, column: 3, scope: !8598)
!8608 = !DILocation(line: 4308, column: 3, scope: !8598)
!8609 = !DILocation(line: 4312, column: 1, scope: !8598)
!8610 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8590, file: !8590, line: 69, type: !365, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !2149)
!8611 = !DILocation(line: 72, column: 2, scope: !8610)
!8612 = !DILocation(line: 73, column: 1, scope: !8610)
!8613 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8614, file: !8614, line: 1185, type: !6462, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !8615)
!8614 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8615 = !{!8616, !8617}
!8616 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8613, file: !8614, line: 1185, type: !156)
!8617 = !DILocalVariable(name: "tmpreg", scope: !8613, file: !8614, line: 1187, type: !452)
!8618 = !DILocation(line: 0, scope: !8613)
!8619 = !DILocation(line: 1187, column: 3, scope: !8613)
!8620 = !DILocation(line: 1187, column: 17, scope: !8613)
!8621 = !DILocation(line: 1188, column: 3, scope: !8613)
!8622 = !DILocation(line: 1190, column: 12, scope: !8613)
!8623 = !DILocation(line: 1190, column: 10, scope: !8613)
!8624 = !DILocation(line: 1191, column: 9, scope: !8613)
!8625 = !DILocation(line: 1192, column: 1, scope: !8613)
!8626 = distinct !DISubprogram(name: "uart_console_init", scope: !1124, file: !1124, line: 588, type: !1101, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1067, retainedNodes: !8627)
!8627 = !{!8628}
!8628 = !DILocalVariable(name: "arg", arg: 1, scope: !8626, file: !1124, line: 588, type: !1079)
!8629 = !DILocation(line: 0, scope: !8626)
!8630 = !DILocation(line: 593, column: 7, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8626, file: !1124, line: 593, column: 6)
!8632 = !DILocation(line: 593, column: 6, scope: !8626)
!8633 = !DILocation(line: 597, column: 2, scope: !8626)
!8634 = !DILocation(line: 599, column: 2, scope: !8626)
!8635 = !DILocation(line: 600, column: 1, scope: !8626)
!8636 = distinct !DISubprogram(name: "device_is_ready", scope: !3402, file: !3402, line: 47, type: !8637, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1067, retainedNodes: !8639)
!8637 = !DISubroutineType(types: !8638)
!8638 = !{!146, !1079}
!8639 = !{!8640}
!8640 = !DILocalVariable(name: "dev", arg: 1, scope: !8636, file: !3402, line: 47, type: !1079)
!8641 = !DILocation(line: 0, scope: !8636)
!8642 = !DILocation(line: 55, column: 2, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8636, file: !3402, line: 55, column: 2)
!8644 = !{i64 2154374545}
!8645 = !DILocation(line: 56, column: 9, scope: !8636)
!8646 = !DILocation(line: 56, column: 2, scope: !8636)
!8647 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1124, file: !1124, line: 573, type: !365, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1067, retainedNodes: !2149)
!8648 = !DILocation(line: 576, column: 2, scope: !8647)
!8649 = !DILocation(line: 579, column: 2, scope: !8647)
!8650 = !DILocation(line: 581, column: 1, scope: !8647)
!8651 = distinct !DISubprogram(name: "console_out", scope: !1124, file: !1124, line: 77, type: !439, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1067, retainedNodes: !8652)
!8652 = !{!8653}
!8653 = !DILocalVariable(name: "c", arg: 1, scope: !8651, file: !1124, line: 77, type: !118)
!8654 = !DILocation(line: 0, scope: !8651)
!8655 = !DILocation(line: 89, column: 11, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8651, file: !1124, line: 89, column: 6)
!8657 = !DILocation(line: 89, column: 6, scope: !8651)
!8658 = !DILocation(line: 90, column: 3, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8656, file: !1124, line: 89, column: 17)
!8660 = !DILocation(line: 91, column: 2, scope: !8659)
!8661 = !DILocation(line: 92, column: 34, scope: !8651)
!8662 = !DILocation(line: 92, column: 2, scope: !8651)
!8663 = !DILocation(line: 94, column: 2, scope: !8651)
!8664 = distinct !DISubprogram(name: "uart_poll_out", scope: !8665, file: !8665, line: 95, type: !1097, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1067, retainedNodes: !8666)
!8665 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/threads")
!8666 = !{!8667, !8668}
!8667 = !DILocalVariable(name: "dev", arg: 1, scope: !8664, file: !8665, line: 95, type: !1079)
!8668 = !DILocalVariable(name: "out_char", arg: 2, scope: !8664, file: !8665, line: 95, type: !144)
!8669 = !DILocation(line: 0, scope: !8664)
!8670 = !DILocation(line: 105, column: 2, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8664, file: !8665, line: 105, column: 2)
!8672 = !{i64 2154457936}
!8673 = !DILocation(line: 106, column: 2, scope: !8664)
!8674 = !DILocation(line: 107, column: 1, scope: !8664)
!8675 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1073, file: !1073, line: 574, type: !1097, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1067, retainedNodes: !8676)
!8676 = !{!8677, !8678, !8679}
!8677 = !DILocalVariable(name: "dev", arg: 1, scope: !8675, file: !1073, line: 574, type: !1079)
!8678 = !DILocalVariable(name: "out_char", arg: 2, scope: !8675, file: !1073, line: 575, type: !144)
!8679 = !DILocalVariable(name: "api", scope: !8675, file: !1073, line: 577, type: !1070)
!8680 = !DILocation(line: 0, scope: !8675)
!8681 = !DILocation(line: 578, column: 40, scope: !8675)
!8682 = !DILocation(line: 580, column: 7, scope: !8675)
!8683 = !DILocation(line: 580, column: 2, scope: !8675)
!8684 = !DILocation(line: 581, column: 1, scope: !8675)
!8685 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !8637, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1067, retainedNodes: !8686)
!8686 = !{!8687}
!8687 = !DILocalVariable(name: "dev", arg: 1, scope: !8685, file: !130, line: 730, type: !1079)
!8688 = !DILocation(line: 0, scope: !8685)
!8689 = !DILocation(line: 732, column: 9, scope: !8685)
!8690 = !DILocation(line: 732, column: 2, scope: !8685)
!8691 = distinct !DISubprogram(name: "uart_register_input", scope: !1124, file: !1124, line: 560, type: !8692, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1067, retainedNodes: !8737)
!8692 = !DISubroutineType(types: !8693)
!8693 = !{null, !8694, !8694, !8734}
!8694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8695, size: 32)
!8695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !220, line: 2208, size: 160, elements: !8696)
!8696 = !{!8697}
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8695, file: !220, line: 2209, baseType: !8698, size: 160)
!8698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !8699)
!8699 = !{!8700, !8711, !8715}
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8698, file: !220, line: 1710, baseType: !8701, size: 64)
!8701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !8702)
!8702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !8703)
!8703 = !{!8704, !8710}
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8702, file: !417, line: 42, baseType: !8705, size: 32)
!8705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8706, size: 32)
!8706 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !8707)
!8707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !8708)
!8708 = !{!8709}
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8707, file: !417, line: 36, baseType: !426, size: 32)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8702, file: !417, line: 43, baseType: !8705, size: 32, offset: 32)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8698, file: !220, line: 1711, baseType: !8712, size: 32, offset: 64)
!8712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !8713)
!8713 = !{!8714}
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8712, file: !334, line: 52, baseType: !22, size: 32)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8698, file: !220, line: 1712, baseType: !8716, size: 64, offset: 96)
!8716 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !8717)
!8717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !8718)
!8718 = !{!8719}
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8717, file: !261, line: 232, baseType: !8720, size: 64)
!8720 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !8721)
!8721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !8722)
!8722 = !{!8723, !8729}
!8723 = !DIDerivedType(tag: DW_TAG_member, scope: !8721, file: !235, line: 38, baseType: !8724, size: 32)
!8724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8721, file: !235, line: 38, size: 32, elements: !8725)
!8725 = !{!8726, !8728}
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8724, file: !235, line: 39, baseType: !8727, size: 32)
!8727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8721, size: 32)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8724, file: !235, line: 40, baseType: !8727, size: 32)
!8729 = !DIDerivedType(tag: DW_TAG_member, scope: !8721, file: !235, line: 42, baseType: !8730, size: 32, offset: 32)
!8730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8721, file: !235, line: 42, size: 32, elements: !8731)
!8731 = !{!8732, !8733}
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8730, file: !235, line: 43, baseType: !8727, size: 32)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8730, file: !235, line: 44, baseType: !8727, size: 32)
!8734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8735, size: 32)
!8735 = !DISubroutineType(types: !8736)
!8736 = !{!143, !1242, !143}
!8737 = !{!8738, !8739, !8740}
!8738 = !DILocalVariable(name: "avail", arg: 1, scope: !8691, file: !1124, line: 560, type: !8694)
!8739 = !DILocalVariable(name: "lines", arg: 2, scope: !8691, file: !1124, line: 560, type: !8694)
!8740 = !DILocalVariable(name: "completion", arg: 3, scope: !8691, file: !1124, line: 561, type: !8734)
!8741 = !DILocation(line: 0, scope: !8691)
!8742 = !DILocation(line: 566, column: 1, scope: !8691)
!8743 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1286, file: !1286, line: 523, type: !1149, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8744)
!8744 = !{!8745, !8746, !8747, !8748, !8749}
!8745 = !DILocalVariable(name: "dev", arg: 1, scope: !8743, file: !1286, line: 523, type: !1151)
!8746 = !DILocalVariable(name: "pin", arg: 2, scope: !8743, file: !1286, line: 524, type: !154)
!8747 = !DILocalVariable(name: "flags", arg: 3, scope: !8743, file: !1286, line: 524, type: !155)
!8748 = !DILocalVariable(name: "err", scope: !8743, file: !1286, line: 526, type: !118)
!8749 = !DILocalVariable(name: "pincfg", scope: !8743, file: !1286, line: 527, type: !118)
!8750 = !DILocation(line: 0, scope: !8743)
!8751 = !DILocation(line: 527, column: 2, scope: !8743)
!8752 = !DILocation(line: 532, column: 8, scope: !8743)
!8753 = !DILocation(line: 533, column: 10, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8743, file: !1286, line: 533, column: 6)
!8755 = !DILocation(line: 533, column: 6, scope: !8743)
!8756 = !DILocation(line: 543, column: 13, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8743, file: !1286, line: 543, column: 6)
!8758 = !DILocation(line: 543, column: 28, scope: !8757)
!8759 = !DILocation(line: 543, column: 6, scope: !8743)
!8760 = !DILocation(line: 544, column: 14, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8762, file: !1286, line: 544, column: 7)
!8762 = distinct !DILexicalBlock(scope: !8757, file: !1286, line: 543, column: 34)
!8763 = !DILocation(line: 544, column: 39, scope: !8761)
!8764 = !DILocation(line: 544, column: 7, scope: !8762)
!8765 = !DILocation(line: 545, column: 38, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8761, file: !1286, line: 544, column: 45)
!8767 = !DILocation(line: 545, column: 4, scope: !8766)
!8768 = !DILocation(line: 546, column: 3, scope: !8766)
!8769 = !DILocation(line: 546, column: 21, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8761, file: !1286, line: 546, column: 14)
!8771 = !DILocation(line: 546, column: 45, scope: !8770)
!8772 = !DILocation(line: 546, column: 14, scope: !8761)
!8773 = !DILocation(line: 547, column: 40, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8770, file: !1286, line: 546, column: 51)
!8775 = !DILocation(line: 547, column: 4, scope: !8774)
!8776 = !DILocation(line: 548, column: 3, scope: !8774)
!8777 = !DILocation(line: 551, column: 32, scope: !8743)
!8778 = !DILocation(line: 551, column: 37, scope: !8743)
!8779 = !DILocation(line: 551, column: 2, scope: !8743)
!8780 = !DILocation(line: 554, column: 6, scope: !8743)
!8781 = !DILocation(line: 562, column: 1, scope: !8743)
!8782 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1286, file: !1286, line: 410, type: !8783, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8785)
!8783 = !DISubroutineType(types: !8784)
!8784 = !{!118, !1151, !989}
!8785 = !{!8786, !8787, !8788, !8790}
!8786 = !DILocalVariable(name: "dev", arg: 1, scope: !8782, file: !1286, line: 410, type: !1151)
!8787 = !DILocalVariable(name: "value", arg: 2, scope: !8782, file: !1286, line: 410, type: !989)
!8788 = !DILocalVariable(name: "cfg", scope: !8782, file: !1286, line: 412, type: !8789)
!8789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!8790 = !DILocalVariable(name: "gpio", scope: !8782, file: !1286, line: 413, type: !1218)
!8791 = !DILocation(line: 0, scope: !8782)
!8792 = !DILocation(line: 412, column: 45, scope: !8782)
!8793 = !DILocation(line: 413, column: 44, scope: !8782)
!8794 = !DILocation(line: 415, column: 11, scope: !8782)
!8795 = !DILocation(line: 415, column: 9, scope: !8782)
!8796 = !DILocation(line: 417, column: 2, scope: !8782)
!8797 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1286, file: !1286, line: 420, type: !1172, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8798)
!8798 = !{!8799, !8800, !8801, !8802, !8803, !8804}
!8799 = !DILocalVariable(name: "dev", arg: 1, scope: !8797, file: !1286, line: 420, type: !1151)
!8800 = !DILocalVariable(name: "mask", arg: 2, scope: !8797, file: !1286, line: 421, type: !167)
!8801 = !DILocalVariable(name: "value", arg: 3, scope: !8797, file: !1286, line: 422, type: !162)
!8802 = !DILocalVariable(name: "cfg", scope: !8797, file: !1286, line: 424, type: !8789)
!8803 = !DILocalVariable(name: "gpio", scope: !8797, file: !1286, line: 425, type: !1218)
!8804 = !DILocalVariable(name: "port_value", scope: !8797, file: !1286, line: 426, type: !156)
!8805 = !DILocation(line: 0, scope: !8797)
!8806 = !DILocation(line: 424, column: 45, scope: !8797)
!8807 = !DILocation(line: 425, column: 44, scope: !8797)
!8808 = !DILocation(line: 430, column: 15, scope: !8797)
!8809 = !DILocation(line: 431, column: 46, scope: !8797)
!8810 = !DILocation(line: 431, column: 44, scope: !8797)
!8811 = !DILocation(line: 431, column: 61, scope: !8797)
!8812 = !DILocation(line: 431, column: 53, scope: !8797)
!8813 = !DILocation(line: 431, column: 2, scope: !8797)
!8814 = !DILocation(line: 435, column: 2, scope: !8797)
!8815 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1286, file: !1286, line: 438, type: !1176, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8816)
!8816 = !{!8817, !8818, !8819, !8820}
!8817 = !DILocalVariable(name: "dev", arg: 1, scope: !8815, file: !1286, line: 438, type: !1151)
!8818 = !DILocalVariable(name: "pins", arg: 2, scope: !8815, file: !1286, line: 439, type: !167)
!8819 = !DILocalVariable(name: "cfg", scope: !8815, file: !1286, line: 441, type: !8789)
!8820 = !DILocalVariable(name: "gpio", scope: !8815, file: !1286, line: 442, type: !1218)
!8821 = !DILocation(line: 0, scope: !8815)
!8822 = !DILocation(line: 441, column: 45, scope: !8815)
!8823 = !DILocation(line: 442, column: 44, scope: !8815)
!8824 = !DILocation(line: 448, column: 2, scope: !8815)
!8825 = !DILocation(line: 450, column: 2, scope: !8815)
!8826 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1286, file: !1286, line: 453, type: !1176, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8827)
!8827 = !{!8828, !8829, !8830, !8831}
!8828 = !DILocalVariable(name: "dev", arg: 1, scope: !8826, file: !1286, line: 453, type: !1151)
!8829 = !DILocalVariable(name: "pins", arg: 2, scope: !8826, file: !1286, line: 454, type: !167)
!8830 = !DILocalVariable(name: "cfg", scope: !8826, file: !1286, line: 456, type: !8789)
!8831 = !DILocalVariable(name: "gpio", scope: !8826, file: !1286, line: 457, type: !1218)
!8832 = !DILocation(line: 0, scope: !8826)
!8833 = !DILocation(line: 456, column: 45, scope: !8826)
!8834 = !DILocation(line: 457, column: 44, scope: !8826)
!8835 = !DILocation(line: 467, column: 2, scope: !8826)
!8836 = !DILocation(line: 470, column: 2, scope: !8826)
!8837 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1286, file: !1286, line: 473, type: !1176, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8838)
!8838 = !{!8839, !8840, !8841, !8842}
!8839 = !DILocalVariable(name: "dev", arg: 1, scope: !8837, file: !1286, line: 473, type: !1151)
!8840 = !DILocalVariable(name: "pins", arg: 2, scope: !8837, file: !1286, line: 474, type: !167)
!8841 = !DILocalVariable(name: "cfg", scope: !8837, file: !1286, line: 476, type: !8789)
!8842 = !DILocalVariable(name: "gpio", scope: !8837, file: !1286, line: 477, type: !1218)
!8843 = !DILocation(line: 0, scope: !8837)
!8844 = !DILocation(line: 476, column: 45, scope: !8837)
!8845 = !DILocation(line: 477, column: 44, scope: !8837)
!8846 = !DILocation(line: 484, column: 2, scope: !8837)
!8847 = !DILocation(line: 487, column: 2, scope: !8837)
!8848 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1286, file: !1286, line: 594, type: !1182, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8849)
!8849 = !{!8850, !8851, !8852, !8853, !8854, !8855, !8857, !8858, !8859}
!8850 = !DILocalVariable(name: "dev", arg: 1, scope: !8848, file: !1286, line: 594, type: !1151)
!8851 = !DILocalVariable(name: "pin", arg: 2, scope: !8848, file: !1286, line: 595, type: !154)
!8852 = !DILocalVariable(name: "mode", arg: 3, scope: !8848, file: !1286, line: 596, type: !101)
!8853 = !DILocalVariable(name: "trig", arg: 4, scope: !8848, file: !1286, line: 597, type: !107)
!8854 = !DILocalVariable(name: "cfg", scope: !8848, file: !1286, line: 599, type: !8789)
!8855 = !DILocalVariable(name: "data", scope: !8848, file: !1286, line: 600, type: !8856)
!8856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 32)
!8857 = !DILocalVariable(name: "edge", scope: !8848, file: !1286, line: 601, type: !118)
!8858 = !DILocalVariable(name: "err", scope: !8848, file: !1286, line: 602, type: !118)
!8859 = !DILabel(scope: !8848, name: "exit", file: !1286, line: 643)
!8860 = !DILocation(line: 0, scope: !8848)
!8861 = !DILocation(line: 599, column: 45, scope: !8848)
!8862 = !DILocation(line: 604, column: 6, scope: !8848)
!8863 = !DILocation(line: 605, column: 34, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !1286, line: 605, column: 7)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !1286, line: 604, column: 38)
!8866 = distinct !DILexicalBlock(scope: !8848, file: !1286, line: 604, column: 6)
!8867 = !DILocation(line: 605, column: 7, scope: !8864)
!8868 = !DILocation(line: 605, column: 47, scope: !8864)
!8869 = !DILocation(line: 605, column: 39, scope: !8864)
!8870 = !DILocation(line: 605, column: 7, scope: !8865)
!8871 = !DILocation(line: 606, column: 4, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8864, file: !1286, line: 605, column: 53)
!8873 = !DILocation(line: 607, column: 4, scope: !8872)
!8874 = !DILocation(line: 608, column: 4, scope: !8872)
!8875 = !DILocation(line: 609, column: 3, scope: !8872)
!8876 = !DILocation(line: 600, column: 38, scope: !8848)
!8877 = !DILocation(line: 620, column: 30, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8848, file: !1286, line: 620, column: 6)
!8879 = !DILocation(line: 620, column: 6, scope: !8878)
!8880 = !DILocation(line: 620, column: 57, scope: !8878)
!8881 = !DILocation(line: 620, column: 6, scope: !8848)
!8882 = !DILocation(line: 625, column: 29, scope: !8848)
!8883 = !DILocation(line: 625, column: 2, scope: !8848)
!8884 = !DILocation(line: 627, column: 2, scope: !8848)
!8885 = !DILocation(line: 630, column: 3, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8848, file: !1286, line: 627, column: 16)
!8887 = !DILocation(line: 633, column: 3, scope: !8886)
!8888 = !DILocation(line: 636, column: 3, scope: !8886)
!8889 = !DILocation(line: 639, column: 2, scope: !8848)
!8890 = !DILocation(line: 641, column: 2, scope: !8848)
!8891 = !DILocation(line: 643, column: 1, scope: !8848)
!8892 = !DILocation(line: 644, column: 2, scope: !8848)
!8893 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1286, file: !1286, line: 647, type: !1186, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8894)
!8894 = !{!8895, !8896, !8897, !8898}
!8895 = !DILocalVariable(name: "dev", arg: 1, scope: !8893, file: !1286, line: 647, type: !1151)
!8896 = !DILocalVariable(name: "callback", arg: 2, scope: !8893, file: !1286, line: 648, type: !1188)
!8897 = !DILocalVariable(name: "set", arg: 3, scope: !8893, file: !1286, line: 649, type: !146)
!8898 = !DILocalVariable(name: "data", scope: !8893, file: !1286, line: 651, type: !8856)
!8899 = !DILocation(line: 0, scope: !8893)
!8900 = !DILocation(line: 651, column: 38, scope: !8893)
!8901 = !DILocation(line: 653, column: 37, scope: !8893)
!8902 = !DILocation(line: 653, column: 9, scope: !8893)
!8903 = !DILocation(line: 653, column: 2, scope: !8893)
!8904 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8905, file: !8905, line: 38, type: !8906, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8909)
!8905 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8906 = !DISubroutineType(types: !8907)
!8907 = !{!118, !8908, !1188, !146}
!8908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 32)
!8909 = !{!8910, !8911, !8912}
!8910 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8904, file: !8905, line: 38, type: !8908)
!8911 = !DILocalVariable(name: "callback", arg: 2, scope: !8904, file: !8905, line: 39, type: !1188)
!8912 = !DILocalVariable(name: "set", arg: 3, scope: !8904, file: !8905, line: 40, type: !146)
!8913 = !DILocation(line: 0, scope: !8904)
!8914 = !DILocation(line: 42, column: 2, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !8905, line: 42, column: 2)
!8916 = distinct !DILexicalBlock(scope: !8904, file: !8905, line: 42, column: 2)
!8917 = !DILocation(line: 42, column: 2, scope: !8916)
!8918 = !DILocation(line: 42, column: 2, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8915, file: !8905, line: 42, column: 2)
!8920 = !DILocation(line: 43, column: 2, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !8905, line: 43, column: 2)
!8922 = distinct !DILexicalBlock(scope: !8904, file: !8905, line: 43, column: 2)
!8923 = !DILocation(line: 43, column: 2, scope: !8922)
!8924 = !DILocation(line: 43, column: 2, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8921, file: !8905, line: 43, column: 2)
!8926 = !DILocation(line: 45, column: 7, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8904, file: !8905, line: 45, column: 6)
!8928 = !DILocation(line: 45, column: 6, scope: !8904)
!8929 = !DILocation(line: 46, column: 56, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !8905, line: 46, column: 7)
!8931 = distinct !DILexicalBlock(scope: !8927, file: !8905, line: 45, column: 38)
!8932 = !DILocation(line: 46, column: 8, scope: !8930)
!8933 = !DILocation(line: 46, column: 7, scope: !8931)
!8934 = !DILocation(line: 51, column: 13, scope: !8927)
!8935 = !DILocation(line: 56, column: 43, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !8905, line: 55, column: 11)
!8937 = distinct !DILexicalBlock(scope: !8904, file: !8905, line: 55, column: 6)
!8938 = !DILocation(line: 56, column: 3, scope: !8936)
!8939 = !DILocation(line: 57, column: 2, scope: !8936)
!8940 = !DILocation(line: 60, column: 1, scope: !8904)
!8941 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !187, file: !187, line: 261, type: !8942, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8944)
!8942 = !DISubroutineType(types: !8943)
!8943 = !{!146, !8908}
!8944 = !{!8945}
!8945 = !DILocalVariable(name: "list", arg: 1, scope: !8941, file: !187, line: 261, type: !8908)
!8946 = !DILocation(line: 0, scope: !8941)
!8947 = !DILocation(line: 261, column: 1, scope: !8941)
!8948 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !187, file: !187, line: 417, type: !8949, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8951)
!8949 = !DISubroutineType(types: !8950)
!8950 = !{!146, !8908, !1362}
!8951 = !{!8952, !8953, !8954, !8955}
!8952 = !DILocalVariable(name: "list", arg: 1, scope: !8948, file: !187, line: 417, type: !8908)
!8953 = !DILocalVariable(name: "node", arg: 2, scope: !8948, file: !187, line: 417, type: !1362)
!8954 = !DILocalVariable(name: "prev", scope: !8948, file: !187, line: 417, type: !1362)
!8955 = !DILocalVariable(name: "test", scope: !8948, file: !187, line: 417, type: !1362)
!8956 = !DILocation(line: 0, scope: !8948)
!8957 = !DILocation(line: 417, column: 1, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8948, file: !187, line: 417, column: 1)
!8959 = !DILocation(line: 417, column: 1, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8958, file: !187, line: 417, column: 1)
!8961 = !DILocation(line: 417, column: 1, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8963, file: !187, line: 417, column: 1)
!8963 = distinct !DILexicalBlock(scope: !8960, file: !187, line: 417, column: 1)
!8964 = !DILocation(line: 417, column: 1, scope: !8963)
!8965 = distinct !{!8965, !8957, !8957}
!8966 = !DILocation(line: 417, column: 1, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8962, file: !187, line: 417, column: 1)
!8968 = !DILocation(line: 417, column: 1, scope: !8948)
!8969 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !187, file: !187, line: 298, type: !8970, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8972)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{null, !8908, !1362}
!8972 = !{!8973, !8974}
!8973 = !DILocalVariable(name: "list", arg: 1, scope: !8969, file: !187, line: 298, type: !8908)
!8974 = !DILocalVariable(name: "node", arg: 2, scope: !8969, file: !187, line: 298, type: !1362)
!8975 = !DILocation(line: 0, scope: !8969)
!8976 = !DILocation(line: 298, column: 1, scope: !8969)
!8977 = !DILocation(line: 298, column: 1, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8969, file: !187, line: 298, column: 1)
!8979 = !DILocation(line: 298, column: 1, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8978, file: !187, line: 298, column: 1)
!8981 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !187, file: !187, line: 231, type: !8982, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8984)
!8982 = !DISubroutineType(types: !8983)
!8983 = !{!1362, !8908}
!8984 = !{!8985}
!8985 = !DILocalVariable(name: "list", arg: 1, scope: !8981, file: !187, line: 231, type: !8908)
!8986 = !DILocation(line: 0, scope: !8981)
!8987 = !DILocation(line: 233, column: 15, scope: !8981)
!8988 = !DILocation(line: 233, column: 2, scope: !8981)
!8989 = distinct !DISubprogram(name: "z_snode_next_set", scope: !187, file: !187, line: 209, type: !8990, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !8992)
!8990 = !DISubroutineType(types: !8991)
!8991 = !{null, !1362, !1362}
!8992 = !{!8993, !8994}
!8993 = !DILocalVariable(name: "parent", arg: 1, scope: !8989, file: !187, line: 209, type: !1362)
!8994 = !DILocalVariable(name: "child", arg: 2, scope: !8989, file: !187, line: 209, type: !1362)
!8995 = !DILocation(line: 0, scope: !8989)
!8996 = !DILocation(line: 211, column: 10, scope: !8989)
!8997 = !DILocation(line: 211, column: 15, scope: !8989)
!8998 = !DILocation(line: 212, column: 1, scope: !8989)
!8999 = distinct !DISubprogram(name: "z_slist_head_set", scope: !187, file: !187, line: 214, type: !8970, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9000)
!9000 = !{!9001, !9002}
!9001 = !DILocalVariable(name: "list", arg: 1, scope: !8999, file: !187, line: 214, type: !8908)
!9002 = !DILocalVariable(name: "node", arg: 2, scope: !8999, file: !187, line: 214, type: !1362)
!9003 = !DILocation(line: 0, scope: !8999)
!9004 = !DILocation(line: 216, column: 8, scope: !8999)
!9005 = !DILocation(line: 216, column: 13, scope: !8999)
!9006 = !DILocation(line: 217, column: 1, scope: !8999)
!9007 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !187, file: !187, line: 243, type: !8982, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9008)
!9008 = !{!9009}
!9009 = !DILocalVariable(name: "list", arg: 1, scope: !9007, file: !187, line: 243, type: !8908)
!9010 = !DILocation(line: 0, scope: !9007)
!9011 = !DILocation(line: 245, column: 15, scope: !9007)
!9012 = !DILocation(line: 245, column: 2, scope: !9007)
!9013 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !187, file: !187, line: 219, type: !8970, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9014)
!9014 = !{!9015, !9016}
!9015 = !DILocalVariable(name: "list", arg: 1, scope: !9013, file: !187, line: 219, type: !8908)
!9016 = !DILocalVariable(name: "node", arg: 2, scope: !9013, file: !187, line: 219, type: !1362)
!9017 = !DILocation(line: 0, scope: !9013)
!9018 = !DILocation(line: 221, column: 8, scope: !9013)
!9019 = !DILocation(line: 221, column: 13, scope: !9013)
!9020 = !DILocation(line: 222, column: 1, scope: !9013)
!9021 = distinct !DISubprogram(name: "sys_slist_remove", scope: !187, file: !187, line: 401, type: !9022, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9024)
!9022 = !DISubroutineType(types: !9023)
!9023 = !{null, !8908, !1362, !1362}
!9024 = !{!9025, !9026, !9027}
!9025 = !DILocalVariable(name: "list", arg: 1, scope: !9021, file: !187, line: 401, type: !8908)
!9026 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9021, file: !187, line: 401, type: !1362)
!9027 = !DILocalVariable(name: "node", arg: 3, scope: !9021, file: !187, line: 401, type: !1362)
!9028 = !DILocation(line: 0, scope: !9021)
!9029 = !DILocation(line: 401, column: 1, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9021, file: !187, line: 401, column: 1)
!9031 = !DILocation(line: 0, scope: !9030)
!9032 = !DILocation(line: 401, column: 1, scope: !9021)
!9033 = !DILocation(line: 401, column: 1, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9030, file: !187, line: 401, column: 1)
!9035 = !DILocation(line: 401, column: 1, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9034, file: !187, line: 401, column: 1)
!9037 = !DILocation(line: 401, column: 1, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9036, file: !187, line: 401, column: 1)
!9039 = !DILocation(line: 401, column: 1, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9030, file: !187, line: 401, column: 1)
!9041 = !DILocation(line: 401, column: 1, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9040, file: !187, line: 401, column: 1)
!9043 = !DILocation(line: 401, column: 1, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9042, file: !187, line: 401, column: 1)
!9045 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !187, file: !187, line: 285, type: !9046, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9048)
!9046 = !DISubroutineType(types: !9047)
!9047 = !{!1362, !1362}
!9048 = !{!9049}
!9049 = !DILocalVariable(name: "node", arg: 1, scope: !9045, file: !187, line: 285, type: !1362)
!9050 = !DILocation(line: 0, scope: !9045)
!9051 = !DILocation(line: 285, column: 1, scope: !9045)
!9052 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !187, file: !187, line: 274, type: !9046, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9053)
!9053 = !{!9054}
!9054 = !DILocalVariable(name: "node", arg: 1, scope: !9052, file: !187, line: 274, type: !1362)
!9055 = !DILocation(line: 0, scope: !9052)
!9056 = !DILocation(line: 274, column: 1, scope: !9052)
!9057 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !187, file: !187, line: 204, type: !9046, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9058)
!9058 = !{!9059}
!9059 = !DILocalVariable(name: "node", arg: 1, scope: !9057, file: !187, line: 204, type: !1362)
!9060 = !DILocation(line: 0, scope: !9057)
!9061 = !DILocation(line: 206, column: 15, scope: !9057)
!9062 = !DILocation(line: 206, column: 2, scope: !9057)
!9063 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1286, file: !1286, line: 342, type: !439, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9064)
!9064 = !{!9065, !9066, !9067}
!9065 = !DILocalVariable(name: "pin", arg: 1, scope: !9063, file: !1286, line: 342, type: !118)
!9066 = !DILocalVariable(name: "line", scope: !9063, file: !1286, line: 344, type: !156)
!9067 = !DILocalVariable(name: "port", scope: !9063, file: !1286, line: 345, type: !118)
!9068 = !DILocation(line: 0, scope: !9063)
!9069 = !DILocation(line: 344, column: 18, scope: !9063)
!9070 = !{i32 983040, i32 0}
!9071 = !DILocation(line: 356, column: 9, scope: !9063)
!9072 = !DILocation(line: 370, column: 2, scope: !9063)
!9073 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1286, file: !1286, line: 37, type: !848, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9074)
!9074 = !{!9075, !9076, !9077}
!9075 = !DILocalVariable(name: "line", arg: 1, scope: !9073, file: !1286, line: 37, type: !118)
!9076 = !DILocalVariable(name: "arg", arg: 2, scope: !9073, file: !1286, line: 37, type: !117)
!9077 = !DILocalVariable(name: "data", scope: !9073, file: !1286, line: 39, type: !8856)
!9078 = !DILocation(line: 0, scope: !9073)
!9079 = !DILocation(line: 41, column: 29, scope: !9073)
!9080 = !DILocation(line: 41, column: 39, scope: !9073)
!9081 = !DILocation(line: 41, column: 44, scope: !9073)
!9082 = !DILocation(line: 41, column: 2, scope: !9073)
!9083 = !DILocation(line: 42, column: 1, scope: !9073)
!9084 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1286, file: !1286, line: 376, type: !9085, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9087)
!9085 = !DISubroutineType(types: !9086)
!9086 = !{!118, !118, !118}
!9087 = !{!9088, !9089, !9090, !9092, !9093}
!9088 = !DILocalVariable(name: "port", arg: 1, scope: !9084, file: !1286, line: 376, type: !118)
!9089 = !DILocalVariable(name: "pin", arg: 2, scope: !9084, file: !1286, line: 376, type: !118)
!9090 = !DILocalVariable(name: "clk", scope: !9084, file: !1286, line: 386, type: !9091)
!9091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1151)
!9092 = !DILocalVariable(name: "pclken", scope: !9084, file: !1286, line: 387, type: !1405)
!9093 = !DILocalVariable(name: "ret", scope: !9084, file: !1286, line: 396, type: !118)
!9094 = !DILocation(line: 0, scope: !9084)
!9095 = !DILocation(line: 387, column: 2, scope: !9084)
!9096 = !DILocation(line: 387, column: 22, scope: !9084)
!9097 = !DILocation(line: 399, column: 8, scope: !9084)
!9098 = !DILocation(line: 400, column: 10, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9084, file: !1286, line: 400, column: 6)
!9100 = !DILocation(line: 400, column: 6, scope: !9084)
!9101 = !DILocation(line: 405, column: 2, scope: !9084)
!9102 = !DILocation(line: 407, column: 2, scope: !9084)
!9103 = !DILocation(line: 408, column: 1, scope: !9084)
!9104 = distinct !DISubprogram(name: "clock_control_on", scope: !938, file: !938, line: 123, type: !1251, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9105)
!9105 = !{!9106, !9107, !9108}
!9106 = !DILocalVariable(name: "dev", arg: 1, scope: !9104, file: !938, line: 123, type: !1151)
!9107 = !DILocalVariable(name: "sys", arg: 2, scope: !9104, file: !938, line: 124, type: !1033)
!9108 = !DILocalVariable(name: "api", scope: !9104, file: !938, line: 126, type: !1244)
!9109 = !DILocation(line: 0, scope: !9104)
!9110 = !DILocation(line: 127, column: 49, scope: !9104)
!9111 = !DILocation(line: 129, column: 14, scope: !9104)
!9112 = !DILocation(line: 129, column: 9, scope: !9104)
!9113 = !DILocation(line: 129, column: 2, scope: !9104)
!9114 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1286, file: !1286, line: 311, type: !8222, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9115)
!9115 = !{!9116, !9117, !9118}
!9116 = !DILocalVariable(name: "port", arg: 1, scope: !9114, file: !1286, line: 311, type: !118)
!9117 = !DILocalVariable(name: "pin", arg: 2, scope: !9114, file: !1286, line: 311, type: !118)
!9118 = !DILocalVariable(name: "line", scope: !9114, file: !1286, line: 313, type: !156)
!9119 = !DILocation(line: 0, scope: !9114)
!9120 = !DILocation(line: 313, column: 18, scope: !9114)
!9121 = !DILocation(line: 337, column: 2, scope: !9114)
!9122 = !DILocation(line: 340, column: 1, scope: !9114)
!9123 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1286, file: !1286, line: 295, type: !9124, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9126)
!9124 = !DISubroutineType(types: !9125)
!9125 = !{!156, !118}
!9126 = !{!9127}
!9127 = !DILocalVariable(name: "pin", arg: 1, scope: !9123, file: !1286, line: 295, type: !118)
!9128 = !DILocation(line: 0, scope: !9123)
!9129 = !DILocation(line: 307, column: 46, scope: !9123)
!9130 = !DILocation(line: 307, column: 27, scope: !9123)
!9131 = !DILocation(line: 307, column: 32, scope: !9123)
!9132 = !DILocation(line: 307, column: 14, scope: !9123)
!9133 = !DILocation(line: 307, column: 39, scope: !9123)
!9134 = !DILocation(line: 307, column: 2, scope: !9123)
!9135 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6212, file: !6212, line: 671, type: !9136, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9138)
!9136 = !DISubroutineType(types: !9137)
!9137 = !{null, !156, !156}
!9138 = !{!9139, !9140}
!9139 = !DILocalVariable(name: "Port", arg: 1, scope: !9135, file: !6212, line: 671, type: !156)
!9140 = !DILocalVariable(name: "Line", arg: 2, scope: !9135, file: !6212, line: 671, type: !156)
!9141 = !DILocation(line: 0, scope: !9135)
!9142 = !DILocation(line: 673, column: 3, scope: !9135)
!9143 = !DILocalVariable(name: "value", arg: 1, scope: !9144, file: !6365, line: 373, type: !156)
!9144 = distinct !DISubprogram(name: "__RBIT", scope: !6365, file: !6365, line: 373, type: !7411, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9145)
!9145 = !{!9143, !9146}
!9146 = !DILocalVariable(name: "result", scope: !9144, file: !6365, line: 375, type: !156)
!9147 = !DILocation(line: 0, scope: !9144, inlinedAt: !9148)
!9148 = distinct !DILocation(line: 673, column: 3, scope: !9135)
!9149 = !DILocation(line: 380, column: 4, scope: !9144, inlinedAt: !9148)
!9150 = !{i64 2919845}
!9151 = !DILocalVariable(name: "value", arg: 1, scope: !9152, file: !6365, line: 403, type: !156)
!9152 = distinct !DISubprogram(name: "__CLZ", scope: !6365, file: !6365, line: 403, type: !9153, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9155)
!9153 = !DISubroutineType(types: !9154)
!9154 = !{!143, !156}
!9155 = !{!9151}
!9156 = !DILocation(line: 0, scope: !9152, inlinedAt: !9157)
!9157 = distinct !DILocation(line: 673, column: 3, scope: !9135)
!9158 = !DILocation(line: 414, column: 7, scope: !9152, inlinedAt: !9157)
!9159 = !DILocation(line: 674, column: 1, scope: !9135)
!9160 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8905, file: !8905, line: 69, type: !9161, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9163)
!9161 = !DISubroutineType(types: !9162)
!9162 = !{null, !8908, !1151, !156}
!9163 = !{!9164, !9165, !9166, !9167, !9168}
!9164 = !DILocalVariable(name: "list", arg: 1, scope: !9160, file: !8905, line: 69, type: !8908)
!9165 = !DILocalVariable(name: "port", arg: 2, scope: !9160, file: !8905, line: 70, type: !1151)
!9166 = !DILocalVariable(name: "pins", arg: 3, scope: !9160, file: !8905, line: 71, type: !156)
!9167 = !DILocalVariable(name: "cb", scope: !9160, file: !8905, line: 73, type: !1188)
!9168 = !DILocalVariable(name: "tmp", scope: !9160, file: !8905, line: 73, type: !1188)
!9169 = !DILocation(line: 0, scope: !9160)
!9170 = !DILocation(line: 75, column: 2, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9160, file: !8905, line: 75, column: 2)
!9172 = !DILocation(line: 0, scope: !9171)
!9173 = !DILocation(line: 76, column: 11, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !8905, line: 76, column: 7)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !8905, line: 75, column: 57)
!9176 = distinct !DILexicalBlock(scope: !9171, file: !8905, line: 75, column: 2)
!9177 = !DILocation(line: 76, column: 20, scope: !9174)
!9178 = !DILocation(line: 76, column: 7, scope: !9175)
!9179 = !DILocation(line: 77, column: 4, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9181, file: !8905, line: 77, column: 4)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !8905, line: 77, column: 4)
!9182 = distinct !DILexicalBlock(scope: !9174, file: !8905, line: 76, column: 28)
!9183 = !DILocation(line: 77, column: 4, scope: !9181)
!9184 = !DILocation(line: 77, column: 4, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9180, file: !8905, line: 77, column: 4)
!9186 = !DILocation(line: 78, column: 4, scope: !9182)
!9187 = !DILocation(line: 79, column: 3, scope: !9182)
!9188 = !DILocation(line: 75, column: 2, scope: !9176)
!9189 = !DILocation(line: 81, column: 1, scope: !9160)
!9190 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6212, file: !6212, line: 710, type: !7411, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9191)
!9191 = !{!9192}
!9192 = !DILocalVariable(name: "Line", arg: 1, scope: !9190, file: !6212, line: 710, type: !156)
!9193 = !DILocation(line: 0, scope: !9190)
!9194 = !DILocation(line: 712, column: 21, scope: !9190)
!9195 = !DILocation(line: 0, scope: !9144, inlinedAt: !9196)
!9196 = distinct !DILocation(line: 712, column: 76, scope: !9190)
!9197 = !DILocation(line: 380, column: 4, scope: !9144, inlinedAt: !9196)
!9198 = !DILocation(line: 0, scope: !9152, inlinedAt: !9199)
!9199 = distinct !DILocation(line: 712, column: 76, scope: !9190)
!9200 = !DILocation(line: 414, column: 7, scope: !9152, inlinedAt: !9199)
!9201 = !DILocation(line: 712, column: 73, scope: !9190)
!9202 = !DILocation(line: 712, column: 3, scope: !9190)
!9203 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9204, file: !9204, line: 910, type: !9205, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9207)
!9204 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9205 = !DISubroutineType(types: !9206)
!9206 = !{null, !1218, !156}
!9207 = !{!9208, !9209}
!9208 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9203, file: !9204, line: 910, type: !1218)
!9209 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9203, file: !9204, line: 910, type: !156)
!9210 = !DILocation(line: 0, scope: !9203)
!9211 = !DILocation(line: 912, column: 3, scope: !9203)
!9212 = !DILocation(line: 913, column: 1, scope: !9203)
!9213 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9204, file: !9204, line: 823, type: !9214, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9216)
!9214 = !DISubroutineType(types: !9215)
!9215 = !{!156, !1218}
!9216 = !{!9217}
!9217 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9213, file: !9204, line: 823, type: !1218)
!9218 = !DILocation(line: 0, scope: !9213)
!9219 = !DILocation(line: 825, column: 21, scope: !9213)
!9220 = !DILocation(line: 825, column: 3, scope: !9213)
!9221 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9204, file: !9204, line: 812, type: !9205, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9222)
!9222 = !{!9223, !9224}
!9223 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9221, file: !9204, line: 812, type: !1218)
!9224 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9221, file: !9204, line: 812, type: !156)
!9225 = !DILocation(line: 0, scope: !9221)
!9226 = !DILocation(line: 814, column: 3, scope: !9221)
!9227 = !DILocation(line: 815, column: 1, scope: !9221)
!9228 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9204, file: !9204, line: 771, type: !9214, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9229)
!9229 = !{!9230}
!9230 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9228, file: !9204, line: 771, type: !1218)
!9231 = !DILocation(line: 0, scope: !9228)
!9232 = !DILocation(line: 773, column: 21, scope: !9228)
!9233 = !DILocation(line: 773, column: 3, scope: !9228)
!9234 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1286, file: !1286, line: 47, type: !9235, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9237)
!9235 = !DISubroutineType(types: !9236)
!9236 = !{!118, !155, !2625}
!9237 = !{!9238, !9239}
!9238 = !DILocalVariable(name: "flags", arg: 1, scope: !9234, file: !1286, line: 47, type: !155)
!9239 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9234, file: !1286, line: 47, type: !2625)
!9240 = !DILocation(line: 0, scope: !9234)
!9241 = !DILocation(line: 50, column: 13, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9234, file: !1286, line: 50, column: 6)
!9243 = !DILocation(line: 50, column: 28, scope: !9242)
!9244 = !DILocation(line: 50, column: 6, scope: !9234)
!9245 = !DILocation(line: 53, column: 11, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9242, file: !1286, line: 50, column: 34)
!9247 = !DILocation(line: 55, column: 14, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9246, file: !1286, line: 55, column: 7)
!9249 = !DILocation(line: 55, column: 35, scope: !9248)
!9250 = !DILocation(line: 55, column: 7, scope: !9246)
!9251 = !DILocation(line: 56, column: 14, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9253, file: !1286, line: 56, column: 8)
!9253 = distinct !DILexicalBlock(scope: !9248, file: !1286, line: 55, column: 41)
!9254 = !DILocation(line: 56, column: 8, scope: !9253)
!9255 = !DILocation(line: 0, scope: !9248)
!9256 = !DILocation(line: 66, column: 14, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9246, file: !1286, line: 66, column: 7)
!9258 = !DILocation(line: 66, column: 30, scope: !9257)
!9259 = !DILocation(line: 66, column: 7, scope: !9246)
!9260 = !DILocation(line: 67, column: 12, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9257, file: !1286, line: 66, column: 36)
!9262 = !DILocation(line: 68, column: 3, scope: !9261)
!9263 = !DILocation(line: 68, column: 21, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9257, file: !1286, line: 68, column: 14)
!9265 = !DILocation(line: 68, column: 39, scope: !9264)
!9266 = !DILocation(line: 68, column: 14, scope: !9257)
!9267 = !DILocation(line: 69, column: 12, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9264, file: !1286, line: 68, column: 45)
!9269 = !DILocation(line: 70, column: 3, scope: !9268)
!9270 = !DILocation(line: 72, column: 21, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9242, file: !1286, line: 72, column: 14)
!9272 = !DILocation(line: 72, column: 35, scope: !9271)
!9273 = !DILocation(line: 72, column: 14, scope: !9242)
!9274 = !DILocation(line: 77, column: 14, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9276, file: !1286, line: 77, column: 7)
!9276 = distinct !DILexicalBlock(scope: !9271, file: !1286, line: 72, column: 41)
!9277 = !DILocation(line: 77, column: 30, scope: !9275)
!9278 = !DILocation(line: 77, column: 7, scope: !9276)
!9279 = !DILocation(line: 0, scope: !9242)
!9280 = !DILocation(line: 90, column: 1, scope: !9234)
!9281 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1286, file: !1286, line: 157, type: !9282, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9284)
!9282 = !DISubroutineType(types: !9283)
!9283 = !{null, !1151, !118, !118, !118}
!9284 = !{!9285, !9286, !9287, !9288, !9289, !9290, !9291, !9292, !9293, !9294, !9295}
!9285 = !DILocalVariable(name: "dev", arg: 1, scope: !9281, file: !1286, line: 157, type: !1151)
!9286 = !DILocalVariable(name: "pin", arg: 2, scope: !9281, file: !1286, line: 157, type: !118)
!9287 = !DILocalVariable(name: "conf", arg: 3, scope: !9281, file: !1286, line: 158, type: !118)
!9288 = !DILocalVariable(name: "func", arg: 4, scope: !9281, file: !1286, line: 158, type: !118)
!9289 = !DILocalVariable(name: "cfg", scope: !9281, file: !1286, line: 160, type: !8789)
!9290 = !DILocalVariable(name: "gpio", scope: !9281, file: !1286, line: 161, type: !1218)
!9291 = !DILocalVariable(name: "pin_ll", scope: !9281, file: !1286, line: 163, type: !118)
!9292 = !DILocalVariable(name: "mode", scope: !9281, file: !1286, line: 227, type: !32)
!9293 = !DILocalVariable(name: "otype", scope: !9281, file: !1286, line: 227, type: !32)
!9294 = !DILocalVariable(name: "ospeed", scope: !9281, file: !1286, line: 227, type: !32)
!9295 = !DILocalVariable(name: "pupd", scope: !9281, file: !1286, line: 227, type: !32)
!9296 = !DILocation(line: 0, scope: !9281)
!9297 = !DILocation(line: 160, column: 45, scope: !9281)
!9298 = !DILocation(line: 161, column: 44, scope: !9281)
!9299 = !DILocation(line: 163, column: 15, scope: !9281)
!9300 = !DILocation(line: 229, column: 14, scope: !9281)
!9301 = !DILocation(line: 246, column: 47, scope: !9281)
!9302 = !DILocation(line: 246, column: 2, scope: !9281)
!9303 = !DILocation(line: 248, column: 43, scope: !9281)
!9304 = !DILocation(line: 248, column: 2, scope: !9281)
!9305 = !DILocation(line: 250, column: 40, scope: !9281)
!9306 = !DILocation(line: 250, column: 2, scope: !9281)
!9307 = !DILocation(line: 252, column: 11, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9281, file: !1286, line: 252, column: 6)
!9309 = !DILocation(line: 252, column: 6, scope: !9281)
!9310 = !DILocation(line: 253, column: 11, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9312, file: !1286, line: 253, column: 7)
!9312 = distinct !DILexicalBlock(scope: !9308, file: !1286, line: 252, column: 36)
!9313 = !DILocation(line: 253, column: 7, scope: !9312)
!9314 = !DILocation(line: 254, column: 4, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9311, file: !1286, line: 253, column: 16)
!9316 = !DILocation(line: 255, column: 3, scope: !9315)
!9317 = !DILocation(line: 256, column: 4, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9311, file: !1286, line: 255, column: 10)
!9319 = !DILocation(line: 260, column: 40, scope: !9281)
!9320 = !DILocation(line: 260, column: 2, scope: !9281)
!9321 = !DILocation(line: 265, column: 1, scope: !9281)
!9322 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1286, file: !1286, line: 137, type: !9124, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9323)
!9323 = !{!9324, !9325}
!9324 = !DILocalVariable(name: "pin", arg: 1, scope: !9322, file: !1286, line: 137, type: !118)
!9325 = !DILocalVariable(name: "pinval", scope: !9322, file: !1286, line: 139, type: !156)
!9326 = !DILocation(line: 0, scope: !9322)
!9327 = !DILocation(line: 149, column: 13, scope: !9322)
!9328 = !DILocation(line: 151, column: 2, scope: !9322)
!9329 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9204, file: !9204, line: 342, type: !9330, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9332)
!9330 = !DISubroutineType(types: !9331)
!9331 = !{null, !1218, !156, !156}
!9332 = !{!9333, !9334, !9335}
!9333 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9329, file: !9204, line: 342, type: !1218)
!9334 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9329, file: !9204, line: 342, type: !156)
!9335 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9329, file: !9204, line: 342, type: !156)
!9336 = !DILocation(line: 0, scope: !9329)
!9337 = !DILocation(line: 344, column: 3, scope: !9329)
!9338 = !DILocation(line: 345, column: 1, scope: !9329)
!9339 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9204, file: !9204, line: 413, type: !9330, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9340)
!9340 = !{!9341, !9342, !9343}
!9341 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9339, file: !9204, line: 413, type: !1218)
!9342 = !DILocalVariable(name: "Pin", arg: 2, scope: !9339, file: !9204, line: 413, type: !156)
!9343 = !DILocalVariable(name: "Speed", arg: 3, scope: !9339, file: !9204, line: 413, type: !156)
!9344 = !DILocation(line: 0, scope: !9339)
!9345 = !DILocation(line: 415, column: 3, scope: !9339)
!9346 = !DILocation(line: 0, scope: !9144, inlinedAt: !9347)
!9347 = distinct !DILocation(line: 415, column: 3, scope: !9339)
!9348 = !DILocation(line: 380, column: 4, scope: !9144, inlinedAt: !9347)
!9349 = !DILocation(line: 0, scope: !9152, inlinedAt: !9350)
!9350 = distinct !DILocation(line: 415, column: 3, scope: !9339)
!9351 = !DILocation(line: 414, column: 7, scope: !9152, inlinedAt: !9350)
!9352 = !DILocation(line: 0, scope: !9144, inlinedAt: !9353)
!9353 = distinct !DILocation(line: 415, column: 3, scope: !9339)
!9354 = !DILocation(line: 0, scope: !9152, inlinedAt: !9355)
!9355 = distinct !DILocation(line: 415, column: 3, scope: !9339)
!9356 = !DILocation(line: 417, column: 1, scope: !9339)
!9357 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9204, file: !9204, line: 484, type: !9330, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9358)
!9358 = !{!9359, !9360, !9361}
!9359 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9357, file: !9204, line: 484, type: !1218)
!9360 = !DILocalVariable(name: "Pin", arg: 2, scope: !9357, file: !9204, line: 484, type: !156)
!9361 = !DILocalVariable(name: "Pull", arg: 3, scope: !9357, file: !9204, line: 484, type: !156)
!9362 = !DILocation(line: 0, scope: !9357)
!9363 = !DILocation(line: 486, column: 3, scope: !9357)
!9364 = !DILocation(line: 0, scope: !9144, inlinedAt: !9365)
!9365 = distinct !DILocation(line: 486, column: 3, scope: !9357)
!9366 = !DILocation(line: 380, column: 4, scope: !9144, inlinedAt: !9365)
!9367 = !DILocation(line: 0, scope: !9152, inlinedAt: !9368)
!9368 = distinct !DILocation(line: 486, column: 3, scope: !9357)
!9369 = !DILocation(line: 414, column: 7, scope: !9152, inlinedAt: !9368)
!9370 = !DILocation(line: 0, scope: !9144, inlinedAt: !9371)
!9371 = distinct !DILocation(line: 486, column: 3, scope: !9357)
!9372 = !DILocation(line: 0, scope: !9152, inlinedAt: !9373)
!9373 = distinct !DILocation(line: 486, column: 3, scope: !9357)
!9374 = !DILocation(line: 487, column: 1, scope: !9357)
!9375 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9204, file: !9204, line: 556, type: !9330, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9376)
!9376 = !{!9377, !9378, !9379}
!9377 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9375, file: !9204, line: 556, type: !1218)
!9378 = !DILocalVariable(name: "Pin", arg: 2, scope: !9375, file: !9204, line: 556, type: !156)
!9379 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9375, file: !9204, line: 556, type: !156)
!9380 = !DILocation(line: 0, scope: !9375)
!9381 = !DILocation(line: 558, column: 3, scope: !9375)
!9382 = !DILocation(line: 0, scope: !9144, inlinedAt: !9383)
!9383 = distinct !DILocation(line: 558, column: 3, scope: !9375)
!9384 = !DILocation(line: 380, column: 4, scope: !9144, inlinedAt: !9383)
!9385 = !DILocation(line: 0, scope: !9152, inlinedAt: !9386)
!9386 = distinct !DILocation(line: 558, column: 3, scope: !9375)
!9387 = !DILocation(line: 414, column: 7, scope: !9152, inlinedAt: !9386)
!9388 = !DILocation(line: 0, scope: !9144, inlinedAt: !9389)
!9389 = distinct !DILocation(line: 558, column: 3, scope: !9375)
!9390 = !DILocation(line: 0, scope: !9152, inlinedAt: !9391)
!9391 = distinct !DILocation(line: 558, column: 3, scope: !9375)
!9392 = !DILocation(line: 560, column: 1, scope: !9375)
!9393 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9204, file: !9204, line: 633, type: !9330, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9394)
!9394 = !{!9395, !9396, !9397}
!9395 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9393, file: !9204, line: 633, type: !1218)
!9396 = !DILocalVariable(name: "Pin", arg: 2, scope: !9393, file: !9204, line: 633, type: !156)
!9397 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9393, file: !9204, line: 633, type: !156)
!9398 = !DILocation(line: 0, scope: !9393)
!9399 = !DILocation(line: 635, column: 3, scope: !9393)
!9400 = !DILocation(line: 0, scope: !9144, inlinedAt: !9401)
!9401 = distinct !DILocation(line: 635, column: 3, scope: !9393)
!9402 = !DILocation(line: 380, column: 4, scope: !9144, inlinedAt: !9401)
!9403 = !DILocation(line: 0, scope: !9152, inlinedAt: !9404)
!9404 = distinct !DILocation(line: 635, column: 3, scope: !9393)
!9405 = !DILocation(line: 414, column: 7, scope: !9152, inlinedAt: !9404)
!9406 = !DILocation(line: 0, scope: !9144, inlinedAt: !9407)
!9407 = distinct !DILocation(line: 635, column: 3, scope: !9393)
!9408 = !DILocation(line: 0, scope: !9152, inlinedAt: !9409)
!9409 = distinct !DILocation(line: 635, column: 3, scope: !9393)
!9410 = !DILocation(line: 637, column: 1, scope: !9393)
!9411 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9204, file: !9204, line: 273, type: !9330, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9412)
!9412 = !{!9413, !9414, !9415}
!9413 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9411, file: !9204, line: 273, type: !1218)
!9414 = !DILocalVariable(name: "Pin", arg: 2, scope: !9411, file: !9204, line: 273, type: !156)
!9415 = !DILocalVariable(name: "Mode", arg: 3, scope: !9411, file: !9204, line: 273, type: !156)
!9416 = !DILocation(line: 0, scope: !9411)
!9417 = !DILocation(line: 275, column: 3, scope: !9411)
!9418 = !DILocation(line: 0, scope: !9144, inlinedAt: !9419)
!9419 = distinct !DILocation(line: 275, column: 3, scope: !9411)
!9420 = !DILocation(line: 380, column: 4, scope: !9144, inlinedAt: !9419)
!9421 = !DILocation(line: 0, scope: !9152, inlinedAt: !9422)
!9422 = distinct !DILocation(line: 275, column: 3, scope: !9411)
!9423 = !DILocation(line: 414, column: 7, scope: !9152, inlinedAt: !9422)
!9424 = !DILocation(line: 0, scope: !9144, inlinedAt: !9425)
!9425 = distinct !DILocation(line: 275, column: 3, scope: !9411)
!9426 = !DILocation(line: 0, scope: !9152, inlinedAt: !9427)
!9427 = distinct !DILocation(line: 275, column: 3, scope: !9411)
!9428 = !DILocation(line: 276, column: 1, scope: !9411)
!9429 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1286, file: !1286, line: 698, type: !1299, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9430)
!9430 = !{!9431, !9432, !9433}
!9431 = !DILocalVariable(name: "dev", arg: 1, scope: !9429, file: !1286, line: 698, type: !1151)
!9432 = !DILocalVariable(name: "data", scope: !9429, file: !1286, line: 700, type: !8856)
!9433 = !DILocalVariable(name: "ret", scope: !9429, file: !1286, line: 701, type: !118)
!9434 = !DILocation(line: 0, scope: !9429)
!9435 = !DILocation(line: 700, column: 38, scope: !9429)
!9436 = !DILocation(line: 703, column: 8, scope: !9429)
!9437 = !DILocation(line: 703, column: 12, scope: !9429)
!9438 = !DILocation(line: 705, column: 7, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9429, file: !1286, line: 705, column: 6)
!9440 = !DILocation(line: 705, column: 6, scope: !9429)
!9441 = !DILocation(line: 722, column: 8, scope: !9429)
!9442 = !DILocation(line: 723, column: 10, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9429, file: !1286, line: 723, column: 6)
!9444 = !DILocation(line: 723, column: 6, scope: !9429)
!9445 = !DILocation(line: 731, column: 1, scope: !9429)
!9446 = distinct !DISubprogram(name: "device_is_ready", scope: !3402, file: !3402, line: 47, type: !9447, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9449)
!9447 = !DISubroutineType(types: !9448)
!9448 = !{!146, !1151}
!9449 = !{!9450}
!9450 = !DILocalVariable(name: "dev", arg: 1, scope: !9446, file: !3402, line: 47, type: !1151)
!9451 = !DILocation(line: 0, scope: !9446)
!9452 = !DILocation(line: 55, column: 2, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9446, file: !3402, line: 55, column: 2)
!9454 = !{i64 2154365752}
!9455 = !DILocation(line: 56, column: 9, scope: !9446)
!9456 = !DILocation(line: 56, column: 2, scope: !9446)
!9457 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1286, file: !1286, line: 270, type: !9458, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9460)
!9458 = !DISubroutineType(types: !9459)
!9459 = !{!118, !1151, !146}
!9460 = !{!9461, !9462, !9463, !9464, !9465}
!9461 = !DILocalVariable(name: "dev", arg: 1, scope: !9457, file: !1286, line: 270, type: !1151)
!9462 = !DILocalVariable(name: "on", arg: 2, scope: !9457, file: !1286, line: 270, type: !146)
!9463 = !DILocalVariable(name: "cfg", scope: !9457, file: !1286, line: 272, type: !8789)
!9464 = !DILocalVariable(name: "ret", scope: !9457, file: !1286, line: 273, type: !118)
!9465 = !DILocalVariable(name: "clk", scope: !9457, file: !1286, line: 278, type: !9091)
!9466 = !DILocation(line: 0, scope: !9457)
!9467 = !DILocation(line: 272, column: 45, scope: !9457)
!9468 = !DILocation(line: 282, column: 38, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9470, file: !1286, line: 280, column: 10)
!9470 = distinct !DILexicalBlock(scope: !9457, file: !1286, line: 280, column: 6)
!9471 = !DILocation(line: 282, column: 6, scope: !9469)
!9472 = !DILocation(line: 281, column: 9, scope: !9469)
!9473 = !DILocation(line: 293, column: 1, scope: !9457)
!9474 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !9447, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9475)
!9475 = !{!9476}
!9476 = !DILocalVariable(name: "dev", arg: 1, scope: !9474, file: !130, line: 730, type: !1151)
!9477 = !DILocation(line: 0, scope: !9474)
!9478 = !DILocation(line: 732, column: 9, scope: !9474)
!9479 = !DILocation(line: 732, column: 2, scope: !9474)
!9480 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1286, file: !1286, line: 496, type: !9481, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1133, retainedNodes: !9483)
!9481 = !DISubroutineType(types: !9482)
!9482 = !{!118, !1151, !118, !118, !118}
!9483 = !{!9484, !9485, !9486, !9487, !9488, !9489}
!9484 = !DILocalVariable(name: "dev", arg: 1, scope: !9480, file: !1286, line: 496, type: !1151)
!9485 = !DILocalVariable(name: "pin", arg: 2, scope: !9480, file: !1286, line: 496, type: !118)
!9486 = !DILocalVariable(name: "conf", arg: 3, scope: !9480, file: !1286, line: 496, type: !118)
!9487 = !DILocalVariable(name: "func", arg: 4, scope: !9480, file: !1286, line: 496, type: !118)
!9488 = !DILocalVariable(name: "ret", scope: !9480, file: !1286, line: 498, type: !118)
!9489 = !DILocalVariable(name: "gpio_out", scope: !9490, file: !1286, line: 508, type: !156)
!9490 = distinct !DILexicalBlock(scope: !9491, file: !1286, line: 507, column: 27)
!9491 = distinct !DILexicalBlock(scope: !9480, file: !1286, line: 507, column: 6)
!9492 = !DILocation(line: 0, scope: !9480)
!9493 = !DILocation(line: 505, column: 2, scope: !9480)
!9494 = !DILocation(line: 507, column: 11, scope: !9491)
!9495 = !DILocation(line: 507, column: 6, scope: !9480)
!9496 = !DILocation(line: 508, column: 28, scope: !9490)
!9497 = !DILocation(line: 0, scope: !9490)
!9498 = !DILocation(line: 510, column: 16, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9490, file: !1286, line: 510, column: 7)
!9500 = !DILocation(line: 0, scope: !9499)
!9501 = !DILocation(line: 510, column: 7, scope: !9490)
!9502 = !DILocation(line: 511, column: 4, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9499, file: !1286, line: 510, column: 32)
!9504 = !DILocation(line: 512, column: 3, scope: !9503)
!9505 = !DILocation(line: 513, column: 4, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !1286, line: 512, column: 39)
!9507 = distinct !DILexicalBlock(scope: !9499, file: !1286, line: 512, column: 14)
!9508 = !DILocation(line: 514, column: 3, scope: !9506)
!9509 = !DILocation(line: 518, column: 1, scope: !9480)
!9510 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1562, file: !1562, line: 526, type: !1465, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9511)
!9511 = !{!9512, !9513, !9514}
!9512 = !DILocalVariable(name: "dev", arg: 1, scope: !9510, file: !1562, line: 526, type: !1467)
!9513 = !DILocalVariable(name: "c", arg: 2, scope: !9510, file: !1562, line: 526, type: !1094)
!9514 = !DILocalVariable(name: "config", scope: !9510, file: !1562, line: 528, type: !9515)
!9515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!9516 = !DILocation(line: 0, scope: !9510)
!9517 = !DILocation(line: 528, column: 48, scope: !9510)
!9518 = !DILocation(line: 531, column: 40, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9510, file: !1562, line: 531, column: 6)
!9520 = !DILocation(line: 531, column: 6, scope: !9519)
!9521 = !DILocation(line: 531, column: 6, scope: !9510)
!9522 = !DILocation(line: 532, column: 34, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9519, file: !1562, line: 531, column: 48)
!9524 = !DILocation(line: 532, column: 3, scope: !9523)
!9525 = !DILocation(line: 533, column: 2, scope: !9523)
!9526 = !DILocation(line: 539, column: 42, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9510, file: !1562, line: 539, column: 6)
!9528 = !DILocation(line: 539, column: 7, scope: !9527)
!9529 = !DILocation(line: 539, column: 6, scope: !9510)
!9530 = !DILocation(line: 543, column: 52, scope: !9510)
!9531 = !DILocation(line: 543, column: 22, scope: !9510)
!9532 = !DILocation(line: 543, column: 5, scope: !9510)
!9533 = !DILocation(line: 545, column: 2, scope: !9510)
!9534 = !DILocation(line: 546, column: 1, scope: !9510)
!9535 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1562, file: !1562, line: 548, type: !1484, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9536)
!9536 = !{!9537, !9538, !9539, !9540}
!9537 = !DILocalVariable(name: "dev", arg: 1, scope: !9535, file: !1562, line: 548, type: !1467)
!9538 = !DILocalVariable(name: "c", arg: 2, scope: !9535, file: !1562, line: 549, type: !144)
!9539 = !DILocalVariable(name: "config", scope: !9535, file: !1562, line: 551, type: !9515)
!9540 = !DILocalVariable(name: "key", scope: !9535, file: !1562, line: 555, type: !32)
!9541 = !DILocation(line: 0, scope: !9535)
!9542 = !DILocation(line: 551, column: 48, scope: !9535)
!9543 = !DILocation(line: 562, column: 2, scope: !9535)
!9544 = !DILocation(line: 563, column: 41, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9546, file: !1562, line: 563, column: 7)
!9546 = distinct !DILexicalBlock(scope: !9535, file: !1562, line: 562, column: 12)
!9547 = !DILocation(line: 563, column: 7, scope: !9545)
!9548 = !DILocation(line: 563, column: 7, scope: !9546)
!9549 = !DILocation(line: 55, column: 2, scope: !9550, inlinedAt: !9554)
!9550 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6191, file: !6191, line: 42, type: !6192, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9551)
!9551 = !{!9552, !9553}
!9552 = !DILocalVariable(name: "key", scope: !9550, file: !6191, line: 44, type: !32)
!9553 = !DILocalVariable(name: "tmp", scope: !9550, file: !6191, line: 53, type: !32)
!9554 = distinct !DILocation(line: 564, column: 10, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9545, file: !1562, line: 563, column: 49)
!9556 = !{i64 2088554}
!9557 = !DILocation(line: 0, scope: !9550, inlinedAt: !9554)
!9558 = !DILocation(line: 565, column: 42, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9555, file: !1562, line: 565, column: 8)
!9560 = !DILocation(line: 565, column: 8, scope: !9559)
!9561 = !DILocation(line: 565, column: 8, scope: !9555)
!9562 = !DILocalVariable(name: "key", arg: 1, scope: !9563, file: !6191, line: 84, type: !32)
!9563 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6191, file: !6191, line: 84, type: !6202, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9564)
!9564 = !{!9562}
!9565 = !DILocation(line: 0, scope: !9563, inlinedAt: !9566)
!9566 = distinct !DILocation(line: 568, column: 4, scope: !9555)
!9567 = !DILocation(line: 95, column: 2, scope: !9563, inlinedAt: !9566)
!9568 = !{i64 2089371}
!9569 = !DILocation(line: 569, column: 3, scope: !9555)
!9570 = distinct !{!9570, !9543, !9571}
!9571 = !DILocation(line: 570, column: 2, scope: !9535)
!9572 = !DILocation(line: 592, column: 33, scope: !9535)
!9573 = !DILocation(line: 592, column: 2, scope: !9535)
!9574 = !DILocation(line: 0, scope: !9563, inlinedAt: !9575)
!9575 = distinct !DILocation(line: 593, column: 2, scope: !9535)
!9576 = !DILocation(line: 95, column: 2, scope: !9563, inlinedAt: !9575)
!9577 = !DILocation(line: 594, column: 1, scope: !9535)
!9578 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1562, file: !1562, line: 596, type: !1488, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9579)
!9579 = !{!9580, !9581, !9582}
!9580 = !DILocalVariable(name: "dev", arg: 1, scope: !9578, file: !1562, line: 596, type: !1467)
!9581 = !DILocalVariable(name: "config", scope: !9578, file: !1562, line: 598, type: !9515)
!9582 = !DILocalVariable(name: "err", scope: !9578, file: !1562, line: 599, type: !156)
!9583 = !DILocation(line: 0, scope: !9578)
!9584 = !DILocation(line: 598, column: 48, scope: !9578)
!9585 = !DILocation(line: 606, column: 40, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9578, file: !1562, line: 606, column: 6)
!9587 = !DILocation(line: 606, column: 6, scope: !9586)
!9588 = !DILocation(line: 606, column: 6, scope: !9578)
!9589 = !DILocation(line: 610, column: 39, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9578, file: !1562, line: 610, column: 6)
!9591 = !DILocation(line: 610, column: 6, scope: !9590)
!9592 = !DILocation(line: 610, column: 6, scope: !9578)
!9593 = !DILocation(line: 614, column: 39, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9578, file: !1562, line: 614, column: 6)
!9595 = !DILocation(line: 614, column: 6, scope: !9594)
!9596 = !DILocation(line: 614, column: 6, scope: !9578)
!9597 = !DILocation(line: 619, column: 40, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9578, file: !1562, line: 619, column: 6)
!9599 = !DILocation(line: 619, column: 6, scope: !9598)
!9600 = !DILocation(line: 619, column: 6, scope: !9578)
!9601 = !DILocation(line: 623, column: 10, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9578, file: !1562, line: 623, column: 6)
!9603 = !DILocation(line: 623, column: 6, scope: !9578)
!9604 = !DILocation(line: 624, column: 34, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9602, file: !1562, line: 623, column: 24)
!9606 = !DILocation(line: 624, column: 3, scope: !9605)
!9607 = !DILocation(line: 625, column: 2, scope: !9605)
!9608 = !DILocation(line: 632, column: 10, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9578, file: !1562, line: 632, column: 6)
!9610 = !DILocation(line: 632, column: 6, scope: !9578)
!9611 = !DILocation(line: 633, column: 34, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9609, file: !1562, line: 632, column: 32)
!9613 = !DILocation(line: 633, column: 3, scope: !9612)
!9614 = !DILocation(line: 634, column: 2, scope: !9612)
!9615 = !DILocation(line: 636, column: 10, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9578, file: !1562, line: 636, column: 6)
!9617 = !DILocation(line: 636, column: 6, scope: !9578)
!9618 = !DILocation(line: 637, column: 33, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9616, file: !1562, line: 636, column: 31)
!9620 = !DILocation(line: 637, column: 3, scope: !9619)
!9621 = !DILocation(line: 638, column: 2, scope: !9619)
!9622 = !DILocation(line: 640, column: 10, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9578, file: !1562, line: 640, column: 6)
!9624 = !DILocation(line: 640, column: 6, scope: !9578)
!9625 = !DILocation(line: 641, column: 33, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9623, file: !1562, line: 640, column: 32)
!9627 = !DILocation(line: 641, column: 3, scope: !9626)
!9628 = !DILocation(line: 642, column: 2, scope: !9626)
!9629 = !DILocation(line: 646, column: 32, scope: !9578)
!9630 = !DILocation(line: 646, column: 2, scope: !9578)
!9631 = !DILocation(line: 648, column: 2, scope: !9578)
!9632 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1562, file: !1562, line: 419, type: !1492, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9633)
!9633 = !{!9634, !9635, !9636, !9637, !9639, !9640, !9641, !9642}
!9634 = !DILocalVariable(name: "dev", arg: 1, scope: !9632, file: !1562, line: 419, type: !1467)
!9635 = !DILocalVariable(name: "cfg", arg: 2, scope: !9632, file: !1562, line: 420, type: !1494)
!9636 = !DILocalVariable(name: "config", scope: !9632, file: !1562, line: 422, type: !9515)
!9637 = !DILocalVariable(name: "data", scope: !9632, file: !1562, line: 423, type: !9638)
!9638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!9639 = !DILocalVariable(name: "parity", scope: !9632, file: !1562, line: 424, type: !6641)
!9640 = !DILocalVariable(name: "stopbits", scope: !9632, file: !1562, line: 425, type: !6641)
!9641 = !DILocalVariable(name: "databits", scope: !9632, file: !1562, line: 426, type: !6641)
!9642 = !DILocalVariable(name: "flowctrl", scope: !9632, file: !1562, line: 428, type: !6641)
!9643 = !DILocation(line: 0, scope: !9632)
!9644 = !DILocation(line: 422, column: 48, scope: !9632)
!9645 = !DILocation(line: 423, column: 38, scope: !9632)
!9646 = !DILocation(line: 424, column: 56, scope: !9632)
!9647 = !DILocation(line: 424, column: 51, scope: !9632)
!9648 = !DILocation(line: 424, column: 26, scope: !9632)
!9649 = !DILocation(line: 425, column: 60, scope: !9632)
!9650 = !DILocation(line: 425, column: 55, scope: !9632)
!9651 = !DILocation(line: 425, column: 28, scope: !9632)
!9652 = !DILocation(line: 426, column: 60, scope: !9632)
!9653 = !DILocation(line: 426, column: 55, scope: !9632)
!9654 = !DILocation(line: 426, column: 28, scope: !9632)
!9655 = !DILocation(line: 428, column: 58, scope: !9632)
!9656 = !DILocation(line: 428, column: 53, scope: !9632)
!9657 = !DILocation(line: 428, column: 28, scope: !9632)
!9658 = !DILocation(line: 431, column: 44, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9632, file: !1562, line: 431, column: 6)
!9660 = !DILocation(line: 438, column: 22, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9632, file: !1562, line: 437, column: 6)
!9662 = !DILocation(line: 437, column: 6, scope: !9632)
!9663 = !DILocation(line: 448, column: 6, scope: !9632)
!9664 = !DILocation(line: 465, column: 47, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9632, file: !1562, line: 465, column: 6)
!9666 = !DILocation(line: 475, column: 21, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9632, file: !1562, line: 475, column: 6)
!9668 = !DILocation(line: 475, column: 6, scope: !9632)
!9669 = !DILocation(line: 476, column: 8, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9671, file: !1562, line: 476, column: 7)
!9671 = distinct !DILexicalBlock(scope: !9667, file: !1562, line: 475, column: 49)
!9672 = !DILocation(line: 477, column: 34, scope: !9670)
!9673 = !DILocation(line: 476, column: 7, scope: !9671)
!9674 = !DILocation(line: 482, column: 27, scope: !9632)
!9675 = !DILocation(line: 482, column: 2, scope: !9632)
!9676 = !DILocation(line: 484, column: 16, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9632, file: !1562, line: 484, column: 6)
!9678 = !DILocation(line: 484, column: 13, scope: !9677)
!9679 = !DILocation(line: 484, column: 6, scope: !9632)
!9680 = !DILocation(line: 485, column: 3, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9677, file: !1562, line: 484, column: 44)
!9682 = !DILocation(line: 486, column: 2, scope: !9681)
!9683 = !DILocation(line: 488, column: 18, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9632, file: !1562, line: 488, column: 6)
!9685 = !DILocation(line: 488, column: 15, scope: !9684)
!9686 = !DILocation(line: 488, column: 6, scope: !9632)
!9687 = !DILocation(line: 489, column: 3, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9684, file: !1562, line: 488, column: 48)
!9689 = !DILocation(line: 490, column: 2, scope: !9688)
!9690 = !DILocation(line: 492, column: 18, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9632, file: !1562, line: 492, column: 6)
!9692 = !DILocation(line: 492, column: 15, scope: !9691)
!9693 = !DILocation(line: 492, column: 6, scope: !9632)
!9694 = !DILocation(line: 493, column: 3, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9691, file: !1562, line: 492, column: 48)
!9696 = !DILocation(line: 494, column: 2, scope: !9695)
!9697 = !DILocation(line: 496, column: 18, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9632, file: !1562, line: 496, column: 6)
!9699 = !DILocation(line: 496, column: 15, scope: !9698)
!9700 = !DILocation(line: 496, column: 6, scope: !9632)
!9701 = !DILocation(line: 497, column: 3, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9698, file: !1562, line: 496, column: 46)
!9703 = !DILocation(line: 498, column: 2, scope: !9702)
!9704 = !DILocation(line: 500, column: 11, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9632, file: !1562, line: 500, column: 6)
!9706 = !DILocation(line: 500, column: 29, scope: !9705)
!9707 = !DILocation(line: 500, column: 20, scope: !9705)
!9708 = !DILocation(line: 500, column: 6, scope: !9632)
!9709 = !DILocation(line: 501, column: 3, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9705, file: !1562, line: 500, column: 40)
!9711 = !DILocation(line: 502, column: 26, scope: !9710)
!9712 = !DILocation(line: 502, column: 19, scope: !9710)
!9713 = !DILocation(line: 503, column: 2, scope: !9710)
!9714 = !DILocation(line: 505, column: 26, scope: !9632)
!9715 = !DILocation(line: 505, column: 2, scope: !9632)
!9716 = !DILocation(line: 506, column: 2, scope: !9632)
!9717 = !DILocation(line: 507, column: 1, scope: !9632)
!9718 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1562, file: !1562, line: 509, type: !1505, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9719)
!9719 = !{!9720, !9721, !9722}
!9720 = !DILocalVariable(name: "dev", arg: 1, scope: !9718, file: !1562, line: 509, type: !1467)
!9721 = !DILocalVariable(name: "cfg", arg: 2, scope: !9718, file: !1562, line: 510, type: !1507)
!9722 = !DILocalVariable(name: "data", scope: !9718, file: !1562, line: 512, type: !9638)
!9723 = !DILocation(line: 0, scope: !9718)
!9724 = !DILocation(line: 512, column: 38, scope: !9718)
!9725 = !DILocation(line: 514, column: 24, scope: !9718)
!9726 = !DILocation(line: 514, column: 7, scope: !9718)
!9727 = !DILocation(line: 514, column: 16, scope: !9718)
!9728 = !DILocation(line: 515, column: 41, scope: !9718)
!9729 = !{i32 0, i32 1537}
!9730 = !DILocation(line: 515, column: 16, scope: !9718)
!9731 = !DILocation(line: 515, column: 7, scope: !9718)
!9732 = !DILocation(line: 515, column: 14, scope: !9718)
!9733 = !DILocation(line: 517, column: 3, scope: !9718)
!9734 = !{i32 0, i32 12289}
!9735 = !DILocation(line: 516, column: 19, scope: !9718)
!9736 = !DILocation(line: 516, column: 7, scope: !9718)
!9737 = !DILocation(line: 516, column: 17, scope: !9718)
!9738 = !DILocation(line: 519, column: 3, scope: !9718)
!9739 = !DILocation(line: 519, column: 33, scope: !9718)
!9740 = !DILocation(line: 518, column: 19, scope: !9718)
!9741 = !DILocation(line: 518, column: 7, scope: !9718)
!9742 = !DILocation(line: 518, column: 17, scope: !9718)
!9743 = !DILocation(line: 521, column: 3, scope: !9718)
!9744 = !{i32 0, i32 769}
!9745 = !DILocation(line: 520, column: 19, scope: !9718)
!9746 = !DILocation(line: 520, column: 7, scope: !9718)
!9747 = !DILocation(line: 520, column: 17, scope: !9718)
!9748 = !DILocation(line: 522, column: 2, scope: !9718)
!9749 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1562, file: !1562, line: 205, type: !9750, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9752)
!9750 = !DISubroutineType(types: !9751)
!9751 = !{!156, !1467}
!9752 = !{!9753, !9754}
!9753 = !DILocalVariable(name: "dev", arg: 1, scope: !9749, file: !1562, line: 205, type: !1467)
!9754 = !DILocalVariable(name: "config", scope: !9749, file: !1562, line: 207, type: !9515)
!9755 = !DILocation(line: 0, scope: !9749)
!9756 = !DILocation(line: 207, column: 48, scope: !9749)
!9757 = !DILocation(line: 209, column: 36, scope: !9749)
!9758 = !DILocation(line: 209, column: 9, scope: !9749)
!9759 = !DILocation(line: 209, column: 2, scope: !9749)
!9760 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1562, file: !1562, line: 270, type: !9761, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9763)
!9761 = !DISubroutineType(types: !9762)
!9762 = !{!1433, !156}
!9763 = !{!9764}
!9764 = !DILocalVariable(name: "parity", arg: 1, scope: !9760, file: !1562, line: 270, type: !156)
!9765 = !DILocation(line: 0, scope: !9760)
!9766 = !DILocation(line: 272, column: 2, scope: !9760)
!9767 = !DILocation(line: 281, column: 1, scope: !9760)
!9768 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1562, file: !1562, line: 220, type: !9750, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9769)
!9769 = !{!9770, !9771}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9768, file: !1562, line: 220, type: !1467)
!9771 = !DILocalVariable(name: "config", scope: !9768, file: !1562, line: 222, type: !9515)
!9772 = !DILocation(line: 0, scope: !9768)
!9773 = !DILocation(line: 222, column: 48, scope: !9768)
!9774 = !DILocation(line: 224, column: 44, scope: !9768)
!9775 = !DILocation(line: 224, column: 9, scope: !9768)
!9776 = !DILocation(line: 224, column: 2, scope: !9768)
!9777 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1562, file: !1562, line: 304, type: !9778, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9780)
!9778 = !DISubroutineType(types: !9779)
!9779 = !{!1447, !156}
!9780 = !{!9781}
!9781 = !DILocalVariable(name: "sb", arg: 1, scope: !9777, file: !1562, line: 304, type: !156)
!9782 = !DILocation(line: 0, scope: !9777)
!9783 = !DILocation(line: 306, column: 2, scope: !9777)
!9784 = !DILocation(line: 0, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9777, file: !1562, line: 306, column: 14)
!9786 = !DILocation(line: 323, column: 1, scope: !9777)
!9787 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1562, file: !1562, line: 235, type: !9750, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9788)
!9788 = !{!9789, !9790}
!9789 = !DILocalVariable(name: "dev", arg: 1, scope: !9787, file: !1562, line: 235, type: !1467)
!9790 = !DILocalVariable(name: "config", scope: !9787, file: !1562, line: 237, type: !9515)
!9791 = !DILocation(line: 0, scope: !9787)
!9792 = !DILocation(line: 237, column: 48, scope: !9787)
!9793 = !DILocation(line: 239, column: 39, scope: !9787)
!9794 = !DILocation(line: 239, column: 9, scope: !9787)
!9795 = !DILocation(line: 239, column: 2, scope: !9787)
!9796 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1562, file: !1562, line: 355, type: !9797, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9799)
!9797 = !DISubroutineType(types: !9798)
!9798 = !{!1440, !156, !156}
!9799 = !{!9800, !9801}
!9800 = !DILocalVariable(name: "db", arg: 1, scope: !9796, file: !1562, line: 355, type: !156)
!9801 = !DILocalVariable(name: "p", arg: 2, scope: !9796, file: !1562, line: 356, type: !156)
!9802 = !DILocation(line: 0, scope: !9796)
!9803 = !DILocation(line: 358, column: 2, scope: !9796)
!9804 = !DILocation(line: 384, column: 1, scope: !9796)
!9805 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1562, file: !1562, line: 250, type: !9750, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9806)
!9806 = !{!9807, !9808}
!9807 = !DILocalVariable(name: "dev", arg: 1, scope: !9805, file: !1562, line: 250, type: !1467)
!9808 = !DILocalVariable(name: "config", scope: !9805, file: !1562, line: 252, type: !9515)
!9809 = !DILocation(line: 0, scope: !9805)
!9810 = !DILocation(line: 252, column: 48, scope: !9805)
!9811 = !DILocation(line: 254, column: 40, scope: !9805)
!9812 = !DILocation(line: 254, column: 9, scope: !9805)
!9813 = !DILocation(line: 254, column: 2, scope: !9805)
!9814 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1562, file: !1562, line: 409, type: !9815, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9817)
!9815 = !DISubroutineType(types: !9816)
!9816 = !{!1453, !156}
!9817 = !{!9818}
!9818 = !DILocalVariable(name: "fc", arg: 1, scope: !9814, file: !1562, line: 409, type: !156)
!9819 = !DILocation(line: 0, scope: !9814)
!9820 = !DILocation(line: 411, column: 9, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9814, file: !1562, line: 411, column: 6)
!9822 = !DILocation(line: 416, column: 1, scope: !9814)
!9823 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9824, file: !9824, line: 967, type: !9825, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9827)
!9824 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9825 = !DISubroutineType(types: !9826)
!9826 = !{!156, !1508}
!9827 = !{!9828}
!9828 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9823, file: !9824, line: 967, type: !1508)
!9829 = !DILocation(line: 0, scope: !9823)
!9830 = !DILocation(line: 969, column: 21, scope: !9823)
!9831 = !DILocation(line: 969, column: 3, scope: !9823)
!9832 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9824, file: !9824, line: 601, type: !9825, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9833)
!9833 = !{!9834}
!9834 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9832, file: !9824, line: 601, type: !1508)
!9835 = !DILocation(line: 0, scope: !9832)
!9836 = !DILocation(line: 603, column: 21, scope: !9832)
!9837 = !DILocation(line: 603, column: 3, scope: !9832)
!9838 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9824, file: !9824, line: 820, type: !9825, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9839)
!9839 = !{!9840}
!9840 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9838, file: !9824, line: 820, type: !1508)
!9841 = !DILocation(line: 0, scope: !9838)
!9842 = !DILocation(line: 822, column: 21, scope: !9838)
!9843 = !DILocation(line: 822, column: 3, scope: !9838)
!9844 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9824, file: !9824, line: 547, type: !9825, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9845)
!9845 = !{!9846}
!9846 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9844, file: !9824, line: 547, type: !1508)
!9847 = !DILocation(line: 0, scope: !9844)
!9848 = !DILocation(line: 549, column: 21, scope: !9844)
!9849 = !DILocation(line: 549, column: 3, scope: !9844)
!9850 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1562, file: !1562, line: 257, type: !9851, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9853)
!9851 = !DISubroutineType(types: !9852)
!9852 = !{!156, !1433}
!9853 = !{!9854}
!9854 = !DILocalVariable(name: "parity", arg: 1, scope: !9850, file: !1562, line: 257, type: !1433)
!9855 = !DILocation(line: 0, scope: !9850)
!9856 = !DILocation(line: 259, column: 2, scope: !9850)
!9857 = !DILocation(line: 268, column: 1, scope: !9850)
!9858 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1562, file: !1562, line: 283, type: !9859, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9861)
!9859 = !DISubroutineType(types: !9860)
!9860 = !{!156, !1447}
!9861 = !{!9862}
!9862 = !DILocalVariable(name: "sb", arg: 1, scope: !9858, file: !1562, line: 283, type: !1447)
!9863 = !DILocation(line: 0, scope: !9858)
!9864 = !DILocation(line: 285, column: 2, scope: !9858)
!9865 = !DILocation(line: 0, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9858, file: !1562, line: 285, column: 14)
!9867 = !DILocation(line: 302, column: 1, scope: !9858)
!9868 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1562, file: !1562, line: 325, type: !9869, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9871)
!9869 = !DISubroutineType(types: !9870)
!9870 = !{!156, !1440, !1433}
!9871 = !{!9872, !9873}
!9872 = !DILocalVariable(name: "db", arg: 1, scope: !9868, file: !1562, line: 325, type: !1440)
!9873 = !DILocalVariable(name: "p", arg: 2, scope: !9868, file: !1562, line: 326, type: !1433)
!9874 = !DILocation(line: 0, scope: !9868)
!9875 = !DILocation(line: 328, column: 2, scope: !9868)
!9876 = !DILocation(line: 353, column: 1, scope: !9868)
!9877 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1562, file: !1562, line: 393, type: !9878, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9880)
!9878 = !DISubroutineType(types: !9879)
!9879 = !{!156, !1453}
!9880 = !{!9881}
!9881 = !DILocalVariable(name: "fc", arg: 1, scope: !9877, file: !1562, line: 393, type: !1453)
!9882 = !DILocation(line: 0, scope: !9877)
!9883 = !DILocation(line: 395, column: 9, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9877, file: !1562, line: 395, column: 6)
!9885 = !DILocation(line: 400, column: 1, scope: !9877)
!9886 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9824, file: !9824, line: 424, type: !9887, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9889)
!9887 = !DISubroutineType(types: !9888)
!9888 = !{null, !1508}
!9889 = !{!9890}
!9890 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9886, file: !9824, line: 424, type: !1508)
!9891 = !DILocation(line: 0, scope: !9886)
!9892 = !DILocation(line: 426, column: 3, scope: !9886)
!9893 = !DILocation(line: 427, column: 1, scope: !9886)
!9894 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1562, file: !1562, line: 197, type: !9895, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9897)
!9895 = !DISubroutineType(types: !9896)
!9896 = !{null, !1467, !156}
!9897 = !{!9898, !9899, !9900}
!9898 = !DILocalVariable(name: "dev", arg: 1, scope: !9894, file: !1562, line: 197, type: !1467)
!9899 = !DILocalVariable(name: "parity", arg: 2, scope: !9894, file: !1562, line: 198, type: !156)
!9900 = !DILocalVariable(name: "config", scope: !9894, file: !1562, line: 200, type: !9515)
!9901 = !DILocation(line: 0, scope: !9894)
!9902 = !DILocation(line: 200, column: 48, scope: !9894)
!9903 = !DILocation(line: 202, column: 29, scope: !9894)
!9904 = !DILocation(line: 202, column: 2, scope: !9894)
!9905 = !DILocation(line: 203, column: 1, scope: !9894)
!9906 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1562, file: !1562, line: 212, type: !9895, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9907)
!9907 = !{!9908, !9909, !9910}
!9908 = !DILocalVariable(name: "dev", arg: 1, scope: !9906, file: !1562, line: 212, type: !1467)
!9909 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9906, file: !1562, line: 213, type: !156)
!9910 = !DILocalVariable(name: "config", scope: !9906, file: !1562, line: 215, type: !9515)
!9911 = !DILocation(line: 0, scope: !9906)
!9912 = !DILocation(line: 215, column: 48, scope: !9906)
!9913 = !DILocation(line: 217, column: 37, scope: !9906)
!9914 = !DILocation(line: 217, column: 2, scope: !9906)
!9915 = !DILocation(line: 218, column: 1, scope: !9906)
!9916 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1562, file: !1562, line: 227, type: !9895, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9917)
!9917 = !{!9918, !9919, !9920}
!9918 = !DILocalVariable(name: "dev", arg: 1, scope: !9916, file: !1562, line: 227, type: !1467)
!9919 = !DILocalVariable(name: "databits", arg: 2, scope: !9916, file: !1562, line: 228, type: !156)
!9920 = !DILocalVariable(name: "config", scope: !9916, file: !1562, line: 230, type: !9515)
!9921 = !DILocation(line: 0, scope: !9916)
!9922 = !DILocation(line: 230, column: 48, scope: !9916)
!9923 = !DILocation(line: 232, column: 32, scope: !9916)
!9924 = !DILocation(line: 232, column: 2, scope: !9916)
!9925 = !DILocation(line: 233, column: 1, scope: !9916)
!9926 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1562, file: !1562, line: 242, type: !9895, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9927)
!9927 = !{!9928, !9929, !9930}
!9928 = !DILocalVariable(name: "dev", arg: 1, scope: !9926, file: !1562, line: 242, type: !1467)
!9929 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9926, file: !1562, line: 243, type: !156)
!9930 = !DILocalVariable(name: "config", scope: !9926, file: !1562, line: 245, type: !9515)
!9931 = !DILocation(line: 0, scope: !9926)
!9932 = !DILocation(line: 245, column: 48, scope: !9926)
!9933 = !DILocation(line: 247, column: 33, scope: !9926)
!9934 = !DILocation(line: 247, column: 2, scope: !9926)
!9935 = !DILocation(line: 248, column: 1, scope: !9926)
!9936 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1562, file: !1562, line: 107, type: !9895, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9937)
!9937 = !{!9938, !9939, !9940, !9941, !9942}
!9938 = !DILocalVariable(name: "dev", arg: 1, scope: !9936, file: !1562, line: 107, type: !1467)
!9939 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9936, file: !1562, line: 107, type: !156)
!9940 = !DILocalVariable(name: "config", scope: !9936, file: !1562, line: 109, type: !9515)
!9941 = !DILocalVariable(name: "data", scope: !9936, file: !1562, line: 110, type: !9638)
!9942 = !DILocalVariable(name: "clock_rate", scope: !9936, file: !1562, line: 112, type: !156)
!9943 = !DILocation(line: 0, scope: !9936)
!9944 = !DILocation(line: 109, column: 48, scope: !9936)
!9945 = !DILocation(line: 110, column: 38, scope: !9936)
!9946 = !DILocation(line: 112, column: 2, scope: !9936)
!9947 = !DILocation(line: 123, column: 36, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9949, file: !1562, line: 123, column: 7)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !1562, line: 122, column: 9)
!9950 = distinct !DILexicalBlock(scope: !9936, file: !1562, line: 115, column: 6)
!9951 = !DILocation(line: 124, column: 42, scope: !9948)
!9952 = !DILocation(line: 123, column: 7, scope: !9948)
!9953 = !DILocation(line: 125, column: 22, scope: !9948)
!9954 = !DILocation(line: 123, column: 7, scope: !9949)
!9955 = !DILocation(line: 176, column: 36, scope: !9936)
!9956 = !DILocation(line: 176, column: 3, scope: !9936)
!9957 = !DILocation(line: 179, column: 32, scope: !9936)
!9958 = !DILocation(line: 180, column: 10, scope: !9936)
!9959 = !DILocation(line: 179, column: 3, scope: !9936)
!9960 = !DILocation(line: 189, column: 3, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9962, file: !1562, line: 189, column: 3)
!9962 = distinct !DILexicalBlock(scope: !9936, file: !1562, line: 189, column: 3)
!9963 = !DILocation(line: 189, column: 3, scope: !9962)
!9964 = !DILocation(line: 189, column: 3, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9961, file: !1562, line: 189, column: 3)
!9966 = !DILocation(line: 195, column: 1, scope: !9936)
!9967 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9824, file: !9824, line: 410, type: !9887, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9968)
!9968 = !{!9969}
!9969 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9967, file: !9824, line: 410, type: !1508)
!9970 = !DILocation(line: 0, scope: !9967)
!9971 = !DILocation(line: 412, column: 3, scope: !9967)
!9972 = !DILocation(line: 413, column: 1, scope: !9967)
!9973 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !938, file: !938, line: 216, type: !1541, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9974)
!9974 = !{!9975, !9976, !9977, !9978}
!9975 = !DILocalVariable(name: "dev", arg: 1, scope: !9973, file: !938, line: 216, type: !1467)
!9976 = !DILocalVariable(name: "sys", arg: 2, scope: !9973, file: !938, line: 217, type: !1033)
!9977 = !DILocalVariable(name: "rate", arg: 3, scope: !9973, file: !938, line: 218, type: !989)
!9978 = !DILocalVariable(name: "api", scope: !9973, file: !938, line: 220, type: !1519)
!9979 = !DILocation(line: 0, scope: !9973)
!9980 = !DILocation(line: 221, column: 49, scope: !9973)
!9981 = !DILocation(line: 223, column: 11, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9973, file: !938, line: 223, column: 6)
!9983 = !DILocation(line: 223, column: 20, scope: !9982)
!9984 = !DILocation(line: 223, column: 6, scope: !9973)
!9985 = !DILocation(line: 227, column: 9, scope: !9973)
!9986 = !DILocation(line: 227, column: 2, scope: !9973)
!9987 = !DILocation(line: 228, column: 1, scope: !9973)
!9988 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9824, file: !9824, line: 615, type: !9989, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9991)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{null, !1508, !156}
!9991 = !{!9992, !9993}
!9992 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9988, file: !9824, line: 615, type: !1508)
!9993 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9988, file: !9824, line: 615, type: !156)
!9994 = !DILocation(line: 0, scope: !9988)
!9995 = !DILocation(line: 617, column: 3, scope: !9988)
!9996 = !DILocation(line: 618, column: 1, scope: !9988)
!9997 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9824, file: !9824, line: 1020, type: !9998, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10000)
!9998 = !DISubroutineType(types: !9999)
!9999 = !{null, !1508, !156, !156, !156}
!10000 = !{!10001, !10002, !10003, !10004}
!10001 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9997, file: !9824, line: 1020, type: !1508)
!10002 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9997, file: !9824, line: 1020, type: !156)
!10003 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9997, file: !9824, line: 1020, type: !156)
!10004 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9997, file: !9824, line: 1021, type: !156)
!10005 = !DILocation(line: 0, scope: !9997)
!10006 = !DILocation(line: 1029, column: 30, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10008, file: !9824, line: 1028, column: 3)
!10008 = distinct !DILexicalBlock(scope: !9997, file: !9824, line: 1023, column: 7)
!10009 = !DILocation(line: 1029, column: 19, scope: !10007)
!10010 = !DILocation(line: 1029, column: 13, scope: !10007)
!10011 = !DILocation(line: 1029, column: 17, scope: !10007)
!10012 = !DILocation(line: 1031, column: 1, scope: !9997)
!10013 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9824, file: !9824, line: 949, type: !9989, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10014)
!10014 = !{!10015, !10016}
!10015 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10013, file: !9824, line: 949, type: !1508)
!10016 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10013, file: !9824, line: 949, type: !156)
!10017 = !DILocation(line: 0, scope: !10013)
!10018 = !DILocation(line: 951, column: 3, scope: !10013)
!10019 = !DILocation(line: 952, column: 1, scope: !10013)
!10020 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9824, file: !9824, line: 588, type: !9989, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10021)
!10021 = !{!10022, !10023}
!10022 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10020, file: !9824, line: 588, type: !1508)
!10023 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10020, file: !9824, line: 588, type: !156)
!10024 = !DILocation(line: 0, scope: !10020)
!10025 = !DILocation(line: 590, column: 3, scope: !10020)
!10026 = !DILocation(line: 591, column: 1, scope: !10020)
!10027 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9824, file: !9824, line: 805, type: !9989, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10028)
!10028 = !{!10029, !10030}
!10029 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10027, file: !9824, line: 805, type: !1508)
!10030 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10027, file: !9824, line: 805, type: !156)
!10031 = !DILocation(line: 0, scope: !10027)
!10032 = !DILocation(line: 807, column: 3, scope: !10027)
!10033 = !DILocation(line: 808, column: 1, scope: !10027)
!10034 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9824, file: !9824, line: 532, type: !9989, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10035)
!10035 = !{!10036, !10037}
!10036 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10034, file: !9824, line: 532, type: !1508)
!10037 = !DILocalVariable(name: "Parity", arg: 2, scope: !10034, file: !9824, line: 532, type: !156)
!10038 = !DILocation(line: 0, scope: !10034)
!10039 = !DILocation(line: 534, column: 3, scope: !10034)
!10040 = !DILocation(line: 535, column: 1, scope: !10034)
!10041 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9824, file: !9824, line: 1770, type: !9825, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10042)
!10042 = !{!10043}
!10043 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10041, file: !9824, line: 1770, type: !1508)
!10044 = !DILocation(line: 0, scope: !10041)
!10045 = !DILocation(line: 1772, column: 11, scope: !10041)
!10046 = !DILocation(line: 1772, column: 46, scope: !10041)
!10047 = !DILocation(line: 1772, column: 3, scope: !10041)
!10048 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9824, file: !9824, line: 1737, type: !9825, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10049)
!10049 = !{!10050}
!10050 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10048, file: !9824, line: 1737, type: !1508)
!10051 = !DILocation(line: 0, scope: !10048)
!10052 = !DILocation(line: 1739, column: 11, scope: !10048)
!10053 = !DILocation(line: 1739, column: 3, scope: !10048)
!10054 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9824, file: !9824, line: 1748, type: !9825, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10055)
!10055 = !{!10056}
!10056 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10054, file: !9824, line: 1748, type: !1508)
!10057 = !DILocation(line: 0, scope: !10054)
!10058 = !DILocation(line: 1750, column: 11, scope: !10054)
!10059 = !DILocation(line: 1750, column: 45, scope: !10054)
!10060 = !DILocation(line: 1750, column: 3, scope: !10054)
!10061 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9824, file: !9824, line: 1827, type: !9825, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10062)
!10062 = !{!10063}
!10063 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10061, file: !9824, line: 1827, type: !1508)
!10064 = !DILocation(line: 0, scope: !10061)
!10065 = !DILocation(line: 1829, column: 11, scope: !10061)
!10066 = !DILocation(line: 1829, column: 46, scope: !10061)
!10067 = !DILocation(line: 1829, column: 3, scope: !10061)
!10068 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9824, file: !9824, line: 1992, type: !9887, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10069)
!10069 = !{!10070}
!10070 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10068, file: !9824, line: 1992, type: !1508)
!10071 = !DILocation(line: 0, scope: !10068)
!10072 = !DILocation(line: 1994, column: 3, scope: !10068)
!10073 = !DILocation(line: 1995, column: 1, scope: !10068)
!10074 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9824, file: !9824, line: 1934, type: !9887, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10075)
!10075 = !{!10076, !10077}
!10076 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10074, file: !9824, line: 1934, type: !1508)
!10077 = !DILocalVariable(name: "tmpreg", scope: !10074, file: !9824, line: 1936, type: !452)
!10078 = !DILocation(line: 0, scope: !10074)
!10079 = !DILocation(line: 1936, column: 3, scope: !10074)
!10080 = !DILocation(line: 1936, column: 17, scope: !10074)
!10081 = !DILocation(line: 1937, column: 20, scope: !10074)
!10082 = !DILocation(line: 1937, column: 10, scope: !10074)
!10083 = !DILocation(line: 1938, column: 10, scope: !10074)
!10084 = !DILocation(line: 1939, column: 20, scope: !10074)
!10085 = !DILocation(line: 1939, column: 10, scope: !10074)
!10086 = !DILocation(line: 1940, column: 10, scope: !10074)
!10087 = !DILocation(line: 1941, column: 1, scope: !10074)
!10088 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9824, file: !9824, line: 1877, type: !9887, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10089)
!10089 = !{!10090, !10091}
!10090 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10088, file: !9824, line: 1877, type: !1508)
!10091 = !DILocalVariable(name: "tmpreg", scope: !10088, file: !9824, line: 1879, type: !452)
!10092 = !DILocation(line: 0, scope: !10088)
!10093 = !DILocation(line: 1879, column: 3, scope: !10088)
!10094 = !DILocation(line: 1879, column: 17, scope: !10088)
!10095 = !DILocation(line: 1880, column: 20, scope: !10088)
!10096 = !DILocation(line: 1880, column: 10, scope: !10088)
!10097 = !DILocation(line: 1881, column: 10, scope: !10088)
!10098 = !DILocation(line: 1882, column: 20, scope: !10088)
!10099 = !DILocation(line: 1882, column: 10, scope: !10088)
!10100 = !DILocation(line: 1883, column: 10, scope: !10088)
!10101 = !DILocation(line: 1884, column: 1, scope: !10088)
!10102 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9824, file: !9824, line: 1896, type: !9887, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10103)
!10103 = !{!10104, !10105}
!10104 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10102, file: !9824, line: 1896, type: !1508)
!10105 = !DILocalVariable(name: "tmpreg", scope: !10102, file: !9824, line: 1898, type: !452)
!10106 = !DILocation(line: 0, scope: !10102)
!10107 = !DILocation(line: 1898, column: 3, scope: !10102)
!10108 = !DILocation(line: 1898, column: 17, scope: !10102)
!10109 = !DILocation(line: 1899, column: 20, scope: !10102)
!10110 = !DILocation(line: 1899, column: 10, scope: !10102)
!10111 = !DILocation(line: 1900, column: 10, scope: !10102)
!10112 = !DILocation(line: 1901, column: 20, scope: !10102)
!10113 = !DILocation(line: 1901, column: 10, scope: !10102)
!10114 = !DILocation(line: 1902, column: 10, scope: !10102)
!10115 = !DILocation(line: 1903, column: 1, scope: !10102)
!10116 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9824, file: !9824, line: 1915, type: !9887, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10117)
!10117 = !{!10118, !10119}
!10118 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10116, file: !9824, line: 1915, type: !1508)
!10119 = !DILocalVariable(name: "tmpreg", scope: !10116, file: !9824, line: 1917, type: !452)
!10120 = !DILocation(line: 0, scope: !10116)
!10121 = !DILocation(line: 1917, column: 3, scope: !10116)
!10122 = !DILocation(line: 1917, column: 17, scope: !10116)
!10123 = !DILocation(line: 1918, column: 20, scope: !10116)
!10124 = !DILocation(line: 1918, column: 10, scope: !10116)
!10125 = !DILocation(line: 1919, column: 10, scope: !10116)
!10126 = !DILocation(line: 1920, column: 20, scope: !10116)
!10127 = !DILocation(line: 1920, column: 10, scope: !10116)
!10128 = !DILocation(line: 1921, column: 10, scope: !10116)
!10129 = !DILocation(line: 1922, column: 1, scope: !10116)
!10130 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9824, file: !9824, line: 1814, type: !9825, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10131)
!10131 = !{!10132}
!10132 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10130, file: !9824, line: 1814, type: !1508)
!10133 = !DILocation(line: 0, scope: !10130)
!10134 = !DILocation(line: 1816, column: 11, scope: !10130)
!10135 = !DILocation(line: 1816, column: 46, scope: !10130)
!10136 = !DILocation(line: 1816, column: 3, scope: !10130)
!10137 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9824, file: !9824, line: 2426, type: !10138, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10140)
!10138 = !DISubroutineType(types: !10139)
!10139 = !{null, !1508, !143}
!10140 = !{!10141, !10142}
!10141 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10137, file: !9824, line: 2426, type: !1508)
!10142 = !DILocalVariable(name: "Value", arg: 2, scope: !10137, file: !9824, line: 2426, type: !143)
!10143 = !DILocation(line: 0, scope: !10137)
!10144 = !DILocation(line: 2428, column: 16, scope: !10137)
!10145 = !DILocation(line: 2428, column: 11, scope: !10137)
!10146 = !DILocation(line: 2428, column: 14, scope: !10137)
!10147 = !DILocation(line: 2429, column: 1, scope: !10137)
!10148 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9824, file: !9824, line: 1792, type: !9825, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10149)
!10149 = !{!10150}
!10150 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10148, file: !9824, line: 1792, type: !1508)
!10151 = !DILocation(line: 0, scope: !10148)
!10152 = !DILocation(line: 1794, column: 11, scope: !10148)
!10153 = !DILocation(line: 1794, column: 47, scope: !10148)
!10154 = !DILocation(line: 1794, column: 3, scope: !10148)
!10155 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9824, file: !9824, line: 2403, type: !10156, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10158)
!10156 = !DISubroutineType(types: !10157)
!10157 = !{!143, !1508}
!10158 = !{!10159}
!10159 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10155, file: !9824, line: 2403, type: !1508)
!10160 = !DILocation(line: 0, scope: !10155)
!10161 = !DILocation(line: 2405, column: 20, scope: !10155)
!10162 = !DILocation(line: 2405, column: 10, scope: !10155)
!10163 = !DILocation(line: 2405, column: 3, scope: !10155)
!10164 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1562, file: !1562, line: 1583, type: !1488, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10165)
!10165 = !{!10166, !10167, !10168, !10169, !10170, !10171}
!10166 = !DILocalVariable(name: "dev", arg: 1, scope: !10164, file: !1562, line: 1583, type: !1467)
!10167 = !DILocalVariable(name: "config", scope: !10164, file: !1562, line: 1585, type: !9515)
!10168 = !DILocalVariable(name: "data", scope: !10164, file: !1562, line: 1586, type: !9638)
!10169 = !DILocalVariable(name: "ll_parity", scope: !10164, file: !1562, line: 1587, type: !156)
!10170 = !DILocalVariable(name: "ll_datawidth", scope: !10164, file: !1562, line: 1588, type: !156)
!10171 = !DILocalVariable(name: "err", scope: !10164, file: !1562, line: 1589, type: !118)
!10172 = !DILocation(line: 0, scope: !10164)
!10173 = !DILocation(line: 1585, column: 48, scope: !10164)
!10174 = !DILocation(line: 1586, column: 38, scope: !10164)
!10175 = !DILocation(line: 1591, column: 2, scope: !10164)
!10176 = !DILocation(line: 1593, column: 29, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10164, file: !1562, line: 1593, column: 6)
!10178 = !DILocation(line: 1593, column: 7, scope: !10177)
!10179 = !DILocation(line: 1593, column: 6, scope: !10164)
!10180 = !DILocation(line: 1599, column: 31, scope: !10164)
!10181 = !DILocation(line: 1599, column: 71, scope: !10164)
!10182 = !DILocation(line: 1599, column: 8, scope: !10164)
!10183 = !DILocation(line: 1600, column: 10, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10164, file: !1562, line: 1600, column: 6)
!10185 = !DILocation(line: 1600, column: 6, scope: !10164)
!10186 = !DILocation(line: 1616, column: 36, scope: !10164)
!10187 = !DILocation(line: 1616, column: 8, scope: !10164)
!10188 = !DILocation(line: 1617, column: 10, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10164, file: !1562, line: 1617, column: 6)
!10190 = !DILocation(line: 1617, column: 6, scope: !10164)
!10191 = !DILocation(line: 1621, column: 27, scope: !10164)
!10192 = !DILocation(line: 1621, column: 2, scope: !10164)
!10193 = !DILocation(line: 1624, column: 40, scope: !10164)
!10194 = !DILocation(line: 1624, column: 2, scope: !10164)
!10195 = !DILocation(line: 1630, column: 14, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10164, file: !1562, line: 1630, column: 6)
!10197 = !DILocation(line: 1630, column: 6, scope: !10164)
!10198 = !DILocation(line: 1638, column: 2, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10200, file: !1562, line: 1634, column: 34)
!10200 = distinct !DILexicalBlock(scope: !10196, file: !1562, line: 1634, column: 13)
!10201 = !DILocation(line: 0, scope: !10196)
!10202 = !DILocation(line: 1649, column: 35, scope: !10164)
!10203 = !DILocation(line: 1649, column: 2, scope: !10164)
!10204 = !DILocation(line: 1654, column: 14, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10164, file: !1562, line: 1654, column: 6)
!10206 = !DILocation(line: 1654, column: 6, scope: !10164)
!10207 = !DILocation(line: 1655, column: 3, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10205, file: !1562, line: 1654, column: 31)
!10209 = !DILocation(line: 1656, column: 2, scope: !10208)
!10210 = !DILocation(line: 1659, column: 37, scope: !10164)
!10211 = !DILocation(line: 1659, column: 2, scope: !10164)
!10212 = !DILocation(line: 1662, column: 14, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10164, file: !1562, line: 1662, column: 6)
!10214 = !DILocation(line: 1662, column: 6, scope: !10164)
!10215 = !DILocation(line: 1663, column: 37, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10213, file: !1562, line: 1662, column: 27)
!10217 = !DILocation(line: 1663, column: 3, scope: !10216)
!10218 = !DILocation(line: 1664, column: 2, scope: !10216)
!10219 = !DILocation(line: 1684, column: 26, scope: !10164)
!10220 = !DILocation(line: 1684, column: 2, scope: !10164)
!10221 = !DILocation(line: 1722, column: 2, scope: !10164)
!10222 = !DILocation(line: 1724, column: 1, scope: !10164)
!10223 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1562, file: !1562, line: 651, type: !10224, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10226)
!10224 = !DISubroutineType(types: !10225)
!10225 = !{null, !1467}
!10226 = !{!10227, !10228, !10229}
!10227 = !DILocalVariable(name: "dev", arg: 1, scope: !10223, file: !1562, line: 651, type: !1467)
!10228 = !DILocalVariable(name: "data", scope: !10223, file: !1562, line: 653, type: !9638)
!10229 = !DILocalVariable(name: "clk", scope: !10223, file: !1562, line: 654, type: !10230)
!10230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1467)
!10231 = !DILocation(line: 0, scope: !10223)
!10232 = !DILocation(line: 653, column: 38, scope: !10223)
!10233 = !DILocation(line: 656, column: 8, scope: !10223)
!10234 = !DILocation(line: 656, column: 14, scope: !10223)
!10235 = !DILocation(line: 657, column: 1, scope: !10223)
!10236 = distinct !DISubprogram(name: "device_is_ready", scope: !3402, file: !3402, line: 47, type: !10237, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10239)
!10237 = !DISubroutineType(types: !10238)
!10238 = !{!146, !1467}
!10239 = !{!10240}
!10240 = !DILocalVariable(name: "dev", arg: 1, scope: !10236, file: !3402, line: 47, type: !1467)
!10241 = !DILocation(line: 0, scope: !10236)
!10242 = !DILocation(line: 55, column: 2, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10236, file: !3402, line: 55, column: 2)
!10244 = !{i64 2154456915}
!10245 = !DILocation(line: 56, column: 9, scope: !10236)
!10246 = !DILocation(line: 56, column: 2, scope: !10236)
!10247 = distinct !DISubprogram(name: "clock_control_on", scope: !938, file: !938, line: 123, type: !1526, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10248)
!10248 = !{!10249, !10250, !10251}
!10249 = !DILocalVariable(name: "dev", arg: 1, scope: !10247, file: !938, line: 123, type: !1467)
!10250 = !DILocalVariable(name: "sys", arg: 2, scope: !10247, file: !938, line: 124, type: !1033)
!10251 = !DILocalVariable(name: "api", scope: !10247, file: !938, line: 126, type: !1519)
!10252 = !DILocation(line: 0, scope: !10247)
!10253 = !DILocation(line: 127, column: 49, scope: !10247)
!10254 = !DILocation(line: 129, column: 14, scope: !10247)
!10255 = !DILocation(line: 129, column: 9, scope: !10247)
!10256 = !DILocation(line: 129, column: 2, scope: !10247)
!10257 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1605, file: !1605, line: 342, type: !10258, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10260)
!10258 = !DISubroutineType(types: !10259)
!10259 = !{!118, !1655, !143}
!10260 = !{!10261, !10262, !10263, !10264}
!10261 = !DILocalVariable(name: "config", arg: 1, scope: !10257, file: !1605, line: 342, type: !1655)
!10262 = !DILocalVariable(name: "id", arg: 2, scope: !10257, file: !1605, line: 343, type: !143)
!10263 = !DILocalVariable(name: "ret", scope: !10257, file: !1605, line: 345, type: !118)
!10264 = !DILocalVariable(name: "state", scope: !10257, file: !1605, line: 346, type: !1608)
!10265 = !DILocation(line: 0, scope: !10257)
!10266 = !DILocation(line: 346, column: 2, scope: !10257)
!10267 = !DILocation(line: 348, column: 8, scope: !10257)
!10268 = !DILocation(line: 349, column: 10, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10257, file: !1605, line: 349, column: 6)
!10270 = !DILocation(line: 349, column: 6, scope: !10257)
!10271 = !DILocation(line: 353, column: 44, scope: !10257)
!10272 = !DILocation(line: 353, column: 9, scope: !10257)
!10273 = !DILocation(line: 353, column: 2, scope: !10257)
!10274 = !DILocation(line: 354, column: 1, scope: !10257)
!10275 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9824, file: !9824, line: 497, type: !9989, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10276)
!10276 = !{!10277, !10278, !10279}
!10277 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10275, file: !9824, line: 497, type: !1508)
!10278 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10275, file: !9824, line: 497, type: !156)
!10279 = !DILocalVariable(name: "val", scope: !10280, file: !9824, line: 499, type: !156)
!10280 = distinct !DILexicalBlock(scope: !10275, file: !9824, line: 499, column: 3)
!10281 = !DILocation(line: 0, scope: !10275)
!10282 = !DILocation(line: 499, column: 3, scope: !10280)
!10283 = !DILocalVariable(name: "addr", arg: 1, scope: !10284, file: !6365, line: 476, type: !1558)
!10284 = distinct !DISubprogram(name: "__LDREXW", scope: !6365, file: !6365, line: 476, type: !10285, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10287)
!10285 = !DISubroutineType(types: !10286)
!10286 = !{!156, !1558}
!10287 = !{!10283, !10288}
!10288 = !DILocalVariable(name: "result", scope: !10284, file: !6365, line: 478, type: !156)
!10289 = !DILocation(line: 0, scope: !10284, inlinedAt: !10290)
!10290 = distinct !DILocation(line: 499, column: 3, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10280, file: !9824, line: 499, column: 3)
!10292 = !DILocation(line: 480, column: 4, scope: !10284, inlinedAt: !10290)
!10293 = !{i64 2947452}
!10294 = !DILocation(line: 499, column: 3, scope: !10291)
!10295 = !DILocation(line: 0, scope: !10280)
!10296 = !DILocalVariable(name: "value", arg: 1, scope: !10297, file: !6365, line: 527, type: !156)
!10297 = distinct !DISubprogram(name: "__STREXW", scope: !6365, file: !6365, line: 527, type: !10298, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10300)
!10298 = !DISubroutineType(types: !10299)
!10299 = !{!156, !156, !1558}
!10300 = !{!10296, !10301, !10302}
!10301 = !DILocalVariable(name: "addr", arg: 2, scope: !10297, file: !6365, line: 527, type: !1558)
!10302 = !DILocalVariable(name: "result", scope: !10297, file: !6365, line: 529, type: !156)
!10303 = !DILocation(line: 0, scope: !10297, inlinedAt: !10304)
!10304 = distinct !DILocation(line: 499, column: 3, scope: !10280)
!10305 = !DILocation(line: 531, column: 4, scope: !10297, inlinedAt: !10304)
!10306 = !{i64 2948888}
!10307 = distinct !{!10307, !10282, !10282}
!10308 = !DILocation(line: 500, column: 1, scope: !10275)
!10309 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9824, file: !9824, line: 850, type: !9998, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10310)
!10310 = !{!10311, !10312, !10313, !10314}
!10311 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10309, file: !9824, line: 850, type: !1508)
!10312 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10309, file: !9824, line: 850, type: !156)
!10313 = !DILocalVariable(name: "Parity", arg: 3, scope: !10309, file: !9824, line: 850, type: !156)
!10314 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10309, file: !9824, line: 851, type: !156)
!10315 = !DILocation(line: 0, scope: !10309)
!10316 = !DILocation(line: 853, column: 3, scope: !10309)
!10317 = !DILocation(line: 854, column: 3, scope: !10309)
!10318 = !DILocation(line: 855, column: 1, scope: !10309)
!10319 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9824, file: !9824, line: 1337, type: !9887, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10320)
!10320 = !{!10321}
!10321 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10319, file: !9824, line: 1337, type: !1508)
!10322 = !DILocation(line: 0, scope: !10319)
!10323 = !DILocation(line: 1339, column: 3, scope: !10319)
!10324 = !DILocation(line: 1340, column: 1, scope: !10319)
!10325 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1605, file: !1605, line: 316, type: !10326, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10328)
!10326 = !DISubroutineType(types: !10327)
!10327 = !{!118, !1655, !1608}
!10328 = !{!10329, !10330, !10331}
!10329 = !DILocalVariable(name: "config", arg: 1, scope: !10325, file: !1605, line: 317, type: !1655)
!10330 = !DILocalVariable(name: "state", arg: 2, scope: !10325, file: !1605, line: 318, type: !1608)
!10331 = !DILocalVariable(name: "reg", scope: !10325, file: !1605, line: 320, type: !22)
!10332 = !DILocation(line: 0, scope: !10325)
!10333 = !DILocation(line: 329, column: 39, scope: !10325)
!10334 = !DILocation(line: 329, column: 52, scope: !10325)
!10335 = !DILocation(line: 329, column: 9, scope: !10325)
!10336 = !DILocation(line: 329, column: 2, scope: !10325)
!10337 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !10237, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !10338)
!10338 = !{!10339}
!10339 = !DILocalVariable(name: "dev", arg: 1, scope: !10337, file: !130, line: 730, type: !1467)
!10340 = !DILocation(line: 0, scope: !10337)
!10341 = !DILocation(line: 732, column: 9, scope: !10337)
!10342 = !DILocation(line: 732, column: 2, scope: !10337)
!10343 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1758, file: !1758, line: 270, type: !1764, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10344)
!10344 = !{!10345}
!10345 = !DILocalVariable(name: "dev", arg: 1, scope: !10343, file: !1758, line: 270, type: !1766)
!10346 = !DILocation(line: 0, scope: !10343)
!10347 = !DILocation(line: 274, column: 2, scope: !10343)
!10348 = !DILocation(line: 275, column: 12, scope: !10343)
!10349 = !DILocation(line: 276, column: 15, scope: !10343)
!10350 = !DILocation(line: 277, column: 16, scope: !10343)
!10351 = !DILocation(line: 278, column: 15, scope: !10343)
!10352 = !DILocation(line: 279, column: 16, scope: !10343)
!10353 = !DILocation(line: 282, column: 2, scope: !10343)
!10354 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6405, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10355)
!10355 = !{!10356, !10357}
!10356 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10354, file: !656, line: 1814, type: !890)
!10357 = !DILocalVariable(name: "priority", arg: 2, scope: !10354, file: !656, line: 1814, type: !156)
!10358 = !DILocation(line: 0, scope: !10354)
!10359 = !DILocation(line: 1822, column: 46, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !656, line: 1821, column: 3)
!10361 = distinct !DILexicalBlock(scope: !10354, file: !656, line: 1816, column: 7)
!10362 = !DILocation(line: 1824, column: 1, scope: !10354)
!10363 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1758, file: !1758, line: 118, type: !6302, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10364)
!10364 = !{!10365, !10366}
!10365 = !DILocalVariable(name: "arg", arg: 1, scope: !10363, file: !1758, line: 118, type: !117)
!10366 = !DILocalVariable(name: "dticks", scope: !10363, file: !1758, line: 121, type: !156)
!10367 = !DILocation(line: 0, scope: !10363)
!10368 = !DILocation(line: 124, column: 2, scope: !10363)
!10369 = !DILocation(line: 129, column: 17, scope: !10363)
!10370 = !DILocation(line: 129, column: 14, scope: !10363)
!10371 = !DILocation(line: 130, column: 15, scope: !10363)
!10372 = !DILocation(line: 145, column: 27, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !1758, line: 132, column: 16)
!10374 = distinct !DILexicalBlock(scope: !10363, file: !1758, line: 132, column: 6)
!10375 = !DILocation(line: 145, column: 25, scope: !10373)
!10376 = !DILocation(line: 145, column: 45, scope: !10373)
!10377 = !DILocation(line: 146, column: 30, scope: !10373)
!10378 = !DILocation(line: 146, column: 20, scope: !10373)
!10379 = !DILocation(line: 147, column: 3, scope: !10373)
!10380 = !DILocation(line: 151, column: 2, scope: !10363)
!10381 = !DILocation(line: 152, column: 1, scope: !10363)
!10382 = distinct !DISubprogram(name: "elapsed", scope: !1758, file: !1758, line: 85, type: !6452, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10383)
!10383 = !{!10384, !10385, !10386}
!10384 = !DILocalVariable(name: "val1", scope: !10382, file: !1758, line: 87, type: !156)
!10385 = !DILocalVariable(name: "ctrl", scope: !10382, file: !1758, line: 88, type: !156)
!10386 = !DILocalVariable(name: "val2", scope: !10382, file: !1758, line: 89, type: !156)
!10387 = !DILocation(line: 87, column: 27, scope: !10382)
!10388 = !DILocation(line: 0, scope: !10382)
!10389 = !DILocation(line: 88, column: 27, scope: !10382)
!10390 = !DILocation(line: 89, column: 27, scope: !10382)
!10391 = !DILocation(line: 105, column: 12, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10382, file: !1758, line: 105, column: 6)
!10393 = !DILocation(line: 106, column: 6, scope: !10392)
!10394 = !DILocation(line: 107, column: 16, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10392, file: !1758, line: 106, column: 24)
!10396 = !DILocation(line: 111, column: 18, scope: !10395)
!10397 = !DILocation(line: 112, column: 2, scope: !10395)
!10398 = !DILocation(line: 114, column: 20, scope: !10382)
!10399 = !DILocation(line: 114, column: 30, scope: !10382)
!10400 = !DILocation(line: 114, column: 28, scope: !10382)
!10401 = !DILocation(line: 114, column: 2, scope: !10382)
!10402 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1758, file: !1758, line: 154, type: !10403, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10405)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{null, !362, !146}
!10405 = !{!10406, !10407, !10408, !10409, !10410, !10411, !10412, !10417, !10418}
!10406 = !DILocalVariable(name: "ticks", arg: 1, scope: !10402, file: !1758, line: 154, type: !362)
!10407 = !DILocalVariable(name: "idle", arg: 2, scope: !10402, file: !1758, line: 154, type: !146)
!10408 = !DILocalVariable(name: "delay", scope: !10402, file: !1758, line: 169, type: !156)
!10409 = !DILocalVariable(name: "val1", scope: !10402, file: !1758, line: 170, type: !156)
!10410 = !DILocalVariable(name: "val2", scope: !10402, file: !1758, line: 170, type: !156)
!10411 = !DILocalVariable(name: "last_load_", scope: !10402, file: !1758, line: 171, type: !156)
!10412 = !DILocalVariable(name: "key", scope: !10402, file: !1758, line: 176, type: !10413)
!10413 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !10414)
!10414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !10415)
!10415 = !{!10416}
!10416 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10414, file: !334, line: 33, baseType: !118, size: 32)
!10417 = !DILocalVariable(name: "pending", scope: !10402, file: !1758, line: 178, type: !156)
!10418 = !DILocalVariable(name: "unannounced", scope: !10402, file: !1758, line: 185, type: !156)
!10419 = !DILocation(line: 0, scope: !10402)
!10420 = !DILocation(line: 162, column: 49, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10402, file: !1758, line: 162, column: 6)
!10422 = !DILocation(line: 163, column: 17, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10421, file: !1758, line: 162, column: 78)
!10424 = !DILocation(line: 164, column: 13, scope: !10423)
!10425 = !DILocation(line: 165, column: 3, scope: !10423)
!10426 = !DILocation(line: 171, column: 24, scope: !10402)
!10427 = !DILocation(line: 173, column: 10, scope: !10402)
!10428 = !DILocation(line: 174, column: 10, scope: !10402)
!10429 = !DILocalVariable(name: "l", arg: 1, scope: !10430, file: !334, line: 136, type: !10433)
!10430 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !10431, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10434)
!10431 = !DISubroutineType(types: !10432)
!10432 = !{!10413, !10433}
!10433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!10434 = !{!10429, !10435}
!10435 = !DILocalVariable(name: "k", scope: !10430, file: !334, line: 139, type: !10413)
!10436 = !DILocation(line: 0, scope: !10430, inlinedAt: !10437)
!10437 = distinct !DILocation(line: 176, column: 25, scope: !10402)
!10438 = !DILocation(line: 55, column: 2, scope: !10439, inlinedAt: !10443)
!10439 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6191, file: !6191, line: 42, type: !6192, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10440)
!10440 = !{!10441, !10442}
!10441 = !DILocalVariable(name: "key", scope: !10439, file: !6191, line: 44, type: !32)
!10442 = !DILocalVariable(name: "tmp", scope: !10439, file: !6191, line: 53, type: !32)
!10443 = distinct !DILocation(line: 145, column: 10, scope: !10430, inlinedAt: !10437)
!10444 = !{i64 2030095}
!10445 = !DILocation(line: 0, scope: !10439, inlinedAt: !10443)
!10446 = !DILocation(line: 148, column: 2, scope: !10447, inlinedAt: !10437)
!10447 = distinct !DILexicalBlock(scope: !10448, file: !334, line: 148, column: 2)
!10448 = distinct !DILexicalBlock(scope: !10430, file: !334, line: 148, column: 2)
!10449 = !DILocation(line: 148, column: 2, scope: !10448, inlinedAt: !10437)
!10450 = !DILocation(line: 148, column: 2, scope: !10451, inlinedAt: !10437)
!10451 = distinct !DILexicalBlock(scope: !10447, file: !334, line: 148, column: 2)
!10452 = !DILocation(line: 160, column: 2, scope: !10430, inlinedAt: !10437)
!10453 = !DILocation(line: 178, column: 21, scope: !10402)
!10454 = !DILocation(line: 180, column: 18, scope: !10402)
!10455 = !DILocation(line: 182, column: 14, scope: !10402)
!10456 = !DILocation(line: 183, column: 15, scope: !10402)
!10457 = !DILocation(line: 185, column: 39, scope: !10402)
!10458 = !DILocation(line: 185, column: 37, scope: !10402)
!10459 = !DILocation(line: 187, column: 27, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10402, file: !1758, line: 187, column: 6)
!10461 = !DILocation(line: 187, column: 6, scope: !10402)
!10462 = !DILocation(line: 202, column: 27, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10460, file: !1758, line: 195, column: 9)
!10464 = !DILocation(line: 202, column: 48, scope: !10463)
!10465 = !DILocation(line: 203, column: 9, scope: !10463)
!10466 = !DILocation(line: 204, column: 11, scope: !10463)
!10467 = !DILocation(line: 205, column: 13, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10463, file: !1758, line: 205, column: 7)
!10469 = !DILocation(line: 205, column: 7, scope: !10463)
!10470 = !DILocation(line: 0, scope: !10460)
!10471 = !DILocation(line: 212, column: 18, scope: !10402)
!10472 = !DILocation(line: 214, column: 28, scope: !10402)
!10473 = !DILocation(line: 214, column: 16, scope: !10402)
!10474 = !DILocation(line: 215, column: 15, scope: !10402)
!10475 = !DILocation(line: 227, column: 11, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10402, file: !1758, line: 227, column: 6)
!10477 = !DILocation(line: 227, column: 6, scope: !10402)
!10478 = !DILocation(line: 228, column: 15, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10476, file: !1758, line: 227, column: 19)
!10480 = !DILocation(line: 228, column: 38, scope: !10479)
!10481 = !DILocation(line: 228, column: 24, scope: !10479)
!10482 = !DILocation(line: 229, column: 2, scope: !10479)
!10483 = !DILocation(line: 230, column: 24, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10476, file: !1758, line: 229, column: 9)
!10485 = !DILocation(line: 230, column: 15, scope: !10484)
!10486 = !DILocation(line: 0, scope: !10476)
!10487 = !DILocalVariable(name: "key", arg: 2, scope: !10488, file: !334, line: 190, type: !10413)
!10488 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !10489, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10491)
!10489 = !DISubroutineType(types: !10490)
!10490 = !{null, !10433, !10413}
!10491 = !{!10492, !10487}
!10492 = !DILocalVariable(name: "l", arg: 1, scope: !10488, file: !334, line: 189, type: !10433)
!10493 = !DILocation(line: 0, scope: !10488, inlinedAt: !10494)
!10494 = distinct !DILocation(line: 232, column: 2, scope: !10402)
!10495 = !DILocation(line: 194, column: 2, scope: !10496, inlinedAt: !10494)
!10496 = distinct !DILexicalBlock(scope: !10497, file: !334, line: 194, column: 2)
!10497 = distinct !DILexicalBlock(scope: !10488, file: !334, line: 194, column: 2)
!10498 = !DILocation(line: 194, column: 2, scope: !10497, inlinedAt: !10494)
!10499 = !DILocation(line: 194, column: 2, scope: !10500, inlinedAt: !10494)
!10500 = distinct !DILexicalBlock(scope: !10496, file: !334, line: 194, column: 2)
!10501 = !DILocalVariable(name: "key", arg: 1, scope: !10502, file: !6191, line: 84, type: !32)
!10502 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6191, file: !6191, line: 84, type: !6202, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10503)
!10503 = !{!10501}
!10504 = !DILocation(line: 0, scope: !10502, inlinedAt: !10505)
!10505 = distinct !DILocation(line: 215, column: 2, scope: !10488, inlinedAt: !10494)
!10506 = !DILocation(line: 95, column: 2, scope: !10502, inlinedAt: !10505)
!10507 = !{i64 2030912}
!10508 = !DILocation(line: 234, column: 1, scope: !10402)
!10509 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1758, file: !1758, line: 236, type: !6452, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10510)
!10510 = !{!10511, !10512}
!10511 = !DILocalVariable(name: "key", scope: !10509, file: !1758, line: 242, type: !10413)
!10512 = !DILocalVariable(name: "cyc", scope: !10509, file: !1758, line: 243, type: !156)
!10513 = !DILocation(line: 0, scope: !10430, inlinedAt: !10514)
!10514 = distinct !DILocation(line: 242, column: 25, scope: !10509)
!10515 = !DILocation(line: 55, column: 2, scope: !10439, inlinedAt: !10516)
!10516 = distinct !DILocation(line: 145, column: 10, scope: !10430, inlinedAt: !10514)
!10517 = !DILocation(line: 0, scope: !10439, inlinedAt: !10516)
!10518 = !DILocation(line: 148, column: 2, scope: !10447, inlinedAt: !10514)
!10519 = !DILocation(line: 148, column: 2, scope: !10448, inlinedAt: !10514)
!10520 = !DILocation(line: 148, column: 2, scope: !10451, inlinedAt: !10514)
!10521 = !DILocation(line: 160, column: 2, scope: !10430, inlinedAt: !10514)
!10522 = !DILocation(line: 0, scope: !10509)
!10523 = !DILocation(line: 243, column: 17, scope: !10509)
!10524 = !DILocation(line: 243, column: 29, scope: !10509)
!10525 = !DILocation(line: 243, column: 43, scope: !10509)
!10526 = !DILocation(line: 0, scope: !10488, inlinedAt: !10527)
!10527 = distinct !DILocation(line: 245, column: 2, scope: !10509)
!10528 = !DILocation(line: 194, column: 2, scope: !10496, inlinedAt: !10527)
!10529 = !DILocation(line: 194, column: 2, scope: !10497, inlinedAt: !10527)
!10530 = !DILocation(line: 194, column: 2, scope: !10500, inlinedAt: !10527)
!10531 = !DILocation(line: 243, column: 27, scope: !10509)
!10532 = !DILocation(line: 243, column: 41, scope: !10509)
!10533 = !DILocation(line: 0, scope: !10502, inlinedAt: !10534)
!10534 = distinct !DILocation(line: 215, column: 2, scope: !10488, inlinedAt: !10527)
!10535 = !DILocation(line: 95, column: 2, scope: !10502, inlinedAt: !10534)
!10536 = !DILocation(line: 246, column: 13, scope: !10509)
!10537 = !DILocation(line: 246, column: 2, scope: !10509)
!10538 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1758, file: !1758, line: 249, type: !6452, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10539)
!10539 = !{!10540, !10541}
!10540 = !DILocalVariable(name: "key", scope: !10538, file: !1758, line: 251, type: !10413)
!10541 = !DILocalVariable(name: "ret", scope: !10538, file: !1758, line: 252, type: !156)
!10542 = !DILocation(line: 0, scope: !10430, inlinedAt: !10543)
!10543 = distinct !DILocation(line: 251, column: 25, scope: !10538)
!10544 = !DILocation(line: 55, column: 2, scope: !10439, inlinedAt: !10545)
!10545 = distinct !DILocation(line: 145, column: 10, scope: !10430, inlinedAt: !10543)
!10546 = !DILocation(line: 0, scope: !10439, inlinedAt: !10545)
!10547 = !DILocation(line: 148, column: 2, scope: !10447, inlinedAt: !10543)
!10548 = !DILocation(line: 148, column: 2, scope: !10448, inlinedAt: !10543)
!10549 = !DILocation(line: 148, column: 2, scope: !10451, inlinedAt: !10543)
!10550 = !DILocation(line: 160, column: 2, scope: !10430, inlinedAt: !10543)
!10551 = !DILocation(line: 0, scope: !10538)
!10552 = !DILocation(line: 252, column: 17, scope: !10538)
!10553 = !DILocation(line: 252, column: 29, scope: !10538)
!10554 = !DILocation(line: 0, scope: !10488, inlinedAt: !10555)
!10555 = distinct !DILocation(line: 254, column: 2, scope: !10538)
!10556 = !DILocation(line: 194, column: 2, scope: !10496, inlinedAt: !10555)
!10557 = !DILocation(line: 194, column: 2, scope: !10497, inlinedAt: !10555)
!10558 = !DILocation(line: 194, column: 2, scope: !10500, inlinedAt: !10555)
!10559 = !DILocation(line: 252, column: 27, scope: !10538)
!10560 = !DILocation(line: 0, scope: !10502, inlinedAt: !10561)
!10561 = distinct !DILocation(line: 215, column: 2, scope: !10488, inlinedAt: !10555)
!10562 = !DILocation(line: 95, column: 2, scope: !10502, inlinedAt: !10561)
!10563 = !DILocation(line: 255, column: 2, scope: !10538)
!10564 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1758, file: !1758, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !2149)
!10565 = !DILocation(line: 260, column: 6, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10564, file: !1758, line: 260, column: 6)
!10567 = !DILocation(line: 260, column: 16, scope: !10566)
!10568 = !DILocation(line: 260, column: 6, scope: !10564)
!10569 = !DILocation(line: 261, column: 17, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10566, file: !1758, line: 260, column: 34)
!10571 = !DILocation(line: 262, column: 2, scope: !10570)
!10572 = !DILocation(line: 263, column: 1, scope: !10564)
!10573 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1758, file: !1758, line: 265, type: !365, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !2149)
!10574 = !DILocation(line: 267, column: 16, scope: !10573)
!10575 = !DILocation(line: 268, column: 1, scope: !10573)
!10576 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10577, file: !10577, line: 9, type: !10578, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !10601)
!10577 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10578 = !DISubroutineType(types: !10579)
!10579 = !{!118, !10580, !143, !10600}
!10580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10581, size: 32)
!10581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10582)
!10582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1605, line: 60, size: 64, elements: !10583)
!10583 = !{!10584, !10599}
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10582, file: !1605, line: 69, baseType: !10585, size: 32)
!10585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10586, size: 32)
!10586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10587)
!10587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1605, line: 50, size: 64, elements: !10588)
!10588 = !{!10589, !10597, !10598}
!10589 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10587, file: !1605, line: 52, baseType: !10590, size: 32)
!10590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10591, size: 32)
!10591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10592)
!10592 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1616, line: 37, baseType: !10593)
!10593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1616, line: 32, size: 64, elements: !10594)
!10594 = !{!10595, !10596}
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10593, file: !1616, line: 34, baseType: !156, size: 32)
!10596 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10593, file: !1616, line: 36, baseType: !156, size: 32, offset: 32)
!10597 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10587, file: !1605, line: 54, baseType: !143, size: 8, offset: 32)
!10598 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10587, file: !1605, line: 56, baseType: !143, size: 8, offset: 40)
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10582, file: !1605, line: 71, baseType: !143, size: 8, offset: 32)
!10600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10585, size: 32)
!10601 = !{!10602, !10603, !10604}
!10602 = !DILocalVariable(name: "config", arg: 1, scope: !10576, file: !10577, line: 9, type: !10580)
!10603 = !DILocalVariable(name: "id", arg: 2, scope: !10576, file: !10577, line: 9, type: !143)
!10604 = !DILocalVariable(name: "state", arg: 3, scope: !10576, file: !10577, line: 10, type: !10600)
!10605 = !DILocation(line: 0, scope: !10576)
!10606 = !DILocation(line: 12, column: 20, scope: !10576)
!10607 = !DILocation(line: 13, column: 27, scope: !10576)
!10608 = !DILocation(line: 13, column: 42, scope: !10576)
!10609 = !DILocation(line: 13, column: 19, scope: !10576)
!10610 = !DILocation(line: 13, column: 16, scope: !10576)
!10611 = !DILocation(line: 13, column: 2, scope: !10576)
!10612 = distinct !{!10612, !10611, !10613}
!10613 = !DILocation(line: 19, column: 2, scope: !10576)
!10614 = !DILocation(line: 14, column: 23, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10616, file: !10577, line: 14, column: 7)
!10616 = distinct !DILexicalBlock(scope: !10576, file: !10577, line: 13, column: 54)
!10617 = !DILocation(line: 14, column: 10, scope: !10615)
!10618 = !DILocation(line: 18, column: 11, scope: !10616)
!10619 = !DILocation(line: 14, column: 7, scope: !10616)
!10620 = !DILocation(line: 22, column: 1, scope: !10576)
!10621 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1877, file: !1877, line: 193, type: !10622, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !10631)
!10622 = !DISubroutineType(types: !10623)
!10623 = !{!118, !10624, !143, !22}
!10624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10625, size: 32)
!10625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10626)
!10626 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1616, line: 37, baseType: !10627)
!10627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1616, line: 32, size: 64, elements: !10628)
!10628 = !{!10629, !10630}
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10627, file: !1616, line: 34, baseType: !156, size: 32)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10627, file: !1616, line: 36, baseType: !156, size: 32, offset: 32)
!10631 = !{!10632, !10633, !10634, !10635, !10636, !10637, !10638, !10639, !10641}
!10632 = !DILocalVariable(name: "pins", arg: 1, scope: !10621, file: !1877, line: 193, type: !10624)
!10633 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10621, file: !1877, line: 193, type: !143)
!10634 = !DILocalVariable(name: "reg", arg: 3, scope: !10621, file: !1877, line: 194, type: !22)
!10635 = !DILocalVariable(name: "pin", scope: !10621, file: !1877, line: 196, type: !156)
!10636 = !DILocalVariable(name: "mux", scope: !10621, file: !1877, line: 196, type: !156)
!10637 = !DILocalVariable(name: "pin_cgf", scope: !10621, file: !1877, line: 197, type: !156)
!10638 = !DILocalVariable(name: "ret", scope: !10621, file: !1877, line: 198, type: !118)
!10639 = !DILocalVariable(name: "i", scope: !10640, file: !1877, line: 209, type: !143)
!10640 = distinct !DILexicalBlock(scope: !10621, file: !1877, line: 209, column: 2)
!10641 = !DILocalVariable(name: "gpio_out", scope: !10642, file: !1877, line: 239, type: !156)
!10642 = distinct !DILexicalBlock(scope: !10643, file: !1877, line: 238, column: 55)
!10643 = distinct !DILexicalBlock(scope: !10644, file: !1877, line: 238, column: 14)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !1877, line: 236, column: 14)
!10645 = distinct !DILexicalBlock(scope: !10646, file: !1877, line: 234, column: 7)
!10646 = distinct !DILexicalBlock(scope: !10647, file: !1877, line: 209, column: 41)
!10647 = distinct !DILexicalBlock(scope: !10640, file: !1877, line: 209, column: 2)
!10648 = !DILocation(line: 0, scope: !10621)
!10649 = !DILocation(line: 0, scope: !10640)
!10650 = !DILocation(line: 209, column: 25, scope: !10647)
!10651 = !DILocation(line: 209, column: 2, scope: !10640)
!10652 = distinct !{!10652, !10651, !10653}
!10653 = !DILocation(line: 259, column: 2, scope: !10640)
!10654 = !DILocation(line: 210, column: 17, scope: !10646)
!10655 = !DILocation(line: 234, column: 7, scope: !10645)
!10656 = !DILocation(line: 234, column: 33, scope: !10645)
!10657 = !DILocation(line: 234, column: 7, scope: !10646)
!10658 = !DILocation(line: 235, column: 22, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10645, file: !1877, line: 234, column: 49)
!10660 = !DILocation(line: 235, column: 29, scope: !10659)
!10661 = !DILocation(line: 236, column: 3, scope: !10659)
!10662 = !DILocation(line: 236, column: 14, scope: !10645)
!10663 = !DILocation(line: 239, column: 32, scope: !10642)
!10664 = !DILocation(line: 0, scope: !10642)
!10665 = !DILocation(line: 241, column: 8, scope: !10642)
!10666 = !DILocation(line: 246, column: 3, scope: !10642)
!10667 = !DILocation(line: 252, column: 9, scope: !10646)
!10668 = !DILocation(line: 255, column: 9, scope: !10646)
!10669 = !DILocation(line: 256, column: 11, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10646, file: !1877, line: 256, column: 7)
!10671 = !DILocation(line: 209, column: 37, scope: !10647)
!10672 = !DILocation(line: 256, column: 7, scope: !10646)
!10673 = !DILocation(line: 262, column: 1, scope: !10621)
!10674 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1877, file: !1877, line: 176, type: !10675, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !10677)
!10675 = !DISubroutineType(types: !10676)
!10676 = !{!118, !156, !156, !156}
!10677 = !{!10678, !10679, !10680, !10681}
!10678 = !DILocalVariable(name: "pin", arg: 1, scope: !10674, file: !1877, line: 176, type: !156)
!10679 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10674, file: !1877, line: 176, type: !156)
!10680 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10674, file: !1877, line: 176, type: !156)
!10681 = !DILocalVariable(name: "port_device", scope: !10674, file: !1877, line: 178, type: !1807)
!10682 = !DILocation(line: 0, scope: !10674)
!10683 = !DILocation(line: 180, column: 22, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10674, file: !1877, line: 180, column: 6)
!10685 = !DILocation(line: 180, column: 6, scope: !10674)
!10686 = !DILocation(line: 180, column: 6, scope: !10684)
!10687 = !DILocation(line: 184, column: 16, scope: !10674)
!10688 = !DILocation(line: 186, column: 19, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10674, file: !1877, line: 186, column: 6)
!10690 = !DILocation(line: 186, column: 28, scope: !10689)
!10691 = !DILocation(line: 186, column: 33, scope: !10689)
!10692 = !DILocation(line: 186, column: 6, scope: !10674)
!10693 = !DILocation(line: 190, column: 43, scope: !10674)
!10694 = !DILocation(line: 190, column: 9, scope: !10674)
!10695 = !DILocation(line: 190, column: 2, scope: !10674)
!10696 = !DILocation(line: 191, column: 1, scope: !10674)
!10697 = distinct !DISubprogram(name: "device_is_ready", scope: !3402, file: !3402, line: 47, type: !10698, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !10700)
!10698 = !DISubroutineType(types: !10699)
!10699 = !{!146, !1807}
!10700 = !{!10701}
!10701 = !DILocalVariable(name: "dev", arg: 1, scope: !10697, file: !3402, line: 47, type: !1807)
!10702 = !DILocation(line: 0, scope: !10697)
!10703 = !DILocation(line: 55, column: 2, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10697, file: !3402, line: 55, column: 2)
!10705 = !{i64 2149264104}
!10706 = !DILocation(line: 56, column: 9, scope: !10697)
!10707 = !DILocation(line: 56, column: 2, scope: !10697)
!10708 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !10698, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !10709)
!10709 = !{!10710}
!10710 = !DILocalVariable(name: "dev", arg: 1, scope: !10708, file: !130, line: 730, type: !1807)
!10711 = !DILocation(line: 0, scope: !10708)
!10712 = !DILocation(line: 732, column: 9, scope: !10708)
!10713 = !DILocation(line: 732, column: 2, scope: !10708)
!10714 = distinct !DISubprogram(name: "SystemInit", scope: !1927, file: !1927, line: 167, type: !365, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !2149)
!10715 = !DILocation(line: 182, column: 1, scope: !10714)
!10716 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1927, file: !1927, line: 220, type: !365, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10717)
!10717 = !{!10718, !10719, !10720, !10721, !10722}
!10718 = !DILocalVariable(name: "tmp", scope: !10716, file: !1927, line: 222, type: !156)
!10719 = !DILocalVariable(name: "pllvco", scope: !10716, file: !1927, line: 222, type: !156)
!10720 = !DILocalVariable(name: "pllp", scope: !10716, file: !1927, line: 222, type: !156)
!10721 = !DILocalVariable(name: "pllsource", scope: !10716, file: !1927, line: 222, type: !156)
!10722 = !DILocalVariable(name: "pllm", scope: !10716, file: !1927, line: 222, type: !156)
!10723 = !DILocation(line: 0, scope: !10716)
!10724 = !DILocation(line: 225, column: 14, scope: !10716)
!10725 = !DILocation(line: 225, column: 19, scope: !10716)
!10726 = !DILocation(line: 227, column: 3, scope: !10716)
!10727 = !DILocation(line: 240, column: 25, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10716, file: !1927, line: 228, column: 3)
!10729 = !DILocation(line: 241, column: 19, scope: !10728)
!10730 = !DILocation(line: 241, column: 27, scope: !10728)
!10731 = !DILocation(line: 0, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10728, file: !1927, line: 243, column: 11)
!10733 = !DILocation(line: 254, column: 22, scope: !10728)
!10734 = !DILocation(line: 254, column: 62, scope: !10728)
!10735 = !DILocation(line: 255, column: 31, scope: !10728)
!10736 = !DILocation(line: 256, column: 7, scope: !10728)
!10737 = !DILocation(line: 0, scope: !10728)
!10738 = !DILocation(line: 263, column: 30, scope: !10716)
!10739 = !DILocation(line: 263, column: 52, scope: !10716)
!10740 = !DILocation(line: 263, column: 9, scope: !10716)
!10741 = !DILocation(line: 265, column: 19, scope: !10716)
!10742 = !DILocation(line: 266, column: 1, scope: !10716)
!10743 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10744, file: !10744, line: 200, type: !10745, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2149)
!10744 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10745 = !DISubroutineType(types: !10746)
!10746 = !{!10747}
!10747 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2991, line: 44, baseType: !2990)
!10748 = !DILocation(line: 202, column: 3, scope: !10743)
!10749 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10744, file: !10744, line: 219, type: !10750, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !10774)
!10750 = !DISubroutineType(types: !10751)
!10751 = !{!10747, !10752}
!10752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10753, size: 32)
!10753 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10754, line: 70, baseType: !10755)
!10754 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10754, line: 49, size: 384, elements: !10756)
!10756 = !{!10757, !10758, !10759, !10760, !10761, !10762, !10763}
!10757 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10755, file: !10754, line: 51, baseType: !156, size: 32)
!10758 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10755, file: !10754, line: 54, baseType: !156, size: 32, offset: 32)
!10759 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10755, file: !10754, line: 57, baseType: !156, size: 32, offset: 64)
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10755, file: !10754, line: 60, baseType: !156, size: 32, offset: 96)
!10761 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10755, file: !10754, line: 63, baseType: !156, size: 32, offset: 128)
!10762 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10755, file: !10754, line: 66, baseType: !156, size: 32, offset: 160)
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10755, file: !10754, line: 69, baseType: !10764, size: 192, offset: 192)
!10764 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10765, line: 73, baseType: !10766)
!10765 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10765, line: 45, size: 192, elements: !10767)
!10767 = !{!10768, !10769, !10770, !10771, !10772, !10773}
!10768 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10766, file: !10765, line: 47, baseType: !156, size: 32)
!10769 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10766, file: !10765, line: 50, baseType: !156, size: 32, offset: 32)
!10770 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10766, file: !10765, line: 53, baseType: !156, size: 32, offset: 64)
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10766, file: !10765, line: 56, baseType: !156, size: 32, offset: 96)
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10766, file: !10765, line: 60, baseType: !156, size: 32, offset: 128)
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10766, file: !10765, line: 63, baseType: !156, size: 32, offset: 160)
!10774 = !{!10775, !10776, !10777, !10778, !10782}
!10775 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10749, file: !10744, line: 219, type: !10752)
!10776 = !DILocalVariable(name: "tickstart", scope: !10749, file: !10744, line: 221, type: !156)
!10777 = !DILocalVariable(name: "pll_config", scope: !10749, file: !10744, line: 221, type: !156)
!10778 = !DILocalVariable(name: "pwrclkchanged", scope: !10779, file: !10744, line: 391, type: !10781)
!10779 = distinct !DILexicalBlock(scope: !10780, file: !10744, line: 390, column: 3)
!10780 = distinct !DILexicalBlock(scope: !10749, file: !10744, line: 389, column: 6)
!10781 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !933, line: 188, baseType: !2997)
!10782 = !DILocalVariable(name: "tmpreg", scope: !10783, file: !10744, line: 400, type: !452)
!10783 = distinct !DILexicalBlock(scope: !10784, file: !10744, line: 400, column: 7)
!10784 = distinct !DILexicalBlock(scope: !10785, file: !10744, line: 399, column: 5)
!10785 = distinct !DILexicalBlock(scope: !10779, file: !10744, line: 398, column: 8)
!10786 = !DILocation(line: 0, scope: !10749)
!10787 = !DILocation(line: 224, column: 24, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10749, file: !10744, line: 224, column: 6)
!10789 = !DILocation(line: 224, column: 6, scope: !10749)
!10790 = !DILocation(line: 232, column: 27, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10749, file: !10744, line: 232, column: 6)
!10792 = !DILocation(line: 232, column: 43, scope: !10791)
!10793 = !DILocation(line: 232, column: 69, scope: !10791)
!10794 = !DILocation(line: 232, column: 6, scope: !10749)
!10795 = !DILocation(line: 237, column: 9, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10797, file: !10744, line: 237, column: 8)
!10797 = distinct !DILexicalBlock(scope: !10791, file: !10744, line: 233, column: 3)
!10798 = !DILocation(line: 237, column: 39, scope: !10796)
!10799 = !DILocation(line: 237, column: 60, scope: !10796)
!10800 = !DILocation(line: 238, column: 9, scope: !10796)
!10801 = !DILocation(line: 238, column: 39, scope: !10796)
!10802 = !DILocation(line: 238, column: 60, scope: !10796)
!10803 = !DILocation(line: 238, column: 70, scope: !10796)
!10804 = !DILocation(line: 238, column: 78, scope: !10796)
!10805 = !DILocation(line: 238, column: 100, scope: !10796)
!10806 = !DILocation(line: 237, column: 8, scope: !10797)
!10807 = !DILocation(line: 240, column: 11, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10809, file: !10744, line: 240, column: 10)
!10809 = distinct !DILexicalBlock(scope: !10796, file: !10744, line: 239, column: 5)
!10810 = !DILocation(line: 240, column: 57, scope: !10808)
!10811 = !DILocation(line: 240, column: 80, scope: !10808)
!10812 = !DILocation(line: 240, column: 89, scope: !10808)
!10813 = !DILocation(line: 240, column: 10, scope: !10809)
!10814 = !DILocation(line: 248, column: 7, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !10744, line: 248, column: 7)
!10816 = distinct !DILexicalBlock(scope: !10817, file: !10744, line: 248, column: 7)
!10817 = distinct !DILexicalBlock(scope: !10796, file: !10744, line: 246, column: 5)
!10818 = !DILocation(line: 248, column: 7, scope: !10816)
!10819 = !DILocation(line: 248, column: 7, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10815, file: !10744, line: 248, column: 7)
!10821 = !DILocation(line: 248, column: 7, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10823, file: !10744, line: 248, column: 7)
!10823 = distinct !DILexicalBlock(scope: !10815, file: !10744, line: 248, column: 7)
!10824 = !DILocation(line: 248, column: 7, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10823, file: !10744, line: 248, column: 7)
!10826 = !DILocation(line: 0, scope: !10815)
!10827 = !DILocation(line: 251, column: 30, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10817, file: !10744, line: 251, column: 10)
!10829 = !DILocation(line: 251, column: 40, scope: !10828)
!10830 = !DILocation(line: 0, scope: !10828)
!10831 = !DILocation(line: 251, column: 10, scope: !10817)
!10832 = !DILocation(line: 257, column: 15, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10828, file: !10744, line: 252, column: 7)
!10834 = !DILocation(line: 257, column: 51, scope: !10833)
!10835 = !DILocation(line: 257, column: 9, scope: !10833)
!10836 = !DILocation(line: 259, column: 15, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !10744, line: 259, column: 14)
!10838 = distinct !DILexicalBlock(scope: !10833, file: !10744, line: 258, column: 9)
!10839 = !DILocation(line: 259, column: 29, scope: !10837)
!10840 = !DILocation(line: 259, column: 43, scope: !10837)
!10841 = !DILocation(line: 259, column: 14, scope: !10838)
!10842 = distinct !{!10842, !10835, !10843}
!10843 = !DILocation(line: 263, column: 9, scope: !10833)
!10844 = !DILocation(line: 271, column: 15, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10828, file: !10744, line: 266, column: 7)
!10846 = !DILocation(line: 271, column: 9, scope: !10845)
!10847 = !DILocation(line: 273, column: 15, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10849, file: !10744, line: 273, column: 14)
!10849 = distinct !DILexicalBlock(scope: !10845, file: !10744, line: 272, column: 9)
!10850 = !DILocation(line: 273, column: 29, scope: !10848)
!10851 = !DILocation(line: 273, column: 43, scope: !10848)
!10852 = !DILocation(line: 273, column: 14, scope: !10849)
!10853 = distinct !{!10853, !10846, !10854}
!10854 = !DILocation(line: 277, column: 9, scope: !10845)
!10855 = !DILocation(line: 282, column: 27, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10749, file: !10744, line: 282, column: 6)
!10857 = !DILocation(line: 282, column: 43, scope: !10856)
!10858 = !DILocation(line: 282, column: 69, scope: !10856)
!10859 = !DILocation(line: 282, column: 6, scope: !10749)
!10860 = !DILocation(line: 289, column: 9, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10862, file: !10744, line: 289, column: 8)
!10862 = distinct !DILexicalBlock(scope: !10856, file: !10744, line: 283, column: 3)
!10863 = !DILocation(line: 289, column: 39, scope: !10861)
!10864 = !DILocation(line: 289, column: 60, scope: !10861)
!10865 = !DILocation(line: 290, column: 9, scope: !10861)
!10866 = !DILocation(line: 290, column: 39, scope: !10861)
!10867 = !DILocation(line: 290, column: 60, scope: !10861)
!10868 = !DILocation(line: 290, column: 70, scope: !10861)
!10869 = !DILocation(line: 290, column: 78, scope: !10861)
!10870 = !DILocation(line: 290, column: 100, scope: !10861)
!10871 = !DILocation(line: 289, column: 8, scope: !10862)
!10872 = !DILocation(line: 293, column: 11, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10874, file: !10744, line: 293, column: 10)
!10874 = distinct !DILexicalBlock(scope: !10861, file: !10744, line: 291, column: 5)
!10875 = !DILocation(line: 293, column: 57, scope: !10873)
!10876 = !DILocation(line: 293, column: 80, scope: !10873)
!10877 = !DILocation(line: 293, column: 89, scope: !10873)
!10878 = !DILocation(line: 293, column: 10, scope: !10874)
!10879 = !DILocation(line: 307, column: 30, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10881, file: !10744, line: 307, column: 10)
!10881 = distinct !DILexicalBlock(scope: !10861, file: !10744, line: 305, column: 5)
!10882 = !DILocation(line: 307, column: 39, scope: !10880)
!10883 = !DILocation(line: 307, column: 10, scope: !10881)
!10884 = !DILocation(line: 310, column: 9, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10880, file: !10744, line: 308, column: 7)
!10886 = !DILocation(line: 313, column: 21, scope: !10885)
!10887 = !DILocation(line: 316, column: 9, scope: !10885)
!10888 = !DILocation(line: 316, column: 15, scope: !10885)
!10889 = !DILocation(line: 316, column: 51, scope: !10885)
!10890 = !DILocation(line: 318, column: 15, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10892, file: !10744, line: 318, column: 14)
!10892 = distinct !DILexicalBlock(scope: !10885, file: !10744, line: 317, column: 9)
!10893 = !DILocation(line: 318, column: 29, scope: !10891)
!10894 = !DILocation(line: 318, column: 43, scope: !10891)
!10895 = !DILocation(line: 318, column: 14, scope: !10892)
!10896 = distinct !{!10896, !10887, !10897}
!10897 = !DILocation(line: 322, column: 9, scope: !10885)
!10898 = !DILocation(line: 330, column: 9, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10880, file: !10744, line: 328, column: 7)
!10900 = !DILocation(line: 333, column: 21, scope: !10899)
!10901 = !DILocation(line: 336, column: 9, scope: !10899)
!10902 = !DILocation(line: 336, column: 15, scope: !10899)
!10903 = !DILocation(line: 338, column: 15, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10905, file: !10744, line: 338, column: 14)
!10905 = distinct !DILexicalBlock(scope: !10899, file: !10744, line: 337, column: 9)
!10906 = !DILocation(line: 338, column: 29, scope: !10904)
!10907 = !DILocation(line: 338, column: 43, scope: !10904)
!10908 = !DILocation(line: 338, column: 14, scope: !10905)
!10909 = distinct !{!10909, !10901, !10910}
!10910 = !DILocation(line: 342, column: 9, scope: !10899)
!10911 = !DILocation(line: 0, scope: !10861)
!10912 = !DILocation(line: 347, column: 27, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10749, file: !10744, line: 347, column: 6)
!10914 = !DILocation(line: 347, column: 43, scope: !10913)
!10915 = !DILocation(line: 347, column: 69, scope: !10913)
!10916 = !DILocation(line: 347, column: 6, scope: !10749)
!10917 = !DILocation(line: 353, column: 28, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10919, file: !10744, line: 353, column: 8)
!10919 = distinct !DILexicalBlock(scope: !10913, file: !10744, line: 348, column: 3)
!10920 = !DILocation(line: 353, column: 37, scope: !10918)
!10921 = !DILocation(line: 353, column: 8, scope: !10919)
!10922 = !DILocation(line: 356, column: 7, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10918, file: !10744, line: 354, column: 5)
!10924 = !DILocation(line: 359, column: 19, scope: !10923)
!10925 = !DILocation(line: 362, column: 7, scope: !10923)
!10926 = !DILocation(line: 362, column: 13, scope: !10923)
!10927 = !DILocation(line: 362, column: 49, scope: !10923)
!10928 = !DILocation(line: 364, column: 13, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10930, file: !10744, line: 364, column: 12)
!10930 = distinct !DILexicalBlock(scope: !10923, file: !10744, line: 363, column: 7)
!10931 = !DILocation(line: 364, column: 27, scope: !10929)
!10932 = !DILocation(line: 364, column: 41, scope: !10929)
!10933 = !DILocation(line: 364, column: 12, scope: !10930)
!10934 = distinct !{!10934, !10925, !10935}
!10935 = !DILocation(line: 368, column: 7, scope: !10923)
!10936 = !DILocation(line: 373, column: 7, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10918, file: !10744, line: 371, column: 5)
!10938 = !DILocation(line: 376, column: 19, scope: !10937)
!10939 = !DILocation(line: 379, column: 7, scope: !10937)
!10940 = !DILocation(line: 379, column: 13, scope: !10937)
!10941 = !DILocation(line: 381, column: 13, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !10744, line: 381, column: 12)
!10943 = distinct !DILexicalBlock(scope: !10937, file: !10744, line: 380, column: 7)
!10944 = !DILocation(line: 381, column: 27, scope: !10942)
!10945 = !DILocation(line: 381, column: 41, scope: !10942)
!10946 = !DILocation(line: 381, column: 12, scope: !10943)
!10947 = distinct !{!10947, !10939, !10948}
!10948 = !DILocation(line: 385, column: 7, scope: !10937)
!10949 = !DILocation(line: 389, column: 27, scope: !10780)
!10950 = !DILocation(line: 389, column: 43, scope: !10780)
!10951 = !DILocation(line: 389, column: 69, scope: !10780)
!10952 = !DILocation(line: 389, column: 6, scope: !10749)
!10953 = !DILocation(line: 0, scope: !10779)
!10954 = !DILocation(line: 398, column: 8, scope: !10785)
!10955 = !DILocation(line: 398, column: 8, scope: !10779)
!10956 = !DILocation(line: 400, column: 7, scope: !10783)
!10957 = !DILocation(line: 400, column: 7, scope: !10784)
!10958 = !DILocation(line: 402, column: 5, scope: !10784)
!10959 = !DILocation(line: 404, column: 8, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10779, file: !10744, line: 404, column: 8)
!10961 = !DILocation(line: 404, column: 8, scope: !10779)
!10962 = !DILocation(line: 407, column: 7, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10960, file: !10744, line: 405, column: 5)
!10964 = !DILocation(line: 410, column: 19, scope: !10963)
!10965 = !DILocation(line: 412, column: 7, scope: !10963)
!10966 = !DILocation(line: 412, column: 13, scope: !10963)
!10967 = !DILocation(line: 414, column: 13, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !10744, line: 414, column: 12)
!10969 = distinct !DILexicalBlock(scope: !10963, file: !10744, line: 413, column: 7)
!10970 = !DILocation(line: 414, column: 27, scope: !10968)
!10971 = !DILocation(line: 414, column: 40, scope: !10968)
!10972 = !DILocation(line: 414, column: 12, scope: !10969)
!10973 = distinct !{!10973, !10965, !10974}
!10974 = !DILocation(line: 418, column: 7, scope: !10963)
!10975 = !DILocation(line: 422, column: 5, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !10744, line: 422, column: 5)
!10977 = distinct !DILexicalBlock(scope: !10779, file: !10744, line: 422, column: 5)
!10978 = !DILocation(line: 422, column: 5, scope: !10977)
!10979 = !DILocation(line: 422, column: 5, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10976, file: !10744, line: 422, column: 5)
!10981 = !DILocation(line: 422, column: 5, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10983, file: !10744, line: 422, column: 5)
!10983 = distinct !DILexicalBlock(scope: !10976, file: !10744, line: 422, column: 5)
!10984 = !DILocation(line: 422, column: 5, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10983, file: !10744, line: 422, column: 5)
!10986 = !DILocation(line: 0, scope: !10976)
!10987 = !DILocation(line: 424, column: 28, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10779, file: !10744, line: 424, column: 8)
!10989 = !DILocation(line: 424, column: 38, scope: !10988)
!10990 = !DILocation(line: 0, scope: !10988)
!10991 = !DILocation(line: 424, column: 8, scope: !10779)
!10992 = !DILocation(line: 430, column: 13, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10988, file: !10744, line: 425, column: 5)
!10994 = !DILocation(line: 430, column: 49, scope: !10993)
!10995 = !DILocation(line: 430, column: 7, scope: !10993)
!10996 = !DILocation(line: 432, column: 13, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !10744, line: 432, column: 12)
!10998 = distinct !DILexicalBlock(scope: !10993, file: !10744, line: 431, column: 7)
!10999 = !DILocation(line: 432, column: 27, scope: !10997)
!11000 = !DILocation(line: 432, column: 41, scope: !10997)
!11001 = !DILocation(line: 432, column: 12, scope: !10998)
!11002 = distinct !{!11002, !10995, !11003}
!11003 = !DILocation(line: 436, column: 7, scope: !10993)
!11004 = !DILocation(line: 444, column: 13, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10988, file: !10744, line: 439, column: 5)
!11006 = !DILocation(line: 444, column: 7, scope: !11005)
!11007 = !DILocation(line: 446, column: 13, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !10744, line: 446, column: 12)
!11009 = distinct !DILexicalBlock(scope: !11005, file: !10744, line: 445, column: 7)
!11010 = !DILocation(line: 446, column: 27, scope: !11008)
!11011 = !DILocation(line: 446, column: 41, scope: !11008)
!11012 = !DILocation(line: 446, column: 12, scope: !11009)
!11013 = distinct !{!11013, !11006, !11014}
!11014 = !DILocation(line: 450, column: 7, scope: !11005)
!11015 = !DILocation(line: 454, column: 8, scope: !10779)
!11016 = !DILocation(line: 456, column: 7, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !10744, line: 455, column: 5)
!11018 = distinct !DILexicalBlock(scope: !10779, file: !10744, line: 454, column: 8)
!11019 = !DILocation(line: 457, column: 5, scope: !11017)
!11020 = !DILocation(line: 462, column: 31, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !10749, file: !10744, line: 462, column: 7)
!11022 = !DILocation(line: 462, column: 41, scope: !11021)
!11023 = !DILocation(line: 462, column: 7, scope: !10749)
!11024 = !DILocation(line: 465, column: 8, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !10744, line: 465, column: 8)
!11026 = distinct !DILexicalBlock(scope: !11021, file: !10744, line: 463, column: 3)
!11027 = !DILocation(line: 465, column: 38, scope: !11025)
!11028 = !DILocation(line: 465, column: 8, scope: !11026)
!11029 = !DILocation(line: 467, column: 44, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11031, file: !10744, line: 467, column: 10)
!11031 = distinct !DILexicalBlock(scope: !11025, file: !10744, line: 466, column: 5)
!11032 = !DILocation(line: 0, scope: !11030)
!11033 = !DILocation(line: 467, column: 10, scope: !11031)
!11034 = !DILocation(line: 483, column: 15, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11030, file: !10744, line: 468, column: 7)
!11036 = !DILocation(line: 483, column: 9, scope: !11035)
!11037 = !DILocation(line: 485, column: 15, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11039, file: !10744, line: 485, column: 14)
!11039 = distinct !DILexicalBlock(scope: !11035, file: !10744, line: 484, column: 9)
!11040 = !DILocation(line: 485, column: 29, scope: !11038)
!11041 = !DILocation(line: 485, column: 43, scope: !11038)
!11042 = !DILocation(line: 485, column: 14, scope: !11039)
!11043 = distinct !{!11043, !11036, !11044}
!11044 = !DILocation(line: 489, column: 9, scope: !11035)
!11045 = !DILocation(line: 492, column: 9, scope: !11035)
!11046 = !DILocation(line: 498, column: 9, scope: !11035)
!11047 = !DILocation(line: 501, column: 21, scope: !11035)
!11048 = !DILocation(line: 504, column: 9, scope: !11035)
!11049 = !DILocation(line: 504, column: 15, scope: !11035)
!11050 = !DILocation(line: 504, column: 51, scope: !11035)
!11051 = !DILocation(line: 506, column: 15, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !10744, line: 506, column: 14)
!11053 = distinct !DILexicalBlock(scope: !11035, file: !10744, line: 505, column: 9)
!11054 = !DILocation(line: 506, column: 29, scope: !11052)
!11055 = !DILocation(line: 506, column: 43, scope: !11052)
!11056 = !DILocation(line: 506, column: 14, scope: !11053)
!11057 = distinct !{!11057, !11048, !11058}
!11058 = !DILocation(line: 510, column: 9, scope: !11035)
!11059 = !DILocation(line: 521, column: 15, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11030, file: !10744, line: 513, column: 7)
!11061 = !DILocation(line: 521, column: 9, scope: !11060)
!11062 = !DILocation(line: 523, column: 15, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !10744, line: 523, column: 14)
!11064 = distinct !DILexicalBlock(scope: !11060, file: !10744, line: 522, column: 9)
!11065 = !DILocation(line: 523, column: 29, scope: !11063)
!11066 = !DILocation(line: 523, column: 43, scope: !11063)
!11067 = !DILocation(line: 523, column: 14, scope: !11064)
!11068 = distinct !{!11068, !11061, !11069}
!11069 = !DILocation(line: 527, column: 9, scope: !11060)
!11070 = !DILocation(line: 533, column: 44, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11072, file: !10744, line: 533, column: 10)
!11072 = distinct !DILexicalBlock(scope: !11025, file: !10744, line: 531, column: 5)
!11073 = !DILocation(line: 533, column: 10, scope: !11072)
!11074 = !DILocation(line: 540, column: 27, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11071, file: !10744, line: 538, column: 7)
!11076 = !DILocation(line: 551, column: 14, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11075, file: !10744, line: 550, column: 13)
!11078 = !DILocation(line: 551, column: 81, scope: !11077)
!11079 = !DILocation(line: 551, column: 55, scope: !11077)
!11080 = !DILocation(line: 551, column: 92, scope: !11077)
!11081 = !DILocation(line: 552, column: 14, scope: !11077)
!11082 = !DILocation(line: 552, column: 80, scope: !11077)
!11083 = !DILocation(line: 552, column: 53, scope: !11077)
!11084 = !DILocation(line: 552, column: 111, scope: !11077)
!11085 = !DILocation(line: 553, column: 14, scope: !11077)
!11086 = !DILocation(line: 553, column: 80, scope: !11077)
!11087 = !DILocation(line: 553, column: 86, scope: !11077)
!11088 = !DILocation(line: 553, column: 53, scope: !11077)
!11089 = !DILocation(line: 553, column: 111, scope: !11077)
!11090 = !DILocation(line: 554, column: 14, scope: !11077)
!11091 = !DILocation(line: 554, column: 82, scope: !11077)
!11092 = !DILocation(line: 554, column: 101, scope: !11077)
!11093 = !DILocation(line: 554, column: 53, scope: !11077)
!11094 = !DILocation(line: 554, column: 126, scope: !11077)
!11095 = !DILocation(line: 555, column: 14, scope: !11077)
!11096 = !DILocation(line: 555, column: 80, scope: !11077)
!11097 = !DILocation(line: 555, column: 85, scope: !11077)
!11098 = !DILocation(line: 555, column: 53, scope: !11077)
!11099 = !DILocation(line: 550, column: 13, scope: !11075)
!11100 = !DILocation(line: 563, column: 3, scope: !10749)
!11101 = !DILocation(line: 564, column: 1, scope: !10749)
!11102 = !DISubprogram(name: "HAL_GetTick", scope: !11103, file: !11103, line: 234, type: !6452, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!11103 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11104 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10744, file: !10744, line: 591, type: !11105, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11116)
!11105 = !DISubroutineType(types: !11106)
!11106 = !{!10747, !11107, !156}
!11107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11108, size: 32)
!11108 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10754, line: 92, baseType: !11109)
!11109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10754, line: 75, size: 160, elements: !11110)
!11110 = !{!11111, !11112, !11113, !11114, !11115}
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11109, file: !10754, line: 77, baseType: !156, size: 32)
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11109, file: !10754, line: 80, baseType: !156, size: 32, offset: 32)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11109, file: !10754, line: 83, baseType: !156, size: 32, offset: 64)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11109, file: !10754, line: 86, baseType: !156, size: 32, offset: 96)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11109, file: !10754, line: 89, baseType: !156, size: 32, offset: 128)
!11116 = !{!11117, !11118, !11119}
!11117 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11104, file: !10744, line: 591, type: !11107)
!11118 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11104, file: !10744, line: 591, type: !156)
!11119 = !DILocalVariable(name: "tickstart", scope: !11104, file: !10744, line: 593, type: !156)
!11120 = !DILocation(line: 0, scope: !11104)
!11121 = !DILocation(line: 596, column: 24, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11104, file: !10744, line: 596, column: 6)
!11123 = !DILocation(line: 596, column: 6, scope: !11104)
!11124 = !DILocation(line: 610, column: 17, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11104, file: !10744, line: 610, column: 6)
!11126 = !DILocation(line: 610, column: 15, scope: !11125)
!11127 = !DILocation(line: 610, column: 6, scope: !11104)
!11128 = !DILocation(line: 613, column: 5, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11125, file: !10744, line: 611, column: 3)
!11130 = !DILocation(line: 617, column: 8, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11129, file: !10744, line: 617, column: 8)
!11132 = !DILocation(line: 617, column: 34, scope: !11131)
!11133 = !DILocation(line: 617, column: 8, scope: !11129)
!11134 = !DILocation(line: 624, column: 27, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11104, file: !10744, line: 624, column: 6)
!11136 = !DILocation(line: 624, column: 38, scope: !11135)
!11137 = !DILocation(line: 624, column: 60, scope: !11135)
!11138 = !DILocation(line: 624, column: 6, scope: !11104)
!11139 = !DILocation(line: 628, column: 40, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !10744, line: 628, column: 8)
!11141 = distinct !DILexicalBlock(scope: !11135, file: !10744, line: 625, column: 3)
!11142 = !DILocation(line: 628, column: 63, scope: !11140)
!11143 = !DILocation(line: 628, column: 8, scope: !11141)
!11144 = !DILocation(line: 630, column: 7, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11140, file: !10744, line: 629, column: 5)
!11146 = !DILocation(line: 633, column: 29, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11141, file: !10744, line: 633, column: 8)
!11148 = !DILocation(line: 631, column: 5, scope: !11145)
!11149 = !DILocation(line: 633, column: 40, scope: !11147)
!11150 = !DILocation(line: 633, column: 63, scope: !11147)
!11151 = !DILocation(line: 633, column: 8, scope: !11141)
!11152 = !DILocation(line: 635, column: 7, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11147, file: !10744, line: 634, column: 5)
!11154 = !DILocation(line: 636, column: 5, scope: !11153)
!11155 = !DILocation(line: 639, column: 5, scope: !11141)
!11156 = !DILocation(line: 643, column: 27, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11104, file: !10744, line: 643, column: 6)
!11158 = !DILocation(line: 640, column: 3, scope: !11141)
!11159 = !DILocation(line: 643, column: 38, scope: !11157)
!11160 = !DILocation(line: 643, column: 62, scope: !11157)
!11161 = !DILocation(line: 643, column: 6, scope: !11104)
!11162 = !DILocation(line: 648, column: 27, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !10744, line: 648, column: 8)
!11164 = distinct !DILexicalBlock(scope: !11157, file: !10744, line: 644, column: 3)
!11165 = !DILocation(line: 648, column: 8, scope: !11164)
!11166 = !DILocation(line: 651, column: 10, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11168, file: !10744, line: 651, column: 10)
!11168 = distinct !DILexicalBlock(scope: !11163, file: !10744, line: 649, column: 5)
!11169 = !DILocation(line: 651, column: 46, scope: !11167)
!11170 = !DILocation(line: 651, column: 10, scope: !11168)
!11171 = !DILocation(line: 661, column: 10, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !10744, line: 661, column: 10)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !10744, line: 659, column: 5)
!11174 = distinct !DILexicalBlock(scope: !11163, file: !10744, line: 657, column: 13)
!11175 = !DILocation(line: 661, column: 46, scope: !11172)
!11176 = !DILocation(line: 661, column: 10, scope: !11173)
!11177 = !DILocation(line: 670, column: 10, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !10744, line: 670, column: 10)
!11179 = distinct !DILexicalBlock(scope: !11174, file: !10744, line: 668, column: 5)
!11180 = !DILocation(line: 670, column: 46, scope: !11178)
!11181 = !DILocation(line: 670, column: 10, scope: !11179)
!11182 = !DILocation(line: 676, column: 5, scope: !11164)
!11183 = !DILocation(line: 679, column: 17, scope: !11164)
!11184 = !DILocation(line: 681, column: 5, scope: !11164)
!11185 = !DILocation(line: 681, column: 12, scope: !11164)
!11186 = !DILocation(line: 681, column: 65, scope: !11164)
!11187 = !DILocation(line: 681, column: 78, scope: !11164)
!11188 = !DILocation(line: 681, column: 42, scope: !11164)
!11189 = !DILocation(line: 683, column: 12, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !10744, line: 683, column: 11)
!11191 = distinct !DILexicalBlock(scope: !11164, file: !10744, line: 682, column: 5)
!11192 = !DILocation(line: 683, column: 26, scope: !11190)
!11193 = !DILocation(line: 683, column: 39, scope: !11190)
!11194 = !DILocation(line: 683, column: 11, scope: !11191)
!11195 = distinct !{!11195, !11184, !11196}
!11196 = !DILocation(line: 687, column: 5, scope: !11164)
!11197 = !DILocation(line: 691, column: 17, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11104, file: !10744, line: 691, column: 6)
!11199 = !DILocation(line: 691, column: 15, scope: !11198)
!11200 = !DILocation(line: 691, column: 6, scope: !11104)
!11201 = !DILocation(line: 694, column: 5, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11198, file: !10744, line: 692, column: 3)
!11203 = !DILocation(line: 698, column: 8, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11202, file: !10744, line: 698, column: 8)
!11205 = !DILocation(line: 698, column: 34, scope: !11204)
!11206 = !DILocation(line: 698, column: 8, scope: !11202)
!11207 = !DILocation(line: 705, column: 27, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11104, file: !10744, line: 705, column: 6)
!11209 = !DILocation(line: 705, column: 38, scope: !11208)
!11210 = !DILocation(line: 705, column: 61, scope: !11208)
!11211 = !DILocation(line: 705, column: 6, scope: !11104)
!11212 = !DILocation(line: 708, column: 5, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11208, file: !10744, line: 706, column: 3)
!11214 = !DILocation(line: 712, column: 27, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11104, file: !10744, line: 712, column: 6)
!11216 = !DILocation(line: 709, column: 3, scope: !11213)
!11217 = !DILocation(line: 712, column: 38, scope: !11215)
!11218 = !DILocation(line: 712, column: 61, scope: !11215)
!11219 = !DILocation(line: 712, column: 6, scope: !11104)
!11220 = !DILocation(line: 715, column: 5, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11215, file: !10744, line: 713, column: 3)
!11222 = !DILocation(line: 716, column: 3, scope: !11221)
!11223 = !DILocation(line: 719, column: 21, scope: !11104)
!11224 = !DILocation(line: 719, column: 70, scope: !11104)
!11225 = !DILocation(line: 719, column: 91, scope: !11104)
!11226 = !DILocation(line: 719, column: 50, scope: !11104)
!11227 = !DILocation(line: 719, column: 47, scope: !11104)
!11228 = !DILocation(line: 719, column: 19, scope: !11104)
!11229 = !DILocation(line: 722, column: 17, scope: !11104)
!11230 = !DILocation(line: 722, column: 3, scope: !11104)
!11231 = !DILocation(line: 724, column: 3, scope: !11104)
!11232 = !DILocation(line: 725, column: 1, scope: !11104)
!11233 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10744, file: !10744, line: 885, type: !6452, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11234)
!11234 = !{!11235, !11236, !11237, !11238}
!11235 = !DILocalVariable(name: "pllm", scope: !11233, file: !10744, line: 887, type: !156)
!11236 = !DILocalVariable(name: "pllvco", scope: !11233, file: !10744, line: 887, type: !156)
!11237 = !DILocalVariable(name: "pllp", scope: !11233, file: !10744, line: 887, type: !156)
!11238 = !DILocalVariable(name: "sysclockfreq", scope: !11233, file: !10744, line: 888, type: !156)
!11239 = !DILocation(line: 0, scope: !11233)
!11240 = !DILocation(line: 891, column: 16, scope: !11233)
!11241 = !DILocation(line: 891, column: 21, scope: !11233)
!11242 = !DILocation(line: 891, column: 3, scope: !11233)
!11243 = !DILocation(line: 907, column: 19, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11245, file: !10744, line: 904, column: 5)
!11245 = distinct !DILexicalBlock(scope: !11233, file: !10744, line: 892, column: 3)
!11246 = !DILocation(line: 907, column: 27, scope: !11244)
!11247 = !DILocation(line: 908, column: 10, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11244, file: !10744, line: 908, column: 10)
!11249 = !DILocation(line: 0, scope: !11248)
!11250 = !DILocation(line: 918, column: 23, scope: !11244)
!11251 = !DILocation(line: 918, column: 82, scope: !11244)
!11252 = !DILocation(line: 920, column: 28, scope: !11244)
!11253 = !DILocation(line: 921, column: 7, scope: !11244)
!11254 = !DILocation(line: 0, scope: !11245)
!11255 = !DILocation(line: 929, column: 3, scope: !11233)
!11256 = !DISubprogram(name: "HAL_InitTick", scope: !11103, file: !11103, line: 223, type: !11257, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!11257 = !DISubroutineType(types: !11258)
!11258 = !{!10747, !156}
!11259 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10744, file: !10744, line: 775, type: !11260, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11262)
!11260 = !DISubroutineType(types: !11261)
!11261 = !{null, !156, !156, !156}
!11262 = !{!11263, !11264, !11265, !11266, !11276, !11280}
!11263 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11259, file: !10744, line: 775, type: !156)
!11264 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11259, file: !10744, line: 775, type: !156)
!11265 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11259, file: !10744, line: 775, type: !156)
!11266 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11259, file: !10744, line: 777, type: !11267)
!11267 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11268, line: 62, baseType: !11269)
!11268 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11268, line: 46, size: 160, elements: !11270)
!11270 = !{!11271, !11272, !11273, !11274, !11275}
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11269, file: !11268, line: 48, baseType: !156, size: 32)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11269, file: !11268, line: 51, baseType: !156, size: 32, offset: 32)
!11273 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11269, file: !11268, line: 54, baseType: !156, size: 32, offset: 64)
!11274 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11269, file: !11268, line: 57, baseType: !156, size: 32, offset: 96)
!11275 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11269, file: !11268, line: 60, baseType: !156, size: 32, offset: 128)
!11276 = !DILocalVariable(name: "tmpreg", scope: !11277, file: !10744, line: 787, type: !452)
!11277 = distinct !DILexicalBlock(scope: !11278, file: !10744, line: 787, column: 5)
!11278 = distinct !DILexicalBlock(scope: !11279, file: !10744, line: 783, column: 3)
!11279 = distinct !DILexicalBlock(scope: !11259, file: !10744, line: 782, column: 6)
!11280 = !DILocalVariable(name: "tmpreg", scope: !11281, file: !10744, line: 811, type: !452)
!11281 = distinct !DILexicalBlock(scope: !11282, file: !10744, line: 811, column: 5)
!11282 = distinct !DILexicalBlock(scope: !11279, file: !10744, line: 807, column: 3)
!11283 = !DILocation(line: 0, scope: !11259)
!11284 = !DILocation(line: 777, column: 3, scope: !11259)
!11285 = !DILocation(line: 777, column: 20, scope: !11259)
!11286 = !DILocation(line: 782, column: 15, scope: !11279)
!11287 = !DILocation(line: 782, column: 6, scope: !11259)
!11288 = !DILocation(line: 787, column: 5, scope: !11277)
!11289 = !DILocation(line: 787, column: 5, scope: !11278)
!11290 = !DILocation(line: 790, column: 21, scope: !11278)
!11291 = !DILocation(line: 790, column: 25, scope: !11278)
!11292 = !DILocation(line: 791, column: 21, scope: !11278)
!11293 = !DILocation(line: 791, column: 26, scope: !11278)
!11294 = !DILocation(line: 792, column: 21, scope: !11278)
!11295 = !DILocation(line: 792, column: 27, scope: !11278)
!11296 = !DILocation(line: 793, column: 21, scope: !11278)
!11297 = !DILocation(line: 793, column: 26, scope: !11278)
!11298 = !DILocation(line: 794, column: 21, scope: !11278)
!11299 = !DILocation(line: 794, column: 31, scope: !11278)
!11300 = !DILocation(line: 795, column: 5, scope: !11278)
!11301 = !DILocation(line: 798, column: 5, scope: !11278)
!11302 = !DILocation(line: 804, column: 3, scope: !11278)
!11303 = !DILocation(line: 811, column: 5, scope: !11281)
!11304 = !DILocation(line: 811, column: 5, scope: !11282)
!11305 = !DILocation(line: 814, column: 21, scope: !11282)
!11306 = !DILocation(line: 814, column: 25, scope: !11282)
!11307 = !DILocation(line: 815, column: 21, scope: !11282)
!11308 = !DILocation(line: 815, column: 26, scope: !11282)
!11309 = !DILocation(line: 816, column: 21, scope: !11282)
!11310 = !DILocation(line: 816, column: 27, scope: !11282)
!11311 = !DILocation(line: 817, column: 21, scope: !11282)
!11312 = !DILocation(line: 817, column: 26, scope: !11282)
!11313 = !DILocation(line: 818, column: 21, scope: !11282)
!11314 = !DILocation(line: 818, column: 31, scope: !11282)
!11315 = !DILocation(line: 819, column: 5, scope: !11282)
!11316 = !DILocation(line: 822, column: 5, scope: !11282)
!11317 = !DILocation(line: 0, scope: !11279)
!11318 = !DILocation(line: 830, column: 1, scope: !11259)
!11319 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11268, file: !11268, line: 224, type: !11320, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!11320 = !DISubroutineType(types: !11321)
!11321 = !{null, !3060, !11322}
!11322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11267, size: 32)
!11323 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10744, file: !10744, line: 841, type: !365, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2149)
!11324 = !DILocation(line: 843, column: 38, scope: !11323)
!11325 = !DILocation(line: 844, column: 1, scope: !11323)
!11326 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10744, file: !10744, line: 850, type: !365, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2149)
!11327 = !DILocation(line: 852, column: 38, scope: !11326)
!11328 = !DILocation(line: 853, column: 1, scope: !11326)
!11329 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10744, file: !10744, line: 941, type: !6452, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2149)
!11330 = !DILocation(line: 943, column: 10, scope: !11329)
!11331 = !DILocation(line: 943, column: 3, scope: !11329)
!11332 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10744, file: !10744, line: 952, type: !6452, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2149)
!11333 = !DILocation(line: 955, column: 11, scope: !11332)
!11334 = !DILocation(line: 955, column: 56, scope: !11332)
!11335 = !DILocation(line: 955, column: 78, scope: !11332)
!11336 = !DILocation(line: 955, column: 36, scope: !11332)
!11337 = !DILocation(line: 955, column: 33, scope: !11332)
!11338 = !DILocation(line: 955, column: 3, scope: !11332)
!11339 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10744, file: !10744, line: 964, type: !6452, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2149)
!11340 = !DILocation(line: 967, column: 11, scope: !11339)
!11341 = !DILocation(line: 967, column: 55, scope: !11339)
!11342 = !DILocation(line: 967, column: 77, scope: !11339)
!11343 = !DILocation(line: 967, column: 35, scope: !11339)
!11344 = !DILocation(line: 967, column: 32, scope: !11339)
!11345 = !DILocation(line: 967, column: 3, scope: !11339)
!11346 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10744, file: !10744, line: 977, type: !11347, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11349)
!11347 = !DISubroutineType(types: !11348)
!11348 = !{null, !10752}
!11349 = !{!11350}
!11350 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11346, file: !10744, line: 977, type: !10752)
!11351 = !DILocation(line: 0, scope: !11346)
!11352 = !DILocation(line: 980, column: 22, scope: !11346)
!11353 = !DILocation(line: 980, column: 37, scope: !11346)
!11354 = !DILocation(line: 983, column: 12, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11346, file: !10744, line: 983, column: 6)
!11356 = !DILocation(line: 983, column: 15, scope: !11355)
!11357 = !DILocation(line: 983, column: 31, scope: !11355)
!11358 = !DILocation(line: 983, column: 6, scope: !11346)
!11359 = !DILocation(line: 985, column: 24, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11355, file: !10744, line: 984, column: 3)
!11361 = !DILocation(line: 985, column: 33, scope: !11360)
!11362 = !DILocation(line: 986, column: 3, scope: !11360)
!11363 = !DILocation(line: 987, column: 17, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11355, file: !10744, line: 987, column: 11)
!11365 = !DILocation(line: 987, column: 20, scope: !11364)
!11366 = !DILocation(line: 987, column: 35, scope: !11364)
!11367 = !DILocation(line: 0, scope: !11364)
!11368 = !DILocation(line: 987, column: 11, scope: !11355)
!11369 = !DILocation(line: 989, column: 33, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11364, file: !10744, line: 988, column: 3)
!11371 = !DILocation(line: 990, column: 3, scope: !11370)
!11372 = !DILocation(line: 993, column: 33, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11364, file: !10744, line: 992, column: 3)
!11374 = !DILocation(line: 997, column: 12, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11346, file: !10744, line: 997, column: 6)
!11376 = !DILocation(line: 997, column: 15, scope: !11375)
!11377 = !DILocation(line: 1003, column: 24, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11375, file: !10744, line: 1002, column: 3)
!11379 = !DILocation(line: 1003, column: 33, scope: !11378)
!11380 = !DILocation(line: 1006, column: 61, scope: !11346)
!11381 = !DILocation(line: 1006, column: 81, scope: !11346)
!11382 = !DILocation(line: 1006, column: 22, scope: !11346)
!11383 = !DILocation(line: 1006, column: 42, scope: !11346)
!11384 = !DILocation(line: 1009, column: 12, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11346, file: !10744, line: 1009, column: 6)
!11386 = !DILocation(line: 1009, column: 17, scope: !11385)
!11387 = !DILocation(line: 1009, column: 35, scope: !11385)
!11388 = !DILocation(line: 1009, column: 6, scope: !11346)
!11389 = !DILocation(line: 1011, column: 24, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11385, file: !10744, line: 1010, column: 3)
!11391 = !DILocation(line: 1011, column: 33, scope: !11390)
!11392 = !DILocation(line: 1012, column: 3, scope: !11390)
!11393 = !DILocation(line: 1013, column: 17, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11385, file: !10744, line: 1013, column: 11)
!11395 = !DILocation(line: 1013, column: 22, scope: !11394)
!11396 = !DILocation(line: 1013, column: 39, scope: !11394)
!11397 = !DILocation(line: 0, scope: !11394)
!11398 = !DILocation(line: 1013, column: 11, scope: !11385)
!11399 = !DILocation(line: 1015, column: 33, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11394, file: !10744, line: 1014, column: 3)
!11401 = !DILocation(line: 1016, column: 3, scope: !11400)
!11402 = !DILocation(line: 1019, column: 33, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11394, file: !10744, line: 1018, column: 3)
!11404 = !DILocation(line: 1023, column: 12, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11346, file: !10744, line: 1023, column: 6)
!11406 = !DILocation(line: 1023, column: 16, scope: !11405)
!11407 = !DILocation(line: 1029, column: 24, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11405, file: !10744, line: 1028, column: 3)
!11409 = !DILocation(line: 1029, column: 33, scope: !11408)
!11410 = !DILocation(line: 1033, column: 12, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11346, file: !10744, line: 1033, column: 6)
!11412 = !DILocation(line: 1033, column: 15, scope: !11411)
!11413 = !DILocation(line: 1033, column: 30, scope: !11411)
!11414 = !DILocation(line: 1033, column: 6, scope: !11346)
!11415 = !DILocation(line: 1039, column: 28, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11411, file: !10744, line: 1038, column: 3)
!11417 = !DILocation(line: 1039, column: 37, scope: !11416)
!11418 = !DILocation(line: 1041, column: 54, scope: !11346)
!11419 = !DILocation(line: 1041, column: 62, scope: !11346)
!11420 = !DILocation(line: 1041, column: 26, scope: !11346)
!11421 = !DILocation(line: 1041, column: 36, scope: !11346)
!11422 = !DILocation(line: 1042, column: 49, scope: !11346)
!11423 = !DILocation(line: 1042, column: 57, scope: !11346)
!11424 = !DILocation(line: 1042, column: 26, scope: !11346)
!11425 = !DILocation(line: 1042, column: 31, scope: !11346)
!11426 = !DILocation(line: 1043, column: 50, scope: !11346)
!11427 = !DILocation(line: 1043, column: 78, scope: !11346)
!11428 = !DILocation(line: 1043, column: 26, scope: !11346)
!11429 = !DILocation(line: 1043, column: 31, scope: !11346)
!11430 = !DILocation(line: 1044, column: 52, scope: !11346)
!11431 = !DILocation(line: 1044, column: 102, scope: !11346)
!11432 = !DILocation(line: 1044, column: 109, scope: !11346)
!11433 = !DILocation(line: 1044, column: 26, scope: !11346)
!11434 = !DILocation(line: 1044, column: 31, scope: !11346)
!11435 = !DILocation(line: 1045, column: 50, scope: !11346)
!11436 = !DILocation(line: 1045, column: 78, scope: !11346)
!11437 = !DILocation(line: 1045, column: 26, scope: !11346)
!11438 = !DILocation(line: 1045, column: 31, scope: !11346)
!11439 = !DILocation(line: 1046, column: 1, scope: !11346)
!11440 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10744, file: !10744, line: 1056, type: !11441, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11443)
!11441 = !DISubroutineType(types: !11442)
!11442 = !{null, !11107, !989}
!11443 = !{!11444, !11445}
!11444 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11440, file: !10744, line: 1056, type: !11107)
!11445 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11440, file: !10744, line: 1056, type: !989)
!11446 = !DILocation(line: 0, scope: !11440)
!11447 = !DILocation(line: 1059, column: 22, scope: !11440)
!11448 = !DILocation(line: 1059, column: 32, scope: !11440)
!11449 = !DILocation(line: 1062, column: 53, scope: !11440)
!11450 = !DILocation(line: 1062, column: 58, scope: !11440)
!11451 = !DILocation(line: 1062, column: 22, scope: !11440)
!11452 = !DILocation(line: 1062, column: 35, scope: !11440)
!11453 = !DILocation(line: 1065, column: 54, scope: !11440)
!11454 = !DILocation(line: 1065, column: 59, scope: !11440)
!11455 = !DILocation(line: 1065, column: 22, scope: !11440)
!11456 = !DILocation(line: 1065, column: 36, scope: !11440)
!11457 = !DILocation(line: 1068, column: 55, scope: !11440)
!11458 = !DILocation(line: 1068, column: 60, scope: !11440)
!11459 = !DILocation(line: 1068, column: 22, scope: !11440)
!11460 = !DILocation(line: 1068, column: 37, scope: !11440)
!11461 = !DILocation(line: 1071, column: 56, scope: !11440)
!11462 = !DILocation(line: 1071, column: 79, scope: !11440)
!11463 = !DILocation(line: 1071, column: 22, scope: !11440)
!11464 = !DILocation(line: 1071, column: 37, scope: !11440)
!11465 = !DILocation(line: 1074, column: 34, scope: !11440)
!11466 = !DILocation(line: 1074, column: 38, scope: !11440)
!11467 = !DILocation(line: 1074, column: 14, scope: !11440)
!11468 = !DILocation(line: 1075, column: 1, scope: !11440)
!11469 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10744, file: !10744, line: 1082, type: !365, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2149)
!11470 = !DILocation(line: 1085, column: 6, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11469, file: !10744, line: 1085, column: 6)
!11472 = !DILocation(line: 1085, column: 6, scope: !11469)
!11473 = !DILocation(line: 1088, column: 5, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11471, file: !10744, line: 1086, column: 3)
!11475 = !DILocation(line: 1091, column: 5, scope: !11474)
!11476 = !DILocation(line: 1092, column: 3, scope: !11474)
!11477 = !DILocation(line: 1093, column: 1, scope: !11469)
!11478 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10744, file: !10744, line: 1099, type: !365, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2149)
!11479 = !DILocation(line: 1104, column: 1, scope: !11478)
!11480 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11481, file: !11481, line: 257, type: !6462, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11482)
!11481 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11482 = !{!11483}
!11483 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11480, file: !11481, line: 257, type: !156)
!11484 = !DILocation(line: 0, scope: !11480)
!11485 = !DILocation(line: 260, column: 3, scope: !11480)
!11486 = !DILocation(line: 261, column: 1, scope: !11480)
!11487 = distinct !DISubprogram(name: "LL_InitTick", scope: !11488, file: !11488, line: 260, type: !9136, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11489)
!11488 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11489 = !{!11490, !11491}
!11490 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11487, file: !11488, line: 260, type: !156)
!11491 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11487, file: !11488, line: 260, type: !156)
!11492 = !DILocation(line: 0, scope: !11487)
!11493 = !DILocation(line: 263, column: 46, scope: !11487)
!11494 = !DILocation(line: 263, column: 55, scope: !11487)
!11495 = !DILocation(line: 263, column: 18, scope: !11487)
!11496 = !DILocation(line: 264, column: 18, scope: !11487)
!11497 = !DILocation(line: 265, column: 18, scope: !11487)
!11498 = !DILocation(line: 267, column: 1, scope: !11487)
!11499 = distinct !DISubprogram(name: "LL_mDelay", scope: !11481, file: !11481, line: 273, type: !6462, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11500)
!11500 = !{!11501, !11502}
!11501 = !DILocalVariable(name: "Delay", arg: 1, scope: !11499, file: !11481, line: 273, type: !156)
!11502 = !DILocalVariable(name: "tmp", scope: !11499, file: !11481, line: 275, type: !452)
!11503 = !DILocation(line: 0, scope: !11499)
!11504 = !DILocation(line: 275, column: 3, scope: !11499)
!11505 = !DILocation(line: 275, column: 18, scope: !11499)
!11506 = !DILocation(line: 275, column: 33, scope: !11499)
!11507 = !DILocation(line: 277, column: 10, scope: !11499)
!11508 = !DILocation(line: 280, column: 12, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11499, file: !11481, line: 280, column: 6)
!11510 = !DILocation(line: 285, column: 3, scope: !11499)
!11511 = !DILocation(line: 287, column: 18, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !11481, line: 287, column: 8)
!11513 = distinct !DILexicalBlock(scope: !11499, file: !11481, line: 286, column: 3)
!11514 = !DILocation(line: 292, column: 1, scope: !11499)
!11515 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11481, file: !11481, line: 323, type: !6462, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11516)
!11516 = !{!11517}
!11517 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11515, file: !11481, line: 323, type: !156)
!11518 = !DILocation(line: 0, scope: !11515)
!11519 = !DILocation(line: 326, column: 19, scope: !11515)
!11520 = !DILocation(line: 327, column: 1, scope: !11515)
!11521 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11481, file: !11481, line: 338, type: !11522, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11525)
!11522 = !DISubroutineType(types: !11523)
!11523 = !{!11524, !156}
!11524 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !933, line: 201, baseType: !932)
!11525 = !{!11526, !11527, !11528, !11529, !11530}
!11526 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11521, file: !11481, line: 338, type: !156)
!11527 = !DILocalVariable(name: "timeout", scope: !11521, file: !11481, line: 340, type: !156)
!11528 = !DILocalVariable(name: "getlatency", scope: !11521, file: !11481, line: 341, type: !156)
!11529 = !DILocalVariable(name: "latency", scope: !11521, file: !11481, line: 342, type: !156)
!11530 = !DILocalVariable(name: "status", scope: !11521, file: !11481, line: 343, type: !11524)
!11531 = !DILocation(line: 0, scope: !11521)
!11532 = !DILocation(line: 347, column: 21, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11521, file: !11481, line: 347, column: 6)
!11534 = !DILocation(line: 347, column: 6, scope: !11521)
!11535 = !DILocation(line: 353, column: 8, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11537, file: !11481, line: 353, column: 8)
!11537 = distinct !DILexicalBlock(scope: !11533, file: !11481, line: 352, column: 3)
!11538 = !DILocation(line: 387, column: 8, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11537, file: !11481, line: 387, column: 8)
!11540 = !DILocation(line: 387, column: 40, scope: !11539)
!11541 = !DILocation(line: 387, column: 8, scope: !11537)
!11542 = !DILocation(line: 407, column: 26, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !11481, line: 407, column: 10)
!11544 = distinct !DILexicalBlock(scope: !11539, file: !11481, line: 388, column: 5)
!11545 = !DILocation(line: 407, column: 55, scope: !11543)
!11546 = !DILocation(line: 413, column: 28, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11548, file: !11481, line: 413, column: 12)
!11548 = distinct !DILexicalBlock(scope: !11543, file: !11481, line: 412, column: 7)
!11549 = !DILocation(line: 413, column: 57, scope: !11547)
!11550 = !DILocation(line: 420, column: 8, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11537, file: !11481, line: 420, column: 8)
!11552 = !DILocation(line: 420, column: 40, scope: !11551)
!11553 = !DILocation(line: 420, column: 8, scope: !11537)
!11554 = !DILocation(line: 429, column: 26, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11556, file: !11481, line: 429, column: 10)
!11556 = distinct !DILexicalBlock(scope: !11551, file: !11481, line: 421, column: 5)
!11557 = !DILocation(line: 429, column: 55, scope: !11555)
!11558 = !DILocation(line: 435, column: 28, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11560, file: !11481, line: 435, column: 12)
!11560 = distinct !DILexicalBlock(scope: !11555, file: !11481, line: 434, column: 7)
!11561 = !DILocation(line: 435, column: 57, scope: !11559)
!11562 = !DILocation(line: 0, scope: !11537)
!11563 = !DILocation(line: 444, column: 5, scope: !11537)
!11564 = !DILocation(line: 448, column: 5, scope: !11537)
!11565 = !DILocation(line: 451, column: 18, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11537, file: !11481, line: 449, column: 5)
!11567 = !DILocation(line: 452, column: 12, scope: !11566)
!11568 = !DILocation(line: 453, column: 26, scope: !11537)
!11569 = !DILocation(line: 453, column: 38, scope: !11537)
!11570 = !DILocation(line: 453, column: 5, scope: !11566)
!11571 = distinct !{!11571, !11564, !11572}
!11572 = !DILocation(line: 453, column: 54, scope: !11537)
!11573 = !DILocation(line: 0, scope: !11533)
!11574 = !DILocation(line: 464, column: 3, scope: !11521)
!11575 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11576, file: !11576, line: 519, type: !6452, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11576 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11577 = !DILocation(line: 521, column: 21, scope: !11575)
!11578 = !DILocation(line: 521, column: 3, scope: !11575)
!11579 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6212, file: !6212, line: 1543, type: !6462, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11580)
!11580 = !{!11581}
!11581 = !DILocalVariable(name: "Latency", arg: 1, scope: !11579, file: !6212, line: 1543, type: !156)
!11582 = !DILocation(line: 0, scope: !11579)
!11583 = !DILocation(line: 1545, column: 3, scope: !11579)
!11584 = !DILocation(line: 1546, column: 1, scope: !11579)
!11585 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6212, file: !6212, line: 1569, type: !6452, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11586 = !DILocation(line: 1571, column: 21, scope: !11585)
!11587 = !DILocation(line: 1571, column: 3, scope: !11585)
!11588 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11481, file: !11481, line: 483, type: !11589, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11605)
!11589 = !DISubroutineType(types: !11590)
!11590 = !{!11524, !11591, !11598}
!11591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11592, size: 32)
!11592 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11488, line: 114, baseType: !11593)
!11593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11488, line: 94, size: 96, elements: !11594)
!11594 = !{!11595, !11596, !11597}
!11595 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11593, file: !11488, line: 96, baseType: !156, size: 32)
!11596 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11593, file: !11488, line: 102, baseType: !156, size: 32, offset: 32)
!11597 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11593, file: !11488, line: 109, baseType: !156, size: 32, offset: 64)
!11598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11599, size: 32)
!11599 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11488, line: 139, baseType: !11600)
!11600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11488, line: 119, size: 96, elements: !11601)
!11601 = !{!11602, !11603, !11604}
!11602 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11600, file: !11488, line: 121, baseType: !156, size: 32)
!11603 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11600, file: !11488, line: 127, baseType: !156, size: 32, offset: 32)
!11604 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11600, file: !11488, line: 133, baseType: !156, size: 32, offset: 64)
!11605 = !{!11606, !11607, !11608, !11609}
!11606 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11588, file: !11481, line: 483, type: !11591)
!11607 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11588, file: !11481, line: 484, type: !11598)
!11608 = !DILocalVariable(name: "status", scope: !11588, file: !11481, line: 486, type: !11524)
!11609 = !DILocalVariable(name: "pllfreq", scope: !11588, file: !11481, line: 487, type: !156)
!11610 = !DILocation(line: 0, scope: !11588)
!11611 = !DILocation(line: 490, column: 6, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11588, file: !11481, line: 490, column: 6)
!11613 = !DILocation(line: 490, column: 25, scope: !11612)
!11614 = !DILocation(line: 490, column: 6, scope: !11588)
!11615 = !DILocation(line: 493, column: 15, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11612, file: !11481, line: 491, column: 3)
!11617 = !DILocation(line: 496, column: 8, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11616, file: !11481, line: 496, column: 8)
!11619 = !DILocation(line: 496, column: 29, scope: !11618)
!11620 = !DILocation(line: 496, column: 8, scope: !11616)
!11621 = !DILocation(line: 498, column: 7, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11618, file: !11481, line: 497, column: 5)
!11623 = !DILocation(line: 499, column: 7, scope: !11622)
!11624 = !DILocation(line: 499, column: 14, scope: !11622)
!11625 = !DILocation(line: 499, column: 35, scope: !11622)
!11626 = distinct !{!11626, !11623, !11627}
!11627 = !DILocation(line: 502, column: 7, scope: !11622)
!11628 = !DILocation(line: 506, column: 76, scope: !11616)
!11629 = !DILocation(line: 506, column: 103, scope: !11616)
!11630 = !DILocation(line: 507, column: 54, scope: !11616)
!11631 = !DILocation(line: 506, column: 5, scope: !11616)
!11632 = !DILocation(line: 510, column: 14, scope: !11616)
!11633 = !DILocation(line: 511, column: 3, scope: !11616)
!11634 = !DILocation(line: 0, scope: !11612)
!11635 = !DILocation(line: 518, column: 3, scope: !11588)
!11636 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11481, file: !11481, line: 642, type: !11637, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11639)
!11637 = !DISubroutineType(types: !11638)
!11638 = !{!11524}
!11639 = !{!11640}
!11640 = !DILocalVariable(name: "status", scope: !11636, file: !11481, line: 644, type: !11524)
!11641 = !DILocation(line: 0, scope: !11636)
!11642 = !DILocation(line: 647, column: 6, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11636, file: !11481, line: 647, column: 6)
!11644 = !DILocation(line: 647, column: 27, scope: !11643)
!11645 = !DILocation(line: 663, column: 6, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11636, file: !11481, line: 663, column: 6)
!11647 = !DILocation(line: 663, column: 30, scope: !11646)
!11648 = !DILocation(line: 663, column: 6, scope: !11636)
!11649 = !DILocation(line: 669, column: 3, scope: !11636)
!11650 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11481, file: !11481, line: 611, type: !11651, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11653)
!11651 = !DISubroutineType(types: !11652)
!11652 = !{!156, !156, !11591}
!11653 = !{!11654, !11655, !11656}
!11654 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11650, file: !11481, line: 611, type: !156)
!11655 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11650, file: !11481, line: 611, type: !11591)
!11656 = !DILocalVariable(name: "pllfreq", scope: !11650, file: !11481, line: 613, type: !156)
!11657 = !DILocation(line: 0, scope: !11650)
!11658 = !DILocation(line: 622, column: 56, scope: !11650)
!11659 = !DILocation(line: 622, column: 61, scope: !11650)
!11660 = !DILocation(line: 622, column: 32, scope: !11650)
!11661 = !DILocation(line: 626, column: 45, scope: !11650)
!11662 = !DILocation(line: 626, column: 50, scope: !11650)
!11663 = !DILocation(line: 626, column: 21, scope: !11650)
!11664 = !DILocation(line: 630, column: 47, scope: !11650)
!11665 = !DILocation(line: 630, column: 82, scope: !11650)
!11666 = !DILocation(line: 630, column: 21, scope: !11650)
!11667 = !DILocation(line: 633, column: 3, scope: !11650)
!11668 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8465, file: !8465, line: 3007, type: !6452, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11669 = !DILocation(line: 3009, column: 11, scope: !11668)
!11670 = !DILocation(line: 3009, column: 44, scope: !11668)
!11671 = !DILocation(line: 3009, column: 3, scope: !11668)
!11672 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8465, file: !8465, line: 2987, type: !365, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11673 = !DILocation(line: 2989, column: 3, scope: !11672)
!11674 = !DILocation(line: 2990, column: 1, scope: !11672)
!11675 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8465, file: !8465, line: 4304, type: !8599, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11676)
!11676 = !{!11677, !11678, !11679, !11680}
!11677 = !DILocalVariable(name: "Source", arg: 1, scope: !11675, file: !8465, line: 4304, type: !156)
!11678 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11675, file: !8465, line: 4304, type: !156)
!11679 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11675, file: !8465, line: 4304, type: !156)
!11680 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11675, file: !8465, line: 4304, type: !156)
!11681 = !DILocation(line: 0, scope: !11675)
!11682 = !DILocation(line: 4306, column: 3, scope: !11675)
!11683 = !DILocation(line: 4308, column: 3, scope: !11675)
!11684 = !DILocation(line: 4312, column: 1, scope: !11675)
!11685 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11481, file: !11481, line: 681, type: !11686, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11688)
!11686 = !DISubroutineType(types: !11687)
!11687 = !{!11524, !156, !11598}
!11688 = !{!11689, !11690, !11691, !11692}
!11689 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11685, file: !11481, line: 681, type: !156)
!11690 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11685, file: !11481, line: 681, type: !11598)
!11691 = !DILocalVariable(name: "status", scope: !11685, file: !11481, line: 683, type: !11524)
!11692 = !DILocalVariable(name: "hclk_frequency", scope: !11685, file: !11481, line: 684, type: !156)
!11693 = !DILocation(line: 0, scope: !11685)
!11694 = !DILocation(line: 691, column: 20, scope: !11685)
!11695 = !DILocation(line: 694, column: 6, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11685, file: !11481, line: 694, column: 6)
!11697 = !DILocation(line: 694, column: 22, scope: !11696)
!11698 = !DILocation(line: 694, column: 6, scope: !11685)
!11699 = !DILocation(line: 697, column: 14, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11696, file: !11481, line: 695, column: 3)
!11701 = !DILocation(line: 701, column: 13, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11685, file: !11481, line: 701, column: 6)
!11703 = !DILocation(line: 701, column: 6, scope: !11685)
!11704 = !DILocation(line: 704, column: 5, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11702, file: !11481, line: 702, column: 3)
!11706 = !DILocation(line: 705, column: 5, scope: !11705)
!11707 = !DILocation(line: 705, column: 12, scope: !11705)
!11708 = !DILocation(line: 705, column: 33, scope: !11705)
!11709 = distinct !{!11709, !11706, !11710}
!11710 = !DILocation(line: 708, column: 5, scope: !11705)
!11711 = !DILocation(line: 711, column: 49, scope: !11705)
!11712 = !DILocation(line: 711, column: 5, scope: !11705)
!11713 = !DILocation(line: 712, column: 5, scope: !11705)
!11714 = !DILocation(line: 713, column: 5, scope: !11705)
!11715 = !DILocation(line: 713, column: 12, scope: !11705)
!11716 = !DILocation(line: 713, column: 37, scope: !11705)
!11717 = distinct !{!11717, !11714, !11718}
!11718 = !DILocation(line: 716, column: 5, scope: !11705)
!11719 = !DILocation(line: 719, column: 50, scope: !11705)
!11720 = !DILocation(line: 719, column: 5, scope: !11705)
!11721 = !DILocation(line: 720, column: 50, scope: !11705)
!11722 = !DILocation(line: 720, column: 5, scope: !11705)
!11723 = !DILocation(line: 721, column: 3, scope: !11705)
!11724 = !DILocation(line: 724, column: 6, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11685, file: !11481, line: 724, column: 6)
!11726 = !DILocation(line: 724, column: 22, scope: !11725)
!11727 = !DILocation(line: 724, column: 6, scope: !11685)
!11728 = !DILocation(line: 727, column: 14, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11725, file: !11481, line: 725, column: 3)
!11730 = !DILocation(line: 728, column: 3, scope: !11729)
!11731 = !DILocation(line: 731, column: 13, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11685, file: !11481, line: 731, column: 6)
!11733 = !DILocation(line: 731, column: 6, scope: !11685)
!11734 = !DILocation(line: 733, column: 5, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11732, file: !11481, line: 732, column: 3)
!11736 = !DILocation(line: 734, column: 3, scope: !11735)
!11737 = !DILocation(line: 736, column: 3, scope: !11685)
!11738 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8465, file: !8465, line: 4184, type: !365, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11739 = !DILocation(line: 4186, column: 3, scope: !11738)
!11740 = !DILocation(line: 4187, column: 1, scope: !11738)
!11741 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8465, file: !8465, line: 4205, type: !6452, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11742 = !DILocation(line: 4207, column: 11, scope: !11741)
!11743 = !DILocation(line: 4207, column: 44, scope: !11741)
!11744 = !DILocation(line: 4207, column: 3, scope: !11741)
!11745 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8465, file: !8465, line: 3224, type: !6462, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11746)
!11746 = !{!11747}
!11747 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11745, file: !8465, line: 3224, type: !156)
!11748 = !DILocation(line: 0, scope: !11745)
!11749 = !DILocation(line: 3226, column: 3, scope: !11745)
!11750 = !DILocation(line: 3227, column: 1, scope: !11745)
!11751 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8465, file: !8465, line: 3188, type: !6462, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11752)
!11752 = !{!11753}
!11753 = !DILocalVariable(name: "Source", arg: 1, scope: !11751, file: !8465, line: 3188, type: !156)
!11754 = !DILocation(line: 0, scope: !11751)
!11755 = !DILocation(line: 3190, column: 3, scope: !11751)
!11756 = !DILocation(line: 3191, column: 1, scope: !11751)
!11757 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8465, file: !8465, line: 3204, type: !6452, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11758 = !DILocation(line: 3206, column: 21, scope: !11757)
!11759 = !DILocation(line: 3206, column: 3, scope: !11757)
!11760 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8465, file: !8465, line: 3240, type: !6462, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11761)
!11761 = !{!11762}
!11762 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11760, file: !8465, line: 3240, type: !156)
!11763 = !DILocation(line: 0, scope: !11760)
!11764 = !DILocation(line: 3242, column: 3, scope: !11760)
!11765 = !DILocation(line: 3243, column: 1, scope: !11760)
!11766 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8465, file: !8465, line: 3256, type: !6462, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11767)
!11767 = !{!11768}
!11768 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11766, file: !8465, line: 3256, type: !156)
!11769 = !DILocation(line: 0, scope: !11766)
!11770 = !DILocation(line: 3258, column: 3, scope: !11766)
!11771 = !DILocation(line: 3259, column: 1, scope: !11766)
!11772 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8465, file: !8465, line: 5153, type: !6452, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11773 = !DILocation(line: 5155, column: 11, scope: !11772)
!11774 = !DILocation(line: 5155, column: 47, scope: !11772)
!11775 = !DILocation(line: 5155, column: 3, scope: !11772)
!11776 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11481, file: !11481, line: 540, type: !11777, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !11779)
!11777 = !DISubroutineType(types: !11778)
!11778 = !{!11524, !156, !156, !11591, !11598}
!11779 = !{!11780, !11781, !11782, !11783, !11784, !11785}
!11780 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11776, file: !11481, line: 540, type: !156)
!11781 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11776, file: !11481, line: 540, type: !156)
!11782 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11776, file: !11481, line: 541, type: !11591)
!11783 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11776, file: !11481, line: 541, type: !11598)
!11784 = !DILocalVariable(name: "status", scope: !11776, file: !11481, line: 543, type: !11524)
!11785 = !DILocalVariable(name: "pllfreq", scope: !11776, file: !11481, line: 544, type: !156)
!11786 = !DILocation(line: 0, scope: !11776)
!11787 = !DILocation(line: 551, column: 6, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11776, file: !11481, line: 551, column: 6)
!11789 = !DILocation(line: 551, column: 25, scope: !11788)
!11790 = !DILocation(line: 551, column: 6, scope: !11776)
!11791 = !DILocation(line: 554, column: 15, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11788, file: !11481, line: 552, column: 3)
!11793 = !DILocation(line: 557, column: 8, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11792, file: !11481, line: 557, column: 8)
!11795 = !DILocation(line: 557, column: 29, scope: !11794)
!11796 = !DILocation(line: 557, column: 8, scope: !11792)
!11797 = !DILocation(line: 560, column: 20, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11799, file: !11481, line: 560, column: 10)
!11799 = distinct !DILexicalBlock(scope: !11794, file: !11481, line: 558, column: 5)
!11800 = !DILocation(line: 560, column: 10, scope: !11799)
!11801 = !DILocation(line: 562, column: 9, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11798, file: !11481, line: 561, column: 7)
!11803 = !DILocation(line: 563, column: 7, scope: !11802)
!11804 = !DILocation(line: 566, column: 9, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11798, file: !11481, line: 565, column: 7)
!11806 = !DILocation(line: 570, column: 7, scope: !11799)
!11807 = !DILocation(line: 571, column: 7, scope: !11799)
!11808 = !DILocation(line: 571, column: 14, scope: !11799)
!11809 = !DILocation(line: 571, column: 35, scope: !11799)
!11810 = distinct !{!11810, !11807, !11811}
!11811 = !DILocation(line: 574, column: 7, scope: !11799)
!11812 = !DILocation(line: 578, column: 76, scope: !11792)
!11813 = !DILocation(line: 578, column: 103, scope: !11792)
!11814 = !DILocation(line: 579, column: 54, scope: !11792)
!11815 = !DILocation(line: 578, column: 5, scope: !11792)
!11816 = !DILocation(line: 582, column: 14, scope: !11792)
!11817 = !DILocation(line: 583, column: 3, scope: !11792)
!11818 = !DILocation(line: 0, scope: !11788)
!11819 = !DILocation(line: 590, column: 3, scope: !11776)
!11820 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8465, file: !8465, line: 2969, type: !6452, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11821 = !DILocation(line: 2971, column: 11, scope: !11820)
!11822 = !DILocation(line: 2971, column: 44, scope: !11820)
!11823 = !DILocation(line: 2971, column: 3, scope: !11820)
!11824 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8465, file: !8465, line: 2929, type: !365, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11825 = !DILocation(line: 2931, column: 3, scope: !11824)
!11826 = !DILocation(line: 2932, column: 1, scope: !11824)
!11827 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8465, file: !8465, line: 2939, type: !365, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11828 = !DILocation(line: 2941, column: 3, scope: !11827)
!11829 = !DILocation(line: 2942, column: 1, scope: !11827)
!11830 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8465, file: !8465, line: 2949, type: !365, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2149)
!11831 = !DILocation(line: 2951, column: 3, scope: !11830)
!11832 = !DILocation(line: 2952, column: 1, scope: !11830)
!11833 = distinct !DISubprogram(name: "z_device_state_init", scope: !11834, file: !11834, line: 23, type: !365, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !11835)
!11834 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11835 = !{!11836}
!11836 = !DILocalVariable(name: "dev", scope: !11833, file: !11834, line: 25, type: !11837)
!11837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11838, size: 32)
!11838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11839)
!11839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !11840)
!11840 = !{!11841, !11842, !11843, !11844, !11850, !11851}
!11841 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11839, file: !130, line: 380, baseType: !133, size: 32)
!11842 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11839, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!11843 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11839, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!11844 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11839, file: !130, line: 386, baseType: !11845, size: 32, offset: 96)
!11845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11846, size: 32)
!11846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !11847)
!11847 = !{!11848, !11849}
!11848 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11846, file: !130, line: 359, baseType: !143, size: 8)
!11849 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11846, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11850 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11839, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!11851 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11839, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!11852 = !DILocation(line: 0, scope: !11833)
!11853 = !DILocation(line: 31, column: 1, scope: !11833)
!11854 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11834, file: !11834, line: 33, type: !11855, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !11857)
!11855 = !DISubroutineType(types: !11856)
!11856 = !{!11837, !133}
!11857 = !{!11858, !11859}
!11858 = !DILocalVariable(name: "name", arg: 1, scope: !11854, file: !11834, line: 33, type: !133)
!11859 = !DILocalVariable(name: "dev", scope: !11854, file: !11834, line: 35, type: !11837)
!11860 = !DILocation(line: 0, scope: !11854)
!11861 = !DILocation(line: 40, column: 12, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11854, file: !11834, line: 40, column: 6)
!11863 = !DILocation(line: 40, column: 21, scope: !11862)
!11864 = !DILocation(line: 40, column: 25, scope: !11862)
!11865 = !DILocation(line: 40, column: 33, scope: !11862)
!11866 = !DILocation(line: 40, column: 6, scope: !11854)
!11867 = !DILocation(line: 55, column: 2, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11854, file: !11834, line: 55, column: 2)
!11869 = !DILocation(line: 50, column: 7, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11871, file: !11834, line: 50, column: 7)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !11834, line: 49, column: 57)
!11872 = distinct !DILexicalBlock(scope: !11873, file: !11834, line: 49, column: 2)
!11873 = distinct !DILexicalBlock(scope: !11854, file: !11834, line: 49, column: 2)
!11874 = !DILocation(line: 50, column: 30, scope: !11870)
!11875 = !DILocation(line: 50, column: 39, scope: !11870)
!11876 = !DILocation(line: 50, column: 44, scope: !11870)
!11877 = !DILocation(line: 50, column: 7, scope: !11871)
!11878 = !DILocation(line: 49, column: 53, scope: !11872)
!11879 = !DILocation(line: 49, column: 33, scope: !11872)
!11880 = !DILocation(line: 49, column: 2, scope: !11873)
!11881 = distinct !{!11881, !11880, !11882}
!11882 = !DILocation(line: 53, column: 2, scope: !11873)
!11883 = !DILocation(line: 56, column: 7, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !11834, line: 56, column: 7)
!11885 = distinct !DILexicalBlock(scope: !11886, file: !11834, line: 55, column: 57)
!11886 = distinct !DILexicalBlock(scope: !11868, file: !11834, line: 55, column: 2)
!11887 = !DILocation(line: 56, column: 30, scope: !11884)
!11888 = !DILocation(line: 56, column: 52, scope: !11884)
!11889 = !DILocation(line: 56, column: 34, scope: !11884)
!11890 = !DILocation(line: 56, column: 58, scope: !11884)
!11891 = !DILocation(line: 56, column: 7, scope: !11885)
!11892 = !DILocation(line: 55, column: 53, scope: !11886)
!11893 = !DILocation(line: 55, column: 33, scope: !11886)
!11894 = distinct !{!11894, !11867, !11895}
!11895 = !DILocation(line: 59, column: 2, scope: !11868)
!11896 = !DILocation(line: 62, column: 1, scope: !11854)
!11897 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11834, file: !11834, line: 93, type: !11898, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !11900)
!11898 = !DISubroutineType(types: !11899)
!11899 = !{!146, !11837}
!11900 = !{!11901}
!11901 = !DILocalVariable(name: "dev", arg: 1, scope: !11897, file: !11834, line: 93, type: !11837)
!11902 = !DILocation(line: 0, scope: !11897)
!11903 = !DILocation(line: 99, column: 10, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11897, file: !11834, line: 99, column: 6)
!11905 = !DILocation(line: 99, column: 6, scope: !11897)
!11906 = !DILocation(line: 103, column: 14, scope: !11897)
!11907 = !DILocation(line: 103, column: 21, scope: !11897)
!11908 = !DILocation(line: 103, column: 33, scope: !11897)
!11909 = !DILocation(line: 103, column: 49, scope: !11897)
!11910 = !DILocation(line: 103, column: 58, scope: !11897)
!11911 = !DILocation(line: 104, column: 1, scope: !11897)
!11912 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11834, file: !11834, line: 87, type: !11913, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !11916)
!11913 = !DISubroutineType(types: !11914)
!11914 = !{!315, !11915}
!11915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11837, size: 32)
!11916 = !{!11917}
!11917 = !DILocalVariable(name: "devices", arg: 1, scope: !11912, file: !11834, line: 87, type: !11915)
!11918 = !DILocation(line: 0, scope: !11912)
!11919 = !DILocation(line: 89, column: 11, scope: !11912)
!11920 = !DILocation(line: 90, column: 2, scope: !11912)
!11921 = distinct !DISubprogram(name: "device_required_foreach", scope: !11834, file: !11834, line: 125, type: !11922, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !11928)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{!118, !11837, !11924, !117}
!11924 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !130, line: 471, baseType: !11925)
!11925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11926, size: 32)
!11926 = !DISubroutineType(types: !11927)
!11927 = !{!118, !11837, !117}
!11928 = !{!11929, !11930, !11931, !11932, !11933}
!11929 = !DILocalVariable(name: "dev", arg: 1, scope: !11921, file: !11834, line: 125, type: !11837)
!11930 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11921, file: !11834, line: 126, type: !11924)
!11931 = !DILocalVariable(name: "context", arg: 3, scope: !11921, file: !11834, line: 127, type: !117)
!11932 = !DILocalVariable(name: "handle_count", scope: !11921, file: !11834, line: 129, type: !315)
!11933 = !DILocalVariable(name: "handles", scope: !11921, file: !11834, line: 130, type: !149)
!11934 = !DILocation(line: 0, scope: !11921)
!11935 = !DILocation(line: 129, column: 2, scope: !11921)
!11936 = !DILocation(line: 129, column: 9, scope: !11921)
!11937 = !DILocation(line: 130, column: 35, scope: !11921)
!11938 = !DILocation(line: 132, column: 33, scope: !11921)
!11939 = !DILocation(line: 132, column: 9, scope: !11921)
!11940 = !DILocation(line: 133, column: 1, scope: !11921)
!11941 = !DILocation(line: 132, column: 2, scope: !11921)
!11942 = distinct !DISubprogram(name: "device_required_handles_get", scope: !130, file: !130, line: 493, type: !11943, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !11945)
!11943 = !DISubroutineType(types: !11944)
!11944 = !{!149, !11837, !2632}
!11945 = !{!11946, !11947, !11948, !11949}
!11946 = !DILocalVariable(name: "dev", arg: 1, scope: !11942, file: !130, line: 493, type: !11837)
!11947 = !DILocalVariable(name: "count", arg: 2, scope: !11942, file: !130, line: 493, type: !2632)
!11948 = !DILocalVariable(name: "rv", scope: !11942, file: !130, line: 495, type: !149)
!11949 = !DILocalVariable(name: "i", scope: !11950, file: !130, line: 498, type: !315)
!11950 = distinct !DILexicalBlock(scope: !11951, file: !130, line: 497, column: 18)
!11951 = distinct !DILexicalBlock(scope: !11942, file: !130, line: 497, column: 6)
!11952 = !DILocation(line: 0, scope: !11942)
!11953 = !DILocation(line: 495, column: 35, scope: !11942)
!11954 = !DILocation(line: 497, column: 9, scope: !11951)
!11955 = !DILocation(line: 497, column: 6, scope: !11942)
!11956 = !DILocation(line: 0, scope: !11950)
!11957 = !DILocation(line: 500, column: 11, scope: !11950)
!11958 = !DILocation(line: 500, column: 40, scope: !11950)
!11959 = !DILocation(line: 502, column: 4, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11950, file: !130, line: 501, column: 40)
!11961 = distinct !{!11961, !11962, !11963}
!11962 = !DILocation(line: 500, column: 3, scope: !11950)
!11963 = !DILocation(line: 503, column: 3, scope: !11950)
!11964 = !DILocation(line: 504, column: 10, scope: !11950)
!11965 = !DILocation(line: 505, column: 2, scope: !11950)
!11966 = !DILocation(line: 507, column: 2, scope: !11942)
!11967 = distinct !DISubprogram(name: "device_visitor", scope: !11834, file: !11834, line: 106, type: !11968, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !11970)
!11968 = !DISubroutineType(types: !11969)
!11969 = !{!118, !149, !315, !11924, !117}
!11970 = !{!11971, !11972, !11973, !11974, !11975, !11977, !11980, !11981}
!11971 = !DILocalVariable(name: "handles", arg: 1, scope: !11967, file: !11834, line: 106, type: !149)
!11972 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11967, file: !11834, line: 107, type: !315)
!11973 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11967, file: !11834, line: 108, type: !11924)
!11974 = !DILocalVariable(name: "context", arg: 4, scope: !11967, file: !11834, line: 109, type: !117)
!11975 = !DILocalVariable(name: "i", scope: !11976, file: !11834, line: 112, type: !315)
!11976 = distinct !DILexicalBlock(scope: !11967, file: !11834, line: 112, column: 2)
!11977 = !DILocalVariable(name: "dh", scope: !11978, file: !11834, line: 113, type: !151)
!11978 = distinct !DILexicalBlock(scope: !11979, file: !11834, line: 112, column: 44)
!11979 = distinct !DILexicalBlock(scope: !11976, file: !11834, line: 112, column: 2)
!11980 = !DILocalVariable(name: "rdev", scope: !11978, file: !11834, line: 114, type: !11837)
!11981 = !DILocalVariable(name: "rc", scope: !11978, file: !11834, line: 115, type: !118)
!11982 = !DILocation(line: 0, scope: !11967)
!11983 = !DILocation(line: 0, scope: !11976)
!11984 = !DILocation(line: 112, column: 23, scope: !11979)
!11985 = !DILocation(line: 112, column: 2, scope: !11976)
!11986 = distinct !{!11986, !11985, !11987}
!11987 = !DILocation(line: 120, column: 2, scope: !11976)
!11988 = !DILocation(line: 113, column: 24, scope: !11978)
!11989 = !DILocation(line: 0, scope: !11978)
!11990 = !DILocation(line: 114, column: 31, scope: !11978)
!11991 = !DILocation(line: 115, column: 12, scope: !11978)
!11992 = !DILocation(line: 117, column: 10, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11978, file: !11834, line: 117, column: 7)
!11994 = !DILocation(line: 112, column: 39, scope: !11979)
!11995 = !DILocation(line: 123, column: 1, scope: !11967)
!11996 = distinct !DISubprogram(name: "device_from_handle", scope: !130, file: !130, line: 439, type: !11997, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !11999)
!11997 = !DISubroutineType(types: !11998)
!11998 = !{!11837, !151}
!11999 = !{!12000, !12001, !12002}
!12000 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11996, file: !130, line: 439, type: !151)
!12001 = !DILocalVariable(name: "dev", scope: !11996, file: !130, line: 443, type: !11837)
!12002 = !DILocalVariable(name: "numdev", scope: !11996, file: !130, line: 444, type: !315)
!12003 = !DILocation(line: 0, scope: !11996)
!12004 = !DILocation(line: 446, column: 7, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11996, file: !130, line: 446, column: 6)
!12006 = !DILocation(line: 446, column: 18, scope: !12005)
!12007 = !DILocation(line: 446, column: 23, scope: !12005)
!12008 = !DILocation(line: 450, column: 2, scope: !11996)
!12009 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11834, file: !11834, line: 135, type: !11922, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !12010)
!12010 = !{!12011, !12012, !12013, !12014, !12015}
!12011 = !DILocalVariable(name: "dev", arg: 1, scope: !12009, file: !11834, line: 135, type: !11837)
!12012 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12009, file: !11834, line: 136, type: !11924)
!12013 = !DILocalVariable(name: "context", arg: 3, scope: !12009, file: !11834, line: 137, type: !117)
!12014 = !DILocalVariable(name: "handle_count", scope: !12009, file: !11834, line: 139, type: !315)
!12015 = !DILocalVariable(name: "handles", scope: !12009, file: !11834, line: 140, type: !149)
!12016 = !DILocation(line: 0, scope: !12009)
!12017 = !DILocation(line: 139, column: 2, scope: !12009)
!12018 = !DILocation(line: 139, column: 9, scope: !12009)
!12019 = !DILocation(line: 140, column: 35, scope: !12009)
!12020 = !DILocation(line: 142, column: 33, scope: !12009)
!12021 = !DILocation(line: 142, column: 9, scope: !12009)
!12022 = !DILocation(line: 143, column: 1, scope: !12009)
!12023 = !DILocation(line: 142, column: 2, scope: !12009)
!12024 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !130, file: !130, line: 573, type: !11943, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !12025)
!12025 = !{!12026, !12027, !12028, !12029, !12030}
!12026 = !DILocalVariable(name: "dev", arg: 1, scope: !12024, file: !130, line: 573, type: !11837)
!12027 = !DILocalVariable(name: "count", arg: 2, scope: !12024, file: !130, line: 573, type: !2632)
!12028 = !DILocalVariable(name: "rv", scope: !12024, file: !130, line: 575, type: !149)
!12029 = !DILocalVariable(name: "region", scope: !12024, file: !130, line: 576, type: !315)
!12030 = !DILocalVariable(name: "i", scope: !12024, file: !130, line: 577, type: !315)
!12031 = !DILocation(line: 0, scope: !12024)
!12032 = !DILocation(line: 575, column: 35, scope: !12024)
!12033 = !DILocation(line: 579, column: 9, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12024, file: !130, line: 579, column: 6)
!12035 = !DILocation(line: 579, column: 6, scope: !12024)
!12036 = !DILocation(line: 582, column: 8, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12038, file: !130, line: 582, column: 8)
!12038 = distinct !DILexicalBlock(scope: !12039, file: !130, line: 581, column: 23)
!12039 = distinct !DILexicalBlock(scope: !12034, file: !130, line: 579, column: 18)
!12040 = !DILocation(line: 582, column: 12, scope: !12037)
!12041 = !DILocation(line: 585, column: 6, scope: !12038)
!12042 = !DILocation(line: 0, scope: !12039)
!12043 = !DILocation(line: 581, column: 17, scope: !12039)
!12044 = !DILocation(line: 581, column: 3, scope: !12039)
!12045 = !DILocation(line: 588, column: 10, scope: !12039)
!12046 = !DILocation(line: 588, column: 16, scope: !12039)
!12047 = !DILocation(line: 589, column: 4, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12039, file: !130, line: 588, column: 39)
!12049 = !DILocation(line: 588, column: 3, scope: !12039)
!12050 = distinct !{!12050, !12049, !12051}
!12051 = !DILocation(line: 590, column: 3, scope: !12039)
!12052 = !DILocation(line: 591, column: 10, scope: !12039)
!12053 = !DILocation(line: 592, column: 2, scope: !12039)
!12054 = !DILocation(line: 575, column: 25, scope: !12024)
!12055 = !DILocation(line: 594, column: 2, scope: !12024)
!12056 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1940, file: !1940, line: 49, type: !12057, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !2149)
!12057 = !DISubroutineType(types: !12058)
!12058 = !{!2625}
!12059 = !DILocation(line: 51, column: 10, scope: !12056)
!12060 = !DILocation(line: 51, column: 20, scope: !12056)
!12061 = !DILocation(line: 51, column: 2, scope: !12056)
!12062 = distinct !DISubprogram(name: "coredump", scope: !3145, file: !3145, line: 209, type: !12063, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12211)
!12063 = !DISubroutineType(types: !12064)
!12064 = !{null, !32, !12065, !12109}
!12065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12066, size: 32)
!12066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12067)
!12067 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2759, line: 141, baseType: !12068)
!12068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2759, line: 97, size: 256, elements: !12069)
!12069 = !{!12070}
!12070 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12068, file: !2759, line: 107, baseType: !12071, size: 256)
!12071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2759, line: 98, size: 256, elements: !12072)
!12072 = !{!12073, !12078, !12083, !12088, !12093, !12098, !12103, !12108}
!12073 = !DIDerivedType(tag: DW_TAG_member, scope: !12071, file: !2759, line: 99, baseType: !12074, size: 32)
!12074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12071, file: !2759, line: 99, size: 32, elements: !12075)
!12075 = !{!12076, !12077}
!12076 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12074, file: !2759, line: 99, baseType: !156, size: 32)
!12077 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12074, file: !2759, line: 99, baseType: !156, size: 32)
!12078 = !DIDerivedType(tag: DW_TAG_member, scope: !12071, file: !2759, line: 100, baseType: !12079, size: 32, offset: 32)
!12079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12071, file: !2759, line: 100, size: 32, elements: !12080)
!12080 = !{!12081, !12082}
!12081 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12079, file: !2759, line: 100, baseType: !156, size: 32)
!12082 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12079, file: !2759, line: 100, baseType: !156, size: 32)
!12083 = !DIDerivedType(tag: DW_TAG_member, scope: !12071, file: !2759, line: 101, baseType: !12084, size: 32, offset: 64)
!12084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12071, file: !2759, line: 101, size: 32, elements: !12085)
!12085 = !{!12086, !12087}
!12086 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12084, file: !2759, line: 101, baseType: !156, size: 32)
!12087 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12084, file: !2759, line: 101, baseType: !156, size: 32)
!12088 = !DIDerivedType(tag: DW_TAG_member, scope: !12071, file: !2759, line: 102, baseType: !12089, size: 32, offset: 96)
!12089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12071, file: !2759, line: 102, size: 32, elements: !12090)
!12090 = !{!12091, !12092}
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12089, file: !2759, line: 102, baseType: !156, size: 32)
!12092 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12089, file: !2759, line: 102, baseType: !156, size: 32)
!12093 = !DIDerivedType(tag: DW_TAG_member, scope: !12071, file: !2759, line: 103, baseType: !12094, size: 32, offset: 128)
!12094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12071, file: !2759, line: 103, size: 32, elements: !12095)
!12095 = !{!12096, !12097}
!12096 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12094, file: !2759, line: 103, baseType: !156, size: 32)
!12097 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12094, file: !2759, line: 103, baseType: !156, size: 32)
!12098 = !DIDerivedType(tag: DW_TAG_member, scope: !12071, file: !2759, line: 104, baseType: !12099, size: 32, offset: 160)
!12099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12071, file: !2759, line: 104, size: 32, elements: !12100)
!12100 = !{!12101, !12102}
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12099, file: !2759, line: 104, baseType: !156, size: 32)
!12102 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12099, file: !2759, line: 104, baseType: !156, size: 32)
!12103 = !DIDerivedType(tag: DW_TAG_member, scope: !12071, file: !2759, line: 105, baseType: !12104, size: 32, offset: 192)
!12104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12071, file: !2759, line: 105, size: 32, elements: !12105)
!12105 = !{!12106, !12107}
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12104, file: !2759, line: 105, baseType: !156, size: 32)
!12107 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12104, file: !2759, line: 105, baseType: !156, size: 32)
!12108 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12071, file: !2759, line: 106, baseType: !156, size: 32, offset: 224)
!12109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12110, size: 32)
!12110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !12111)
!12111 = !{!12112, !12170, !12182, !12183, !12184, !12185, !12191, !12206}
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12110, file: !225, line: 247, baseType: !12113, size: 384)
!12113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !12114)
!12114 = !{!12115, !12139, !12146, !12147, !12148, !12157, !12158, !12159}
!12115 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !225, line: 60, baseType: !12116, size: 64)
!12116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !225, line: 60, size: 64, elements: !12117)
!12117 = !{!12118, !12133}
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12116, file: !225, line: 61, baseType: !12119, size: 64)
!12119 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !12120)
!12120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !12121)
!12121 = !{!12122, !12128}
!12122 = !DIDerivedType(tag: DW_TAG_member, scope: !12120, file: !235, line: 38, baseType: !12123, size: 32)
!12123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12120, file: !235, line: 38, size: 32, elements: !12124)
!12124 = !{!12125, !12127}
!12125 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12123, file: !235, line: 39, baseType: !12126, size: 32)
!12126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12120, size: 32)
!12127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12123, file: !235, line: 40, baseType: !12126, size: 32)
!12128 = !DIDerivedType(tag: DW_TAG_member, scope: !12120, file: !235, line: 42, baseType: !12129, size: 32, offset: 32)
!12129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12120, file: !235, line: 42, size: 32, elements: !12130)
!12130 = !{!12131, !12132}
!12131 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12129, file: !235, line: 43, baseType: !12126, size: 32)
!12132 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12129, file: !235, line: 44, baseType: !12126, size: 32)
!12133 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12116, file: !225, line: 62, baseType: !12134, size: 64)
!12134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !12135)
!12135 = !{!12136}
!12136 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12134, file: !251, line: 50, baseType: !12137, size: 64)
!12137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12138, size: 64, elements: !256)
!12138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12134, size: 32)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12113, file: !225, line: 68, baseType: !12140, size: 32, offset: 64)
!12140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12141, size: 32)
!12141 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !12142)
!12142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !12143)
!12143 = !{!12144}
!12144 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12142, file: !261, line: 232, baseType: !12145, size: 64)
!12145 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !12120)
!12146 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12113, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!12147 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12113, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!12148 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !225, line: 90, baseType: !12149, size: 16, offset: 112)
!12149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !225, line: 90, size: 16, elements: !12150)
!12150 = !{!12151, !12156}
!12151 = !DIDerivedType(tag: DW_TAG_member, scope: !12149, file: !225, line: 91, baseType: !12152, size: 16)
!12152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12149, file: !225, line: 91, size: 16, elements: !12153)
!12153 = !{!12154, !12155}
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12152, file: !225, line: 96, baseType: !275, size: 8)
!12155 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12152, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!12156 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12149, file: !225, line: 100, baseType: !279, size: 16)
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12113, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12113, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12113, file: !225, line: 131, baseType: !12160, size: 192, offset: 192)
!12160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !12161)
!12161 = !{!12162, !12163, !12169}
!12162 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12160, file: !261, line: 245, baseType: !12119, size: 64)
!12163 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12160, file: !261, line: 246, baseType: !12164, size: 32, offset: 64)
!12164 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !12165)
!12165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12166, size: 32)
!12166 = !DISubroutineType(types: !12167)
!12167 = !{null, !12168}
!12168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12160, size: 32)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12160, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!12170 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12110, file: !225, line: 250, baseType: !12171, size: 288, offset: 384)
!12171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !12172)
!12172 = !{!12173, !12174, !12175, !12176, !12177, !12178, !12179, !12180, !12181}
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12171, file: !296, line: 26, baseType: !156, size: 32)
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12171, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!12175 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12171, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!12176 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12171, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12171, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12171, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!12179 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12171, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!12180 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12171, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12171, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12110, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12110, file: !225, line: 256, baseType: !12141, size: 64, offset: 704)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12110, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12110, file: !225, line: 300, baseType: !12186, size: 96, offset: 800)
!12186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !12187)
!12187 = !{!12188, !12189, !12190}
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12186, file: !225, line: 153, baseType: !22, size: 32)
!12189 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12186, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!12190 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12186, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!12191 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12110, file: !225, line: 325, baseType: !12192, size: 32, offset: 896)
!12192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12193, size: 32)
!12193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !12194)
!12194 = !{!12195, !12201, !12202}
!12195 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12193, file: !220, line: 5074, baseType: !12196, size: 96)
!12196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !12197)
!12197 = !{!12198, !12199, !12200}
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12196, file: !324, line: 57, baseType: !327, size: 32)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12196, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!12200 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12196, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12193, file: !220, line: 5075, baseType: !12141, size: 64, offset: 96)
!12202 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12193, file: !220, line: 5076, baseType: !12203, size: 32, offset: 160)
!12203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !12204)
!12204 = !{!12205}
!12205 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12203, file: !334, line: 52, baseType: !22, size: 32)
!12206 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12110, file: !225, line: 343, baseType: !12207, size: 64, offset: 928)
!12207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !12208)
!12208 = !{!12209, !12210}
!12209 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12207, file: !296, line: 63, baseType: !156, size: 32)
!12210 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12207, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!12211 = !{!12212, !12213, !12214}
!12212 = !DILocalVariable(name: "reason", arg: 1, scope: !12062, file: !3145, line: 209, type: !32)
!12213 = !DILocalVariable(name: "esf", arg: 2, scope: !12062, file: !3145, line: 209, type: !12065)
!12214 = !DILocalVariable(name: "thread", arg: 3, scope: !12062, file: !3145, line: 210, type: !12109)
!12215 = !DILocation(line: 0, scope: !12062)
!12216 = !DILocation(line: 212, column: 1, scope: !12062)
!12217 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3145, file: !3145, line: 214, type: !12218, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12220)
!12218 = !DISubroutineType(types: !12219)
!12219 = !{null, !22, !22}
!12220 = !{!12221, !12222}
!12221 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12217, file: !3145, line: 214, type: !22)
!12222 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12217, file: !3145, line: 214, type: !22)
!12223 = !DILocation(line: 0, scope: !12217)
!12224 = !DILocation(line: 216, column: 1, scope: !12217)
!12225 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3145, file: !3145, line: 218, type: !12226, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12228)
!12226 = !DISubroutineType(types: !12227)
!12227 = !{null, !1981, !315}
!12228 = !{!12229, !12230}
!12229 = !DILocalVariable(name: "buf", arg: 1, scope: !12225, file: !3145, line: 218, type: !1981)
!12230 = !DILocalVariable(name: "buflen", arg: 2, scope: !12225, file: !3145, line: 218, type: !315)
!12231 = !DILocation(line: 0, scope: !12225)
!12232 = !DILocation(line: 220, column: 1, scope: !12225)
!12233 = distinct !DISubprogram(name: "coredump_query", scope: !3145, file: !3145, line: 222, type: !12234, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12236)
!12234 = !DISubroutineType(types: !12235)
!12235 = !{!118, !3144, !117}
!12236 = !{!12237, !12238}
!12237 = !DILocalVariable(name: "query_id", arg: 1, scope: !12233, file: !3145, line: 222, type: !3144)
!12238 = !DILocalVariable(name: "arg", arg: 2, scope: !12233, file: !3145, line: 222, type: !117)
!12239 = !DILocation(line: 0, scope: !12233)
!12240 = !DILocation(line: 224, column: 2, scope: !12233)
!12241 = distinct !DISubprogram(name: "coredump_cmd", scope: !3145, file: !3145, line: 227, type: !12242, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12244)
!12242 = !DISubroutineType(types: !12243)
!12243 = !{!118, !3151, !117}
!12244 = !{!12245, !12246}
!12245 = !DILocalVariable(name: "query_id", arg: 1, scope: !12241, file: !3145, line: 227, type: !3151)
!12246 = !DILocalVariable(name: "arg", arg: 2, scope: !12241, file: !3145, line: 227, type: !117)
!12247 = !DILocation(line: 0, scope: !12241)
!12248 = !DILocation(line: 229, column: 2, scope: !12241)
!12249 = distinct !DISubprogram(name: "arch_system_halt", scope: !12250, file: !12250, line: 23, type: !6202, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12251)
!12250 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12251 = !{!12252}
!12252 = !DILocalVariable(name: "reason", arg: 1, scope: !12249, file: !12250, line: 23, type: !32)
!12253 = !DILocation(line: 0, scope: !12249)
!12254 = !DILocation(line: 55, column: 2, scope: !12255, inlinedAt: !12259)
!12255 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6191, file: !6191, line: 42, type: !6192, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12256)
!12256 = !{!12257, !12258}
!12257 = !DILocalVariable(name: "key", scope: !12255, file: !6191, line: 44, type: !32)
!12258 = !DILocalVariable(name: "tmp", scope: !12255, file: !6191, line: 53, type: !32)
!12259 = distinct !DILocation(line: 31, column: 8, scope: !12249)
!12260 = !{i64 2041114}
!12261 = !DILocation(line: 0, scope: !12255, inlinedAt: !12259)
!12262 = !DILocation(line: 32, column: 2, scope: !12249)
!12263 = !DILocation(line: 32, column: 2, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12265, file: !12250, line: 32, column: 2)
!12265 = distinct !DILexicalBlock(scope: !12249, file: !12250, line: 32, column: 2)
!12266 = distinct !{!12266, !12267, !12268}
!12267 = !DILocation(line: 32, column: 2, scope: !12265)
!12268 = !DILocation(line: 34, column: 2, scope: !12265)
!12269 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12250, file: !12250, line: 39, type: !12270, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12272)
!12270 = !DISubroutineType(types: !12271)
!12271 = !{null, !32, !12065}
!12272 = !{!12273, !12274}
!12273 = !DILocalVariable(name: "reason", arg: 1, scope: !12269, file: !12250, line: 39, type: !32)
!12274 = !DILocalVariable(name: "esf", arg: 2, scope: !12269, file: !12250, line: 40, type: !12065)
!12275 = !DILocation(line: 0, scope: !12269)
!12276 = !DILocation(line: 46, column: 2, scope: !12269)
!12277 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12250, file: !12250, line: 81, type: !6202, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12278)
!12278 = !{!12279}
!12279 = !DILocalVariable(name: "reason", arg: 1, scope: !12277, file: !12250, line: 81, type: !32)
!12280 = !DILocation(line: 0, scope: !12277)
!12281 = !DILocation(line: 83, column: 2, scope: !12277)
!12282 = distinct !DISubprogram(name: "z_fatal_error", scope: !12250, file: !12250, line: 96, type: !12270, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12283)
!12283 = !{!12284, !12285, !12286, !12287}
!12284 = !DILocalVariable(name: "reason", arg: 1, scope: !12282, file: !12250, line: 96, type: !32)
!12285 = !DILocalVariable(name: "esf", arg: 2, scope: !12282, file: !12250, line: 96, type: !12065)
!12286 = !DILocalVariable(name: "key", scope: !12282, file: !12250, line: 102, type: !32)
!12287 = !DILocalVariable(name: "thread", scope: !12282, file: !12250, line: 103, type: !12109)
!12288 = !DILocation(line: 0, scope: !12282)
!12289 = !DILocation(line: 55, column: 2, scope: !12255, inlinedAt: !12290)
!12290 = distinct !DILocation(line: 102, column: 21, scope: !12282)
!12291 = !DILocation(line: 0, scope: !12255, inlinedAt: !12290)
!12292 = !DILocation(line: 131, column: 2, scope: !12282)
!12293 = !DILocation(line: 147, column: 3, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12295, file: !12250, line: 147, column: 3)
!12295 = distinct !DILexicalBlock(scope: !12296, file: !12250, line: 147, column: 3)
!12296 = distinct !DILexicalBlock(scope: !12297, file: !12250, line: 146, column: 32)
!12297 = distinct !DILexicalBlock(scope: !12282, file: !12250, line: 146, column: 6)
!12298 = !DILocation(line: 147, column: 3, scope: !12295)
!12299 = !DILocation(line: 147, column: 3, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12294, file: !12250, line: 147, column: 3)
!12301 = !DILocation(line: 104, column: 4, scope: !12282)
!12302 = !DILocalVariable(name: "key", arg: 1, scope: !12303, file: !6191, line: 84, type: !32)
!12303 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6191, file: !6191, line: 84, type: !6202, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12304)
!12304 = !{!12302}
!12305 = !DILocation(line: 0, scope: !12303, inlinedAt: !12306)
!12306 = distinct !DILocation(line: 186, column: 2, scope: !12282)
!12307 = !DILocation(line: 95, column: 2, scope: !12303, inlinedAt: !12306)
!12308 = !{i64 2041931}
!12309 = !DILocation(line: 189, column: 3, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12311, file: !12250, line: 188, column: 41)
!12311 = distinct !DILexicalBlock(scope: !12282, file: !12250, line: 188, column: 6)
!12312 = !DILocation(line: 191, column: 1, scope: !12282)
!12313 = distinct !DISubprogram(name: "k_current_get", scope: !220, file: !220, line: 530, type: !12314, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !2149)
!12314 = !DISubroutineType(types: !12315)
!12315 = !{!12316}
!12316 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !12109)
!12317 = !DILocation(line: 535, column: 9, scope: !12313)
!12318 = !DILocation(line: 535, column: 2, scope: !12313)
!12319 = distinct !DISubprogram(name: "k_thread_abort", scope: !3496, file: !3496, line: 188, type: !12320, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12322)
!12320 = !DISubroutineType(types: !12321)
!12321 = !{null, !12316}
!12322 = !{!12323}
!12323 = !DILocalVariable(name: "thread", arg: 1, scope: !12319, file: !3496, line: 188, type: !12316)
!12324 = !DILocation(line: 0, scope: !12319)
!12325 = !DILocation(line: 197, column: 2, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12319, file: !3496, line: 197, column: 2)
!12327 = !{i64 2154157434}
!12328 = !DILocation(line: 198, column: 2, scope: !12319)
!12329 = !DILocation(line: 199, column: 1, scope: !12319)
!12330 = distinct !DISubprogram(name: "z_current_get", scope: !3496, file: !3496, line: 173, type: !12314, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !2149)
!12331 = !DILocation(line: 180, column: 2, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12330, file: !3496, line: 180, column: 2)
!12333 = !{i64 2154157366}
!12334 = !DILocation(line: 181, column: 9, scope: !12330)
!12335 = !DILocation(line: 181, column: 2, scope: !12330)
!12336 = distinct !DISubprogram(name: "z_early_memset", scope: !1948, file: !1948, line: 108, type: !12337, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12339)
!12337 = !DISubroutineType(types: !12338)
!12338 = !{null, !117, !118, !315}
!12339 = !{!12340, !12341, !12342}
!12340 = !DILocalVariable(name: "dst", arg: 1, scope: !12336, file: !1948, line: 108, type: !117)
!12341 = !DILocalVariable(name: "c", arg: 2, scope: !12336, file: !1948, line: 108, type: !118)
!12342 = !DILocalVariable(name: "n", arg: 3, scope: !12336, file: !1948, line: 108, type: !315)
!12343 = !DILocation(line: 0, scope: !12336)
!12344 = !DILocation(line: 110, column: 9, scope: !12336)
!12345 = !DILocation(line: 111, column: 1, scope: !12336)
!12346 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1948, file: !1948, line: 121, type: !12347, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12349)
!12347 = !DISubroutineType(types: !12348)
!12348 = !{null, !117, !13, !315}
!12349 = !{!12350, !12351, !12352}
!12350 = !DILocalVariable(name: "dst", arg: 1, scope: !12346, file: !1948, line: 121, type: !117)
!12351 = !DILocalVariable(name: "src", arg: 2, scope: !12346, file: !1948, line: 121, type: !13)
!12352 = !DILocalVariable(name: "n", arg: 3, scope: !12346, file: !1948, line: 121, type: !315)
!12353 = !DILocation(line: 0, scope: !12346)
!12354 = !DILocation(line: 123, column: 9, scope: !12346)
!12355 = !DILocation(line: 124, column: 1, scope: !12346)
!12356 = distinct !DISubprogram(name: "z_bss_zero", scope: !1948, file: !1948, line: 132, type: !365, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !2149)
!12357 = !DILocation(line: 143, column: 2, scope: !12356)
!12358 = !DILocation(line: 168, column: 1, scope: !12356)
!12359 = distinct !DISubprogram(name: "z_init_cpu", scope: !1948, file: !1948, line: 372, type: !8065, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12360)
!12360 = !{!12361}
!12361 = !DILocalVariable(name: "id", arg: 1, scope: !12359, file: !1948, line: 372, type: !118)
!12362 = !DILocation(line: 0, scope: !12359)
!12363 = !DILocation(line: 374, column: 2, scope: !12359)
!12364 = !DILocation(line: 375, column: 34, scope: !12359)
!12365 = !DILocation(line: 375, column: 19, scope: !12359)
!12366 = !DILocation(line: 375, column: 31, scope: !12359)
!12367 = !DILocation(line: 376, column: 24, scope: !12359)
!12368 = !DILocation(line: 376, column: 19, scope: !12359)
!12369 = !DILocation(line: 376, column: 22, scope: !12359)
!12370 = !DILocation(line: 378, column: 26, scope: !12359)
!12371 = !DILocation(line: 378, column: 4, scope: !12359)
!12372 = !DILocation(line: 378, column: 50, scope: !12359)
!12373 = !DILocation(line: 377, column: 19, scope: !12359)
!12374 = !DILocation(line: 377, column: 29, scope: !12359)
!12375 = !DILocation(line: 384, column: 1, scope: !12359)
!12376 = distinct !DISubprogram(name: "init_idle_thread", scope: !1948, file: !1948, line: 343, type: !8065, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12377)
!12377 = !{!12378, !12379, !12380, !12383}
!12378 = !DILocalVariable(name: "i", arg: 1, scope: !12376, file: !1948, line: 343, type: !118)
!12379 = !DILocalVariable(name: "thread", scope: !12376, file: !1948, line: 345, type: !2041)
!12380 = !DILocalVariable(name: "stack", scope: !12376, file: !1948, line: 346, type: !12381)
!12381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12382, size: 32)
!12382 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !2158)
!12383 = !DILocalVariable(name: "tname", scope: !12376, file: !1948, line: 358, type: !1242)
!12384 = !DILocation(line: 0, scope: !12376)
!12385 = !DILocation(line: 345, column: 29, scope: !12376)
!12386 = !DILocation(line: 346, column: 28, scope: !12376)
!12387 = !DILocation(line: 362, column: 37, scope: !12376)
!12388 = !DILocation(line: 362, column: 36, scope: !12376)
!12389 = !DILocation(line: 361, column: 2, scope: !12376)
!12390 = !DILocation(line: 365, column: 2, scope: !12376)
!12391 = !DILocation(line: 370, column: 1, scope: !12376)
!12392 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !347, file: !347, line: 331, type: !12393, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12395)
!12393 = !DISubroutineType(types: !12394)
!12394 = !{!1242, !12381}
!12395 = !{!12396}
!12396 = !DILocalVariable(name: "sym", arg: 1, scope: !12392, file: !347, line: 331, type: !12381)
!12397 = !DILocation(line: 0, scope: !12392)
!12398 = !DILocation(line: 333, column: 21, scope: !12392)
!12399 = !DILocation(line: 333, column: 2, scope: !12392)
!12400 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12401, file: !12401, line: 155, type: !12402, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12404)
!12401 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12402 = !DISubroutineType(types: !12403)
!12403 = !{null, !2041}
!12404 = !{!12405}
!12405 = !DILocalVariable(name: "thread", arg: 1, scope: !12400, file: !12401, line: 155, type: !2041)
!12406 = !DILocation(line: 0, scope: !12400)
!12407 = !DILocation(line: 157, column: 15, scope: !12400)
!12408 = !DILocation(line: 157, column: 28, scope: !12400)
!12409 = !DILocation(line: 158, column: 1, scope: !12400)
!12410 = distinct !DISubprogram(name: "z_cstart", scope: !1948, file: !1948, line: 501, type: !365, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12411)
!12411 = !{!12412}
!12412 = !DILocalVariable(name: "dummy_thread", scope: !12410, file: !1948, line: 518, type: !2042)
!12413 = !DILocation(line: 507, column: 2, scope: !12410)
!12414 = !DILocation(line: 43, column: 14, scope: !12415, inlinedAt: !12419)
!12415 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12416, file: !12416, line: 40, type: !365, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12417)
!12416 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12417 = !{!12418}
!12418 = !DILocalVariable(name: "msp", scope: !12415, file: !12416, line: 42, type: !156)
!12419 = distinct !DILocation(line: 44, column: 2, scope: !12420, inlinedAt: !12422)
!12420 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12421, file: !12421, line: 42, type: !365, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !2149)
!12421 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12422 = distinct !DILocation(line: 510, column: 2, scope: !12410)
!12423 = !DILocation(line: 43, column: 3, scope: !12415, inlinedAt: !12419)
!12424 = !DILocation(line: 43, column: 60, scope: !12415, inlinedAt: !12419)
!12425 = !DILocation(line: 0, scope: !12415, inlinedAt: !12419)
!12426 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12427, file: !6365, line: 1153, type: !156)
!12427 = distinct !DISubprogram(name: "__set_MSP", scope: !6365, file: !6365, line: 1153, type: !6462, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12428)
!12428 = !{!12426}
!12429 = !DILocation(line: 0, scope: !12427, inlinedAt: !12430)
!12430 = distinct !DILocation(line: 46, column: 2, scope: !12415, inlinedAt: !12419)
!12431 = !DILocation(line: 1155, column: 3, scope: !12427, inlinedAt: !12430)
!12432 = !{i64 2935194}
!12433 = !DILocation(line: 62, column: 11, scope: !12415, inlinedAt: !12419)
!12434 = !DILocation(line: 102, column: 2, scope: !12435, inlinedAt: !12436)
!12435 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7191, file: !7191, line: 97, type: !365, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !2149)
!12436 = distinct !DILocation(line: 45, column: 2, scope: !12420, inlinedAt: !12422)
!12437 = !DILocation(line: 108, column: 2, scope: !12435, inlinedAt: !12436)
!12438 = !DILocation(line: 112, column: 2, scope: !12435, inlinedAt: !12436)
!12439 = !DILocation(line: 113, column: 2, scope: !12435, inlinedAt: !12436)
!12440 = !DILocation(line: 114, column: 2, scope: !12435, inlinedAt: !12436)
!12441 = !DILocation(line: 116, column: 2, scope: !12435, inlinedAt: !12436)
!12442 = !DILocation(line: 123, column: 13, scope: !12435, inlinedAt: !12436)
!12443 = !DILocation(line: 46, column: 2, scope: !12420, inlinedAt: !12422)
!12444 = !DILocation(line: 47, column: 2, scope: !12420, inlinedAt: !12422)
!12445 = !DILocation(line: 174, column: 12, scope: !12446, inlinedAt: !12447)
!12446 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7191, file: !7191, line: 169, type: !365, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !2149)
!12447 = distinct !DILocation(line: 48, column: 2, scope: !12420, inlinedAt: !12422)
!12448 = !DILocation(line: 179, column: 12, scope: !12446, inlinedAt: !12447)
!12449 = !DILocation(line: 50, column: 2, scope: !12420, inlinedAt: !12422)
!12450 = !DILocation(line: 57, column: 2, scope: !12420, inlinedAt: !12422)
!12451 = !DILocation(line: 518, column: 2, scope: !12410)
!12452 = !DILocation(line: 518, column: 18, scope: !12410)
!12453 = !DILocation(line: 520, column: 2, scope: !12410)
!12454 = !DILocation(line: 523, column: 2, scope: !12410)
!12455 = !DILocation(line: 526, column: 2, scope: !12410)
!12456 = !DILocation(line: 527, column: 2, scope: !12410)
!12457 = !DILocation(line: 543, column: 24, scope: !12410)
!12458 = !DILocation(line: 543, column: 2, scope: !12410)
!12459 = !DILocation(line: 0, scope: !2175)
!12460 = !DILocation(line: 246, column: 15, scope: !2193)
!12461 = !DILocation(line: 246, column: 36, scope: !2192)
!12462 = !DILocation(line: 246, column: 2, scope: !2193)
!12463 = !DILocation(line: 247, column: 37, scope: !2191)
!12464 = !DILocation(line: 0, scope: !2191)
!12465 = !DILocation(line: 248, column: 19, scope: !2191)
!12466 = !DILocation(line: 248, column: 12, scope: !2191)
!12467 = !DILocation(line: 250, column: 11, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !2191, file: !1948, line: 250, column: 7)
!12469 = !DILocation(line: 250, column: 7, scope: !2191)
!12470 = !DILocation(line: 254, column: 11, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12472, file: !1948, line: 254, column: 8)
!12472 = distinct !DILexicalBlock(scope: !12468, file: !1948, line: 250, column: 20)
!12473 = !DILocation(line: 254, column: 8, scope: !12472)
!12474 = !DILocation(line: 255, column: 9, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12471, file: !1948, line: 254, column: 17)
!12476 = !DILocation(line: 258, column: 9, scope: !12475)
!12477 = !DILocation(line: 261, column: 28, scope: !12475)
!12478 = !DILocation(line: 261, column: 10, scope: !12475)
!12479 = !DILocation(line: 261, column: 17, scope: !12475)
!12480 = !DILocation(line: 261, column: 26, scope: !12475)
!12481 = !DILocation(line: 262, column: 4, scope: !12475)
!12482 = !DILocation(line: 263, column: 9, scope: !12472)
!12483 = !DILocation(line: 263, column: 16, scope: !12472)
!12484 = !DILocation(line: 263, column: 28, scope: !12472)
!12485 = !DILocation(line: 264, column: 3, scope: !12472)
!12486 = !DILocation(line: 246, column: 60, scope: !2192)
!12487 = distinct !{!12487, !12462, !12488}
!12488 = !DILocation(line: 265, column: 2, scope: !2193)
!12489 = !DILocation(line: 266, column: 1, scope: !2175)
!12490 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6405, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12491)
!12491 = !{!12492, !12493}
!12492 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12490, file: !656, line: 1814, type: !890)
!12493 = !DILocalVariable(name: "priority", arg: 2, scope: !12490, file: !656, line: 1814, type: !156)
!12494 = !DILocation(line: 0, scope: !12490)
!12495 = !DILocation(line: 1822, column: 48, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12497, file: !656, line: 1821, column: 3)
!12497 = distinct !DILexicalBlock(scope: !12490, file: !656, line: 1816, column: 7)
!12498 = !DILocation(line: 1822, column: 32, scope: !12496)
!12499 = !DILocation(line: 1822, column: 40, scope: !12496)
!12500 = !DILocation(line: 1822, column: 5, scope: !12496)
!12501 = !DILocation(line: 1822, column: 46, scope: !12496)
!12502 = !DILocation(line: 1824, column: 1, scope: !12490)
!12503 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12421, file: !12421, line: 32, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!12504 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12505, file: !12505, line: 215, type: !12402, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12506)
!12505 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12506 = !{!12507}
!12507 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12504, file: !12505, line: 215, type: !2041)
!12508 = !DILocation(line: 0, scope: !12504)
!12509 = !DILocation(line: 217, column: 21, scope: !12504)
!12510 = !DILocation(line: 217, column: 34, scope: !12504)
!12511 = !DILocation(line: 221, column: 21, scope: !12504)
!12512 = !DILocation(line: 221, column: 34, scope: !12504)
!12513 = !DILocation(line: 223, column: 27, scope: !12504)
!12514 = !DILocation(line: 223, column: 33, scope: !12504)
!12515 = !DILocation(line: 224, column: 27, scope: !12504)
!12516 = !DILocation(line: 224, column: 32, scope: !12504)
!12517 = !DILocation(line: 230, column: 2, scope: !12504)
!12518 = !DILocation(line: 239, column: 24, scope: !12504)
!12519 = !DILocation(line: 240, column: 1, scope: !12504)
!12520 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1948, file: !1948, line: 399, type: !12521, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12523)
!12521 = !DISubroutineType(types: !12522)
!12522 = !{!1242}
!12523 = !{!12524}
!12524 = !DILocalVariable(name: "stack_ptr", scope: !12520, file: !1948, line: 401, type: !1242)
!12525 = !DILocation(line: 404, column: 2, scope: !12520)
!12526 = !DILocation(line: 416, column: 24, scope: !12520)
!12527 = !DILocation(line: 418, column: 14, scope: !12520)
!12528 = !DILocation(line: 0, scope: !12520)
!12529 = !DILocation(line: 423, column: 2, scope: !12520)
!12530 = !DILocation(line: 424, column: 2, scope: !12520)
!12531 = !DILocation(line: 426, column: 2, scope: !12520)
!12532 = !DILocation(line: 428, column: 2, scope: !12520)
!12533 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1948, file: !1948, line: 432, type: !12534, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12536)
!12534 = !DISubroutineType(types: !12535)
!12535 = !{null, !1242}
!12536 = !{!12537}
!12537 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12533, file: !1948, line: 432, type: !1242)
!12538 = !DILocation(line: 0, scope: !12533)
!12539 = !DILocation(line: 435, column: 2, scope: !12533)
!12540 = !DILocation(line: 445, column: 2, scope: !12533)
!12541 = distinct !DISubprogram(name: "bg_thread_main", scope: !1948, file: !1948, line: 277, type: !354, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !12542)
!12542 = !{!12543, !12544, !12545}
!12543 = !DILocalVariable(name: "unused1", arg: 1, scope: !12541, file: !1948, line: 277, type: !117)
!12544 = !DILocalVariable(name: "unused2", arg: 2, scope: !12541, file: !1948, line: 277, type: !117)
!12545 = !DILocalVariable(name: "unused3", arg: 3, scope: !12541, file: !1948, line: 277, type: !117)
!12546 = !DILocation(line: 0, scope: !12541)
!12547 = !DILocation(line: 291, column: 20, scope: !12541)
!12548 = !DILocation(line: 293, column: 2, scope: !12541)
!12549 = !DILocation(line: 297, column: 2, scope: !12541)
!12550 = !DILocation(line: 305, column: 2, scope: !12541)
!12551 = !DILocation(line: 307, column: 2, scope: !12541)
!12552 = !DILocation(line: 330, column: 8, scope: !12541)
!12553 = !DILocation(line: 333, column: 34, scope: !12541)
!12554 = !DILocation(line: 339, column: 1, scope: !12541)
!12555 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2202, file: !2202, line: 45, type: !12556, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12564)
!12556 = !DISubroutineType(types: !12557)
!12557 = !{null, !12558, !117}
!12558 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !220, line: 103, baseType: !12559)
!12559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12560, size: 32)
!12560 = !DISubroutineType(types: !12561)
!12561 = !{null, !12562, !117}
!12562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12563, size: 32)
!12563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2207)
!12564 = !{!12565, !12566}
!12565 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12555, file: !2202, line: 45, type: !12558)
!12566 = !DILocalVariable(name: "user_data", arg: 2, scope: !12555, file: !2202, line: 45, type: !117)
!12567 = !DILocation(line: 0, scope: !12555)
!12568 = !DILocation(line: 71, column: 1, scope: !12555)
!12569 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2202, file: !2202, line: 73, type: !12556, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12570)
!12570 = !{!12571, !12572}
!12571 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12569, file: !2202, line: 73, type: !12558)
!12572 = !DILocalVariable(name: "user_data", arg: 2, scope: !12569, file: !2202, line: 73, type: !117)
!12573 = !DILocation(line: 0, scope: !12569)
!12574 = !DILocation(line: 95, column: 1, scope: !12569)
!12575 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2202, file: !2202, line: 97, type: !7192, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2149)
!12576 = !DILocation(line: 1031, column: 3, scope: !12577, inlinedAt: !12580)
!12577 = distinct !DISubprogram(name: "__get_IPSR", scope: !6365, file: !6365, line: 1027, type: !6452, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12578)
!12578 = !{!12579}
!12579 = !DILocalVariable(name: "result", scope: !12577, file: !6365, line: 1029, type: !156)
!12580 = distinct !DILocation(line: 48, column: 10, scope: !12581, inlinedAt: !12582)
!12581 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7191, file: !7191, line: 46, type: !7192, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2149)
!12582 = distinct !DILocation(line: 99, column: 9, scope: !12575)
!12583 = !{i64 2940845}
!12584 = !DILocation(line: 0, scope: !12577, inlinedAt: !12580)
!12585 = !DILocation(line: 48, column: 9, scope: !12581, inlinedAt: !12582)
!12586 = !DILocation(line: 99, column: 2, scope: !12575)
!12587 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2202, file: !2202, line: 106, type: !365, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2149)
!12588 = !DILocation(line: 108, column: 2, scope: !12587)
!12589 = !DILocation(line: 108, column: 17, scope: !12587)
!12590 = !DILocation(line: 108, column: 30, scope: !12587)
!12591 = !DILocation(line: 109, column: 1, scope: !12587)
!12592 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2202, file: !2202, line: 116, type: !365, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2149)
!12593 = !DILocation(line: 118, column: 2, scope: !12592)
!12594 = !DILocation(line: 118, column: 17, scope: !12592)
!12595 = !DILocation(line: 118, column: 30, scope: !12592)
!12596 = !DILocation(line: 119, column: 1, scope: !12592)
!12597 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2202, file: !2202, line: 126, type: !7192, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2149)
!12598 = !DILocation(line: 128, column: 10, scope: !12597)
!12599 = !DILocation(line: 128, column: 25, scope: !12597)
!12600 = !DILocation(line: 128, column: 38, scope: !12597)
!12601 = !DILocation(line: 128, column: 53, scope: !12597)
!12602 = !DILocation(line: 128, column: 2, scope: !12597)
!12603 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2202, file: !2202, line: 187, type: !12604, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12606)
!12604 = !DISubroutineType(types: !12605)
!12605 = !{!118, !2206, !133}
!12606 = !{!12607, !12608}
!12607 = !DILocalVariable(name: "thread", arg: 1, scope: !12603, file: !2202, line: 187, type: !2206)
!12608 = !DILocalVariable(name: "value", arg: 2, scope: !12603, file: !2202, line: 187, type: !133)
!12609 = !DILocation(line: 0, scope: !12603)
!12610 = !DILocation(line: 206, column: 2, scope: !12603)
!12611 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2202, file: !2202, line: 238, type: !12612, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12614)
!12612 = !DISubroutineType(types: !12613)
!12613 = !{!133, !2206}
!12614 = !{!12615}
!12615 = !DILocalVariable(name: "thread", arg: 1, scope: !12611, file: !2202, line: 238, type: !2206)
!12616 = !DILocation(line: 0, scope: !12611)
!12617 = !DILocation(line: 244, column: 2, scope: !12611)
!12618 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2202, file: !2202, line: 248, type: !12619, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12621)
!12619 = !DISubroutineType(types: !12620)
!12620 = !{!118, !2205, !1242, !315}
!12621 = !{!12622, !12623, !12624}
!12622 = !DILocalVariable(name: "thread", arg: 1, scope: !12618, file: !2202, line: 248, type: !2205)
!12623 = !DILocalVariable(name: "buf", arg: 2, scope: !12618, file: !2202, line: 248, type: !1242)
!12624 = !DILocalVariable(name: "size", arg: 3, scope: !12618, file: !2202, line: 248, type: !315)
!12625 = !DILocation(line: 0, scope: !12618)
!12626 = !DILocation(line: 257, column: 2, scope: !12618)
!12627 = !DILocation(line: 0, scope: !2201)
!12628 = !DILocation(line: 281, column: 11, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !2201, file: !2202, line: 281, column: 6)
!12630 = !DILocation(line: 281, column: 20, scope: !12629)
!12631 = !DILocation(line: 275, column: 45, scope: !2201)
!12632 = !DILocation(line: 285, column: 10, scope: !2201)
!12633 = !DILocation(line: 0, scope: !2324)
!12634 = !DILocation(line: 293, column: 39, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !2324, file: !2202, line: 293, column: 2)
!12636 = !DILocation(line: 293, column: 2, scope: !2324)
!12637 = !DILocation(line: 273, column: 14, scope: !2201)
!12638 = !DILocation(line: 309, column: 2, scope: !2201)
!12639 = !DILocation(line: 309, column: 11, scope: !2201)
!12640 = !DILocation(line: 311, column: 2, scope: !2201)
!12641 = !DILocation(line: 293, column: 26, scope: !12635)
!12642 = !DILocation(line: 294, column: 9, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12635, file: !2202, line: 293, column: 54)
!12644 = !DILocation(line: 295, column: 21, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12643, file: !2202, line: 295, column: 7)
!12646 = !DILocation(line: 295, column: 28, scope: !12645)
!12647 = !DILocation(line: 295, column: 7, scope: !12643)
!12648 = !DILocation(line: 299, column: 25, scope: !12643)
!12649 = !DILocation(line: 299, column: 41, scope: !12643)
!12650 = !DILocation(line: 300, column: 7, scope: !12643)
!12651 = !DILocation(line: 300, column: 26, scope: !12643)
!12652 = !DILocation(line: 299, column: 10, scope: !12643)
!12653 = !DILocation(line: 299, column: 7, scope: !12643)
!12654 = !DILocation(line: 302, column: 16, scope: !12643)
!12655 = !DILocation(line: 304, column: 20, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12643, file: !2202, line: 304, column: 7)
!12657 = !DILocation(line: 304, column: 7, scope: !12643)
!12658 = !DILocation(line: 305, column: 26, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12656, file: !2202, line: 304, column: 26)
!12660 = !DILocation(line: 305, column: 42, scope: !12659)
!12661 = !DILocation(line: 305, column: 11, scope: !12659)
!12662 = !DILocation(line: 305, column: 8, scope: !12659)
!12663 = !DILocation(line: 306, column: 3, scope: !12659)
!12664 = !DILocation(line: 293, column: 50, scope: !12635)
!12665 = !DILocation(line: 312, column: 1, scope: !2201)
!12666 = distinct !DISubprogram(name: "copy_bytes", scope: !2202, file: !2202, line: 261, type: !12667, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12669)
!12667 = !DISubroutineType(types: !12668)
!12668 = !{!315, !1242, !315, !133, !315}
!12669 = !{!12670, !12671, !12672, !12673, !12674}
!12670 = !DILocalVariable(name: "dest", arg: 1, scope: !12666, file: !2202, line: 261, type: !1242)
!12671 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12666, file: !2202, line: 261, type: !315)
!12672 = !DILocalVariable(name: "src", arg: 3, scope: !12666, file: !2202, line: 261, type: !133)
!12673 = !DILocalVariable(name: "src_size", arg: 4, scope: !12666, file: !2202, line: 261, type: !315)
!12674 = !DILocalVariable(name: "bytes_to_copy", scope: !12666, file: !2202, line: 263, type: !315)
!12675 = !DILocation(line: 0, scope: !12666)
!12676 = !DILocation(line: 265, column: 18, scope: !12666)
!12677 = !DILocation(line: 266, column: 2, scope: !12666)
!12678 = !DILocation(line: 268, column: 2, scope: !12666)
!12679 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2202, file: !2202, line: 383, type: !12680, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12682)
!12680 = !DISubroutineType(types: !12681)
!12681 = !{null, !2206}
!12682 = !{!12683}
!12683 = !DILocalVariable(name: "thread", arg: 1, scope: !12679, file: !2202, line: 383, type: !2206)
!12684 = !DILocation(line: 0, scope: !12679)
!12685 = !DILocation(line: 387, column: 2, scope: !12679)
!12686 = !DILocation(line: 388, column: 1, scope: !12679)
!12687 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2202, file: !2202, line: 528, type: !12688, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12695)
!12688 = !DISubroutineType(types: !12689)
!12689 = !{!1242, !2206, !12690, !315, !352, !117, !117, !117, !118, !156, !133}
!12690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12691, size: 32)
!12691 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !12692)
!12692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !12693)
!12693 = !{!12694}
!12694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12692, file: !347, line: 48, baseType: !135, size: 8)
!12695 = !{!12696, !12697, !12698, !12699, !12700, !12701, !12702, !12703, !12704, !12705, !12706}
!12696 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12687, file: !2202, line: 528, type: !2206)
!12697 = !DILocalVariable(name: "stack", arg: 2, scope: !12687, file: !2202, line: 529, type: !12690)
!12698 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12687, file: !2202, line: 529, type: !315)
!12699 = !DILocalVariable(name: "entry", arg: 4, scope: !12687, file: !2202, line: 530, type: !352)
!12700 = !DILocalVariable(name: "p1", arg: 5, scope: !12687, file: !2202, line: 531, type: !117)
!12701 = !DILocalVariable(name: "p2", arg: 6, scope: !12687, file: !2202, line: 531, type: !117)
!12702 = !DILocalVariable(name: "p3", arg: 7, scope: !12687, file: !2202, line: 531, type: !117)
!12703 = !DILocalVariable(name: "prio", arg: 8, scope: !12687, file: !2202, line: 532, type: !118)
!12704 = !DILocalVariable(name: "options", arg: 9, scope: !12687, file: !2202, line: 532, type: !156)
!12705 = !DILocalVariable(name: "name", arg: 10, scope: !12687, file: !2202, line: 532, type: !133)
!12706 = !DILocalVariable(name: "stack_ptr", scope: !12687, file: !2202, line: 534, type: !1242)
!12707 = !DILocation(line: 0, scope: !12687)
!12708 = !DILocation(line: 536, column: 2, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12710, file: !2202, line: 536, column: 2)
!12710 = distinct !DILexicalBlock(scope: !12711, file: !2202, line: 536, column: 2)
!12711 = distinct !DILexicalBlock(scope: !12687, file: !2202, line: 536, column: 2)
!12712 = !DILocation(line: 536, column: 2, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12709, file: !2202, line: 536, column: 2)
!12714 = !DILocation(line: 550, column: 28, scope: !12687)
!12715 = !DILocation(line: 550, column: 2, scope: !12687)
!12716 = !DILocation(line: 553, column: 34, scope: !12687)
!12717 = !DILocation(line: 553, column: 2, scope: !12687)
!12718 = !DILocation(line: 554, column: 14, scope: !12687)
!12719 = !DILocation(line: 564, column: 2, scope: !12687)
!12720 = !DILocation(line: 567, column: 14, scope: !12687)
!12721 = !DILocation(line: 567, column: 24, scope: !12687)
!12722 = !DILocation(line: 612, column: 7, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12687, file: !2202, line: 612, column: 6)
!12724 = !DILocation(line: 612, column: 6, scope: !12687)
!12725 = !DILocation(line: 627, column: 40, scope: !12687)
!12726 = !DILocation(line: 637, column: 2, scope: !12687)
!12727 = !DILocation(line: 613, column: 15, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12723, file: !2202, line: 612, column: 17)
!12729 = !DILocation(line: 613, column: 29, scope: !12728)
!12730 = !DILocation(line: 638, column: 1, scope: !12687)
!12731 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12401, file: !12401, line: 78, type: !12732, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12734)
!12732 = !DISubroutineType(types: !12733)
!12733 = !{!146, !117}
!12734 = !{!12735}
!12735 = !DILocalVariable(name: "entry_point", arg: 1, scope: !12731, file: !12401, line: 78, type: !117)
!12736 = !DILocation(line: 0, scope: !12731)
!12737 = !DILocation(line: 80, column: 21, scope: !12731)
!12738 = !DILocation(line: 80, column: 2, scope: !12731)
!12739 = distinct !DISubprogram(name: "z_waitq_init", scope: !12740, file: !12740, line: 47, type: !12741, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12743)
!12740 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12741 = !DISubroutineType(types: !12742)
!12742 = !{null, !2237}
!12743 = !{!12744}
!12744 = !DILocalVariable(name: "w", arg: 1, scope: !12739, file: !12740, line: 47, type: !2237)
!12745 = !DILocation(line: 0, scope: !12739)
!12746 = !DILocation(line: 49, column: 21, scope: !12739)
!12747 = !DILocation(line: 49, column: 2, scope: !12739)
!12748 = !DILocation(line: 50, column: 1, scope: !12739)
!12749 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2202, file: !2202, line: 791, type: !12750, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12753)
!12750 = !DISubroutineType(types: !12751)
!12751 = !{null, !12752, !118, !156, !32}
!12752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!12753 = !{!12754, !12755, !12756, !12757}
!12754 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12749, file: !2202, line: 791, type: !12752)
!12755 = !DILocalVariable(name: "priority", arg: 2, scope: !12749, file: !2202, line: 791, type: !118)
!12756 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12749, file: !2202, line: 792, type: !156)
!12757 = !DILocalVariable(name: "options", arg: 4, scope: !12749, file: !2202, line: 792, type: !32)
!12758 = !DILocation(line: 0, scope: !12749)
!12759 = !DILocation(line: 795, column: 15, scope: !12749)
!12760 = !DILocation(line: 795, column: 25, scope: !12749)
!12761 = !DILocation(line: 796, column: 30, scope: !12749)
!12762 = !DILocation(line: 796, column: 15, scope: !12749)
!12763 = !DILocation(line: 796, column: 28, scope: !12749)
!12764 = !DILocation(line: 797, column: 30, scope: !12749)
!12765 = !DILocation(line: 797, column: 15, scope: !12749)
!12766 = !DILocation(line: 797, column: 28, scope: !12749)
!12767 = !DILocation(line: 799, column: 22, scope: !12749)
!12768 = !DILocation(line: 799, column: 15, scope: !12749)
!12769 = !DILocation(line: 799, column: 20, scope: !12749)
!12770 = !DILocation(line: 801, column: 15, scope: !12749)
!12771 = !DILocation(line: 801, column: 28, scope: !12749)
!12772 = !DILocation(line: 814, column: 2, scope: !12749)
!12773 = !DILocation(line: 815, column: 1, scope: !12749)
!12774 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2202, file: !2202, line: 449, type: !12775, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12777)
!12775 = !DISubroutineType(types: !12776)
!12776 = !{!1242, !2206, !12690, !315}
!12777 = !{!12778, !12779, !12780, !12781, !12782, !12783, !12784, !12785}
!12778 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12774, file: !2202, line: 449, type: !2206)
!12779 = !DILocalVariable(name: "stack", arg: 2, scope: !12774, file: !2202, line: 450, type: !12690)
!12780 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12774, file: !2202, line: 450, type: !315)
!12781 = !DILocalVariable(name: "stack_obj_size", scope: !12774, file: !2202, line: 452, type: !315)
!12782 = !DILocalVariable(name: "stack_buf_size", scope: !12774, file: !2202, line: 452, type: !315)
!12783 = !DILocalVariable(name: "stack_ptr", scope: !12774, file: !2202, line: 453, type: !1242)
!12784 = !DILocalVariable(name: "stack_buf_start", scope: !12774, file: !2202, line: 453, type: !1242)
!12785 = !DILocalVariable(name: "delta", scope: !12774, file: !2202, line: 454, type: !315)
!12786 = !DILocation(line: 0, scope: !12774)
!12787 = !DILocation(line: 465, column: 20, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12774, file: !2202, line: 463, column: 2)
!12789 = !DILocation(line: 466, column: 21, scope: !12788)
!12790 = !DILocation(line: 473, column: 28, scope: !12774)
!12791 = !DILocation(line: 514, column: 33, scope: !12774)
!12792 = !DILocation(line: 514, column: 25, scope: !12774)
!12793 = !DILocation(line: 514, column: 31, scope: !12774)
!12794 = !DILocation(line: 515, column: 25, scope: !12774)
!12795 = !DILocation(line: 515, column: 30, scope: !12774)
!12796 = !DILocation(line: 516, column: 25, scope: !12774)
!12797 = !DILocation(line: 516, column: 31, scope: !12774)
!12798 = !DILocation(line: 520, column: 2, scope: !12774)
!12799 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !347, file: !347, line: 331, type: !12800, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12802)
!12800 = !DISubroutineType(types: !12801)
!12801 = !{!1242, !12690}
!12802 = !{!12803}
!12803 = !DILocalVariable(name: "sym", arg: 1, scope: !12799, file: !347, line: 331, type: !12690)
!12804 = !DILocation(line: 0, scope: !12799)
!12805 = !DILocation(line: 333, column: 21, scope: !12799)
!12806 = !DILocation(line: 333, column: 2, scope: !12799)
!12807 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12808, file: !12808, line: 40, type: !12809, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12811)
!12808 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12809 = !DISubroutineType(types: !12810)
!12810 = !{null, !12752}
!12811 = !{!12812}
!12812 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12807, file: !12808, line: 40, type: !12752)
!12813 = !DILocation(line: 0, scope: !12807)
!12814 = !DILocation(line: 42, column: 31, scope: !12807)
!12815 = !DILocation(line: 42, column: 2, scope: !12807)
!12816 = !DILocation(line: 43, column: 1, scope: !12807)
!12817 = distinct !DISubprogram(name: "z_init_timeout", scope: !12808, file: !12808, line: 25, type: !2263, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12818)
!12818 = !{!12819}
!12819 = !DILocalVariable(name: "to", arg: 1, scope: !12817, file: !12808, line: 25, type: !2265)
!12820 = !DILocation(line: 0, scope: !12817)
!12821 = !DILocation(line: 27, column: 22, scope: !12817)
!12822 = !DILocation(line: 27, column: 2, scope: !12817)
!12823 = !DILocation(line: 28, column: 1, scope: !12817)
!12824 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !12825, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12827)
!12825 = !DISubroutineType(types: !12826)
!12826 = !{null, !2311}
!12827 = !{!12828}
!12828 = !DILocalVariable(name: "node", arg: 1, scope: !12824, file: !235, line: 211, type: !2311)
!12829 = !DILocation(line: 0, scope: !12824)
!12830 = !DILocation(line: 213, column: 8, scope: !12824)
!12831 = !DILocation(line: 213, column: 13, scope: !12824)
!12832 = !DILocation(line: 214, column: 8, scope: !12824)
!12833 = !DILocation(line: 214, column: 13, scope: !12824)
!12834 = !DILocation(line: 215, column: 1, scope: !12824)
!12835 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !12836, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12839)
!12836 = !DISubroutineType(types: !12837)
!12837 = !{null, !12838}
!12838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 32)
!12839 = !{!12840}
!12840 = !DILocalVariable(name: "list", arg: 1, scope: !12835, file: !235, line: 197, type: !12838)
!12841 = !DILocation(line: 0, scope: !12835)
!12842 = !DILocation(line: 199, column: 8, scope: !12835)
!12843 = !DILocation(line: 199, column: 13, scope: !12835)
!12844 = !DILocation(line: 200, column: 8, scope: !12835)
!12845 = !DILocation(line: 200, column: 13, scope: !12835)
!12846 = !DILocation(line: 201, column: 1, scope: !12835)
!12847 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2202, file: !2202, line: 641, type: !12848, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12854)
!12848 = !DISubroutineType(types: !12849)
!12849 = !{!2205, !2206, !12690, !315, !352, !117, !117, !117, !118, !156, !12850}
!12850 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !12851)
!12851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !12852)
!12852 = !{!12853}
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12851, file: !114, line: 66, baseType: !113, size: 64)
!12854 = !{!12855, !12856, !12857, !12858, !12859, !12860, !12861, !12862, !12863, !12864}
!12855 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12847, file: !2202, line: 641, type: !2206)
!12856 = !DILocalVariable(name: "stack", arg: 2, scope: !12847, file: !2202, line: 642, type: !12690)
!12857 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12847, file: !2202, line: 643, type: !315)
!12858 = !DILocalVariable(name: "entry", arg: 4, scope: !12847, file: !2202, line: 643, type: !352)
!12859 = !DILocalVariable(name: "p1", arg: 5, scope: !12847, file: !2202, line: 644, type: !117)
!12860 = !DILocalVariable(name: "p2", arg: 6, scope: !12847, file: !2202, line: 644, type: !117)
!12861 = !DILocalVariable(name: "p3", arg: 7, scope: !12847, file: !2202, line: 644, type: !117)
!12862 = !DILocalVariable(name: "prio", arg: 8, scope: !12847, file: !2202, line: 645, type: !118)
!12863 = !DILocalVariable(name: "options", arg: 9, scope: !12847, file: !2202, line: 645, type: !156)
!12864 = !DILocalVariable(name: "delay", arg: 10, scope: !12847, file: !2202, line: 645, type: !12850)
!12865 = !DILocation(line: 0, scope: !12847)
!12866 = !DILocation(line: 1031, column: 3, scope: !12577, inlinedAt: !12867)
!12867 = distinct !DILocation(line: 48, column: 10, scope: !12581, inlinedAt: !12868)
!12868 = distinct !DILocation(line: 647, column: 2, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12870, file: !2202, line: 647, column: 2)
!12870 = distinct !DILexicalBlock(scope: !12847, file: !2202, line: 647, column: 2)
!12871 = !DILocation(line: 0, scope: !12577, inlinedAt: !12867)
!12872 = !DILocation(line: 48, column: 9, scope: !12581, inlinedAt: !12868)
!12873 = !DILocation(line: 647, column: 2, scope: !12870)
!12874 = !DILocation(line: 647, column: 2, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12869, file: !2202, line: 647, column: 2)
!12876 = !DILocation(line: 649, column: 2, scope: !12847)
!12877 = !DILocation(line: 652, column: 7, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12847, file: !2202, line: 652, column: 6)
!12879 = !DILocation(line: 652, column: 6, scope: !12847)
!12880 = !DILocation(line: 653, column: 3, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12878, file: !2202, line: 652, column: 39)
!12882 = !DILocation(line: 654, column: 2, scope: !12881)
!12883 = !DILocation(line: 656, column: 2, scope: !12847)
!12884 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2202, file: !2202, line: 401, type: !12885, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12887)
!12885 = !DISubroutineType(types: !12886)
!12886 = !{null, !2206, !12850}
!12887 = !{!12888, !12889}
!12888 = !DILocalVariable(name: "thread", arg: 1, scope: !12884, file: !2202, line: 401, type: !2206)
!12889 = !DILocalVariable(name: "delay", arg: 2, scope: !12884, file: !2202, line: 401, type: !12850)
!12890 = !DILocation(line: 0, scope: !12884)
!12891 = !DILocation(line: 404, column: 6, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12884, file: !2202, line: 404, column: 6)
!12893 = !DILocation(line: 404, column: 6, scope: !12884)
!12894 = !DILocation(line: 405, column: 3, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12892, file: !2202, line: 404, column: 38)
!12896 = !DILocation(line: 406, column: 2, scope: !12895)
!12897 = !DILocation(line: 407, column: 3, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12892, file: !2202, line: 406, column: 9)
!12899 = !DILocation(line: 413, column: 1, scope: !12884)
!12900 = distinct !DISubprogram(name: "k_thread_start", scope: !3496, file: !3496, line: 205, type: !12901, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12903)
!12901 = !DISubroutineType(types: !12902)
!12902 = !{null, !2205}
!12903 = !{!12904}
!12904 = !DILocalVariable(name: "thread", arg: 1, scope: !12900, file: !3496, line: 205, type: !2205)
!12905 = !DILocation(line: 0, scope: !12900)
!12906 = !DILocation(line: 214, column: 2, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12900, file: !3496, line: 214, column: 2)
!12908 = !{i64 2154182658}
!12909 = !DILocation(line: 215, column: 2, scope: !12900)
!12910 = !DILocation(line: 216, column: 1, scope: !12900)
!12911 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12808, file: !12808, line: 47, type: !12885, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12912)
!12912 = !{!12913, !12914}
!12913 = !DILocalVariable(name: "thread", arg: 1, scope: !12911, file: !12808, line: 47, type: !2206)
!12914 = !DILocalVariable(name: "ticks", arg: 2, scope: !12911, file: !12808, line: 47, type: !12850)
!12915 = !DILocation(line: 0, scope: !12911)
!12916 = !DILocation(line: 49, column: 30, scope: !12911)
!12917 = !DILocation(line: 49, column: 2, scope: !12911)
!12918 = !DILocation(line: 50, column: 1, scope: !12911)
!12919 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2202, file: !2202, line: 748, type: !365, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12920)
!12920 = !{!12921, !12938}
!12921 = !DILocalVariable(name: "thread_data", scope: !12922, file: !2202, line: 750, type: !12923)
!12922 = distinct !DILexicalBlock(scope: !12919, file: !2202, line: 750, column: 2)
!12923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12924, size: 32)
!12924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !220, line: 620, size: 384, elements: !12925)
!12925 = !{!12926, !12927, !12928, !12929, !12930, !12931, !12932, !12933, !12934, !12935, !12936, !12937}
!12926 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12924, file: !220, line: 621, baseType: !2206, size: 32)
!12927 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12924, file: !220, line: 622, baseType: !12690, size: 32, offset: 32)
!12928 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12924, file: !220, line: 623, baseType: !32, size: 32, offset: 64)
!12929 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12924, file: !220, line: 624, baseType: !352, size: 32, offset: 96)
!12930 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12924, file: !220, line: 625, baseType: !117, size: 32, offset: 128)
!12931 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12924, file: !220, line: 626, baseType: !117, size: 32, offset: 160)
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12924, file: !220, line: 627, baseType: !117, size: 32, offset: 192)
!12933 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12924, file: !220, line: 628, baseType: !118, size: 32, offset: 224)
!12934 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12924, file: !220, line: 629, baseType: !156, size: 32, offset: 256)
!12935 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12924, file: !220, line: 630, baseType: !362, size: 32, offset: 288)
!12936 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12924, file: !220, line: 631, baseType: !364, size: 32, offset: 320)
!12937 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12924, file: !220, line: 632, baseType: !133, size: 32, offset: 352)
!12938 = !DILocalVariable(name: "thread_data", scope: !12939, file: !2202, line: 781, type: !12923)
!12939 = distinct !DILexicalBlock(scope: !12919, file: !2202, line: 781, column: 2)
!12940 = !DILocation(line: 0, scope: !12922)
!12941 = !DILocation(line: 750, column: 2, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12943, file: !2202, line: 750, column: 2)
!12943 = distinct !DILexicalBlock(scope: !12944, file: !2202, line: 750, column: 2)
!12944 = distinct !DILexicalBlock(scope: !12922, file: !2202, line: 750, column: 2)
!12945 = !DILocation(line: 750, column: 2, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12947, file: !2202, line: 750, column: 2)
!12947 = distinct !DILexicalBlock(scope: !12942, file: !2202, line: 750, column: 2)
!12948 = !DILocation(line: 750, column: 2, scope: !12943)
!12949 = !DILocation(line: 750, column: 2, scope: !12922)
!12950 = !DILocation(line: 780, column: 2, scope: !12919)
!12951 = !DILocation(line: 0, scope: !12939)
!12952 = !DILocation(line: 781, column: 2, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12954, file: !2202, line: 781, column: 2)
!12954 = distinct !DILexicalBlock(scope: !12955, file: !2202, line: 781, column: 2)
!12955 = distinct !DILexicalBlock(scope: !12939, file: !2202, line: 781, column: 2)
!12956 = !DILocation(line: 752, column: 17, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12944, file: !2202, line: 750, column: 38)
!12958 = !DILocation(line: 753, column: 17, scope: !12957)
!12959 = !DILocation(line: 754, column: 17, scope: !12957)
!12960 = !DILocation(line: 755, column: 17, scope: !12957)
!12961 = !DILocation(line: 756, column: 17, scope: !12957)
!12962 = !DILocation(line: 757, column: 17, scope: !12957)
!12963 = !DILocation(line: 758, column: 17, scope: !12957)
!12964 = !DILocation(line: 759, column: 17, scope: !12957)
!12965 = !DILocation(line: 760, column: 17, scope: !12957)
!12966 = !DILocation(line: 751, column: 3, scope: !12957)
!12967 = !DILocation(line: 763, column: 16, scope: !12957)
!12968 = !DILocation(line: 763, column: 29, scope: !12957)
!12969 = !DILocation(line: 763, column: 39, scope: !12957)
!12970 = !DILocation(line: 750, column: 2, scope: !12944)
!12971 = !DILocation(line: 750, column: 2, scope: !12947)
!12972 = distinct !{!12972, !12949, !12973}
!12973 = !DILocation(line: 764, column: 2, scope: !12922)
!12974 = !DILocation(line: 781, column: 2, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12976, file: !2202, line: 781, column: 2)
!12976 = distinct !DILexicalBlock(scope: !12953, file: !2202, line: 781, column: 2)
!12977 = !DILocation(line: 781, column: 2, scope: !12954)
!12978 = !DILocation(line: 781, column: 2, scope: !12939)
!12979 = !DILocation(line: 787, column: 2, scope: !12919)
!12980 = !DILocation(line: 788, column: 1, scope: !12919)
!12981 = !DILocation(line: 782, column: 20, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12983, file: !2202, line: 782, column: 7)
!12983 = distinct !DILexicalBlock(scope: !12955, file: !2202, line: 781, column: 38)
!12984 = !DILocation(line: 782, column: 31, scope: !12982)
!12985 = !DILocation(line: 782, column: 7, scope: !12983)
!12986 = !DILocation(line: 783, column: 37, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12982, file: !2202, line: 782, column: 51)
!12988 = !DILocation(line: 784, column: 10, scope: !12987)
!12989 = !DILocation(line: 783, column: 4, scope: !12987)
!12990 = !DILocation(line: 785, column: 3, scope: !12987)
!12991 = !DILocation(line: 781, column: 2, scope: !12955)
!12992 = !DILocation(line: 781, column: 2, scope: !12976)
!12993 = distinct !{!12993, !12978, !12994}
!12994 = !DILocation(line: 786, column: 2, scope: !12939)
!12995 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3463, file: !3463, line: 403, type: !3464, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !12996)
!12996 = !{!12997}
!12997 = !DILocalVariable(name: "t", arg: 1, scope: !12995, file: !3463, line: 403, type: !213)
!12998 = !DILocation(line: 0, scope: !12995)
!12999 = !DILocalVariable(name: "t", arg: 1, scope: !13000, file: !3463, line: 102, type: !213)
!13000 = distinct !DISubprogram(name: "z_tmcvt", scope: !3463, file: !3463, line: 102, type: !3471, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13001)
!13001 = !{!12999, !13002, !13003, !13004, !13005, !13006, !13007, !13008, !13009, !13010, !13011}
!13002 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13000, file: !3463, line: 102, type: !156)
!13003 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13000, file: !3463, line: 103, type: !156)
!13004 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13000, file: !3463, line: 103, type: !146)
!13005 = !DILocalVariable(name: "result32", arg: 5, scope: !13000, file: !3463, line: 104, type: !146)
!13006 = !DILocalVariable(name: "round_up", arg: 6, scope: !13000, file: !3463, line: 104, type: !146)
!13007 = !DILocalVariable(name: "round_off", arg: 7, scope: !13000, file: !3463, line: 105, type: !146)
!13008 = !DILocalVariable(name: "mul_ratio", scope: !13000, file: !3463, line: 107, type: !146)
!13009 = !DILocalVariable(name: "div_ratio", scope: !13000, file: !3463, line: 109, type: !146)
!13010 = !DILocalVariable(name: "off", scope: !13000, file: !3463, line: 116, type: !213)
!13011 = !DILocalVariable(name: "rdivisor", scope: !13012, file: !3463, line: 119, type: !156)
!13012 = distinct !DILexicalBlock(scope: !13013, file: !3463, line: 118, column: 18)
!13013 = distinct !DILexicalBlock(scope: !13000, file: !3463, line: 118, column: 6)
!13014 = !DILocation(line: 0, scope: !13000, inlinedAt: !13015)
!13015 = distinct !DILocation(line: 406, column: 9, scope: !12995)
!13016 = !DILocation(line: 145, column: 13, scope: !13017, inlinedAt: !13015)
!13017 = distinct !DILexicalBlock(scope: !13018, file: !3463, line: 144, column: 10)
!13018 = distinct !DILexicalBlock(scope: !13019, file: !3463, line: 142, column: 7)
!13019 = distinct !DILexicalBlock(scope: !13020, file: !3463, line: 141, column: 24)
!13020 = distinct !DILexicalBlock(scope: !13021, file: !3463, line: 141, column: 13)
!13021 = distinct !DILexicalBlock(scope: !13000, file: !3463, line: 134, column: 6)
!13022 = !DILocation(line: 406, column: 2, scope: !12995)
!13023 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2202, file: !2202, line: 817, type: !3879, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13024)
!13024 = !{!13025, !13026, !13027, !13028}
!13025 = !DILocalVariable(name: "entry", arg: 1, scope: !13023, file: !2202, line: 817, type: !352)
!13026 = !DILocalVariable(name: "p1", arg: 2, scope: !13023, file: !2202, line: 818, type: !117)
!13027 = !DILocalVariable(name: "p2", arg: 3, scope: !13023, file: !2202, line: 818, type: !117)
!13028 = !DILocalVariable(name: "p3", arg: 4, scope: !13023, file: !2202, line: 818, type: !117)
!13029 = !DILocation(line: 0, scope: !13023)
!13030 = !DILocation(line: 822, column: 2, scope: !13023)
!13031 = !DILocation(line: 822, column: 17, scope: !13023)
!13032 = !DILocation(line: 822, column: 30, scope: !13023)
!13033 = !DILocation(line: 823, column: 2, scope: !13023)
!13034 = !DILocation(line: 845, column: 2, scope: !13023)
!13035 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2202, file: !2202, line: 853, type: !13036, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13039)
!13036 = !DISubroutineType(types: !13037)
!13037 = !{!146, !13038}
!13038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 32)
!13039 = !{!13040, !13041}
!13040 = !DILocalVariable(name: "l", arg: 1, scope: !13035, file: !2202, line: 853, type: !13038)
!13041 = !DILocalVariable(name: "thread_cpu", scope: !13035, file: !2202, line: 855, type: !22)
!13042 = !DILocation(line: 0, scope: !13035)
!13043 = !DILocation(line: 855, column: 28, scope: !13035)
!13044 = !DILocation(line: 857, column: 17, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13035, file: !2202, line: 857, column: 6)
!13046 = !DILocation(line: 857, column: 6, scope: !13035)
!13047 = !DILocation(line: 858, column: 19, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13049, file: !2202, line: 858, column: 7)
!13049 = distinct !DILexicalBlock(scope: !13045, file: !2202, line: 857, column: 24)
!13050 = !DILocation(line: 858, column: 42, scope: !13048)
!13051 = !DILocation(line: 858, column: 28, scope: !13048)
!13052 = !DILocation(line: 858, column: 25, scope: !13048)
!13053 = !DILocation(line: 858, column: 7, scope: !13049)
!13054 = !DILocation(line: 862, column: 2, scope: !13035)
!13055 = !DILocation(line: 863, column: 1, scope: !13035)
!13056 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2202, file: !2202, line: 865, type: !13036, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13057)
!13057 = !{!13058}
!13058 = !DILocalVariable(name: "l", arg: 1, scope: !13056, file: !2202, line: 865, type: !13038)
!13059 = !DILocation(line: 0, scope: !13056)
!13060 = !DILocation(line: 867, column: 9, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13056, file: !2202, line: 867, column: 6)
!13062 = !DILocation(line: 867, column: 38, scope: !13061)
!13063 = !DILocation(line: 867, column: 24, scope: !13061)
!13064 = !DILocation(line: 867, column: 54, scope: !13061)
!13065 = !DILocation(line: 867, column: 43, scope: !13061)
!13066 = !DILocation(line: 867, column: 41, scope: !13061)
!13067 = !DILocation(line: 867, column: 20, scope: !13061)
!13068 = !DILocation(line: 867, column: 6, scope: !13056)
!13069 = !DILocation(line: 870, column: 16, scope: !13056)
!13070 = !DILocation(line: 871, column: 2, scope: !13056)
!13071 = !DILocation(line: 872, column: 1, scope: !13056)
!13072 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2202, file: !2202, line: 874, type: !13073, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13075)
!13073 = !DISubroutineType(types: !13074)
!13074 = !{null, !13038}
!13075 = !{!13076}
!13076 = !DILocalVariable(name: "l", arg: 1, scope: !13072, file: !2202, line: 874, type: !13038)
!13077 = !DILocation(line: 0, scope: !13072)
!13078 = !DILocation(line: 876, column: 32, scope: !13072)
!13079 = !DILocation(line: 876, column: 18, scope: !13072)
!13080 = !DILocation(line: 876, column: 48, scope: !13072)
!13081 = !DILocation(line: 876, column: 37, scope: !13072)
!13082 = !DILocation(line: 876, column: 35, scope: !13072)
!13083 = !DILocation(line: 876, column: 5, scope: !13072)
!13084 = !DILocation(line: 876, column: 16, scope: !13072)
!13085 = !DILocation(line: 877, column: 1, scope: !13072)
!13086 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2202, file: !2202, line: 888, type: !13087, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13089)
!13087 = !DISubroutineType(types: !13088)
!13088 = !{!118, !2206}
!13089 = !{!13090}
!13090 = !DILocalVariable(name: "thread", arg: 1, scope: !13086, file: !2202, line: 888, type: !2206)
!13091 = !DILocation(line: 0, scope: !13086)
!13092 = !DILocation(line: 893, column: 2, scope: !13086)
!13093 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2202, file: !2202, line: 897, type: !13094, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13096)
!13094 = !DISubroutineType(types: !13095)
!13095 = !{!118, !2206, !32}
!13096 = !{!13097, !13098}
!13097 = !DILocalVariable(name: "thread", arg: 1, scope: !13093, file: !2202, line: 897, type: !2206)
!13098 = !DILocalVariable(name: "options", arg: 2, scope: !13093, file: !2202, line: 897, type: !32)
!13099 = !DILocation(line: 0, scope: !13093)
!13100 = !DILocation(line: 902, column: 2, scope: !13093)
!13101 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2202, file: !2202, line: 1072, type: !13102, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13107)
!13102 = !DISubroutineType(types: !13103)
!13103 = !{!118, !2205, !13104}
!13104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13105, size: 32)
!13105 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !225, line: 234, baseType: !13106)
!13106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !225, line: 192, elements: !2149)
!13107 = !{!13108, !13109}
!13108 = !DILocalVariable(name: "thread", arg: 1, scope: !13101, file: !2202, line: 1072, type: !2205)
!13109 = !DILocalVariable(name: "stats", arg: 2, scope: !13101, file: !2202, line: 1073, type: !13104)
!13110 = !DILocation(line: 0, scope: !13101)
!13111 = !DILocation(line: 1075, column: 14, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13101, file: !2202, line: 1075, column: 6)
!13113 = !DILocation(line: 1075, column: 23, scope: !13112)
!13114 = !DILocation(line: 1086, column: 1, scope: !13101)
!13115 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2202, file: !2202, line: 1088, type: !13116, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13118)
!13116 = !DISubroutineType(types: !13117)
!13117 = !{!118, !13104}
!13118 = !{!13119}
!13119 = !DILocalVariable(name: "stats", arg: 1, scope: !13115, file: !2202, line: 1088, type: !13104)
!13120 = !DILocation(line: 0, scope: !13115)
!13121 = !DILocation(line: 1094, column: 12, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13115, file: !2202, line: 1094, column: 6)
!13123 = !DILocation(line: 1120, column: 1, scope: !13115)
!13124 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13125, file: !13125, line: 20, type: !365, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !2149)
!13125 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13126 = !DILocation(line: 30, column: 2, scope: !13124)
!13127 = !DILocation(line: 31, column: 1, scope: !13124)
!13128 = distinct !DISubprogram(name: "idle", scope: !13125, file: !13125, line: 33, type: !354, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !13129)
!13129 = !{!13130, !13131, !13132}
!13130 = !DILocalVariable(name: "unused1", arg: 1, scope: !13128, file: !13125, line: 33, type: !117)
!13131 = !DILocalVariable(name: "unused2", arg: 2, scope: !13128, file: !13125, line: 33, type: !117)
!13132 = !DILocalVariable(name: "unused3", arg: 3, scope: !13128, file: !13125, line: 33, type: !117)
!13133 = !DILocation(line: 0, scope: !13128)
!13134 = !DILocation(line: 39, column: 2, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13136, file: !13125, line: 39, column: 2)
!13136 = distinct !DILexicalBlock(scope: !13128, file: !13125, line: 39, column: 2)
!13137 = !DILocation(line: 39, column: 2, scope: !13136)
!13138 = !DILocation(line: 39, column: 2, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13135, file: !13125, line: 39, column: 2)
!13140 = !DILocation(line: 55, column: 2, scope: !13141, inlinedAt: !13145)
!13141 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6191, file: !6191, line: 42, type: !6192, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !13142)
!13142 = !{!13143, !13144}
!13143 = !DILocalVariable(name: "key", scope: !13141, file: !6191, line: 44, type: !32)
!13144 = !DILocalVariable(name: "tmp", scope: !13141, file: !6191, line: 53, type: !32)
!13145 = distinct !DILocation(line: 62, column: 10, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13128, file: !13125, line: 41, column: 15)
!13147 = !{i64 2039456}
!13148 = !DILocation(line: 0, scope: !13141, inlinedAt: !13145)
!13149 = !DILocation(line: 86, column: 3, scope: !13146)
!13150 = !DILocation(line: 41, column: 2, scope: !13128)
!13151 = distinct !{!13151, !13150, !13152}
!13152 = !DILocation(line: 105, column: 2, scope: !13128)
!13153 = distinct !DISubprogram(name: "k_cpu_idle", scope: !220, file: !220, line: 5627, type: !365, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !2149)
!13154 = !DILocation(line: 5629, column: 2, scope: !13153)
!13155 = !DILocation(line: 5630, column: 1, scope: !13153)
!13156 = !DISubprogram(name: "arch_cpu_idle", scope: !345, file: !345, line: 167, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!13157 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3177, file: !3177, line: 30, type: !13158, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13160)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{!117, !3186, !146}
!13160 = !{!13161, !13162, !13163, !13164}
!13161 = !DILocalVariable(name: "node", arg: 1, scope: !13157, file: !3177, line: 30, type: !3186)
!13162 = !DILocalVariable(name: "needs_free", arg: 2, scope: !13157, file: !3177, line: 30, type: !146)
!13163 = !DILocalVariable(name: "ret", scope: !13157, file: !3177, line: 32, type: !117)
!13164 = !DILocalVariable(name: "anode", scope: !13165, file: !3177, line: 40, type: !3175)
!13165 = distinct !DILexicalBlock(scope: !13166, file: !3177, line: 34, column: 68)
!13166 = distinct !DILexicalBlock(scope: !13157, file: !3177, line: 34, column: 6)
!13167 = !DILocation(line: 0, scope: !13157)
!13168 = !DILocation(line: 34, column: 12, scope: !13166)
!13169 = !DILocation(line: 34, column: 21, scope: !13166)
!13170 = !DILocation(line: 34, column: 25, scope: !13166)
!13171 = !DILocation(line: 34, column: 52, scope: !13166)
!13172 = !DILocation(line: 34, column: 6, scope: !13157)
!13173 = !DILocation(line: 0, scope: !13165)
!13174 = !DILocation(line: 43, column: 16, scope: !13165)
!13175 = !DILocation(line: 44, column: 7, scope: !13165)
!13176 = !DILocation(line: 42, column: 11, scope: !13165)
!13177 = !DILocation(line: 45, column: 4, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13179, file: !3177, line: 44, column: 19)
!13179 = distinct !DILexicalBlock(scope: !13165, file: !3177, line: 44, column: 7)
!13180 = !DILocation(line: 46, column: 3, scope: !13178)
!13181 = !DILocation(line: 52, column: 9, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13166, file: !3177, line: 47, column: 9)
!13183 = !DILocation(line: 0, scope: !13166)
!13184 = !DILocation(line: 55, column: 2, scope: !13157)
!13185 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !417, file: !417, line: 270, type: !13186, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13188)
!13186 = !DISubroutineType(types: !13187)
!13187 = !{!143, !3186}
!13188 = !{!13189}
!13189 = !DILocalVariable(name: "node", arg: 1, scope: !13185, file: !417, line: 270, type: !3186)
!13190 = !DILocation(line: 0, scope: !13185)
!13191 = !DILocation(line: 272, column: 15, scope: !13185)
!13192 = !DILocation(line: 272, column: 9, scope: !13185)
!13193 = !DILocation(line: 272, column: 2, scope: !13185)
!13194 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3177, file: !3177, line: 58, type: !13195, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13216)
!13195 = !DISubroutineType(types: !13196)
!13196 = !{null, !13197}
!13197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13198, size: 32)
!13198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !13199)
!13199 = !{!13200, !13206, !13210}
!13200 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !13198, file: !220, line: 1710, baseType: !13201, size: 64)
!13201 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !13202)
!13202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !13203)
!13203 = !{!13204, !13205}
!13204 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13202, file: !417, line: 42, baseType: !3186, size: 32)
!13205 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13202, file: !417, line: 43, baseType: !3186, size: 32, offset: 32)
!13206 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13198, file: !220, line: 1711, baseType: !13207, size: 32, offset: 64)
!13207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !13208)
!13208 = !{!13209}
!13209 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13207, file: !334, line: 52, baseType: !22, size: 32)
!13210 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13198, file: !220, line: 1712, baseType: !13211, size: 64, offset: 96)
!13211 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !13212)
!13212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !13213)
!13213 = !{!13214}
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13212, file: !261, line: 232, baseType: !13215, size: 64)
!13215 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !3189)
!13216 = !{!13217}
!13217 = !DILocalVariable(name: "queue", arg: 1, scope: !13194, file: !3177, line: 58, type: !13197)
!13218 = !DILocation(line: 0, scope: !13194)
!13219 = !DILocation(line: 60, column: 26, scope: !13194)
!13220 = !DILocation(line: 60, column: 2, scope: !13194)
!13221 = !DILocation(line: 61, column: 16, scope: !13194)
!13222 = !DILocation(line: 62, column: 23, scope: !13194)
!13223 = !DILocation(line: 62, column: 2, scope: !13194)
!13224 = !DILocation(line: 70, column: 1, scope: !13194)
!13225 = distinct !DISubprogram(name: "sys_sflist_init", scope: !417, file: !417, line: 202, type: !13226, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13229)
!13226 = !DISubroutineType(types: !13227)
!13227 = !{null, !13228}
!13228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13201, size: 32)
!13229 = !{!13230}
!13230 = !DILocalVariable(name: "list", arg: 1, scope: !13225, file: !417, line: 202, type: !13228)
!13231 = !DILocation(line: 0, scope: !13225)
!13232 = !DILocation(line: 204, column: 8, scope: !13225)
!13233 = !DILocation(line: 204, column: 13, scope: !13225)
!13234 = !DILocation(line: 205, column: 8, scope: !13225)
!13235 = !DILocation(line: 205, column: 13, scope: !13225)
!13236 = !DILocation(line: 206, column: 1, scope: !13225)
!13237 = distinct !DISubprogram(name: "z_waitq_init", scope: !12740, file: !12740, line: 47, type: !13238, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13241)
!13238 = !DISubroutineType(types: !13239)
!13239 = !{null, !13240}
!13240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13211, size: 32)
!13241 = !{!13242}
!13242 = !DILocalVariable(name: "w", arg: 1, scope: !13237, file: !12740, line: 47, type: !13240)
!13243 = !DILocation(line: 0, scope: !13237)
!13244 = !DILocation(line: 49, column: 21, scope: !13237)
!13245 = !DILocation(line: 49, column: 2, scope: !13237)
!13246 = !DILocation(line: 50, column: 1, scope: !13237)
!13247 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !13248, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13251)
!13248 = !DISubroutineType(types: !13249)
!13249 = !{null, !13250}
!13250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13215, size: 32)
!13251 = !{!13252}
!13252 = !DILocalVariable(name: "list", arg: 1, scope: !13247, file: !235, line: 197, type: !13250)
!13253 = !DILocation(line: 0, scope: !13247)
!13254 = !DILocation(line: 199, column: 8, scope: !13247)
!13255 = !DILocation(line: 199, column: 13, scope: !13247)
!13256 = !DILocation(line: 200, column: 8, scope: !13247)
!13257 = !DILocation(line: 200, column: 13, scope: !13247)
!13258 = !DILocation(line: 201, column: 1, scope: !13247)
!13259 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3177, file: !3177, line: 94, type: !13195, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13260)
!13260 = !{!13261, !13262, !13267}
!13261 = !DILocalVariable(name: "queue", arg: 1, scope: !13259, file: !3177, line: 94, type: !13197)
!13262 = !DILocalVariable(name: "key", scope: !13259, file: !3177, line: 98, type: !13263)
!13263 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !13264)
!13264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !13265)
!13265 = !{!13266}
!13266 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13264, file: !334, line: 33, baseType: !118, size: 32)
!13267 = !DILocalVariable(name: "first_pending_thread", scope: !13259, file: !3177, line: 99, type: !13268)
!13268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13269, size: 32)
!13269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !13270)
!13270 = !{!13271, !13309, !13321, !13322, !13323, !13324, !13330, !13342}
!13271 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13269, file: !225, line: 247, baseType: !13272, size: 384)
!13272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !13273)
!13273 = !{!13274, !13284, !13285, !13286, !13287, !13296, !13297, !13298}
!13274 = !DIDerivedType(tag: DW_TAG_member, scope: !13272, file: !225, line: 60, baseType: !13275, size: 64)
!13275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13272, file: !225, line: 60, size: 64, elements: !13276)
!13276 = !{!13277, !13278}
!13277 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13275, file: !225, line: 61, baseType: !3188, size: 64)
!13278 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13275, file: !225, line: 62, baseType: !13279, size: 64)
!13279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !13280)
!13280 = !{!13281}
!13281 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13279, file: !251, line: 50, baseType: !13282, size: 64)
!13282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13283, size: 64, elements: !256)
!13283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13279, size: 32)
!13284 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13272, file: !225, line: 68, baseType: !13240, size: 32, offset: 64)
!13285 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13272, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!13286 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13272, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!13287 = !DIDerivedType(tag: DW_TAG_member, scope: !13272, file: !225, line: 90, baseType: !13288, size: 16, offset: 112)
!13288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13272, file: !225, line: 90, size: 16, elements: !13289)
!13289 = !{!13290, !13295}
!13290 = !DIDerivedType(tag: DW_TAG_member, scope: !13288, file: !225, line: 91, baseType: !13291, size: 16)
!13291 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13288, file: !225, line: 91, size: 16, elements: !13292)
!13292 = !{!13293, !13294}
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13291, file: !225, line: 96, baseType: !275, size: 8)
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13291, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!13295 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13288, file: !225, line: 100, baseType: !279, size: 16)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13272, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!13297 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13272, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!13298 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13272, file: !225, line: 131, baseType: !13299, size: 192, offset: 192)
!13299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !13300)
!13300 = !{!13301, !13302, !13308}
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13299, file: !261, line: 245, baseType: !3188, size: 64)
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13299, file: !261, line: 246, baseType: !13303, size: 32, offset: 64)
!13303 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !13304)
!13304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13305, size: 32)
!13305 = !DISubroutineType(types: !13306)
!13306 = !{null, !13307}
!13307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13299, size: 32)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13299, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13269, file: !225, line: 250, baseType: !13310, size: 288, offset: 384)
!13310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !13311)
!13311 = !{!13312, !13313, !13314, !13315, !13316, !13317, !13318, !13319, !13320}
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13310, file: !296, line: 26, baseType: !156, size: 32)
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13310, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!13314 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13310, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13310, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13310, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13310, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13310, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13310, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13310, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13269, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!13322 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13269, file: !225, line: 256, baseType: !13211, size: 64, offset: 704)
!13323 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13269, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!13324 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13269, file: !225, line: 300, baseType: !13325, size: 96, offset: 800)
!13325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !13326)
!13326 = !{!13327, !13328, !13329}
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13325, file: !225, line: 153, baseType: !22, size: 32)
!13328 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13325, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!13329 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13325, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13269, file: !225, line: 325, baseType: !13331, size: 32, offset: 896)
!13331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13332, size: 32)
!13332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !13333)
!13333 = !{!13334, !13340, !13341}
!13334 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13332, file: !220, line: 5074, baseType: !13335, size: 96)
!13335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !13336)
!13336 = !{!13337, !13338, !13339}
!13337 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13335, file: !324, line: 57, baseType: !327, size: 32)
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13335, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13335, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13332, file: !220, line: 5075, baseType: !13211, size: 64, offset: 96)
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13332, file: !220, line: 5076, baseType: !13207, size: 32, offset: 160)
!13342 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13269, file: !225, line: 343, baseType: !13343, size: 64, offset: 928)
!13343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !13344)
!13344 = !{!13345, !13346}
!13345 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13343, file: !296, line: 63, baseType: !156, size: 32)
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13343, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!13347 = !DILocation(line: 0, scope: !13259)
!13348 = !DILocation(line: 98, column: 45, scope: !13259)
!13349 = !DILocalVariable(name: "l", arg: 1, scope: !13350, file: !334, line: 136, type: !13353)
!13350 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !13351, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13354)
!13351 = !DISubroutineType(types: !13352)
!13352 = !{!13263, !13353}
!13353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13207, size: 32)
!13354 = !{!13349, !13355}
!13355 = !DILocalVariable(name: "k", scope: !13350, file: !334, line: 139, type: !13263)
!13356 = !DILocation(line: 0, scope: !13350, inlinedAt: !13357)
!13357 = distinct !DILocation(line: 98, column: 25, scope: !13259)
!13358 = !DILocation(line: 55, column: 2, scope: !13359, inlinedAt: !13363)
!13359 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6191, file: !6191, line: 42, type: !6192, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13360)
!13360 = !{!13361, !13362}
!13361 = !DILocalVariable(name: "key", scope: !13359, file: !6191, line: 44, type: !32)
!13362 = !DILocalVariable(name: "tmp", scope: !13359, file: !6191, line: 53, type: !32)
!13363 = distinct !DILocation(line: 145, column: 10, scope: !13350, inlinedAt: !13357)
!13364 = !{i64 2047197}
!13365 = !DILocation(line: 0, scope: !13359, inlinedAt: !13363)
!13366 = !DILocation(line: 148, column: 2, scope: !13367, inlinedAt: !13357)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !334, line: 148, column: 2)
!13368 = distinct !DILexicalBlock(scope: !13350, file: !334, line: 148, column: 2)
!13369 = !DILocation(line: 148, column: 2, scope: !13368, inlinedAt: !13357)
!13370 = !DILocation(line: 148, column: 2, scope: !13371, inlinedAt: !13357)
!13371 = distinct !DILexicalBlock(scope: !13367, file: !334, line: 148, column: 2)
!13372 = !DILocation(line: 160, column: 2, scope: !13350, inlinedAt: !13357)
!13373 = !DILocation(line: 101, column: 55, scope: !13259)
!13374 = !DILocation(line: 101, column: 25, scope: !13259)
!13375 = !DILocation(line: 103, column: 27, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13259, file: !3177, line: 103, column: 6)
!13377 = !DILocation(line: 103, column: 6, scope: !13259)
!13378 = !DILocation(line: 104, column: 3, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13376, file: !3177, line: 103, column: 36)
!13380 = !DILocation(line: 105, column: 2, scope: !13379)
!13381 = !DILocation(line: 108, column: 2, scope: !13259)
!13382 = !DILocation(line: 109, column: 1, scope: !13259)
!13383 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3177, file: !3177, line: 81, type: !13384, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13386)
!13384 = !DISubroutineType(types: !13385)
!13385 = !{null, !13268, !117}
!13386 = !{!13387, !13388}
!13387 = !DILocalVariable(name: "thread", arg: 1, scope: !13383, file: !3177, line: 81, type: !13268)
!13388 = !DILocalVariable(name: "data", arg: 2, scope: !13383, file: !3177, line: 81, type: !117)
!13389 = !DILocation(line: 0, scope: !13383)
!13390 = !DILocalVariable(name: "thread", arg: 1, scope: !13391, file: !13392, line: 134, type: !13268)
!13391 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13392, file: !13392, line: 134, type: !13393, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13395)
!13392 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13393 = !DISubroutineType(types: !13394)
!13394 = !{null, !13268, !32, !117}
!13395 = !{!13390, !13396, !13397}
!13396 = !DILocalVariable(name: "value", arg: 2, scope: !13391, file: !13392, line: 135, type: !32)
!13397 = !DILocalVariable(name: "data", arg: 3, scope: !13391, file: !13392, line: 136, type: !117)
!13398 = !DILocation(line: 0, scope: !13391, inlinedAt: !13399)
!13399 = distinct !DILocation(line: 83, column: 2, scope: !13383)
!13400 = !DILocalVariable(name: "thread", arg: 1, scope: !13401, file: !12421, line: 65, type: !13268)
!13401 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12421, file: !12421, line: 65, type: !13402, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13404)
!13402 = !DISubroutineType(types: !13403)
!13403 = !{null, !13268, !32}
!13404 = !{!13400, !13405}
!13405 = !DILocalVariable(name: "value", arg: 2, scope: !13401, file: !12421, line: 65, type: !32)
!13406 = !DILocation(line: 0, scope: !13401, inlinedAt: !13407)
!13407 = distinct !DILocation(line: 138, column: 2, scope: !13391, inlinedAt: !13399)
!13408 = !DILocation(line: 67, column: 15, scope: !13401, inlinedAt: !13407)
!13409 = !DILocation(line: 67, column: 33, scope: !13401, inlinedAt: !13407)
!13410 = !DILocation(line: 139, column: 15, scope: !13391, inlinedAt: !13399)
!13411 = !DILocation(line: 139, column: 25, scope: !13391, inlinedAt: !13399)
!13412 = !DILocation(line: 84, column: 2, scope: !13383)
!13413 = !DILocation(line: 85, column: 1, scope: !13383)
!13414 = distinct !DISubprogram(name: "k_queue_insert", scope: !3177, file: !3177, line: 175, type: !13415, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13417)
!13415 = !DISubroutineType(types: !13416)
!13416 = !{null, !13197, !117, !117}
!13417 = !{!13418, !13419, !13420}
!13418 = !DILocalVariable(name: "queue", arg: 1, scope: !13414, file: !3177, line: 175, type: !13197)
!13419 = !DILocalVariable(name: "prev", arg: 2, scope: !13414, file: !3177, line: 175, type: !117)
!13420 = !DILocalVariable(name: "data", arg: 3, scope: !13414, file: !3177, line: 175, type: !117)
!13421 = !DILocation(line: 0, scope: !13414)
!13422 = !DILocation(line: 179, column: 8, scope: !13414)
!13423 = !DILocation(line: 182, column: 1, scope: !13414)
!13424 = distinct !DISubprogram(name: "queue_insert", scope: !3177, file: !3177, line: 120, type: !13425, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13427)
!13425 = !DISubroutineType(types: !13426)
!13426 = !{!362, !13197, !117, !117, !146, !146}
!13427 = !{!13428, !13429, !13430, !13431, !13432, !13433, !13434, !13435}
!13428 = !DILocalVariable(name: "queue", arg: 1, scope: !13424, file: !3177, line: 120, type: !13197)
!13429 = !DILocalVariable(name: "prev", arg: 2, scope: !13424, file: !3177, line: 120, type: !117)
!13430 = !DILocalVariable(name: "data", arg: 3, scope: !13424, file: !3177, line: 120, type: !117)
!13431 = !DILocalVariable(name: "alloc", arg: 4, scope: !13424, file: !3177, line: 121, type: !146)
!13432 = !DILocalVariable(name: "is_append", arg: 5, scope: !13424, file: !3177, line: 121, type: !146)
!13433 = !DILocalVariable(name: "first_pending_thread", scope: !13424, file: !3177, line: 123, type: !13268)
!13434 = !DILocalVariable(name: "key", scope: !13424, file: !3177, line: 124, type: !13263)
!13435 = !DILocalVariable(name: "anode", scope: !13436, file: !3177, line: 146, type: !3175)
!13436 = distinct !DILexicalBlock(scope: !13437, file: !3177, line: 145, column: 13)
!13437 = distinct !DILexicalBlock(scope: !13424, file: !3177, line: 145, column: 6)
!13438 = !DILocation(line: 0, scope: !13424)
!13439 = !DILocation(line: 124, column: 45, scope: !13424)
!13440 = !DILocation(line: 0, scope: !13350, inlinedAt: !13441)
!13441 = distinct !DILocation(line: 124, column: 25, scope: !13424)
!13442 = !DILocation(line: 55, column: 2, scope: !13359, inlinedAt: !13443)
!13443 = distinct !DILocation(line: 145, column: 10, scope: !13350, inlinedAt: !13441)
!13444 = !DILocation(line: 0, scope: !13359, inlinedAt: !13443)
!13445 = !DILocation(line: 148, column: 2, scope: !13367, inlinedAt: !13441)
!13446 = !DILocation(line: 148, column: 2, scope: !13368, inlinedAt: !13441)
!13447 = !DILocation(line: 148, column: 2, scope: !13371, inlinedAt: !13441)
!13448 = !DILocation(line: 160, column: 2, scope: !13350, inlinedAt: !13441)
!13449 = !DILocation(line: 128, column: 6, scope: !13424)
!13450 = !DILocation(line: 129, column: 39, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !3177, line: 128, column: 17)
!13452 = distinct !DILexicalBlock(scope: !13424, file: !3177, line: 128, column: 6)
!13453 = !DILocation(line: 129, column: 10, scope: !13451)
!13454 = !DILocation(line: 130, column: 2, scope: !13451)
!13455 = !DILocation(line: 131, column: 55, scope: !13424)
!13456 = !DILocation(line: 131, column: 25, scope: !13424)
!13457 = !DILocation(line: 133, column: 27, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13424, file: !3177, line: 133, column: 6)
!13459 = !DILocation(line: 133, column: 6, scope: !13424)
!13460 = !DILocation(line: 136, column: 3, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13458, file: !3177, line: 133, column: 36)
!13462 = !DILocation(line: 137, column: 3, scope: !13461)
!13463 = !DILocation(line: 141, column: 3, scope: !13461)
!13464 = !DILocation(line: 145, column: 6, scope: !13424)
!13465 = !DILocation(line: 148, column: 11, scope: !13436)
!13466 = !DILocation(line: 0, scope: !13436)
!13467 = !DILocation(line: 149, column: 13, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13436, file: !3177, line: 149, column: 7)
!13469 = !DILocation(line: 149, column: 7, scope: !13436)
!13470 = !DILocalVariable(name: "key", arg: 2, scope: !13471, file: !334, line: 190, type: !13263)
!13471 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !13472, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13474)
!13472 = !DISubroutineType(types: !13473)
!13473 = !{null, !13353, !13263}
!13474 = !{!13475, !13470}
!13475 = !DILocalVariable(name: "l", arg: 1, scope: !13471, file: !334, line: 189, type: !13353)
!13476 = !DILocation(line: 0, scope: !13471, inlinedAt: !13477)
!13477 = distinct !DILocation(line: 150, column: 4, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13468, file: !3177, line: 149, column: 22)
!13479 = !DILocation(line: 194, column: 2, scope: !13480, inlinedAt: !13477)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !334, line: 194, column: 2)
!13481 = distinct !DILexicalBlock(scope: !13471, file: !334, line: 194, column: 2)
!13482 = !DILocation(line: 194, column: 2, scope: !13481, inlinedAt: !13477)
!13483 = !DILocation(line: 194, column: 2, scope: !13484, inlinedAt: !13477)
!13484 = distinct !DILexicalBlock(scope: !13480, file: !334, line: 194, column: 2)
!13485 = !DILocalVariable(name: "key", arg: 1, scope: !13486, file: !6191, line: 84, type: !32)
!13486 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6191, file: !6191, line: 84, type: !6202, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13487)
!13487 = !{!13485}
!13488 = !DILocation(line: 0, scope: !13486, inlinedAt: !13489)
!13489 = distinct !DILocation(line: 215, column: 2, scope: !13471, inlinedAt: !13477)
!13490 = !DILocation(line: 95, column: 2, scope: !13486, inlinedAt: !13489)
!13491 = !{i64 2048014}
!13492 = !DILocation(line: 157, column: 10, scope: !13436)
!13493 = !DILocation(line: 157, column: 15, scope: !13436)
!13494 = !DILocation(line: 158, column: 27, scope: !13436)
!13495 = !DILocation(line: 158, column: 3, scope: !13436)
!13496 = !DILocation(line: 161, column: 19, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13437, file: !3177, line: 160, column: 9)
!13498 = !DILocation(line: 161, column: 3, scope: !13497)
!13499 = !DILocation(line: 166, column: 42, scope: !13424)
!13500 = !DILocation(line: 166, column: 28, scope: !13424)
!13501 = !DILocation(line: 166, column: 36, scope: !13424)
!13502 = !DILocation(line: 166, column: 2, scope: !13424)
!13503 = !DILocation(line: 168, column: 2, scope: !13424)
!13504 = !DILocation(line: 172, column: 2, scope: !13424)
!13505 = !DILocation(line: 173, column: 1, scope: !13424)
!13506 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !417, file: !417, line: 255, type: !13507, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13509)
!13507 = !DISubroutineType(types: !13508)
!13508 = !{!3186, !13228}
!13509 = !{!13510}
!13510 = !DILocalVariable(name: "list", arg: 1, scope: !13506, file: !417, line: 255, type: !13228)
!13511 = !DILocation(line: 0, scope: !13506)
!13512 = !DILocation(line: 257, column: 15, scope: !13506)
!13513 = !DILocation(line: 257, column: 2, scope: !13506)
!13514 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13392, file: !13392, line: 102, type: !13515, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13516)
!13515 = !DISubroutineType(types: !3140)
!13516 = !{!13517}
!13517 = !DILocalVariable(name: "size", arg: 1, scope: !13514, file: !13392, line: 102, type: !315)
!13518 = !DILocation(line: 0, scope: !13514)
!13519 = !DILocation(line: 104, column: 9, scope: !13514)
!13520 = !DILocation(line: 104, column: 2, scope: !13514)
!13521 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !417, file: !417, line: 288, type: !13522, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13524)
!13522 = !DISubroutineType(types: !13523)
!13523 = !{null, !3186, !143}
!13524 = !{!13525, !13526}
!13525 = !DILocalVariable(name: "node", arg: 1, scope: !13521, file: !417, line: 288, type: !3186)
!13526 = !DILocalVariable(name: "flags", arg: 2, scope: !13521, file: !417, line: 288, type: !143)
!13527 = !DILocation(line: 0, scope: !13521)
!13528 = !DILocation(line: 290, column: 2, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13530, file: !417, line: 290, column: 2)
!13530 = distinct !DILexicalBlock(scope: !13521, file: !417, line: 290, column: 2)
!13531 = !DILocation(line: 290, column: 2, scope: !13530)
!13532 = !DILocation(line: 290, column: 2, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13529, file: !417, line: 290, column: 2)
!13534 = !DILocation(line: 291, column: 8, scope: !13521)
!13535 = !DILocation(line: 291, column: 23, scope: !13521)
!13536 = !DILocation(line: 292, column: 1, scope: !13521)
!13537 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !417, file: !417, line: 420, type: !13538, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13540)
!13538 = !DISubroutineType(types: !13539)
!13539 = !{null, !13228, !3186, !3186}
!13540 = !{!13541, !13542, !13543}
!13541 = !DILocalVariable(name: "list", arg: 1, scope: !13537, file: !417, line: 420, type: !13228)
!13542 = !DILocalVariable(name: "prev", arg: 2, scope: !13537, file: !417, line: 420, type: !3186)
!13543 = !DILocalVariable(name: "node", arg: 3, scope: !13537, file: !417, line: 420, type: !3186)
!13544 = !DILocation(line: 0, scope: !13537)
!13545 = !DILocation(line: 420, column: 1, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13537, file: !417, line: 420, column: 1)
!13547 = !DILocation(line: 420, column: 1, scope: !13537)
!13548 = !DILocation(line: 420, column: 1, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13546, file: !417, line: 420, column: 1)
!13550 = !DILocation(line: 420, column: 1, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13546, file: !417, line: 420, column: 1)
!13552 = !DILocation(line: 420, column: 1, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13551, file: !417, line: 420, column: 1)
!13554 = !DILocation(line: 420, column: 1, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13551, file: !417, line: 420, column: 1)
!13556 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !417, file: !417, line: 360, type: !13557, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13559)
!13557 = !DISubroutineType(types: !13558)
!13558 = !{null, !13228, !3186}
!13559 = !{!13560, !13561}
!13560 = !DILocalVariable(name: "list", arg: 1, scope: !13556, file: !417, line: 360, type: !13228)
!13561 = !DILocalVariable(name: "node", arg: 2, scope: !13556, file: !417, line: 360, type: !3186)
!13562 = !DILocation(line: 0, scope: !13556)
!13563 = !DILocation(line: 360, column: 1, scope: !13556)
!13564 = !DILocation(line: 360, column: 1, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13556, file: !417, line: 360, column: 1)
!13566 = !DILocation(line: 360, column: 1, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13565, file: !417, line: 360, column: 1)
!13568 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !417, file: !417, line: 211, type: !13569, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13571)
!13569 = !DISubroutineType(types: !13570)
!13570 = !{!3186, !3186}
!13571 = !{!13572}
!13572 = !DILocalVariable(name: "node", arg: 1, scope: !13568, file: !417, line: 211, type: !3186)
!13573 = !DILocation(line: 0, scope: !13568)
!13574 = !DILocation(line: 213, column: 32, scope: !13568)
!13575 = !DILocation(line: 213, column: 47, scope: !13568)
!13576 = !DILocation(line: 213, column: 9, scope: !13568)
!13577 = !DILocation(line: 213, column: 2, scope: !13568)
!13578 = distinct !DISubprogram(name: "sys_sflist_append", scope: !417, file: !417, line: 373, type: !13557, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13579)
!13579 = !{!13580, !13581}
!13580 = !DILocalVariable(name: "list", arg: 1, scope: !13578, file: !417, line: 373, type: !13228)
!13581 = !DILocalVariable(name: "node", arg: 2, scope: !13578, file: !417, line: 373, type: !3186)
!13582 = !DILocation(line: 0, scope: !13578)
!13583 = !DILocation(line: 373, column: 1, scope: !13578)
!13584 = !DILocation(line: 373, column: 1, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13578, file: !417, line: 373, column: 1)
!13586 = !DILocation(line: 373, column: 1, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13585, file: !417, line: 373, column: 1)
!13588 = !DILocation(line: 373, column: 1, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13585, file: !417, line: 373, column: 1)
!13590 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !417, file: !417, line: 218, type: !13591, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13593)
!13591 = !DISubroutineType(types: !13592)
!13592 = !{null, !3186, !3186}
!13593 = !{!13594, !13595, !13596}
!13594 = !DILocalVariable(name: "parent", arg: 1, scope: !13590, file: !417, line: 218, type: !3186)
!13595 = !DILocalVariable(name: "child", arg: 2, scope: !13590, file: !417, line: 219, type: !3186)
!13596 = !DILocalVariable(name: "cur_flags", scope: !13590, file: !417, line: 221, type: !143)
!13597 = !DILocation(line: 0, scope: !13590)
!13598 = !DILocation(line: 221, column: 22, scope: !13590)
!13599 = !DILocation(line: 223, column: 27, scope: !13590)
!13600 = !DILocation(line: 223, column: 39, scope: !13590)
!13601 = !DILocation(line: 223, column: 37, scope: !13590)
!13602 = !DILocation(line: 223, column: 10, scope: !13590)
!13603 = !DILocation(line: 223, column: 25, scope: !13590)
!13604 = !DILocation(line: 224, column: 1, scope: !13590)
!13605 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !417, file: !417, line: 231, type: !13557, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13606)
!13606 = !{!13607, !13608}
!13607 = !DILocalVariable(name: "list", arg: 1, scope: !13605, file: !417, line: 231, type: !13228)
!13608 = !DILocalVariable(name: "node", arg: 2, scope: !13605, file: !417, line: 231, type: !3186)
!13609 = !DILocation(line: 0, scope: !13605)
!13610 = !DILocation(line: 233, column: 8, scope: !13605)
!13611 = !DILocation(line: 233, column: 13, scope: !13605)
!13612 = !DILocation(line: 234, column: 1, scope: !13605)
!13613 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !417, file: !417, line: 226, type: !13557, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13614)
!13614 = !{!13615, !13616}
!13615 = !DILocalVariable(name: "list", arg: 1, scope: !13613, file: !417, line: 226, type: !13228)
!13616 = !DILocalVariable(name: "node", arg: 2, scope: !13613, file: !417, line: 226, type: !3186)
!13617 = !DILocation(line: 0, scope: !13613)
!13618 = !DILocation(line: 228, column: 8, scope: !13613)
!13619 = !DILocation(line: 228, column: 13, scope: !13613)
!13620 = !DILocation(line: 229, column: 1, scope: !13613)
!13621 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !417, file: !417, line: 243, type: !13507, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13622)
!13622 = !{!13623}
!13623 = !DILocalVariable(name: "list", arg: 1, scope: !13621, file: !417, line: 243, type: !13228)
!13624 = !DILocation(line: 0, scope: !13621)
!13625 = !DILocation(line: 245, column: 15, scope: !13621)
!13626 = !DILocation(line: 245, column: 2, scope: !13621)
!13627 = distinct !DISubprogram(name: "k_queue_append", scope: !3177, file: !3177, line: 184, type: !13628, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13630)
!13628 = !DISubroutineType(types: !13629)
!13629 = !{null, !13197, !117}
!13630 = !{!13631, !13632}
!13631 = !DILocalVariable(name: "queue", arg: 1, scope: !13627, file: !3177, line: 184, type: !13197)
!13632 = !DILocalVariable(name: "data", arg: 2, scope: !13627, file: !3177, line: 184, type: !117)
!13633 = !DILocation(line: 0, scope: !13627)
!13634 = !DILocation(line: 188, column: 8, scope: !13627)
!13635 = !DILocation(line: 191, column: 1, scope: !13627)
!13636 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3177, file: !3177, line: 193, type: !13628, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13637)
!13637 = !{!13638, !13639}
!13638 = !DILocalVariable(name: "queue", arg: 1, scope: !13636, file: !3177, line: 193, type: !13197)
!13639 = !DILocalVariable(name: "data", arg: 2, scope: !13636, file: !3177, line: 193, type: !117)
!13640 = !DILocation(line: 0, scope: !13636)
!13641 = !DILocation(line: 197, column: 8, scope: !13636)
!13642 = !DILocation(line: 200, column: 1, scope: !13636)
!13643 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3177, file: !3177, line: 202, type: !13644, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13646)
!13644 = !DISubroutineType(types: !13645)
!13645 = !{!362, !13197, !117}
!13646 = !{!13647, !13648, !13649}
!13647 = !DILocalVariable(name: "queue", arg: 1, scope: !13643, file: !3177, line: 202, type: !13197)
!13648 = !DILocalVariable(name: "data", arg: 2, scope: !13643, file: !3177, line: 202, type: !117)
!13649 = !DILocalVariable(name: "ret", scope: !13643, file: !3177, line: 206, type: !362)
!13650 = !DILocation(line: 0, scope: !13643)
!13651 = !DILocation(line: 206, column: 16, scope: !13643)
!13652 = !DILocation(line: 210, column: 2, scope: !13643)
!13653 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3177, file: !3177, line: 223, type: !13644, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13654)
!13654 = !{!13655, !13656, !13657}
!13655 = !DILocalVariable(name: "queue", arg: 1, scope: !13653, file: !3177, line: 223, type: !13197)
!13656 = !DILocalVariable(name: "data", arg: 2, scope: !13653, file: !3177, line: 223, type: !117)
!13657 = !DILocalVariable(name: "ret", scope: !13653, file: !3177, line: 227, type: !362)
!13658 = !DILocation(line: 0, scope: !13653)
!13659 = !DILocation(line: 227, column: 16, scope: !13653)
!13660 = !DILocation(line: 231, column: 2, scope: !13653)
!13661 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3177, file: !3177, line: 244, type: !13662, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13664)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{!118, !13197, !117, !117}
!13664 = !{!13665, !13666, !13667, !13668, !13669}
!13665 = !DILocalVariable(name: "queue", arg: 1, scope: !13661, file: !3177, line: 244, type: !13197)
!13666 = !DILocalVariable(name: "head", arg: 2, scope: !13661, file: !3177, line: 244, type: !117)
!13667 = !DILocalVariable(name: "tail", arg: 3, scope: !13661, file: !3177, line: 244, type: !117)
!13668 = !DILocalVariable(name: "key", scope: !13661, file: !3177, line: 255, type: !13263)
!13669 = !DILocalVariable(name: "thread", scope: !13661, file: !3177, line: 256, type: !13268)
!13670 = !DILocation(line: 0, scope: !13661)
!13671 = !DILocation(line: 249, column: 2, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13661, file: !3177, line: 249, column: 2)
!13673 = !DILocation(line: 255, column: 45, scope: !13661)
!13674 = !DILocation(line: 0, scope: !13350, inlinedAt: !13675)
!13675 = distinct !DILocation(line: 255, column: 25, scope: !13661)
!13676 = !DILocation(line: 55, column: 2, scope: !13359, inlinedAt: !13677)
!13677 = distinct !DILocation(line: 145, column: 10, scope: !13350, inlinedAt: !13675)
!13678 = !DILocation(line: 0, scope: !13359, inlinedAt: !13677)
!13679 = !DILocation(line: 148, column: 2, scope: !13367, inlinedAt: !13675)
!13680 = !DILocation(line: 148, column: 2, scope: !13368, inlinedAt: !13675)
!13681 = !DILocation(line: 148, column: 2, scope: !13371, inlinedAt: !13675)
!13682 = !DILocation(line: 160, column: 2, scope: !13350, inlinedAt: !13675)
!13683 = !DILocation(line: 259, column: 42, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !3177, line: 258, column: 20)
!13685 = distinct !DILexicalBlock(scope: !13661, file: !3177, line: 258, column: 6)
!13686 = !DILocation(line: 259, column: 12, scope: !13684)
!13687 = !DILocation(line: 262, column: 24, scope: !13661)
!13688 = !DILocation(line: 262, column: 2, scope: !13661)
!13689 = !DILocation(line: 263, column: 3, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13661, file: !3177, line: 262, column: 45)
!13691 = !DILocation(line: 264, column: 11, scope: !13690)
!13692 = !DILocation(line: 264, column: 10, scope: !13690)
!13693 = !DILocation(line: 265, column: 12, scope: !13690)
!13694 = !DILocation(line: 262, column: 15, scope: !13661)
!13695 = distinct !{!13695, !13688, !13696}
!13696 = !DILocation(line: 266, column: 2, scope: !13661)
!13697 = !DILocation(line: 268, column: 6, scope: !13661)
!13698 = !DILocation(line: 269, column: 34, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13700, file: !3177, line: 268, column: 20)
!13700 = distinct !DILexicalBlock(scope: !13661, file: !3177, line: 268, column: 6)
!13701 = !DILocation(line: 269, column: 3, scope: !13699)
!13702 = !DILocation(line: 270, column: 2, scope: !13699)
!13703 = !DILocation(line: 275, column: 2, scope: !13661)
!13704 = !DILocation(line: 277, column: 1, scope: !13661)
!13705 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !417, file: !417, line: 391, type: !13706, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13708)
!13706 = !DISubroutineType(types: !13707)
!13707 = !{null, !13228, !117, !117}
!13708 = !{!13709, !13710, !13711}
!13709 = !DILocalVariable(name: "list", arg: 1, scope: !13705, file: !417, line: 391, type: !13228)
!13710 = !DILocalVariable(name: "head", arg: 2, scope: !13705, file: !417, line: 391, type: !117)
!13711 = !DILocalVariable(name: "tail", arg: 3, scope: !13705, file: !417, line: 391, type: !117)
!13712 = !DILocation(line: 0, scope: !13705)
!13713 = !DILocation(line: 391, column: 1, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13705, file: !417, line: 391, column: 1)
!13715 = !DILocation(line: 391, column: 1, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13717, file: !417, line: 391, column: 1)
!13717 = distinct !DILexicalBlock(scope: !13714, file: !417, line: 391, column: 1)
!13718 = !DILocation(line: 0, scope: !13716)
!13719 = !DILocation(line: 391, column: 1, scope: !13717)
!13720 = !DILocation(line: 391, column: 1, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13716, file: !417, line: 391, column: 1)
!13722 = !DILocation(line: 391, column: 1, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13716, file: !417, line: 391, column: 1)
!13724 = !DILocation(line: 391, column: 1, scope: !13705)
!13725 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3177, file: !3177, line: 279, type: !13726, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13740)
!13726 = !DISubroutineType(types: !13727)
!13727 = !{!118, !13197, !13728}
!13728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13729, size: 32)
!13729 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !187, line: 40, baseType: !13730)
!13730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !187, line: 35, size: 64, elements: !13731)
!13731 = !{!13732, !13739}
!13732 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13730, file: !187, line: 36, baseType: !13733, size: 32)
!13733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13734, size: 32)
!13734 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !13735)
!13735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !13736)
!13736 = !{!13737}
!13737 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13735, file: !187, line: 30, baseType: !13738, size: 32)
!13738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13735, size: 32)
!13739 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13730, file: !187, line: 37, baseType: !13733, size: 32, offset: 32)
!13740 = !{!13741, !13742, !13743}
!13741 = !DILocalVariable(name: "queue", arg: 1, scope: !13725, file: !3177, line: 279, type: !13197)
!13742 = !DILocalVariable(name: "list", arg: 2, scope: !13725, file: !3177, line: 279, type: !13728)
!13743 = !DILocalVariable(name: "ret", scope: !13725, file: !3177, line: 281, type: !118)
!13744 = !DILocation(line: 0, scope: !13725)
!13745 = !DILocation(line: 286, column: 2, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13725, file: !3177, line: 286, column: 2)
!13747 = !DILocation(line: 286, column: 2, scope: !13725)
!13748 = !DILocation(line: 301, column: 41, scope: !13725)
!13749 = !DILocation(line: 301, column: 53, scope: !13725)
!13750 = !DILocation(line: 301, column: 8, scope: !13725)
!13751 = !DILocation(line: 302, column: 2, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13725, file: !3177, line: 302, column: 2)
!13753 = !DILocation(line: 302, column: 2, scope: !13725)
!13754 = !DILocation(line: 307, column: 2, scope: !13725)
!13755 = !DILocation(line: 311, column: 2, scope: !13725)
!13756 = !DILocation(line: 312, column: 1, scope: !13725)
!13757 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !187, file: !187, line: 261, type: !13758, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13760)
!13758 = !DISubroutineType(types: !13759)
!13759 = !{!146, !13728}
!13760 = !{!13761}
!13761 = !DILocalVariable(name: "list", arg: 1, scope: !13757, file: !187, line: 261, type: !13728)
!13762 = !DILocation(line: 0, scope: !13757)
!13763 = !DILocation(line: 261, column: 1, scope: !13757)
!13764 = distinct !DISubprogram(name: "sys_slist_init", scope: !187, file: !187, line: 196, type: !13765, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13767)
!13765 = !DISubroutineType(types: !13766)
!13766 = !{null, !13728}
!13767 = !{!13768}
!13768 = !DILocalVariable(name: "list", arg: 1, scope: !13764, file: !187, line: 196, type: !13728)
!13769 = !DILocation(line: 0, scope: !13764)
!13770 = !DILocation(line: 198, column: 8, scope: !13764)
!13771 = !DILocation(line: 198, column: 13, scope: !13764)
!13772 = !DILocation(line: 199, column: 8, scope: !13764)
!13773 = !DILocation(line: 199, column: 13, scope: !13764)
!13774 = !DILocation(line: 200, column: 1, scope: !13764)
!13775 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !187, file: !187, line: 231, type: !13776, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13778)
!13776 = !DISubroutineType(types: !13777)
!13777 = !{!13733, !13728}
!13778 = !{!13779}
!13779 = !DILocalVariable(name: "list", arg: 1, scope: !13775, file: !187, line: 231, type: !13728)
!13780 = !DILocation(line: 0, scope: !13775)
!13781 = !DILocation(line: 233, column: 15, scope: !13775)
!13782 = !DILocation(line: 233, column: 2, scope: !13775)
!13783 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3177, file: !3177, line: 314, type: !13784, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13790)
!13784 = !DISubroutineType(types: !13785)
!13785 = !{!117, !13197, !13786}
!13786 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !13787)
!13787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !13788)
!13788 = !{!13789}
!13789 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13787, file: !114, line: 66, baseType: !113, size: 64)
!13790 = !{!13791, !13792, !13793, !13794, !13795, !13798}
!13791 = !DILocalVariable(name: "queue", arg: 1, scope: !13783, file: !3177, line: 314, type: !13197)
!13792 = !DILocalVariable(name: "timeout", arg: 2, scope: !13783, file: !3177, line: 314, type: !13786)
!13793 = !DILocalVariable(name: "key", scope: !13783, file: !3177, line: 316, type: !13263)
!13794 = !DILocalVariable(name: "data", scope: !13783, file: !3177, line: 317, type: !117)
!13795 = !DILocalVariable(name: "node", scope: !13796, file: !3177, line: 322, type: !3186)
!13796 = distinct !DILexicalBlock(scope: !13797, file: !3177, line: 321, column: 52)
!13797 = distinct !DILexicalBlock(scope: !13783, file: !3177, line: 321, column: 6)
!13798 = !DILocalVariable(name: "ret", scope: !13783, file: !3177, line: 343, type: !118)
!13799 = !DILocation(line: 0, scope: !13783)
!13800 = !DILocation(line: 316, column: 45, scope: !13783)
!13801 = !DILocation(line: 0, scope: !13350, inlinedAt: !13802)
!13802 = distinct !DILocation(line: 316, column: 25, scope: !13783)
!13803 = !DILocation(line: 55, column: 2, scope: !13359, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 145, column: 10, scope: !13350, inlinedAt: !13802)
!13805 = !DILocation(line: 0, scope: !13359, inlinedAt: !13804)
!13806 = !DILocation(line: 148, column: 2, scope: !13367, inlinedAt: !13802)
!13807 = !DILocation(line: 148, column: 2, scope: !13368, inlinedAt: !13802)
!13808 = !DILocation(line: 148, column: 2, scope: !13371, inlinedAt: !13802)
!13809 = !DILocation(line: 160, column: 2, scope: !13350, inlinedAt: !13802)
!13810 = !DILocation(line: 321, column: 6, scope: !13797)
!13811 = !DILocation(line: 321, column: 6, scope: !13783)
!13812 = !{!"branch_weights", i32 1, i32 2000}
!13813 = !DILocation(line: 324, column: 10, scope: !13796)
!13814 = !DILocation(line: 0, scope: !13796)
!13815 = !DILocation(line: 325, column: 10, scope: !13796)
!13816 = !DILocation(line: 0, scope: !13471, inlinedAt: !13817)
!13817 = distinct !DILocation(line: 326, column: 3, scope: !13796)
!13818 = !DILocation(line: 194, column: 2, scope: !13480, inlinedAt: !13817)
!13819 = !DILocation(line: 194, column: 2, scope: !13481, inlinedAt: !13817)
!13820 = !DILocation(line: 194, column: 2, scope: !13484, inlinedAt: !13817)
!13821 = !DILocation(line: 0, scope: !13486, inlinedAt: !13822)
!13822 = distinct !DILocation(line: 215, column: 2, scope: !13471, inlinedAt: !13817)
!13823 = !DILocation(line: 95, column: 2, scope: !13486, inlinedAt: !13822)
!13824 = !DILocation(line: 335, column: 6, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13783, file: !3177, line: 335, column: 6)
!13826 = !DILocation(line: 335, column: 6, scope: !13783)
!13827 = !DILocation(line: 0, scope: !13471, inlinedAt: !13828)
!13828 = distinct !DILocation(line: 336, column: 3, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13825, file: !3177, line: 335, column: 40)
!13830 = !DILocation(line: 194, column: 2, scope: !13480, inlinedAt: !13828)
!13831 = !DILocation(line: 194, column: 2, scope: !13481, inlinedAt: !13828)
!13832 = !DILocation(line: 194, column: 2, scope: !13484, inlinedAt: !13828)
!13833 = !DILocation(line: 0, scope: !13486, inlinedAt: !13834)
!13834 = distinct !DILocation(line: 215, column: 2, scope: !13471, inlinedAt: !13828)
!13835 = !DILocation(line: 95, column: 2, scope: !13486, inlinedAt: !13834)
!13836 = !DILocation(line: 340, column: 3, scope: !13829)
!13837 = !DILocation(line: 343, column: 51, scope: !13783)
!13838 = !DILocation(line: 343, column: 12, scope: !13783)
!13839 = !DILocation(line: 348, column: 14, scope: !13783)
!13840 = !DILocation(line: 348, column: 9, scope: !13783)
!13841 = !DILocation(line: 348, column: 29, scope: !13783)
!13842 = !DILocation(line: 348, column: 44, scope: !13783)
!13843 = !DILocation(line: 349, column: 1, scope: !13783)
!13844 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !417, file: !417, line: 323, type: !13845, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13847)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{!146, !13228}
!13847 = !{!13848}
!13848 = !DILocalVariable(name: "list", arg: 1, scope: !13844, file: !417, line: 323, type: !13228)
!13849 = !DILocation(line: 0, scope: !13844)
!13850 = !DILocation(line: 323, column: 1, scope: !13844)
!13851 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !417, file: !417, line: 434, type: !13507, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13852)
!13852 = !{!13853, !13854}
!13853 = !DILocalVariable(name: "list", arg: 1, scope: !13851, file: !417, line: 434, type: !13228)
!13854 = !DILocalVariable(name: "node", scope: !13851, file: !417, line: 434, type: !3186)
!13855 = !DILocation(line: 0, scope: !13851)
!13856 = !DILocation(line: 434, column: 1, scope: !13851)
!13857 = !DILocation(line: 434, column: 1, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13851, file: !417, line: 434, column: 1)
!13859 = !DILocation(line: 434, column: 1, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13858, file: !417, line: 434, column: 1)
!13861 = distinct !DISubprogram(name: "k_queue_remove", scope: !3177, file: !3177, line: 351, type: !13862, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13864)
!13862 = !DISubroutineType(types: !13863)
!13863 = !{!146, !13197, !117}
!13864 = !{!13865, !13866, !13867}
!13865 = !DILocalVariable(name: "queue", arg: 1, scope: !13861, file: !3177, line: 351, type: !13197)
!13866 = !DILocalVariable(name: "data", arg: 2, scope: !13861, file: !3177, line: 351, type: !117)
!13867 = !DILocalVariable(name: "ret", scope: !13861, file: !3177, line: 355, type: !146)
!13868 = !DILocation(line: 0, scope: !13861)
!13869 = !DILocation(line: 355, column: 48, scope: !13861)
!13870 = !DILocation(line: 355, column: 56, scope: !13861)
!13871 = !DILocation(line: 355, column: 13, scope: !13861)
!13872 = !DILocation(line: 359, column: 2, scope: !13861)
!13873 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !417, file: !417, line: 478, type: !13874, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13876)
!13874 = !DISubroutineType(types: !13875)
!13875 = !{!146, !13228, !3186}
!13876 = !{!13877, !13878, !13879, !13880}
!13877 = !DILocalVariable(name: "list", arg: 1, scope: !13873, file: !417, line: 478, type: !13228)
!13878 = !DILocalVariable(name: "node", arg: 2, scope: !13873, file: !417, line: 478, type: !3186)
!13879 = !DILocalVariable(name: "prev", scope: !13873, file: !417, line: 478, type: !3186)
!13880 = !DILocalVariable(name: "test", scope: !13873, file: !417, line: 478, type: !3186)
!13881 = !DILocation(line: 0, scope: !13873)
!13882 = !DILocation(line: 478, column: 1, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13873, file: !417, line: 478, column: 1)
!13884 = !DILocation(line: 478, column: 1, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13883, file: !417, line: 478, column: 1)
!13886 = !DILocation(line: 478, column: 1, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13888, file: !417, line: 478, column: 1)
!13888 = distinct !DILexicalBlock(scope: !13885, file: !417, line: 478, column: 1)
!13889 = !DILocation(line: 478, column: 1, scope: !13888)
!13890 = distinct !{!13890, !13882, !13882}
!13891 = !DILocation(line: 478, column: 1, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13887, file: !417, line: 478, column: 1)
!13893 = !DILocation(line: 478, column: 1, scope: !13873)
!13894 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !417, file: !417, line: 463, type: !13538, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13895)
!13895 = !{!13896, !13897, !13898}
!13896 = !DILocalVariable(name: "list", arg: 1, scope: !13894, file: !417, line: 463, type: !13228)
!13897 = !DILocalVariable(name: "prev_node", arg: 2, scope: !13894, file: !417, line: 463, type: !3186)
!13898 = !DILocalVariable(name: "node", arg: 3, scope: !13894, file: !417, line: 463, type: !3186)
!13899 = !DILocation(line: 0, scope: !13894)
!13900 = !DILocation(line: 463, column: 1, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13894, file: !417, line: 463, column: 1)
!13902 = !DILocation(line: 0, scope: !13901)
!13903 = !DILocation(line: 463, column: 1, scope: !13894)
!13904 = !DILocation(line: 463, column: 1, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13901, file: !417, line: 463, column: 1)
!13906 = !DILocation(line: 463, column: 1, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13905, file: !417, line: 463, column: 1)
!13908 = !DILocation(line: 463, column: 1, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13907, file: !417, line: 463, column: 1)
!13910 = !DILocation(line: 463, column: 1, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13901, file: !417, line: 463, column: 1)
!13912 = !DILocation(line: 463, column: 1, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13911, file: !417, line: 463, column: 1)
!13914 = !DILocation(line: 463, column: 1, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13913, file: !417, line: 463, column: 1)
!13916 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !417, file: !417, line: 347, type: !13569, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13917)
!13917 = !{!13918}
!13918 = !DILocalVariable(name: "node", arg: 1, scope: !13916, file: !417, line: 347, type: !3186)
!13919 = !DILocation(line: 0, scope: !13916)
!13920 = !DILocation(line: 347, column: 1, scope: !13916)
!13921 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !417, file: !417, line: 336, type: !13569, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13922)
!13922 = !{!13923}
!13923 = !DILocalVariable(name: "node", arg: 1, scope: !13921, file: !417, line: 336, type: !3186)
!13924 = !DILocation(line: 0, scope: !13921)
!13925 = !DILocation(line: 336, column: 1, scope: !13921)
!13926 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3177, file: !3177, line: 362, type: !13862, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13927)
!13927 = !{!13928, !13929, !13930}
!13928 = !DILocalVariable(name: "queue", arg: 1, scope: !13926, file: !3177, line: 362, type: !13197)
!13929 = !DILocalVariable(name: "data", arg: 2, scope: !13926, file: !3177, line: 362, type: !117)
!13930 = !DILocalVariable(name: "test", scope: !13926, file: !3177, line: 366, type: !3186)
!13931 = !DILocation(line: 0, scope: !13926)
!13932 = !DILocation(line: 368, column: 2, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13926, file: !3177, line: 368, column: 2)
!13934 = !DILocation(line: 368, column: 2, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13933, file: !3177, line: 368, column: 2)
!13936 = !DILocation(line: 369, column: 12, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13938, file: !3177, line: 369, column: 7)
!13938 = distinct !DILexicalBlock(scope: !13935, file: !3177, line: 368, column: 49)
!13939 = !DILocation(line: 369, column: 7, scope: !13938)
!13940 = distinct !{!13940, !13932, !13941}
!13941 = !DILocation(line: 374, column: 2, scope: !13933)
!13942 = !DILocation(line: 376, column: 2, scope: !13926)
!13943 = !DILocation(line: 380, column: 2, scope: !13926)
!13944 = !DILocation(line: 381, column: 1, scope: !13926)
!13945 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3177, file: !3177, line: 383, type: !13946, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13948)
!13946 = !DISubroutineType(types: !13947)
!13947 = !{!117, !13197}
!13948 = !{!13949, !13950}
!13949 = !DILocalVariable(name: "queue", arg: 1, scope: !13945, file: !3177, line: 383, type: !13197)
!13950 = !DILocalVariable(name: "ret", scope: !13945, file: !3177, line: 385, type: !117)
!13951 = !DILocation(line: 0, scope: !13945)
!13952 = !DILocation(line: 385, column: 61, scope: !13945)
!13953 = !DILocation(line: 385, column: 32, scope: !13945)
!13954 = !DILocation(line: 385, column: 14, scope: !13945)
!13955 = !DILocation(line: 389, column: 2, scope: !13945)
!13956 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3177, file: !3177, line: 392, type: !13946, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !13957)
!13957 = !{!13958, !13959}
!13958 = !DILocalVariable(name: "queue", arg: 1, scope: !13956, file: !3177, line: 392, type: !13197)
!13959 = !DILocalVariable(name: "ret", scope: !13956, file: !3177, line: 394, type: !117)
!13960 = !DILocation(line: 0, scope: !13956)
!13961 = !DILocation(line: 394, column: 61, scope: !13956)
!13962 = !DILocation(line: 394, column: 32, scope: !13956)
!13963 = !DILocation(line: 394, column: 14, scope: !13956)
!13964 = !DILocation(line: 398, column: 2, scope: !13956)
!13965 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2438, file: !2438, line: 93, type: !13966, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !13968)
!13966 = !DISubroutineType(types: !13967)
!13967 = !{!362, !2331, !2331}
!13968 = !{!13969, !13970, !13971, !13972}
!13969 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13965, file: !2438, line: 93, type: !2331)
!13970 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13965, file: !2438, line: 94, type: !2331)
!13971 = !DILocalVariable(name: "b1", scope: !13965, file: !2438, line: 97, type: !362)
!13972 = !DILocalVariable(name: "b2", scope: !13965, file: !2438, line: 98, type: !362)
!13973 = !DILocation(line: 0, scope: !13965)
!13974 = !DILocation(line: 97, column: 30, scope: !13965)
!13975 = !DILocation(line: 98, column: 30, scope: !13965)
!13976 = !DILocation(line: 100, column: 9, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13965, file: !2438, line: 100, column: 6)
!13978 = !DILocation(line: 100, column: 6, scope: !13965)
!13979 = !DILocation(line: 125, column: 1, scope: !13965)
!13980 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2438, file: !2438, line: 428, type: !13981, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !13983)
!13981 = !DISubroutineType(types: !13982)
!13982 = !{null, !2331}
!13983 = !{!13984}
!13984 = !DILocalVariable(name: "curr", arg: 1, scope: !13980, file: !2438, line: 428, type: !2331)
!13985 = !DILocation(line: 0, scope: !13980)
!13986 = !DILocation(line: 434, column: 6, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13980, file: !2438, line: 434, column: 6)
!13988 = !DILocation(line: 434, column: 23, scope: !13987)
!13989 = !DILocation(line: 434, column: 6, scope: !13980)
!13990 = !DILocation(line: 435, column: 50, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13987, file: !2438, line: 434, column: 29)
!13992 = !DILocation(line: 435, column: 48, scope: !13991)
!13993 = !DILocation(line: 435, column: 29, scope: !13991)
!13994 = !DILocation(line: 436, column: 24, scope: !13991)
!13995 = !DILocation(line: 436, column: 3, scope: !13991)
!13996 = !DILocation(line: 437, column: 2, scope: !13991)
!13997 = !DILocation(line: 438, column: 1, scope: !13980)
!13998 = distinct !DISubprogram(name: "slice_time", scope: !2438, file: !2438, line: 407, type: !13999, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14001)
!13999 = !DISubroutineType(types: !14000)
!14000 = !{!118, !2331}
!14001 = !{!14002, !14003}
!14002 = !DILocalVariable(name: "curr", arg: 1, scope: !13998, file: !2438, line: 407, type: !2331)
!14003 = !DILocalVariable(name: "ret", scope: !13998, file: !2438, line: 409, type: !118)
!14004 = !DILocation(line: 0, scope: !13998)
!14005 = !DILocation(line: 409, column: 12, scope: !13998)
!14006 = !DILocation(line: 416, column: 2, scope: !13998)
!14007 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2438, file: !2438, line: 440, type: !14008, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14010)
!14008 = !DISubroutineType(types: !14009)
!14009 = !{null, !362, !118}
!14010 = !{!14011, !14012, !14013, !14019}
!14011 = !DILocalVariable(name: "slice", arg: 1, scope: !14007, file: !2438, line: 440, type: !362)
!14012 = !DILocalVariable(name: "prio", arg: 2, scope: !14007, file: !2438, line: 440, type: !118)
!14013 = !DILocalVariable(name: "__i", scope: !14014, file: !2438, line: 442, type: !14015)
!14014 = distinct !DILexicalBlock(scope: !14007, file: !2438, line: 442, column: 2)
!14015 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !14016)
!14016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !14017)
!14017 = !{!14018}
!14018 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14016, file: !334, line: 33, baseType: !118, size: 32)
!14019 = !DILocalVariable(name: "__key", scope: !14014, file: !2438, line: 442, type: !14015)
!14020 = !DILocation(line: 0, scope: !14007)
!14021 = !DILocation(line: 0, scope: !14014)
!14022 = !DILocalVariable(name: "l", arg: 1, scope: !14023, file: !334, line: 136, type: !14026)
!14023 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !14024, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14027)
!14024 = !DISubroutineType(types: !14025)
!14025 = !{!14015, !14026}
!14026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!14027 = !{!14022, !14028}
!14028 = !DILocalVariable(name: "k", scope: !14023, file: !334, line: 139, type: !14015)
!14029 = !DILocation(line: 0, scope: !14023, inlinedAt: !14030)
!14030 = distinct !DILocation(line: 442, column: 2, scope: !14014)
!14031 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !14036)
!14032 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6191, file: !6191, line: 42, type: !6192, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14033)
!14033 = !{!14034, !14035}
!14034 = !DILocalVariable(name: "key", scope: !14032, file: !6191, line: 44, type: !32)
!14035 = !DILocalVariable(name: "tmp", scope: !14032, file: !6191, line: 53, type: !32)
!14036 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !14030)
!14037 = !{i64 2083427}
!14038 = !DILocation(line: 0, scope: !14032, inlinedAt: !14036)
!14039 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14030)
!14040 = distinct !DILexicalBlock(scope: !14041, file: !334, line: 148, column: 2)
!14041 = distinct !DILexicalBlock(scope: !14023, file: !334, line: 148, column: 2)
!14042 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14030)
!14043 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !14030)
!14044 = distinct !DILexicalBlock(scope: !14040, file: !334, line: 148, column: 2)
!14045 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !14030)
!14046 = !DILocation(line: 443, column: 29, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14048, file: !2438, line: 442, column: 26)
!14048 = distinct !DILexicalBlock(scope: !14014, file: !2438, line: 442, column: 2)
!14049 = !DILocation(line: 444, column: 17, scope: !14047)
!14050 = !DILocation(line: 445, column: 51, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14047, file: !2438, line: 445, column: 7)
!14052 = !DILocation(line: 445, column: 7, scope: !14047)
!14053 = !DILocation(line: 0, scope: !14047)
!14054 = !DILocation(line: 451, column: 18, scope: !14047)
!14055 = !DILocation(line: 452, column: 3, scope: !14047)
!14056 = !DILocalVariable(name: "key", arg: 2, scope: !14057, file: !334, line: 190, type: !14015)
!14057 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !14058, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14060)
!14058 = !DISubroutineType(types: !14059)
!14059 = !{null, !14026, !14015}
!14060 = !{!14061, !14056}
!14061 = !DILocalVariable(name: "l", arg: 1, scope: !14057, file: !334, line: 189, type: !14026)
!14062 = !DILocation(line: 0, scope: !14057, inlinedAt: !14063)
!14063 = distinct !DILocation(line: 442, column: 2, scope: !14048)
!14064 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14063)
!14065 = distinct !DILexicalBlock(scope: !14066, file: !334, line: 194, column: 2)
!14066 = distinct !DILexicalBlock(scope: !14057, file: !334, line: 194, column: 2)
!14067 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14063)
!14068 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !14063)
!14069 = distinct !DILexicalBlock(scope: !14065, file: !334, line: 194, column: 2)
!14070 = !DILocalVariable(name: "key", arg: 1, scope: !14071, file: !6191, line: 84, type: !32)
!14071 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6191, file: !6191, line: 84, type: !6202, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14072)
!14072 = !{!14070}
!14073 = !DILocation(line: 0, scope: !14071, inlinedAt: !14074)
!14074 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !14063)
!14075 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14074)
!14076 = !{i64 2084244}
!14077 = !DILocation(line: 454, column: 1, scope: !14007)
!14078 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3463, file: !3463, line: 389, type: !7411, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14079)
!14079 = !{!14080}
!14080 = !DILocalVariable(name: "t", arg: 1, scope: !14078, file: !3463, line: 389, type: !156)
!14081 = !DILocation(line: 0, scope: !14078)
!14082 = !DILocalVariable(name: "t", arg: 1, scope: !14083, file: !3463, line: 102, type: !213)
!14083 = distinct !DISubprogram(name: "z_tmcvt", scope: !3463, file: !3463, line: 102, type: !3471, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14084)
!14084 = !{!14082, !14085, !14086, !14087, !14088, !14089, !14090, !14091, !14092, !14093, !14094}
!14085 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14083, file: !3463, line: 102, type: !156)
!14086 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14083, file: !3463, line: 103, type: !156)
!14087 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14083, file: !3463, line: 103, type: !146)
!14088 = !DILocalVariable(name: "result32", arg: 5, scope: !14083, file: !3463, line: 104, type: !146)
!14089 = !DILocalVariable(name: "round_up", arg: 6, scope: !14083, file: !3463, line: 104, type: !146)
!14090 = !DILocalVariable(name: "round_off", arg: 7, scope: !14083, file: !3463, line: 105, type: !146)
!14091 = !DILocalVariable(name: "mul_ratio", scope: !14083, file: !3463, line: 107, type: !146)
!14092 = !DILocalVariable(name: "div_ratio", scope: !14083, file: !3463, line: 109, type: !146)
!14093 = !DILocalVariable(name: "off", scope: !14083, file: !3463, line: 116, type: !213)
!14094 = !DILocalVariable(name: "rdivisor", scope: !14095, file: !3463, line: 119, type: !156)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !3463, line: 118, column: 18)
!14096 = distinct !DILexicalBlock(scope: !14083, file: !3463, line: 118, column: 6)
!14097 = !DILocation(line: 0, scope: !14083, inlinedAt: !14098)
!14098 = distinct !DILocation(line: 392, column: 9, scope: !14078)
!14099 = !DILocation(line: 143, column: 25, scope: !14100, inlinedAt: !14098)
!14100 = distinct !DILexicalBlock(scope: !14101, file: !3463, line: 142, column: 17)
!14101 = distinct !DILexicalBlock(scope: !14102, file: !3463, line: 142, column: 7)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !3463, line: 141, column: 24)
!14103 = distinct !DILexicalBlock(scope: !14104, file: !3463, line: 141, column: 13)
!14104 = distinct !DILexicalBlock(scope: !14083, file: !3463, line: 134, column: 6)
!14105 = !DILocation(line: 392, column: 2, scope: !14078)
!14106 = distinct !DISubprogram(name: "z_time_slice", scope: !2438, file: !2438, line: 502, type: !8065, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14107)
!14107 = !{!14108, !14109}
!14108 = !DILocalVariable(name: "ticks", arg: 1, scope: !14106, file: !2438, line: 502, type: !118)
!14109 = !DILocalVariable(name: "key", scope: !14106, file: !2438, line: 511, type: !14015)
!14110 = !DILocation(line: 0, scope: !14106)
!14111 = !DILocation(line: 0, scope: !14023, inlinedAt: !14112)
!14112 = distinct !DILocation(line: 511, column: 25, scope: !14106)
!14113 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !14114)
!14114 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !14112)
!14115 = !DILocation(line: 0, scope: !14032, inlinedAt: !14114)
!14116 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14112)
!14117 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14112)
!14118 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !14112)
!14119 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !14112)
!14120 = !DILocation(line: 514, column: 6, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14106, file: !2438, line: 514, column: 6)
!14122 = !DILocation(line: 514, column: 25, scope: !14121)
!14123 = !DILocation(line: 514, column: 22, scope: !14121)
!14124 = !DILocation(line: 514, column: 6, scope: !14106)
!14125 = !DILocation(line: 515, column: 3, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14121, file: !2438, line: 514, column: 35)
!14127 = !DILocation(line: 0, scope: !14057, inlinedAt: !14128)
!14128 = distinct !DILocation(line: 516, column: 3, scope: !14126)
!14129 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14128)
!14130 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14128)
!14131 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !14128)
!14132 = !DILocation(line: 0, scope: !14071, inlinedAt: !14133)
!14133 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !14128)
!14134 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14133)
!14135 = !DILocation(line: 517, column: 3, scope: !14126)
!14136 = !DILocation(line: 519, column: 18, scope: !14106)
!14137 = !DILocation(line: 522, column: 6, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14106, file: !2438, line: 522, column: 6)
!14139 = !DILocation(line: 522, column: 27, scope: !14138)
!14140 = !DILocation(line: 522, column: 30, scope: !14138)
!14141 = !DILocation(line: 522, column: 6, scope: !14106)
!14142 = !DILocation(line: 523, column: 30, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14144, file: !2438, line: 523, column: 7)
!14144 = distinct !DILexicalBlock(scope: !14138, file: !2438, line: 522, column: 51)
!14145 = !DILocation(line: 523, column: 13, scope: !14143)
!14146 = !DILocation(line: 523, column: 7, scope: !14144)
!14147 = !DILocation(line: 530, column: 10, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14143, file: !2438, line: 523, column: 43)
!14149 = !DILocation(line: 531, column: 3, scope: !14148)
!14150 = !DILocation(line: 532, column: 30, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14143, file: !2438, line: 531, column: 10)
!14152 = !DILocation(line: 535, column: 29, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14138, file: !2438, line: 534, column: 9)
!14154 = !DILocation(line: 0, scope: !14057, inlinedAt: !14155)
!14155 = distinct !DILocation(line: 537, column: 2, scope: !14106)
!14156 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14155)
!14157 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14155)
!14158 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !14155)
!14159 = !DILocation(line: 0, scope: !14071, inlinedAt: !14160)
!14160 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !14155)
!14161 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14160)
!14162 = !DILocation(line: 538, column: 1, scope: !14106)
!14163 = distinct !DISubprogram(name: "sliceable", scope: !2438, file: !2438, line: 468, type: !14164, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14166)
!14164 = !DISubroutineType(types: !14165)
!14165 = !{!146, !2331}
!14166 = !{!14167, !14168}
!14167 = !DILocalVariable(name: "thread", arg: 1, scope: !14163, file: !2438, line: 468, type: !2331)
!14168 = !DILocalVariable(name: "ret", scope: !14163, file: !2438, line: 470, type: !146)
!14169 = !DILocation(line: 0, scope: !14163)
!14170 = !DILocation(line: 470, column: 13, scope: !14163)
!14171 = !DILocation(line: 471, column: 3, scope: !14163)
!14172 = !DILocation(line: 471, column: 7, scope: !14163)
!14173 = !DILocation(line: 472, column: 3, scope: !14163)
!14174 = !DILocation(line: 472, column: 37, scope: !14163)
!14175 = !DILocation(line: 472, column: 24, scope: !14163)
!14176 = !DILocation(line: 472, column: 43, scope: !14163)
!14177 = !DILocation(line: 472, column: 7, scope: !14163)
!14178 = !DILocation(line: 473, column: 3, scope: !14163)
!14179 = !DILocation(line: 473, column: 7, scope: !14163)
!14180 = !DILocation(line: 473, column: 6, scope: !14163)
!14181 = !DILocation(line: 479, column: 2, scope: !14163)
!14182 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2438, file: !2438, line: 482, type: !14183, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14185)
!14183 = !DISubroutineType(types: !14184)
!14184 = !{!14015, !14015}
!14185 = !{!14186, !14187}
!14186 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14182, file: !2438, line: 482, type: !14015)
!14187 = !DILocalVariable(name: "curr", scope: !14182, file: !2438, line: 484, type: !2331)
!14188 = !DILocation(line: 0, scope: !14182)
!14189 = !DILocation(line: 484, column: 26, scope: !14182)
!14190 = !DILocation(line: 493, column: 7, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14182, file: !2438, line: 493, column: 6)
!14192 = !DILocation(line: 493, column: 6, scope: !14182)
!14193 = !DILocation(line: 494, column: 3, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14191, file: !2438, line: 493, column: 49)
!14195 = !DILocation(line: 495, column: 2, scope: !14194)
!14196 = !DILocation(line: 496, column: 2, scope: !14182)
!14197 = !DILocation(line: 499, column: 1, scope: !14182)
!14198 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12401, file: !12401, line: 106, type: !14164, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14199)
!14199 = !{!14200, !14201}
!14200 = !DILocalVariable(name: "thread", arg: 1, scope: !14198, file: !12401, line: 106, type: !2331)
!14201 = !DILocalVariable(name: "state", scope: !14198, file: !12401, line: 108, type: !143)
!14202 = !DILocation(line: 0, scope: !14198)
!14203 = !DILocation(line: 108, column: 31, scope: !14198)
!14204 = !DILocation(line: 110, column: 16, scope: !14198)
!14205 = !DILocation(line: 111, column: 41, scope: !14198)
!14206 = !DILocation(line: 110, column: 2, scope: !14198)
!14207 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2438, file: !2438, line: 393, type: !13981, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14208)
!14208 = !{!14209}
!14209 = !DILocalVariable(name: "thread", arg: 1, scope: !14207, file: !2438, line: 393, type: !2331)
!14210 = !DILocation(line: 0, scope: !14207)
!14211 = !DILocation(line: 395, column: 6, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14207, file: !2438, line: 395, column: 6)
!14213 = !DILocation(line: 395, column: 6, scope: !14207)
!14214 = !DILocalVariable(name: "thread", arg: 1, scope: !14215, file: !2438, line: 264, type: !2331)
!14215 = distinct !DISubprogram(name: "dequeue_thread", scope: !2438, file: !2438, line: 264, type: !13981, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14216)
!14216 = !{!14214}
!14217 = !DILocation(line: 0, scope: !14215, inlinedAt: !14218)
!14218 = distinct !DILocation(line: 396, column: 3, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14212, file: !2438, line: 395, column: 34)
!14220 = !DILocation(line: 266, column: 15, scope: !14215, inlinedAt: !14218)
!14221 = !DILocation(line: 266, column: 28, scope: !14215, inlinedAt: !14218)
!14222 = !DILocalVariable(name: "thread", arg: 1, scope: !14223, file: !2438, line: 232, type: !2331)
!14223 = distinct !DISubprogram(name: "runq_remove", scope: !2438, file: !2438, line: 232, type: !13981, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14224)
!14224 = !{!14222}
!14225 = !DILocation(line: 0, scope: !14223, inlinedAt: !14226)
!14226 = distinct !DILocation(line: 268, column: 3, scope: !14227, inlinedAt: !14218)
!14227 = distinct !DILexicalBlock(scope: !14228, file: !2438, line: 267, column: 35)
!14228 = distinct !DILexicalBlock(scope: !14215, file: !2438, line: 267, column: 6)
!14229 = !DILocation(line: 234, column: 2, scope: !14223, inlinedAt: !14226)
!14230 = !DILocation(line: 397, column: 2, scope: !14219)
!14231 = !DILocalVariable(name: "thread", arg: 1, scope: !14232, file: !2438, line: 250, type: !2331)
!14232 = distinct !DISubprogram(name: "queue_thread", scope: !2438, file: !2438, line: 250, type: !13981, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14233)
!14233 = !{!14231}
!14234 = !DILocation(line: 0, scope: !14232, inlinedAt: !14235)
!14235 = distinct !DILocation(line: 398, column: 2, scope: !14207)
!14236 = !DILocation(line: 252, column: 15, scope: !14232, inlinedAt: !14235)
!14237 = !DILocation(line: 252, column: 28, scope: !14232, inlinedAt: !14235)
!14238 = !DILocalVariable(name: "thread", arg: 1, scope: !14239, file: !2438, line: 227, type: !2331)
!14239 = distinct !DISubprogram(name: "runq_add", scope: !2438, file: !2438, line: 227, type: !13981, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14240)
!14240 = !{!14238}
!14241 = !DILocation(line: 0, scope: !14239, inlinedAt: !14242)
!14242 = distinct !DILocation(line: 254, column: 3, scope: !14243, inlinedAt: !14235)
!14243 = distinct !DILexicalBlock(scope: !14244, file: !2438, line: 253, column: 35)
!14244 = distinct !DILexicalBlock(scope: !14232, file: !2438, line: 253, column: 6)
!14245 = !DILocalVariable(name: "pq", arg: 1, scope: !14246, file: !2438, line: 181, type: !14249)
!14246 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2438, file: !2438, line: 181, type: !14247, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14250)
!14247 = !DISubroutineType(types: !14248)
!14248 = !{null, !14249, !2331}
!14249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!14250 = !{!14245, !14251, !14252}
!14251 = !DILocalVariable(name: "thread", arg: 2, scope: !14246, file: !2438, line: 182, type: !2331)
!14252 = !DILocalVariable(name: "t", scope: !14246, file: !2438, line: 184, type: !2331)
!14253 = !DILocation(line: 0, scope: !14246, inlinedAt: !14254)
!14254 = distinct !DILocation(line: 229, column: 2, scope: !14239, inlinedAt: !14242)
!14255 = !DILocation(line: 186, column: 2, scope: !14256, inlinedAt: !14254)
!14256 = distinct !DILexicalBlock(scope: !14257, file: !2438, line: 186, column: 2)
!14257 = distinct !DILexicalBlock(scope: !14246, file: !2438, line: 186, column: 2)
!14258 = !DILocation(line: 186, column: 2, scope: !14257, inlinedAt: !14254)
!14259 = !DILocation(line: 186, column: 2, scope: !14260, inlinedAt: !14254)
!14260 = distinct !DILexicalBlock(scope: !14256, file: !2438, line: 186, column: 2)
!14261 = !DILocation(line: 188, column: 2, scope: !14262, inlinedAt: !14254)
!14262 = distinct !DILexicalBlock(scope: !14246, file: !2438, line: 188, column: 2)
!14263 = !DILocation(line: 188, column: 2, scope: !14264, inlinedAt: !14254)
!14264 = distinct !DILexicalBlock(scope: !14262, file: !2438, line: 188, column: 2)
!14265 = !DILocation(line: 0, scope: !14262, inlinedAt: !14254)
!14266 = !DILocation(line: 189, column: 7, scope: !14267, inlinedAt: !14254)
!14267 = distinct !DILexicalBlock(scope: !14268, file: !2438, line: 189, column: 7)
!14268 = distinct !DILexicalBlock(scope: !14264, file: !2438, line: 188, column: 56)
!14269 = !DILocation(line: 189, column: 35, scope: !14267, inlinedAt: !14254)
!14270 = !DILocation(line: 189, column: 7, scope: !14268, inlinedAt: !14254)
!14271 = !DILocation(line: 191, column: 21, scope: !14272, inlinedAt: !14254)
!14272 = distinct !DILexicalBlock(scope: !14267, file: !2438, line: 189, column: 40)
!14273 = !DILocation(line: 190, column: 4, scope: !14272, inlinedAt: !14254)
!14274 = !DILocation(line: 192, column: 4, scope: !14272, inlinedAt: !14254)
!14275 = distinct !{!14275, !14261, !14276}
!14276 = !DILocation(line: 194, column: 2, scope: !14262, inlinedAt: !14254)
!14277 = !DILocation(line: 196, column: 37, scope: !14246, inlinedAt: !14254)
!14278 = !DILocation(line: 196, column: 2, scope: !14246, inlinedAt: !14254)
!14279 = !DILocation(line: 197, column: 1, scope: !14246, inlinedAt: !14254)
!14280 = !DILocation(line: 399, column: 25, scope: !14207)
!14281 = !DILocation(line: 399, column: 22, scope: !14207)
!14282 = !DILocation(line: 399, column: 2, scope: !14207)
!14283 = !DILocation(line: 400, column: 1, scope: !14207)
!14284 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12401, file: !12401, line: 136, type: !14164, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14285)
!14285 = !{!14286}
!14286 = !DILocalVariable(name: "thread", arg: 1, scope: !14284, file: !12401, line: 136, type: !2331)
!14287 = !DILocation(line: 0, scope: !14284)
!14288 = !DILocation(line: 138, column: 9, scope: !14284)
!14289 = !DILocation(line: 138, column: 2, scope: !14284)
!14290 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2438, file: !2438, line: 1137, type: !14247, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14291)
!14291 = !{!14292, !14293}
!14292 = !DILocalVariable(name: "pq", arg: 1, scope: !14290, file: !2438, line: 1137, type: !14249)
!14293 = !DILocalVariable(name: "thread", arg: 2, scope: !14290, file: !2438, line: 1137, type: !2331)
!14294 = !DILocation(line: 0, scope: !14290)
!14295 = !DILocation(line: 1139, column: 2, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14297, file: !2438, line: 1139, column: 2)
!14297 = distinct !DILexicalBlock(scope: !14290, file: !2438, line: 1139, column: 2)
!14298 = !DILocation(line: 1139, column: 2, scope: !14297)
!14299 = !DILocation(line: 1139, column: 2, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14296, file: !2438, line: 1139, column: 2)
!14301 = !DILocation(line: 1141, column: 33, scope: !14290)
!14302 = !DILocation(line: 1141, column: 2, scope: !14290)
!14303 = !DILocation(line: 1142, column: 1, scope: !14290)
!14304 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12401, file: !12401, line: 83, type: !14164, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14305)
!14305 = !{!14306}
!14306 = !DILocalVariable(name: "thread", arg: 1, scope: !14304, file: !12401, line: 83, type: !2331)
!14307 = !DILocation(line: 0, scope: !14304)
!14308 = !DILocation(line: 89, column: 16, scope: !14304)
!14309 = !DILocation(line: 89, column: 2, scope: !14304)
!14310 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !235, file: !235, line: 294, type: !14311, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14313)
!14311 = !DISubroutineType(types: !14312)
!14312 = !{!2434, !14249}
!14313 = !{!14314}
!14314 = !DILocalVariable(name: "list", arg: 1, scope: !14310, file: !235, line: 294, type: !14249)
!14315 = !DILocation(line: 0, scope: !14310)
!14316 = !DILocation(line: 296, column: 9, scope: !14310)
!14317 = !DILocation(line: 296, column: 49, scope: !14310)
!14318 = !DILocation(line: 296, column: 2, scope: !14310)
!14319 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !235, file: !235, line: 443, type: !14320, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14322)
!14320 = !DISubroutineType(types: !14321)
!14321 = !{null, !2434, !2434}
!14322 = !{!14323, !14324, !14325}
!14323 = !DILocalVariable(name: "successor", arg: 1, scope: !14319, file: !235, line: 443, type: !2434)
!14324 = !DILocalVariable(name: "node", arg: 2, scope: !14319, file: !235, line: 443, type: !2434)
!14325 = !DILocalVariable(name: "prev", scope: !14319, file: !235, line: 445, type: !14326)
!14326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2434)
!14327 = !DILocation(line: 0, scope: !14319)
!14328 = !DILocation(line: 445, column: 39, scope: !14319)
!14329 = !DILocation(line: 447, column: 8, scope: !14319)
!14330 = !DILocation(line: 447, column: 13, scope: !14319)
!14331 = !DILocation(line: 448, column: 8, scope: !14319)
!14332 = !DILocation(line: 448, column: 13, scope: !14319)
!14333 = !DILocation(line: 449, column: 8, scope: !14319)
!14334 = !DILocation(line: 449, column: 13, scope: !14319)
!14335 = !DILocation(line: 450, column: 18, scope: !14319)
!14336 = !DILocation(line: 451, column: 1, scope: !14319)
!14337 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !235, file: !235, line: 341, type: !14338, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14340)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{!2434, !14249, !2434}
!14340 = !{!14341, !14342}
!14341 = !DILocalVariable(name: "list", arg: 1, scope: !14337, file: !235, line: 341, type: !14249)
!14342 = !DILocalVariable(name: "node", arg: 2, scope: !14337, file: !235, line: 342, type: !2434)
!14343 = !DILocation(line: 0, scope: !14337)
!14344 = !DILocation(line: 344, column: 15, scope: !14337)
!14345 = !DILocation(line: 344, column: 9, scope: !14337)
!14346 = !DILocation(line: 344, column: 26, scope: !14337)
!14347 = !DILocation(line: 344, column: 2, scope: !14337)
!14348 = distinct !DISubprogram(name: "sys_dlist_append", scope: !235, file: !235, line: 404, type: !14349, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14351)
!14349 = !DISubroutineType(types: !14350)
!14350 = !{null, !14249, !2434}
!14351 = !{!14352, !14353, !14354}
!14352 = !DILocalVariable(name: "list", arg: 1, scope: !14348, file: !235, line: 404, type: !14249)
!14353 = !DILocalVariable(name: "node", arg: 2, scope: !14348, file: !235, line: 404, type: !2434)
!14354 = !DILocalVariable(name: "tail", scope: !14348, file: !235, line: 406, type: !14326)
!14355 = !DILocation(line: 0, scope: !14348)
!14356 = !DILocation(line: 406, column: 34, scope: !14348)
!14357 = !DILocation(line: 408, column: 8, scope: !14348)
!14358 = !DILocation(line: 408, column: 13, scope: !14348)
!14359 = !DILocation(line: 409, column: 8, scope: !14348)
!14360 = !DILocation(line: 409, column: 13, scope: !14348)
!14361 = !DILocation(line: 411, column: 8, scope: !14348)
!14362 = !DILocation(line: 411, column: 13, scope: !14348)
!14363 = !DILocation(line: 412, column: 13, scope: !14348)
!14364 = !DILocation(line: 413, column: 1, scope: !14348)
!14365 = distinct !DISubprogram(name: "update_cache", scope: !2438, file: !2438, line: 559, type: !8065, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14366)
!14366 = !{!14367, !14368}
!14367 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14365, file: !2438, line: 559, type: !118)
!14368 = !DILocalVariable(name: "thread", scope: !14365, file: !2438, line: 562, type: !2331)
!14369 = !DILocation(line: 0, scope: !14365)
!14370 = !DILocation(line: 239, column: 9, scope: !14371, inlinedAt: !14374)
!14371 = distinct !DISubprogram(name: "runq_best", scope: !2438, file: !2438, line: 237, type: !14372, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !2149)
!14372 = !DISubroutineType(types: !14373)
!14373 = !{!2331}
!14374 = distinct !DILocation(line: 314, column: 28, scope: !14375, inlinedAt: !14378)
!14375 = distinct !DISubprogram(name: "next_up", scope: !2438, file: !2438, line: 312, type: !14372, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14376)
!14376 = !{!14377}
!14377 = !DILocalVariable(name: "thread", scope: !14375, file: !2438, line: 314, type: !2331)
!14378 = distinct !DILocation(line: 562, column: 28, scope: !14365)
!14379 = !DILocation(line: 0, scope: !14375, inlinedAt: !14378)
!14380 = !DILocation(line: 340, column: 17, scope: !14375, inlinedAt: !14378)
!14381 = !DILocation(line: 340, column: 9, scope: !14375, inlinedAt: !14378)
!14382 = !DILocalVariable(name: "thread", arg: 1, scope: !14383, file: !2438, line: 127, type: !2331)
!14383 = distinct !DISubprogram(name: "should_preempt", scope: !2438, file: !2438, line: 127, type: !14384, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14386)
!14384 = !DISubroutineType(types: !14385)
!14385 = !{!146, !2331, !118}
!14386 = !{!14382, !14387}
!14387 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14383, file: !2438, line: 128, type: !118)
!14388 = !DILocation(line: 0, scope: !14383, inlinedAt: !14389)
!14389 = distinct !DILocation(line: 564, column: 6, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14365, file: !2438, line: 564, column: 6)
!14391 = !DILocation(line: 133, column: 17, scope: !14392, inlinedAt: !14389)
!14392 = distinct !DILexicalBlock(scope: !14383, file: !2438, line: 133, column: 6)
!14393 = !DILocation(line: 0, scope: !14390)
!14394 = !DILocation(line: 133, column: 6, scope: !14383, inlinedAt: !14389)
!14395 = !DILocation(line: 137, column: 2, scope: !14396, inlinedAt: !14389)
!14396 = distinct !DILexicalBlock(scope: !14397, file: !2438, line: 137, column: 2)
!14397 = distinct !DILexicalBlock(scope: !14383, file: !2438, line: 137, column: 2)
!14398 = !DILocation(line: 137, column: 2, scope: !14397, inlinedAt: !14389)
!14399 = !DILocation(line: 137, column: 2, scope: !14400, inlinedAt: !14389)
!14400 = distinct !DILexicalBlock(scope: !14396, file: !2438, line: 137, column: 2)
!14401 = !DILocation(line: 140, column: 6, scope: !14402, inlinedAt: !14389)
!14402 = distinct !DILexicalBlock(scope: !14383, file: !2438, line: 140, column: 6)
!14403 = !DILocation(line: 140, column: 6, scope: !14383, inlinedAt: !14389)
!14404 = !DILocation(line: 150, column: 9, scope: !14405, inlinedAt: !14389)
!14405 = distinct !DILexicalBlock(scope: !14383, file: !2438, line: 149, column: 6)
!14406 = !DILocation(line: 149, column: 6, scope: !14383, inlinedAt: !14389)
!14407 = !DILocation(line: 157, column: 6, scope: !14408, inlinedAt: !14389)
!14408 = distinct !DILexicalBlock(scope: !14383, file: !2438, line: 157, column: 6)
!14409 = !DILocation(line: 564, column: 6, scope: !14365)
!14410 = !DILocation(line: 566, column: 14, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14412, file: !2438, line: 566, column: 7)
!14412 = distinct !DILexicalBlock(scope: !14390, file: !2438, line: 564, column: 42)
!14413 = !DILocation(line: 566, column: 7, scope: !14412)
!14414 = !DILocation(line: 567, column: 4, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !14411, file: !2438, line: 566, column: 27)
!14416 = !DILocation(line: 568, column: 3, scope: !14415)
!14417 = !DILocation(line: 585, column: 1, scope: !14365)
!14418 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2438, file: !2438, line: 1144, type: !14419, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14421)
!14419 = !DISubroutineType(types: !14420)
!14420 = !{!2331, !14249}
!14421 = !{!14422, !14423, !14424}
!14422 = !DILocalVariable(name: "pq", arg: 1, scope: !14418, file: !2438, line: 1144, type: !14249)
!14423 = !DILocalVariable(name: "thread", scope: !14418, file: !2438, line: 1146, type: !2331)
!14424 = !DILocalVariable(name: "n", scope: !14418, file: !2438, line: 1147, type: !2434)
!14425 = !DILocation(line: 0, scope: !14418)
!14426 = !DILocation(line: 1147, column: 19, scope: !14418)
!14427 = !DILocation(line: 1152, column: 2, scope: !14418)
!14428 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12401, file: !12401, line: 115, type: !14164, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14429)
!14429 = !{!14430}
!14430 = !DILocalVariable(name: "thread", arg: 1, scope: !14428, file: !12401, line: 115, type: !2331)
!14431 = !DILocation(line: 0, scope: !14428)
!14432 = !DILocation(line: 117, column: 46, scope: !14428)
!14433 = !DILocation(line: 117, column: 10, scope: !14428)
!14434 = !DILocation(line: 117, column: 9, scope: !14428)
!14435 = !DILocation(line: 117, column: 2, scope: !14428)
!14436 = distinct !DISubprogram(name: "is_preempt", scope: !2438, file: !2438, line: 62, type: !13999, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14437)
!14437 = !{!14438}
!14438 = !DILocalVariable(name: "thread", arg: 1, scope: !14436, file: !2438, line: 62, type: !2331)
!14439 = !DILocation(line: 0, scope: !14436)
!14440 = !DILocation(line: 65, column: 22, scope: !14436)
!14441 = !DILocation(line: 65, column: 30, scope: !14436)
!14442 = !DILocation(line: 65, column: 2, scope: !14436)
!14443 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12808, file: !12808, line: 35, type: !14444, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14448)
!14444 = !DISubroutineType(types: !14445)
!14445 = !{!146, !14446}
!14446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14447, size: 32)
!14447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2382)
!14448 = !{!14449}
!14449 = !DILocalVariable(name: "to", arg: 1, scope: !14443, file: !12808, line: 35, type: !14446)
!14450 = !DILocation(line: 0, scope: !14443)
!14451 = !DILocation(line: 37, column: 35, scope: !14443)
!14452 = !DILocation(line: 37, column: 10, scope: !14443)
!14453 = !DILocation(line: 37, column: 9, scope: !14443)
!14454 = !DILocation(line: 37, column: 2, scope: !14443)
!14455 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !235, file: !235, line: 225, type: !14456, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14460)
!14456 = !DISubroutineType(types: !14457)
!14457 = !{!146, !14458}
!14458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14459, size: 32)
!14459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2341)
!14460 = !{!14461}
!14461 = !DILocalVariable(name: "node", arg: 1, scope: !14455, file: !235, line: 225, type: !14458)
!14462 = !DILocation(line: 0, scope: !14455)
!14463 = !DILocation(line: 227, column: 15, scope: !14455)
!14464 = !DILocation(line: 227, column: 20, scope: !14455)
!14465 = !DILocation(line: 227, column: 2, scope: !14455)
!14466 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !235, file: !235, line: 325, type: !14338, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14467)
!14467 = !{!14468, !14469}
!14468 = !DILocalVariable(name: "list", arg: 1, scope: !14466, file: !235, line: 325, type: !14249)
!14469 = !DILocalVariable(name: "node", arg: 2, scope: !14466, file: !235, line: 326, type: !2434)
!14470 = !DILocation(line: 0, scope: !14466)
!14471 = !DILocation(line: 328, column: 24, scope: !14466)
!14472 = !DILocation(line: 328, column: 15, scope: !14466)
!14473 = !DILocation(line: 328, column: 9, scope: !14466)
!14474 = !DILocation(line: 328, column: 45, scope: !14466)
!14475 = !DILocation(line: 328, column: 2, scope: !14466)
!14476 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !235, file: !235, line: 266, type: !14477, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14479)
!14477 = !DISubroutineType(types: !14478)
!14478 = !{!146, !14249}
!14479 = !{!14480}
!14480 = !DILocalVariable(name: "list", arg: 1, scope: !14476, file: !235, line: 266, type: !14249)
!14481 = !DILocation(line: 0, scope: !14476)
!14482 = !DILocation(line: 268, column: 15, scope: !14476)
!14483 = !DILocation(line: 268, column: 20, scope: !14476)
!14484 = !DILocation(line: 268, column: 2, scope: !14476)
!14485 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !235, file: !235, line: 496, type: !14486, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14488)
!14486 = !DISubroutineType(types: !14487)
!14487 = !{null, !2434}
!14488 = !{!14489, !14490, !14491}
!14489 = !DILocalVariable(name: "node", arg: 1, scope: !14485, file: !235, line: 496, type: !2434)
!14490 = !DILocalVariable(name: "prev", scope: !14485, file: !235, line: 498, type: !14326)
!14491 = !DILocalVariable(name: "next", scope: !14485, file: !235, line: 499, type: !14326)
!14492 = !DILocation(line: 0, scope: !14485)
!14493 = !DILocation(line: 498, column: 34, scope: !14485)
!14494 = !DILocation(line: 499, column: 34, scope: !14485)
!14495 = !DILocation(line: 501, column: 8, scope: !14485)
!14496 = !DILocation(line: 501, column: 13, scope: !14485)
!14497 = !DILocation(line: 502, column: 8, scope: !14485)
!14498 = !DILocation(line: 502, column: 13, scope: !14485)
!14499 = !DILocation(line: 503, column: 2, scope: !14485)
!14500 = !DILocation(line: 504, column: 1, scope: !14485)
!14501 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !14486, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14502)
!14502 = !{!14503}
!14503 = !DILocalVariable(name: "node", arg: 1, scope: !14501, file: !235, line: 211, type: !2434)
!14504 = !DILocation(line: 0, scope: !14501)
!14505 = !DILocation(line: 213, column: 8, scope: !14501)
!14506 = !DILocation(line: 213, column: 13, scope: !14501)
!14507 = !DILocation(line: 214, column: 8, scope: !14501)
!14508 = !DILocation(line: 214, column: 13, scope: !14501)
!14509 = !DILocation(line: 215, column: 1, scope: !14501)
!14510 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12401, file: !12401, line: 131, type: !14511, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14513)
!14511 = !DISubroutineType(types: !14512)
!14512 = !{!146, !2331, !156}
!14513 = !{!14514, !14515}
!14514 = !DILocalVariable(name: "thread", arg: 1, scope: !14510, file: !12401, line: 131, type: !2331)
!14515 = !DILocalVariable(name: "state", arg: 2, scope: !14510, file: !12401, line: 131, type: !156)
!14516 = !DILocation(line: 0, scope: !14510)
!14517 = !DILocation(line: 133, column: 23, scope: !14510)
!14518 = !DILocation(line: 133, column: 10, scope: !14510)
!14519 = !DILocation(line: 133, column: 36, scope: !14510)
!14520 = !DILocation(line: 133, column: 45, scope: !14510)
!14521 = !DILocation(line: 133, column: 2, scope: !14510)
!14522 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12401, file: !12401, line: 211, type: !14523, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14525)
!14523 = !DISubroutineType(types: !14524)
!14524 = !{!146, !118, !118}
!14525 = !{!14526, !14527}
!14526 = !DILocalVariable(name: "prio", arg: 1, scope: !14522, file: !12401, line: 211, type: !118)
!14527 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14522, file: !12401, line: 211, type: !118)
!14528 = !DILocation(line: 0, scope: !14522)
!14529 = !DILocation(line: 213, column: 9, scope: !14522)
!14530 = !DILocation(line: 213, column: 2, scope: !14522)
!14531 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12401, file: !12401, line: 206, type: !14523, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14532)
!14532 = !{!14533, !14534}
!14533 = !DILocalVariable(name: "prio1", arg: 1, scope: !14531, file: !12401, line: 206, type: !118)
!14534 = !DILocalVariable(name: "prio2", arg: 2, scope: !14531, file: !12401, line: 206, type: !118)
!14535 = !DILocation(line: 0, scope: !14531)
!14536 = !DILocation(line: 208, column: 15, scope: !14531)
!14537 = !DILocation(line: 208, column: 2, scope: !14531)
!14538 = distinct !DISubprogram(name: "z_ready_thread", scope: !2438, file: !2438, line: 635, type: !13981, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14539)
!14539 = !{!14540, !14541, !14543}
!14540 = !DILocalVariable(name: "thread", arg: 1, scope: !14538, file: !2438, line: 635, type: !2331)
!14541 = !DILocalVariable(name: "__i", scope: !14542, file: !2438, line: 637, type: !14015)
!14542 = distinct !DILexicalBlock(scope: !14538, file: !2438, line: 637, column: 2)
!14543 = !DILocalVariable(name: "__key", scope: !14542, file: !2438, line: 637, type: !14015)
!14544 = !DILocation(line: 0, scope: !14538)
!14545 = !DILocation(line: 0, scope: !14542)
!14546 = !DILocation(line: 0, scope: !14023, inlinedAt: !14547)
!14547 = distinct !DILocation(line: 637, column: 2, scope: !14542)
!14548 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !14549)
!14549 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !14547)
!14550 = !DILocation(line: 0, scope: !14032, inlinedAt: !14549)
!14551 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14547)
!14552 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14547)
!14553 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !14547)
!14554 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !14547)
!14555 = !DILocation(line: 639, column: 4, scope: !14556)
!14556 = distinct !DILexicalBlock(scope: !14557, file: !2438, line: 638, column: 41)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !2438, line: 638, column: 7)
!14558 = distinct !DILexicalBlock(scope: !14559, file: !2438, line: 637, column: 26)
!14559 = distinct !DILexicalBlock(scope: !14542, file: !2438, line: 637, column: 2)
!14560 = !DILocation(line: 0, scope: !14057, inlinedAt: !14561)
!14561 = distinct !DILocation(line: 637, column: 2, scope: !14559)
!14562 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14561)
!14563 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14561)
!14564 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !14561)
!14565 = !DILocation(line: 0, scope: !14071, inlinedAt: !14566)
!14566 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !14561)
!14567 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14566)
!14568 = !DILocation(line: 642, column: 1, scope: !14538)
!14569 = distinct !DISubprogram(name: "ready_thread", scope: !2438, file: !2438, line: 617, type: !13981, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14570)
!14570 = !{!14571}
!14571 = !DILocalVariable(name: "thread", arg: 1, scope: !14569, file: !2438, line: 617, type: !2331)
!14572 = !DILocation(line: 0, scope: !14569)
!14573 = !DILocation(line: 626, column: 7, scope: !14574)
!14574 = distinct !DILexicalBlock(scope: !14569, file: !2438, line: 626, column: 6)
!14575 = !DILocation(line: 626, column: 34, scope: !14574)
!14576 = !DILocation(line: 626, column: 37, scope: !14574)
!14577 = !DILocation(line: 626, column: 6, scope: !14569)
!14578 = !DILocation(line: 0, scope: !14232, inlinedAt: !14579)
!14579 = distinct !DILocation(line: 629, column: 3, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14574, file: !2438, line: 626, column: 64)
!14581 = !DILocation(line: 252, column: 15, scope: !14232, inlinedAt: !14579)
!14582 = !DILocation(line: 252, column: 28, scope: !14232, inlinedAt: !14579)
!14583 = !DILocation(line: 0, scope: !14239, inlinedAt: !14584)
!14584 = distinct !DILocation(line: 254, column: 3, scope: !14243, inlinedAt: !14579)
!14585 = !DILocation(line: 0, scope: !14246, inlinedAt: !14586)
!14586 = distinct !DILocation(line: 229, column: 2, scope: !14239, inlinedAt: !14584)
!14587 = !DILocation(line: 186, column: 2, scope: !14256, inlinedAt: !14586)
!14588 = !DILocation(line: 186, column: 2, scope: !14257, inlinedAt: !14586)
!14589 = !DILocation(line: 186, column: 2, scope: !14260, inlinedAt: !14586)
!14590 = !DILocation(line: 188, column: 2, scope: !14262, inlinedAt: !14586)
!14591 = !DILocation(line: 188, column: 2, scope: !14264, inlinedAt: !14586)
!14592 = !DILocation(line: 0, scope: !14262, inlinedAt: !14586)
!14593 = !DILocation(line: 189, column: 7, scope: !14267, inlinedAt: !14586)
!14594 = !DILocation(line: 189, column: 35, scope: !14267, inlinedAt: !14586)
!14595 = !DILocation(line: 189, column: 7, scope: !14268, inlinedAt: !14586)
!14596 = !DILocation(line: 191, column: 21, scope: !14272, inlinedAt: !14586)
!14597 = !DILocation(line: 190, column: 4, scope: !14272, inlinedAt: !14586)
!14598 = !DILocation(line: 192, column: 4, scope: !14272, inlinedAt: !14586)
!14599 = distinct !{!14599, !14590, !14600}
!14600 = !DILocation(line: 194, column: 2, scope: !14262, inlinedAt: !14586)
!14601 = !DILocation(line: 196, column: 37, scope: !14246, inlinedAt: !14586)
!14602 = !DILocation(line: 196, column: 2, scope: !14246, inlinedAt: !14586)
!14603 = !DILocation(line: 197, column: 1, scope: !14246, inlinedAt: !14586)
!14604 = !DILocation(line: 630, column: 3, scope: !14580)
!14605 = !DILocation(line: 632, column: 2, scope: !14580)
!14606 = !DILocation(line: 633, column: 1, scope: !14569)
!14607 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12401, file: !12401, line: 120, type: !14164, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14608)
!14608 = !{!14609}
!14609 = !DILocalVariable(name: "thread", arg: 1, scope: !14607, file: !12401, line: 120, type: !2331)
!14610 = !DILocation(line: 0, scope: !14607)
!14611 = !DILocation(line: 122, column: 12, scope: !14607)
!14612 = !DILocation(line: 122, column: 62, scope: !14607)
!14613 = !DILocation(line: 123, column: 4, scope: !14607)
!14614 = !DILocation(line: 122, column: 2, scope: !14607)
!14615 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2438, file: !2438, line: 644, type: !13981, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14616)
!14616 = !{!14617, !14618, !14620}
!14617 = !DILocalVariable(name: "thread", arg: 1, scope: !14615, file: !2438, line: 644, type: !2331)
!14618 = !DILocalVariable(name: "__i", scope: !14619, file: !2438, line: 646, type: !14015)
!14619 = distinct !DILexicalBlock(scope: !14615, file: !2438, line: 646, column: 2)
!14620 = !DILocalVariable(name: "__key", scope: !14619, file: !2438, line: 646, type: !14015)
!14621 = !DILocation(line: 0, scope: !14615)
!14622 = !DILocation(line: 0, scope: !14619)
!14623 = !DILocation(line: 0, scope: !14023, inlinedAt: !14624)
!14624 = distinct !DILocation(line: 646, column: 2, scope: !14619)
!14625 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !14626)
!14626 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !14624)
!14627 = !DILocation(line: 0, scope: !14032, inlinedAt: !14626)
!14628 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14624)
!14629 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14624)
!14630 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !14624)
!14631 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !14624)
!14632 = !DILocation(line: 647, column: 3, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14634, file: !2438, line: 646, column: 26)
!14634 = distinct !DILexicalBlock(scope: !14619, file: !2438, line: 646, column: 2)
!14635 = !DILocation(line: 0, scope: !14057, inlinedAt: !14636)
!14636 = distinct !DILocation(line: 646, column: 2, scope: !14634)
!14637 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14636)
!14638 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14636)
!14639 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !14636)
!14640 = !DILocation(line: 0, scope: !14071, inlinedAt: !14641)
!14641 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !14636)
!14642 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14641)
!14643 = !DILocation(line: 649, column: 1, scope: !14615)
!14644 = distinct !DISubprogram(name: "z_sched_start", scope: !2438, file: !2438, line: 651, type: !13981, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14645)
!14645 = !{!14646, !14647}
!14646 = !DILocalVariable(name: "thread", arg: 1, scope: !14644, file: !2438, line: 651, type: !2331)
!14647 = !DILocalVariable(name: "key", scope: !14644, file: !2438, line: 653, type: !14015)
!14648 = !DILocation(line: 0, scope: !14644)
!14649 = !DILocation(line: 0, scope: !14023, inlinedAt: !14650)
!14650 = distinct !DILocation(line: 653, column: 25, scope: !14644)
!14651 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !14652)
!14652 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !14650)
!14653 = !DILocation(line: 0, scope: !14032, inlinedAt: !14652)
!14654 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14650)
!14655 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14650)
!14656 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !14650)
!14657 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !14650)
!14658 = !DILocation(line: 655, column: 6, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14644, file: !2438, line: 655, column: 6)
!14660 = !DILocation(line: 655, column: 6, scope: !14644)
!14661 = !DILocation(line: 0, scope: !14057, inlinedAt: !14662)
!14662 = distinct !DILocation(line: 656, column: 3, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14659, file: !2438, line: 655, column: 36)
!14664 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14662)
!14665 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14662)
!14666 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !14662)
!14667 = !DILocation(line: 0, scope: !14071, inlinedAt: !14668)
!14668 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !14662)
!14669 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14668)
!14670 = !DILocation(line: 657, column: 3, scope: !14663)
!14671 = !DILocation(line: 660, column: 2, scope: !14644)
!14672 = !DILocation(line: 661, column: 2, scope: !14644)
!14673 = !DILocation(line: 662, column: 2, scope: !14644)
!14674 = !DILocation(line: 663, column: 1, scope: !14644)
!14675 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12401, file: !12401, line: 126, type: !14164, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14676)
!14676 = !{!14677}
!14677 = !DILocalVariable(name: "thread", arg: 1, scope: !14675, file: !12401, line: 126, type: !2331)
!14678 = !DILocation(line: 0, scope: !14675)
!14679 = !DILocation(line: 128, column: 23, scope: !14675)
!14680 = !DILocation(line: 128, column: 36, scope: !14675)
!14681 = !DILocation(line: 128, column: 56, scope: !14675)
!14682 = !DILocation(line: 128, column: 2, scope: !14675)
!14683 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12401, file: !12401, line: 155, type: !13981, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14684)
!14684 = !{!14685}
!14685 = !DILocalVariable(name: "thread", arg: 1, scope: !14683, file: !12401, line: 155, type: !2331)
!14686 = !DILocation(line: 0, scope: !14683)
!14687 = !DILocation(line: 157, column: 15, scope: !14683)
!14688 = !DILocation(line: 157, column: 28, scope: !14683)
!14689 = !DILocation(line: 158, column: 1, scope: !14683)
!14690 = distinct !DISubprogram(name: "z_reschedule", scope: !2438, file: !2438, line: 967, type: !14058, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14691)
!14691 = !{!14692, !14693}
!14692 = !DILocalVariable(name: "lock", arg: 1, scope: !14690, file: !2438, line: 967, type: !14026)
!14693 = !DILocalVariable(name: "key", arg: 2, scope: !14690, file: !2438, line: 967, type: !14015)
!14694 = !DILocation(line: 0, scope: !14690)
!14695 = !DILocation(line: 969, column: 6, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14690, file: !2438, line: 969, column: 6)
!14697 = !DILocation(line: 969, column: 23, scope: !14696)
!14698 = !DILocation(line: 969, column: 26, scope: !14696)
!14699 = !DILocation(line: 969, column: 6, scope: !14690)
!14700 = !DILocalVariable(name: "key", arg: 2, scope: !14701, file: !12505, line: 193, type: !14015)
!14701 = distinct !DISubprogram(name: "z_swap", scope: !12505, file: !12505, line: 193, type: !14702, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14704)
!14702 = !DISubroutineType(types: !14703)
!14703 = !{!118, !14026, !14015}
!14704 = !{!14705, !14700}
!14705 = !DILocalVariable(name: "lock", arg: 1, scope: !14701, file: !12505, line: 193, type: !14026)
!14706 = !DILocation(line: 0, scope: !14701, inlinedAt: !14707)
!14707 = distinct !DILocation(line: 970, column: 3, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14696, file: !2438, line: 969, column: 39)
!14709 = !DILocalVariable(name: "l", arg: 1, scope: !14710, file: !334, line: 221, type: !14026)
!14710 = distinct !DISubprogram(name: "k_spin_release", scope: !334, file: !334, line: 221, type: !14711, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14713)
!14711 = !DISubroutineType(types: !14712)
!14712 = !{null, !14026}
!14713 = !{!14709}
!14714 = !DILocation(line: 0, scope: !14710, inlinedAt: !14715)
!14715 = distinct !DILocation(line: 195, column: 2, scope: !14701, inlinedAt: !14707)
!14716 = !DILocation(line: 225, column: 2, scope: !14717, inlinedAt: !14715)
!14717 = distinct !DILexicalBlock(scope: !14718, file: !334, line: 225, column: 2)
!14718 = distinct !DILexicalBlock(scope: !14710, file: !334, line: 225, column: 2)
!14719 = !DILocation(line: 225, column: 2, scope: !14718, inlinedAt: !14715)
!14720 = !DILocation(line: 225, column: 2, scope: !14721, inlinedAt: !14715)
!14721 = distinct !DILexicalBlock(scope: !14717, file: !334, line: 225, column: 2)
!14722 = !DILocation(line: 196, column: 9, scope: !14701, inlinedAt: !14707)
!14723 = !DILocation(line: 971, column: 2, scope: !14708)
!14724 = !DILocation(line: 0, scope: !14057, inlinedAt: !14725)
!14725 = distinct !DILocation(line: 972, column: 3, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14696, file: !2438, line: 971, column: 9)
!14727 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14725)
!14728 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14725)
!14729 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !14725)
!14730 = !DILocation(line: 0, scope: !14071, inlinedAt: !14731)
!14731 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !14725)
!14732 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14731)
!14733 = !DILocation(line: 975, column: 1, scope: !14690)
!14734 = distinct !DISubprogram(name: "resched", scope: !2438, file: !2438, line: 940, type: !14735, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14737)
!14735 = !DISubroutineType(types: !14736)
!14736 = !{!146, !156}
!14737 = !{!14738}
!14738 = !DILocalVariable(name: "key", arg: 1, scope: !14734, file: !2438, line: 940, type: !156)
!14739 = !DILocation(line: 0, scope: !14734)
!14740 = !DILocalVariable(name: "key", arg: 1, scope: !14741, file: !6191, line: 112, type: !32)
!14741 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6191, file: !6191, line: 112, type: !14742, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14744)
!14742 = !DISubroutineType(types: !14743)
!14743 = !{!146, !32}
!14744 = !{!14740}
!14745 = !DILocation(line: 0, scope: !14741, inlinedAt: !14746)
!14746 = distinct !DILocation(line: 946, column: 9, scope: !14734)
!14747 = !DILocation(line: 115, column: 13, scope: !14741, inlinedAt: !14746)
!14748 = !DILocation(line: 946, column: 32, scope: !14734)
!14749 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !14753)
!14750 = distinct !DISubprogram(name: "__get_IPSR", scope: !6365, file: !6365, line: 1027, type: !6452, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14751)
!14751 = !{!14752}
!14752 = !DILocalVariable(name: "result", scope: !14750, file: !6365, line: 1029, type: !156)
!14753 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !14755)
!14754 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7191, file: !7191, line: 46, type: !7192, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !2149)
!14755 = distinct !DILocation(line: 946, column: 36, scope: !14734)
!14756 = !{i64 2958002}
!14757 = !DILocation(line: 0, scope: !14750, inlinedAt: !14753)
!14758 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !14755)
!14759 = !DILocation(line: 946, column: 2, scope: !14734)
!14760 = distinct !DISubprogram(name: "need_swap", scope: !2438, file: !2438, line: 953, type: !7192, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14761)
!14761 = !{!14762}
!14762 = !DILocalVariable(name: "new_thread", scope: !14760, file: !2438, line: 959, type: !2331)
!14763 = !DILocation(line: 962, column: 31, scope: !14760)
!14764 = !DILocation(line: 0, scope: !14760)
!14765 = !DILocation(line: 963, column: 23, scope: !14760)
!14766 = !DILocation(line: 963, column: 20, scope: !14760)
!14767 = !DILocation(line: 963, column: 2, scope: !14760)
!14768 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12505, file: !12505, line: 181, type: !6375, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14769)
!14769 = !{!14770, !14771}
!14770 = !DILocalVariable(name: "key", arg: 1, scope: !14768, file: !12505, line: 181, type: !32)
!14771 = !DILocalVariable(name: "ret", scope: !14768, file: !12505, line: 183, type: !118)
!14772 = !DILocation(line: 0, scope: !14768)
!14773 = !DILocation(line: 185, column: 8, scope: !14768)
!14774 = !DILocation(line: 186, column: 2, scope: !14768)
!14775 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2438, file: !2438, line: 665, type: !13981, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14776)
!14776 = !{!14777, !14778, !14780}
!14777 = !DILocalVariable(name: "thread", arg: 1, scope: !14775, file: !2438, line: 665, type: !2331)
!14778 = !DILocalVariable(name: "__i", scope: !14779, file: !2438, line: 671, type: !14015)
!14779 = distinct !DILexicalBlock(scope: !14775, file: !2438, line: 671, column: 2)
!14780 = !DILocalVariable(name: "__key", scope: !14779, file: !2438, line: 671, type: !14015)
!14781 = !DILocation(line: 0, scope: !14775)
!14782 = !DILocation(line: 669, column: 8, scope: !14775)
!14783 = !DILocation(line: 0, scope: !14779)
!14784 = !DILocation(line: 0, scope: !14023, inlinedAt: !14785)
!14785 = distinct !DILocation(line: 671, column: 2, scope: !14779)
!14786 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !14787)
!14787 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !14785)
!14788 = !DILocation(line: 0, scope: !14032, inlinedAt: !14787)
!14789 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14785)
!14790 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14785)
!14791 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !14785)
!14792 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !14785)
!14793 = !DILocation(line: 672, column: 7, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14795, file: !2438, line: 672, column: 7)
!14795 = distinct !DILexicalBlock(scope: !14796, file: !2438, line: 671, column: 26)
!14796 = distinct !DILexicalBlock(scope: !14779, file: !2438, line: 671, column: 2)
!14797 = !DILocation(line: 672, column: 7, scope: !14795)
!14798 = !DILocation(line: 0, scope: !14215, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 673, column: 4, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14794, file: !2438, line: 672, column: 35)
!14801 = !DILocation(line: 266, column: 15, scope: !14215, inlinedAt: !14799)
!14802 = !DILocation(line: 266, column: 28, scope: !14215, inlinedAt: !14799)
!14803 = !DILocation(line: 0, scope: !14223, inlinedAt: !14804)
!14804 = distinct !DILocation(line: 268, column: 3, scope: !14227, inlinedAt: !14799)
!14805 = !DILocation(line: 234, column: 2, scope: !14223, inlinedAt: !14804)
!14806 = !DILocation(line: 674, column: 3, scope: !14800)
!14807 = !DILocation(line: 675, column: 3, scope: !14795)
!14808 = !DILocation(line: 676, column: 26, scope: !14795)
!14809 = !DILocation(line: 676, column: 23, scope: !14795)
!14810 = !DILocation(line: 676, column: 3, scope: !14795)
!14811 = !DILocation(line: 0, scope: !14057, inlinedAt: !14812)
!14812 = distinct !DILocation(line: 671, column: 2, scope: !14796)
!14813 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14812)
!14814 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14812)
!14815 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !14812)
!14816 = !DILocation(line: 0, scope: !14071, inlinedAt: !14817)
!14817 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !14812)
!14818 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14817)
!14819 = !DILocation(line: 679, column: 16, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14775, file: !2438, line: 679, column: 6)
!14821 = !DILocation(line: 679, column: 13, scope: !14820)
!14822 = !DILocation(line: 679, column: 6, scope: !14775)
!14823 = !DILocation(line: 680, column: 3, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14820, file: !2438, line: 679, column: 26)
!14825 = !DILocation(line: 681, column: 2, scope: !14824)
!14826 = !DILocation(line: 684, column: 1, scope: !14775)
!14827 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12808, file: !12808, line: 52, type: !13999, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14828)
!14828 = !{!14829}
!14829 = !DILocalVariable(name: "thread", arg: 1, scope: !14827, file: !12808, line: 52, type: !2331)
!14830 = !DILocation(line: 0, scope: !14827)
!14831 = !DILocation(line: 54, column: 39, scope: !14827)
!14832 = !DILocation(line: 54, column: 9, scope: !14827)
!14833 = !DILocation(line: 54, column: 2, scope: !14827)
!14834 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12401, file: !12401, line: 141, type: !13981, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14835)
!14835 = !{!14836}
!14836 = !DILocalVariable(name: "thread", arg: 1, scope: !14834, file: !12401, line: 141, type: !2331)
!14837 = !DILocation(line: 0, scope: !14834)
!14838 = !DILocation(line: 143, column: 15, scope: !14834)
!14839 = !DILocation(line: 143, column: 28, scope: !14834)
!14840 = !DILocation(line: 146, column: 1, scope: !14834)
!14841 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12401, file: !12401, line: 73, type: !365, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !2149)
!14842 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !14843)
!14843 = distinct !DILocation(line: 75, column: 30, scope: !14841)
!14844 = !DILocation(line: 0, scope: !14032, inlinedAt: !14843)
!14845 = !DILocation(line: 75, column: 9, scope: !14841)
!14846 = !DILocation(line: 76, column: 1, scope: !14841)
!14847 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2438, file: !2438, line: 977, type: !6462, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14848)
!14848 = !{!14849}
!14849 = !DILocalVariable(name: "key", arg: 1, scope: !14847, file: !2438, line: 977, type: !156)
!14850 = !DILocation(line: 0, scope: !14847)
!14851 = !DILocation(line: 979, column: 6, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14847, file: !2438, line: 979, column: 6)
!14853 = !DILocation(line: 979, column: 6, scope: !14847)
!14854 = !DILocation(line: 980, column: 3, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14852, file: !2438, line: 979, column: 20)
!14856 = !DILocation(line: 981, column: 2, scope: !14855)
!14857 = !DILocation(line: 0, scope: !14071, inlinedAt: !14858)
!14858 = distinct !DILocation(line: 982, column: 3, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14852, file: !2438, line: 981, column: 9)
!14860 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14858)
!14861 = !DILocation(line: 985, column: 1, scope: !14847)
!14862 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2438, file: !2438, line: 695, type: !13981, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14863)
!14863 = !{!14864, !14865}
!14864 = !DILocalVariable(name: "thread", arg: 1, scope: !14862, file: !2438, line: 695, type: !2331)
!14865 = !DILocalVariable(name: "key", scope: !14862, file: !2438, line: 699, type: !14015)
!14866 = !DILocation(line: 0, scope: !14862)
!14867 = !DILocation(line: 0, scope: !14023, inlinedAt: !14868)
!14868 = distinct !DILocation(line: 699, column: 25, scope: !14862)
!14869 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !14868)
!14871 = !DILocation(line: 0, scope: !14032, inlinedAt: !14870)
!14872 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14868)
!14873 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14868)
!14874 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !14868)
!14875 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !14868)
!14876 = !DILocation(line: 702, column: 7, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14862, file: !2438, line: 702, column: 6)
!14878 = !DILocation(line: 702, column: 6, scope: !14862)
!14879 = !DILocation(line: 0, scope: !14057, inlinedAt: !14880)
!14880 = distinct !DILocation(line: 703, column: 3, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14877, file: !2438, line: 702, column: 38)
!14882 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14880)
!14883 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14880)
!14884 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !14880)
!14885 = !DILocation(line: 0, scope: !14071, inlinedAt: !14886)
!14886 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !14880)
!14887 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14886)
!14888 = !DILocation(line: 704, column: 3, scope: !14881)
!14889 = !DILocation(line: 707, column: 2, scope: !14862)
!14890 = !DILocation(line: 708, column: 2, scope: !14862)
!14891 = !DILocation(line: 710, column: 2, scope: !14862)
!14892 = !DILocation(line: 713, column: 1, scope: !14862)
!14893 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12401, file: !12401, line: 96, type: !14164, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14894)
!14894 = !{!14895}
!14895 = !DILocalVariable(name: "thread", arg: 1, scope: !14893, file: !12401, line: 96, type: !2331)
!14896 = !DILocation(line: 0, scope: !14893)
!14897 = !DILocation(line: 98, column: 23, scope: !14893)
!14898 = !DILocation(line: 98, column: 36, scope: !14893)
!14899 = !DILocation(line: 98, column: 57, scope: !14893)
!14900 = !DILocation(line: 98, column: 2, scope: !14893)
!14901 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12401, file: !12401, line: 148, type: !13981, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14902)
!14902 = !{!14903}
!14903 = !DILocalVariable(name: "thread", arg: 1, scope: !14901, file: !12401, line: 148, type: !2331)
!14904 = !DILocation(line: 0, scope: !14901)
!14905 = !DILocation(line: 150, column: 15, scope: !14901)
!14906 = !DILocation(line: 150, column: 28, scope: !14901)
!14907 = !DILocation(line: 153, column: 1, scope: !14901)
!14908 = distinct !DISubprogram(name: "z_pend_thread", scope: !2438, file: !2438, line: 770, type: !14909, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14915)
!14909 = !DISubroutineType(types: !14910)
!14910 = !{null, !2331, !2362, !14911}
!14911 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !14912)
!14912 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !14913)
!14913 = !{!14914}
!14914 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14912, file: !114, line: 66, baseType: !113, size: 64)
!14915 = !{!14916, !14917, !14918, !14919, !14921}
!14916 = !DILocalVariable(name: "thread", arg: 1, scope: !14908, file: !2438, line: 770, type: !2331)
!14917 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14908, file: !2438, line: 770, type: !2362)
!14918 = !DILocalVariable(name: "timeout", arg: 3, scope: !14908, file: !2438, line: 771, type: !14911)
!14919 = !DILocalVariable(name: "__i", scope: !14920, file: !2438, line: 774, type: !14015)
!14920 = distinct !DILexicalBlock(scope: !14908, file: !2438, line: 774, column: 2)
!14921 = !DILocalVariable(name: "__key", scope: !14920, file: !2438, line: 774, type: !14015)
!14922 = !DILocation(line: 0, scope: !14908)
!14923 = !DILocation(line: 773, column: 2, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14925, file: !2438, line: 773, column: 2)
!14925 = distinct !DILexicalBlock(scope: !14908, file: !2438, line: 773, column: 2)
!14926 = !DILocation(line: 773, column: 2, scope: !14925)
!14927 = !DILocation(line: 773, column: 2, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14924, file: !2438, line: 773, column: 2)
!14929 = !DILocation(line: 0, scope: !14920)
!14930 = !DILocation(line: 0, scope: !14023, inlinedAt: !14931)
!14931 = distinct !DILocation(line: 774, column: 2, scope: !14920)
!14932 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !14933)
!14933 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !14931)
!14934 = !DILocation(line: 0, scope: !14032, inlinedAt: !14933)
!14935 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14931)
!14936 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14931)
!14937 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !14931)
!14938 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !14931)
!14939 = !DILocation(line: 775, column: 3, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14941, file: !2438, line: 774, column: 26)
!14941 = distinct !DILexicalBlock(scope: !14920, file: !2438, line: 774, column: 2)
!14942 = !DILocation(line: 0, scope: !14057, inlinedAt: !14943)
!14943 = distinct !DILocation(line: 774, column: 2, scope: !14941)
!14944 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14943)
!14945 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14943)
!14946 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !14943)
!14947 = !DILocation(line: 0, scope: !14071, inlinedAt: !14948)
!14948 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !14943)
!14949 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !14948)
!14950 = !DILocation(line: 777, column: 1, scope: !14908)
!14951 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2438, file: !2438, line: 79, type: !14164, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14952)
!14952 = !{!14953}
!14953 = !DILocalVariable(name: "thread", arg: 1, scope: !14951, file: !2438, line: 79, type: !2331)
!14954 = !DILocation(line: 0, scope: !14951)
!14955 = !DILocation(line: 81, column: 23, scope: !14951)
!14956 = !DILocation(line: 81, column: 36, scope: !14951)
!14957 = !DILocation(line: 81, column: 53, scope: !14951)
!14958 = !DILocation(line: 81, column: 2, scope: !14951)
!14959 = distinct !DISubprogram(name: "pend_locked", scope: !2438, file: !2438, line: 760, type: !14909, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14960)
!14960 = !{!14961, !14962, !14963}
!14961 = !DILocalVariable(name: "thread", arg: 1, scope: !14959, file: !2438, line: 760, type: !2331)
!14962 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14959, file: !2438, line: 760, type: !2362)
!14963 = !DILocalVariable(name: "timeout", arg: 3, scope: !14959, file: !2438, line: 761, type: !14911)
!14964 = !DILocation(line: 0, scope: !14959)
!14965 = !DILocation(line: 766, column: 2, scope: !14959)
!14966 = !DILocation(line: 767, column: 2, scope: !14959)
!14967 = !DILocation(line: 768, column: 1, scope: !14959)
!14968 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2438, file: !2438, line: 740, type: !14969, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !14971)
!14969 = !DISubroutineType(types: !14970)
!14970 = !{null, !2331, !2362}
!14971 = !{!14972, !14973}
!14972 = !DILocalVariable(name: "thread", arg: 1, scope: !14968, file: !2438, line: 740, type: !2331)
!14973 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14968, file: !2438, line: 740, type: !2362)
!14974 = !DILocation(line: 0, scope: !14968)
!14975 = !DILocation(line: 742, column: 2, scope: !14968)
!14976 = !DILocation(line: 743, column: 2, scope: !14968)
!14977 = !DILocation(line: 747, column: 13, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14968, file: !2438, line: 747, column: 6)
!14979 = !DILocation(line: 747, column: 6, scope: !14968)
!14980 = !DILocation(line: 748, column: 16, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14978, file: !2438, line: 747, column: 22)
!14982 = !DILocation(line: 748, column: 26, scope: !14981)
!14983 = !DILocation(line: 749, column: 28, scope: !14981)
!14984 = !DILocation(line: 0, scope: !14246, inlinedAt: !14985)
!14985 = distinct !DILocation(line: 749, column: 3, scope: !14981)
!14986 = !DILocation(line: 186, column: 2, scope: !14256, inlinedAt: !14985)
!14987 = !DILocation(line: 186, column: 2, scope: !14257, inlinedAt: !14985)
!14988 = !DILocation(line: 186, column: 2, scope: !14260, inlinedAt: !14985)
!14989 = !DILocation(line: 188, column: 2, scope: !14262, inlinedAt: !14985)
!14990 = !DILocation(line: 188, column: 2, scope: !14264, inlinedAt: !14985)
!14991 = !DILocation(line: 0, scope: !14262, inlinedAt: !14985)
!14992 = !DILocation(line: 189, column: 7, scope: !14267, inlinedAt: !14985)
!14993 = !DILocation(line: 189, column: 35, scope: !14267, inlinedAt: !14985)
!14994 = !DILocation(line: 189, column: 7, scope: !14268, inlinedAt: !14985)
!14995 = !DILocation(line: 191, column: 21, scope: !14272, inlinedAt: !14985)
!14996 = !DILocation(line: 190, column: 4, scope: !14272, inlinedAt: !14985)
!14997 = !DILocation(line: 192, column: 4, scope: !14272, inlinedAt: !14985)
!14998 = distinct !{!14998, !14989, !14999}
!14999 = !DILocation(line: 194, column: 2, scope: !14262, inlinedAt: !14985)
!15000 = !DILocation(line: 196, column: 37, scope: !14246, inlinedAt: !14985)
!15001 = !DILocation(line: 196, column: 2, scope: !14246, inlinedAt: !14985)
!15002 = !DILocation(line: 197, column: 1, scope: !14246, inlinedAt: !14985)
!15003 = !DILocation(line: 751, column: 1, scope: !14968)
!15004 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2438, file: !2438, line: 753, type: !15005, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15007)
!15005 = !DISubroutineType(types: !15006)
!15006 = !{null, !2331, !14911}
!15007 = !{!15008, !15009}
!15008 = !DILocalVariable(name: "thread", arg: 1, scope: !15004, file: !2438, line: 753, type: !2331)
!15009 = !DILocalVariable(name: "timeout", arg: 2, scope: !15004, file: !2438, line: 753, type: !14911)
!15010 = !DILocation(line: 0, scope: !15004)
!15011 = !DILocation(line: 755, column: 7, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15004, file: !2438, line: 755, column: 6)
!15013 = !DILocation(line: 755, column: 6, scope: !15004)
!15014 = !DILocation(line: 756, column: 3, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15012, file: !2438, line: 755, column: 41)
!15016 = !DILocation(line: 757, column: 2, scope: !15015)
!15017 = !DILocation(line: 758, column: 1, scope: !15004)
!15018 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12808, file: !12808, line: 47, type: !15005, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15019)
!15019 = !{!15020, !15021}
!15020 = !DILocalVariable(name: "thread", arg: 1, scope: !15018, file: !12808, line: 47, type: !2331)
!15021 = !DILocalVariable(name: "ticks", arg: 2, scope: !15018, file: !12808, line: 47, type: !14911)
!15022 = !DILocation(line: 0, scope: !15018)
!15023 = !DILocation(line: 49, column: 30, scope: !15018)
!15024 = !DILocation(line: 49, column: 2, scope: !15018)
!15025 = !DILocation(line: 50, column: 1, scope: !15018)
!15026 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2438, file: !2438, line: 795, type: !2388, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15027)
!15027 = !{!15028, !15029, !15030, !15032, !15033}
!15028 = !DILocalVariable(name: "timeout", arg: 1, scope: !15026, file: !2438, line: 795, type: !2390)
!15029 = !DILocalVariable(name: "thread", scope: !15026, file: !2438, line: 797, type: !2331)
!15030 = !DILocalVariable(name: "__i", scope: !15031, file: !2438, line: 800, type: !14015)
!15031 = distinct !DILexicalBlock(scope: !15026, file: !2438, line: 800, column: 2)
!15032 = !DILocalVariable(name: "__key", scope: !15031, file: !2438, line: 800, type: !14015)
!15033 = !DILocalVariable(name: "killed", scope: !15034, file: !2438, line: 801, type: !146)
!15034 = distinct !DILexicalBlock(scope: !15035, file: !2438, line: 800, column: 26)
!15035 = distinct !DILexicalBlock(scope: !15031, file: !2438, line: 800, column: 2)
!15036 = !DILocation(line: 0, scope: !15026)
!15037 = !DILocation(line: 797, column: 28, scope: !15026)
!15038 = !DILocation(line: 0, scope: !15031)
!15039 = !DILocation(line: 0, scope: !14023, inlinedAt: !15040)
!15040 = distinct !DILocation(line: 800, column: 2, scope: !15031)
!15041 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15042)
!15042 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15040)
!15043 = !DILocation(line: 0, scope: !14032, inlinedAt: !15042)
!15044 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15040)
!15045 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15040)
!15046 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15040)
!15047 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15040)
!15048 = !DILocation(line: 801, column: 27, scope: !15034)
!15049 = !DILocation(line: 801, column: 32, scope: !15034)
!15050 = !DILocation(line: 801, column: 61, scope: !15034)
!15051 = !DILocation(line: 0, scope: !15034)
!15052 = !DILocation(line: 804, column: 7, scope: !15034)
!15053 = !DILocation(line: 805, column: 21, scope: !15054)
!15054 = distinct !DILexicalBlock(scope: !15055, file: !2438, line: 805, column: 8)
!15055 = distinct !DILexicalBlock(scope: !15056, file: !2438, line: 804, column: 16)
!15056 = distinct !DILexicalBlock(scope: !15034, file: !2438, line: 804, column: 7)
!15057 = !DILocation(line: 805, column: 31, scope: !15054)
!15058 = !DILocation(line: 805, column: 8, scope: !15055)
!15059 = !DILocation(line: 806, column: 5, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15054, file: !2438, line: 805, column: 40)
!15061 = !DILocation(line: 807, column: 4, scope: !15060)
!15062 = !DILocation(line: 808, column: 4, scope: !15055)
!15063 = !DILocation(line: 809, column: 4, scope: !15055)
!15064 = !DILocation(line: 810, column: 4, scope: !15055)
!15065 = !DILocation(line: 811, column: 3, scope: !15055)
!15066 = !DILocation(line: 0, scope: !14057, inlinedAt: !15067)
!15067 = distinct !DILocation(line: 800, column: 2, scope: !15035)
!15068 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15067)
!15069 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15067)
!15070 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !15067)
!15071 = !DILocation(line: 0, scope: !14071, inlinedAt: !15072)
!15072 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !15067)
!15073 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !15072)
!15074 = !DILocation(line: 813, column: 1, scope: !15026)
!15075 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2438, file: !2438, line: 779, type: !13981, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15076)
!15076 = !{!15077}
!15077 = !DILocalVariable(name: "thread", arg: 1, scope: !15075, file: !2438, line: 779, type: !2331)
!15078 = !DILocation(line: 0, scope: !15075)
!15079 = !DILocation(line: 781, column: 21, scope: !15075)
!15080 = !DILocation(line: 781, column: 2, scope: !15075)
!15081 = !DILocation(line: 782, column: 2, scope: !15075)
!15082 = !DILocation(line: 783, column: 15, scope: !15075)
!15083 = !DILocation(line: 783, column: 25, scope: !15075)
!15084 = !DILocation(line: 784, column: 1, scope: !15075)
!15085 = distinct !DISubprogram(name: "pended_on_thread", scope: !2438, file: !2438, line: 724, type: !15086, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15088)
!15086 = !DISubroutineType(types: !15087)
!15087 = !{!2362, !2331}
!15088 = !{!15089}
!15089 = !DILocalVariable(name: "thread", arg: 1, scope: !15085, file: !2438, line: 724, type: !2331)
!15090 = !DILocation(line: 0, scope: !15085)
!15091 = !DILocation(line: 726, column: 2, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !15093, file: !2438, line: 726, column: 2)
!15093 = distinct !DILexicalBlock(scope: !15085, file: !2438, line: 726, column: 2)
!15094 = !DILocation(line: 726, column: 2, scope: !15093)
!15095 = !DILocation(line: 726, column: 2, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !15092, file: !2438, line: 726, column: 2)
!15097 = !DILocation(line: 728, column: 2, scope: !15085)
!15098 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12401, file: !12401, line: 165, type: !13981, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15099)
!15099 = !{!15100}
!15100 = !DILocalVariable(name: "thread", arg: 1, scope: !15098, file: !12401, line: 165, type: !2331)
!15101 = !DILocation(line: 0, scope: !15098)
!15102 = !DILocation(line: 167, column: 15, scope: !15098)
!15103 = !DILocation(line: 167, column: 28, scope: !15098)
!15104 = !DILocation(line: 168, column: 1, scope: !15098)
!15105 = distinct !DISubprogram(name: "unready_thread", scope: !2438, file: !2438, line: 731, type: !13981, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15106)
!15106 = !{!15107}
!15107 = !DILocalVariable(name: "thread", arg: 1, scope: !15105, file: !2438, line: 731, type: !2331)
!15108 = !DILocation(line: 0, scope: !15105)
!15109 = !DILocation(line: 733, column: 6, scope: !15110)
!15110 = distinct !DILexicalBlock(scope: !15105, file: !2438, line: 733, column: 6)
!15111 = !DILocation(line: 733, column: 6, scope: !15105)
!15112 = !DILocation(line: 0, scope: !14215, inlinedAt: !15113)
!15113 = distinct !DILocation(line: 734, column: 3, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !15110, file: !2438, line: 733, column: 34)
!15115 = !DILocation(line: 266, column: 15, scope: !14215, inlinedAt: !15113)
!15116 = !DILocation(line: 266, column: 28, scope: !14215, inlinedAt: !15113)
!15117 = !DILocation(line: 0, scope: !14223, inlinedAt: !15118)
!15118 = distinct !DILocation(line: 268, column: 3, scope: !14227, inlinedAt: !15113)
!15119 = !DILocation(line: 234, column: 2, scope: !14223, inlinedAt: !15118)
!15120 = !DILocation(line: 735, column: 2, scope: !15114)
!15121 = !DILocation(line: 736, column: 25, scope: !15105)
!15122 = !DILocation(line: 736, column: 22, scope: !15105)
!15123 = !DILocation(line: 736, column: 2, scope: !15105)
!15124 = !DILocation(line: 737, column: 1, scope: !15105)
!15125 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12401, file: !12401, line: 160, type: !13981, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15126)
!15126 = !{!15127}
!15127 = !DILocalVariable(name: "thread", arg: 1, scope: !15125, file: !12401, line: 160, type: !2331)
!15128 = !DILocation(line: 0, scope: !15125)
!15129 = !DILocation(line: 162, column: 15, scope: !15125)
!15130 = !DILocation(line: 162, column: 28, scope: !15125)
!15131 = !DILocation(line: 163, column: 1, scope: !15125)
!15132 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2438, file: !2438, line: 786, type: !13981, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15133)
!15133 = !{!15134, !15135, !15137}
!15134 = !DILocalVariable(name: "thread", arg: 1, scope: !15132, file: !2438, line: 786, type: !2331)
!15135 = !DILocalVariable(name: "__i", scope: !15136, file: !2438, line: 788, type: !14015)
!15136 = distinct !DILexicalBlock(scope: !15132, file: !2438, line: 788, column: 2)
!15137 = !DILocalVariable(name: "__key", scope: !15136, file: !2438, line: 788, type: !14015)
!15138 = !DILocation(line: 0, scope: !15132)
!15139 = !DILocation(line: 0, scope: !15136)
!15140 = !DILocation(line: 0, scope: !14023, inlinedAt: !15141)
!15141 = distinct !DILocation(line: 788, column: 2, scope: !15136)
!15142 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15143)
!15143 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15141)
!15144 = !DILocation(line: 0, scope: !14032, inlinedAt: !15143)
!15145 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15141)
!15146 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15141)
!15147 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15141)
!15148 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15141)
!15149 = !DILocation(line: 789, column: 3, scope: !15150)
!15150 = distinct !DILexicalBlock(scope: !15151, file: !2438, line: 788, column: 26)
!15151 = distinct !DILexicalBlock(scope: !15136, file: !2438, line: 788, column: 2)
!15152 = !DILocation(line: 0, scope: !14057, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 788, column: 2, scope: !15151)
!15154 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15153)
!15155 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15153)
!15156 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !15153)
!15157 = !DILocation(line: 0, scope: !14071, inlinedAt: !15158)
!15158 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !15153)
!15159 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !15158)
!15160 = !DILocation(line: 791, column: 1, scope: !15132)
!15161 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2438, file: !2438, line: 816, type: !15162, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15164)
!15162 = !DISubroutineType(types: !15163)
!15163 = !{!118, !156, !2362, !14911}
!15164 = !{!15165, !15166, !15167, !15168, !15169, !15171}
!15165 = !DILocalVariable(name: "key", arg: 1, scope: !15161, file: !2438, line: 816, type: !156)
!15166 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15161, file: !2438, line: 816, type: !2362)
!15167 = !DILocalVariable(name: "timeout", arg: 3, scope: !15161, file: !2438, line: 816, type: !14911)
!15168 = !DILocalVariable(name: "ret", scope: !15161, file: !2438, line: 828, type: !118)
!15169 = !DILocalVariable(name: "__i", scope: !15170, file: !2438, line: 829, type: !14015)
!15170 = distinct !DILexicalBlock(scope: !15161, file: !2438, line: 829, column: 2)
!15171 = !DILocalVariable(name: "__key", scope: !15170, file: !2438, line: 829, type: !14015)
!15172 = !DILocation(line: 0, scope: !15161)
!15173 = !DILocation(line: 823, column: 14, scope: !15161)
!15174 = !DILocation(line: 823, column: 2, scope: !15161)
!15175 = !DILocation(line: 826, column: 20, scope: !15161)
!15176 = !DILocation(line: 826, column: 18, scope: !15161)
!15177 = !DILocation(line: 828, column: 12, scope: !15161)
!15178 = !DILocation(line: 0, scope: !15170)
!15179 = !DILocation(line: 0, scope: !14023, inlinedAt: !15180)
!15180 = distinct !DILocation(line: 829, column: 2, scope: !15170)
!15181 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15182)
!15182 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15180)
!15183 = !DILocation(line: 0, scope: !14032, inlinedAt: !15182)
!15184 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15180)
!15185 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15180)
!15186 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15180)
!15187 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15180)
!15188 = !DILocation(line: 830, column: 7, scope: !15189)
!15189 = distinct !DILexicalBlock(scope: !15190, file: !2438, line: 830, column: 7)
!15190 = distinct !DILexicalBlock(scope: !15191, file: !2438, line: 829, column: 26)
!15191 = distinct !DILexicalBlock(scope: !15170, file: !2438, line: 829, column: 2)
!15192 = !DILocation(line: 830, column: 26, scope: !15189)
!15193 = !DILocation(line: 830, column: 23, scope: !15189)
!15194 = !DILocation(line: 830, column: 7, scope: !15190)
!15195 = !DILocation(line: 831, column: 20, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15189, file: !2438, line: 830, column: 36)
!15197 = !DILocation(line: 832, column: 3, scope: !15196)
!15198 = !DILocation(line: 0, scope: !14057, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 829, column: 2, scope: !15191)
!15200 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15199)
!15201 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15199)
!15202 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !15199)
!15203 = !DILocation(line: 0, scope: !14071, inlinedAt: !15204)
!15204 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !15199)
!15205 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !15204)
!15206 = !DILocation(line: 834, column: 2, scope: !15161)
!15207 = distinct !DISubprogram(name: "z_pend_curr", scope: !2438, file: !2438, line: 840, type: !15208, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15210)
!15208 = !DISubroutineType(types: !15209)
!15209 = !{!118, !14026, !14015, !2362, !14911}
!15210 = !{!15211, !15212, !15213, !15214}
!15211 = !DILocalVariable(name: "lock", arg: 1, scope: !15207, file: !2438, line: 840, type: !14026)
!15212 = !DILocalVariable(name: "key", arg: 2, scope: !15207, file: !2438, line: 840, type: !14015)
!15213 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15207, file: !2438, line: 841, type: !2362)
!15214 = !DILocalVariable(name: "timeout", arg: 4, scope: !15207, file: !2438, line: 841, type: !14911)
!15215 = !DILocation(line: 0, scope: !15207)
!15216 = !DILocation(line: 844, column: 20, scope: !15207)
!15217 = !DILocation(line: 844, column: 18, scope: !15207)
!15218 = !DILocation(line: 846, column: 2, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15220, file: !2438, line: 846, column: 2)
!15220 = distinct !DILexicalBlock(scope: !15207, file: !2438, line: 846, column: 2)
!15221 = !DILocation(line: 846, column: 2, scope: !15220)
!15222 = !DILocation(line: 846, column: 2, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15219, file: !2438, line: 846, column: 2)
!15224 = !DILocation(line: 0, scope: !14023, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 856, column: 9, scope: !15207)
!15226 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15227)
!15227 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15225)
!15228 = !DILocation(line: 0, scope: !14032, inlinedAt: !15227)
!15229 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15225)
!15230 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15225)
!15231 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15225)
!15232 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15225)
!15233 = !DILocation(line: 857, column: 14, scope: !15207)
!15234 = !DILocation(line: 857, column: 2, scope: !15207)
!15235 = !DILocation(line: 0, scope: !14710, inlinedAt: !15236)
!15236 = distinct !DILocation(line: 858, column: 2, scope: !15207)
!15237 = !DILocation(line: 225, column: 2, scope: !14717, inlinedAt: !15236)
!15238 = !DILocation(line: 225, column: 2, scope: !14718, inlinedAt: !15236)
!15239 = !DILocation(line: 225, column: 2, scope: !14721, inlinedAt: !15236)
!15240 = !DILocation(line: 0, scope: !14701, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 859, column: 9, scope: !15207)
!15242 = !DILocation(line: 0, scope: !14710, inlinedAt: !15243)
!15243 = distinct !DILocation(line: 195, column: 2, scope: !14701, inlinedAt: !15241)
!15244 = !DILocation(line: 225, column: 2, scope: !14717, inlinedAt: !15243)
!15245 = !DILocation(line: 225, column: 2, scope: !14718, inlinedAt: !15243)
!15246 = !DILocation(line: 225, column: 2, scope: !14721, inlinedAt: !15243)
!15247 = !DILocation(line: 196, column: 9, scope: !14701, inlinedAt: !15241)
!15248 = !DILocation(line: 859, column: 2, scope: !15207)
!15249 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2438, file: !2438, line: 862, type: !15250, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15252)
!15250 = !DISubroutineType(types: !15251)
!15251 = !{!2331, !2362}
!15252 = !{!15253, !15254, !15255, !15257}
!15253 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15249, file: !2438, line: 862, type: !2362)
!15254 = !DILocalVariable(name: "thread", scope: !15249, file: !2438, line: 864, type: !2331)
!15255 = !DILocalVariable(name: "__i", scope: !15256, file: !2438, line: 866, type: !14015)
!15256 = distinct !DILexicalBlock(scope: !15249, file: !2438, line: 866, column: 2)
!15257 = !DILocalVariable(name: "__key", scope: !15256, file: !2438, line: 866, type: !14015)
!15258 = !DILocation(line: 0, scope: !15249)
!15259 = !DILocation(line: 0, scope: !15256)
!15260 = !DILocation(line: 0, scope: !14023, inlinedAt: !15261)
!15261 = distinct !DILocation(line: 866, column: 2, scope: !15256)
!15262 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15263)
!15263 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15261)
!15264 = !DILocation(line: 0, scope: !14032, inlinedAt: !15263)
!15265 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15261)
!15266 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15261)
!15267 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15261)
!15268 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15261)
!15269 = !DILocation(line: 867, column: 12, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15271, file: !2438, line: 866, column: 26)
!15271 = distinct !DILexicalBlock(scope: !15256, file: !2438, line: 866, column: 2)
!15272 = !DILocation(line: 869, column: 14, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15270, file: !2438, line: 869, column: 7)
!15274 = !DILocation(line: 869, column: 7, scope: !15270)
!15275 = !DILocation(line: 870, column: 4, scope: !15276)
!15276 = distinct !DILexicalBlock(scope: !15273, file: !2438, line: 869, column: 23)
!15277 = !DILocation(line: 871, column: 3, scope: !15276)
!15278 = !DILocation(line: 0, scope: !14057, inlinedAt: !15279)
!15279 = distinct !DILocation(line: 866, column: 2, scope: !15271)
!15280 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15279)
!15281 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15279)
!15282 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !15279)
!15283 = !DILocation(line: 0, scope: !14071, inlinedAt: !15284)
!15284 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !15279)
!15285 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !15284)
!15286 = !DILocation(line: 874, column: 2, scope: !15249)
!15287 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2438, file: !2438, line: 877, type: !15250, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15288)
!15288 = !{!15289, !15290, !15291, !15293}
!15289 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15287, file: !2438, line: 877, type: !2362)
!15290 = !DILocalVariable(name: "thread", scope: !15287, file: !2438, line: 879, type: !2331)
!15291 = !DILocalVariable(name: "__i", scope: !15292, file: !2438, line: 881, type: !14015)
!15292 = distinct !DILexicalBlock(scope: !15287, file: !2438, line: 881, column: 2)
!15293 = !DILocalVariable(name: "__key", scope: !15292, file: !2438, line: 881, type: !14015)
!15294 = !DILocation(line: 0, scope: !15287)
!15295 = !DILocation(line: 0, scope: !15292)
!15296 = !DILocation(line: 0, scope: !14023, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 881, column: 2, scope: !15292)
!15298 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15299)
!15299 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15297)
!15300 = !DILocation(line: 0, scope: !14032, inlinedAt: !15299)
!15301 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15297)
!15302 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15297)
!15303 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15297)
!15304 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15297)
!15305 = !DILocation(line: 882, column: 12, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15307, file: !2438, line: 881, column: 26)
!15307 = distinct !DILexicalBlock(scope: !15292, file: !2438, line: 881, column: 2)
!15308 = !DILocation(line: 884, column: 14, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15306, file: !2438, line: 884, column: 7)
!15310 = !DILocation(line: 884, column: 7, scope: !15306)
!15311 = !DILocation(line: 885, column: 4, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15309, file: !2438, line: 884, column: 23)
!15313 = !DILocation(line: 886, column: 10, scope: !15312)
!15314 = !DILocation(line: 887, column: 3, scope: !15312)
!15315 = !DILocation(line: 0, scope: !14057, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 881, column: 2, scope: !15307)
!15317 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15316)
!15318 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15316)
!15319 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !15316)
!15320 = !DILocation(line: 0, scope: !14071, inlinedAt: !15321)
!15321 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !15316)
!15322 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !15321)
!15323 = !DILocation(line: 890, column: 2, scope: !15287)
!15324 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2438, file: !2438, line: 893, type: !13981, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15325)
!15325 = !{!15326}
!15326 = !DILocalVariable(name: "thread", arg: 1, scope: !15324, file: !2438, line: 893, type: !2331)
!15327 = !DILocation(line: 0, scope: !15324)
!15328 = !DILocation(line: 0, scope: !15132, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 895, column: 2, scope: !15324)
!15330 = !DILocation(line: 0, scope: !15136, inlinedAt: !15329)
!15331 = !DILocation(line: 0, scope: !14023, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 788, column: 2, scope: !15136, inlinedAt: !15329)
!15333 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15334)
!15334 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15332)
!15335 = !DILocation(line: 0, scope: !14032, inlinedAt: !15334)
!15336 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15332)
!15337 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15332)
!15338 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15332)
!15339 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15332)
!15340 = !DILocation(line: 789, column: 3, scope: !15150, inlinedAt: !15329)
!15341 = !DILocation(line: 0, scope: !14057, inlinedAt: !15342)
!15342 = distinct !DILocation(line: 788, column: 2, scope: !15151, inlinedAt: !15329)
!15343 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15342)
!15344 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15342)
!15345 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !15342)
!15346 = !DILocation(line: 0, scope: !14071, inlinedAt: !15347)
!15347 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !15342)
!15348 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !15347)
!15349 = !DILocation(line: 896, column: 8, scope: !15324)
!15350 = !DILocation(line: 897, column: 1, scope: !15324)
!15351 = distinct !DISubprogram(name: "z_set_prio", scope: !2438, file: !2438, line: 902, type: !14384, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15352)
!15352 = !{!15353, !15354, !15355, !15356, !15358}
!15353 = !DILocalVariable(name: "thread", arg: 1, scope: !15351, file: !2438, line: 902, type: !2331)
!15354 = !DILocalVariable(name: "prio", arg: 2, scope: !15351, file: !2438, line: 902, type: !118)
!15355 = !DILocalVariable(name: "need_sched", scope: !15351, file: !2438, line: 904, type: !146)
!15356 = !DILocalVariable(name: "__i", scope: !15357, file: !2438, line: 906, type: !14015)
!15357 = distinct !DILexicalBlock(scope: !15351, file: !2438, line: 906, column: 2)
!15358 = !DILocalVariable(name: "__key", scope: !15357, file: !2438, line: 906, type: !14015)
!15359 = !DILocation(line: 0, scope: !15351)
!15360 = !DILocation(line: 0, scope: !15357)
!15361 = !DILocation(line: 0, scope: !14023, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 906, column: 2, scope: !15357)
!15363 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15364)
!15364 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15362)
!15365 = !DILocation(line: 0, scope: !14032, inlinedAt: !15364)
!15366 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15362)
!15367 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15362)
!15368 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15362)
!15369 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15362)
!15370 = !DILocation(line: 907, column: 16, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15372, file: !2438, line: 906, column: 26)
!15372 = distinct !DILexicalBlock(scope: !15357, file: !2438, line: 906, column: 2)
!15373 = !DILocation(line: 909, column: 7, scope: !15371)
!15374 = !DILocation(line: 0, scope: !14215, inlinedAt: !15375)
!15375 = distinct !DILocation(line: 912, column: 5, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15377, file: !2438, line: 911, column: 63)
!15377 = distinct !DILexicalBlock(scope: !15378, file: !2438, line: 911, column: 8)
!15378 = distinct !DILexicalBlock(scope: !15379, file: !2438, line: 909, column: 19)
!15379 = distinct !DILexicalBlock(scope: !15371, file: !2438, line: 909, column: 7)
!15380 = !DILocation(line: 266, column: 28, scope: !14215, inlinedAt: !15375)
!15381 = !DILocation(line: 0, scope: !14223, inlinedAt: !15382)
!15382 = distinct !DILocation(line: 268, column: 3, scope: !14227, inlinedAt: !15375)
!15383 = !DILocation(line: 234, column: 2, scope: !14223, inlinedAt: !15382)
!15384 = !DILocation(line: 913, column: 23, scope: !15376)
!15385 = !DILocation(line: 0, scope: !14232, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 914, column: 5, scope: !15376)
!15387 = !DILocation(line: 252, column: 28, scope: !14232, inlinedAt: !15386)
!15388 = !DILocation(line: 0, scope: !14239, inlinedAt: !15389)
!15389 = distinct !DILocation(line: 254, column: 3, scope: !14243, inlinedAt: !15386)
!15390 = !DILocation(line: 0, scope: !14246, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 229, column: 2, scope: !14239, inlinedAt: !15389)
!15392 = !DILocation(line: 186, column: 2, scope: !14256, inlinedAt: !15391)
!15393 = !DILocation(line: 186, column: 2, scope: !14257, inlinedAt: !15391)
!15394 = !DILocation(line: 186, column: 2, scope: !14260, inlinedAt: !15391)
!15395 = !DILocation(line: 188, column: 2, scope: !14262, inlinedAt: !15391)
!15396 = !DILocation(line: 188, column: 2, scope: !14264, inlinedAt: !15391)
!15397 = !DILocation(line: 0, scope: !14262, inlinedAt: !15391)
!15398 = !DILocation(line: 189, column: 7, scope: !14267, inlinedAt: !15391)
!15399 = !DILocation(line: 189, column: 35, scope: !14267, inlinedAt: !15391)
!15400 = !DILocation(line: 189, column: 7, scope: !14268, inlinedAt: !15391)
!15401 = !DILocation(line: 190, column: 4, scope: !14272, inlinedAt: !15391)
!15402 = !DILocation(line: 192, column: 4, scope: !14272, inlinedAt: !15391)
!15403 = distinct !{!15403, !15395, !15404}
!15404 = !DILocation(line: 194, column: 2, scope: !14262, inlinedAt: !15391)
!15405 = !DILocation(line: 196, column: 2, scope: !14246, inlinedAt: !15391)
!15406 = !DILocation(line: 197, column: 1, scope: !14246, inlinedAt: !15391)
!15407 = !DILocation(line: 918, column: 4, scope: !15378)
!15408 = !DILocation(line: 919, column: 3, scope: !15378)
!15409 = !DILocation(line: 920, column: 22, scope: !15410)
!15410 = distinct !DILexicalBlock(scope: !15379, file: !2438, line: 919, column: 10)
!15411 = !DILocation(line: 0, scope: !14057, inlinedAt: !15412)
!15412 = distinct !DILocation(line: 906, column: 2, scope: !15372)
!15413 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15412)
!15414 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15412)
!15415 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !15412)
!15416 = !DILocation(line: 0, scope: !14071, inlinedAt: !15417)
!15417 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !15412)
!15418 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !15417)
!15419 = !DILocation(line: 926, column: 2, scope: !15351)
!15420 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2438, file: !2438, line: 929, type: !15421, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15423)
!15421 = !DISubroutineType(types: !15422)
!15422 = !{null, !2331, !118}
!15423 = !{!15424, !15425, !15426}
!15424 = !DILocalVariable(name: "thread", arg: 1, scope: !15420, file: !2438, line: 929, type: !2331)
!15425 = !DILocalVariable(name: "prio", arg: 2, scope: !15420, file: !2438, line: 929, type: !118)
!15426 = !DILocalVariable(name: "need_sched", scope: !15420, file: !2438, line: 931, type: !146)
!15427 = !DILocation(line: 0, scope: !15420)
!15428 = !DILocation(line: 931, column: 20, scope: !15420)
!15429 = !DILocation(line: 935, column: 17, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15420, file: !2438, line: 935, column: 6)
!15431 = !DILocation(line: 935, column: 20, scope: !15430)
!15432 = !DILocation(line: 935, column: 35, scope: !15430)
!15433 = !DILocation(line: 935, column: 48, scope: !15430)
!15434 = !DILocation(line: 935, column: 6, scope: !15420)
!15435 = !DILocation(line: 936, column: 3, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15430, file: !2438, line: 935, column: 55)
!15437 = !DILocation(line: 937, column: 2, scope: !15436)
!15438 = !DILocation(line: 938, column: 1, scope: !15420)
!15439 = distinct !DISubprogram(name: "k_sched_lock", scope: !2438, file: !2438, line: 987, type: !365, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15440)
!15440 = !{!15441, !15443}
!15441 = !DILocalVariable(name: "__i", scope: !15442, file: !2438, line: 989, type: !14015)
!15442 = distinct !DILexicalBlock(scope: !15439, file: !2438, line: 989, column: 2)
!15443 = !DILocalVariable(name: "__key", scope: !15442, file: !2438, line: 989, type: !14015)
!15444 = !DILocation(line: 0, scope: !15442)
!15445 = !DILocation(line: 0, scope: !14023, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 989, column: 2, scope: !15442)
!15447 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15448)
!15448 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15446)
!15449 = !DILocation(line: 0, scope: !14032, inlinedAt: !15448)
!15450 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15446)
!15451 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15446)
!15452 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15446)
!15453 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15446)
!15454 = !DILocation(line: 992, column: 3, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15456, file: !2438, line: 989, column: 26)
!15456 = distinct !DILexicalBlock(scope: !15442, file: !2438, line: 989, column: 2)
!15457 = !DILocation(line: 0, scope: !14057, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 989, column: 2, scope: !15456)
!15459 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15458)
!15460 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15458)
!15461 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !15458)
!15462 = !DILocation(line: 0, scope: !14071, inlinedAt: !15463)
!15463 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !15458)
!15464 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !15463)
!15465 = !DILocation(line: 994, column: 1, scope: !15439)
!15466 = distinct !DISubprogram(name: "z_sched_lock", scope: !12401, file: !12401, line: 251, type: !365, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !2149)
!15467 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !15468)
!15468 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 253, column: 2, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15471, file: !12401, line: 253, column: 2)
!15471 = distinct !DILexicalBlock(scope: !15466, file: !12401, line: 253, column: 2)
!15472 = !DILocation(line: 0, scope: !14750, inlinedAt: !15468)
!15473 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !15469)
!15474 = !DILocation(line: 253, column: 2, scope: !15471)
!15475 = !DILocation(line: 253, column: 2, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !15470, file: !12401, line: 253, column: 2)
!15477 = !DILocation(line: 254, column: 2, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15479, file: !12401, line: 254, column: 2)
!15479 = distinct !DILexicalBlock(scope: !15466, file: !12401, line: 254, column: 2)
!15480 = !DILocation(line: 254, column: 2, scope: !15479)
!15481 = !DILocation(line: 254, column: 2, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15478, file: !12401, line: 254, column: 2)
!15483 = !DILocation(line: 256, column: 2, scope: !15466)
!15484 = !DILocation(line: 258, column: 2, scope: !15485)
!15485 = distinct !DILexicalBlock(scope: !15466, file: !12401, line: 258, column: 2)
!15486 = !{i64 2154284065}
!15487 = !DILocation(line: 259, column: 1, scope: !15466)
!15488 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2438, file: !2438, line: 996, type: !365, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15489)
!15489 = !{!15490, !15492}
!15490 = !DILocalVariable(name: "__i", scope: !15491, file: !2438, line: 998, type: !14015)
!15491 = distinct !DILexicalBlock(scope: !15488, file: !2438, line: 998, column: 2)
!15492 = !DILocalVariable(name: "__key", scope: !15491, file: !2438, line: 998, type: !14015)
!15493 = !DILocation(line: 0, scope: !15491)
!15494 = !DILocation(line: 0, scope: !14023, inlinedAt: !15495)
!15495 = distinct !DILocation(line: 998, column: 2, scope: !15491)
!15496 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15497)
!15497 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15495)
!15498 = !DILocation(line: 0, scope: !14032, inlinedAt: !15497)
!15499 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15495)
!15500 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15495)
!15501 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15495)
!15502 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15495)
!15503 = !DILocation(line: 999, column: 3, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !15505, file: !2438, line: 999, column: 3)
!15505 = distinct !DILexicalBlock(scope: !15506, file: !2438, line: 999, column: 3)
!15506 = distinct !DILexicalBlock(scope: !15507, file: !2438, line: 998, column: 26)
!15507 = distinct !DILexicalBlock(scope: !15491, file: !2438, line: 998, column: 2)
!15508 = !DILocation(line: 999, column: 3, scope: !15505)
!15509 = !DILocation(line: 999, column: 3, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15504, file: !2438, line: 999, column: 3)
!15511 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !15512)
!15512 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !15513)
!15513 = distinct !DILocation(line: 1000, column: 3, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15515, file: !2438, line: 1000, column: 3)
!15515 = distinct !DILexicalBlock(scope: !15506, file: !2438, line: 1000, column: 3)
!15516 = !DILocation(line: 0, scope: !14750, inlinedAt: !15512)
!15517 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !15513)
!15518 = !DILocation(line: 1000, column: 3, scope: !15515)
!15519 = !DILocation(line: 1000, column: 3, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15514, file: !2438, line: 1000, column: 3)
!15521 = !DILocation(line: 1002, column: 5, scope: !15506)
!15522 = !DILocation(line: 1002, column: 20, scope: !15506)
!15523 = !DILocation(line: 1002, column: 3, scope: !15506)
!15524 = !DILocation(line: 1003, column: 3, scope: !15506)
!15525 = !DILocation(line: 0, scope: !14057, inlinedAt: !15526)
!15526 = distinct !DILocation(line: 998, column: 2, scope: !15507)
!15527 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15526)
!15528 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15526)
!15529 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !15526)
!15530 = !DILocation(line: 0, scope: !14071, inlinedAt: !15531)
!15531 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !15526)
!15532 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !15531)
!15533 = !DILocation(line: 1011, column: 2, scope: !15488)
!15534 = !DILocation(line: 1012, column: 1, scope: !15488)
!15535 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2438, file: !2438, line: 1014, type: !14372, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !2149)
!15536 = !DILocation(line: 1028, column: 25, scope: !15535)
!15537 = !DILocation(line: 1028, column: 2, scope: !15535)
!15538 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2438, file: !2438, line: 1155, type: !15539, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15541)
!15539 = !DISubroutineType(types: !15540)
!15540 = !{!146, !2360, !2360}
!15541 = !{!15542, !15543, !15544, !15545, !15546}
!15542 = !DILocalVariable(name: "a", arg: 1, scope: !15538, file: !2438, line: 1155, type: !2360)
!15543 = !DILocalVariable(name: "b", arg: 2, scope: !15538, file: !2438, line: 1155, type: !2360)
!15544 = !DILocalVariable(name: "thread_a", scope: !15538, file: !2438, line: 1157, type: !2331)
!15545 = !DILocalVariable(name: "thread_b", scope: !15538, file: !2438, line: 1157, type: !2331)
!15546 = !DILocalVariable(name: "cmp", scope: !15538, file: !2438, line: 1158, type: !362)
!15547 = !DILocation(line: 0, scope: !15538)
!15548 = !DILocation(line: 1160, column: 13, scope: !15538)
!15549 = !DILocation(line: 1161, column: 13, scope: !15538)
!15550 = !DILocation(line: 1163, column: 8, scope: !15538)
!15551 = !DILocation(line: 1165, column: 10, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15538, file: !2438, line: 1165, column: 6)
!15553 = !DILocation(line: 1165, column: 6, scope: !15538)
!15554 = !DILocation(line: 1167, column: 17, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !15552, file: !2438, line: 1167, column: 13)
!15556 = !DILocation(line: 1167, column: 13, scope: !15552)
!15557 = !DILocation(line: 1170, column: 25, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !15555, file: !2438, line: 1169, column: 9)
!15559 = !DILocation(line: 1170, column: 52, scope: !15558)
!15560 = !DILocation(line: 1170, column: 35, scope: !15558)
!15561 = !DILocation(line: 1170, column: 3, scope: !15558)
!15562 = !DILocation(line: 0, scope: !15552)
!15563 = !DILocation(line: 1173, column: 1, scope: !15538)
!15564 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2438, file: !2438, line: 1175, type: !15565, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15580)
!15565 = !DISubroutineType(types: !15566)
!15566 = !{null, !15567, !2331}
!15567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15568, size: 32)
!15568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15569, line: 37, size: 128, elements: !15570)
!15569 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15570 = !{!15571, !15579}
!15571 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15568, file: !15569, line: 38, baseType: !15572, size: 96)
!15572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !251, line: 83, size: 96, elements: !15573)
!15573 = !{!15574, !15575, !15578}
!15574 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15572, file: !251, line: 84, baseType: !2360, size: 32)
!15575 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15572, file: !251, line: 85, baseType: !15576, size: 32, offset: 32)
!15576 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !251, line: 81, baseType: !15577)
!15577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15539, size: 32)
!15578 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15572, file: !251, line: 86, baseType: !118, size: 32, offset: 64)
!15579 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15568, file: !15569, line: 39, baseType: !118, size: 32, offset: 96)
!15580 = !{!15581, !15582, !15583, !15584, !15593}
!15581 = !DILocalVariable(name: "pq", arg: 1, scope: !15564, file: !2438, line: 1175, type: !15567)
!15582 = !DILocalVariable(name: "thread", arg: 2, scope: !15564, file: !2438, line: 1175, type: !2331)
!15583 = !DILocalVariable(name: "t", scope: !15564, file: !2438, line: 1177, type: !2331)
!15584 = !DILocalVariable(name: "__f", scope: !15585, file: !2438, line: 1190, type: !15588)
!15585 = distinct !DILexicalBlock(scope: !15586, file: !2438, line: 1190, column: 3)
!15586 = distinct !DILexicalBlock(scope: !15587, file: !2438, line: 1189, column: 27)
!15587 = distinct !DILexicalBlock(scope: !15564, file: !2438, line: 1189, column: 6)
!15588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !251, line: 155, size: 96, elements: !15589)
!15589 = !{!15590, !15591, !15592}
!15590 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15588, file: !251, line: 156, baseType: !2433, size: 32)
!15591 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15588, file: !251, line: 157, baseType: !1981, size: 32, offset: 32)
!15592 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15588, file: !251, line: 158, baseType: !362, size: 32, offset: 64)
!15593 = !DILocalVariable(name: "n", scope: !15594, file: !2438, line: 1190, type: !2360)
!15594 = distinct !DILexicalBlock(scope: !15595, file: !2438, line: 1190, column: 3)
!15595 = distinct !DILexicalBlock(scope: !15585, file: !2438, line: 1190, column: 3)
!15596 = !DILocation(line: 0, scope: !15564)
!15597 = !DILocation(line: 1179, column: 2, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15599, file: !2438, line: 1179, column: 2)
!15599 = distinct !DILexicalBlock(scope: !15564, file: !2438, line: 1179, column: 2)
!15600 = !DILocation(line: 1179, column: 2, scope: !15599)
!15601 = !DILocation(line: 1179, column: 2, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15598, file: !2438, line: 1179, column: 2)
!15603 = !DILocation(line: 1181, column: 31, scope: !15564)
!15604 = !DILocation(line: 1181, column: 45, scope: !15564)
!15605 = !DILocation(line: 1181, column: 15, scope: !15564)
!15606 = !DILocation(line: 1181, column: 25, scope: !15564)
!15607 = !DILocation(line: 1189, column: 11, scope: !15587)
!15608 = !DILocation(line: 1189, column: 7, scope: !15587)
!15609 = !DILocation(line: 1189, column: 6, scope: !15564)
!15610 = !DILocation(line: 1190, column: 3, scope: !15585)
!15611 = !DILocation(line: 1190, column: 3, scope: !15594)
!15612 = !DILocation(line: 0, scope: !15594)
!15613 = !DILocation(line: 1190, column: 3, scope: !15595)
!15614 = !DILocation(line: 1193, column: 2, scope: !15586)
!15615 = !DILocation(line: 1191, column: 42, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !15595, file: !2438, line: 1190, column: 54)
!15617 = !DILocation(line: 1191, column: 12, scope: !15616)
!15618 = !DILocation(line: 1191, column: 22, scope: !15616)
!15619 = distinct !{!15619, !15610, !15620}
!15620 = !DILocation(line: 1192, column: 3, scope: !15585)
!15621 = !DILocation(line: 1195, column: 17, scope: !15564)
!15622 = !DILocation(line: 1195, column: 37, scope: !15564)
!15623 = !DILocation(line: 1195, column: 2, scope: !15564)
!15624 = !DILocation(line: 1196, column: 1, scope: !15564)
!15625 = !DISubprogram(name: "z_rb_foreach_next", scope: !251, file: !251, line: 176, type: !15626, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!15626 = !DISubroutineType(types: !15627)
!15627 = !{!2360, !15628, !15629}
!15628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15572, size: 32)
!15629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15588, size: 32)
!15630 = !DISubprogram(name: "rb_insert", scope: !251, file: !251, line: 105, type: !15631, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!15631 = !DISubroutineType(types: !15632)
!15632 = !{null, !15628, !2360}
!15633 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2438, file: !2438, line: 1198, type: !15565, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15634)
!15634 = !{!15635, !15636}
!15635 = !DILocalVariable(name: "pq", arg: 1, scope: !15633, file: !2438, line: 1198, type: !15567)
!15636 = !DILocalVariable(name: "thread", arg: 2, scope: !15633, file: !2438, line: 1198, type: !2331)
!15637 = !DILocation(line: 0, scope: !15633)
!15638 = !DILocation(line: 1200, column: 2, scope: !15639)
!15639 = distinct !DILexicalBlock(scope: !15640, file: !2438, line: 1200, column: 2)
!15640 = distinct !DILexicalBlock(scope: !15633, file: !2438, line: 1200, column: 2)
!15641 = !DILocation(line: 1200, column: 2, scope: !15640)
!15642 = !DILocation(line: 1200, column: 2, scope: !15643)
!15643 = distinct !DILexicalBlock(scope: !15639, file: !2438, line: 1200, column: 2)
!15644 = !DILocation(line: 1202, column: 17, scope: !15633)
!15645 = !DILocation(line: 1202, column: 37, scope: !15633)
!15646 = !DILocation(line: 1202, column: 2, scope: !15633)
!15647 = !DILocation(line: 1204, column: 16, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15633, file: !2438, line: 1204, column: 6)
!15649 = !DILocation(line: 1204, column: 7, scope: !15648)
!15650 = !DILocation(line: 1204, column: 6, scope: !15633)
!15651 = !DILocation(line: 1205, column: 7, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15648, file: !2438, line: 1204, column: 22)
!15653 = !DILocation(line: 1205, column: 22, scope: !15652)
!15654 = !DILocation(line: 1206, column: 2, scope: !15652)
!15655 = !DILocation(line: 1207, column: 1, scope: !15633)
!15656 = !DISubprogram(name: "rb_remove", scope: !251, file: !251, line: 110, type: !15631, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!15657 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2438, file: !2438, line: 1209, type: !15658, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15660)
!15658 = !DISubroutineType(types: !15659)
!15659 = !{!2331, !15567}
!15660 = !{!15661, !15662, !15663}
!15661 = !DILocalVariable(name: "pq", arg: 1, scope: !15657, file: !2438, line: 1209, type: !15567)
!15662 = !DILocalVariable(name: "thread", scope: !15657, file: !2438, line: 1211, type: !2331)
!15663 = !DILocalVariable(name: "n", scope: !15657, file: !2438, line: 1212, type: !2360)
!15664 = !DILocation(line: 0, scope: !15657)
!15665 = !DILocation(line: 1212, column: 37, scope: !15657)
!15666 = !DILocation(line: 1212, column: 21, scope: !15657)
!15667 = !DILocation(line: 1217, column: 2, scope: !15657)
!15668 = distinct !DISubprogram(name: "rb_get_min", scope: !251, file: !251, line: 115, type: !15669, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15671)
!15669 = !DISubroutineType(types: !15670)
!15670 = !{!2360, !15628}
!15671 = !{!15672}
!15672 = !DILocalVariable(name: "tree", arg: 1, scope: !15668, file: !251, line: 115, type: !15628)
!15673 = !DILocation(line: 0, scope: !15668)
!15674 = !DILocation(line: 117, column: 9, scope: !15668)
!15675 = !DILocation(line: 117, column: 2, scope: !15668)
!15676 = !DISubprogram(name: "z_rb_get_minmax", scope: !251, file: !251, line: 100, type: !15677, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2149)
!15677 = !DISubroutineType(types: !15678)
!15678 = !{!2360, !15628, !143}
!15679 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2438, file: !2438, line: 1246, type: !15680, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15690)
!15680 = !DISubroutineType(types: !15681)
!15681 = !{!2331, !15682}
!15682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15683, size: 32)
!15683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15569, line: 53, size: 2080, elements: !15684)
!15684 = !{!15685, !15689}
!15685 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15683, file: !15569, line: 54, baseType: !15686, size: 2048)
!15686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2367, size: 2048, elements: !15687)
!15687 = !{!15688}
!15688 = !DISubrange(count: 32)
!15689 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15683, file: !15569, line: 55, baseType: !32, size: 32, offset: 2048)
!15690 = !{!15691, !15692, !15693, !15694}
!15691 = !DILocalVariable(name: "pq", arg: 1, scope: !15679, file: !2438, line: 1246, type: !15682)
!15692 = !DILocalVariable(name: "thread", scope: !15679, file: !2438, line: 1252, type: !2331)
!15693 = !DILocalVariable(name: "l", scope: !15679, file: !2438, line: 1253, type: !14249)
!15694 = !DILocalVariable(name: "n", scope: !15679, file: !2438, line: 1254, type: !2434)
!15695 = !DILocation(line: 0, scope: !15679)
!15696 = !DILocation(line: 1248, column: 11, scope: !15697)
!15697 = distinct !DILexicalBlock(scope: !15679, file: !2438, line: 1248, column: 6)
!15698 = !DILocation(line: 1248, column: 7, scope: !15697)
!15699 = !DILocation(line: 1248, column: 6, scope: !15679)
!15700 = !DILocation(line: 1253, column: 31, scope: !15679)
!15701 = !DILocation(line: 1253, column: 20, scope: !15679)
!15702 = !DILocation(line: 1254, column: 19, scope: !15679)
!15703 = !DILocation(line: 1260, column: 1, scope: !15679)
!15704 = distinct !DISubprogram(name: "z_unpend_all", scope: !2438, file: !2438, line: 1262, type: !15705, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15707)
!15705 = !DISubroutineType(types: !15706)
!15706 = !{!118, !2362}
!15707 = !{!15708, !15709, !15710}
!15708 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15704, file: !2438, line: 1262, type: !2362)
!15709 = !DILocalVariable(name: "need_sched", scope: !15704, file: !2438, line: 1264, type: !118)
!15710 = !DILocalVariable(name: "thread", scope: !15704, file: !2438, line: 1265, type: !2331)
!15711 = !DILocation(line: 0, scope: !15704)
!15712 = !DILocation(line: 1267, column: 19, scope: !15704)
!15713 = !DILocation(line: 1267, column: 41, scope: !15704)
!15714 = !DILocation(line: 1267, column: 2, scope: !15704)
!15715 = !DILocation(line: 1268, column: 3, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15704, file: !2438, line: 1267, column: 50)
!15717 = !DILocation(line: 1269, column: 3, scope: !15716)
!15718 = distinct !{!15718, !15714, !15719}
!15719 = !DILocation(line: 1271, column: 2, scope: !15704)
!15720 = !DILocation(line: 1273, column: 2, scope: !15704)
!15721 = distinct !DISubprogram(name: "z_waitq_head", scope: !12740, file: !12740, line: 52, type: !15250, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15722)
!15722 = !{!15723}
!15723 = !DILocalVariable(name: "w", arg: 1, scope: !15721, file: !12740, line: 52, type: !2362)
!15724 = !DILocation(line: 0, scope: !15721)
!15725 = !DILocation(line: 54, column: 52, scope: !15721)
!15726 = !DILocation(line: 54, column: 28, scope: !15721)
!15727 = !DILocation(line: 54, column: 9, scope: !15721)
!15728 = !DILocation(line: 54, column: 2, scope: !15721)
!15729 = distinct !DISubprogram(name: "init_ready_q", scope: !2438, file: !2438, line: 1276, type: !15730, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15737)
!15730 = !DISubroutineType(types: !15731)
!15731 = !{null, !15732}
!15732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15733, size: 32)
!15733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !261, line: 83, size: 96, elements: !15734)
!15734 = !{!15735, !15736}
!15735 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15733, file: !261, line: 86, baseType: !2331, size: 32)
!15736 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15733, file: !261, line: 90, baseType: !2367, size: 64, offset: 32)
!15737 = !{!15738}
!15738 = !DILocalVariable(name: "rq", arg: 1, scope: !15729, file: !2438, line: 1276, type: !15732)
!15739 = !DILocation(line: 0, scope: !15729)
!15740 = !DILocation(line: 1289, column: 22, scope: !15729)
!15741 = !DILocation(line: 1289, column: 2, scope: !15729)
!15742 = !DILocation(line: 1291, column: 1, scope: !15729)
!15743 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !15744, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15746)
!15744 = !DISubroutineType(types: !15745)
!15745 = !{null, !14249}
!15746 = !{!15747}
!15747 = !DILocalVariable(name: "list", arg: 1, scope: !15743, file: !235, line: 197, type: !14249)
!15748 = !DILocation(line: 0, scope: !15743)
!15749 = !DILocation(line: 199, column: 8, scope: !15743)
!15750 = !DILocation(line: 199, column: 13, scope: !15743)
!15751 = !DILocation(line: 200, column: 8, scope: !15743)
!15752 = !DILocation(line: 200, column: 13, scope: !15743)
!15753 = !DILocation(line: 201, column: 1, scope: !15743)
!15754 = distinct !DISubprogram(name: "z_sched_init", scope: !2438, file: !2438, line: 1293, type: !365, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !2149)
!15755 = !DILocation(line: 1302, column: 2, scope: !15754)
!15756 = !DILocation(line: 1306, column: 2, scope: !15754)
!15757 = !DILocation(line: 1309, column: 1, scope: !15754)
!15758 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2438, file: !2438, line: 1311, type: !15759, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15762)
!15759 = !DISubroutineType(types: !15760)
!15760 = !{!118, !15761}
!15761 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !2331)
!15762 = !{!15763}
!15763 = !DILocalVariable(name: "thread", arg: 1, scope: !15758, file: !2438, line: 1311, type: !15761)
!15764 = !DILocation(line: 0, scope: !15758)
!15765 = !DILocation(line: 1313, column: 22, scope: !15758)
!15766 = !DILocation(line: 1313, column: 9, scope: !15758)
!15767 = !DILocation(line: 1313, column: 2, scope: !15758)
!15768 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2438, file: !2438, line: 1325, type: !15769, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15771)
!15769 = !DISubroutineType(types: !15770)
!15770 = !{null, !15761, !118}
!15771 = !{!15772, !15773, !15774}
!15772 = !DILocalVariable(name: "thread", arg: 1, scope: !15768, file: !2438, line: 1325, type: !15761)
!15773 = !DILocalVariable(name: "prio", arg: 2, scope: !15768, file: !2438, line: 1325, type: !118)
!15774 = !DILocalVariable(name: "th", scope: !15768, file: !2438, line: 1334, type: !2331)
!15775 = !DILocation(line: 0, scope: !15768)
!15776 = !DILocation(line: 1331, column: 2, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15778, file: !2438, line: 1331, column: 2)
!15778 = distinct !DILexicalBlock(scope: !15779, file: !2438, line: 1331, column: 2)
!15779 = distinct !DILexicalBlock(scope: !15768, file: !2438, line: 1331, column: 2)
!15780 = !DILocation(line: 1331, column: 2, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15777, file: !2438, line: 1331, column: 2)
!15782 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !15783)
!15783 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 1332, column: 2, scope: !15785)
!15785 = distinct !DILexicalBlock(scope: !15786, file: !2438, line: 1332, column: 2)
!15786 = distinct !DILexicalBlock(scope: !15768, file: !2438, line: 1332, column: 2)
!15787 = !DILocation(line: 0, scope: !14750, inlinedAt: !15783)
!15788 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !15784)
!15789 = !DILocation(line: 1332, column: 2, scope: !15786)
!15790 = !DILocation(line: 1332, column: 2, scope: !15791)
!15791 = distinct !DILexicalBlock(scope: !15785, file: !2438, line: 1332, column: 2)
!15792 = !DILocation(line: 1336, column: 2, scope: !15768)
!15793 = !DILocation(line: 1337, column: 1, scope: !15768)
!15794 = distinct !DISubprogram(name: "k_can_yield", scope: !2438, file: !2438, line: 1384, type: !7192, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !2149)
!15795 = !DILocation(line: 1386, column: 11, scope: !15794)
!15796 = !DILocation(line: 1386, column: 29, scope: !15794)
!15797 = !DILocation(line: 1386, column: 32, scope: !15794)
!15798 = !DILocation(line: 1386, column: 46, scope: !15794)
!15799 = !DILocation(line: 1387, column: 28, scope: !15794)
!15800 = !DILocation(line: 1387, column: 4, scope: !15794)
!15801 = !DILocation(line: 1386, column: 2, scope: !15794)
!15802 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !220, file: !220, line: 989, type: !7192, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !2149)
!15803 = !DILocation(line: 993, column: 10, scope: !15802)
!15804 = !DILocation(line: 993, column: 2, scope: !15802)
!15805 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2438, file: !2438, line: 1390, type: !365, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15806)
!15806 = !{!15807}
!15807 = !DILocalVariable(name: "key", scope: !15805, file: !2438, line: 1396, type: !14015)
!15808 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !15809)
!15809 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !15810)
!15810 = distinct !DILocation(line: 1392, column: 2, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15812, file: !2438, line: 1392, column: 2)
!15812 = distinct !DILexicalBlock(scope: !15805, file: !2438, line: 1392, column: 2)
!15813 = !DILocation(line: 0, scope: !14750, inlinedAt: !15809)
!15814 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !15810)
!15815 = !DILocation(line: 1392, column: 2, scope: !15812)
!15816 = !DILocation(line: 1392, column: 2, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15811, file: !2438, line: 1392, column: 2)
!15818 = !DILocation(line: 0, scope: !14023, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 1396, column: 25, scope: !15805)
!15820 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15821)
!15821 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15819)
!15822 = !DILocation(line: 0, scope: !14032, inlinedAt: !15821)
!15823 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15819)
!15824 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15819)
!15825 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15819)
!15826 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15819)
!15827 = !DILocation(line: 0, scope: !15805)
!15828 = !DILocation(line: 1400, column: 18, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15830, file: !2438, line: 1399, column: 36)
!15830 = distinct !DILexicalBlock(scope: !15805, file: !2438, line: 1398, column: 6)
!15831 = !DILocation(line: 0, scope: !14215, inlinedAt: !15832)
!15832 = distinct !DILocation(line: 1400, column: 3, scope: !15829)
!15833 = !DILocation(line: 266, column: 15, scope: !14215, inlinedAt: !15832)
!15834 = !DILocation(line: 266, column: 28, scope: !14215, inlinedAt: !15832)
!15835 = !DILocation(line: 0, scope: !14223, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 268, column: 3, scope: !14227, inlinedAt: !15832)
!15837 = !DILocation(line: 234, column: 2, scope: !14223, inlinedAt: !15836)
!15838 = !DILocation(line: 1402, column: 15, scope: !15805)
!15839 = !DILocation(line: 0, scope: !14232, inlinedAt: !15840)
!15840 = distinct !DILocation(line: 1402, column: 2, scope: !15805)
!15841 = !DILocation(line: 252, column: 15, scope: !14232, inlinedAt: !15840)
!15842 = !DILocation(line: 252, column: 28, scope: !14232, inlinedAt: !15840)
!15843 = !DILocation(line: 0, scope: !14239, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 254, column: 3, scope: !14243, inlinedAt: !15840)
!15845 = !DILocation(line: 0, scope: !14246, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 229, column: 2, scope: !14239, inlinedAt: !15844)
!15847 = !DILocation(line: 186, column: 2, scope: !14256, inlinedAt: !15846)
!15848 = !DILocation(line: 186, column: 2, scope: !14257, inlinedAt: !15846)
!15849 = !DILocation(line: 186, column: 2, scope: !14260, inlinedAt: !15846)
!15850 = !DILocation(line: 188, column: 2, scope: !14262, inlinedAt: !15846)
!15851 = !DILocation(line: 188, column: 2, scope: !14264, inlinedAt: !15846)
!15852 = !DILocation(line: 0, scope: !14262, inlinedAt: !15846)
!15853 = !DILocation(line: 189, column: 7, scope: !14267, inlinedAt: !15846)
!15854 = !DILocation(line: 189, column: 35, scope: !14267, inlinedAt: !15846)
!15855 = !DILocation(line: 189, column: 7, scope: !14268, inlinedAt: !15846)
!15856 = !DILocation(line: 191, column: 21, scope: !14272, inlinedAt: !15846)
!15857 = !DILocation(line: 190, column: 4, scope: !14272, inlinedAt: !15846)
!15858 = !DILocation(line: 192, column: 4, scope: !14272, inlinedAt: !15846)
!15859 = distinct !{!15859, !15850, !15860}
!15860 = !DILocation(line: 194, column: 2, scope: !14262, inlinedAt: !15846)
!15861 = !DILocation(line: 196, column: 37, scope: !14246, inlinedAt: !15846)
!15862 = !DILocation(line: 196, column: 2, scope: !14246, inlinedAt: !15846)
!15863 = !DILocation(line: 197, column: 1, scope: !14246, inlinedAt: !15846)
!15864 = !DILocation(line: 1403, column: 2, scope: !15805)
!15865 = !DILocation(line: 0, scope: !14701, inlinedAt: !15866)
!15866 = distinct !DILocation(line: 1404, column: 2, scope: !15805)
!15867 = !DILocation(line: 0, scope: !14710, inlinedAt: !15868)
!15868 = distinct !DILocation(line: 195, column: 2, scope: !14701, inlinedAt: !15866)
!15869 = !DILocation(line: 225, column: 2, scope: !14717, inlinedAt: !15868)
!15870 = !DILocation(line: 225, column: 2, scope: !14718, inlinedAt: !15868)
!15871 = !DILocation(line: 225, column: 2, scope: !14721, inlinedAt: !15868)
!15872 = !DILocation(line: 196, column: 9, scope: !14701, inlinedAt: !15866)
!15873 = !DILocation(line: 1405, column: 1, scope: !15805)
!15874 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2438, file: !2438, line: 1459, type: !15875, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15877)
!15875 = !DISubroutineType(types: !15876)
!15876 = !{!362, !14911}
!15877 = !{!15878, !15879, !15880}
!15878 = !DILocalVariable(name: "timeout", arg: 1, scope: !15874, file: !2438, line: 1459, type: !14911)
!15879 = !DILocalVariable(name: "ticks", scope: !15874, file: !2438, line: 1461, type: !113)
!15880 = !DILocalVariable(name: "ret", scope: !15874, file: !2438, line: 1480, type: !362)
!15881 = !DILocation(line: 0, scope: !15874)
!15882 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !15883)
!15883 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !15884)
!15884 = distinct !DILocation(line: 1463, column: 2, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15886, file: !2438, line: 1463, column: 2)
!15886 = distinct !DILexicalBlock(scope: !15874, file: !2438, line: 1463, column: 2)
!15887 = !DILocation(line: 0, scope: !14750, inlinedAt: !15883)
!15888 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !15884)
!15889 = !DILocation(line: 1463, column: 2, scope: !15886)
!15890 = !DILocation(line: 1463, column: 2, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15885, file: !2438, line: 1463, column: 2)
!15892 = !DILocation(line: 1468, column: 6, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15874, file: !2438, line: 1468, column: 6)
!15894 = !DILocation(line: 1468, column: 6, scope: !15874)
!15895 = !DILocation(line: 1469, column: 20, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15893, file: !2438, line: 1468, column: 40)
!15897 = !DILocation(line: 1469, column: 3, scope: !15896)
!15898 = !DILocation(line: 1473, column: 3, scope: !15896)
!15899 = !DILocation(line: 1478, column: 10, scope: !15874)
!15900 = !DILocation(line: 1480, column: 16, scope: !15874)
!15901 = !DILocation(line: 1485, column: 1, scope: !15874)
!15902 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3496, file: !3496, line: 310, type: !15903, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15905)
!15903 = !DISubroutineType(types: !15904)
!15904 = !{null, !15761}
!15905 = !{!15906}
!15906 = !DILocalVariable(name: "thread", arg: 1, scope: !15902, file: !3496, line: 310, type: !15761)
!15907 = !DILocation(line: 0, scope: !15902)
!15908 = !DILocation(line: 319, column: 2, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15902, file: !3496, line: 319, column: 2)
!15910 = !{i64 2154200223}
!15911 = !DILocation(line: 320, column: 2, scope: !15902)
!15912 = !DILocation(line: 321, column: 1, scope: !15902)
!15913 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2438, file: !2438, line: 1415, type: !15914, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15916)
!15914 = !DISubroutineType(types: !15915)
!15915 = !{!362, !113}
!15916 = !{!15917, !15918, !15919, !15920}
!15917 = !DILocalVariable(name: "ticks", arg: 1, scope: !15913, file: !2438, line: 1415, type: !113)
!15918 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15913, file: !2438, line: 1418, type: !156)
!15919 = !DILocalVariable(name: "timeout", scope: !15913, file: !2438, line: 1430, type: !14911)
!15920 = !DILocalVariable(name: "key", scope: !15913, file: !2438, line: 1437, type: !14015)
!15921 = !DILocation(line: 0, scope: !15913)
!15922 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 1420, column: 2, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !2438, line: 1420, column: 2)
!15926 = distinct !DILexicalBlock(scope: !15913, file: !2438, line: 1420, column: 2)
!15927 = !DILocation(line: 0, scope: !14750, inlinedAt: !15923)
!15928 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !15924)
!15929 = !DILocation(line: 1420, column: 2, scope: !15926)
!15930 = !DILocation(line: 1420, column: 2, scope: !15931)
!15931 = distinct !DILexicalBlock(scope: !15925, file: !2438, line: 1420, column: 2)
!15932 = !DILocation(line: 1425, column: 12, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15913, file: !2438, line: 1425, column: 6)
!15934 = !DILocation(line: 1425, column: 6, scope: !15913)
!15935 = !DILocation(line: 1426, column: 3, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15933, file: !2438, line: 1425, column: 18)
!15937 = !DILocation(line: 1427, column: 3, scope: !15936)
!15938 = !DILocation(line: 1431, column: 24, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15913, file: !2438, line: 1431, column: 6)
!15940 = !DILocation(line: 1431, column: 6, scope: !15913)
!15941 = !DILocation(line: 1432, column: 35, scope: !15942)
!15942 = distinct !DILexicalBlock(scope: !15939, file: !2438, line: 1431, column: 30)
!15943 = !DILocation(line: 1432, column: 27, scope: !15942)
!15944 = !DILocation(line: 1433, column: 2, scope: !15942)
!15945 = !DILocation(line: 1434, column: 27, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15939, file: !2438, line: 1433, column: 9)
!15947 = !DILocation(line: 0, scope: !15939)
!15948 = !DILocation(line: 0, scope: !14023, inlinedAt: !15949)
!15949 = distinct !DILocation(line: 1437, column: 25, scope: !15913)
!15950 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !15951)
!15951 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !15949)
!15952 = !DILocation(line: 0, scope: !14032, inlinedAt: !15951)
!15953 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15949)
!15954 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15949)
!15955 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !15949)
!15956 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !15949)
!15957 = !DILocation(line: 1440, column: 20, scope: !15913)
!15958 = !DILocation(line: 1440, column: 18, scope: !15913)
!15959 = !DILocation(line: 1442, column: 2, scope: !15913)
!15960 = !DILocation(line: 1443, column: 23, scope: !15913)
!15961 = !DILocation(line: 1443, column: 2, scope: !15913)
!15962 = !DILocation(line: 1444, column: 29, scope: !15913)
!15963 = !DILocation(line: 1444, column: 2, scope: !15913)
!15964 = !DILocation(line: 0, scope: !14701, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 1446, column: 8, scope: !15913)
!15966 = !DILocation(line: 0, scope: !14710, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 195, column: 2, scope: !14701, inlinedAt: !15965)
!15968 = !DILocation(line: 225, column: 2, scope: !14717, inlinedAt: !15967)
!15969 = !DILocation(line: 225, column: 2, scope: !14718, inlinedAt: !15967)
!15970 = !DILocation(line: 225, column: 2, scope: !14721, inlinedAt: !15967)
!15971 = !DILocation(line: 196, column: 9, scope: !14701, inlinedAt: !15965)
!15972 = !DILocation(line: 1448, column: 2, scope: !15973)
!15973 = distinct !DILexicalBlock(scope: !15974, file: !2438, line: 1448, column: 2)
!15974 = distinct !DILexicalBlock(scope: !15913, file: !2438, line: 1448, column: 2)
!15975 = !DILocation(line: 1448, column: 2, scope: !15974)
!15976 = !DILocation(line: 1448, column: 2, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15973, file: !2438, line: 1448, column: 2)
!15978 = !DILocation(line: 1450, column: 10, scope: !15913)
!15979 = !DILocation(line: 1450, column: 45, scope: !15913)
!15980 = !DILocation(line: 1450, column: 43, scope: !15913)
!15981 = !DILocation(line: 1451, column: 6, scope: !15913)
!15982 = !DILocation(line: 1457, column: 1, scope: !15913)
!15983 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3463, file: !3463, line: 1103, type: !3464, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !15984)
!15984 = !{!15985}
!15985 = !DILocalVariable(name: "t", arg: 1, scope: !15983, file: !3463, line: 1103, type: !213)
!15986 = !DILocation(line: 0, scope: !15983)
!15987 = !DILocation(line: 0, scope: !14083, inlinedAt: !15988)
!15988 = distinct !DILocation(line: 1106, column: 9, scope: !15983)
!15989 = !DILocation(line: 139, column: 13, scope: !15990, inlinedAt: !15988)
!15990 = distinct !DILexicalBlock(scope: !15991, file: !3463, line: 138, column: 10)
!15991 = distinct !DILexicalBlock(scope: !15992, file: !3463, line: 136, column: 7)
!15992 = distinct !DILexicalBlock(scope: !14104, file: !3463, line: 134, column: 17)
!15993 = !DILocation(line: 1106, column: 2, scope: !15983)
!15994 = distinct !DISubprogram(name: "k_yield", scope: !3496, file: !3496, line: 140, type: !365, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !2149)
!15995 = !DILocation(line: 148, column: 2, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15994, file: !3496, line: 148, column: 2)
!15997 = !{i64 2154199543}
!15998 = !DILocation(line: 149, column: 2, scope: !15994)
!15999 = !DILocation(line: 150, column: 1, scope: !15994)
!16000 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2438, file: !2438, line: 1495, type: !16001, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16003)
!16001 = !DISubroutineType(types: !16002)
!16002 = !{!362, !118}
!16003 = !{!16004, !16005}
!16004 = !DILocalVariable(name: "us", arg: 1, scope: !16000, file: !2438, line: 1495, type: !118)
!16005 = !DILocalVariable(name: "ticks", scope: !16000, file: !2438, line: 1497, type: !362)
!16006 = !DILocation(line: 0, scope: !16000)
!16007 = !DILocation(line: 1501, column: 31, scope: !16000)
!16008 = !DILocation(line: 1501, column: 10, scope: !16000)
!16009 = !DILocation(line: 1502, column: 23, scope: !16000)
!16010 = !DILocation(line: 1502, column: 10, scope: !16000)
!16011 = !DILocation(line: 1506, column: 31, scope: !16000)
!16012 = !DILocation(line: 1506, column: 9, scope: !16000)
!16013 = !DILocation(line: 1506, column: 2, scope: !16000)
!16014 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3463, file: !3463, line: 571, type: !3464, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16015)
!16015 = !{!16016}
!16016 = !DILocalVariable(name: "t", arg: 1, scope: !16014, file: !3463, line: 571, type: !213)
!16017 = !DILocation(line: 0, scope: !16014)
!16018 = !DILocation(line: 0, scope: !14083, inlinedAt: !16019)
!16019 = distinct !DILocation(line: 574, column: 9, scope: !16014)
!16020 = !DILocation(line: 135, column: 5, scope: !15992, inlinedAt: !16019)
!16021 = !DILocation(line: 139, column: 13, scope: !15990, inlinedAt: !16019)
!16022 = !DILocation(line: 574, column: 2, scope: !16014)
!16023 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3463, file: !3463, line: 1187, type: !3464, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16024)
!16024 = !{!16025}
!16025 = !DILocalVariable(name: "t", arg: 1, scope: !16023, file: !3463, line: 1187, type: !213)
!16026 = !DILocation(line: 0, scope: !16023)
!16027 = !DILocation(line: 0, scope: !14083, inlinedAt: !16028)
!16028 = distinct !DILocation(line: 1190, column: 9, scope: !16023)
!16029 = !DILocation(line: 145, column: 13, scope: !16030, inlinedAt: !16028)
!16030 = distinct !DILexicalBlock(scope: !14101, file: !3463, line: 144, column: 10)
!16031 = !DILocation(line: 1190, column: 2, scope: !16023)
!16032 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2438, file: !2438, line: 1517, type: !15903, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16033)
!16033 = !{!16034}
!16034 = !DILocalVariable(name: "thread", arg: 1, scope: !16032, file: !2438, line: 1517, type: !15761)
!16035 = !DILocation(line: 0, scope: !16032)
!16036 = !DILocation(line: 1521, column: 6, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16032, file: !2438, line: 1521, column: 6)
!16038 = !DILocation(line: 1521, column: 6, scope: !16032)
!16039 = !DILocation(line: 1525, column: 6, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16032, file: !2438, line: 1525, column: 6)
!16041 = !DILocation(line: 1525, column: 37, scope: !16040)
!16042 = !DILocation(line: 1525, column: 6, scope: !16032)
!16043 = !DILocation(line: 1527, column: 20, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16045, file: !2438, line: 1527, column: 7)
!16045 = distinct !DILexicalBlock(scope: !16040, file: !2438, line: 1525, column: 42)
!16046 = !DILocation(line: 1527, column: 33, scope: !16044)
!16047 = !DILocation(line: 1527, column: 7, scope: !16045)
!16048 = !DILocation(line: 1532, column: 2, scope: !16032)
!16049 = !DILocation(line: 1533, column: 2, scope: !16032)
!16050 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !16051)
!16051 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 1537, column: 7, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16032, file: !2438, line: 1537, column: 6)
!16054 = !DILocation(line: 0, scope: !14750, inlinedAt: !16051)
!16055 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !16052)
!16056 = !DILocation(line: 1537, column: 6, scope: !16032)
!16057 = !DILocation(line: 1538, column: 3, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !16053, file: !2438, line: 1537, column: 25)
!16059 = !DILocation(line: 1539, column: 2, scope: !16058)
!16060 = !DILocation(line: 1540, column: 1, scope: !16032)
!16061 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12401, file: !12401, line: 101, type: !14164, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16062)
!16062 = !{!16063}
!16063 = !DILocalVariable(name: "thread", arg: 1, scope: !16061, file: !12401, line: 101, type: !2331)
!16064 = !DILocation(line: 0, scope: !16061)
!16065 = !DILocation(line: 103, column: 23, scope: !16061)
!16066 = !DILocation(line: 103, column: 36, scope: !16061)
!16067 = !DILocation(line: 103, column: 55, scope: !16061)
!16068 = !DILocation(line: 103, column: 2, scope: !16061)
!16069 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2438, file: !2438, line: 1567, type: !16070, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16072)
!16070 = !DISubroutineType(types: !16071)
!16071 = !{!15761}
!16072 = !{!16073}
!16073 = !DILocalVariable(name: "ret", scope: !16069, file: !2438, line: 1577, type: !15761)
!16074 = !DILocation(line: 1577, column: 30, scope: !16069)
!16075 = !DILocation(line: 0, scope: !16069)
!16076 = !DILocation(line: 1582, column: 2, scope: !16069)
!16077 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2438, file: !2438, line: 1593, type: !7480, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !2149)
!16078 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !16079)
!16079 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !16080)
!16080 = distinct !DILocation(line: 1595, column: 10, scope: !16077)
!16081 = !DILocation(line: 0, scope: !14750, inlinedAt: !16079)
!16082 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !16080)
!16083 = !DILocation(line: 1595, column: 27, scope: !16077)
!16084 = !DILocation(line: 1595, column: 41, scope: !16077)
!16085 = !DILocation(line: 1595, column: 30, scope: !16077)
!16086 = !DILocation(line: 1595, column: 2, scope: !16077)
!16087 = distinct !DISubprogram(name: "z_thread_abort", scope: !2438, file: !2438, line: 1725, type: !13981, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16088)
!16088 = !{!16089, !16090}
!16089 = !DILocalVariable(name: "thread", arg: 1, scope: !16087, file: !2438, line: 1725, type: !2331)
!16090 = !DILocalVariable(name: "key", scope: !16087, file: !2438, line: 1727, type: !14015)
!16091 = !DILocation(line: 0, scope: !16087)
!16092 = !DILocation(line: 0, scope: !14023, inlinedAt: !16093)
!16093 = distinct !DILocation(line: 1727, column: 25, scope: !16087)
!16094 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !16095)
!16095 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !16093)
!16096 = !DILocation(line: 0, scope: !14032, inlinedAt: !16095)
!16097 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !16093)
!16098 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !16093)
!16099 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !16093)
!16100 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !16093)
!16101 = !DILocation(line: 1729, column: 20, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16087, file: !2438, line: 1729, column: 6)
!16103 = !DILocation(line: 1729, column: 33, scope: !16102)
!16104 = !DILocation(line: 1729, column: 48, scope: !16102)
!16105 = !DILocation(line: 1729, column: 6, scope: !16087)
!16106 = !DILocation(line: 0, scope: !14057, inlinedAt: !16107)
!16107 = distinct !DILocation(line: 1730, column: 3, scope: !16108)
!16108 = distinct !DILexicalBlock(scope: !16102, file: !2438, line: 1729, column: 54)
!16109 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !16107)
!16110 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !16107)
!16111 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !16107)
!16112 = !DILocation(line: 0, scope: !14071, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !16107)
!16114 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !16113)
!16115 = !DILocation(line: 1731, column: 3, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16117, file: !2438, line: 1731, column: 3)
!16117 = distinct !DILexicalBlock(scope: !16118, file: !2438, line: 1731, column: 3)
!16118 = distinct !DILexicalBlock(scope: !16108, file: !2438, line: 1731, column: 3)
!16119 = !DILocation(line: 1736, column: 20, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !16087, file: !2438, line: 1736, column: 6)
!16121 = !DILocation(line: 1736, column: 33, scope: !16120)
!16122 = !DILocation(line: 1736, column: 49, scope: !16120)
!16123 = !DILocation(line: 1736, column: 6, scope: !16087)
!16124 = !DILocation(line: 0, scope: !14057, inlinedAt: !16125)
!16125 = distinct !DILocation(line: 1737, column: 3, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16120, file: !2438, line: 1736, column: 56)
!16127 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !16125)
!16128 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !16125)
!16129 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !16125)
!16130 = !DILocation(line: 0, scope: !14071, inlinedAt: !16131)
!16131 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !16125)
!16132 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !16131)
!16133 = !DILocation(line: 1738, column: 3, scope: !16126)
!16134 = !DILocation(line: 1775, column: 2, scope: !16087)
!16135 = !DILocation(line: 1776, column: 16, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16087, file: !2438, line: 1776, column: 6)
!16137 = !DILocation(line: 1776, column: 13, scope: !16136)
!16138 = !DILocation(line: 1776, column: 25, scope: !16136)
!16139 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !16140)
!16140 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 1776, column: 29, scope: !16136)
!16142 = !DILocation(line: 0, scope: !14750, inlinedAt: !16140)
!16143 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !16141)
!16144 = !DILocation(line: 1776, column: 6, scope: !16087)
!16145 = !DILocation(line: 0, scope: !14701, inlinedAt: !16146)
!16146 = distinct !DILocation(line: 1777, column: 3, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16136, file: !2438, line: 1776, column: 47)
!16148 = !DILocation(line: 0, scope: !14710, inlinedAt: !16149)
!16149 = distinct !DILocation(line: 195, column: 2, scope: !14701, inlinedAt: !16146)
!16150 = !DILocation(line: 225, column: 2, scope: !14717, inlinedAt: !16149)
!16151 = !DILocation(line: 225, column: 2, scope: !14718, inlinedAt: !16149)
!16152 = !DILocation(line: 225, column: 2, scope: !14721, inlinedAt: !16149)
!16153 = !DILocation(line: 196, column: 9, scope: !14701, inlinedAt: !16146)
!16154 = !DILocation(line: 1778, column: 3, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16156, file: !2438, line: 1778, column: 3)
!16156 = distinct !DILexicalBlock(scope: !16157, file: !2438, line: 1778, column: 3)
!16157 = distinct !DILexicalBlock(scope: !16147, file: !2438, line: 1778, column: 3)
!16158 = !DILocation(line: 0, scope: !14057, inlinedAt: !16159)
!16159 = distinct !DILocation(line: 1780, column: 2, scope: !16087)
!16160 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !16159)
!16161 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !16159)
!16162 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !16159)
!16163 = !DILocation(line: 0, scope: !14071, inlinedAt: !16164)
!16164 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !16159)
!16165 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !16164)
!16166 = !DILocation(line: 1781, column: 1, scope: !16087)
!16167 = distinct !DISubprogram(name: "end_thread", scope: !2438, file: !2438, line: 1690, type: !13981, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16168)
!16168 = !{!16169}
!16169 = !DILocalVariable(name: "thread", arg: 1, scope: !16167, file: !2438, line: 1690, type: !2331)
!16170 = !DILocation(line: 0, scope: !16167)
!16171 = !DILocation(line: 1695, column: 20, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16167, file: !2438, line: 1695, column: 6)
!16173 = !DILocation(line: 1695, column: 33, scope: !16172)
!16174 = !DILocation(line: 1695, column: 49, scope: !16172)
!16175 = !DILocation(line: 1695, column: 6, scope: !16167)
!16176 = !DILocation(line: 1697, column: 29, scope: !16177)
!16177 = distinct !DILexicalBlock(scope: !16172, file: !2438, line: 1695, column: 56)
!16178 = !DILocation(line: 1698, column: 7, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16177, file: !2438, line: 1698, column: 7)
!16180 = !DILocation(line: 1698, column: 7, scope: !16177)
!16181 = !DILocation(line: 0, scope: !14215, inlinedAt: !16182)
!16182 = distinct !DILocation(line: 1699, column: 4, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !16179, file: !2438, line: 1698, column: 35)
!16184 = !DILocation(line: 266, column: 28, scope: !14215, inlinedAt: !16182)
!16185 = !DILocation(line: 0, scope: !14223, inlinedAt: !16186)
!16186 = distinct !DILocation(line: 268, column: 3, scope: !14227, inlinedAt: !16182)
!16187 = !DILocation(line: 234, column: 2, scope: !14223, inlinedAt: !16186)
!16188 = !DILocation(line: 1700, column: 3, scope: !16183)
!16189 = !DILocation(line: 1701, column: 20, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16177, file: !2438, line: 1701, column: 7)
!16191 = !DILocation(line: 1701, column: 30, scope: !16190)
!16192 = !DILocation(line: 1701, column: 7, scope: !16177)
!16193 = !DILocation(line: 1702, column: 4, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16190, file: !2438, line: 1701, column: 39)
!16195 = !DILocation(line: 1703, column: 3, scope: !16194)
!16196 = !DILocation(line: 1704, column: 9, scope: !16177)
!16197 = !DILocation(line: 1705, column: 23, scope: !16177)
!16198 = !DILocation(line: 1705, column: 3, scope: !16177)
!16199 = !DILocation(line: 1706, column: 3, scope: !16177)
!16200 = !DILocation(line: 1722, column: 2, scope: !16177)
!16201 = !DILocation(line: 1723, column: 1, scope: !16167)
!16202 = distinct !DISubprogram(name: "unpend_all", scope: !2438, file: !2438, line: 1674, type: !16203, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16205)
!16203 = !DISubroutineType(types: !16204)
!16204 = !{null, !2362}
!16205 = !{!16206, !16207}
!16206 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16202, file: !2438, line: 1674, type: !2362)
!16207 = !DILocalVariable(name: "thread", scope: !16202, file: !2438, line: 1676, type: !2331)
!16208 = !DILocation(line: 0, scope: !16202)
!16209 = !DILocation(line: 1678, column: 19, scope: !16202)
!16210 = !DILocation(line: 1678, column: 41, scope: !16202)
!16211 = !DILocation(line: 1678, column: 2, scope: !16202)
!16212 = !DILocation(line: 1679, column: 3, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16202, file: !2438, line: 1678, column: 50)
!16214 = !DILocation(line: 1680, column: 9, scope: !16213)
!16215 = !DILocalVariable(name: "thread", arg: 1, scope: !16216, file: !12421, line: 65, type: !2331)
!16216 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12421, file: !12421, line: 65, type: !16217, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16219)
!16217 = !DISubroutineType(types: !16218)
!16218 = !{null, !2331, !32}
!16219 = !{!16215, !16220}
!16220 = !DILocalVariable(name: "value", arg: 2, scope: !16216, file: !12421, line: 65, type: !32)
!16221 = !DILocation(line: 0, scope: !16216, inlinedAt: !16222)
!16222 = distinct !DILocation(line: 1681, column: 3, scope: !16213)
!16223 = !DILocation(line: 67, column: 15, scope: !16216, inlinedAt: !16222)
!16224 = !DILocation(line: 67, column: 33, scope: !16216, inlinedAt: !16222)
!16225 = !DILocation(line: 1682, column: 3, scope: !16213)
!16226 = distinct !{!16226, !16211, !16227}
!16227 = !DILocation(line: 1683, column: 2, scope: !16202)
!16228 = !DILocation(line: 1684, column: 1, scope: !16202)
!16229 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2438, file: !2438, line: 1794, type: !16230, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16232)
!16230 = !DISubroutineType(types: !16231)
!16231 = !{!118, !2331, !14911}
!16232 = !{!16233, !16234, !16235, !16236}
!16233 = !DILocalVariable(name: "thread", arg: 1, scope: !16229, file: !2438, line: 1794, type: !2331)
!16234 = !DILocalVariable(name: "timeout", arg: 2, scope: !16229, file: !2438, line: 1794, type: !14911)
!16235 = !DILocalVariable(name: "key", scope: !16229, file: !2438, line: 1796, type: !14015)
!16236 = !DILocalVariable(name: "ret", scope: !16229, file: !2438, line: 1797, type: !118)
!16237 = !DILocation(line: 0, scope: !16229)
!16238 = !DILocation(line: 0, scope: !14023, inlinedAt: !16239)
!16239 = distinct !DILocation(line: 1796, column: 25, scope: !16229)
!16240 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !16241)
!16241 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !16239)
!16242 = !DILocation(line: 0, scope: !14032, inlinedAt: !16241)
!16243 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !16239)
!16244 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !16239)
!16245 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !16239)
!16246 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !16239)
!16247 = !DILocation(line: 1801, column: 20, scope: !16248)
!16248 = distinct !DILexicalBlock(scope: !16229, file: !2438, line: 1801, column: 6)
!16249 = !DILocation(line: 1801, column: 33, scope: !16248)
!16250 = !DILocation(line: 1801, column: 49, scope: !16248)
!16251 = !DILocation(line: 1801, column: 6, scope: !16229)
!16252 = !DILocation(line: 1803, column: 13, scope: !16253)
!16253 = distinct !DILexicalBlock(scope: !16248, file: !2438, line: 1803, column: 13)
!16254 = !DILocation(line: 1803, column: 13, scope: !16248)
!16255 = !DILocation(line: 1805, column: 24, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16253, file: !2438, line: 1805, column: 13)
!16257 = !DILocation(line: 1805, column: 21, scope: !16256)
!16258 = !DILocation(line: 1805, column: 34, scope: !16256)
!16259 = !DILocation(line: 1806, column: 20, scope: !16256)
!16260 = !DILocation(line: 1806, column: 44, scope: !16256)
!16261 = !DILocation(line: 1806, column: 30, scope: !16256)
!16262 = !DILocation(line: 1805, column: 13, scope: !16253)
!16263 = !DILocation(line: 1031, column: 3, scope: !14750, inlinedAt: !16264)
!16264 = distinct !DILocation(line: 48, column: 10, scope: !14754, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 1809, column: 3, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16267, file: !2438, line: 1809, column: 3)
!16267 = distinct !DILexicalBlock(scope: !16268, file: !2438, line: 1809, column: 3)
!16268 = distinct !DILexicalBlock(scope: !16256, file: !2438, line: 1808, column: 9)
!16269 = !DILocation(line: 0, scope: !14750, inlinedAt: !16264)
!16270 = !DILocation(line: 48, column: 9, scope: !14754, inlinedAt: !16265)
!16271 = !DILocation(line: 1809, column: 3, scope: !16267)
!16272 = !DILocation(line: 1809, column: 3, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16266, file: !2438, line: 1809, column: 3)
!16274 = !DILocation(line: 1810, column: 23, scope: !16268)
!16275 = !DILocation(line: 1810, column: 42, scope: !16268)
!16276 = !DILocation(line: 1810, column: 3, scope: !16268)
!16277 = !DILocation(line: 1811, column: 22, scope: !16268)
!16278 = !DILocation(line: 1811, column: 3, scope: !16268)
!16279 = !DILocation(line: 0, scope: !14701, inlinedAt: !16280)
!16280 = distinct !DILocation(line: 1814, column: 9, scope: !16268)
!16281 = !DILocation(line: 0, scope: !14710, inlinedAt: !16282)
!16282 = distinct !DILocation(line: 195, column: 2, scope: !14701, inlinedAt: !16280)
!16283 = !DILocation(line: 225, column: 2, scope: !14717, inlinedAt: !16282)
!16284 = !DILocation(line: 225, column: 2, scope: !14718, inlinedAt: !16282)
!16285 = !DILocation(line: 225, column: 2, scope: !14721, inlinedAt: !16282)
!16286 = !DILocation(line: 196, column: 9, scope: !14701, inlinedAt: !16280)
!16287 = !DILocation(line: 1817, column: 3, scope: !16268)
!16288 = !DILocation(line: 0, scope: !16248)
!16289 = !DILocation(line: 0, scope: !14057, inlinedAt: !16290)
!16290 = distinct !DILocation(line: 1822, column: 2, scope: !16229)
!16291 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !16290)
!16292 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !16290)
!16293 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !16290)
!16294 = !DILocation(line: 0, scope: !14071, inlinedAt: !16295)
!16295 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !16290)
!16296 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !16295)
!16297 = !DILocation(line: 1823, column: 2, scope: !16229)
!16298 = !DILocation(line: 1824, column: 1, scope: !16229)
!16299 = distinct !DISubprogram(name: "z_sched_wake", scope: !2438, file: !2438, line: 1882, type: !16300, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16302)
!16300 = !DISubroutineType(types: !16301)
!16301 = !{!146, !2362, !118, !117}
!16302 = !{!16303, !16304, !16305, !16306, !16307, !16308, !16310}
!16303 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16299, file: !2438, line: 1882, type: !2362)
!16304 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16299, file: !2438, line: 1882, type: !118)
!16305 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16299, file: !2438, line: 1882, type: !117)
!16306 = !DILocalVariable(name: "thread", scope: !16299, file: !2438, line: 1884, type: !2331)
!16307 = !DILocalVariable(name: "ret", scope: !16299, file: !2438, line: 1885, type: !146)
!16308 = !DILocalVariable(name: "__i", scope: !16309, file: !2438, line: 1887, type: !14015)
!16309 = distinct !DILexicalBlock(scope: !16299, file: !2438, line: 1887, column: 2)
!16310 = !DILocalVariable(name: "__key", scope: !16309, file: !2438, line: 1887, type: !14015)
!16311 = !DILocation(line: 0, scope: !16299)
!16312 = !DILocation(line: 0, scope: !16309)
!16313 = !DILocation(line: 0, scope: !14023, inlinedAt: !16314)
!16314 = distinct !DILocation(line: 1887, column: 2, scope: !16309)
!16315 = !DILocation(line: 55, column: 2, scope: !14032, inlinedAt: !16316)
!16316 = distinct !DILocation(line: 145, column: 10, scope: !14023, inlinedAt: !16314)
!16317 = !DILocation(line: 0, scope: !14032, inlinedAt: !16316)
!16318 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !16314)
!16319 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !16314)
!16320 = !DILocation(line: 148, column: 2, scope: !14044, inlinedAt: !16314)
!16321 = !DILocation(line: 160, column: 2, scope: !14023, inlinedAt: !16314)
!16322 = !DILocation(line: 1888, column: 12, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16324, file: !2438, line: 1887, column: 26)
!16324 = distinct !DILexicalBlock(scope: !16309, file: !2438, line: 1887, column: 2)
!16325 = !DILocation(line: 1890, column: 14, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16323, file: !2438, line: 1890, column: 7)
!16327 = !DILocation(line: 1890, column: 7, scope: !16323)
!16328 = !DILocalVariable(name: "thread", arg: 1, scope: !16329, file: !13392, line: 134, type: !2331)
!16329 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13392, file: !13392, line: 134, type: !16330, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16332)
!16330 = !DISubroutineType(types: !16331)
!16331 = !{null, !2331, !32, !117}
!16332 = !{!16328, !16333, !16334}
!16333 = !DILocalVariable(name: "value", arg: 2, scope: !16329, file: !13392, line: 135, type: !32)
!16334 = !DILocalVariable(name: "data", arg: 3, scope: !16329, file: !13392, line: 136, type: !117)
!16335 = !DILocation(line: 0, scope: !16329, inlinedAt: !16336)
!16336 = distinct !DILocation(line: 1891, column: 4, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16326, file: !2438, line: 1890, column: 23)
!16338 = !DILocation(line: 0, scope: !16216, inlinedAt: !16339)
!16339 = distinct !DILocation(line: 138, column: 2, scope: !16329, inlinedAt: !16336)
!16340 = !DILocation(line: 67, column: 15, scope: !16216, inlinedAt: !16339)
!16341 = !DILocation(line: 67, column: 33, scope: !16216, inlinedAt: !16339)
!16342 = !DILocation(line: 139, column: 15, scope: !16329, inlinedAt: !16336)
!16343 = !DILocation(line: 139, column: 25, scope: !16329, inlinedAt: !16336)
!16344 = !DILocation(line: 1894, column: 4, scope: !16337)
!16345 = !DILocation(line: 1895, column: 10, scope: !16337)
!16346 = !DILocation(line: 1896, column: 4, scope: !16337)
!16347 = !DILocation(line: 1898, column: 3, scope: !16337)
!16348 = !DILocation(line: 0, scope: !14057, inlinedAt: !16349)
!16349 = distinct !DILocation(line: 1887, column: 2, scope: !16324)
!16350 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !16349)
!16351 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !16349)
!16352 = !DILocation(line: 194, column: 2, scope: !14069, inlinedAt: !16349)
!16353 = !DILocation(line: 0, scope: !14071, inlinedAt: !16354)
!16354 = distinct !DILocation(line: 215, column: 2, scope: !14057, inlinedAt: !16349)
!16355 = !DILocation(line: 95, column: 2, scope: !14071, inlinedAt: !16354)
!16356 = !DILocation(line: 1901, column: 2, scope: !16299)
!16357 = distinct !DISubprogram(name: "z_sched_wait", scope: !2438, file: !2438, line: 1904, type: !16358, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2328, retainedNodes: !16360)
!16358 = !DISubroutineType(types: !16359)
!16359 = !{!118, !14026, !14015, !2362, !14911, !3185}
!16360 = !{!16361, !16362, !16363, !16364, !16365, !16366}
!16361 = !DILocalVariable(name: "lock", arg: 1, scope: !16357, file: !2438, line: 1904, type: !14026)
!16362 = !DILocalVariable(name: "key", arg: 2, scope: !16357, file: !2438, line: 1904, type: !14015)
!16363 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16357, file: !2438, line: 1905, type: !2362)
!16364 = !DILocalVariable(name: "timeout", arg: 4, scope: !16357, file: !2438, line: 1905, type: !14911)
!16365 = !DILocalVariable(name: "data", arg: 5, scope: !16357, file: !2438, line: 1905, type: !3185)
!16366 = !DILocalVariable(name: "ret", scope: !16357, file: !2438, line: 1907, type: !118)
!16367 = !DILocation(line: 0, scope: !16357)
!16368 = !DILocation(line: 1907, column: 12, scope: !16357)
!16369 = !DILocation(line: 1909, column: 11, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !16357, file: !2438, line: 1909, column: 6)
!16371 = !DILocation(line: 1909, column: 6, scope: !16357)
!16372 = !DILocation(line: 1910, column: 11, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16370, file: !2438, line: 1909, column: 20)
!16374 = !DILocation(line: 1910, column: 26, scope: !16373)
!16375 = !DILocation(line: 1910, column: 9, scope: !16373)
!16376 = !DILocation(line: 1911, column: 2, scope: !16373)
!16377 = !DILocation(line: 1912, column: 2, scope: !16357)
!16378 = distinct !DISubprogram(name: "z_data_copy", scope: !16379, file: !16379, line: 22, type: !365, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3202, retainedNodes: !2149)
!16379 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16380 = !DILocation(line: 24, column: 2, scope: !16378)
!16381 = !DILocation(line: 27, column: 2, scope: !16378)
!16382 = !DILocation(line: 71, column: 1, scope: !16378)
!16383 = distinct !DISubprogram(name: "z_add_timeout", scope: !2475, file: !2475, line: 88, type: !16384, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16390)
!16384 = !DISubroutineType(types: !16385)
!16385 = !{null, !2448, !2467, !16386}
!16386 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !16387)
!16387 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !16388)
!16388 = !{!16389}
!16389 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16387, file: !114, line: 66, baseType: !113, size: 64)
!16390 = !{!16391, !16392, !16393, !16394, !16400, !16401, !16404, !16407}
!16391 = !DILocalVariable(name: "to", arg: 1, scope: !16383, file: !2475, line: 88, type: !2448)
!16392 = !DILocalVariable(name: "fn", arg: 2, scope: !16383, file: !2475, line: 88, type: !2467)
!16393 = !DILocalVariable(name: "timeout", arg: 3, scope: !16383, file: !2475, line: 89, type: !16386)
!16394 = !DILocalVariable(name: "__i", scope: !16395, file: !2475, line: 102, type: !16396)
!16395 = distinct !DILexicalBlock(scope: !16383, file: !2475, line: 102, column: 2)
!16396 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !16397)
!16397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !16398)
!16398 = !{!16399}
!16399 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16397, file: !334, line: 33, baseType: !118, size: 32)
!16400 = !DILocalVariable(name: "__key", scope: !16395, file: !2475, line: 102, type: !16396)
!16401 = !DILocalVariable(name: "t", scope: !16402, file: !2475, line: 103, type: !2448)
!16402 = distinct !DILexicalBlock(scope: !16403, file: !2475, line: 102, column: 24)
!16403 = distinct !DILexicalBlock(scope: !16395, file: !2475, line: 102, column: 2)
!16404 = !DILocalVariable(name: "ticks", scope: !16405, file: !2475, line: 107, type: !113)
!16405 = distinct !DILexicalBlock(scope: !16406, file: !2475, line: 106, column: 39)
!16406 = distinct !DILexicalBlock(scope: !16402, file: !2475, line: 105, column: 7)
!16407 = !DILocalVariable(name: "next_time", scope: !16408, file: !2475, line: 137, type: !362)
!16408 = distinct !DILexicalBlock(scope: !16409, file: !2475, line: 127, column: 22)
!16409 = distinct !DILexicalBlock(scope: !16402, file: !2475, line: 127, column: 7)
!16410 = !DILocation(line: 0, scope: !16383)
!16411 = !DILocation(line: 91, column: 6, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16383, file: !2475, line: 91, column: 6)
!16413 = !DILocation(line: 91, column: 6, scope: !16383)
!16414 = !DILocation(line: 99, column: 2, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16416, file: !2475, line: 99, column: 2)
!16416 = distinct !DILexicalBlock(scope: !16383, file: !2475, line: 99, column: 2)
!16417 = !DILocation(line: 99, column: 2, scope: !16416)
!16418 = !DILocation(line: 99, column: 2, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16415, file: !2475, line: 99, column: 2)
!16420 = !DILocation(line: 100, column: 6, scope: !16383)
!16421 = !DILocation(line: 100, column: 9, scope: !16383)
!16422 = !DILocation(line: 0, scope: !16395)
!16423 = !DILocalVariable(name: "l", arg: 1, scope: !16424, file: !334, line: 136, type: !16427)
!16424 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !16425, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16428)
!16425 = !DISubroutineType(types: !16426)
!16426 = !{!16396, !16427}
!16427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!16428 = !{!16423, !16429}
!16429 = !DILocalVariable(name: "k", scope: !16424, file: !334, line: 139, type: !16396)
!16430 = !DILocation(line: 0, scope: !16424, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 102, column: 2, scope: !16395)
!16432 = !DILocation(line: 55, column: 2, scope: !16433, inlinedAt: !16437)
!16433 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6191, file: !6191, line: 42, type: !6192, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16434)
!16434 = !{!16435, !16436}
!16435 = !DILocalVariable(name: "key", scope: !16433, file: !6191, line: 44, type: !32)
!16436 = !DILocalVariable(name: "tmp", scope: !16433, file: !6191, line: 53, type: !32)
!16437 = distinct !DILocation(line: 145, column: 10, scope: !16424, inlinedAt: !16431)
!16438 = !{i64 2044969}
!16439 = !DILocation(line: 0, scope: !16433, inlinedAt: !16437)
!16440 = !DILocation(line: 148, column: 2, scope: !16441, inlinedAt: !16431)
!16441 = distinct !DILexicalBlock(scope: !16442, file: !334, line: 148, column: 2)
!16442 = distinct !DILexicalBlock(scope: !16424, file: !334, line: 148, column: 2)
!16443 = !DILocation(line: 148, column: 2, scope: !16442, inlinedAt: !16431)
!16444 = !DILocation(line: 148, column: 2, scope: !16445, inlinedAt: !16431)
!16445 = distinct !DILexicalBlock(scope: !16441, file: !334, line: 148, column: 2)
!16446 = !DILocation(line: 160, column: 2, scope: !16424, inlinedAt: !16431)
!16447 = !DILocation(line: 106, column: 33, scope: !16406)
!16448 = !DILocation(line: 105, column: 7, scope: !16402)
!16449 = !DILocation(line: 107, column: 50, scope: !16405)
!16450 = !DILocation(line: 107, column: 48, scope: !16405)
!16451 = !DILocation(line: 0, scope: !16405)
!16452 = !DILocation(line: 109, column: 17, scope: !16405)
!16453 = !DILocation(line: 110, column: 3, scope: !16405)
!16454 = !DILocation(line: 111, column: 31, scope: !16455)
!16455 = distinct !DILexicalBlock(scope: !16406, file: !2475, line: 110, column: 10)
!16456 = !DILocation(line: 111, column: 37, scope: !16455)
!16457 = !DILocation(line: 111, column: 35, scope: !16455)
!16458 = !DILocation(line: 0, scope: !16406)
!16459 = !DILocation(line: 109, column: 8, scope: !16405)
!16460 = !DILocation(line: 109, column: 15, scope: !16405)
!16461 = !DILocation(line: 114, column: 12, scope: !16462)
!16462 = distinct !DILexicalBlock(scope: !16402, file: !2475, line: 114, column: 3)
!16463 = !DILocation(line: 0, scope: !16402)
!16464 = !DILocation(line: 114, column: 3, scope: !16462)
!16465 = !DILocation(line: 115, column: 24, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16467, file: !2475, line: 115, column: 8)
!16467 = distinct !DILexicalBlock(scope: !16468, file: !2475, line: 114, column: 45)
!16468 = distinct !DILexicalBlock(scope: !16462, file: !2475, line: 114, column: 3)
!16469 = !DILocation(line: 115, column: 11, scope: !16466)
!16470 = !DILocation(line: 115, column: 18, scope: !16466)
!16471 = !DILocation(line: 115, column: 8, scope: !16467)
!16472 = !DILocation(line: 116, column: 15, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16466, file: !2475, line: 115, column: 32)
!16474 = !DILocation(line: 117, column: 26, scope: !16473)
!16475 = !DILocation(line: 117, column: 5, scope: !16473)
!16476 = !DILocation(line: 123, column: 7, scope: !16402)
!16477 = !DILocation(line: 120, column: 15, scope: !16467)
!16478 = !DILocation(line: 114, column: 36, scope: !16468)
!16479 = distinct !{!16479, !16464, !16480}
!16480 = !DILocation(line: 121, column: 3, scope: !16462)
!16481 = !DILocation(line: 124, column: 4, scope: !16482)
!16482 = distinct !DILexicalBlock(scope: !16483, file: !2475, line: 123, column: 18)
!16483 = distinct !DILexicalBlock(scope: !16402, file: !2475, line: 123, column: 7)
!16484 = !DILocation(line: 125, column: 3, scope: !16482)
!16485 = !DILocation(line: 127, column: 13, scope: !16409)
!16486 = !DILocation(line: 127, column: 10, scope: !16409)
!16487 = !DILocation(line: 127, column: 7, scope: !16402)
!16488 = !DILocation(line: 137, column: 24, scope: !16408)
!16489 = !DILocation(line: 0, scope: !16408)
!16490 = !DILocation(line: 139, column: 18, scope: !16491)
!16491 = distinct !DILexicalBlock(scope: !16408, file: !2475, line: 139, column: 8)
!16492 = !DILocation(line: 139, column: 23, scope: !16491)
!16493 = !DILocation(line: 141, column: 5, scope: !16494)
!16494 = distinct !DILexicalBlock(scope: !16491, file: !2475, line: 140, column: 48)
!16495 = !DILocation(line: 142, column: 4, scope: !16494)
!16496 = !DILocalVariable(name: "key", arg: 2, scope: !16497, file: !334, line: 190, type: !16396)
!16497 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !16498, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16500)
!16498 = !DISubroutineType(types: !16499)
!16499 = !{null, !16427, !16396}
!16500 = !{!16501, !16496}
!16501 = !DILocalVariable(name: "l", arg: 1, scope: !16497, file: !334, line: 189, type: !16427)
!16502 = !DILocation(line: 0, scope: !16497, inlinedAt: !16503)
!16503 = distinct !DILocation(line: 102, column: 2, scope: !16403)
!16504 = !DILocation(line: 194, column: 2, scope: !16505, inlinedAt: !16503)
!16505 = distinct !DILexicalBlock(scope: !16506, file: !334, line: 194, column: 2)
!16506 = distinct !DILexicalBlock(scope: !16497, file: !334, line: 194, column: 2)
!16507 = !DILocation(line: 194, column: 2, scope: !16506, inlinedAt: !16503)
!16508 = !DILocation(line: 194, column: 2, scope: !16509, inlinedAt: !16503)
!16509 = distinct !DILexicalBlock(scope: !16505, file: !334, line: 194, column: 2)
!16510 = !DILocalVariable(name: "key", arg: 1, scope: !16511, file: !6191, line: 84, type: !32)
!16511 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6191, file: !6191, line: 84, type: !6202, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16512)
!16512 = !{!16510}
!16513 = !DILocation(line: 0, scope: !16511, inlinedAt: !16514)
!16514 = distinct !DILocation(line: 215, column: 2, scope: !16497, inlinedAt: !16503)
!16515 = !DILocation(line: 95, column: 2, scope: !16511, inlinedAt: !16514)
!16516 = !{i64 2045786}
!16517 = !DILocation(line: 148, column: 1, scope: !16383)
!16518 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !235, file: !235, line: 225, type: !16519, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16523)
!16519 = !DISubroutineType(types: !16520)
!16520 = !{!146, !16521}
!16521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16522, size: 32)
!16522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2452)
!16523 = !{!16524}
!16524 = !DILocalVariable(name: "node", arg: 1, scope: !16518, file: !235, line: 225, type: !16521)
!16525 = !DILocation(line: 0, scope: !16518)
!16526 = !DILocation(line: 227, column: 15, scope: !16518)
!16527 = !DILocation(line: 227, column: 20, scope: !16518)
!16528 = !DILocation(line: 227, column: 2, scope: !16518)
!16529 = distinct !DISubprogram(name: "elapsed", scope: !2475, file: !2475, line: 62, type: !16530, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !2149)
!16530 = !DISubroutineType(types: !16531)
!16531 = !{!362}
!16532 = !DILocation(line: 64, column: 9, scope: !16529)
!16533 = !DILocation(line: 64, column: 28, scope: !16529)
!16534 = !DILocation(line: 64, column: 35, scope: !16529)
!16535 = !DILocation(line: 64, column: 2, scope: !16529)
!16536 = distinct !DISubprogram(name: "first", scope: !2475, file: !2475, line: 39, type: !16537, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16539)
!16537 = !DISubroutineType(types: !16538)
!16538 = !{!2448}
!16539 = !{!16540}
!16540 = !DILocalVariable(name: "t", scope: !16536, file: !2475, line: 41, type: !16541)
!16541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 32)
!16542 = !DILocation(line: 41, column: 19, scope: !16536)
!16543 = !DILocation(line: 0, scope: !16536)
!16544 = !DILocation(line: 43, column: 9, scope: !16536)
!16545 = !DILocation(line: 43, column: 2, scope: !16536)
!16546 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !235, file: !235, line: 443, type: !16547, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16549)
!16547 = !DISubroutineType(types: !16548)
!16548 = !{null, !16541, !16541}
!16549 = !{!16550, !16551, !16552}
!16550 = !DILocalVariable(name: "successor", arg: 1, scope: !16546, file: !235, line: 443, type: !16541)
!16551 = !DILocalVariable(name: "node", arg: 2, scope: !16546, file: !235, line: 443, type: !16541)
!16552 = !DILocalVariable(name: "prev", scope: !16546, file: !235, line: 445, type: !16553)
!16553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16541)
!16554 = !DILocation(line: 0, scope: !16546)
!16555 = !DILocation(line: 445, column: 39, scope: !16546)
!16556 = !DILocation(line: 447, column: 8, scope: !16546)
!16557 = !DILocation(line: 447, column: 13, scope: !16546)
!16558 = !DILocation(line: 448, column: 8, scope: !16546)
!16559 = !DILocation(line: 448, column: 13, scope: !16546)
!16560 = !DILocation(line: 449, column: 8, scope: !16546)
!16561 = !DILocation(line: 449, column: 13, scope: !16546)
!16562 = !DILocation(line: 450, column: 18, scope: !16546)
!16563 = !DILocation(line: 451, column: 1, scope: !16546)
!16564 = distinct !DISubprogram(name: "next", scope: !2475, file: !2475, line: 46, type: !16565, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16567)
!16565 = !DISubroutineType(types: !16566)
!16566 = !{!2448, !2448}
!16567 = !{!16568, !16569}
!16568 = !DILocalVariable(name: "t", arg: 1, scope: !16564, file: !2475, line: 46, type: !2448)
!16569 = !DILocalVariable(name: "n", scope: !16564, file: !2475, line: 48, type: !16541)
!16570 = !DILocation(line: 0, scope: !16564)
!16571 = !DILocation(line: 48, column: 58, scope: !16564)
!16572 = !DILocation(line: 48, column: 19, scope: !16564)
!16573 = !DILocation(line: 50, column: 9, scope: !16564)
!16574 = !DILocation(line: 50, column: 2, scope: !16564)
!16575 = distinct !DISubprogram(name: "sys_dlist_append", scope: !235, file: !235, line: 404, type: !16576, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16579)
!16576 = !DISubroutineType(types: !16577)
!16577 = !{null, !16578, !16541}
!16578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!16579 = !{!16580, !16581, !16582}
!16580 = !DILocalVariable(name: "list", arg: 1, scope: !16575, file: !235, line: 404, type: !16578)
!16581 = !DILocalVariable(name: "node", arg: 2, scope: !16575, file: !235, line: 404, type: !16541)
!16582 = !DILocalVariable(name: "tail", scope: !16575, file: !235, line: 406, type: !16553)
!16583 = !DILocation(line: 0, scope: !16575)
!16584 = !DILocation(line: 406, column: 34, scope: !16575)
!16585 = !DILocation(line: 408, column: 8, scope: !16575)
!16586 = !DILocation(line: 408, column: 13, scope: !16575)
!16587 = !DILocation(line: 409, column: 8, scope: !16575)
!16588 = !DILocation(line: 409, column: 13, scope: !16575)
!16589 = !DILocation(line: 411, column: 8, scope: !16575)
!16590 = !DILocation(line: 411, column: 13, scope: !16575)
!16591 = !DILocation(line: 412, column: 13, scope: !16575)
!16592 = !DILocation(line: 413, column: 1, scope: !16575)
!16593 = distinct !DISubprogram(name: "next_timeout", scope: !2475, file: !2475, line: 67, type: !16530, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16594)
!16594 = !{!16595, !16596, !16597}
!16595 = !DILocalVariable(name: "to", scope: !16593, file: !2475, line: 69, type: !2448)
!16596 = !DILocalVariable(name: "ticks_elapsed", scope: !16593, file: !2475, line: 70, type: !362)
!16597 = !DILocalVariable(name: "ret", scope: !16593, file: !2475, line: 71, type: !362)
!16598 = !DILocation(line: 69, column: 24, scope: !16593)
!16599 = !DILocation(line: 0, scope: !16593)
!16600 = !DILocation(line: 70, column: 26, scope: !16593)
!16601 = !DILocation(line: 73, column: 10, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16593, file: !2475, line: 73, column: 6)
!16603 = !DILocation(line: 73, column: 19, scope: !16602)
!16604 = !DILocation(line: 74, column: 21, scope: !16602)
!16605 = !DILocation(line: 74, column: 30, scope: !16602)
!16606 = !DILocation(line: 74, column: 28, scope: !16602)
!16607 = !DILocation(line: 74, column: 45, scope: !16602)
!16608 = !DILocation(line: 73, column: 6, scope: !16593)
!16609 = !DILocation(line: 77, column: 9, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16602, file: !2475, line: 76, column: 9)
!16611 = !DILocation(line: 0, scope: !16602)
!16612 = !DILocation(line: 81, column: 20, scope: !16613)
!16613 = distinct !DILexicalBlock(scope: !16593, file: !2475, line: 81, column: 6)
!16614 = !DILocation(line: 81, column: 6, scope: !16613)
!16615 = !DILocation(line: 81, column: 32, scope: !16613)
!16616 = !DILocation(line: 85, column: 2, scope: !16593)
!16617 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !235, file: !235, line: 341, type: !16618, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16620)
!16618 = !DISubroutineType(types: !16619)
!16619 = !{!16541, !16578, !16541}
!16620 = !{!16621, !16622}
!16621 = !DILocalVariable(name: "list", arg: 1, scope: !16617, file: !235, line: 341, type: !16578)
!16622 = !DILocalVariable(name: "node", arg: 2, scope: !16617, file: !235, line: 342, type: !16541)
!16623 = !DILocation(line: 0, scope: !16617)
!16624 = !DILocation(line: 344, column: 15, scope: !16617)
!16625 = !DILocation(line: 344, column: 9, scope: !16617)
!16626 = !DILocation(line: 344, column: 26, scope: !16617)
!16627 = !DILocation(line: 344, column: 2, scope: !16617)
!16628 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !235, file: !235, line: 325, type: !16618, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16629)
!16629 = !{!16630, !16631}
!16630 = !DILocalVariable(name: "list", arg: 1, scope: !16628, file: !235, line: 325, type: !16578)
!16631 = !DILocalVariable(name: "node", arg: 2, scope: !16628, file: !235, line: 326, type: !16541)
!16632 = !DILocation(line: 0, scope: !16628)
!16633 = !DILocation(line: 328, column: 24, scope: !16628)
!16634 = !DILocation(line: 328, column: 15, scope: !16628)
!16635 = !DILocation(line: 328, column: 9, scope: !16628)
!16636 = !DILocation(line: 328, column: 45, scope: !16628)
!16637 = !DILocation(line: 328, column: 2, scope: !16628)
!16638 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !235, file: !235, line: 294, type: !16639, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16641)
!16639 = !DISubroutineType(types: !16640)
!16640 = !{!16541, !16578}
!16641 = !{!16642}
!16642 = !DILocalVariable(name: "list", arg: 1, scope: !16638, file: !235, line: 294, type: !16578)
!16643 = !DILocation(line: 0, scope: !16638)
!16644 = !DILocation(line: 296, column: 9, scope: !16638)
!16645 = !DILocation(line: 296, column: 2, scope: !16638)
!16646 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !235, file: !235, line: 266, type: !16647, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16649)
!16647 = !DISubroutineType(types: !16648)
!16648 = !{!146, !16578}
!16649 = !{!16650}
!16650 = !DILocalVariable(name: "list", arg: 1, scope: !16646, file: !235, line: 266, type: !16578)
!16651 = !DILocation(line: 0, scope: !16646)
!16652 = !DILocation(line: 268, column: 15, scope: !16646)
!16653 = !DILocation(line: 268, column: 20, scope: !16646)
!16654 = !DILocation(line: 268, column: 2, scope: !16646)
!16655 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2475, file: !2475, line: 150, type: !16656, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16658)
!16656 = !DISubroutineType(types: !16657)
!16657 = !{!118, !2448}
!16658 = !{!16659, !16660, !16661, !16663}
!16659 = !DILocalVariable(name: "to", arg: 1, scope: !16655, file: !2475, line: 150, type: !2448)
!16660 = !DILocalVariable(name: "ret", scope: !16655, file: !2475, line: 152, type: !118)
!16661 = !DILocalVariable(name: "__i", scope: !16662, file: !2475, line: 154, type: !16396)
!16662 = distinct !DILexicalBlock(scope: !16655, file: !2475, line: 154, column: 2)
!16663 = !DILocalVariable(name: "__key", scope: !16662, file: !2475, line: 154, type: !16396)
!16664 = !DILocation(line: 0, scope: !16655)
!16665 = !DILocation(line: 0, scope: !16662)
!16666 = !DILocation(line: 0, scope: !16424, inlinedAt: !16667)
!16667 = distinct !DILocation(line: 154, column: 2, scope: !16662)
!16668 = !DILocation(line: 55, column: 2, scope: !16433, inlinedAt: !16669)
!16669 = distinct !DILocation(line: 145, column: 10, scope: !16424, inlinedAt: !16667)
!16670 = !DILocation(line: 0, scope: !16433, inlinedAt: !16669)
!16671 = !DILocation(line: 148, column: 2, scope: !16441, inlinedAt: !16667)
!16672 = !DILocation(line: 148, column: 2, scope: !16442, inlinedAt: !16667)
!16673 = !DILocation(line: 148, column: 2, scope: !16445, inlinedAt: !16667)
!16674 = !DILocation(line: 160, column: 2, scope: !16424, inlinedAt: !16667)
!16675 = !DILocation(line: 155, column: 7, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16677, file: !2475, line: 155, column: 7)
!16677 = distinct !DILexicalBlock(scope: !16678, file: !2475, line: 154, column: 24)
!16678 = distinct !DILexicalBlock(scope: !16662, file: !2475, line: 154, column: 2)
!16679 = !DILocation(line: 155, column: 7, scope: !16677)
!16680 = !DILocation(line: 156, column: 4, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16676, file: !2475, line: 155, column: 39)
!16682 = !DILocation(line: 158, column: 3, scope: !16681)
!16683 = !DILocation(line: 0, scope: !16497, inlinedAt: !16684)
!16684 = distinct !DILocation(line: 154, column: 2, scope: !16678)
!16685 = !DILocation(line: 194, column: 2, scope: !16505, inlinedAt: !16684)
!16686 = !DILocation(line: 194, column: 2, scope: !16506, inlinedAt: !16684)
!16687 = !DILocation(line: 194, column: 2, scope: !16509, inlinedAt: !16684)
!16688 = !DILocation(line: 0, scope: !16511, inlinedAt: !16689)
!16689 = distinct !DILocation(line: 215, column: 2, scope: !16497, inlinedAt: !16684)
!16690 = !DILocation(line: 95, column: 2, scope: !16511, inlinedAt: !16689)
!16691 = !DILocation(line: 161, column: 2, scope: !16655)
!16692 = distinct !DISubprogram(name: "remove_timeout", scope: !2475, file: !2475, line: 53, type: !2469, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16693)
!16693 = !{!16694}
!16694 = !DILocalVariable(name: "t", arg: 1, scope: !16692, file: !2475, line: 53, type: !2448)
!16695 = !DILocation(line: 0, scope: !16692)
!16696 = !DILocation(line: 55, column: 6, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16692, file: !2475, line: 55, column: 6)
!16698 = !DILocation(line: 55, column: 14, scope: !16697)
!16699 = !DILocation(line: 55, column: 6, scope: !16692)
!16700 = !DILocation(line: 56, column: 25, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16697, file: !2475, line: 55, column: 23)
!16702 = !DILocation(line: 56, column: 12, scope: !16701)
!16703 = !DILocation(line: 56, column: 19, scope: !16701)
!16704 = !DILocation(line: 57, column: 2, scope: !16701)
!16705 = !DILocation(line: 59, column: 23, scope: !16692)
!16706 = !DILocation(line: 59, column: 2, scope: !16692)
!16707 = !DILocation(line: 60, column: 1, scope: !16692)
!16708 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !235, file: !235, line: 496, type: !16709, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16711)
!16709 = !DISubroutineType(types: !16710)
!16710 = !{null, !16541}
!16711 = !{!16712, !16713, !16714}
!16712 = !DILocalVariable(name: "node", arg: 1, scope: !16708, file: !235, line: 496, type: !16541)
!16713 = !DILocalVariable(name: "prev", scope: !16708, file: !235, line: 498, type: !16553)
!16714 = !DILocalVariable(name: "next", scope: !16708, file: !235, line: 499, type: !16553)
!16715 = !DILocation(line: 0, scope: !16708)
!16716 = !DILocation(line: 498, column: 34, scope: !16708)
!16717 = !DILocation(line: 499, column: 34, scope: !16708)
!16718 = !DILocation(line: 501, column: 8, scope: !16708)
!16719 = !DILocation(line: 501, column: 13, scope: !16708)
!16720 = !DILocation(line: 502, column: 8, scope: !16708)
!16721 = !DILocation(line: 502, column: 13, scope: !16708)
!16722 = !DILocation(line: 503, column: 2, scope: !16708)
!16723 = !DILocation(line: 504, column: 1, scope: !16708)
!16724 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !16709, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16725)
!16725 = !{!16726}
!16726 = !DILocalVariable(name: "node", arg: 1, scope: !16724, file: !235, line: 211, type: !16541)
!16727 = !DILocation(line: 0, scope: !16724)
!16728 = !DILocation(line: 213, column: 8, scope: !16724)
!16729 = !DILocation(line: 213, column: 13, scope: !16724)
!16730 = !DILocation(line: 214, column: 8, scope: !16724)
!16731 = !DILocation(line: 214, column: 13, scope: !16724)
!16732 = !DILocation(line: 215, column: 1, scope: !16724)
!16733 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2475, file: !2475, line: 183, type: !16734, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16738)
!16734 = !DISubroutineType(types: !16735)
!16735 = !{!113, !16736}
!16736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16737, size: 32)
!16737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2449)
!16738 = !{!16739, !16740, !16741, !16743}
!16739 = !DILocalVariable(name: "timeout", arg: 1, scope: !16733, file: !2475, line: 183, type: !16736)
!16740 = !DILocalVariable(name: "ticks", scope: !16733, file: !2475, line: 185, type: !113)
!16741 = !DILocalVariable(name: "__i", scope: !16742, file: !2475, line: 187, type: !16396)
!16742 = distinct !DILexicalBlock(scope: !16733, file: !2475, line: 187, column: 2)
!16743 = !DILocalVariable(name: "__key", scope: !16742, file: !2475, line: 187, type: !16396)
!16744 = !DILocation(line: 0, scope: !16733)
!16745 = !DILocation(line: 0, scope: !16742)
!16746 = !DILocation(line: 0, scope: !16424, inlinedAt: !16747)
!16747 = distinct !DILocation(line: 187, column: 2, scope: !16742)
!16748 = !DILocation(line: 55, column: 2, scope: !16433, inlinedAt: !16749)
!16749 = distinct !DILocation(line: 145, column: 10, scope: !16424, inlinedAt: !16747)
!16750 = !DILocation(line: 0, scope: !16433, inlinedAt: !16749)
!16751 = !DILocation(line: 148, column: 2, scope: !16441, inlinedAt: !16747)
!16752 = !DILocation(line: 148, column: 2, scope: !16442, inlinedAt: !16747)
!16753 = !DILocation(line: 148, column: 2, scope: !16445, inlinedAt: !16747)
!16754 = !DILocation(line: 160, column: 2, scope: !16424, inlinedAt: !16747)
!16755 = !DILocation(line: 188, column: 11, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16757, file: !2475, line: 187, column: 24)
!16757 = distinct !DILexicalBlock(scope: !16742, file: !2475, line: 187, column: 2)
!16758 = !DILocation(line: 0, scope: !16497, inlinedAt: !16759)
!16759 = distinct !DILocation(line: 187, column: 2, scope: !16757)
!16760 = !DILocation(line: 194, column: 2, scope: !16505, inlinedAt: !16759)
!16761 = !DILocation(line: 194, column: 2, scope: !16506, inlinedAt: !16759)
!16762 = !DILocation(line: 194, column: 2, scope: !16509, inlinedAt: !16759)
!16763 = !DILocation(line: 0, scope: !16511, inlinedAt: !16764)
!16764 = distinct !DILocation(line: 215, column: 2, scope: !16497, inlinedAt: !16759)
!16765 = !DILocation(line: 95, column: 2, scope: !16511, inlinedAt: !16764)
!16766 = !DILocation(line: 191, column: 2, scope: !16733)
!16767 = distinct !DISubprogram(name: "timeout_rem", scope: !2475, file: !2475, line: 165, type: !16734, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16768)
!16768 = !{!16769, !16770, !16771}
!16769 = !DILocalVariable(name: "timeout", arg: 1, scope: !16767, file: !2475, line: 165, type: !16736)
!16770 = !DILocalVariable(name: "ticks", scope: !16767, file: !2475, line: 167, type: !113)
!16771 = !DILocalVariable(name: "t", scope: !16772, file: !2475, line: 173, type: !2448)
!16772 = distinct !DILexicalBlock(scope: !16767, file: !2475, line: 173, column: 2)
!16773 = !DILocation(line: 0, scope: !16767)
!16774 = !DILocation(line: 169, column: 6, scope: !16775)
!16775 = distinct !DILexicalBlock(scope: !16767, file: !2475, line: 169, column: 6)
!16776 = !DILocation(line: 169, column: 6, scope: !16767)
!16777 = !DILocation(line: 173, column: 28, scope: !16772)
!16778 = !DILocation(line: 0, scope: !16772)
!16779 = !DILocation(line: 173, column: 39, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16772, file: !2475, line: 173, column: 2)
!16781 = !DILocation(line: 173, column: 2, scope: !16772)
!16782 = !DILocation(line: 174, column: 15, scope: !16783)
!16783 = distinct !DILexicalBlock(scope: !16780, file: !2475, line: 173, column: 61)
!16784 = !DILocation(line: 174, column: 9, scope: !16783)
!16785 = !DILocation(line: 175, column: 15, scope: !16786)
!16786 = distinct !DILexicalBlock(scope: !16783, file: !2475, line: 175, column: 7)
!16787 = !DILocation(line: 175, column: 7, scope: !16783)
!16788 = !DILocation(line: 173, column: 52, scope: !16780)
!16789 = distinct !{!16789, !16781, !16790}
!16790 = !DILocation(line: 178, column: 2, scope: !16772)
!16791 = !DILocation(line: 180, column: 17, scope: !16767)
!16792 = !DILocation(line: 180, column: 15, scope: !16767)
!16793 = !DILocation(line: 180, column: 2, scope: !16767)
!16794 = !DILocation(line: 181, column: 1, scope: !16767)
!16795 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12808, file: !12808, line: 35, type: !16796, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16798)
!16796 = !DISubroutineType(types: !16797)
!16797 = !{!146, !16736}
!16798 = !{!16799}
!16799 = !DILocalVariable(name: "to", arg: 1, scope: !16795, file: !12808, line: 35, type: !16736)
!16800 = !DILocation(line: 0, scope: !16795)
!16801 = !DILocation(line: 37, column: 35, scope: !16795)
!16802 = !DILocation(line: 37, column: 10, scope: !16795)
!16803 = !DILocation(line: 37, column: 9, scope: !16795)
!16804 = !DILocation(line: 37, column: 2, scope: !16795)
!16805 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2475, file: !2475, line: 194, type: !16734, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16806)
!16806 = !{!16807, !16808, !16809, !16811}
!16807 = !DILocalVariable(name: "timeout", arg: 1, scope: !16805, file: !2475, line: 194, type: !16736)
!16808 = !DILocalVariable(name: "ticks", scope: !16805, file: !2475, line: 196, type: !113)
!16809 = !DILocalVariable(name: "__i", scope: !16810, file: !2475, line: 198, type: !16396)
!16810 = distinct !DILexicalBlock(scope: !16805, file: !2475, line: 198, column: 2)
!16811 = !DILocalVariable(name: "__key", scope: !16810, file: !2475, line: 198, type: !16396)
!16812 = !DILocation(line: 0, scope: !16805)
!16813 = !DILocation(line: 0, scope: !16810)
!16814 = !DILocation(line: 0, scope: !16424, inlinedAt: !16815)
!16815 = distinct !DILocation(line: 198, column: 2, scope: !16810)
!16816 = !DILocation(line: 55, column: 2, scope: !16433, inlinedAt: !16817)
!16817 = distinct !DILocation(line: 145, column: 10, scope: !16424, inlinedAt: !16815)
!16818 = !DILocation(line: 0, scope: !16433, inlinedAt: !16817)
!16819 = !DILocation(line: 148, column: 2, scope: !16441, inlinedAt: !16815)
!16820 = !DILocation(line: 148, column: 2, scope: !16442, inlinedAt: !16815)
!16821 = !DILocation(line: 148, column: 2, scope: !16445, inlinedAt: !16815)
!16822 = !DILocation(line: 160, column: 2, scope: !16424, inlinedAt: !16815)
!16823 = !DILocation(line: 199, column: 11, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16825, file: !2475, line: 198, column: 24)
!16825 = distinct !DILexicalBlock(scope: !16810, file: !2475, line: 198, column: 2)
!16826 = !DILocation(line: 199, column: 23, scope: !16824)
!16827 = !DILocation(line: 0, scope: !16497, inlinedAt: !16828)
!16828 = distinct !DILocation(line: 198, column: 2, scope: !16825)
!16829 = !DILocation(line: 194, column: 2, scope: !16505, inlinedAt: !16828)
!16830 = !DILocation(line: 194, column: 2, scope: !16506, inlinedAt: !16828)
!16831 = !DILocation(line: 194, column: 2, scope: !16509, inlinedAt: !16828)
!16832 = !DILocation(line: 0, scope: !16511, inlinedAt: !16833)
!16833 = distinct !DILocation(line: 215, column: 2, scope: !16497, inlinedAt: !16828)
!16834 = !DILocation(line: 95, column: 2, scope: !16511, inlinedAt: !16833)
!16835 = !DILocation(line: 199, column: 21, scope: !16824)
!16836 = !DILocation(line: 202, column: 2, scope: !16805)
!16837 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2475, file: !2475, line: 205, type: !16530, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16838)
!16838 = !{!16839, !16840, !16842}
!16839 = !DILocalVariable(name: "ret", scope: !16837, file: !2475, line: 207, type: !362)
!16840 = !DILocalVariable(name: "__i", scope: !16841, file: !2475, line: 209, type: !16396)
!16841 = distinct !DILexicalBlock(scope: !16837, file: !2475, line: 209, column: 2)
!16842 = !DILocalVariable(name: "__key", scope: !16841, file: !2475, line: 209, type: !16396)
!16843 = !DILocation(line: 0, scope: !16837)
!16844 = !DILocation(line: 0, scope: !16841)
!16845 = !DILocation(line: 0, scope: !16424, inlinedAt: !16846)
!16846 = distinct !DILocation(line: 209, column: 2, scope: !16841)
!16847 = !DILocation(line: 55, column: 2, scope: !16433, inlinedAt: !16848)
!16848 = distinct !DILocation(line: 145, column: 10, scope: !16424, inlinedAt: !16846)
!16849 = !DILocation(line: 0, scope: !16433, inlinedAt: !16848)
!16850 = !DILocation(line: 148, column: 2, scope: !16441, inlinedAt: !16846)
!16851 = !DILocation(line: 148, column: 2, scope: !16442, inlinedAt: !16846)
!16852 = !DILocation(line: 148, column: 2, scope: !16445, inlinedAt: !16846)
!16853 = !DILocation(line: 160, column: 2, scope: !16424, inlinedAt: !16846)
!16854 = !DILocation(line: 210, column: 9, scope: !16855)
!16855 = distinct !DILexicalBlock(scope: !16856, file: !2475, line: 209, column: 24)
!16856 = distinct !DILexicalBlock(scope: !16841, file: !2475, line: 209, column: 2)
!16857 = !DILocation(line: 0, scope: !16497, inlinedAt: !16858)
!16858 = distinct !DILocation(line: 209, column: 2, scope: !16856)
!16859 = !DILocation(line: 194, column: 2, scope: !16505, inlinedAt: !16858)
!16860 = !DILocation(line: 194, column: 2, scope: !16506, inlinedAt: !16858)
!16861 = !DILocation(line: 194, column: 2, scope: !16509, inlinedAt: !16858)
!16862 = !DILocation(line: 0, scope: !16511, inlinedAt: !16863)
!16863 = distinct !DILocation(line: 215, column: 2, scope: !16497, inlinedAt: !16858)
!16864 = !DILocation(line: 95, column: 2, scope: !16511, inlinedAt: !16863)
!16865 = !DILocation(line: 212, column: 2, scope: !16837)
!16866 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2475, file: !2475, line: 215, type: !10403, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16867)
!16867 = !{!16868, !16869, !16870, !16872, !16873, !16876, !16877}
!16868 = !DILocalVariable(name: "ticks", arg: 1, scope: !16866, file: !2475, line: 215, type: !362)
!16869 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16866, file: !2475, line: 215, type: !146)
!16870 = !DILocalVariable(name: "__i", scope: !16871, file: !2475, line: 217, type: !16396)
!16871 = distinct !DILexicalBlock(scope: !16866, file: !2475, line: 217, column: 2)
!16872 = !DILocalVariable(name: "__key", scope: !16871, file: !2475, line: 217, type: !16396)
!16873 = !DILocalVariable(name: "next_to", scope: !16874, file: !2475, line: 218, type: !118)
!16874 = distinct !DILexicalBlock(scope: !16875, file: !2475, line: 217, column: 24)
!16875 = distinct !DILexicalBlock(scope: !16871, file: !2475, line: 217, column: 2)
!16876 = !DILocalVariable(name: "sooner", scope: !16874, file: !2475, line: 219, type: !146)
!16877 = !DILocalVariable(name: "imminent", scope: !16874, file: !2475, line: 221, type: !146)
!16878 = !DILocation(line: 0, scope: !16866)
!16879 = !DILocation(line: 0, scope: !16871)
!16880 = !DILocation(line: 0, scope: !16424, inlinedAt: !16881)
!16881 = distinct !DILocation(line: 217, column: 2, scope: !16871)
!16882 = !DILocation(line: 55, column: 2, scope: !16433, inlinedAt: !16883)
!16883 = distinct !DILocation(line: 145, column: 10, scope: !16424, inlinedAt: !16881)
!16884 = !DILocation(line: 0, scope: !16433, inlinedAt: !16883)
!16885 = !DILocation(line: 148, column: 2, scope: !16441, inlinedAt: !16881)
!16886 = !DILocation(line: 148, column: 2, scope: !16442, inlinedAt: !16881)
!16887 = !DILocation(line: 148, column: 2, scope: !16445, inlinedAt: !16881)
!16888 = !DILocation(line: 160, column: 2, scope: !16424, inlinedAt: !16881)
!16889 = !DILocation(line: 218, column: 17, scope: !16874)
!16890 = !DILocation(line: 0, scope: !16874)
!16891 = !DILocation(line: 221, column: 27, scope: !16874)
!16892 = !DILocation(line: 233, column: 17, scope: !16893)
!16893 = distinct !DILexicalBlock(scope: !16874, file: !2475, line: 233, column: 7)
!16894 = !DILocation(line: 234, column: 26, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16893, file: !2475, line: 233, column: 56)
!16896 = !DILocation(line: 234, column: 4, scope: !16895)
!16897 = !DILocation(line: 235, column: 3, scope: !16895)
!16898 = !DILocation(line: 0, scope: !16497, inlinedAt: !16899)
!16899 = distinct !DILocation(line: 217, column: 2, scope: !16875)
!16900 = !DILocation(line: 194, column: 2, scope: !16505, inlinedAt: !16899)
!16901 = !DILocation(line: 194, column: 2, scope: !16506, inlinedAt: !16899)
!16902 = !DILocation(line: 194, column: 2, scope: !16509, inlinedAt: !16899)
!16903 = !DILocation(line: 0, scope: !16511, inlinedAt: !16904)
!16904 = distinct !DILocation(line: 215, column: 2, scope: !16497, inlinedAt: !16899)
!16905 = !DILocation(line: 95, column: 2, scope: !16511, inlinedAt: !16904)
!16906 = !DILocation(line: 237, column: 1, scope: !16866)
!16907 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2475, file: !2475, line: 239, type: !16908, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16910)
!16908 = !DISubroutineType(types: !16909)
!16909 = !{null, !362}
!16910 = !{!16911, !16912, !16913, !16915}
!16911 = !DILocalVariable(name: "ticks", arg: 1, scope: !16907, file: !2475, line: 239, type: !362)
!16912 = !DILocalVariable(name: "key", scope: !16907, file: !2475, line: 245, type: !16396)
!16913 = !DILocalVariable(name: "t", scope: !16914, file: !2475, line: 262, type: !2448)
!16914 = distinct !DILexicalBlock(scope: !16907, file: !2475, line: 261, column: 67)
!16915 = !DILocalVariable(name: "dt", scope: !16914, file: !2475, line: 263, type: !118)
!16916 = !DILocation(line: 0, scope: !16907)
!16917 = !DILocation(line: 242, column: 2, scope: !16907)
!16918 = !DILocation(line: 0, scope: !16424, inlinedAt: !16919)
!16919 = distinct !DILocation(line: 245, column: 25, scope: !16907)
!16920 = !DILocation(line: 55, column: 2, scope: !16433, inlinedAt: !16921)
!16921 = distinct !DILocation(line: 145, column: 10, scope: !16424, inlinedAt: !16919)
!16922 = !DILocation(line: 0, scope: !16433, inlinedAt: !16921)
!16923 = !DILocation(line: 148, column: 2, scope: !16441, inlinedAt: !16919)
!16924 = !DILocation(line: 148, column: 2, scope: !16442, inlinedAt: !16919)
!16925 = !DILocation(line: 148, column: 2, scope: !16445, inlinedAt: !16919)
!16926 = !DILocation(line: 160, column: 2, scope: !16424, inlinedAt: !16919)
!16927 = !DILocation(line: 261, column: 9, scope: !16907)
!16928 = !DILocation(line: 261, column: 17, scope: !16907)
!16929 = !DILocation(line: 261, column: 25, scope: !16907)
!16930 = !DILocation(line: 261, column: 37, scope: !16907)
!16931 = !DILocation(line: 261, column: 47, scope: !16907)
!16932 = !DILocation(line: 261, column: 44, scope: !16907)
!16933 = !DILocation(line: 261, column: 2, scope: !16907)
!16934 = !DILocation(line: 0, scope: !16914)
!16935 = !DILocation(line: 263, column: 12, scope: !16914)
!16936 = !DILocation(line: 265, column: 16, scope: !16914)
!16937 = !DILocation(line: 265, column: 13, scope: !16914)
!16938 = !DILocation(line: 266, column: 13, scope: !16914)
!16939 = !DILocation(line: 267, column: 3, scope: !16914)
!16940 = !DILocation(line: 0, scope: !16497, inlinedAt: !16941)
!16941 = distinct !DILocation(line: 269, column: 3, scope: !16914)
!16942 = !DILocation(line: 194, column: 2, scope: !16505, inlinedAt: !16941)
!16943 = !DILocation(line: 194, column: 2, scope: !16506, inlinedAt: !16941)
!16944 = !DILocation(line: 194, column: 2, scope: !16509, inlinedAt: !16941)
!16945 = !DILocation(line: 0, scope: !16511, inlinedAt: !16946)
!16946 = distinct !DILocation(line: 215, column: 2, scope: !16497, inlinedAt: !16941)
!16947 = !DILocation(line: 95, column: 2, scope: !16511, inlinedAt: !16946)
!16948 = !DILocation(line: 270, column: 6, scope: !16914)
!16949 = !DILocation(line: 270, column: 3, scope: !16914)
!16950 = !DILocation(line: 0, scope: !16424, inlinedAt: !16951)
!16951 = distinct !DILocation(line: 271, column: 9, scope: !16914)
!16952 = !DILocation(line: 55, column: 2, scope: !16433, inlinedAt: !16953)
!16953 = distinct !DILocation(line: 145, column: 10, scope: !16424, inlinedAt: !16951)
!16954 = !DILocation(line: 0, scope: !16433, inlinedAt: !16953)
!16955 = !DILocation(line: 148, column: 2, scope: !16441, inlinedAt: !16951)
!16956 = !DILocation(line: 148, column: 2, scope: !16442, inlinedAt: !16951)
!16957 = !DILocation(line: 148, column: 2, scope: !16445, inlinedAt: !16951)
!16958 = !DILocation(line: 160, column: 2, scope: !16424, inlinedAt: !16951)
!16959 = !DILocation(line: 272, column: 22, scope: !16914)
!16960 = distinct !{!16960, !16933, !16961}
!16961 = !DILocation(line: 273, column: 2, scope: !16907)
!16962 = !DILocation(line: 276, column: 19, scope: !16963)
!16963 = distinct !DILexicalBlock(scope: !16964, file: !2475, line: 275, column: 23)
!16964 = distinct !DILexicalBlock(scope: !16907, file: !2475, line: 275, column: 6)
!16965 = !DILocation(line: 277, column: 2, scope: !16963)
!16966 = !DILocation(line: 279, column: 15, scope: !16907)
!16967 = !DILocation(line: 279, column: 12, scope: !16907)
!16968 = !DILocation(line: 280, column: 21, scope: !16907)
!16969 = !DILocation(line: 282, column: 24, scope: !16907)
!16970 = !DILocation(line: 282, column: 2, scope: !16907)
!16971 = !DILocation(line: 0, scope: !16497, inlinedAt: !16972)
!16972 = distinct !DILocation(line: 284, column: 2, scope: !16907)
!16973 = !DILocation(line: 194, column: 2, scope: !16505, inlinedAt: !16972)
!16974 = !DILocation(line: 194, column: 2, scope: !16506, inlinedAt: !16972)
!16975 = !DILocation(line: 194, column: 2, scope: !16509, inlinedAt: !16972)
!16976 = !DILocation(line: 0, scope: !16511, inlinedAt: !16977)
!16977 = distinct !DILocation(line: 215, column: 2, scope: !16497, inlinedAt: !16972)
!16978 = !DILocation(line: 95, column: 2, scope: !16511, inlinedAt: !16977)
!16979 = !DILocation(line: 285, column: 1, scope: !16907)
!16980 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2475, file: !2475, line: 287, type: !16981, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !16983)
!16981 = !DISubroutineType(types: !16982)
!16982 = !{!115}
!16983 = !{!16984, !16985, !16987}
!16984 = !DILocalVariable(name: "t", scope: !16980, file: !2475, line: 289, type: !213)
!16985 = !DILocalVariable(name: "__i", scope: !16986, file: !2475, line: 291, type: !16396)
!16986 = distinct !DILexicalBlock(scope: !16980, file: !2475, line: 291, column: 2)
!16987 = !DILocalVariable(name: "__key", scope: !16986, file: !2475, line: 291, type: !16396)
!16988 = !DILocation(line: 0, scope: !16980)
!16989 = !DILocation(line: 0, scope: !16986)
!16990 = !DILocation(line: 0, scope: !16424, inlinedAt: !16991)
!16991 = distinct !DILocation(line: 291, column: 2, scope: !16986)
!16992 = !DILocation(line: 55, column: 2, scope: !16433, inlinedAt: !16993)
!16993 = distinct !DILocation(line: 145, column: 10, scope: !16424, inlinedAt: !16991)
!16994 = !DILocation(line: 0, scope: !16433, inlinedAt: !16993)
!16995 = !DILocation(line: 148, column: 2, scope: !16441, inlinedAt: !16991)
!16996 = !DILocation(line: 148, column: 2, scope: !16442, inlinedAt: !16991)
!16997 = !DILocation(line: 148, column: 2, scope: !16445, inlinedAt: !16991)
!16998 = !DILocation(line: 160, column: 2, scope: !16424, inlinedAt: !16991)
!16999 = !DILocation(line: 292, column: 7, scope: !17000)
!17000 = distinct !DILexicalBlock(scope: !17001, file: !2475, line: 291, column: 24)
!17001 = distinct !DILexicalBlock(scope: !16986, file: !2475, line: 291, column: 2)
!17002 = !DILocation(line: 292, column: 19, scope: !17000)
!17003 = !DILocation(line: 0, scope: !16497, inlinedAt: !17004)
!17004 = distinct !DILocation(line: 291, column: 2, scope: !17001)
!17005 = !DILocation(line: 194, column: 2, scope: !16505, inlinedAt: !17004)
!17006 = !DILocation(line: 194, column: 2, scope: !16506, inlinedAt: !17004)
!17007 = !DILocation(line: 194, column: 2, scope: !16509, inlinedAt: !17004)
!17008 = !DILocation(line: 0, scope: !16511, inlinedAt: !17009)
!17009 = distinct !DILocation(line: 215, column: 2, scope: !16497, inlinedAt: !17004)
!17010 = !DILocation(line: 95, column: 2, scope: !16511, inlinedAt: !17009)
!17011 = !DILocation(line: 292, column: 17, scope: !17000)
!17012 = !DILocation(line: 294, column: 2, scope: !16980)
!17013 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2475, file: !2475, line: 297, type: !6452, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !2149)
!17014 = !DILocation(line: 300, column: 19, scope: !17013)
!17015 = !DILocation(line: 300, column: 9, scope: !17013)
!17016 = !DILocation(line: 300, column: 2, scope: !17013)
!17017 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2475, file: !2475, line: 306, type: !16981, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !2149)
!17018 = !DILocation(line: 308, column: 9, scope: !17017)
!17019 = !DILocation(line: 308, column: 2, scope: !17017)
!17020 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2475, file: !2475, line: 319, type: !6462, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !17021)
!17021 = !{!17022, !17023, !17024, !17025}
!17022 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17020, file: !2475, line: 319, type: !156)
!17023 = !DILocalVariable(name: "start_cycles", scope: !17020, file: !2475, line: 328, type: !156)
!17024 = !DILocalVariable(name: "cycles_to_wait", scope: !17020, file: !2475, line: 331, type: !156)
!17025 = !DILocalVariable(name: "current_cycles", scope: !17026, file: !2475, line: 338, type: !156)
!17026 = distinct !DILexicalBlock(scope: !17027, file: !2475, line: 337, column: 11)
!17027 = distinct !DILexicalBlock(scope: !17028, file: !2475, line: 337, column: 2)
!17028 = distinct !DILexicalBlock(scope: !17020, file: !2475, line: 337, column: 2)
!17029 = !DILocation(line: 0, scope: !17020)
!17030 = !DILocation(line: 322, column: 19, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !17020, file: !2475, line: 322, column: 6)
!17032 = !DILocation(line: 322, column: 6, scope: !17020)
!17033 = !DILocation(line: 328, column: 26, scope: !17020)
!17034 = !DILocation(line: 333, column: 43, scope: !17020)
!17035 = !DILocation(line: 337, column: 2, scope: !17020)
!17036 = !DILocation(line: 338, column: 29, scope: !17026)
!17037 = !DILocation(line: 0, scope: !17026)
!17038 = !DILocation(line: 341, column: 23, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17026, file: !2475, line: 341, column: 7)
!17040 = !DILocation(line: 341, column: 39, scope: !17039)
!17041 = !DILocation(line: 349, column: 1, scope: !17020)
!17042 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !220, file: !220, line: 1675, type: !6452, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !2149)
!17043 = !DILocation(line: 1677, column: 9, scope: !17042)
!17044 = !DILocation(line: 1677, column: 2, scope: !17042)
!17045 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17046, file: !17046, line: 24, type: !6452, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !2149)
!17046 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17047 = !DILocation(line: 26, column: 9, scope: !17045)
!17048 = !DILocation(line: 26, column: 2, scope: !17045)
!17049 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2475, file: !2475, line: 364, type: !17050, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !17052)
!17050 = !DISubroutineType(types: !17051)
!17051 = !{!213, !16386}
!17052 = !{!17053, !17054}
!17053 = !DILocalVariable(name: "timeout", arg: 1, scope: !17049, file: !2475, line: 364, type: !16386)
!17054 = !DILocalVariable(name: "dt", scope: !17049, file: !2475, line: 366, type: !113)
!17055 = !DILocation(line: 0, scope: !17049)
!17056 = !DILocation(line: 368, column: 6, scope: !17049)
!17057 = !DILocation(line: 371, column: 10, scope: !17058)
!17058 = distinct !DILexicalBlock(scope: !17059, file: !2475, line: 370, column: 47)
!17059 = distinct !DILexicalBlock(scope: !17060, file: !2475, line: 370, column: 13)
!17060 = distinct !DILexicalBlock(scope: !17049, file: !2475, line: 368, column: 6)
!17061 = !DILocation(line: 371, column: 3, scope: !17058)
!17062 = !DILocation(line: 376, column: 58, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17064, file: !2475, line: 376, column: 7)
!17064 = distinct !DILexicalBlock(scope: !17059, file: !2475, line: 372, column: 9)
!17065 = !DILocation(line: 376, column: 7, scope: !17064)
!17066 = !DILocation(line: 376, column: 43, scope: !17063)
!17067 = !DILocation(line: 377, column: 4, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17063, file: !2475, line: 376, column: 64)
!17069 = !DILocation(line: 379, column: 10, scope: !17064)
!17070 = !DILocation(line: 379, column: 33, scope: !17064)
!17071 = !DILocation(line: 379, column: 31, scope: !17064)
!17072 = !DILocation(line: 379, column: 3, scope: !17064)
!17073 = !DILocation(line: 0, scope: !17060)
!17074 = !DILocation(line: 381, column: 1, scope: !17049)
!17075 = distinct !DISubprogram(name: "k_free", scope: !2492, file: !2492, line: 43, type: !6302, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17076)
!17076 = !{!17077, !17078}
!17077 = !DILocalVariable(name: "ptr", arg: 1, scope: !17075, file: !2492, line: 43, type: !117)
!17078 = !DILocalVariable(name: "heap_ref", scope: !17075, file: !2492, line: 45, type: !17079)
!17079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17080, size: 32)
!17080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!17081 = !DILocation(line: 0, scope: !17075)
!17082 = !DILocation(line: 47, column: 10, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17075, file: !2492, line: 47, column: 6)
!17084 = !DILocation(line: 47, column: 6, scope: !17075)
!17085 = !DILocation(line: 49, column: 9, scope: !17086)
!17086 = distinct !DILexicalBlock(scope: !17083, file: !2492, line: 47, column: 19)
!17087 = !DILocation(line: 53, column: 15, scope: !17086)
!17088 = !DILocation(line: 53, column: 3, scope: !17086)
!17089 = !DILocation(line: 56, column: 2, scope: !17086)
!17090 = !DILocation(line: 57, column: 1, scope: !17075)
!17091 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2492, file: !2492, line: 64, type: !17092, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17094)
!17092 = !DISubroutineType(types: !17093)
!17093 = !{!117, !315, !315}
!17094 = !{!17095, !17096, !17097}
!17095 = !DILocalVariable(name: "align", arg: 1, scope: !17091, file: !2492, line: 64, type: !315)
!17096 = !DILocalVariable(name: "size", arg: 2, scope: !17091, file: !2492, line: 64, type: !315)
!17097 = !DILocalVariable(name: "ret", scope: !17091, file: !2492, line: 75, type: !117)
!17098 = !DILocation(line: 0, scope: !17091)
!17099 = !DILocation(line: 66, column: 2, scope: !17100)
!17100 = distinct !DILexicalBlock(scope: !17101, file: !2492, line: 66, column: 2)
!17101 = distinct !DILexicalBlock(scope: !17091, file: !2492, line: 66, column: 2)
!17102 = !DILocation(line: 66, column: 2, scope: !17103)
!17103 = distinct !DILexicalBlock(scope: !17100, file: !2492, line: 66, column: 2)
!17104 = !DILocation(line: 70, column: 2, scope: !17105)
!17105 = distinct !DILexicalBlock(scope: !17106, file: !2492, line: 70, column: 2)
!17106 = distinct !DILexicalBlock(scope: !17091, file: !2492, line: 70, column: 2)
!17107 = !DILocation(line: 70, column: 2, scope: !17106)
!17108 = !DILocation(line: 70, column: 2, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17105, file: !2492, line: 70, column: 2)
!17110 = !DILocation(line: 75, column: 14, scope: !17091)
!17111 = !DILocation(line: 79, column: 2, scope: !17091)
!17112 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2492, file: !2492, line: 12, type: !17113, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17115)
!17113 = !DISubroutineType(types: !17114)
!17114 = !{!117, !17080, !315, !315}
!17115 = !{!17116, !17117, !17118, !17119, !17120, !17121}
!17116 = !DILocalVariable(name: "heap", arg: 1, scope: !17112, file: !2492, line: 12, type: !17080)
!17117 = !DILocalVariable(name: "align", arg: 2, scope: !17112, file: !2492, line: 12, type: !315)
!17118 = !DILocalVariable(name: "size", arg: 3, scope: !17112, file: !2492, line: 12, type: !315)
!17119 = !DILocalVariable(name: "mem", scope: !17112, file: !2492, line: 14, type: !117)
!17120 = !DILocalVariable(name: "heap_ref", scope: !17112, file: !2492, line: 15, type: !17079)
!17121 = !DILocalVariable(name: "__align", scope: !17112, file: !2492, line: 16, type: !315)
!17122 = !DILocation(line: 0, scope: !17112)
!17123 = !DILocation(line: 24, column: 6, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17112, file: !2492, line: 24, column: 6)
!17125 = !DILocation(line: 24, column: 6, scope: !17112)
!17126 = !DILocation(line: 27, column: 18, scope: !17112)
!17127 = !DILocation(line: 29, column: 44, scope: !17112)
!17128 = !DILocation(line: 29, column: 8, scope: !17112)
!17129 = !DILocation(line: 30, column: 10, scope: !17130)
!17130 = distinct !DILexicalBlock(scope: !17112, file: !2492, line: 30, column: 6)
!17131 = !DILocation(line: 30, column: 6, scope: !17112)
!17132 = !DILocation(line: 34, column: 13, scope: !17112)
!17133 = !DILocation(line: 35, column: 12, scope: !17112)
!17134 = !DILocation(line: 36, column: 8, scope: !17112)
!17135 = !DILocation(line: 37, column: 2, scope: !17136)
!17136 = distinct !DILexicalBlock(scope: !17137, file: !2492, line: 37, column: 2)
!17137 = distinct !DILexicalBlock(scope: !17112, file: !2492, line: 37, column: 2)
!17138 = !DILocation(line: 37, column: 2, scope: !17137)
!17139 = !DILocation(line: 37, column: 2, scope: !17140)
!17140 = distinct !DILexicalBlock(scope: !17136, file: !2492, line: 37, column: 2)
!17141 = !DILocation(line: 41, column: 1, scope: !17112)
!17142 = distinct !DISubprogram(name: "size_add_overflow", scope: !17143, file: !17143, line: 47, type: !17144, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17146)
!17143 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17144 = !DISubroutineType(types: !17145)
!17145 = !{!146, !315, !315, !2632}
!17146 = !{!17147, !17148, !17149}
!17147 = !DILocalVariable(name: "a", arg: 1, scope: !17142, file: !17143, line: 47, type: !315)
!17148 = !DILocalVariable(name: "b", arg: 2, scope: !17142, file: !17143, line: 47, type: !315)
!17149 = !DILocalVariable(name: "result", arg: 3, scope: !17142, file: !17143, line: 47, type: !2632)
!17150 = !DILocation(line: 0, scope: !17142)
!17151 = !DILocation(line: 49, column: 9, scope: !17142)
!17152 = !DILocation(line: 49, column: 2, scope: !17142)
!17153 = distinct !DISubprogram(name: "k_malloc", scope: !2492, file: !2492, line: 82, type: !13515, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17154)
!17154 = !{!17155, !17156}
!17155 = !DILocalVariable(name: "size", arg: 1, scope: !17153, file: !2492, line: 82, type: !315)
!17156 = !DILocalVariable(name: "ret", scope: !17153, file: !2492, line: 86, type: !117)
!17157 = !DILocation(line: 0, scope: !17153)
!17158 = !DILocation(line: 86, column: 14, scope: !17153)
!17159 = !DILocation(line: 90, column: 2, scope: !17153)
!17160 = distinct !DISubprogram(name: "k_calloc", scope: !2492, file: !2492, line: 93, type: !17092, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17161)
!17161 = !{!17162, !17163, !17164, !17165}
!17162 = !DILocalVariable(name: "nmemb", arg: 1, scope: !17160, file: !2492, line: 93, type: !315)
!17163 = !DILocalVariable(name: "size", arg: 2, scope: !17160, file: !2492, line: 93, type: !315)
!17164 = !DILocalVariable(name: "ret", scope: !17160, file: !2492, line: 95, type: !117)
!17165 = !DILocalVariable(name: "bounds", scope: !17160, file: !2492, line: 96, type: !315)
!17166 = !DILocation(line: 0, scope: !17160)
!17167 = !DILocation(line: 96, column: 2, scope: !17160)
!17168 = !DILocation(line: 100, column: 6, scope: !17169)
!17169 = distinct !DILexicalBlock(scope: !17160, file: !2492, line: 100, column: 6)
!17170 = !DILocation(line: 100, column: 6, scope: !17160)
!17171 = !DILocation(line: 106, column: 17, scope: !17160)
!17172 = !DILocation(line: 106, column: 8, scope: !17160)
!17173 = !DILocation(line: 107, column: 10, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17160, file: !2492, line: 107, column: 6)
!17175 = !DILocation(line: 107, column: 6, scope: !17160)
!17176 = !DILocation(line: 108, column: 9, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17174, file: !2492, line: 107, column: 19)
!17178 = !DILocation(line: 109, column: 2, scope: !17177)
!17179 = !DILocation(line: 114, column: 1, scope: !17160)
!17180 = distinct !DISubprogram(name: "size_mul_overflow", scope: !17143, file: !17143, line: 105, type: !17144, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17181)
!17181 = !{!17182, !17183, !17184}
!17182 = !DILocalVariable(name: "a", arg: 1, scope: !17180, file: !17143, line: 105, type: !315)
!17183 = !DILocalVariable(name: "b", arg: 2, scope: !17180, file: !17143, line: 105, type: !315)
!17184 = !DILocalVariable(name: "result", arg: 3, scope: !17180, file: !17143, line: 105, type: !2632)
!17185 = !DILocation(line: 0, scope: !17180)
!17186 = !DILocation(line: 107, column: 9, scope: !17180)
!17187 = !DILocation(line: 107, column: 2, scope: !17180)
!17188 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2492, file: !2492, line: 116, type: !17189, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17261)
!17189 = !DISubroutineType(types: !17190)
!17190 = !{null, !17191}
!17191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17192, size: 32)
!17192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !17193)
!17193 = !{!17194, !17234, !17246, !17247, !17248, !17249, !17255, !17256}
!17194 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !17192, file: !225, line: 247, baseType: !17195, size: 384)
!17195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !17196)
!17196 = !{!17197, !17208, !17210, !17211, !17212, !17221, !17222, !17223}
!17197 = !DIDerivedType(tag: DW_TAG_member, scope: !17195, file: !225, line: 60, baseType: !17198, size: 64)
!17198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17195, file: !225, line: 60, size: 64, elements: !17199)
!17199 = !{!17200, !17202}
!17200 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !17198, file: !225, line: 61, baseType: !17201, size: 64)
!17201 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2507)
!17202 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !17198, file: !225, line: 62, baseType: !17203, size: 64)
!17203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !17204)
!17204 = !{!17205}
!17205 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !17203, file: !251, line: 50, baseType: !17206, size: 64)
!17206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17207, size: 64, elements: !256)
!17207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17203, size: 32)
!17208 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !17195, file: !225, line: 68, baseType: !17209, size: 32, offset: 64)
!17209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!17210 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !17195, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!17211 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !17195, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!17212 = !DIDerivedType(tag: DW_TAG_member, scope: !17195, file: !225, line: 90, baseType: !17213, size: 16, offset: 112)
!17213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17195, file: !225, line: 90, size: 16, elements: !17214)
!17214 = !{!17215, !17220}
!17215 = !DIDerivedType(tag: DW_TAG_member, scope: !17213, file: !225, line: 91, baseType: !17216, size: 16)
!17216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17213, file: !225, line: 91, size: 16, elements: !17217)
!17217 = !{!17218, !17219}
!17218 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !17216, file: !225, line: 96, baseType: !275, size: 8)
!17219 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !17216, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!17220 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !17213, file: !225, line: 100, baseType: !279, size: 16)
!17221 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !17195, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!17222 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !17195, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!17223 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !17195, file: !225, line: 131, baseType: !17224, size: 192, offset: 192)
!17224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !17225)
!17225 = !{!17226, !17227, !17233}
!17226 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !17224, file: !261, line: 245, baseType: !17201, size: 64)
!17227 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !17224, file: !261, line: 246, baseType: !17228, size: 32, offset: 64)
!17228 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !17229)
!17229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17230, size: 32)
!17230 = !DISubroutineType(types: !17231)
!17231 = !{null, !17232}
!17232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17224, size: 32)
!17233 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !17224, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!17234 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !17192, file: !225, line: 250, baseType: !17235, size: 288, offset: 384)
!17235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !17236)
!17236 = !{!17237, !17238, !17239, !17240, !17241, !17242, !17243, !17244, !17245}
!17237 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !17235, file: !296, line: 26, baseType: !156, size: 32)
!17238 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !17235, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!17239 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !17235, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!17240 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !17235, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!17241 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !17235, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!17242 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !17235, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!17243 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !17235, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!17244 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !17235, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!17245 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !17235, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!17246 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !17192, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!17247 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !17192, file: !225, line: 256, baseType: !2502, size: 64, offset: 704)
!17248 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !17192, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!17249 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !17192, file: !225, line: 300, baseType: !17250, size: 96, offset: 800)
!17250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !17251)
!17251 = !{!17252, !17253, !17254}
!17252 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !17250, file: !225, line: 153, baseType: !22, size: 32)
!17253 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !17250, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!17254 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !17250, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!17255 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !17192, file: !225, line: 325, baseType: !17080, size: 32, offset: 896)
!17256 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !17192, file: !225, line: 343, baseType: !17257, size: 64, offset: 928)
!17257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !17258)
!17258 = !{!17259, !17260}
!17259 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !17257, file: !296, line: 63, baseType: !156, size: 32)
!17260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !17257, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!17261 = !{!17262}
!17262 = !DILocalVariable(name: "thread", arg: 1, scope: !17188, file: !2492, line: 116, type: !17191)
!17263 = !DILocation(line: 0, scope: !17188)
!17264 = !DILocation(line: 118, column: 10, scope: !17188)
!17265 = !DILocation(line: 118, column: 24, scope: !17188)
!17266 = !DILocation(line: 119, column: 1, scope: !17188)
!17267 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2492, file: !2492, line: 124, type: !17092, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17268)
!17268 = !{!17269, !17270, !17271, !17272}
!17269 = !DILocalVariable(name: "align", arg: 1, scope: !17267, file: !2492, line: 124, type: !315)
!17270 = !DILocalVariable(name: "size", arg: 2, scope: !17267, file: !2492, line: 124, type: !315)
!17271 = !DILocalVariable(name: "ret", scope: !17267, file: !2492, line: 126, type: !117)
!17272 = !DILocalVariable(name: "heap", scope: !17267, file: !2492, line: 127, type: !17080)
!17273 = !DILocation(line: 0, scope: !17267)
!17274 = !DILocation(line: 129, column: 6, scope: !17275)
!17275 = distinct !DILexicalBlock(scope: !17267, file: !2492, line: 129, column: 6)
!17276 = !DILocation(line: 129, column: 6, scope: !17267)
!17277 = !DILocation(line: 132, column: 10, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17275, file: !2492, line: 131, column: 9)
!17279 = !DILocation(line: 132, column: 20, scope: !17278)
!17280 = !DILocation(line: 135, column: 11, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17267, file: !2492, line: 135, column: 6)
!17282 = !DILocation(line: 135, column: 6, scope: !17267)
!17283 = !DILocation(line: 136, column: 9, scope: !17284)
!17284 = distinct !DILexicalBlock(scope: !17281, file: !2492, line: 135, column: 20)
!17285 = !DILocation(line: 137, column: 2, scope: !17284)
!17286 = !DILocation(line: 0, scope: !17281)
!17287 = !DILocation(line: 141, column: 2, scope: !17267)
!17288 = distinct !DISubprogram(name: "main", scope: !17289, file: !17289, line: 27, type: !365, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !2149)
!17289 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17290 = !DILocation(line: 38, column: 2, scope: !17291, inlinedAt: !17292)
!17291 = distinct !DISubprogram(name: "arch_nop", scope: !17046, file: !17046, line: 36, type: !365, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !2149)
!17292 = distinct !DILocation(line: 31, column: 2, scope: !17288)
!17293 = !{i64 2040880}
!17294 = !DILocation(line: 36, column: 1, scope: !17288)
!17295 = distinct !DISubprogram(name: "boot_banner", scope: !17296, file: !17296, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !2149)
!17296 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17297 = !DILocation(line: 34, column: 2, scope: !17295)
!17298 = !DILocation(line: 36, column: 1, scope: !17295)
!17299 = distinct !DISubprogram(name: "statics_init", scope: !2548, file: !2548, line: 21, type: !2554, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17300)
!17300 = !{!17301, !17302}
!17301 = !DILocalVariable(name: "unused", arg: 1, scope: !17299, file: !2548, line: 21, type: !2556)
!17302 = !DILocalVariable(name: "h", scope: !17303, file: !2548, line: 24, type: !17304)
!17303 = distinct !DILexicalBlock(scope: !17299, file: !2548, line: 24, column: 2)
!17304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17305, size: 32)
!17305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !17306)
!17306 = !{!17307, !17313, !17319}
!17307 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17305, file: !220, line: 5074, baseType: !17308, size: 96)
!17308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !17309)
!17309 = !{!17310, !17311, !17312}
!17310 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17308, file: !324, line: 57, baseType: !327, size: 32)
!17311 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17308, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!17312 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17308, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!17313 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17305, file: !220, line: 5075, baseType: !17314, size: 64, offset: 96)
!17314 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !17315)
!17315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !17316)
!17316 = !{!17317}
!17317 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17315, file: !261, line: 232, baseType: !17318, size: 64)
!17318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2534)
!17319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17305, file: !220, line: 5076, baseType: !17320, size: 32, offset: 160)
!17320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !17321)
!17321 = !{!17322}
!17322 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !17320, file: !334, line: 52, baseType: !22, size: 32)
!17323 = !DILocation(line: 0, scope: !17299)
!17324 = !DILocation(line: 0, scope: !17303)
!17325 = !DILocation(line: 24, column: 2, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17327, file: !2548, line: 24, column: 2)
!17327 = distinct !DILexicalBlock(scope: !17328, file: !2548, line: 24, column: 2)
!17328 = distinct !DILexicalBlock(scope: !17303, file: !2548, line: 24, column: 2)
!17329 = !DILocation(line: 24, column: 2, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17331, file: !2548, line: 24, column: 2)
!17331 = distinct !DILexicalBlock(scope: !17326, file: !2548, line: 24, column: 2)
!17332 = !DILocation(line: 24, column: 2, scope: !17327)
!17333 = !DILocation(line: 24, column: 2, scope: !17303)
!17334 = !DILocation(line: 52, column: 2, scope: !17299)
!17335 = !DILocation(line: 49, column: 27, scope: !17336)
!17336 = distinct !DILexicalBlock(scope: !17337, file: !2548, line: 48, column: 3)
!17337 = distinct !DILexicalBlock(scope: !17328, file: !2548, line: 24, column: 36)
!17338 = !DILocation(line: 49, column: 45, scope: !17336)
!17339 = !DILocation(line: 49, column: 4, scope: !17336)
!17340 = !DILocation(line: 24, column: 2, scope: !17328)
!17341 = !DILocation(line: 24, column: 2, scope: !17331)
!17342 = distinct !{!17342, !17333, !17343}
!17343 = !DILocation(line: 51, column: 2, scope: !17303)
!17344 = distinct !DISubprogram(name: "k_heap_init", scope: !2548, file: !2548, line: 13, type: !17345, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17347)
!17345 = !DISubroutineType(types: !17346)
!17346 = !{null, !17304, !117, !315}
!17347 = !{!17348, !17349, !17350}
!17348 = !DILocalVariable(name: "h", arg: 1, scope: !17344, file: !2548, line: 13, type: !17304)
!17349 = !DILocalVariable(name: "mem", arg: 2, scope: !17344, file: !2548, line: 13, type: !117)
!17350 = !DILocalVariable(name: "bytes", arg: 3, scope: !17344, file: !2548, line: 13, type: !315)
!17351 = !DILocation(line: 0, scope: !17344)
!17352 = !DILocation(line: 15, column: 19, scope: !17344)
!17353 = !DILocation(line: 15, column: 2, scope: !17344)
!17354 = !DILocation(line: 16, column: 20, scope: !17344)
!17355 = !DILocation(line: 16, column: 2, scope: !17344)
!17356 = !DILocation(line: 19, column: 1, scope: !17344)
!17357 = distinct !DISubprogram(name: "z_waitq_init", scope: !12740, file: !12740, line: 47, type: !17358, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17361)
!17358 = !DISubroutineType(types: !17359)
!17359 = !{null, !17360}
!17360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17314, size: 32)
!17361 = !{!17362}
!17362 = !DILocalVariable(name: "w", arg: 1, scope: !17357, file: !12740, line: 47, type: !17360)
!17363 = !DILocation(line: 0, scope: !17357)
!17364 = !DILocation(line: 49, column: 21, scope: !17357)
!17365 = !DILocation(line: 49, column: 2, scope: !17357)
!17366 = !DILocation(line: 50, column: 1, scope: !17357)
!17367 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !17368, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17371)
!17368 = !DISubroutineType(types: !17369)
!17369 = !{null, !17370}
!17370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17318, size: 32)
!17371 = !{!17372}
!17372 = !DILocalVariable(name: "list", arg: 1, scope: !17367, file: !235, line: 197, type: !17370)
!17373 = !DILocation(line: 0, scope: !17367)
!17374 = !DILocation(line: 199, column: 8, scope: !17367)
!17375 = !DILocation(line: 199, column: 13, scope: !17367)
!17376 = !DILocation(line: 200, column: 8, scope: !17367)
!17377 = !DILocation(line: 200, column: 13, scope: !17367)
!17378 = !DILocation(line: 201, column: 1, scope: !17367)
!17379 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2548, file: !2548, line: 64, type: !17380, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17386)
!17380 = !DISubroutineType(types: !17381)
!17381 = !{!117, !17304, !315, !315, !17382}
!17382 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !17383)
!17383 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !17384)
!17384 = !{!17385}
!17385 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17383, file: !114, line: 66, baseType: !113, size: 64)
!17386 = !{!17387, !17388, !17389, !17390, !17391, !17392, !17393, !17394, !17399}
!17387 = !DILocalVariable(name: "h", arg: 1, scope: !17379, file: !2548, line: 64, type: !17304)
!17388 = !DILocalVariable(name: "align", arg: 2, scope: !17379, file: !2548, line: 64, type: !315)
!17389 = !DILocalVariable(name: "bytes", arg: 3, scope: !17379, file: !2548, line: 64, type: !315)
!17390 = !DILocalVariable(name: "timeout", arg: 4, scope: !17379, file: !2548, line: 65, type: !17382)
!17391 = !DILocalVariable(name: "now", scope: !17379, file: !2548, line: 67, type: !115)
!17392 = !DILocalVariable(name: "end", scope: !17379, file: !2548, line: 67, type: !115)
!17393 = !DILocalVariable(name: "ret", scope: !17379, file: !2548, line: 68, type: !117)
!17394 = !DILocalVariable(name: "key", scope: !17379, file: !2548, line: 72, type: !17395)
!17395 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !17396)
!17396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !17397)
!17397 = !{!17398}
!17398 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17396, file: !334, line: 33, baseType: !118, size: 32)
!17399 = !DILocalVariable(name: "blocked_alloc", scope: !17379, file: !2548, line: 78, type: !146)
!17400 = !DILocation(line: 0, scope: !17379)
!17401 = !DILocation(line: 67, column: 21, scope: !17379)
!17402 = !DILocation(line: 70, column: 8, scope: !17379)
!17403 = !DILocation(line: 72, column: 41, scope: !17379)
!17404 = !DILocalVariable(name: "l", arg: 1, scope: !17405, file: !334, line: 136, type: !17408)
!17405 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !17406, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17409)
!17406 = !DISubroutineType(types: !17407)
!17407 = !{!17395, !17408}
!17408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17320, size: 32)
!17409 = !{!17404, !17410}
!17410 = !DILocalVariable(name: "k", scope: !17405, file: !334, line: 139, type: !17395)
!17411 = !DILocation(line: 0, scope: !17405, inlinedAt: !17412)
!17412 = distinct !DILocation(line: 72, column: 25, scope: !17379)
!17413 = !DILocation(line: 55, column: 2, scope: !17414, inlinedAt: !17418)
!17414 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6191, file: !6191, line: 42, type: !6192, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17415)
!17415 = !{!17416, !17417}
!17416 = !DILocalVariable(name: "key", scope: !17414, file: !6191, line: 44, type: !32)
!17417 = !DILocalVariable(name: "tmp", scope: !17414, file: !6191, line: 53, type: !32)
!17418 = distinct !DILocation(line: 145, column: 10, scope: !17405, inlinedAt: !17412)
!17419 = !{i64 2040023}
!17420 = !DILocation(line: 0, scope: !17414, inlinedAt: !17418)
!17421 = !DILocation(line: 148, column: 2, scope: !17422, inlinedAt: !17412)
!17422 = distinct !DILexicalBlock(scope: !17423, file: !334, line: 148, column: 2)
!17423 = distinct !DILexicalBlock(scope: !17405, file: !334, line: 148, column: 2)
!17424 = !DILocation(line: 148, column: 2, scope: !17423, inlinedAt: !17412)
!17425 = !DILocation(line: 148, column: 2, scope: !17426, inlinedAt: !17412)
!17426 = distinct !DILexicalBlock(scope: !17422, file: !334, line: 148, column: 2)
!17427 = !DILocation(line: 160, column: 2, scope: !17405, inlinedAt: !17412)
!17428 = !DILocation(line: 1031, column: 3, scope: !17429, inlinedAt: !17432)
!17429 = distinct !DISubprogram(name: "__get_IPSR", scope: !6365, file: !6365, line: 1027, type: !6452, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17430)
!17430 = !{!17431}
!17431 = !DILocalVariable(name: "result", scope: !17429, file: !6365, line: 1029, type: !156)
!17432 = distinct !DILocation(line: 48, column: 10, scope: !17433, inlinedAt: !17434)
!17433 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7191, file: !7191, line: 46, type: !7192, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !2149)
!17434 = distinct !DILocation(line: 76, column: 2, scope: !17435)
!17435 = distinct !DILexicalBlock(scope: !17436, file: !2548, line: 76, column: 2)
!17436 = distinct !DILexicalBlock(scope: !17379, file: !2548, line: 76, column: 2)
!17437 = !{i64 2914598}
!17438 = !DILocation(line: 0, scope: !17429, inlinedAt: !17432)
!17439 = !DILocation(line: 48, column: 9, scope: !17433, inlinedAt: !17434)
!17440 = !DILocation(line: 76, column: 2, scope: !17435)
!17441 = !DILocation(line: 81, column: 9, scope: !17442)
!17442 = distinct !DILexicalBlock(scope: !17379, file: !2548, line: 80, column: 22)
!17443 = !DILocation(line: 83, column: 9, scope: !17442)
!17444 = !DILocation(line: 85, column: 12, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17442, file: !2548, line: 84, column: 7)
!17446 = !DILocation(line: 85, column: 21, scope: !17445)
!17447 = !DILocation(line: 76, column: 2, scope: !17448)
!17448 = distinct !DILexicalBlock(scope: !17435, file: !2548, line: 76, column: 2)
!17449 = !DILocation(line: 85, column: 30, scope: !17445)
!17450 = !DILocation(line: 85, column: 37, scope: !17445)
!17451 = !DILocation(line: 84, column: 7, scope: !17442)
!17452 = !DILocation(line: 99, column: 10, scope: !17442)
!17453 = !DILocation(line: 0, scope: !17405, inlinedAt: !17454)
!17454 = distinct !DILocation(line: 101, column: 9, scope: !17442)
!17455 = !DILocation(line: 55, column: 2, scope: !17414, inlinedAt: !17456)
!17456 = distinct !DILocation(line: 145, column: 10, scope: !17405, inlinedAt: !17454)
!17457 = !DILocation(line: 0, scope: !17414, inlinedAt: !17456)
!17458 = !DILocation(line: 148, column: 2, scope: !17422, inlinedAt: !17454)
!17459 = !DILocation(line: 148, column: 2, scope: !17423, inlinedAt: !17454)
!17460 = !DILocation(line: 148, column: 2, scope: !17426, inlinedAt: !17454)
!17461 = !DILocation(line: 160, column: 2, scope: !17405, inlinedAt: !17454)
!17462 = distinct !{!17462, !17463, !17464}
!17463 = !DILocation(line: 80, column: 2, scope: !17379)
!17464 = !DILocation(line: 102, column: 2, scope: !17379)
!17465 = !DILocalVariable(name: "key", arg: 2, scope: !17466, file: !334, line: 190, type: !17395)
!17466 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !17467, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17469)
!17467 = !DISubroutineType(types: !17468)
!17468 = !{null, !17408, !17395}
!17469 = !{!17470, !17465}
!17470 = !DILocalVariable(name: "l", arg: 1, scope: !17466, file: !334, line: 189, type: !17408)
!17471 = !DILocation(line: 0, scope: !17466, inlinedAt: !17472)
!17472 = distinct !DILocation(line: 106, column: 2, scope: !17379)
!17473 = !DILocation(line: 194, column: 2, scope: !17474, inlinedAt: !17472)
!17474 = distinct !DILexicalBlock(scope: !17475, file: !334, line: 194, column: 2)
!17475 = distinct !DILexicalBlock(scope: !17466, file: !334, line: 194, column: 2)
!17476 = !DILocation(line: 194, column: 2, scope: !17475, inlinedAt: !17472)
!17477 = !DILocation(line: 194, column: 2, scope: !17478, inlinedAt: !17472)
!17478 = distinct !DILexicalBlock(scope: !17474, file: !334, line: 194, column: 2)
!17479 = !DILocalVariable(name: "key", arg: 1, scope: !17480, file: !6191, line: 84, type: !32)
!17480 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6191, file: !6191, line: 84, type: !6202, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17481)
!17481 = !{!17479}
!17482 = !DILocation(line: 0, scope: !17480, inlinedAt: !17483)
!17483 = distinct !DILocation(line: 215, column: 2, scope: !17466, inlinedAt: !17472)
!17484 = !DILocation(line: 95, column: 2, scope: !17480, inlinedAt: !17483)
!17485 = !{i64 2040840}
!17486 = !DILocation(line: 107, column: 2, scope: !17379)
!17487 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2548, file: !2548, line: 110, type: !17488, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17490)
!17488 = !DISubroutineType(types: !17489)
!17489 = !{!117, !17304, !315, !17382}
!17490 = !{!17491, !17492, !17493, !17494}
!17491 = !DILocalVariable(name: "h", arg: 1, scope: !17487, file: !2548, line: 110, type: !17304)
!17492 = !DILocalVariable(name: "bytes", arg: 2, scope: !17487, file: !2548, line: 110, type: !315)
!17493 = !DILocalVariable(name: "timeout", arg: 3, scope: !17487, file: !2548, line: 110, type: !17382)
!17494 = !DILocalVariable(name: "ret", scope: !17487, file: !2548, line: 114, type: !117)
!17495 = !DILocation(line: 0, scope: !17487)
!17496 = !DILocation(line: 114, column: 14, scope: !17487)
!17497 = !DILocation(line: 118, column: 2, scope: !17487)
!17498 = distinct !DISubprogram(name: "k_heap_free", scope: !2548, file: !2548, line: 121, type: !17499, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !17501)
!17499 = !DISubroutineType(types: !17500)
!17500 = !{null, !17304, !117}
!17501 = !{!17502, !17503, !17504}
!17502 = !DILocalVariable(name: "h", arg: 1, scope: !17498, file: !2548, line: 121, type: !17304)
!17503 = !DILocalVariable(name: "mem", arg: 2, scope: !17498, file: !2548, line: 121, type: !117)
!17504 = !DILocalVariable(name: "key", scope: !17498, file: !2548, line: 123, type: !17395)
!17505 = !DILocation(line: 0, scope: !17498)
!17506 = !DILocation(line: 123, column: 41, scope: !17498)
!17507 = !DILocation(line: 0, scope: !17405, inlinedAt: !17508)
!17508 = distinct !DILocation(line: 123, column: 25, scope: !17498)
!17509 = !DILocation(line: 55, column: 2, scope: !17414, inlinedAt: !17510)
!17510 = distinct !DILocation(line: 145, column: 10, scope: !17405, inlinedAt: !17508)
!17511 = !DILocation(line: 0, scope: !17414, inlinedAt: !17510)
!17512 = !DILocation(line: 148, column: 2, scope: !17422, inlinedAt: !17508)
!17513 = !DILocation(line: 148, column: 2, scope: !17423, inlinedAt: !17508)
!17514 = !DILocation(line: 148, column: 2, scope: !17426, inlinedAt: !17508)
!17515 = !DILocation(line: 160, column: 2, scope: !17405, inlinedAt: !17508)
!17516 = !DILocation(line: 125, column: 20, scope: !17498)
!17517 = !DILocation(line: 125, column: 2, scope: !17498)
!17518 = !DILocation(line: 128, column: 60, scope: !17519)
!17519 = distinct !DILexicalBlock(scope: !17498, file: !2548, line: 128, column: 6)
!17520 = !DILocation(line: 128, column: 43, scope: !17519)
!17521 = !DILocation(line: 128, column: 68, scope: !17519)
!17522 = !DILocation(line: 128, column: 6, scope: !17498)
!17523 = !DILocation(line: 129, column: 3, scope: !17524)
!17524 = distinct !DILexicalBlock(scope: !17519, file: !2548, line: 128, column: 74)
!17525 = !DILocation(line: 130, column: 2, scope: !17524)
!17526 = !DILocation(line: 0, scope: !17466, inlinedAt: !17527)
!17527 = distinct !DILocation(line: 131, column: 3, scope: !17528)
!17528 = distinct !DILexicalBlock(scope: !17519, file: !2548, line: 130, column: 9)
!17529 = !DILocation(line: 194, column: 2, scope: !17474, inlinedAt: !17527)
!17530 = !DILocation(line: 194, column: 2, scope: !17475, inlinedAt: !17527)
!17531 = !DILocation(line: 194, column: 2, scope: !17478, inlinedAt: !17527)
!17532 = !DILocation(line: 0, scope: !17480, inlinedAt: !17533)
!17533 = distinct !DILocation(line: 215, column: 2, scope: !17466, inlinedAt: !17527)
!17534 = !DILocation(line: 95, column: 2, scope: !17480, inlinedAt: !17533)
!17535 = !DILocation(line: 133, column: 1, scope: !17498)
