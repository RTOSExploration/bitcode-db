; ModuleID = 'build/96b_carbon/condvar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236369 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236349 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236339 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236439 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236429 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236419 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236409 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236399 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236389 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236379 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237728 to i8*), void (i8*)* inttoptr (i32 134236359 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [47 x i8*] [i8* bitcast (%struct.k_mutex* @count_mutex to i8*), i8* bitcast (%struct.k_condvar* @count_threshold_cv to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@count_mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.count_mutex", align 4, !dbg !25
@count_threshold_cv = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.count_threshold_cv", align 4, !dbg !114
@count = internal unnamed_addr global i32 0, align 4, !dbg !141
@.str = private unnamed_addr constant [47 x i8] c"%s: thread %ld, count = %d  Threshold reached.\00", align 1
@__func__.inc_count = private unnamed_addr constant [10 x i8] c"inc_count\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Just sent signal.\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"%s: thread %ld, count = %d, unlocking mutex\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Starting %s: thread %ld\0A\00", align 1
@__func__.watch_count = private unnamed_addr constant [12 x i8] c"watch_count\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"%s: thread %ld Count= %d. Going into wait...\0A\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"%s: thread %ld Condition signal received. Count= %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"%s: thread %ld Updating the value of count...\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"%s: thread %ld count now = %d.\0A\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"%s: thread %ld Unlocking mutex.\0A\00", align 1
@t = internal global [3 x %struct.k_thread] zeroinitializer, align 8, !dbg !154
@tstacks = dso_local global [3 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !143
@.str.9 = private unnamed_addr constant [77 x i8] c"Main(): Waited and joined with %d threads. Final value of count = %d. Done.\0A\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.12 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.13 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.14 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.15 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.16 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.17 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.18 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.19 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.20 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.21 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.26 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !356
@.str.35 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.37 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.38 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.36 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.40 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.39 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.42 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.44 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.45 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.47 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.48 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.49 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.53 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.54 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.55 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.66 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.58 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.59 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.60 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.61 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.62 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.63 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.64 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.65 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26.57 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35.56 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !385
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !519
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.78 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.79 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.80 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.81 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.86 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.87 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !528
@.str.6.88 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.89 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.82 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.83 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !564
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.99, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !574
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !579
@.str.98 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.99 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.102 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.103 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.104 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !599
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !771
@.str.4.100 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !732
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !715
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.100, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !688
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !704
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !734
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !748
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !750
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !752
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !754
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !756
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !758
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !760
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !762
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !764
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !766
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !776
@.str.105 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !805
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !902
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !891
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !943
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !796
@.str.114 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1009
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1288
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1258
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1244
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1186
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !794
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1290
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1262
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1260
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1200
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !792
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1303
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1266
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1264
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1209
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !790
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1305
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1270
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1268
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1218
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !788
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1307
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1274
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1272
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1224
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !786
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1309
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1278
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1276
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1230
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !784
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1311
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1282
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1280
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1236
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !782
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1313
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1286
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1284
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1242
@.str.8.115 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.121 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.117 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.120 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.116 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.118 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.119 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.132 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1315
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !802
@.str.1.135 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1487
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1542
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1481
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1544
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.135, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1460
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1462
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !800
@.str.2.142 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1550
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1483
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1560
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.142, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1471
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1473
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !798
@.str.3.143 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50 }, align 4, !dbg !1562
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1485
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1572
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.143, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1477
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1479
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1531
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1534
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1536
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1539
@.str.4.137 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.5.138 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.6.139 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.7.140 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.8.141 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.9.146 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.10.148 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.11.149 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !875
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1552
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1554
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1556
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1558
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1564
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1566
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1568
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1570
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.12 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1579
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1690
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1692
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1688
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1683
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1657
@.str.153 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.154 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.155 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.156 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.157 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.158 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1694
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1184
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1198
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1207
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1216
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1222
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1228
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1234
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1240
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1784
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1826
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1829
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1836
@.str.190 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.194 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.195 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.196 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.200 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.201 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.202 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.203 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.204 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.199 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.198 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.200, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.201, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.203, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.204, i32 0, i32 0)], align 4
@.str.206 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1843
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2068
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2056
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2063
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2075
@.str.5.212 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2080
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.216 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.222, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.223, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.224, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.225, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.226, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.220, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.227, i32 0, i32 0)], align 4, !dbg !2108
@.str.221 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.222 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.223 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.224 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.225 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.226 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.220 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.227 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2223
@.str.8.219 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.230 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.231 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.232 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.233 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.237 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.238 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.241 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.242 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.251 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.252 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.253 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.258 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.259 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.260 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.261 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.262 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2236
@.str.4.270 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.263 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.264 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.265 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.266 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.267 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2347
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2458
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2461
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2463
@.str.271 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.293 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.278 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.300 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.312 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.281 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.307 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.277 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.317 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.318 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.326 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.327 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.328 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.331 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.272 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.273 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.274 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.275 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.276 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.280 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.297 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.308 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.309 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2065
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2073
@.str.23.321 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.336 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2465
@.str.337 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.338 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.339 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.340 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.341 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.342 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.352 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.353 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.354 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.355 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2490
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2520
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2525
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1930
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2523
@.str.4.356 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.357 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.358 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.362 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.363 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.381 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3114 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3172, !srcloc !3175
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3188, !srcloc !3189
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3200, !srcloc !3201
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3202, !srcloc !3203
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3204, !srcloc !3205
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3206, !srcloc !3207
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3208, !srcloc !3209
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3210, !srcloc !3211
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3212, !srcloc !3213
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3214, !srcloc !3215
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3216, !srcloc !3217
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3218, !srcloc !3219
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3220, !srcloc !3221
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3222, !srcloc !3223
  ret void, !dbg !3224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @inc_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3227 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3231, metadata !DIExpression()), !dbg !3236
  call void @llvm.dbg.value(metadata i8* undef, metadata !3232, metadata !DIExpression()), !dbg !3236
  call void @llvm.dbg.value(metadata i8* undef, metadata !3233, metadata !DIExpression()), !dbg !3236
  %4 = ptrtoint i8* %0 to i32, !dbg !3237
  call void @llvm.dbg.value(metadata i32 %4, metadata !3235, metadata !DIExpression()), !dbg !3236
  call void @llvm.dbg.value(metadata i32 0, metadata !3234, metadata !DIExpression()), !dbg !3236
  br label %5, !dbg !3238

5:                                                ; preds = %3, %12
  %6 = phi i32 [ 0, %3 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3234, metadata !DIExpression()), !dbg !3236
  tail call fastcc void @k_mutex_lock() #24, !dbg !3240
  %7 = load i32, i32* @count, align 4, !dbg !3243
  %8 = add nsw i32 %7, 1, !dbg !3243
  store i32 %8, i32* @count, align 4, !dbg !3243
  %9 = icmp eq i32 %8, 12, !dbg !3244
  br i1 %9, label %10, label %12, !dbg !3246

10:                                               ; preds = %5
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef 12) #25, !dbg !3247
  tail call fastcc void @k_condvar_signal() #24, !dbg !3249
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3250
  %11 = load i32, i32* @count, align 4, !dbg !3251
  br label %12, !dbg !3252

12:                                               ; preds = %10, %5
  %13 = phi i32 [ %11, %10 ], [ %8, %5 ], !dbg !3251
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef %13) #25, !dbg !3253
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3254
  tail call fastcc void @k_sleep([1 x i64] [i64 5000]) #24, !dbg !3255
  %14 = add nuw nsw i32 %6, 1, !dbg !3256
  call void @llvm.dbg.value(metadata i32 %14, metadata !3234, metadata !DIExpression()), !dbg !3236
  %15 = icmp eq i32 %14, 10, !dbg !3257
  br i1 %15, label %16, label %5, !dbg !3238, !llvm.loop !3258

16:                                               ; preds = %12
  ret void, !dbg !3260
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3261 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3272, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3271, metadata !DIExpression()), !dbg !3273
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3274, !srcloc !3276
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3277
  ret void, !dbg !3278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3279 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3284, metadata !DIExpression()), !dbg !3285
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3286, !srcloc !3288
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @count_threshold_cv) #25, !dbg !3289
  ret void, !dbg !3290
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3291 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3295, metadata !DIExpression()), !dbg !3296
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3297, !srcloc !3299
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @count_mutex) #25, !dbg !3300
  ret void, !dbg !3301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3302 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3306, metadata !DIExpression()), !dbg !3307
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3308, !srcloc !3310
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3311
  ret void, !dbg !3312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @watch_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3315, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata i8* undef, metadata !3316, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata i8* undef, metadata !3317, metadata !DIExpression()), !dbg !3319
  %4 = ptrtoint i8* %0 to i32, !dbg !3320
  call void @llvm.dbg.value(metadata i32 %4, metadata !3318, metadata !DIExpression()), !dbg !3319
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3321
  tail call fastcc void @k_mutex_lock() #24, !dbg !3322
  %5 = load i32, i32* @count, align 4, !dbg !3323
  %6 = icmp slt i32 %5, 12, !dbg !3324
  br i1 %6, label %7, label %12, !dbg !3325

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %10, %7 ], [ %5, %3 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %8) #25, !dbg !3326
  tail call fastcc void @k_condvar_wait() #24, !dbg !3328
  %9 = load i32, i32* @count, align 4, !dbg !3329
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %9) #25, !dbg !3330
  %10 = load i32, i32* @count, align 4, !dbg !3323
  %11 = icmp slt i32 %10, 12, !dbg !3324
  br i1 %11, label %7, label %12, !dbg !3325, !llvm.loop !3331

12:                                               ; preds = %7, %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3333
  %13 = load i32, i32* @count, align 4, !dbg !3334
  %14 = add nsw i32 %13, 125, !dbg !3334
  store i32 %14, i32* @count, align 4, !dbg !3334
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %14) #25, !dbg !3335
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3336
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3337
  ret void, !dbg !3338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3339 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3345, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3343, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3344, metadata !DIExpression()), !dbg !3346
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3347, !srcloc !3349
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @count_threshold_cv, %struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3350
  ret void, !dbg !3351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3352 {
  call void @llvm.dbg.value(metadata i32 1, metadata !3354, metadata !DIExpression()), !dbg !3358
  call void @llvm.dbg.value(metadata i32 2, metadata !3355, metadata !DIExpression()), !dbg !3358
  call void @llvm.dbg.value(metadata i32 3, metadata !3356, metadata !DIExpression()), !dbg !3358
  store i32 0, i32* @count, align 4, !dbg !3359
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 0), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 0, i32 0), void (i8*, i8*, i8*)* noundef nonnull @watch_count, i8* noundef nonnull inttoptr (i32 1 to i8*)) #24, !dbg !3360
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 1), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 1, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 2 to i8*)) #24, !dbg !3361
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 2), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 2, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 3 to i8*)) #24, !dbg !3362
  call void @llvm.dbg.value(metadata i32 0, metadata !3357, metadata !DIExpression()), !dbg !3358
  br label %1, !dbg !3363

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3357, metadata !DIExpression()), !dbg !3358
  %3 = getelementptr inbounds [3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 %2, !dbg !3365
  tail call fastcc void @k_thread_join(%struct.k_thread* noundef nonnull %3) #24, !dbg !3368
  %4 = add nuw nsw i32 %2, 1, !dbg !3369
  call void @llvm.dbg.value(metadata i32 %4, metadata !3357, metadata !DIExpression()), !dbg !3358
  %5 = icmp eq i32 %4, 3, !dbg !3370
  br i1 %5, label %6, label %1, !dbg !3363, !llvm.loop !3371

6:                                                ; preds = %1
  %7 = load i32, i32* @count, align 4, !dbg !3373
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.9, i32 0, i32 0), i32 noundef 3, i32 noundef %7) #25, !dbg !3374
  ret void, !dbg !3375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3) unnamed_addr #1 !dbg !3376 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3395, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3386, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3387, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i32 1024, metadata !3388, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !3389, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i8* %3, metadata !3390, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i8* null, metadata !3391, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i8* null, metadata !3392, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i32 10, metadata !3393, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.value(metadata i32 0, metadata !3394, metadata !DIExpression()), !dbg !3396
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3397, !srcloc !3399
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3400
  ret void, !dbg !3401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3402 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3407, metadata !DIExpression()), !dbg !3408
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3406, metadata !DIExpression()), !dbg !3408
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3409, !srcloc !3411
  %2 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !3412
  ret void, !dbg !3413
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3414 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3429, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %0, metadata !3425, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %1, metadata !3426, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %2, metadata !3427, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %3, metadata !3428, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %0, metadata !3430, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %0, metadata !3431, metadata !DIExpression()), !dbg !3492
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3493
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3493
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3434, metadata !DIExpression()), !dbg !3494
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3495
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3495
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3436, metadata !DIExpression()), !dbg !3496
  call void @llvm.dbg.value(metadata i32 0, metadata !3437, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 0, metadata !3438, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 0, metadata !3439, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 -1, metadata !3440, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 0, metadata !3443, metadata !DIExpression()), !dbg !3492
  %12 = and i32 %2, 4, !dbg !3497
  %13 = icmp eq i32 %12, 0, !dbg !3498
  call void @llvm.dbg.value(metadata i1 %13, metadata !3444, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3492
  %14 = lshr i32 %2, 3, !dbg !3499
  %15 = and i32 %14, 7, !dbg !3499
  %16 = add nuw nsw i32 %15, 1, !dbg !3500
  call void @llvm.dbg.value(metadata i32 %16, metadata !3445, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 0, metadata !3446, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %0, metadata !3447, metadata !DIExpression()), !dbg !3492
  %17 = ptrtoint i8* %0 to i32, !dbg !3501
  %18 = and i32 %17, 3, !dbg !3503
  %19 = icmp eq i32 %18, 0, !dbg !3503
  br i1 %19, label %20, label %320, !dbg !3504

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3505
  call void @llvm.dbg.value(metadata i8* %21, metadata !3431, metadata !DIExpression()), !dbg !3492
  %22 = icmp eq i8* %0, null, !dbg !3506
  %23 = and i32 %1, 7, !dbg !3508
  %24 = sub nuw nsw i32 8, %23, !dbg !3508
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3508
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3508
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3508
  call void @llvm.dbg.value(metadata i32 %27, metadata !3426, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %26, metadata !3431, metadata !DIExpression()), !dbg !3492
  br i1 %22, label %33, label %28, !dbg !3509

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3511
  %30 = sub i32 4, %17, !dbg !3511
  %31 = add i32 %30, %29, !dbg !3512
  %32 = icmp ugt i32 %31, %27, !dbg !3513
  br i1 %32, label %320, label %33, !dbg !3514

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3515
  call void @llvm.dbg.value(metadata i8* %34, metadata !3428, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %3, metadata !3442, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 4, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 4, metadata !3432, metadata !DIExpression()), !dbg !3492
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3516

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3429, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %42, metadata !3428, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %43, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %44, metadata !3432, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %45, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %72, metadata !3440, metadata !DIExpression()), !dbg !3492
  br i1 %46, label %73, label %47, !dbg !3517

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3518
  %49 = zext i1 %48 to i32, !dbg !3522
  %50 = add nsw i32 %72, %49, !dbg !3522
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3522
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3522
  call void @llvm.dbg.value(metadata i32 %52, metadata !3432, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %51, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3443, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %50, metadata !3440, metadata !DIExpression()), !dbg !3492
  br label %53, !dbg !3523

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3429, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %40, metadata !3428, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %58, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %57, metadata !3432, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %56, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3443, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %54, metadata !3440, metadata !DIExpression()), !dbg !3492
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3524
  call void @llvm.dbg.value(metadata i8* %60, metadata !3428, metadata !DIExpression()), !dbg !3492
  %61 = load i8, i8* %60, align 1, !dbg !3526
  %62 = icmp eq i8 %61, 0, !dbg !3527
  br i1 %62, label %226, label %63, !dbg !3528, !llvm.loop !3529

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3517

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3532

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3443, metadata !DIExpression()), !dbg !3492
  %75 = add nsw i32 %72, -1, !dbg !3533
  call void @llvm.dbg.value(metadata i32 %75, metadata !3440, metadata !DIExpression()), !dbg !3492
  br label %53, !dbg !3534

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3535

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 4, metadata !3432, metadata !DIExpression()), !dbg !3492
  br label %53, !dbg !3536

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 4, metadata !3432, metadata !DIExpression()), !dbg !3492
  br label %53, !dbg !3537

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3538
  %81 = icmp eq i8 %80, 108, !dbg !3540
  br i1 %81, label %82, label %109, !dbg !3541

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3542
  %84 = load i8, i8* %83, align 1, !dbg !3542
  %85 = icmp eq i8 %84, 108, !dbg !3545
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3546
  %89 = add i32 %88, 7, !dbg !3546
  %90 = and i32 %89, -8, !dbg !3546
  %91 = inttoptr i32 %90 to i8*, !dbg !3546
  %92 = inttoptr i32 %90 to double*, !dbg !3546
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3546
  %94 = load double, double* %92, align 8, !dbg !3546
  call void @llvm.dbg.value(metadata i8* %93, metadata !3429, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 8, metadata !3432, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 8, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata double %94, metadata !3460, metadata !DIExpression()), !dbg !3548
  %95 = ptrtoint i8* %43 to i32, !dbg !3549
  %96 = add i32 %95, 7, !dbg !3549
  %97 = and i32 %96, -8, !dbg !3549
  %98 = inttoptr i32 %97 to i8*, !dbg !3550
  call void @llvm.dbg.value(metadata i8* %98, metadata !3431, metadata !DIExpression()), !dbg !3492
  br i1 %22, label %104, label %99, !dbg !3551

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3552
  %101 = icmp ugt i32 %100, %196, !dbg !3556
  br i1 %101, label %320, label %102, !dbg !3557

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3558
  store double %94, double* %103, align 8, !dbg !3558
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3561
  call void @llvm.dbg.value(metadata i8* %105, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3443, metadata !DIExpression()), !dbg !3492
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3443, metadata !DIExpression()), !dbg !3492
  br label %53, !dbg !3562

107:                                              ; preds = %73, %73
  br label %109, !dbg !3563

108:                                              ; preds = %73
  br label %109, !dbg !3563

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3492
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3492
  call void @llvm.dbg.value(metadata i32 %113, metadata !3432, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %112, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3446, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3443, metadata !DIExpression()), !dbg !3492
  %114 = ptrtoint i8* %43 to i32, !dbg !3563
  %115 = add i32 %114, -1, !dbg !3563
  %116 = add i32 %115, %112, !dbg !3563
  %117 = sub i32 0, %112, !dbg !3563
  %118 = and i32 %116, %117, !dbg !3563
  %119 = inttoptr i32 %118 to i8*, !dbg !3564
  call void @llvm.dbg.value(metadata i8* %119, metadata !3431, metadata !DIExpression()), !dbg !3492
  br i1 %22, label %124, label %120, !dbg !3565

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3567
  %122 = add i32 %121, %118, !dbg !3568
  %123 = icmp ugt i32 %122, %196, !dbg !3569
  br i1 %123, label %320, label %124, !dbg !3570

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3571

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3564
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3572
  call void @llvm.dbg.value(metadata i8* %127, metadata !3429, metadata !DIExpression()), !dbg !3492
  %128 = bitcast i8* %41 to i8**, !dbg !3572
  %129 = load i8*, i8** %128, align 4, !dbg !3572
  call void @llvm.dbg.value(metadata i8* %129, metadata !3442, metadata !DIExpression()), !dbg !3492
  br label %130, !dbg !3573

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3492
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3574
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3492
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3575
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3492
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3492
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3492
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3492
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3492
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3492
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3576
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3429, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %142, metadata !3426, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %141, metadata !3428, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %140, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %139, metadata !3432, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %138, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %137, metadata !3437, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %136, metadata !3445, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %135, metadata !3438, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3443, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %133, metadata !3442, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %132, metadata !3440, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %131, metadata !3439, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.label(metadata !3491), !dbg !3578
  br i1 %22, label %146, label %144, !dbg !3579

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3580
  store i8* %133, i8** %145, align 4, !dbg !3583
  br label %146, !dbg !3584

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3585
  call void @llvm.dbg.value(metadata i32 %147, metadata !3445, metadata !DIExpression()), !dbg !3492
  %148 = icmp sgt i32 %136, 0, !dbg !3586
  br i1 %148, label %152, label %149, !dbg !3587

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3588
  %151 = zext i1 %150 to i32, !dbg !3588
  br label %152, !dbg !3587

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3587
  %154 = icmp eq i32 %153, 0, !dbg !3587
  call void @llvm.dbg.value(metadata i1 %154, metadata !3469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3589
  call void @llvm.dbg.value(metadata i1 %36, metadata !3472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3589
  %155 = or i1 %36, %154, !dbg !3590
  br i1 %155, label %156, label %192, !dbg !3590

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3591
  %158 = sub i32 %157, %17, !dbg !3591
  %159 = lshr i32 %158, 2, !dbg !3592
  call void @llvm.dbg.value(metadata i32 %159, metadata !3473, metadata !DIExpression()), !dbg !3593
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3594
  br i1 %161, label %162, label %163, !dbg !3594

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3596
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.15, i32 0, i32 0)) #25, !dbg !3596
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3596
  unreachable, !dbg !3596

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3601
  br i1 %164, label %165, label %166, !dbg !3603

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.16, i32 0, i32 0)) #25, !dbg !3604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3604
  unreachable, !dbg !3604

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3609

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3610
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3613
  store i8 %168, i8* %169, align 1, !dbg !3614
  %170 = trunc i32 %132 to i8, !dbg !3615
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3616
  store i8 %170, i8* %171, align 1, !dbg !3617
  br i1 %154, label %175, label %172, !dbg !3618

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3619
  store i8 %173, i8* %169, align 1, !dbg !3619
  %174 = add i32 %131, 1, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %174, metadata !3439, metadata !DIExpression()), !dbg !3492
  br label %187, !dbg !3623

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3624
  call void @llvm.dbg.value(metadata i32 %176, metadata !3438, metadata !DIExpression()), !dbg !3492
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3626

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3627
  call void @llvm.dbg.value(metadata i32 %179, metadata !3426, metadata !DIExpression()), !dbg !3492
  br label %187, !dbg !3630

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3631

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3632
  call void @llvm.dbg.value(metadata i32 %182, metadata !3426, metadata !DIExpression()), !dbg !3492
  br label %187, !dbg !3635

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3636
  %185 = add i32 %142, 2, !dbg !3638
  %186 = add i32 %185, %184, !dbg !3639
  call void @llvm.dbg.value(metadata i32 %186, metadata !3426, metadata !DIExpression()), !dbg !3492
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3492
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3492
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3492
  call void @llvm.dbg.value(metadata i32 %190, metadata !3426, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %189, metadata !3438, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %188, metadata !3439, metadata !DIExpression()), !dbg !3492
  %191 = add nuw nsw i32 %137, 1, !dbg !3640
  call void @llvm.dbg.value(metadata i32 %191, metadata !3437, metadata !DIExpression()), !dbg !3492
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3492
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3575
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3492
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3576
  call void @llvm.dbg.value(metadata i32 %196, metadata !3426, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %195, metadata !3437, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %194, metadata !3438, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %193, metadata !3439, metadata !DIExpression()), !dbg !3492
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3641
  call void @llvm.dbg.value(metadata i8* %197, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %143, metadata !3429, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %141, metadata !3428, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %139, metadata !3432, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %138, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3446, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3443, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %132, metadata !3440, metadata !DIExpression()), !dbg !3492
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3524
  call void @llvm.dbg.value(metadata i8* %198, metadata !3428, metadata !DIExpression()), !dbg !3492
  %199 = load i8, i8* %198, align 1, !dbg !3526
  %200 = icmp eq i8 %199, 0, !dbg !3527
  br i1 %200, label %226, label %63, !dbg !3528

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3642

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3643
  call void @llvm.dbg.value(metadata i8* %203, metadata !3429, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 undef, metadata !3476, metadata !DIExpression()), !dbg !3644
  br i1 %22, label %219, label %204, !dbg !3645

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3643
  %206 = load i32, i32* %205, align 4, !dbg !3643
  call void @llvm.dbg.value(metadata i32 %206, metadata !3476, metadata !DIExpression()), !dbg !3644
  %207 = inttoptr i32 %118 to i32*, !dbg !3646
  store i32 %206, i32* %207, align 4, !dbg !3649
  br label %219, !dbg !3650

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3651
  %210 = add i32 %209, 7, !dbg !3651
  %211 = and i32 %210, -8, !dbg !3651
  %212 = inttoptr i32 %211 to i8*, !dbg !3651
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3651
  call void @llvm.dbg.value(metadata i8* %213, metadata !3429, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i64 undef, metadata !3482, metadata !DIExpression()), !dbg !3652
  br i1 %22, label %219, label %214, !dbg !3653

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3651
  %216 = load i64, i64* %215, align 8, !dbg !3651
  call void @llvm.dbg.value(metadata i64 %216, metadata !3482, metadata !DIExpression()), !dbg !3652
  %217 = inttoptr i32 %118 to i64*, !dbg !3654
  store i64 %216, i64* %217, align 8, !dbg !3659
  br label %219, !dbg !3660

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.17, i32 0, i32 0), i32 noundef %113) #25, !dbg !3661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3661
  unreachable, !dbg !3661

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3666
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3666
  call void @llvm.dbg.value(metadata i8* %221, metadata !3429, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %40, metadata !3428, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %222, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %113, metadata !3432, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %112, metadata !3433, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3446, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3443, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %72, metadata !3440, metadata !DIExpression()), !dbg !3492
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3524
  call void @llvm.dbg.value(metadata i8* %223, metadata !3428, metadata !DIExpression()), !dbg !3492
  %224 = load i8, i8* %223, align 1, !dbg !3526
  %225 = icmp eq i8 %224, 0, !dbg !3527
  br i1 %225, label %226, label %38, !dbg !3528

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3667
  %228 = ptrtoint i8* %227 to i32, !dbg !3668
  %229 = sub i32 %228, %17, !dbg !3668
  %230 = lshr i32 %229, 2, !dbg !3670
  %231 = icmp ugt i32 %229, 1023, !dbg !3671
  br i1 %231, label %232, label %233, !dbg !3672

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3673
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.18, i32 0, i32 0)) #25, !dbg !3673
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3673
  unreachable, !dbg !3673

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3678

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3679
  %236 = add i32 %235, %229, !dbg !3682
  br label %320, !dbg !3683

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3684
  store i8 %238, i8* %0, align 1, !dbg !3685
  %239 = trunc i32 %194 to i8, !dbg !3686
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3688
  store i8 %240, i8* %242, align 1, !dbg !3690
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3691
  store i8 %241, i8* %243, align 1, !dbg !3692
  %244 = trunc i32 %193 to i8, !dbg !3693
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3694
  store i8 %244, i8* %245, align 1, !dbg !3695
  %246 = icmp eq i32 %193, 0, !dbg !3696
  %247 = xor i1 %246, true, !dbg !3697
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3697
  call void @llvm.dbg.value(metadata i8* %227, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 0, metadata !3441, metadata !DIExpression()), !dbg !3492
  br i1 %249, label %250, label %269, !dbg !3697

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3698

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %254, metadata !3441, metadata !DIExpression()), !dbg !3492
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3699
  %256 = load i8, i8* %255, align 1, !dbg !3699
  %257 = icmp sgt i8 %256, -1, !dbg !3701
  br i1 %257, label %265, label %258, !dbg !3702

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3485, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3703
  %259 = ptrtoint i8* %253 to i32, !dbg !3704
  %260 = add i32 %251, %259, !dbg !3706
  %261 = icmp ugt i32 %260, %196, !dbg !3707
  br i1 %261, label %320, label %262, !dbg !3708

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3709
  call void @llvm.dbg.value(metadata i8 %263, metadata !3485, metadata !DIExpression()), !dbg !3703
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3710
  call void @llvm.dbg.value(metadata i8* %264, metadata !3431, metadata !DIExpression()), !dbg !3492
  store i8 %263, i8* %253, align 1, !dbg !3711
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3641
  call void @llvm.dbg.value(metadata i8* %266, metadata !3431, metadata !DIExpression()), !dbg !3492
  %267 = add nuw i32 %254, 1, !dbg !3712
  call void @llvm.dbg.value(metadata i32 %267, metadata !3441, metadata !DIExpression()), !dbg !3492
  %268 = icmp eq i32 %267, %195, !dbg !3713
  br i1 %268, label %269, label %252, !dbg !3698, !llvm.loop !3714

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3641
  call void @llvm.dbg.value(metadata i8* %270, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 0, metadata !3441, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %133, metadata !3442, metadata !DIExpression()), !dbg !3492
  %271 = icmp eq i32 %195, 0, !dbg !3716
  br i1 %271, label %316, label %272, !dbg !3719

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3719

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %276, metadata !3442, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %277, metadata !3441, metadata !DIExpression()), !dbg !3492
  br i1 %246, label %282, label %278, !dbg !3720

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3723
  %280 = load i8, i8* %279, align 1, !dbg !3723
  %281 = icmp sgt i8 %280, -1, !dbg !3724
  br i1 %281, label %282, label %311, !dbg !3725

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3726

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3432, metadata !DIExpression()), !dbg !3492
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3727
  %285 = load i8, i8* %284, align 1, !dbg !3727
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3730
  call void @llvm.dbg.value(metadata i8* %286, metadata !3431, metadata !DIExpression()), !dbg !3492
  store i8 %285, i8* %275, align 1, !dbg !3731
  br label %297, !dbg !3732

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3733
  %289 = load i8, i8* %288, align 1, !dbg !3733
  %290 = zext i8 %289 to i32, !dbg !3733
  %291 = shl nuw nsw i32 %290, 2, !dbg !3735
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3736
  %293 = bitcast i8* %292 to i8**, !dbg !3737
  %294 = load i8*, i8** %293, align 4, !dbg !3737
  call void @llvm.dbg.value(metadata i8* %294, metadata !3442, metadata !DIExpression()), !dbg !3492
  store i8* null, i8** %293, align 4, !dbg !3738
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3739
  %296 = add i32 %295, 1, !dbg !3740
  call void @llvm.dbg.value(metadata i32 %296, metadata !3432, metadata !DIExpression()), !dbg !3492
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3492
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3741
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3492
  call void @llvm.dbg.value(metadata i8* %300, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %299, metadata !3432, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %298, metadata !3442, metadata !DIExpression()), !dbg !3492
  %301 = ptrtoint i8* %300 to i32, !dbg !3742
  %302 = add i32 %273, %299, !dbg !3744
  %303 = add i32 %302, %301, !dbg !3745
  %304 = icmp ugt i32 %303, %196, !dbg !3746
  br i1 %304, label %320, label %305, !dbg !3747

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3748
  %307 = load i8, i8* %306, align 1, !dbg !3748
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3749
  call void @llvm.dbg.value(metadata i8* %308, metadata !3431, metadata !DIExpression()), !dbg !3492
  store i8 %307, i8* %300, align 1, !dbg !3750
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3751
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3752
  call void @llvm.dbg.value(metadata i8* %310, metadata !3431, metadata !DIExpression()), !dbg !3492
  br label %311, !dbg !3753

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3754
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3492
  call void @llvm.dbg.value(metadata i8* %313, metadata !3431, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %312, metadata !3442, metadata !DIExpression()), !dbg !3492
  %314 = add nuw i32 %277, 1, !dbg !3755
  call void @llvm.dbg.value(metadata i32 %314, metadata !3441, metadata !DIExpression()), !dbg !3492
  %315 = icmp eq i32 %314, %195, !dbg !3716
  br i1 %315, label %316, label %274, !dbg !3719, !llvm.loop !3756

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3641
  %318 = ptrtoint i8* %317 to i32, !dbg !3758
  %319 = sub i32 %318, %17, !dbg !3758
  br label %320, !dbg !3759

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3760
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3760
  ret i32 %321, !dbg !3760
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3761 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3765, metadata !DIExpression()), !dbg !3766
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3767
  ret i1 %2, !dbg !3768
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3769 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3774, metadata !DIExpression()), !dbg !3775
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3776
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3777
  %4 = and i1 %2, %3, !dbg !3777
  ret i1 %4, !dbg !3778
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3779 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3783, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.value(metadata i32 %1, metadata !3784, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.value(metadata i32 %2, metadata !3785, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.value(metadata i8* %3, metadata !3786, metadata !DIExpression()), !dbg !3789
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3790
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3790
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3787, metadata !DIExpression()), !dbg !3791
  call void @llvm.va_start(i8* nonnull %6), !dbg !3792
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3793
  %8 = load i32, i32* %7, align 4, !dbg !3793
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3793
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3793
  call void @llvm.dbg.value(metadata i32 %10, metadata !3788, metadata !DIExpression()), !dbg !3789
  call void @llvm.va_end(i8* nonnull %6), !dbg !3794
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3795
  ret i32 %10, !dbg !3796
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3797 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3809, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3810, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata i8* %2, metadata !3811, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata i8* %3, metadata !3812, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata i8* %3, metadata !3813, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata i8* %3, metadata !3814, metadata !DIExpression()), !dbg !3828
  %5 = icmp eq i8* %3, null, !dbg !3829
  br i1 %5, label %45, label %6, !dbg !3831

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3823, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3828
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3832
  %8 = load i8, i8* %7, align 1, !dbg !3832
  %9 = zext i8 %8 to i32, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %9, metadata !3824, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata i8 undef, metadata !3825, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3828
  call void @llvm.dbg.value(metadata i8 undef, metadata !3826, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3828
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  call void @llvm.dbg.value(metadata i32 0, metadata !3822, metadata !DIExpression()), !dbg !3828
  %10 = icmp eq i8 %8, 0, !dbg !3834
  br i1 %10, label %39, label %11, !dbg !3837

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3838
  call void @llvm.dbg.value(metadata i8 %12, metadata !3823, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3828
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  %13 = zext i8 %12 to i32, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %13, metadata !3823, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3828
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  %14 = shl nuw nsw i32 %13, 2, !dbg !3840
  call void @llvm.dbg.value(metadata i32 %14, metadata !3823, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3842
  %17 = load i8, i8* %16, align 1, !dbg !3842
  call void @llvm.dbg.value(metadata i8 %17, metadata !3825, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3828
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  %18 = zext i8 %17 to i32, !dbg !3843
  call void @llvm.dbg.value(metadata i32 %18, metadata !3825, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3844
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3845
  %21 = load i8, i8* %20, align 1, !dbg !3845
  call void @llvm.dbg.value(metadata i8 %21, metadata !3826, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3828
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  %22 = zext i8 %21 to i32, !dbg !3846
  call void @llvm.dbg.value(metadata i32 %22, metadata !3826, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  %23 = shl nuw nsw i32 %22, 1, !dbg !3847
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3828
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3848
  call void @llvm.dbg.value(metadata i8* %24, metadata !3820, metadata !DIExpression()), !dbg !3828
  br label %25, !dbg !3837

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3820, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata i32 %27, metadata !3822, metadata !DIExpression()), !dbg !3828
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3849
  call void @llvm.dbg.value(metadata i8* %28, metadata !3820, metadata !DIExpression()), !dbg !3828
  %29 = load i8, i8* %26, align 1, !dbg !3851
  %30 = zext i8 %29 to i32, !dbg !3851
  call void @llvm.dbg.value(metadata i32 %30, metadata !3827, metadata !DIExpression()), !dbg !3828
  %31 = shl nuw nsw i32 %30, 2, !dbg !3852
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3853
  %33 = bitcast i8* %32 to i8**, !dbg !3854
  call void @llvm.dbg.value(metadata i8** %33, metadata !3821, metadata !DIExpression()), !dbg !3828
  store i8* %28, i8** %33, align 4, !dbg !3855
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3856
  %35 = add i32 %34, 1, !dbg !3857
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3858
  call void @llvm.dbg.value(metadata i8* %36, metadata !3820, metadata !DIExpression()), !dbg !3828
  %37 = add nuw nsw i32 %27, 1, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %37, metadata !3822, metadata !DIExpression()), !dbg !3828
  %38 = icmp eq i32 %37, %9, !dbg !3834
  br i1 %38, label %39, label %25, !dbg !3837, !llvm.loop !3860

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3862
  call void @llvm.dbg.value(metadata i8* %40, metadata !3813, metadata !DIExpression()), !dbg !3828
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3863
  %42 = bitcast i8* %41 to i8**, !dbg !3863
  %43 = load i8*, i8** %42, align 1, !dbg !3863
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3864
  br label %45, !dbg !3865

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3828
  ret i32 %46, !dbg !3866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3867 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3871, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3872, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %2, metadata !3873, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %3, metadata !3874, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %4, metadata !3875, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i8* %4, metadata !3876, metadata !DIExpression()), !dbg !3881
  %6 = ptrtoint i8* %4 to i32, !dbg !3882
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3882
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3882
  ret i32 %8, !dbg !3883
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3884 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3888, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i32 %1, metadata !3889, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i8 0, metadata !3891, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i32 0, metadata !3892, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i8 poison, metadata !3891, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i8* %0, metadata !3888, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3893
  %3 = load i8, i8* %0, align 1, !dbg !3894
  call void @llvm.dbg.value(metadata i8 %3, metadata !3890, metadata !DIExpression()), !dbg !3893
  %4 = icmp eq i8 %3, 0, !dbg !3895
  br i1 %4, label %29, label %5, !dbg !3896

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3897
  call void @llvm.dbg.value(metadata i32 %8, metadata !3892, metadata !DIExpression()), !dbg !3893
  br i1 %9, label %11, label %22, !dbg !3898

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3900
  br i1 %12, label %13, label %17, !dbg !3904

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3905
  br i1 %14, label %29, label %15, !dbg !3908

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3909
  br i1 %16, label %29, label %22, !dbg !3911

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3912
  %19 = xor i1 %18, true, !dbg !3914
  %20 = zext i1 %18 to i32, !dbg !3914
  %21 = add nsw i32 %8, %20, !dbg !3914
  br label %22, !dbg !3914

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3893
  call void @llvm.dbg.value(metadata i32 %24, metadata !3892, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i8 poison, metadata !3891, metadata !DIExpression()), !dbg !3893
  %25 = icmp eq i8 %6, 37, !dbg !3915
  %26 = xor i1 %25, %23, !dbg !3917
  call void @llvm.dbg.value(metadata i8* %10, metadata !3888, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i8* %10, metadata !3888, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3893
  %27 = load i8, i8* %10, align 1, !dbg !3894
  call void @llvm.dbg.value(metadata i8 %27, metadata !3890, metadata !DIExpression()), !dbg !3893
  %28 = icmp eq i8 %27, 0, !dbg !3895
  br i1 %28, label %29, label %5, !dbg !3896, !llvm.loop !3918

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3893
  ret i1 %30, !dbg !3920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3921 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3925, metadata !DIExpression()), !dbg !3926
  %2 = add i8 %0, -64, !dbg !3927
  %3 = icmp ult i8 %2, 59, !dbg !3927
  ret i1 %3, !dbg !3928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3929 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3937, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %1, metadata !3938, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3939, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8* %3, metadata !3940, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %4, metadata !3941, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i16* %5, metadata !3942, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %6, metadata !3943, metadata !DIExpression()), !dbg !4006
  %11 = icmp eq i8* %0, null, !dbg !4007
  br i1 %11, label %12, label %13, !dbg !4010

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !4011
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !4011
  unreachable, !dbg !4011

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3944, metadata !DIExpression()), !dbg !4006
  %14 = bitcast i8* %0 to i32*, !dbg !4013
  call void @llvm.dbg.value(metadata i32* %14, metadata !3945, metadata !DIExpression()), !dbg !4006
  %15 = and i32 %4, 8, !dbg !4014
  %16 = icmp eq i32 %15, 0, !dbg !4015
  call void @llvm.dbg.value(metadata i1 %16, metadata !3949, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4006
  call void @llvm.dbg.value(metadata i8* %0, metadata !3952, metadata !DIExpression()), !dbg !4006
  %17 = icmp eq i32 %1, 0, !dbg !4016
  br i1 %17, label %18, label %20, !dbg !4017

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !4018
  br label %20, !dbg !4017

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4017
  call void @llvm.dbg.value(metadata i32 %21, metadata !3938, metadata !DIExpression()), !dbg !4006
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4019
  %23 = load i8, i8* %22, align 1, !dbg !4019
  %24 = zext i8 %23 to i32, !dbg !4020
  call void @llvm.dbg.value(metadata i32 %24, metadata !3947, metadata !DIExpression()), !dbg !4006
  %25 = icmp ne i8 %23, 0, !dbg !4021
  %26 = and i32 %4, 1, !dbg !4022
  %27 = icmp ne i32 %26, 0, !dbg !4022
  %28 = and i1 %27, %25, !dbg !4022
  call void @llvm.dbg.value(metadata i1 %28, metadata !3951, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4006
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4023
  %30 = load i8, i8* %29, align 1, !dbg !4023
  %31 = zext i8 %30 to i32, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %31, metadata !3948, metadata !DIExpression()), !dbg !4006
  %32 = icmp ne i8 %30, 0, !dbg !4025
  %33 = and i32 %4, 2, !dbg !4026
  %34 = icmp ne i32 %33, 0, !dbg !4026
  %35 = and i1 %34, %32, !dbg !4026
  call void @llvm.dbg.value(metadata i1 %35, metadata !3950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4006
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4027
  br i1 %36, label %41, label %37, !dbg !4027

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4029
  br i1 %38, label %287, label %39, !dbg !4032

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !4033
  br label %287, !dbg !4035

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4036
  %43 = zext i8 %42 to i32, !dbg !4037
  %44 = shl nuw nsw i32 %43, 2, !dbg !4038
  call void @llvm.dbg.value(metadata i32 %44, metadata !3946, metadata !DIExpression()), !dbg !4006
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4039
  %46 = bitcast i8* %45 to i8**, !dbg !4040
  %47 = load i8*, i8** %46, align 4, !dbg !4040
  call void @llvm.dbg.value(metadata i8* %47, metadata !3955, metadata !DIExpression()), !dbg !4006
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4041
  call void @llvm.dbg.value(metadata i8* %48, metadata !3956, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 0, metadata !3957, metadata !DIExpression()), !dbg !4006
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4042
  br i1 %49, label %50, label %135, !dbg !4043

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3954, metadata !DIExpression()), !dbg !4006
  br i1 %28, label %51, label %76, !dbg !4044

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3954, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8* %48, metadata !3956, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 0, metadata !3957, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 0, metadata !3958, metadata !DIExpression()), !dbg !4045
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4046

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3954, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8* %55, metadata !3956, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %56, metadata !3957, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %57, metadata !3958, metadata !DIExpression()), !dbg !4045
  %58 = load i8, i8* %55, align 1, !dbg !4047
  %59 = zext i8 %58 to i32, !dbg !4048
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4048
  %61 = bitcast i32* %60 to i8**, !dbg !4049
  %62 = load i8*, i8** %61, align 4, !dbg !4049
  call void @llvm.dbg.value(metadata i8* %62, metadata !3964, metadata !DIExpression()), !dbg !4050
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %63, metadata !3967, metadata !DIExpression()), !dbg !4050
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4052
  br i1 %65, label %66, label %70, !dbg !4052

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4054
  %68 = add nuw i32 %56, 1, !dbg !4056
  call void @llvm.dbg.value(metadata i32 %68, metadata !3957, metadata !DIExpression()), !dbg !4006
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4057
  store i16 %67, i16* %69, align 2, !dbg !4058
  br label %70, !dbg !4059

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4006
  call void @llvm.dbg.value(metadata i32 %71, metadata !3957, metadata !DIExpression()), !dbg !4006
  %72 = add nsw i32 %63, %54, !dbg !4060
  call void @llvm.dbg.value(metadata i32 %72, metadata !3954, metadata !DIExpression()), !dbg !4006
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4061
  call void @llvm.dbg.value(metadata i8* %73, metadata !3956, metadata !DIExpression()), !dbg !4006
  %74 = add nuw nsw i32 %57, 1, !dbg !4062
  call void @llvm.dbg.value(metadata i32 %74, metadata !3958, metadata !DIExpression()), !dbg !4045
  %75 = icmp eq i32 %74, %24, !dbg !4063
  br i1 %75, label %82, label %53, !dbg !4046, !llvm.loop !4064

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4066
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4066
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4066
  br label %82, !dbg !4066

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4069
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4006
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4070
  call void @llvm.dbg.value(metadata i1 undef, metadata !3968, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4071
  call void @llvm.dbg.value(metadata i32 0, metadata !3969, metadata !DIExpression()), !dbg !4072
  call void @llvm.dbg.value(metadata i32 %85, metadata !3954, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8* %84, metadata !3956, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %83, metadata !3957, metadata !DIExpression()), !dbg !4006
  %86 = icmp eq i8 %30, 0, !dbg !4073
  br i1 %86, label %287, label %87, !dbg !4074

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4075
  %89 = icmp eq i32 %88, 0, !dbg !4076
  call void @llvm.dbg.value(metadata i1 %89, metadata !3968, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4071
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4074

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3954, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8* %96, metadata !3956, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %97, metadata !3957, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %98, metadata !3969, metadata !DIExpression()), !dbg !4072
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4077
  call void @llvm.dbg.value(metadata i8* %99, metadata !3956, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8 undef, metadata !3971, metadata !DIExpression()), !dbg !4078
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4079
  call void @llvm.dbg.value(metadata i8* %100, metadata !3956, metadata !DIExpression()), !dbg !4006
  %101 = load i8, i8* %99, align 1, !dbg !4080
  call void @llvm.dbg.value(metadata i8 %101, metadata !3974, metadata !DIExpression()), !dbg !4078
  %102 = zext i8 %101 to i32, !dbg !4081
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4081
  %104 = bitcast i32* %103 to i8**, !dbg !4082
  %105 = load i8*, i8** %104, align 4, !dbg !4082
  call void @llvm.dbg.value(metadata i8* %105, metadata !3975, metadata !DIExpression()), !dbg !4078
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4083
  call void @llvm.dbg.value(metadata i1 %106, metadata !3976, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4078
  br i1 %16, label %113, label %107, !dbg !4084

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4086
  call void @llvm.dbg.value(metadata i8 %108, metadata !3971, metadata !DIExpression()), !dbg !4078
  %109 = zext i8 %108 to i32, !dbg !4087
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4088
  br i1 %110, label %111, label %113, !dbg !4089

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.20, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4090
  %112 = add nsw i32 %95, -2, !dbg !4096
  call void @llvm.dbg.value(metadata i32 %112, metadata !3954, metadata !DIExpression()), !dbg !4006
  br label %130, !dbg !4097

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4098

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4099

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4101
  call void @llvm.dbg.value(metadata i32 %116, metadata !3954, metadata !DIExpression()), !dbg !4006
  br label %130, !dbg !4104

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4105

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4002), !dbg !4106
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %119, metadata !3977, metadata !DIExpression()), !dbg !4078
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4108
  br i1 %121, label %122, label %126, !dbg !4108

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4110
  %124 = add nuw i32 %97, 1, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %124, metadata !3957, metadata !DIExpression()), !dbg !4006
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4113
  store i16 %123, i16* %125, align 2, !dbg !4114
  br label %126, !dbg !4115

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4006
  call void @llvm.dbg.value(metadata i32 %127, metadata !3957, metadata !DIExpression()), !dbg !4006
  %128 = add i32 %95, -1, !dbg !4116
  %129 = add i32 %128, %119, !dbg !4117
  call void @llvm.dbg.value(metadata i32 %129, metadata !3954, metadata !DIExpression()), !dbg !4006
  br label %130, !dbg !4118

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4006
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4078
  call void @llvm.dbg.value(metadata i32 %132, metadata !3954, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %131, metadata !3957, metadata !DIExpression()), !dbg !4006
  %133 = add nuw nsw i32 %98, 1, !dbg !4119
  call void @llvm.dbg.value(metadata i8* %100, metadata !3956, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %133, metadata !3969, metadata !DIExpression()), !dbg !4072
  %134 = icmp eq i32 %133, %31, !dbg !4073
  br i1 %134, label %287, label %94, !dbg !4074, !llvm.loop !4120

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3979, metadata !DIExpression()), !dbg !4122
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3980, metadata !DIExpression()), !dbg !4123
  br i1 %28, label %136, label %138, !dbg !4124

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3981, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8 0, metadata !3982, metadata !DIExpression()), !dbg !4006
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4125
  call void @llvm.dbg.value(metadata i8* %137, metadata !3983, metadata !DIExpression()), !dbg !4006
  br label %143, !dbg !4128

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4129
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4129

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3983, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8 undef, metadata !3982, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8 0, metadata !3981, metadata !DIExpression()), !dbg !4006
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4131
  br label %148, !dbg !4134

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4135
  call void @llvm.dbg.value(metadata i8* %151, metadata !3956, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 0, metadata !3985, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata i8 %149, metadata !3982, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8 %150, metadata !3981, metadata !DIExpression()), !dbg !4006
  %152 = icmp eq i8 %30, 0, !dbg !4137
  br i1 %152, label %153, label %155, !dbg !4138

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4139
  br label %160, !dbg !4138

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4138

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4139
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4140
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4141
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4006
  call void @llvm.dbg.value(metadata i8 undef, metadata !3978, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4006
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4142
  %166 = load i8, i8* %165, align 1, !dbg !4142
  %167 = zext i8 %162 to i32, !dbg !4143
  %168 = add i8 %166, %162, !dbg !4144
  call void @llvm.dbg.value(metadata i8 %168, metadata !3978, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4006
  %169 = icmp eq i32 %33, 0, !dbg !4145
  %170 = lshr i8 %163, 1, !dbg !4146
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4146
  call void @llvm.dbg.value(metadata i8 %171, metadata !3978, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4006
  %172 = icmp eq i32 %26, 0, !dbg !4147
  %173 = icmp eq i32 %161, 0, !dbg !4139
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4139
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4139
  call void @llvm.dbg.value(metadata i8 %175, metadata !3978, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4006
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3993, metadata !DIExpression()), !dbg !4148
  %176 = load i32, i32* %14, align 1, !dbg !4149
  store i8 %168, i8* %165, align 1, !dbg !4150
  store i8 %175, i8* %22, align 1, !dbg !4150
  store i8 %171, i8* %29, align 1, !dbg !4150
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4151
  call void @llvm.dbg.value(metadata i32 %177, metadata !3984, metadata !DIExpression()), !dbg !4006
  %178 = icmp slt i32 %177, 0, !dbg !4152
  br i1 %178, label %287, label %240, !dbg !4154

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3956, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %181, metadata !3985, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata i8 %182, metadata !3982, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8 %183, metadata !3981, metadata !DIExpression()), !dbg !4006
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4155
  call void @llvm.dbg.value(metadata i8* %184, metadata !3956, metadata !DIExpression()), !dbg !4006
  %185 = load i8, i8* %180, align 1, !dbg !4156
  call void @llvm.dbg.value(metadata i8 %185, metadata !3987, metadata !DIExpression()), !dbg !4157
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4158
  call void @llvm.dbg.value(metadata i8* %186, metadata !3956, metadata !DIExpression()), !dbg !4006
  %187 = load i8, i8* %184, align 1, !dbg !4159
  call void @llvm.dbg.value(metadata i8 %187, metadata !3990, metadata !DIExpression()), !dbg !4157
  %188 = zext i8 %187 to i32, !dbg !4160
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4160
  %190 = bitcast i32* %189 to i8**, !dbg !4161
  %191 = load i8*, i8** %190, align 4, !dbg !4161
  call void @llvm.dbg.value(metadata i8* %191, metadata !3991, metadata !DIExpression()), !dbg !4157
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4162
  call void @llvm.dbg.value(metadata i1 %192, metadata !3992, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4157
  br i1 %16, label %196, label %193, !dbg !4163

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4165
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4166
  br i1 %195, label %235, label %196, !dbg !4167

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4168

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4169

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4172
  br i1 %199, label %201, label %200, !dbg !4177

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4178
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4178
  unreachable, !dbg !4178

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4172
  %203 = add nuw nsw i8 %183, 1, !dbg !4180
  call void @llvm.dbg.value(metadata i8 %203, metadata !3981, metadata !DIExpression()), !dbg !4006
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4181
  br label %231, !dbg !4182

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4183

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4184
  br i1 %207, label %209, label %208, !dbg !4189

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4190
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4190
  unreachable, !dbg !4190

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4184
  %211 = add nuw nsw i8 %182, 1, !dbg !4192
  call void @llvm.dbg.value(metadata i8 %211, metadata !3982, metadata !DIExpression()), !dbg !4006
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4193
  br label %231, !dbg !4194

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4195

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4197
  br i1 %215, label %217, label %216, !dbg !4202

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4203
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4203
  unreachable, !dbg !4203

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4197
  %219 = add nuw nsw i8 %183, 1, !dbg !4205
  call void @llvm.dbg.value(metadata i8 %219, metadata !3981, metadata !DIExpression()), !dbg !4006
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4206
  br label %231, !dbg !4207

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4208
  br i1 %222, label %224, label %223, !dbg !4212

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4213
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4213
  unreachable, !dbg !4213

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4208
  %226 = add nuw nsw i8 %182, 1, !dbg !4215
  call void @llvm.dbg.value(metadata i8 %226, metadata !3982, metadata !DIExpression()), !dbg !4006
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4216
  store i8 %185, i8* %227, align 1, !dbg !4217
  %228 = add nuw nsw i8 %182, 2, !dbg !4218
  call void @llvm.dbg.value(metadata i8 %228, metadata !3982, metadata !DIExpression()), !dbg !4006
  %229 = zext i8 %226 to i32, !dbg !4219
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4219
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4220
  br label %235, !dbg !4221

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4006
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4141
  call void @llvm.dbg.value(metadata i8 %237, metadata !3982, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i8 %236, metadata !3981, metadata !DIExpression()), !dbg !4006
  %238 = add nuw nsw i32 %181, 1, !dbg !4221
  call void @llvm.dbg.value(metadata i8* %186, metadata !3956, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %238, metadata !3985, metadata !DIExpression()), !dbg !4136
  %239 = icmp eq i32 %238, %31, !dbg !4137
  br i1 %239, label %160, label %179, !dbg !4138, !llvm.loop !4222

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4146
  call void @llvm.dbg.value(metadata i32 %177, metadata !3954, metadata !DIExpression()), !dbg !4006
  store i32 %176, i32* %14, align 1, !dbg !4224
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4225
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %243, metadata !3984, metadata !DIExpression()), !dbg !4006
  %244 = icmp slt i32 %243, 0, !dbg !4227
  br i1 %244, label %287, label %245, !dbg !4229

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3954, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4006
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4230
  %248 = add nuw nsw i32 %44, %24, !dbg !4230
  %249 = sub i32 %247, %248, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %249, metadata !3994, metadata !DIExpression()), !dbg !4006
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %250, metadata !3984, metadata !DIExpression()), !dbg !4006
  %251 = icmp slt i32 %250, 0, !dbg !4232
  br i1 %251, label %287, label %252, !dbg !4234

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %253, metadata !3954, metadata !DIExpression()), !dbg !4006
  %254 = add nuw nsw i32 %253, %250, !dbg !4236
  call void @llvm.dbg.value(metadata i32 %254, metadata !3954, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 0, metadata !3995, metadata !DIExpression()), !dbg !4237
  %255 = icmp eq i8 %162, 0, !dbg !4238
  br i1 %255, label %284, label %256, !dbg !4239

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4239

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3995, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata i32 %260, metadata !3954, metadata !DIExpression()), !dbg !4006
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4240
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4241
  %262 = load i8, i8* %261, align 1, !dbg !4241
  call void @llvm.dbg.value(metadata i8 %262, metadata !3997, metadata !DIExpression()), !dbg !4242
  store i8 %262, i8* %10, align 1, !dbg !4243
  %263 = zext i8 %262 to i32, !dbg !4244
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4244
  %265 = bitcast i32* %264 to i8**, !dbg !4245
  %266 = load i8*, i8** %265, align 4, !dbg !4245
  call void @llvm.dbg.value(metadata i8* %266, metadata !4000, metadata !DIExpression()), !dbg !4242
  br i1 %257, label %270, label %267, !dbg !4246

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4247
  %269 = load i16, i16* %268, align 2, !dbg !4247
  br label %270, !dbg !4246

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4246
  call void @llvm.dbg.value(metadata i32 undef, metadata !4001, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4242
  call void @llvm.dbg.value(metadata i8* %10, metadata !3997, metadata !DIExpression(DW_OP_deref)), !dbg !4242
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4248
  call void @llvm.dbg.value(metadata i32 %272, metadata !3984, metadata !DIExpression()), !dbg !4006
  %273 = icmp slt i32 %272, 0, !dbg !4249
  br i1 %273, label %277, label %274, !dbg !4251

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4001, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3954, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4006
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4252
  call void @llvm.dbg.value(metadata i32 %275, metadata !3984, metadata !DIExpression()), !dbg !4006
  %276 = icmp slt i32 %275, 0, !dbg !4253
  br i1 %276, label %277, label %279, !dbg !4255

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3954, metadata !DIExpression()), !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4256
  call void @llvm.dbg.value(metadata i32 undef, metadata !3954, metadata !DIExpression()), !dbg !4006
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4257
  call void @llvm.dbg.value(metadata i32 %280, metadata !3954, metadata !DIExpression()), !dbg !4006
  %281 = add nsw i32 %280, %275, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %281, metadata !3954, metadata !DIExpression()), !dbg !4006
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4256
  %282 = add nuw nsw i32 %259, 1, !dbg !4259
  call void @llvm.dbg.value(metadata i32 %282, metadata !3995, metadata !DIExpression()), !dbg !4237
  %283 = icmp eq i32 %282, %167, !dbg !4238
  br i1 %283, label %284, label %258, !dbg !4239, !llvm.loop !4260

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4236
  call void @llvm.dbg.value(metadata i32 %285, metadata !3954, metadata !DIExpression()), !dbg !4006
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4262
  br label %287, !dbg !4263

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4006
  ret i32 %288, !dbg !4264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4265 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4269, metadata !DIExpression()), !dbg !4277
  %2 = icmp eq i8* %0, null, !dbg !4278
  br i1 %2, label %3, label %4, !dbg !4281

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4282
  unreachable, !dbg !4282

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4270, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata i8* %0, metadata !4271, metadata !DIExpression()), !dbg !4277
  %5 = load i8, i8* %0, align 1, !dbg !4284
  %6 = zext i8 %5 to i32, !dbg !4284
  %7 = shl nuw nsw i32 %6, 2, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %7, metadata !4272, metadata !DIExpression()), !dbg !4277
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4286
  %9 = load i8, i8* %8, align 1, !dbg !4286
  %10 = zext i8 %9 to i32, !dbg !4286
  call void @llvm.dbg.value(metadata i32 %10, metadata !4273, metadata !DIExpression()), !dbg !4277
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4287
  %12 = load i8, i8* %11, align 1, !dbg !4287
  %13 = zext i8 %12 to i32, !dbg !4287
  call void @llvm.dbg.value(metadata i32 %13, metadata !4274, metadata !DIExpression()), !dbg !4277
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4288
  call void @llvm.dbg.value(metadata i8* %14, metadata !4270, metadata !DIExpression()), !dbg !4277
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4289
  call void @llvm.dbg.value(metadata i8* %15, metadata !4270, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata i32 0, metadata !4275, metadata !DIExpression()), !dbg !4290
  %16 = icmp eq i8 %9, 0, !dbg !4291
  br i1 %16, label %17, label %22, !dbg !4293

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4277
  %19 = ptrtoint i8* %18 to i32, !dbg !4294
  %20 = ptrtoint i8* %0 to i32, !dbg !4294
  %21 = sub i32 %19, %20, !dbg !4294
  ret i32 %21, !dbg !4295

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4275, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %24, metadata !4270, metadata !DIExpression()), !dbg !4277
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4296
  call void @llvm.dbg.value(metadata i8* %25, metadata !4270, metadata !DIExpression()), !dbg !4277
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4298
  %27 = add i32 %26, 1, !dbg !4299
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4300
  call void @llvm.dbg.value(metadata i8* %28, metadata !4270, metadata !DIExpression()), !dbg !4277
  %29 = add nuw nsw i32 %23, 1, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %29, metadata !4275, metadata !DIExpression()), !dbg !4290
  %30 = icmp eq i32 %29, %10, !dbg !4291
  br i1 %30, label %17, label %22, !dbg !4293, !llvm.loop !4302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4304 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4308, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata i8* %1, metadata !4309, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata i8* %2, metadata !4310, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata i16 %3, metadata !4311, metadata !DIExpression()), !dbg !4312
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4313
  br i1 %5, label %6, label %9, !dbg !4315

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4316
  %8 = add i32 %7, 1, !dbg !4318
  br label %20, !dbg !4319

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4320
  br i1 %10, label %13, label %11, !dbg !4321

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4321
  br label %16, !dbg !4321

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4322
  %15 = add i32 %14, 1, !dbg !4323
  br label %16, !dbg !4321

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4321
  %18 = and i32 %17, 65535, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %17, metadata !4311, metadata !DIExpression()), !dbg !4312
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4325
  br label %20, !dbg !4326

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4312
  ret i32 %21, !dbg !4327
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4330, metadata !DIExpression()), !dbg !4331
  ret i32 0, !dbg !4332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4333 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4337, metadata !DIExpression()), !dbg !4338
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4339
  ret void, !dbg !4340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4341 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4344
  ret i8* %1, !dbg !4345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4346 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4357, metadata !DIExpression()), !dbg !4368
  call void @llvm.dbg.value(metadata i8* %0, metadata !4356, metadata !DIExpression()), !dbg !4368
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4369
  ret void, !dbg !4371
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4376, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i8* %1, metadata !4377, metadata !DIExpression()), !dbg !4378
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4379
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4379
  ret i32 %4, !dbg !4380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4381 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4385, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.value(metadata i8* %1, metadata !4386, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.value(metadata i8* %2, metadata !4387, metadata !DIExpression()), !dbg !4389
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4390
  ret void, !dbg !4391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4392 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4396, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %1, metadata !4397, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 0, metadata !4398, metadata !DIExpression()), !dbg !4399
  %3 = icmp eq i32 %1, 0, !dbg !4400
  br i1 %3, label %13, label %4, !dbg !4403

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4398, metadata !DIExpression()), !dbg !4399
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4404
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4406
  %8 = load i8, i8* %7, align 1, !dbg !4406
  %9 = zext i8 %8 to i32, !dbg !4406
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4404
  %11 = add nuw i32 %5, 1, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %11, metadata !4398, metadata !DIExpression()), !dbg !4399
  %12 = icmp eq i32 %11, %1, !dbg !4400
  br i1 %12, label %13, label %4, !dbg !4403, !llvm.loop !4408

13:                                               ; preds = %4, %2
  ret void, !dbg !4410
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4411 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4415, metadata !DIExpression()), !dbg !4417
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4418
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4418
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4416, metadata !DIExpression()), !dbg !4419
  call void @llvm.va_start(i8* nonnull %3), !dbg !4420
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4421
  %5 = load i32, i32* %4, align 4, !dbg !4421
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4421
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4421
  call void @llvm.va_end(i8* nonnull %3), !dbg !4422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4423
  ret void, !dbg !4423
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4424 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4428, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i32 %1, metadata !4429, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.value(metadata i8* %2, metadata !4430, metadata !DIExpression()), !dbg !4433
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4434
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4434
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4431, metadata !DIExpression()), !dbg !4435
  call void @llvm.va_start(i8* nonnull %5), !dbg !4436
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4437
  %7 = load i32, i32* %6, align 4, !dbg !4437
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4437
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4437
  call void @llvm.dbg.value(metadata i32 %9, metadata !4432, metadata !DIExpression()), !dbg !4433
  call void @llvm.va_end(i8* nonnull %5), !dbg !4438
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4439
  ret i32 %9, !dbg !4440
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4441 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i8* %0, metadata !4445, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i32 %1, metadata !4446, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i8* %2, metadata !4447, metadata !DIExpression()), !dbg !4455
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4456
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4456
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4449, metadata !DIExpression()), !dbg !4457
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4458
  store i8* %0, i8** %7, align 4, !dbg !4458
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4458
  store i32 %1, i32* %8, align 4, !dbg !4458
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4458
  store i32 0, i32* %9, align 4, !dbg !4458
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4459
  %10 = load i32, i32* %9, align 4, !dbg !4460
  %11 = load i32, i32* %8, align 4, !dbg !4462
  %12 = icmp slt i32 %10, %11, !dbg !4463
  br i1 %12, label %13, label %15, !dbg !4464

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4465
  store i8 0, i8* %14, align 1, !dbg !4467
  br label %15, !dbg !4468

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4469
  ret i32 %10, !dbg !4470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4476, metadata !DIExpression()), !dbg !4478
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4477, metadata !DIExpression()), !dbg !4478
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4479
  %4 = load i8*, i8** %3, align 4, !dbg !4479
  %5 = icmp eq i8* %4, null, !dbg !4481
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4482
  br i1 %5, label %12, label %8, !dbg !4483

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4484
  %10 = load i32, i32* %9, align 4, !dbg !4484
  %11 = icmp slt i32 %7, %10, !dbg !4485
  br i1 %11, label %15, label %12, !dbg !4486

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4487
  %14 = add nsw i32 %7, 1, !dbg !4489
  store i32 %14, i32* %13, align 4, !dbg !4489
  br label %25, !dbg !4490

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4491
  %17 = icmp eq i32 %7, %16, !dbg !4493
  br i1 %17, label %18, label %21, !dbg !4494

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4495
  store i32 %19, i32* %6, align 4, !dbg !4495
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4497
  store i8 0, i8* %20, align 1, !dbg !4498
  br label %25, !dbg !4499

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4500
  %23 = add nsw i32 %7, 1, !dbg !4502
  store i32 %23, i32* %6, align 4, !dbg !4502
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4503
  store i8 %22, i8* %24, align 1, !dbg !4504
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4505
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4506 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4511, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i8* %1, metadata !4512, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i8* %2, metadata !4513, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i8* %3, metadata !4514, metadata !DIExpression()), !dbg !4515
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4516
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4517
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4518
  unreachable, !dbg !4519
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4520 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4627
  ret %struct.k_thread* %1, !dbg !4628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4629 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4633, metadata !DIExpression()), !dbg !4634
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4635, !srcloc !4637
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4638
  ret void, !dbg !4639
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4640 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4641, !srcloc !4643
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4644
  ret %struct.k_thread* %1, !dbg !4645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4646 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4659, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4656, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i8* %1, metadata !4657, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i8* %2, metadata !4658, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i32 %4, metadata !4660, metadata !DIExpression()), !dbg !4785
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4786
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4786
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4661, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i32 0, metadata !4665, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i1 undef, metadata !4667, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4785
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4788

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4788

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4789
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4659, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i8* %30, metadata !4658, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i32 %29, metadata !4665, metadata !DIExpression()), !dbg !4785
  %31 = load i8, i8* %30, align 1, !dbg !4790
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4788

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4790
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4791
  call void @llvm.dbg.value(metadata i8* %34, metadata !4658, metadata !DIExpression()), !dbg !4785
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %35, metadata !4669, metadata !DIExpression()), !dbg !4792
  %36 = icmp slt i32 %35, 0, !dbg !4793
  %37 = add i32 %29, 1, !dbg !4791
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  br i1 %36, label %365, label %28, !llvm.loop !4795

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4797
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4674, metadata !DIExpression()), !dbg !4798
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4798
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4717, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4720, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i8* %30, metadata !4723, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i32 -1, metadata !4724, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i32 -1, metadata !4725, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i8* null, metadata !4726, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i8* %14, metadata !4727, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i8 0, metadata !4728, metadata !DIExpression()), !dbg !4799
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4800
  call void @llvm.dbg.value(metadata i8* %39, metadata !4658, metadata !DIExpression()), !dbg !4785
  %40 = load i24, i24* %15, align 8, !dbg !4801
  %41 = and i24 %40, 256, !dbg !4801
  %42 = icmp eq i24 %41, 0, !dbg !4801
  br i1 %42, label %51, label %43, !dbg !4803

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4804
  call void @llvm.dbg.value(metadata i8* %44, metadata !4659, metadata !DIExpression()), !dbg !4785
  %45 = bitcast i8* %27 to i32*, !dbg !4804
  %46 = load i32, i32* %45, align 4, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %46, metadata !4724, metadata !DIExpression()), !dbg !4799
  %47 = icmp slt i32 %46, 0, !dbg !4806
  br i1 %47, label %48, label %56, !dbg !4808

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4809
  store i24 %49, i24* %15, align 8, !dbg !4809
  %50 = sub nsw i32 0, %46, !dbg !4811
  call void @llvm.dbg.value(metadata i32 %50, metadata !4724, metadata !DIExpression()), !dbg !4799
  br label %56, !dbg !4812

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4813
  %53 = icmp eq i24 %52, 0, !dbg !4813
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4815
  br label %56, !dbg !4815

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4816
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4799
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4659, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i32 %58, metadata !4724, metadata !DIExpression()), !dbg !4799
  %60 = and i24 %57, 1024, !dbg !4816
  %61 = icmp eq i24 %60, 0, !dbg !4816
  br i1 %61, label %69, label %62, !dbg !4817

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4818
  call void @llvm.dbg.value(metadata i8* %63, metadata !4659, metadata !DIExpression()), !dbg !4785
  %64 = bitcast i8* %59 to i32*, !dbg !4818
  %65 = load i32, i32* %64, align 4, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %65, metadata !4729, metadata !DIExpression()), !dbg !4819
  %66 = icmp slt i32 %65, 0, !dbg !4820
  br i1 %66, label %67, label %74, !dbg !4822

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4823
  store i24 %68, i24* %15, align 8, !dbg !4823
  br label %74, !dbg !4825

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4826
  %71 = icmp eq i24 %70, 0, !dbg !4826
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4828
  br label %74, !dbg !4828

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4829
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4799
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4799
  call void @llvm.dbg.value(metadata i8* %77, metadata !4659, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i32 %76, metadata !4725, metadata !DIExpression()), !dbg !4799
  store i32 0, i32* %16, align 4, !dbg !4830
  store i32 0, i32* %17, align 8, !dbg !4831
  %78 = lshr i24 %75, 16, !dbg !4829
  call void @llvm.dbg.value(metadata i24 %78, metadata !4732, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4799
  %79 = lshr i24 %75, 11, !dbg !4832
  %80 = and i24 %79, 15, !dbg !4832
  %81 = zext i24 %80 to i32, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %81, metadata !4733, metadata !DIExpression()), !dbg !4799
  %82 = trunc i24 %78 to i3, !dbg !4833
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4833

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4834

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %85, metadata !4659, metadata !DIExpression()), !dbg !4785
  %86 = bitcast i8* %77 to i32*, !dbg !4837
  %87 = load i32, i32* %86, align 4, !dbg !4837
  %88 = sext i32 %87 to i64, !dbg !4837
  store i64 %88, i64* %20, align 8, !dbg !4839
  br label %115, !dbg !4840

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4841
  call void @llvm.dbg.value(metadata i8* %90, metadata !4659, metadata !DIExpression()), !dbg !4785
  %91 = bitcast i8* %77 to i32*, !dbg !4841
  %92 = load i32, i32* %91, align 4, !dbg !4841
  %93 = sext i32 %92 to i64, !dbg !4841
  store i64 %93, i64* %20, align 8, !dbg !4844
  br label %115, !dbg !4845

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4846
  %96 = add i32 %95, 7, !dbg !4846
  %97 = and i32 %96, -8, !dbg !4846
  %98 = inttoptr i32 %97 to i8*, !dbg !4846
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4846
  call void @llvm.dbg.value(metadata i8* %99, metadata !4659, metadata !DIExpression()), !dbg !4785
  %100 = inttoptr i32 %97 to i64*, !dbg !4846
  %101 = load i64, i64* %100, align 8, !dbg !4846
  store i64 %101, i64* %20, align 8, !dbg !4847
  br label %115, !dbg !4848

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4849
  %104 = add i32 %103, 7, !dbg !4849
  %105 = and i32 %104, -8, !dbg !4849
  %106 = inttoptr i32 %105 to i8*, !dbg !4849
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4849
  call void @llvm.dbg.value(metadata i8* %107, metadata !4659, metadata !DIExpression()), !dbg !4785
  %108 = inttoptr i32 %105 to i64*, !dbg !4849
  %109 = load i64, i64* %108, align 8, !dbg !4849
  store i64 %109, i64* %20, align 8, !dbg !4850
  br label %115, !dbg !4851

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4852
  call void @llvm.dbg.value(metadata i8* %111, metadata !4659, metadata !DIExpression()), !dbg !4785
  %112 = bitcast i8* %77 to i32*, !dbg !4852
  %113 = load i32, i32* %112, align 4, !dbg !4852
  %114 = sext i32 %113 to i64, !dbg !4853
  store i64 %114, i64* %20, align 8, !dbg !4854
  br label %115, !dbg !4855

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4856
  call void @llvm.dbg.value(metadata i8* %117, metadata !4659, metadata !DIExpression()), !dbg !4785
  %118 = trunc i24 %79 to i4, !dbg !4857
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4857

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4858
  %121 = ashr exact i64 %120, 56, !dbg !4858
  store i64 %121, i64* %20, align 8, !dbg !4861
  br label %177, !dbg !4862

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4863
  %124 = ashr exact i64 %123, 48, !dbg !4863
  store i64 %124, i64* %20, align 8, !dbg !4866
  br label %177, !dbg !4867

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4868

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4871
  call void @llvm.dbg.value(metadata i8* %127, metadata !4659, metadata !DIExpression()), !dbg !4785
  %128 = bitcast i8* %77 to i32*, !dbg !4871
  %129 = load i32, i32* %128, align 4, !dbg !4871
  %130 = zext i32 %129 to i64, !dbg !4871
  store i64 %130, i64* %20, align 8, !dbg !4873
  br label %157, !dbg !4874

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4875
  call void @llvm.dbg.value(metadata i8* %132, metadata !4659, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i8* %132, metadata !4659, metadata !DIExpression()), !dbg !4785
  %133 = bitcast i8* %77 to i32*, !dbg !4875
  %134 = load i32, i32* %133, align 4, !dbg !4875
  %135 = zext i32 %134 to i64, !dbg !4875
  store i64 %135, i64* %20, align 8, !dbg !4875
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4877
  %138 = add i32 %137, 7, !dbg !4877
  %139 = and i32 %138, -8, !dbg !4877
  %140 = inttoptr i32 %139 to i8*, !dbg !4877
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4877
  call void @llvm.dbg.value(metadata i8* %141, metadata !4659, metadata !DIExpression()), !dbg !4785
  %142 = inttoptr i32 %139 to i64*, !dbg !4877
  %143 = load i64, i64* %142, align 8, !dbg !4877
  store i64 %143, i64* %20, align 8, !dbg !4878
  br label %157, !dbg !4879

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4880
  %146 = add i32 %145, 7, !dbg !4880
  %147 = and i32 %146, -8, !dbg !4880
  %148 = inttoptr i32 %147 to i8*, !dbg !4880
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4880
  call void @llvm.dbg.value(metadata i8* %149, metadata !4659, metadata !DIExpression()), !dbg !4785
  %150 = inttoptr i32 %147 to i64*, !dbg !4880
  %151 = load i64, i64* %150, align 8, !dbg !4880
  store i64 %151, i64* %20, align 8, !dbg !4881
  br label %157, !dbg !4882

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4883
  call void @llvm.dbg.value(metadata i8* %153, metadata !4659, metadata !DIExpression()), !dbg !4785
  %154 = bitcast i8* %77 to i32*, !dbg !4883
  %155 = load i32, i32* %154, align 4, !dbg !4883
  %156 = zext i32 %155 to i64, !dbg !4884
  store i64 %156, i64* %20, align 8, !dbg !4885
  br label %157, !dbg !4886

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4887
  call void @llvm.dbg.value(metadata i8* %159, metadata !4659, metadata !DIExpression()), !dbg !4785
  %160 = trunc i24 %79 to i4, !dbg !4888
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4888

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4889
  store i64 %162, i64* %20, align 8, !dbg !4892
  br label %177, !dbg !4893

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4894
  store i64 %164, i64* %20, align 8, !dbg !4897
  br label %177, !dbg !4898

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4899
  %167 = add i32 %166, 7, !dbg !4899
  %168 = and i32 %167, -8, !dbg !4899
  %169 = inttoptr i32 %168 to i8*, !dbg !4899
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4899
  call void @llvm.dbg.value(metadata i8* %170, metadata !4659, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i8* %170, metadata !4659, metadata !DIExpression()), !dbg !4785
  %171 = inttoptr i32 %168 to double*, !dbg !4899
  %172 = load double, double* %171, align 8, !dbg !4899
  store double %172, double* %19, align 8, !dbg !4899
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4903
  call void @llvm.dbg.value(metadata i8* %174, metadata !4659, metadata !DIExpression()), !dbg !4785
  %175 = bitcast i8* %77 to i8**, !dbg !4903
  %176 = load i8*, i8** %175, align 4, !dbg !4903
  store i8* %176, i8** %18, align 8, !dbg !4906
  br label %177, !dbg !4907

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4799
  call void @llvm.dbg.value(metadata i8* %178, metadata !4659, metadata !DIExpression()), !dbg !4785
  %179 = and i24 %75, 3, !dbg !4908
  %180 = icmp eq i24 %179, 0, !dbg !4908
  br i1 %180, label %185, label %181, !dbg !4908

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4909
  call void @llvm.dbg.value(metadata i32 %182, metadata !4734, metadata !DIExpression()), !dbg !4910
  %183 = icmp slt i32 %182, 0, !dbg !4911
  %184 = add i32 %182, %29, !dbg !4909
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4913
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4914

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4915
  call void @llvm.dbg.value(metadata i32 %188, metadata !4738, metadata !DIExpression()), !dbg !4916
  %189 = icmp slt i32 %188, 0, !dbg !4917
  %190 = add i32 %29, 1, !dbg !4915
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4919
  call void @llvm.dbg.value(metadata i8* %192, metadata !4726, metadata !DIExpression()), !dbg !4799
  %193 = icmp sgt i32 %76, -1, !dbg !4920
  br i1 %193, label %194, label %196, !dbg !4922

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %195, metadata !4741, metadata !DIExpression()), !dbg !4925
  br label %241, !dbg !4926

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4927
  call void @llvm.dbg.value(metadata i32 %197, metadata !4741, metadata !DIExpression()), !dbg !4925
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4726, metadata !DIExpression()), !dbg !4799
  %199 = load i64, i64* %20, align 8, !dbg !4929
  %200 = trunc i64 %199 to i8, !dbg !4930
  store i8 %200, i8* %10, align 1, !dbg !4931
  call void @llvm.dbg.value(metadata i8* %23, metadata !4727, metadata !DIExpression()), !dbg !4799
  br label %245, !dbg !4932

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4933
  %203 = icmp eq i24 %202, 0, !dbg !4933
  %204 = trunc i24 %75 to i8, !dbg !4935
  %205 = shl i8 %204, 1, !dbg !4935
  %206 = and i8 %205, 32, !dbg !4935
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4935
  call void @llvm.dbg.value(metadata i8 %207, metadata !4728, metadata !DIExpression()), !dbg !4799
  %208 = load i64, i64* %20, align 8, !dbg !4936
  call void @llvm.dbg.value(metadata i64 %208, metadata !4666, metadata !DIExpression()), !dbg !4785
  %209 = icmp slt i64 %208, 0, !dbg !4937
  br i1 %209, label %210, label %212, !dbg !4939

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4728, metadata !DIExpression()), !dbg !4799
  %211 = sub nsw i64 0, %208, !dbg !4940
  store i64 %211, i64* %20, align 8, !dbg !4942
  br label %212, !dbg !4943

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4799
  call void @llvm.dbg.value(metadata i8 %213, metadata !4728, metadata !DIExpression()), !dbg !4799
  %214 = load i64, i64* %20, align 8, !dbg !4944
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4945
  call void @llvm.dbg.value(metadata i8* %215, metadata !4726, metadata !DIExpression()), !dbg !4799
  br label %216, !dbg !4946

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4947
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4948
  call void @llvm.dbg.value(metadata i8* %218, metadata !4726, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i8 %217, metadata !4728, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.label(metadata !4784), !dbg !4949
  %219 = icmp sgt i32 %76, -1, !dbg !4950
  br i1 %219, label %222, label %220, !dbg !4951

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4952
  br label %245, !dbg !4951

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4954
  %224 = sub i32 %22, %223, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %224, metadata !4743, metadata !DIExpression()), !dbg !4955
  %225 = load i24, i24* %15, align 8, !dbg !4956
  %226 = and i24 %225, -65, !dbg !4956
  store i24 %226, i24* %15, align 8, !dbg !4956
  %227 = icmp ugt i32 %76, %224, !dbg !4957
  br i1 %227, label %228, label %245, !dbg !4959

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4960
  store i32 %229, i32* %16, align 4, !dbg !4962
  br label %245, !dbg !4963

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4964
  %232 = icmp eq i8* %231, null, !dbg !4966
  br i1 %232, label %245, label %233, !dbg !4967

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4968
  %235 = zext i32 %234 to i64, !dbg !4968
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4970
  call void @llvm.dbg.value(metadata i8* %236, metadata !4726, metadata !DIExpression()), !dbg !4799
  %237 = load i24, i24* %15, align 8, !dbg !4971
  %238 = or i24 %237, 1048576, !dbg !4971
  store i24 %238, i24* %15, align 8, !dbg !4971
  store i8 120, i8* %21, align 1, !dbg !4972
  br label %216, !dbg !4973

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4974
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4977
  br label %363, !dbg !4978

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4979
  call void @llvm.dbg.value(metadata i32 %242, metadata !4741, metadata !DIExpression()), !dbg !4925
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4980
  call void @llvm.dbg.value(metadata i32 -1, metadata !4725, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i32 %29, metadata !4665, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i8* %192, metadata !4726, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i8* %243, metadata !4727, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i8 0, metadata !4728, metadata !DIExpression()), !dbg !4799
  %244 = icmp eq i8* %192, null, !dbg !4981
  br i1 %244, label %363, label %245, !dbg !4983, !llvm.loop !4795

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4952
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4799
  call void @llvm.dbg.value(metadata i32 0, metadata !4747, metadata !DIExpression()), !dbg !4799
  %250 = zext i8 %249 to i32, !dbg !4984
  %251 = icmp eq i8 %249, 0, !dbg !4986
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4799
  call void @llvm.dbg.value(metadata i32 undef, metadata !4746, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4799
  call void @llvm.dbg.value(metadata i32 undef, metadata !4746, metadata !DIExpression()), !dbg !4799
  %252 = icmp sgt i32 %58, 0, !dbg !4987
  br i1 %252, label %253, label %302, !dbg !4988

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4952
  %255 = icmp eq i24 %254, 0, !dbg !4952
  %256 = ptrtoint i8* %248 to i32, !dbg !4989
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4799
  %257 = ptrtoint i8* %247 to i32, !dbg !4989
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4799
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4799
  %258 = xor i1 %251, true, !dbg !4990
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4799
  %259 = sext i1 %258 to i32, !dbg !4990
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4799
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4799
  %260 = lshr i24 %246, 19, !dbg !4991
  %261 = and i24 %260, 1, !dbg !4991
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4991
  %263 = zext i24 %262 to i32, !dbg !4991
  %264 = add i32 %257, %259, !dbg !4991
  %265 = add i32 %256, %263, !dbg !4991
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4799
  %266 = and i24 %246, 4194304, !dbg !4992
  %267 = icmp eq i24 %266, 0, !dbg !4992
  %268 = load i32, i32* %16, align 4, !dbg !4994
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4799
  call void @llvm.dbg.value(metadata i32 undef, metadata !4746, metadata !DIExpression()), !dbg !4799
  %269 = load i32, i32* %17, align 8, !dbg !4995
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4995
  call void @llvm.dbg.value(metadata i32 undef, metadata !4746, metadata !DIExpression()), !dbg !4799
  %271 = add i32 %264, %58, !dbg !4995
  %272 = add i32 %265, %268, !dbg !4995
  %273 = add i32 %272, %270, !dbg !4996
  %274 = sub i32 %271, %273, !dbg !4996
  call void @llvm.dbg.value(metadata i32 %274, metadata !4724, metadata !DIExpression()), !dbg !4799
  %275 = and i24 %246, 4, !dbg !4997
  %276 = icmp eq i24 %275, 0, !dbg !4997
  br i1 %276, label %277, label %302, !dbg !4998

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4748, metadata !DIExpression()), !dbg !4999
  %278 = and i24 %246, 64, !dbg !5000
  %279 = icmp eq i24 %278, 0, !dbg !5000
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5001
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5001
  %282 = select i1 %279, i32 32, i32 48, !dbg !5001
  br i1 %280, label %287, label %283, !dbg !5001

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %284, metadata !4753, metadata !DIExpression()), !dbg !5003
  %285 = icmp slt i32 %284, 0, !dbg !5004
  %286 = add i32 %29, 1, !dbg !5002
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4799
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4789
  call void @llvm.dbg.value(metadata i32 %290, metadata !4665, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i8 undef, metadata !4748, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.value(metadata i8 %288, metadata !4728, metadata !DIExpression()), !dbg !4799
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5006
  %292 = add i32 %291, -1, !dbg !5006
  br label %293, !dbg !5006

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5007
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4789
  call void @llvm.dbg.value(metadata i32 %295, metadata !4665, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i32 %294, metadata !4724, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i32 %294, metadata !4724, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4799
  %296 = icmp sgt i32 %294, 0, !dbg !5008
  br i1 %296, label %297, label %302, !dbg !5006

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5009
  call void @llvm.dbg.value(metadata i32 %298, metadata !4724, metadata !DIExpression()), !dbg !4799
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5010
  call void @llvm.dbg.value(metadata i32 %299, metadata !4759, metadata !DIExpression()), !dbg !5011
  %300 = icmp slt i32 %299, 0, !dbg !5012
  %301 = add i32 %295, 1, !dbg !5010
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  br i1 %300, label %361, label %293, !llvm.loop !5014

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4799
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4799
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4789
  call void @llvm.dbg.value(metadata i32 %305, metadata !4665, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i32 %304, metadata !4724, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata i8 %303, metadata !4728, metadata !DIExpression()), !dbg !4799
  %306 = icmp eq i8 %303, 0, !dbg !5016
  br i1 %306, label %312, label %307, !dbg !5017

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5018
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %309, metadata !4762, metadata !DIExpression()), !dbg !5020
  %310 = icmp slt i32 %309, 0, !dbg !5021
  %311 = add i32 %305, 1, !dbg !5019
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4789
  call void @llvm.dbg.value(metadata i32 %313, metadata !4665, metadata !DIExpression()), !dbg !4785
  %314 = lshr i24 %246, 20, !dbg !5023
  %315 = lshr i24 %246, 19, !dbg !5024
  %316 = or i24 %314, %315, !dbg !5025
  %317 = and i24 %316, 1, !dbg !5025
  %318 = icmp eq i24 %317, 0, !dbg !5025
  br i1 %318, label %323, label %319, !dbg !5026

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5027
  call void @llvm.dbg.value(metadata i32 %320, metadata !4766, metadata !DIExpression()), !dbg !5028
  %321 = icmp slt i32 %320, 0, !dbg !5029
  %322 = add i32 %313, 1, !dbg !5027
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4789
  call void @llvm.dbg.value(metadata i32 %324, metadata !4665, metadata !DIExpression()), !dbg !4785
  %325 = and i24 %246, 1048576, !dbg !5031
  %326 = icmp eq i24 %325, 0, !dbg !5031
  br i1 %326, label %333, label %327, !dbg !5032

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5033
  %329 = zext i8 %328 to i32, !dbg !5033
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5033
  call void @llvm.dbg.value(metadata i32 %330, metadata !4772, metadata !DIExpression()), !dbg !5034
  %331 = icmp slt i32 %330, 0, !dbg !5035
  %332 = add i32 %324, 1, !dbg !5033
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4789
  call void @llvm.dbg.value(metadata i32 %334, metadata !4665, metadata !DIExpression()), !dbg !4785
  %335 = load i32, i32* %16, align 4, !dbg !5037
  call void @llvm.dbg.value(metadata i32 %335, metadata !4747, metadata !DIExpression()), !dbg !4799
  br label %336, !dbg !5038

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5039
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4789
  call void @llvm.dbg.value(metadata i32 %338, metadata !4665, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i32 %337, metadata !4747, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4799
  %339 = icmp sgt i32 %337, 0, !dbg !5040
  br i1 %339, label %340, label %345, !dbg !5038

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5041
  call void @llvm.dbg.value(metadata i32 %341, metadata !4747, metadata !DIExpression()), !dbg !4799
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5042
  call void @llvm.dbg.value(metadata i32 %342, metadata !4776, metadata !DIExpression()), !dbg !5043
  %343 = icmp slt i32 %342, 0, !dbg !5044
  %344 = add i32 %338, 1, !dbg !5042
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  br i1 %343, label %361, label %336, !llvm.loop !5046

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5048
  call void @llvm.dbg.value(metadata i32 %346, metadata !4779, metadata !DIExpression()), !dbg !5049
  %347 = icmp slt i32 %346, 0, !dbg !5050
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5048
  call void @llvm.dbg.value(metadata i32 %349, metadata !4665, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i32 %304, metadata !4724, metadata !DIExpression()), !dbg !4799
  %350 = icmp sgt i32 %304, 0, !dbg !5052
  br i1 %350, label %351, label %363, !dbg !5053

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5053
  %353 = add i32 %352, %338, !dbg !5053
  br label %354, !dbg !5053

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.value(metadata i32 %355, metadata !4724, metadata !DIExpression()), !dbg !4799
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5054
  call void @llvm.dbg.value(metadata i32 %356, metadata !4781, metadata !DIExpression()), !dbg !5055
  %357 = icmp slt i32 %356, 0, !dbg !5056
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5058
  call void @llvm.dbg.value(metadata i32 undef, metadata !4665, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4785
  call void @llvm.dbg.value(metadata i32 %359, metadata !4724, metadata !DIExpression()), !dbg !4799
  %360 = icmp sgt i32 %355, 1, !dbg !5052
  br i1 %360, label %354, label %363, !dbg !5053, !llvm.loop !5059

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4665, metadata !DIExpression()), !dbg !4785
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4796
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4789
  call void @llvm.dbg.value(metadata i32 %364, metadata !4665, metadata !DIExpression()), !dbg !4785
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4796
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4785
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5061
  ret i32 %366, !dbg !5061
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5062 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5066, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i8* %1, metadata !5067, metadata !DIExpression()), !dbg !5068
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5069
  store i24 0, i24* %3, align 4, !dbg !5069
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5069
  store i8 0, i8* %4, align 1, !dbg !5069
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5069
  store i32 0, i32* %5, align 4, !dbg !5069
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5069
  store i32 0, i32* %6, align 4, !dbg !5069
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5070
  call void @llvm.dbg.value(metadata i8* %7, metadata !5067, metadata !DIExpression()), !dbg !5068
  %8 = load i8, i8* %7, align 1, !dbg !5071
  %9 = icmp eq i8 %8, 37, !dbg !5073
  br i1 %9, label %10, label %12, !dbg !5074

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5075
  call void @llvm.dbg.value(metadata i8* %11, metadata !5067, metadata !DIExpression()), !dbg !5068
  store i8 37, i8* %4, align 1, !dbg !5077
  br label %18, !dbg !5078

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5079
  call void @llvm.dbg.value(metadata i8* %13, metadata !5067, metadata !DIExpression()), !dbg !5068
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5080
  call void @llvm.dbg.value(metadata i8* %14, metadata !5067, metadata !DIExpression()), !dbg !5068
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5081
  call void @llvm.dbg.value(metadata i8* %15, metadata !5067, metadata !DIExpression()), !dbg !5068
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5082
  call void @llvm.dbg.value(metadata i8* %16, metadata !5067, metadata !DIExpression()), !dbg !5068
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5083
  call void @llvm.dbg.value(metadata i8* %17, metadata !5067, metadata !DIExpression()), !dbg !5068
  br label %18, !dbg !5084

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5068
  ret i8* %19, !dbg !5085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5086 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5090, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i8* %1, metadata !5091, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i8* %2, metadata !5092, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i8* %3, metadata !5093, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i32 0, metadata !5094, metadata !DIExpression()), !dbg !5097
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5098

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5099
  call void @llvm.dbg.value(metadata i32 %9, metadata !5094, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i8* %8, metadata !5092, metadata !DIExpression()), !dbg !5097
  %10 = icmp ult i8* %8, %3, !dbg !5100
  br i1 %10, label %11, label %13, !dbg !5101

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5102
  br label %17, !dbg !5101

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5103

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5104
  %16 = icmp eq i8 %15, 0, !dbg !5103
  br i1 %16, label %24, label %17, !dbg !5098

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5102
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5105
  call void @llvm.dbg.value(metadata i8* %19, metadata !5092, metadata !DIExpression()), !dbg !5097
  %20 = zext i8 %18 to i32, !dbg !5106
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5107
  call void @llvm.dbg.value(metadata i32 %21, metadata !5095, metadata !DIExpression()), !dbg !5108
  %22 = icmp slt i32 %21, 0, !dbg !5109
  %23 = add i32 %9, 1, !dbg !5111
  call void @llvm.dbg.value(metadata i32 undef, metadata !5094, metadata !DIExpression()), !dbg !5097
  br i1 %22, label %24, label %7, !llvm.loop !5112

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5097
  ret i32 %25, !dbg !5114
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5115 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5119, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5120, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %2, metadata !5121, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %3, metadata !5122, metadata !DIExpression()), !dbg !5129
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5130
  %6 = load i8, i8* %5, align 1, !dbg !5130
  %7 = zext i8 %6 to i32, !dbg !5131
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5132
  %9 = icmp eq i32 %8, 0, !dbg !5132
  call void @llvm.dbg.value(metadata i1 %9, metadata !5123, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5129
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5133
  call void @llvm.dbg.value(metadata i32 %10, metadata !5124, metadata !DIExpression()), !dbg !5129
  %11 = ptrtoint i8* %3 to i32, !dbg !5134
  %12 = ptrtoint i8* %2 to i32, !dbg !5134
  %13 = sub i32 %11, %12, !dbg !5134
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5135
  call void @llvm.dbg.value(metadata i8* %14, metadata !5126, metadata !DIExpression()), !dbg !5129
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5136

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5129
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5119, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %18, metadata !5126, metadata !DIExpression()), !dbg !5129
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5137
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5138
  call void @llvm.dbg.value(metadata i32 %25, metadata !5127, metadata !DIExpression()), !dbg !5139
  %26 = icmp ult i32 %25, 10, !dbg !5140
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5141
  %28 = add i32 %27, %25, !dbg !5139
  %29 = trunc i32 %28 to i8, !dbg !5141
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5142
  call void @llvm.dbg.value(metadata i8* %30, metadata !5126, metadata !DIExpression()), !dbg !5129
  store i8 %29, i8* %30, align 1, !dbg !5143
  call void @llvm.dbg.value(metadata i64 %22, metadata !5119, metadata !DIExpression()), !dbg !5129
  %31 = icmp uge i64 %19, %15, !dbg !5144
  %32 = icmp ugt i8* %30, %2, !dbg !5145
  %33 = and i1 %31, %32, !dbg !5145
  br i1 %33, label %17, label %34, !dbg !5146, !llvm.loop !5147

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5149
  %36 = load i24, i24* %35, align 4, !dbg !5149
  %37 = and i24 %36, 32, !dbg !5149
  %38 = icmp eq i24 %37, 0, !dbg !5149
  br i1 %38, label %44, label %39, !dbg !5151

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5152

40:                                               ; preds = %39
  br label %41, !dbg !5154

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5158
  store i24 %43, i24* %35, align 4, !dbg !5158
  br label %44, !dbg !5159

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5160 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5166, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata i8* %1, metadata !5167, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata i32 %2, metadata !5168, metadata !DIExpression()), !dbg !5169
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5170
  %5 = load i24, i24* %4, align 4, !dbg !5170
  %6 = lshr i24 %5, 11, !dbg !5170
  %7 = and i24 %6, 15, !dbg !5170
  %8 = zext i24 %7 to i32, !dbg !5170
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5171

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5172
  store i32 %2, i32* %10, align 4, !dbg !5174
  br label %28, !dbg !5175

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5176
  store i8 %12, i8* %1, align 1, !dbg !5177
  br label %28, !dbg !5178

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5179
  %15 = bitcast i8* %1 to i16*, !dbg !5180
  store i16 %14, i16* %15, align 2, !dbg !5181
  br label %28, !dbg !5182

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5183
  store i32 %2, i32* %17, align 4, !dbg !5184
  br label %28, !dbg !5185

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5186
  %20 = bitcast i8* %1 to i64*, !dbg !5187
  store i64 %19, i64* %20, align 8, !dbg !5188
  br label %28, !dbg !5189

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5190
  %23 = bitcast i8* %1 to i64*, !dbg !5191
  store i64 %22, i64* %23, align 8, !dbg !5192
  br label %28, !dbg !5193

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5194
  store i32 %2, i32* %25, align 4, !dbg !5195
  br label %28, !dbg !5196

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5197
  store i32 %2, i32* %27, align 4, !dbg !5198
  br label %28, !dbg !5199

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5200
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5204, metadata !DIExpression()), !dbg !5205
  %2 = add i32 %0, -65, !dbg !5206
  %3 = icmp ult i32 %2, 26, !dbg !5207
  %4 = zext i1 %3 to i32, !dbg !5207
  ret i32 %4, !dbg !5208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5209 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5213, metadata !DIExpression()), !dbg !5214
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5215

2:                                                ; preds = %1
  br label %4, !dbg !5216

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5218

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5219
  ret i32 %5, !dbg !5220
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5221 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5223, metadata !DIExpression()), !dbg !5226
  call void @llvm.dbg.value(metadata i8* %1, metadata !5224, metadata !DIExpression()), !dbg !5226
  call void @llvm.dbg.value(metadata i8 1, metadata !5225, metadata !DIExpression()), !dbg !5226
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5227

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5225, metadata !DIExpression()), !dbg !5226
  call void @llvm.dbg.value(metadata i8* %5, metadata !5224, metadata !DIExpression()), !dbg !5226
  %6 = load i8, i8* %5, align 1, !dbg !5228
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5230

7:                                                ; preds = %4
  br label %11, !dbg !5231

8:                                                ; preds = %4
  br label %11, !dbg !5233

9:                                                ; preds = %4
  br label %11, !dbg !5234

10:                                               ; preds = %4
  br label %11, !dbg !5235

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5236
  %14 = or i24 %13, %12, !dbg !5236
  store i24 %14, i24* %3, align 4, !dbg !5236
  call void @llvm.dbg.value(metadata i8 poison, metadata !5225, metadata !DIExpression()), !dbg !5226
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5224, metadata !DIExpression()), !dbg !5226
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5225, metadata !DIExpression()), !dbg !5226
  call void @llvm.dbg.value(metadata i8* %15, metadata !5224, metadata !DIExpression()), !dbg !5226
  %17 = load i24, i24* %3, align 4, !dbg !5237
  %18 = and i24 %17, 68, !dbg !5239
  %19 = icmp eq i24 %18, 68, !dbg !5239
  br i1 %19, label %20, label %22, !dbg !5239

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5240
  store i24 %21, i24* %3, align 4, !dbg !5240
  br label %22, !dbg !5242

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5243
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5244 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5246, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %1, metadata !5247, metadata !DIExpression()), !dbg !5250
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5251
  %5 = load i24, i24* %4, align 4, !dbg !5252
  %6 = or i24 %5, 128, !dbg !5252
  store i24 %6, i24* %4, align 4, !dbg !5252
  call void @llvm.dbg.value(metadata i8* %1, metadata !5247, metadata !DIExpression()), !dbg !5250
  %7 = load i8, i8* %1, align 1, !dbg !5253
  %8 = icmp eq i8 %7, 42, !dbg !5255
  br i1 %8, label %9, label %12, !dbg !5256

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5257
  store i24 %10, i24* %4, align 4, !dbg !5257
  call void @llvm.dbg.value(metadata i8* %1, metadata !5247, metadata !DIExpression()), !dbg !5250
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5259
  call void @llvm.dbg.value(metadata i8* %11, metadata !5247, metadata !DIExpression()), !dbg !5250
  store i8* %11, i8** %3, align 4, !dbg !5259
  br label %29, !dbg !5260

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5248, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8** %3, metadata !5247, metadata !DIExpression(DW_OP_deref)), !dbg !5250
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5261
  call void @llvm.dbg.value(metadata i32 %13, metadata !5249, metadata !DIExpression()), !dbg !5250
  %14 = load i8*, i8** %3, align 4, !dbg !5262
  call void @llvm.dbg.value(metadata i8* %14, metadata !5247, metadata !DIExpression()), !dbg !5250
  %15 = icmp eq i8* %14, %1, !dbg !5264
  br i1 %15, label %29, label %16, !dbg !5265

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5266
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5268
  store i32 %13, i32* %18, align 4, !dbg !5269
  %19 = lshr i32 %13, 31, !dbg !5270
  %20 = lshr i24 %17, 1, !dbg !5271
  %21 = and i24 %20, 1, !dbg !5271
  %22 = zext i24 %21 to i32, !dbg !5271
  %23 = or i32 %19, %22, !dbg !5271
  %24 = trunc i32 %23 to i24, !dbg !5271
  %25 = shl nuw nsw i24 %24, 1, !dbg !5271
  %26 = and i24 %17, -131, !dbg !5271
  %27 = or i24 %26, 128, !dbg !5271
  %28 = or i24 %25, %27, !dbg !5271
  store i24 %28, i24* %4, align 4, !dbg !5271
  br label %29, !dbg !5272

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5250
  ret i8* %30, !dbg !5273
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5274 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5276, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i8* %1, metadata !5277, metadata !DIExpression()), !dbg !5279
  %4 = load i8, i8* %1, align 1, !dbg !5280
  %5 = icmp eq i8 %4, 46, !dbg !5281
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5282
  %7 = load i24, i24* %6, align 4, !dbg !5283
  %8 = select i1 %5, i24 512, i24 0, !dbg !5283
  %9 = and i24 %7, -513, !dbg !5283
  %10 = or i24 %9, %8, !dbg !5283
  store i24 %10, i24* %6, align 4, !dbg !5283
  br i1 %5, label %11, label %32, !dbg !5284

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5277, metadata !DIExpression()), !dbg !5279
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5285
  call void @llvm.dbg.value(metadata i8* %12, metadata !5277, metadata !DIExpression()), !dbg !5279
  store i8* %12, i8** %3, align 4, !dbg !5285
  %13 = load i8, i8* %12, align 1, !dbg !5286
  %14 = icmp eq i8 %13, 42, !dbg !5288
  br i1 %14, label %15, label %18, !dbg !5289

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5290
  store i24 %16, i24* %6, align 4, !dbg !5290
  call void @llvm.dbg.value(metadata i8* %12, metadata !5277, metadata !DIExpression()), !dbg !5279
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5292
  call void @llvm.dbg.value(metadata i8* %17, metadata !5277, metadata !DIExpression()), !dbg !5279
  store i8* %17, i8** %3, align 4, !dbg !5292
  br label %32, !dbg !5293

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5277, metadata !DIExpression(DW_OP_deref)), !dbg !5279
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5294
  call void @llvm.dbg.value(metadata i32 %19, metadata !5278, metadata !DIExpression()), !dbg !5279
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5295
  store i32 %19, i32* %20, align 4, !dbg !5296
  %21 = lshr i32 %19, 31, !dbg !5297
  %22 = load i24, i24* %6, align 4, !dbg !5298
  %23 = lshr i24 %22, 1, !dbg !5298
  %24 = and i24 %23, 1, !dbg !5298
  %25 = zext i24 %24 to i32, !dbg !5298
  %26 = or i32 %21, %25, !dbg !5298
  %27 = trunc i32 %26 to i24, !dbg !5298
  %28 = shl nuw nsw i24 %27, 1, !dbg !5298
  %29 = and i24 %22, -3, !dbg !5298
  %30 = or i24 %28, %29, !dbg !5298
  store i24 %30, i24* %6, align 4, !dbg !5298
  %31 = load i8*, i8** %3, align 4, !dbg !5299
  call void @llvm.dbg.value(metadata i8* %31, metadata !5277, metadata !DIExpression()), !dbg !5279
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5279
  ret i8* %33, !dbg !5300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5301 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5303, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i8* %1, metadata !5304, metadata !DIExpression()), !dbg !5305
  %3 = load i8, i8* %1, align 1, !dbg !5306
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5307

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5308
  call void @llvm.dbg.value(metadata i8* %5, metadata !5304, metadata !DIExpression()), !dbg !5305
  %6 = load i8, i8* %5, align 1, !dbg !5311
  %7 = icmp eq i8 %6, 104, !dbg !5312
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5313
  %9 = load i24, i24* %8, align 4, !dbg !5313
  %10 = and i24 %9, -30721, !dbg !5313
  br i1 %7, label %11, label %14, !dbg !5314

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5315
  store i24 %12, i24* %8, align 4, !dbg !5315
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5317
  call void @llvm.dbg.value(metadata i8* %13, metadata !5304, metadata !DIExpression()), !dbg !5305
  br label %56, !dbg !5318

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5319
  store i24 %15, i24* %8, align 4, !dbg !5319
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5321
  call void @llvm.dbg.value(metadata i8* %17, metadata !5304, metadata !DIExpression()), !dbg !5305
  %18 = load i8, i8* %17, align 1, !dbg !5323
  %19 = icmp eq i8 %18, 108, !dbg !5324
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5325
  %21 = load i24, i24* %20, align 4, !dbg !5325
  %22 = and i24 %21, -30721, !dbg !5325
  br i1 %19, label %23, label %26, !dbg !5326

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5327
  store i24 %24, i24* %20, align 4, !dbg !5327
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5329
  call void @llvm.dbg.value(metadata i8* %25, metadata !5304, metadata !DIExpression()), !dbg !5305
  br label %56, !dbg !5330

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5331
  store i24 %27, i24* %20, align 4, !dbg !5331
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5333
  %30 = load i24, i24* %29, align 4, !dbg !5334
  %31 = and i24 %30, -30721, !dbg !5334
  %32 = or i24 %31, 10240, !dbg !5334
  store i24 %32, i24* %29, align 4, !dbg !5334
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5335
  call void @llvm.dbg.value(metadata i8* %33, metadata !5304, metadata !DIExpression()), !dbg !5305
  br label %56, !dbg !5336

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5337
  %36 = load i24, i24* %35, align 4, !dbg !5338
  %37 = and i24 %36, -30721, !dbg !5338
  %38 = or i24 %37, 12288, !dbg !5338
  store i24 %38, i24* %35, align 4, !dbg !5338
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5339
  call void @llvm.dbg.value(metadata i8* %39, metadata !5304, metadata !DIExpression()), !dbg !5305
  br label %56, !dbg !5340

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5341
  %42 = load i24, i24* %41, align 4, !dbg !5342
  %43 = and i24 %42, -30721, !dbg !5342
  %44 = or i24 %43, 14336, !dbg !5342
  store i24 %44, i24* %41, align 4, !dbg !5342
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5343
  call void @llvm.dbg.value(metadata i8* %45, metadata !5304, metadata !DIExpression()), !dbg !5305
  br label %56, !dbg !5344

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5345
  %48 = load i24, i24* %47, align 4, !dbg !5346
  %49 = and i24 %48, -30723, !dbg !5346
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5347
  call void @llvm.dbg.value(metadata i8* %50, metadata !5304, metadata !DIExpression()), !dbg !5305
  %51 = or i24 %49, 16386, !dbg !5348
  store i24 %51, i24* %47, align 4, !dbg !5348
  br label %56, !dbg !5349

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5350
  %54 = load i24, i24* %53, align 4, !dbg !5351
  %55 = and i24 %54, -30721, !dbg !5351
  store i24 %55, i24* %53, align 4, !dbg !5351
  br label %56, !dbg !5352

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5304, metadata !DIExpression()), !dbg !5305
  ret i8* %57, !dbg !5353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5354 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5356, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i8* %1, metadata !5357, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i8 0, metadata !5358, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i8* %1, metadata !5357, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5361
  %3 = load i8, i8* %1, align 1, !dbg !5362
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5363
  store i8 %3, i8* %4, align 1, !dbg !5364
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5365

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5366

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5367
  %9 = load i24, i24* %8, align 4, !dbg !5367
  %10 = and i24 %9, -458753, !dbg !5367
  %11 = or i24 %10, %7, !dbg !5367
  call void @llvm.dbg.label(metadata !5359), !dbg !5368
  %12 = and i24 %9, 30720, !dbg !5369
  %13 = icmp eq i24 %12, 16384, !dbg !5369
  %14 = zext i1 %13 to i24, !dbg !5371
  %15 = or i24 %11, %14, !dbg !5371
  %16 = icmp eq i8 %3, 99, !dbg !5372
  br i1 %16, label %17, label %43, !dbg !5374

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5375
  %19 = icmp ne i24 %18, 0, !dbg !5375
  call void @llvm.dbg.value(metadata i1 %19, metadata !5358, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5361
  br label %43, !dbg !5377

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5378
  %22 = load i24, i24* %21, align 4, !dbg !5379
  %23 = and i24 %22, -458753, !dbg !5379
  %24 = or i24 %23, 262144, !dbg !5379
  call void @llvm.dbg.value(metadata i8 1, metadata !5358, metadata !DIExpression()), !dbg !5361
  br label %43, !dbg !5380

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5383
  %27 = load i24, i24* %26, align 4, !dbg !5384
  %28 = and i24 %27, -458753, !dbg !5384
  %29 = or i24 %28, 196608, !dbg !5384
  %30 = and i24 %27, 30720, !dbg !5385
  %31 = icmp eq i24 %30, 16384, !dbg !5385
  br label %43, !dbg !5387

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5388
  %34 = load i24, i24* %33, align 4, !dbg !5389
  %35 = and i24 %34, -458753, !dbg !5389
  %36 = or i24 %35, 196608, !dbg !5389
  %37 = and i24 %34, 30720, !dbg !5390
  %38 = icmp ne i24 %37, 0, !dbg !5390
  br label %43, !dbg !5392

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5393
  %41 = load i24, i24* %40, align 4, !dbg !5394
  %42 = or i24 %41, 1, !dbg !5394
  br label %43, !dbg !5395

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5396
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5397
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5398
  call void @llvm.dbg.value(metadata i8* %48, metadata !5357, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i8 poison, metadata !5358, metadata !DIExpression()), !dbg !5361
  %49 = lshr i24 %44, 1, !dbg !5396
  %50 = and i24 %49, 1, !dbg !5396
  %51 = zext i24 %50 to i32, !dbg !5396
  %52 = or i32 %51, %47, !dbg !5396
  %53 = trunc i32 %52 to i24, !dbg !5396
  %54 = shl nuw nsw i24 %53, 1, !dbg !5396
  %55 = and i24 %44, -3, !dbg !5396
  %56 = or i24 %54, %55, !dbg !5396
  store i24 %56, i24* %46, align 4, !dbg !5396
  ret i8* %48, !dbg !5399
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5400 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5404, metadata !DIExpression()), !dbg !5407
  %2 = load i8*, i8** %0, align 4, !dbg !5408
  call void @llvm.dbg.value(metadata i8* %2, metadata !5405, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata i32 0, metadata !5406, metadata !DIExpression()), !dbg !5407
  %3 = load i8, i8* %2, align 1, !dbg !5409
  %4 = zext i8 %3 to i32, !dbg !5410
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5411
  %6 = icmp eq i32 %5, 0, !dbg !5412
  br i1 %6, label %19, label %7, !dbg !5412

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5406, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata i8* %10, metadata !5405, metadata !DIExpression()), !dbg !5407
  %11 = mul i32 %9, 10, !dbg !5413
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5415
  call void @llvm.dbg.value(metadata i8* %12, metadata !5405, metadata !DIExpression()), !dbg !5407
  %13 = add i32 %11, -48, !dbg !5416
  %14 = add i32 %13, %8, !dbg !5417
  call void @llvm.dbg.value(metadata i32 %14, metadata !5406, metadata !DIExpression()), !dbg !5407
  %15 = load i8, i8* %12, align 1, !dbg !5409
  %16 = zext i8 %15 to i32, !dbg !5410
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5411
  %18 = icmp eq i32 %17, 0, !dbg !5412
  br i1 %18, label %19, label %7, !dbg !5412, !llvm.loop !5418

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5407
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5407
  store i8* %20, i8** %0, align 4, !dbg !5420
  ret i32 %21, !dbg !5421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5424, metadata !DIExpression()), !dbg !5425
  %2 = add i32 %0, -48, !dbg !5426
  %3 = icmp ult i32 %2, 10, !dbg !5427
  %4 = zext i1 %3 to i32, !dbg !5427
  ret i32 %4, !dbg !5428
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5429 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5434, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata i32 %1, metadata !5435, metadata !DIExpression()), !dbg !5436
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5437, !srcloc !5439
  ret void, !dbg !5440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5441 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5443, metadata !DIExpression()), !dbg !5451
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5452
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5452
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5444, metadata !DIExpression()), !dbg !5453
  call void @llvm.va_start(i8* nonnull %3), !dbg !5454
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5455
  %5 = load i32, i32* %4, align 4, !dbg !5455
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5455
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5455
  call void @llvm.va_end(i8* nonnull %3), !dbg !5456
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5457
  ret void, !dbg !5457
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5458 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6088, !srcloc !6089
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6090, !srcloc !6091
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6092, !srcloc !6093
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6094, !srcloc !6095
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6096, !srcloc !6097
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6098, !srcloc !6099
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6100, !srcloc !6101
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6104, !srcloc !6105
  ret void, !dbg !6106
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6107 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6109, metadata !DIExpression()), !dbg !6111
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6112
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6113
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6114, !srcloc !6123
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6114
  call void @llvm.dbg.value(metadata i32 %3, metadata !6120, metadata !DIExpression()) #23, !dbg !6124
  call void @llvm.dbg.value(metadata i32 undef, metadata !6121, metadata !DIExpression()) #23, !dbg !6124
  call void @llvm.dbg.value(metadata i32 %3, metadata !6110, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i32 %3, metadata !6125, metadata !DIExpression()) #23, !dbg !6130
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6132, !srcloc !6133
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6134
  ret i32 0, !dbg !6135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6136 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6138
  %2 = or i32 %1, 512, !dbg !6138
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6138
  ret void, !dbg !6139
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6140 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6141
  %2 = or i32 %1, 1024, !dbg !6141
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6141
  ret void, !dbg !6142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6145, metadata !DIExpression()), !dbg !6146
  ret i32 0, !dbg !6147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6148 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6151, metadata !DIExpression()), !dbg !6159
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6160
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6160
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6152, metadata !DIExpression()), !dbg !6161
  call void @llvm.va_start(i8* nonnull %3), !dbg !6162
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6163
  %5 = load i32, i32* %4, align 4, !dbg !6163
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6163
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6163
  call void @llvm.va_end(i8* nonnull %3), !dbg !6164
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6165
  ret void, !dbg !6165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6166 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6171, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.value(metadata i8* %0, metadata !6170, metadata !DIExpression()), !dbg !6172
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6173
  ret void, !dbg !6174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6179, metadata !DIExpression()), !dbg !6183
  call void @llvm.dbg.value(metadata i8* %1, metadata !6180, metadata !DIExpression()), !dbg !6183
  call void @llvm.dbg.value(metadata i32 %2, metadata !6181, metadata !DIExpression()), !dbg !6183
  call void @llvm.dbg.value(metadata i8* %1, metadata !6182, metadata !DIExpression()), !dbg !6183
  %4 = icmp eq i32 %2, 0, !dbg !6184
  br i1 %4, label %14, label %5, !dbg !6185

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6183
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6185

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6182, metadata !DIExpression()), !dbg !6183
  call void @llvm.dbg.value(metadata i32 %10, metadata !6181, metadata !DIExpression()), !dbg !6183
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i32 noundef %7) #25, !dbg !6186
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6188
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %11, metadata !6181, metadata !DIExpression()), !dbg !6183
  call void @llvm.dbg.value(metadata i8* %12, metadata !6182, metadata !DIExpression()), !dbg !6183
  br i1 %13, label %14, label %8, !dbg !6189, !llvm.loop !6190

14:                                               ; preds = %8, %3
  ret void, !dbg !6192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6198, metadata !DIExpression()), !dbg !6199
  %2 = add i32 %0, -1, !dbg !6200
  %3 = icmp ult i32 %2, 4, !dbg !6200
  %4 = shl i32 %2, 3, !dbg !6200
  %5 = lshr i32 1145657157, %4, !dbg !6200
  %6 = trunc i32 %5 to i8, !dbg !6200
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6200
  ret i8 %7, !dbg !6201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6202 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6206, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i32 %1, metadata !6207, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i32 0, metadata !6208, metadata !DIExpression()), !dbg !6218
  br label %4, !dbg !6219

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.36, i32 0, i32 0)) #25, !dbg !6220
  call void @llvm.dbg.value(metadata i32 0, metadata !6210, metadata !DIExpression()), !dbg !6221
  br label %16, !dbg !6222

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6208, metadata !DIExpression()), !dbg !6218
  %6 = icmp ult i32 %5, %1, !dbg !6223
  br i1 %6, label %7, label %11, !dbg !6227

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6228
  %9 = load i8, i8* %8, align 1, !dbg !6228
  %10 = zext i8 %9 to i32, !dbg !6230
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.37, i32 0, i32 0), i32 noundef %10) #25, !dbg !6231
  br label %12, !dbg !6232

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.38, i32 0, i32 0)) #25, !dbg !6233
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6235
  call void @llvm.dbg.value(metadata i32 %13, metadata !6208, metadata !DIExpression()), !dbg !6218
  %14 = icmp eq i32 %13, 8, !dbg !6236
  br i1 %14, label %3, label %4, !dbg !6219, !llvm.loop !6237

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.39, i32 0, i32 0)) #25, !dbg !6239
  ret void, !dbg !6240

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6210, metadata !DIExpression()), !dbg !6221
  %18 = icmp ult i32 %17, %1, !dbg !6241
  br i1 %18, label %19, label %26, !dbg !6242

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6243
  %21 = load i8, i8* %20, align 1, !dbg !6243
  call void @llvm.dbg.value(metadata i8 %21, metadata !6212, metadata !DIExpression()), !dbg !6244
  %22 = zext i8 %21 to i32, !dbg !6245
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6246
  %24 = icmp eq i32 %23, 0, !dbg !6247
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6246
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.40, i32 0, i32 0), i32 noundef %25) #25, !dbg !6248
  br label %27, !dbg !6249

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.41, i32 0, i32 0)) #25, !dbg !6250
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6252
  call void @llvm.dbg.value(metadata i32 %28, metadata !6210, metadata !DIExpression()), !dbg !6221
  %29 = icmp eq i32 %28, 8, !dbg !6253
  br i1 %29, label %15, label %16, !dbg !6222, !llvm.loop !6254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6258, metadata !DIExpression()), !dbg !6259
  %2 = add i32 %0, -32, !dbg !6260
  %3 = icmp ult i32 %2, 95, !dbg !6260
  %4 = zext i1 %3 to i32, !dbg !6260
  ret i32 %4, !dbg !6261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6311, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6312, metadata !DIExpression()), !dbg !6313
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6314
  br i1 %3, label %5, label %4, !dbg !6316

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6317
  br label %5, !dbg !6319

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6320
  ret void, !dbg !6321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6322 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6326, metadata !DIExpression()), !dbg !6327
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6328
  %3 = load i32, i32* %2, align 4, !dbg !6328
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6328
  %5 = load i32, i32* %4, align 4, !dbg !6328
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6328
  %7 = load i32, i32* %6, align 4, !dbg !6328
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.42, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6328
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6333
  %9 = load i32, i32* %8, align 4, !dbg !6333
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6333
  %11 = load i32, i32* %10, align 4, !dbg !6333
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6333
  %13 = load i32, i32* %12, align 4, !dbg !6333
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.43, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6333
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6338
  %15 = load i32, i32* %14, align 4, !dbg !6338
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6338
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6343
  %17 = load i32, i32* %16, align 4, !dbg !6343
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.45, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6343
  ret void, !dbg !6348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6349 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6366, metadata !DIExpression()), !dbg !6369
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6367, metadata !DIExpression()), !dbg !6369
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6370
  %4 = load i32, i32* %3, align 4, !dbg !6370
  call void @llvm.dbg.value(metadata i32 %4, metadata !6368, metadata !DIExpression()), !dbg !6369
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6371
  ret void, !dbg !6372
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6373 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6377, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata i8* %0, metadata !6378, metadata !DIExpression()), !dbg !6380
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6381
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6381
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6379, metadata !DIExpression()), !dbg !6382
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6382
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6383
  %5 = bitcast i8* %4 to i32*, !dbg !6383
  %6 = load i32, i32* %5, align 4, !dbg !6383
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6384
  store i32 %6, i32* %7, align 4, !dbg !6385
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6386
  unreachable, !dbg !6387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6391, metadata !DIExpression()), !dbg !6392
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6393
  ret void, !dbg !6394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6399, metadata !DIExpression()), !dbg !6400
  %2 = icmp sgt i32 %0, -1, !dbg !6401
  br i1 %2, label %3, label %8, !dbg !6403

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6404, !srcloc !6406
  %4 = and i32 %0, 31, !dbg !6407
  %5 = shl nuw i32 1, %4, !dbg !6408
  %6 = lshr i32 %0, 5, !dbg !6409
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6410
  store volatile i32 %5, i32* %7, align 4, !dbg !6411
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6412, !srcloc !6413
  br label %8, !dbg !6414

8:                                                ; preds = %3, %1
  ret void, !dbg !6415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6418, metadata !DIExpression()), !dbg !6419
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6420
  ret void, !dbg !6421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6424, metadata !DIExpression()), !dbg !6425
  %2 = icmp sgt i32 %0, -1, !dbg !6426
  br i1 %2, label %3, label %8, !dbg !6428

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6429
  %5 = shl nuw i32 1, %4, !dbg !6431
  %6 = lshr i32 %0, 5, !dbg !6432
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6433
  store volatile i32 %5, i32* %7, align 4, !dbg !6434
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6435, !srcloc !6439
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6440, !srcloc !6443
  br label %8, !dbg !6444

8:                                                ; preds = %3, %1
  ret void, !dbg !6445
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6450, metadata !DIExpression()), !dbg !6451
  %2 = lshr i32 %0, 5, !dbg !6452
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6453
  %4 = load volatile i32, i32* %3, align 4, !dbg !6453
  %5 = and i32 %0, 31, !dbg !6454
  %6 = shl nuw i32 1, %5, !dbg !6454
  %7 = and i32 %4, %6, !dbg !6455
  ret i32 %7, !dbg !6456
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6461, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata i32 %1, metadata !6462, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata i32 %2, metadata !6463, metadata !DIExpression()), !dbg !6464
  %4 = add i32 %1, 1, !dbg !6465
  call void @llvm.dbg.value(metadata i32 %4, metadata !6462, metadata !DIExpression()), !dbg !6464
  %5 = icmp ult i32 %4, 16, !dbg !6468
  br i1 %5, label %7, label %6, !dbg !6471

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.49, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6472
  unreachable, !dbg !6472

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6474
  ret void, !dbg !6475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6480, metadata !DIExpression()), !dbg !6482
  call void @llvm.dbg.value(metadata i32 %1, metadata !6481, metadata !DIExpression()), !dbg !6482
  %3 = trunc i32 %1 to i8, !dbg !6483
  %4 = shl i8 %3, 4, !dbg !6483
  %5 = and i32 %0, 15, !dbg !6485
  %6 = add nsw i32 %5, -4, !dbg !6485
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6485
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6485
  %9 = icmp slt i32 %0, 0, !dbg !6485
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6485
  store volatile i8 %4, i8* %10, align 1, !dbg !6483
  ret void, !dbg !6486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6487 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6489, metadata !DIExpression()), !dbg !6490
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6491
  ret void, !dbg !6492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6493 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6495
  tail call void @z_arm_int_exit() #25, !dbg !6496
  ret void, !dbg !6497
}

; Function Attrs: optsize
declare !dbg !6498 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6499 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6501 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6503
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6504
  tail call void @z_bss_zero() #25, !dbg !6505
  tail call void @z_data_copy() #25, !dbg !6506
  tail call void @z_arm_interrupt_init() #25, !dbg !6507
  tail call void @z_cstart() #27, !dbg !6508
  unreachable, !dbg !6508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6509 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6510
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6511, !srcloc !6514
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6515, !srcloc !6518
  ret void, !dbg !6519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6520 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6521
  %2 = and i32 %1, -15728641, !dbg !6521
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6521
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6522, !srcloc !6529
  call void @llvm.dbg.value(metadata i32 %3, metadata !6527, metadata !DIExpression()) #23, !dbg !6530
  %4 = and i32 %3, -5, !dbg !6531
  call void @llvm.dbg.value(metadata i32 %4, metadata !6532, metadata !DIExpression()) #23, !dbg !6537
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6539, !srcloc !6540
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6541, !srcloc !6518
  ret void, !dbg !6543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6547, metadata !DIExpression()), !dbg !6548
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6549
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6550
  store i32 %0, i32* %3, align 4, !dbg !6551
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6552
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6553
  store i32 %4, i32* %5, align 4, !dbg !6554
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6555
  %7 = or i32 %6, 268435456, !dbg !6555
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6555
  call void @llvm.dbg.value(metadata i32 0, metadata !6556, metadata !DIExpression()) #23, !dbg !6559
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6561, !srcloc !6562
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6563
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6564
  %10 = load i32, i32* %9, align 4, !dbg !6564
  ret i32 %10, !dbg !6565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6566 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6679, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6680, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata i8* %2, metadata !6681, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6682, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata i8* %4, metadata !6683, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata i8* %5, metadata !6684, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata i8* %6, metadata !6685, metadata !DIExpression()), !dbg !6687
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6688
  call void @llvm.dbg.value(metadata i8* %8, metadata !6686, metadata !DIExpression()), !dbg !6687
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6689
  %10 = bitcast i8* %9 to i32*, !dbg !6689
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6690
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6691
  %12 = bitcast i8* %8 to i32*, !dbg !6692
  store i32 %11, i32* %12, align 4, !dbg !6693
  %13 = ptrtoint i8* %4 to i32, !dbg !6694
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6695
  %15 = bitcast i8* %14 to i32*, !dbg !6695
  store i32 %13, i32* %15, align 4, !dbg !6696
  %16 = ptrtoint i8* %5 to i32, !dbg !6697
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6698
  %18 = bitcast i8* %17 to i32*, !dbg !6698
  store i32 %16, i32* %18, align 4, !dbg !6699
  %19 = ptrtoint i8* %6 to i32, !dbg !6700
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6701
  %21 = bitcast i8* %20 to i32*, !dbg !6701
  store i32 %19, i32* %21, align 4, !dbg !6702
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6703
  %23 = bitcast i8* %22 to i32*, !dbg !6703
  store i32 16777216, i32* %23, align 4, !dbg !6704
  %24 = ptrtoint i8* %8 to i32, !dbg !6705
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6706
  store i32 %24, i32* %25, align 8, !dbg !6707
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6708
  store i32 0, i32* %26, align 4, !dbg !6709
  ret void, !dbg !6710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6716, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.value(metadata i32 %1, metadata !6717, metadata !DIExpression()), !dbg !6722
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6723
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6718, metadata !DIExpression()), !dbg !6722
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6724
  br i1 %4, label %19, label %5, !dbg !6726

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6721, metadata !DIExpression()), !dbg !6722
  %6 = icmp eq i32 %0, -22, !dbg !6727
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6727
  %8 = load i32, i32* %7, align 4, !dbg !6727
  br i1 %6, label %16, label %9, !dbg !6729

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6727
  %11 = icmp ule i32 %10, %0, !dbg !6727
  %12 = icmp ugt i32 %8, %0, !dbg !6727
  %13 = and i1 %12, %11, !dbg !6727
  %14 = icmp ugt i32 %8, %1, !dbg !6727
  %15 = and i1 %14, %13, !dbg !6727
  br i1 %15, label %18, label %19, !dbg !6727

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6727
  br i1 %17, label %18, label %19, !dbg !6729

18:                                               ; preds = %9, %16
  br label %19, !dbg !6730

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6722
  ret i32 %20, !dbg !6732
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6733 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6737, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %1, metadata !6738, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6739, metadata !DIExpression()), !dbg !6740
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6741
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6742
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6743, !srcloc !6744
  unreachable, !dbg !6745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6746 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6764, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata i32 %1, metadata !6765, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata i32 %2, metadata !6766, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6767, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata i32 0, metadata !6768, metadata !DIExpression()), !dbg !6774
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6775
  call void @llvm.dbg.value(metadata i32 %8, metadata !6769, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6774
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6776
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6776
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6777
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6777
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6773, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 0, metadata !6779, metadata !DIExpression()) #23, !dbg !6782
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6784, !srcloc !6785
  call void @llvm.dbg.value(metadata i8* %6, metadata !6771, metadata !DIExpression(DW_OP_deref)), !dbg !6774
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6786
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6772, metadata !DIExpression()), !dbg !6774
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6787
  br i1 %11, label %12, label %13, !dbg !6790

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.55, i32 0, i32 0)) #25, !dbg !6791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6791
  unreachable, !dbg !6791

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6793
  call void @llvm.dbg.value(metadata i32 %14, metadata !6769, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata i8* %5, metadata !6770, metadata !DIExpression(DW_OP_deref)), !dbg !6774
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6794
  call void @llvm.dbg.value(metadata i32 %15, metadata !6768, metadata !DIExpression()), !dbg !6774
  %16 = load i8, i8* %5, align 1, !dbg !6795, !range !6797
  call void @llvm.dbg.value(metadata i8 %16, metadata !6770, metadata !DIExpression()), !dbg !6774
  %17 = icmp eq i8 %16, 0, !dbg !6795
  br i1 %17, label %18, label %35, !dbg !6798

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6799
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6800
  %21 = load i8, i8* %6, align 1, !dbg !6801, !range !6797
  call void @llvm.dbg.value(metadata i8 %21, metadata !6771, metadata !DIExpression()), !dbg !6774
  %22 = icmp eq i8 %21, 0, !dbg !6801
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6803
  %24 = load i32, i32* %23, align 4, !dbg !6803
  br i1 %22, label %30, label %25, !dbg !6804

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6805
  %27 = icmp eq i32 %26, 0, !dbg !6808
  br i1 %27, label %28, label %34, !dbg !6809

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6810
  br label %32, !dbg !6812

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6813
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6803
  br label %34, !dbg !6815

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6815
  br label %35, !dbg !6816

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6816
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6816
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6816
  ret void, !dbg !6816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6822, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata i32 %1, metadata !6823, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata i32 %2, metadata !6824, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata i8* %3, metadata !6825, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata i8 0, metadata !6826, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6827, metadata !DIExpression()), !dbg !6828
  store i8 0, i8* %3, align 1, !dbg !6829
  %5 = icmp ugt i32 %2, -16777217, !dbg !6830
  br i1 %5, label %6, label %17, !dbg !6832

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6833
  %8 = icmp eq i32 %7, 8, !dbg !6833
  br i1 %8, label %9, label %10, !dbg !6833

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.66, i32 0, i32 0), i32 noundef 69) #25, !dbg !6835
  br label %17, !dbg !6841

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6842
  %12 = icmp eq i32 %11, 0, !dbg !6842
  br i1 %12, label %13, label %14, !dbg !6843

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6827, metadata !DIExpression()), !dbg !6828
  store i8 1, i8* %3, align 1, !dbg !6846
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6828
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6827, metadata !DIExpression()), !dbg !6828
  br label %17, !dbg !6849

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6828
  ret %struct.__esf* %18, !dbg !6850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6851 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6855, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 %1, metadata !6856, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i8* %2, metadata !6857, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 0, metadata !6858, metadata !DIExpression()), !dbg !6859
  store i8 0, i8* %2, align 1, !dbg !6860
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6861

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6862
  call void @llvm.dbg.value(metadata i32 %5, metadata !6858, metadata !DIExpression()), !dbg !6859
  br label %12, !dbg !6864

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6865
  call void @llvm.dbg.value(metadata i32 %7, metadata !6858, metadata !DIExpression()), !dbg !6859
  br label %12, !dbg !6866

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6867
  call void @llvm.dbg.value(metadata i32 0, metadata !6858, metadata !DIExpression()), !dbg !6859
  br label %12, !dbg !6868

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6869
  call void @llvm.dbg.value(metadata i32 0, metadata !6858, metadata !DIExpression()), !dbg !6859
  br label %12, !dbg !6870

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6871
  br label %12, !dbg !6872

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6873
  br label %12, !dbg !6874

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6859
  call void @llvm.dbg.value(metadata i32 %13, metadata !6858, metadata !DIExpression()), !dbg !6859
  ret i32 %13, !dbg !6875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6876 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6880, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.value(metadata i8* %1, metadata !6881, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.value(metadata i32 0, metadata !6882, metadata !DIExpression()), !dbg !6883
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6884
  store i8 0, i8* %1, align 1, !dbg !6889
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6890
  %4 = and i32 %3, 2, !dbg !6892
  %5 = icmp eq i32 %4, 0, !dbg !6893
  br i1 %5, label %7, label %6, !dbg !6894

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.59, i32 0, i32 0), i32 noundef 69) #25, !dbg !6895
  br label %38, !dbg !6901

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6902
  %9 = icmp sgt i32 %8, -1, !dbg !6904
  br i1 %9, label %11, label %10, !dbg !6905

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !6906
  br label %38, !dbg !6912

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6913
  %13 = and i32 %12, 1073741824, !dbg !6915
  %14 = icmp eq i32 %13, 0, !dbg !6916
  br i1 %14, label %37, label %15, !dbg !6917

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.61, i32 0, i32 0), i32 noundef 69) #25, !dbg !6918
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6924
  br i1 %16, label %17, label %21, !dbg !6926

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6927
  %19 = load i32, i32* %18, align 4, !dbg !6927
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.62, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6927
  %20 = load i32, i32* %18, align 4, !dbg !6933
  call void @llvm.dbg.value(metadata i32 %20, metadata !6882, metadata !DIExpression()), !dbg !6883
  br label %38, !dbg !6934

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6935
  %23 = and i32 %22, 255, !dbg !6937
  %24 = icmp eq i32 %23, 0, !dbg !6938
  br i1 %24, label %27, label %25, !dbg !6939

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6940
  call void @llvm.dbg.value(metadata i32 %26, metadata !6882, metadata !DIExpression()), !dbg !6883
  br label %38, !dbg !6942

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6943
  %29 = and i32 %28, 65280, !dbg !6945
  %30 = icmp eq i32 %29, 0, !dbg !6946
  br i1 %30, label %32, label %31, !dbg !6947

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6948
  call void @llvm.dbg.value(metadata i32 0, metadata !6882, metadata !DIExpression()), !dbg !6883
  br label %38, !dbg !6950

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6951
  %34 = icmp ult i32 %33, 65536, !dbg !6953
  br i1 %34, label %36, label %35, !dbg !6954

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6955
  call void @llvm.dbg.value(metadata i32 0, metadata !6882, metadata !DIExpression()), !dbg !6883
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !6957
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.64, i32 0, i32 0)) #25, !dbg !6957
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !6957
  unreachable, !dbg !6957

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !6962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.65, i32 0, i32 0)) #25, !dbg !6962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !6962
  unreachable, !dbg !6962

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6883
  call void @llvm.dbg.value(metadata i32 %39, metadata !6882, metadata !DIExpression()), !dbg !6883
  ret i32 %39, !dbg !6967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6968 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6970, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata i32 %1, metadata !6971, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata i8* %2, metadata !6972, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata i32 0, metadata !6973, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.value(metadata i32 -22, metadata !6974, metadata !DIExpression()), !dbg !6983
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !6984
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6989
  %5 = and i32 %4, 16, !dbg !6991
  %6 = icmp eq i32 %5, 0, !dbg !6992
  br i1 %6, label %8, label %7, !dbg !6993

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6994
  br label %8, !dbg !7000

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7001
  %10 = and i32 %9, 8, !dbg !7003
  %11 = icmp eq i32 %10, 0, !dbg !7004
  br i1 %11, label %13, label %12, !dbg !7005

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7006
  br label %13, !dbg !7012

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7013
  %15 = and i32 %14, 2, !dbg !7014
  %16 = icmp eq i32 %15, 0, !dbg !7015
  br i1 %16, label %27, label %17, !dbg !7016

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !7017
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7022
  call void @llvm.dbg.value(metadata i32 %18, metadata !6975, metadata !DIExpression()), !dbg !7023
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7024
  %20 = and i32 %19, 128, !dbg !7026
  %21 = icmp eq i32 %20, 0, !dbg !7027
  br i1 %21, label %27, label %22, !dbg !7028

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6974, metadata !DIExpression()), !dbg !6983
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7029
  %23 = icmp eq i32 %1, 0, !dbg !7035
  br i1 %23, label %27, label %24, !dbg !7037

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7038
  %26 = and i32 %25, -129, !dbg !7038
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7038
  br label %27, !dbg !7040

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6983
  call void @llvm.dbg.value(metadata i32 %28, metadata !6974, metadata !DIExpression()), !dbg !6983
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7041
  %30 = and i32 %29, 1, !dbg !7043
  %31 = icmp eq i32 %30, 0, !dbg !7044
  br i1 %31, label %33, label %32, !dbg !7045

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !7046
  br label %33, !dbg !7052

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7053
  %35 = and i32 %34, 32, !dbg !7055
  %36 = icmp eq i32 %35, 0, !dbg !7056
  br i1 %36, label %38, label %37, !dbg !7057

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7058
  br label %38, !dbg !7064

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7065
  %40 = and i32 %39, 16, !dbg !7066
  %41 = icmp eq i32 %40, 0, !dbg !7066
  br i1 %41, label %42, label %46, !dbg !7067

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7068
  %44 = and i32 %43, 2, !dbg !7069
  %45 = icmp eq i32 %44, 0, !dbg !7069
  br i1 %45, label %60, label %46, !dbg !7070

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7071
  %48 = and i32 %47, 2048, !dbg !7072
  %49 = icmp eq i32 %48, 0, !dbg !7072
  br i1 %49, label %60, label %50, !dbg !7073

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7074
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7075
  call void @llvm.dbg.value(metadata i32 %52, metadata !6978, metadata !DIExpression()), !dbg !7076
  %53 = icmp eq i32 %52, 0, !dbg !7077
  br i1 %53, label %55, label %54, !dbg !7079

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7080, metadata !DIExpression()) #23, !dbg !7083
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7086, !srcloc !7087
  call void @llvm.dbg.value(metadata i32 2, metadata !6973, metadata !DIExpression()), !dbg !6983
  br label %60, !dbg !7088

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7089
  %57 = and i32 %56, 16, !dbg !7089
  %58 = icmp eq i32 %57, 0, !dbg !7089
  br i1 %58, label %60, label %59, !dbg !7093

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7094
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !7094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7094
  unreachable, !dbg !7094

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6983
  call void @llvm.dbg.value(metadata i32 %61, metadata !6973, metadata !DIExpression()), !dbg !6983
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7096
  %63 = and i32 %62, 32, !dbg !7098
  %64 = icmp eq i32 %63, 0, !dbg !7099
  br i1 %64, label %68, label %65, !dbg !7100

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7101
  %67 = and i32 %66, -8193, !dbg !7101
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7101
  br label %68, !dbg !7103

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7104
  %70 = or i32 %69, 255, !dbg !7104
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7104
  store i8 0, i8* %2, align 1, !dbg !7105
  ret i32 %61, !dbg !7106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7107 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7111, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i32 %0, metadata !7112, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i8* %1, metadata !7113, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i32 0, metadata !7114, metadata !DIExpression()), !dbg !7118
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7119
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7124
  %4 = and i32 %3, 4096, !dbg !7126
  %5 = icmp eq i32 %4, 0, !dbg !7126
  br i1 %5, label %7, label %6, !dbg !7127

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7128
  br label %7, !dbg !7134

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7135
  %9 = and i32 %8, 2048, !dbg !7137
  %10 = icmp eq i32 %9, 0, !dbg !7137
  br i1 %10, label %12, label %11, !dbg !7138

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7139
  br label %12, !dbg !7145

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7146
  %14 = and i32 %13, 512, !dbg !7147
  %15 = icmp eq i32 %14, 0, !dbg !7147
  br i1 %15, label %26, label %16, !dbg !7148

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7149
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7154
  call void @llvm.dbg.value(metadata i32 %17, metadata !7115, metadata !DIExpression()), !dbg !7155
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7156
  %19 = and i32 %18, 32768, !dbg !7158
  %20 = icmp eq i32 %19, 0, !dbg !7159
  br i1 %20, label %26, label %21, !dbg !7160

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7161
  %22 = icmp eq i32 %0, 0, !dbg !7167
  br i1 %22, label %26, label %23, !dbg !7169

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7170
  %25 = and i32 %24, -32769, !dbg !7170
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7170
  br label %26, !dbg !7172

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7173
  %28 = and i32 %27, 1024, !dbg !7175
  %29 = icmp eq i32 %28, 0, !dbg !7175
  br i1 %29, label %31, label %30, !dbg !7176

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7177
  br label %31, !dbg !7183

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7184
  %33 = and i32 %32, 256, !dbg !7186
  %34 = icmp eq i32 %33, 0, !dbg !7187
  br i1 %34, label %35, label %39, !dbg !7188

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7189
  %37 = and i32 %36, 8192, !dbg !7191
  %38 = icmp eq i32 %37, 0, !dbg !7191
  br i1 %38, label %41, label %39, !dbg !7192

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7193
  br label %41, !dbg !7194

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7194
  %43 = or i32 %42, 65280, !dbg !7194
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7194
  store i8 0, i8* %1, align 1, !dbg !7195
  ret void, !dbg !7196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7197 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7203, metadata !DIExpression()), !dbg !7205
  call void @llvm.dbg.value(metadata i32 0, metadata !7204, metadata !DIExpression()), !dbg !7205
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7206
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7211
  %2 = and i32 %1, 33554432, !dbg !7213
  %3 = icmp eq i32 %2, 0, !dbg !7214
  br i1 %3, label %5, label %4, !dbg !7215

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7216
  br label %5, !dbg !7222

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7223
  %7 = and i32 %6, 16777216, !dbg !7225
  %8 = icmp eq i32 %7, 0, !dbg !7226
  br i1 %8, label %10, label %9, !dbg !7227

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7228
  br label %10, !dbg !7234

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7235
  %12 = and i32 %11, 524288, !dbg !7237
  %13 = icmp eq i32 %12, 0, !dbg !7238
  br i1 %13, label %15, label %14, !dbg !7239

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7240
  br label %15, !dbg !7246

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7247
  %17 = and i32 %16, 262144, !dbg !7249
  %18 = icmp eq i32 %17, 0, !dbg !7250
  br i1 %18, label %20, label %19, !dbg !7251

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7252
  br label %20, !dbg !7258

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7259
  %22 = and i32 %21, 131072, !dbg !7261
  %23 = icmp eq i32 %22, 0, !dbg !7262
  br i1 %23, label %25, label %24, !dbg !7263

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7264
  br label %25, !dbg !7270

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7271
  %27 = and i32 %26, 65536, !dbg !7273
  %28 = icmp eq i32 %27, 0, !dbg !7274
  br i1 %28, label %30, label %29, !dbg !7275

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7276
  br label %30, !dbg !7282

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7283
  %32 = or i32 %31, -65536, !dbg !7283
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7283
  ret void, !dbg !7284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7285 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7289, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i8* %0, metadata !7290, metadata !DIExpression()), !dbg !7291
  store i8 0, i8* %0, align 1, !dbg !7292
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7293
  ret void, !dbg !7298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7299 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7303, metadata !DIExpression()), !dbg !7305
  call void @llvm.dbg.value(metadata i32 %0, metadata !7304, metadata !DIExpression()), !dbg !7305
  %2 = icmp slt i32 %0, 16, !dbg !7306
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7306
  %4 = add nsw i32 %0, -16, !dbg !7306
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7306
  ret void, !dbg !7311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7312 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7316, metadata !DIExpression()), !dbg !7319
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7320
  %3 = load i32, i32* %2, align 4, !dbg !7320
  %4 = inttoptr i32 %3 to i16*, !dbg !7321
  call void @llvm.dbg.value(metadata i16* %4, metadata !7317, metadata !DIExpression()), !dbg !7319
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7322
  %6 = or i32 %5, 256, !dbg !7322
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7322
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7323, !srcloc !7326
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7327, !srcloc !7330
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7331
  %8 = load i16, i16* %7, align 2, !dbg !7332
  call void @llvm.dbg.value(metadata i16 %8, metadata !7318, metadata !DIExpression()), !dbg !7319
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7333
  %10 = and i32 %9, -257, !dbg !7333
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7333
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7334, !srcloc !7326
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7336, !srcloc !7330
  %11 = icmp eq i16 %8, -8446, !dbg !7338
  ret i1 %11, !dbg !7340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7341 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7342
  %2 = or i32 %1, 16, !dbg !7342
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7342
  ret void, !dbg !7343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7344 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7347, metadata !DIExpression()), !dbg !7348
  br label %1, !dbg !7349

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7347, metadata !DIExpression()), !dbg !7348
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef %2) #24, !dbg !7351
  %3 = add nuw nsw i32 %2, 1, !dbg !7354
  call void @llvm.dbg.value(metadata i32 %3, metadata !7347, metadata !DIExpression()), !dbg !7348
  %4 = icmp eq i32 %3, 85, !dbg !7355
  br i1 %4, label %5, label %1, !dbg !7349, !llvm.loop !7356

5:                                                ; preds = %1
  ret void, !dbg !7358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69(i32 noundef %0) unnamed_addr #14 !dbg !7359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7361, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.value(metadata i32 1, metadata !7362, metadata !DIExpression()), !dbg !7363
  %2 = and i32 %0, 15, !dbg !7364
  %3 = add nsw i32 %2, -4, !dbg !7364
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7364
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7364
  %6 = icmp slt i32 %0, 0, !dbg !7364
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7364
  store volatile i8 16, i8* %7, align 1, !dbg !7365
  ret void, !dbg !7367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7368 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7477, metadata !DIExpression()), !dbg !7478
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7479
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7481
  br i1 %3, label %4, label %12, !dbg !7482

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7483, !srcloc !7495
  call void @llvm.dbg.value(metadata i32 %5, metadata !7486, metadata !DIExpression()) #23, !dbg !7496
  %6 = icmp eq i32 %5, 0, !dbg !7497
  br i1 %6, label %12, label %7, !dbg !7498

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7499
  %9 = or i32 %8, 268435456, !dbg !7499
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7499
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7501
  %11 = and i32 %10, -32769, !dbg !7501
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7501
  br label %12, !dbg !7502

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7503
  ret void, !dbg !7504
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7505 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7506
  ret void, !dbg !7507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !501, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.value(metadata i8 0, metadata !502, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.value(metadata i32 64, metadata !504, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.value(metadata i32 undef, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7508
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7509
  %3 = load i32, i32* %2, align 4, !dbg !7509
  call void @llvm.dbg.value(metadata i32 %3, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7508
  %4 = add i32 %3, -64, !dbg !7511
  call void @llvm.dbg.value(metadata i32 %4, metadata !503, metadata !DIExpression()), !dbg !7508
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7512
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7513
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7514
  call void @llvm.dbg.value(metadata i8 1, metadata !502, metadata !DIExpression()), !dbg !7508
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7515
  ret void, !dbg !7516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7517 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7518
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7519, !srcloc !7522
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7523, !srcloc !7526
  ret void, !dbg !7527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7528 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7529, !srcloc !7532
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7533
  ret void, !dbg !7534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7535 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7550, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i8 %1, metadata !7551, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i32 %2, metadata !7552, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i32 %3, metadata !7553, metadata !DIExpression()), !dbg !7554
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7555
  %6 = icmp eq i32 %5, -22, !dbg !7557
  br i1 %6, label %7, label %9, !dbg !7558

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7559
  %8 = zext i8 %1 to i32, !dbg !7559
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.81, i32 0, i32 0), i32 noundef %8) #25, !dbg !7559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7559
  unreachable, !dbg !7559

9:                                                ; preds = %4
  ret void, !dbg !7564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7565 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7570, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i8 %1, metadata !7571, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i32 undef, metadata !7572, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i32 undef, metadata !7573, metadata !DIExpression()), !dbg !7575
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7576
  call void @llvm.dbg.value(metadata i8 %3, metadata !7574, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7575
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7577
  call void @llvm.dbg.value(metadata i32 %4, metadata !7574, metadata !DIExpression()), !dbg !7575
  %5 = trunc i32 %4 to i8, !dbg !7578
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7579
  ret i32 %4, !dbg !7580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7581 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7585, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8 %1, metadata !7586, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i8 %2, metadata !7587, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i1 %3, metadata !7588, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7591
  %5 = zext i8 %2 to i32, !dbg !7592
  call void @llvm.dbg.value(metadata i32 %5, metadata !7590, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 0, metadata !7589, metadata !DIExpression()), !dbg !7591
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7590, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 0, metadata !7589, metadata !DIExpression()), !dbg !7591
  %7 = icmp eq i8 %1, 0, !dbg !7593
  br i1 %7, label %30, label %8, !dbg !7596

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7590, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata i32 %10, metadata !7589, metadata !DIExpression()), !dbg !7591
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7597
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7600
  %13 = load i32, i32* %12, align 4, !dbg !7600
  %14 = icmp eq i32 %13, 0, !dbg !7601
  br i1 %14, label %26, label %15, !dbg !7602

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7603

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7605
  %18 = icmp eq i32 %17, 0, !dbg !7605
  br i1 %18, label %19, label %20, !dbg !7606

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.82, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7607
  br label %30, !dbg !7613

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7614
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7615
  call void @llvm.dbg.value(metadata i32 %22, metadata !7590, metadata !DIExpression()), !dbg !7591
  %23 = icmp eq i32 %22, -22, !dbg !7616
  br i1 %23, label %30, label %24, !dbg !7618

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7619
  call void @llvm.dbg.value(metadata i32 %25, metadata !7590, metadata !DIExpression()), !dbg !7591
  br label %26, !dbg !7620

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7591
  call void @llvm.dbg.value(metadata i32 %27, metadata !7590, metadata !DIExpression()), !dbg !7591
  %28 = add nuw nsw i32 %10, 1, !dbg !7621
  call void @llvm.dbg.value(metadata i32 %28, metadata !7589, metadata !DIExpression()), !dbg !7591
  %29 = icmp eq i32 %28, %6, !dbg !7593
  br i1 %29, label %30, label %8, !dbg !7596, !llvm.loop !7622

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7591
  ret i32 %31, !dbg !7624
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7625 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7629, metadata !DIExpression()), !dbg !7631
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7632
  %3 = load i32, i32* %2, align 4, !dbg !7632
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7633, !range !7634
  %5 = icmp ult i32 %4, 2, !dbg !7633
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7635
  br i1 %7, label %8, label %15, !dbg !7635

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7636
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7637
  %11 = load i32, i32* %10, align 4, !dbg !7637
  %12 = and i32 %11, %9, !dbg !7638
  %13 = icmp eq i32 %12, 0, !dbg !7639
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7630, metadata !DIExpression()), !dbg !7631
  ret i32 %16, !dbg !7640
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7641 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7645, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7646, metadata !DIExpression()), !dbg !7648
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7649
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7649
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7647, metadata !DIExpression()), !dbg !7650
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7651
  %6 = load i32, i32* %5, align 4, !dbg !7651
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7652
  store i32 %6, i32* %7, align 4, !dbg !7653
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7654
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7655
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7656
  %11 = load i32, i32* %10, align 4, !dbg !7656
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7657
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7658
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7659
  ret i32 %12, !dbg !7660
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7661 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7668, metadata !DIExpression()), !dbg !7672
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7669, metadata !DIExpression()), !dbg !7672
  call void @llvm.dbg.value(metadata i32 undef, metadata !7670, metadata !DIExpression()), !dbg !7672
  call void @llvm.dbg.value(metadata i32 %2, metadata !7671, metadata !DIExpression()), !dbg !7672
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7673
  %5 = load i32, i32* %4, align 4, !dbg !7673
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7674
  %7 = or i32 %6, %5, !dbg !7675
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7676
  store i32 %7, i32* %8, align 4, !dbg !7677
  ret void, !dbg !7678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7679 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7683, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7684, metadata !DIExpression()), !dbg !7685
  %3 = zext i8 %0 to i32, !dbg !7686
  %4 = icmp ugt i8 %0, 7, !dbg !7688
  br i1 %4, label %5, label %6, !dbg !7689

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.83, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7690
  br label %7, !dbg !7696

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7697
  br label %7, !dbg !7698

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7685
  ret i32 %8, !dbg !7699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7704, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7705, metadata !DIExpression()), !dbg !7706
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7707
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7708
  %4 = load i32, i32* %3, align 4, !dbg !7708
  %5 = and i32 %4, -32, !dbg !7709
  %6 = or i32 %5, %0, !dbg !7710
  %7 = or i32 %6, 16, !dbg !7710
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7711
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7712
  %9 = load i32, i32* %8, align 4, !dbg !7712
  %10 = or i32 %9, 1, !dbg !7713
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7714
  ret void, !dbg !7715
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7719, metadata !DIExpression()), !dbg !7720
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7721
  ret void, !dbg !7722
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7727, metadata !DIExpression()), !dbg !7728
  %2 = icmp ult i32 %0, 33, !dbg !7729
  br i1 %2, label %11, label %3, !dbg !7731

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7732
  br i1 %4, label %11, label %5, !dbg !7734

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7735
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7736, !range !7634
  %8 = mul nsw i32 %7, -2, !dbg !7737
  %9 = add nsw i32 %8, 62, !dbg !7737
  %10 = and i32 %9, 62, !dbg !7738
  br label %11, !dbg !7739

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7728
  ret i32 %12, !dbg !7740
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7741 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7745, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i8 %1, metadata !7746, metadata !DIExpression()), !dbg !7747
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7748
  %4 = icmp eq i32 %3, -22, !dbg !7750
  br i1 %4, label %5, label %7, !dbg !7751

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7752
  %6 = zext i8 %1 to i32, !dbg !7752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.86, i32 0, i32 0), i32 noundef %6) #25, !dbg !7752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7752
  unreachable, !dbg !7752

7:                                                ; preds = %2
  ret void, !dbg !7757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7758 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7762, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata i8 %1, metadata !7763, metadata !DIExpression()), !dbg !7769
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7770
  call void @llvm.dbg.value(metadata i8 %3, metadata !7764, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7769
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7771
  call void @llvm.dbg.value(metadata i32 %4, metadata !7764, metadata !DIExpression()), !dbg !7769
  %5 = icmp ne i32 %4, -22, !dbg !7772
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7773
  call void @llvm.dbg.value(metadata i32 %4, metadata !7765, metadata !DIExpression()), !dbg !7774
  br i1 %7, label %8, label %12, !dbg !7773

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7765, metadata !DIExpression()), !dbg !7774
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7775
  %10 = add i32 %9, 1, !dbg !7778
  call void @llvm.dbg.value(metadata i32 %10, metadata !7765, metadata !DIExpression()), !dbg !7774
  %11 = icmp eq i32 %10, 8, !dbg !7779
  br i1 %11, label %12, label %8, !dbg !7780, !llvm.loop !7781

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7783
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7787, metadata !DIExpression()), !dbg !7788
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7789
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7790
  ret void, !dbg !7791
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7792 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7797
  %2 = icmp ugt i32 %1, 8, !dbg !7799
  br i1 %2, label %3, label %4, !dbg !7800

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7801
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.87, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7801
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7801
  unreachable, !dbg !7801

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7806
  call void @llvm.dbg.value(metadata i32 0, metadata !7796, metadata !DIExpression()), !dbg !7807
  %5 = icmp eq i32 %1, 0, !dbg !7808
  br i1 %5, label %13, label %6, !dbg !7811

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7811

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7796, metadata !DIExpression()), !dbg !7807
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7812
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7814
  %11 = add nuw i32 %9, 1, !dbg !7815
  call void @llvm.dbg.value(metadata i32 %11, metadata !7796, metadata !DIExpression()), !dbg !7807
  %12 = icmp eq i32 %11, %1, !dbg !7808
  br i1 %12, label %13, label %8, !dbg !7811, !llvm.loop !7816

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7818
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7819
  tail call void @arm_core_mpu_enable() #24, !dbg !7820
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7821
  %16 = and i32 %15, 65280, !dbg !7821
  %17 = icmp eq i32 %16, 2048, !dbg !7821
  br i1 %17, label %19, label %18, !dbg !7824

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.88, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7825
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.89, i32 0, i32 0)) #25, !dbg !7825
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7825
  unreachable, !dbg !7825

19:                                               ; preds = %13
  ret i32 0, !dbg !7827
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7828 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7835, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.value(metadata i8* %1, metadata !7836, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.value(metadata i8* %0, metadata !7837, metadata !DIExpression()), !dbg !7838
  %3 = load i8, i8* %1, align 1, !dbg !7839
  %4 = icmp eq i8 %3, 0, !dbg !7840
  br i1 %4, label %13, label %5, !dbg !7841

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7835, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.value(metadata i8* %8, metadata !7836, metadata !DIExpression()), !dbg !7838
  store i8 %6, i8* %7, align 1, !dbg !7842
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7844
  call void @llvm.dbg.value(metadata i8* %9, metadata !7835, metadata !DIExpression()), !dbg !7838
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7845
  call void @llvm.dbg.value(metadata i8* %10, metadata !7836, metadata !DIExpression()), !dbg !7838
  %11 = load i8, i8* %10, align 1, !dbg !7839
  %12 = icmp eq i8 %11, 0, !dbg !7840
  br i1 %12, label %13, label %5, !dbg !7841, !llvm.loop !7846

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7848
  ret i8* %0, !dbg !7849
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7850 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7854, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i8* %1, metadata !7855, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i32 %2, metadata !7856, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i8* %0, metadata !7857, metadata !DIExpression()), !dbg !7858
  %4 = icmp eq i32 %2, 0, !dbg !7859
  br i1 %4, label %22, label %5, !dbg !7860

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7854, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i32 %7, metadata !7856, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i8* %8, metadata !7855, metadata !DIExpression()), !dbg !7858
  %9 = load i8, i8* %8, align 1, !dbg !7861
  %10 = icmp eq i8 %9, 0, !dbg !7862
  br i1 %10, label %16, label %11, !dbg !7863

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7864
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7866
  call void @llvm.dbg.value(metadata i8* %12, metadata !7855, metadata !DIExpression()), !dbg !7858
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7867
  call void @llvm.dbg.value(metadata i8* %13, metadata !7854, metadata !DIExpression()), !dbg !7858
  %14 = add i32 %7, -1, !dbg !7868
  call void @llvm.dbg.value(metadata i32 %14, metadata !7856, metadata !DIExpression()), !dbg !7858
  %15 = icmp eq i32 %14, 0, !dbg !7859
  br i1 %15, label %22, label %5, !dbg !7860, !llvm.loop !7869

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7854, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i32 %18, metadata !7856, metadata !DIExpression()), !dbg !7858
  store i8 0, i8* %17, align 1, !dbg !7871
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7873
  call void @llvm.dbg.value(metadata i8* %19, metadata !7854, metadata !DIExpression()), !dbg !7858
  %20 = add i32 %18, -1, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %20, metadata !7856, metadata !DIExpression()), !dbg !7858
  %21 = icmp eq i32 %20, 0, !dbg !7875
  br i1 %21, label %22, label %16, !dbg !7876, !llvm.loop !7877

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7879
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7880 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7884, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %1, metadata !7885, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %1, metadata !7886, metadata !DIExpression()), !dbg !7887
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7888

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7884, metadata !DIExpression()), !dbg !7887
  %6 = load i8, i8* %5, align 1, !dbg !7889
  %7 = icmp eq i8 %6, %3, !dbg !7890
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7891
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7892
  call void @llvm.dbg.value(metadata i8* %10, metadata !7884, metadata !DIExpression()), !dbg !7887
  br i1 %9, label %11, label %4, !dbg !7891, !llvm.loop !7894

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7896
  ret i8* %12, !dbg !7897
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7898 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7900, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i32 %1, metadata !7901, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i8* null, metadata !7902, metadata !DIExpression()), !dbg !7903
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7904

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7903
  call void @llvm.dbg.value(metadata i8* %6, metadata !7902, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i8* %5, metadata !7900, metadata !DIExpression()), !dbg !7903
  %7 = load i8, i8* %5, align 1, !dbg !7905
  %8 = icmp eq i8 %7, %3, !dbg !7908
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7909
  call void @llvm.dbg.value(metadata i8* %9, metadata !7902, metadata !DIExpression()), !dbg !7903
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7910
  call void @llvm.dbg.value(metadata i8* %10, metadata !7900, metadata !DIExpression()), !dbg !7903
  %11 = icmp eq i8 %7, 0, !dbg !7911
  br i1 %11, label %12, label %4, !dbg !7911, !llvm.loop !7912

12:                                               ; preds = %4
  ret i8* %9, !dbg !7914
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7915 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7919, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 0, metadata !7920, metadata !DIExpression()), !dbg !7921
  %2 = load i8, i8* %0, align 1, !dbg !7922
  %3 = icmp eq i8 %2, 0, !dbg !7923
  br i1 %3, label %11, label %4, !dbg !7924

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7920, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i8* %6, metadata !7919, metadata !DIExpression()), !dbg !7921
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7925
  call void @llvm.dbg.value(metadata i8* %7, metadata !7919, metadata !DIExpression()), !dbg !7921
  %8 = add i32 %5, 1, !dbg !7927
  call void @llvm.dbg.value(metadata i32 %8, metadata !7920, metadata !DIExpression()), !dbg !7921
  %9 = load i8, i8* %7, align 1, !dbg !7922
  %10 = icmp eq i8 %9, 0, !dbg !7923
  br i1 %10, label %11, label %4, !dbg !7924, !llvm.loop !7928

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7921
  ret i32 %12, !dbg !7930
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7931 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7935, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i32 %1, metadata !7936, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i32 0, metadata !7937, metadata !DIExpression()), !dbg !7938
  %3 = load i8, i8* %0, align 1, !dbg !7939
  %4 = icmp ne i8 %3, 0, !dbg !7940
  %5 = icmp ne i32 %1, 0, !dbg !7941
  %6 = and i1 %4, %5, !dbg !7941
  br i1 %6, label %7, label %16, !dbg !7942

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7937, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i8* %9, metadata !7935, metadata !DIExpression()), !dbg !7938
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7943
  call void @llvm.dbg.value(metadata i8* %10, metadata !7935, metadata !DIExpression()), !dbg !7938
  %11 = add nuw i32 %8, 1, !dbg !7945
  call void @llvm.dbg.value(metadata i32 %11, metadata !7937, metadata !DIExpression()), !dbg !7938
  %12 = load i8, i8* %10, align 1, !dbg !7939
  %13 = icmp ne i8 %12, 0, !dbg !7940
  %14 = icmp ult i32 %11, %1, !dbg !7941
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7941
  br i1 %15, label %7, label %16, !dbg !7942, !llvm.loop !7946

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7938
  ret i32 %17, !dbg !7948
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7949 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7953, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i8* %1, metadata !7954, metadata !DIExpression()), !dbg !7955
  %3 = load i8, i8* %0, align 1, !dbg !7956
  %4 = load i8, i8* %1, align 1, !dbg !7957
  %5 = icmp ne i8 %3, %4, !dbg !7958
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7959
  br i1 %7, label %18, label %8, !dbg !7959

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7954, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i8* %10, metadata !7953, metadata !DIExpression()), !dbg !7955
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7960
  call void @llvm.dbg.value(metadata i8* %11, metadata !7953, metadata !DIExpression()), !dbg !7955
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7962
  call void @llvm.dbg.value(metadata i8* %12, metadata !7954, metadata !DIExpression()), !dbg !7955
  %13 = load i8, i8* %11, align 1, !dbg !7956
  %14 = load i8, i8* %12, align 1, !dbg !7957
  %15 = icmp ne i8 %13, %14, !dbg !7958
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7959
  br i1 %17, label %18, label %8, !dbg !7959, !llvm.loop !7963

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7956
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7957
  %21 = zext i8 %19 to i32, !dbg !7966
  %22 = zext i8 %20 to i32, !dbg !7967
  %23 = sub nsw i32 %21, %22, !dbg !7968
  ret i32 %23, !dbg !7969
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7974, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %1, metadata !7975, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 %2, metadata !7976, metadata !DIExpression()), !dbg !7977
  %4 = icmp eq i32 %2, 0, !dbg !7978
  br i1 %4, label %23, label %5, !dbg !7978

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7976, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %7, metadata !7975, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8* %8, metadata !7974, metadata !DIExpression()), !dbg !7977
  %9 = load i8, i8* %8, align 1, !dbg !7979
  %10 = load i8, i8* %7, align 1, !dbg !7980
  %11 = icmp ne i8 %9, %10, !dbg !7981
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7982
  br i1 %13, label %19, label %14, !dbg !7982

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7983
  call void @llvm.dbg.value(metadata i8* %15, metadata !7974, metadata !DIExpression()), !dbg !7977
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7985
  call void @llvm.dbg.value(metadata i8* %16, metadata !7975, metadata !DIExpression()), !dbg !7977
  %17 = add i32 %6, -1, !dbg !7986
  call void @llvm.dbg.value(metadata i32 %17, metadata !7976, metadata !DIExpression()), !dbg !7977
  %18 = icmp eq i32 %17, 0, !dbg !7978
  br i1 %18, label %23, label %5, !dbg !7978, !llvm.loop !7987

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7990
  %21 = zext i8 %10 to i32, !dbg !7991
  %22 = sub nsw i32 %20, %21, !dbg !7992
  br label %23, !dbg !7993

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7993
  ret i32 %24, !dbg !7994
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7995 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7999, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i8* %1, metadata !8000, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i8** %2, metadata !8001, metadata !DIExpression()), !dbg !8004
  %4 = icmp eq i8* %0, null, !dbg !8005
  br i1 %4, label %5, label %7, !dbg !8005

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8006
  br label %7, !dbg !8005

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8005
  call void @llvm.dbg.value(metadata i8* %8, metadata !8002, metadata !DIExpression()), !dbg !8004
  %9 = load i8, i8* %8, align 1, !dbg !8007
  %10 = icmp eq i8 %9, 0, !dbg !8007
  br i1 %10, label %33, label %11, !dbg !8008

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8002, metadata !DIExpression()), !dbg !8004
  %14 = zext i8 %12 to i32, !dbg !8007
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8009
  %16 = icmp eq i8* %15, null, !dbg !8008
  br i1 %16, label %21, label %17, !dbg !8010

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8011
  call void @llvm.dbg.value(metadata i8* %18, metadata !8002, metadata !DIExpression()), !dbg !8004
  %19 = load i8, i8* %18, align 1, !dbg !8007
  %20 = icmp eq i8 %19, 0, !dbg !8007
  br i1 %20, label %33, label %11, !dbg !8008, !llvm.loop !8013

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8003, metadata !DIExpression()), !dbg !8004
  %24 = zext i8 %22 to i32, !dbg !8015
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8016
  %26 = icmp eq i8* %25, null, !dbg !8017
  br i1 %26, label %27, label %31, !dbg !8018

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8019
  call void @llvm.dbg.value(metadata i8* %28, metadata !8003, metadata !DIExpression()), !dbg !8004
  %29 = load i8, i8* %28, align 1, !dbg !8015
  %30 = icmp eq i8 %29, 0, !dbg !8015
  br i1 %30, label %33, label %21, !dbg !8021, !llvm.loop !8022

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8024
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8027
  br label %33, !dbg !8028

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8004
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8004
  store i8* %34, i8** %2, align 4, !dbg !8004
  ret i8* %35, !dbg !8029
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !8030 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8032, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata i8* %1, metadata !8033, metadata !DIExpression()), !dbg !8034
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8035
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8036
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8037
  ret i8* %0, !dbg !8038
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8039 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8041, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i8* %1, metadata !8042, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i32 %2, metadata !8043, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i8* %0, metadata !8044, metadata !DIExpression()), !dbg !8046
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8047
  call void @llvm.dbg.value(metadata i32 %4, metadata !8045, metadata !DIExpression()), !dbg !8046
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8048
  call void @llvm.dbg.value(metadata i8* %5, metadata !8041, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i8* %1, metadata !8042, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i32 %2, metadata !8043, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i32 %2, metadata !8043, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8046
  %6 = icmp eq i32 %2, 0, !dbg !8049
  br i1 %6, label %18, label %7, !dbg !8050

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8051
  call void @llvm.dbg.value(metadata i8* %9, metadata !8041, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i8* %10, metadata !8042, metadata !DIExpression()), !dbg !8046
  %12 = load i8, i8* %10, align 1, !dbg !8052
  %13 = icmp eq i8 %12, 0, !dbg !8053
  br i1 %13, label %18, label %14, !dbg !8054

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8055
  call void @llvm.dbg.value(metadata i8* %15, metadata !8042, metadata !DIExpression()), !dbg !8046
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8057
  call void @llvm.dbg.value(metadata i8* %16, metadata !8041, metadata !DIExpression()), !dbg !8046
  store i8 %12, i8* %9, align 1, !dbg !8058
  call void @llvm.dbg.value(metadata i32 %11, metadata !8043, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i32 %11, metadata !8043, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8046
  %17 = icmp eq i32 %11, 0, !dbg !8049
  br i1 %17, label %18, label %7, !dbg !8050, !llvm.loop !8059

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8046
  store i8 0, i8* %19, align 1, !dbg !8061
  ret i8* %0, !dbg !8062
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8063 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8067, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i8* %1, metadata !8068, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i32 %2, metadata !8069, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i8* %0, metadata !8070, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i8* %1, metadata !8071, metadata !DIExpression()), !dbg !8072
  %4 = icmp eq i32 %2, 0, !dbg !8073
  br i1 %4, label %31, label %5, !dbg !8075

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8071, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i8* %0, metadata !8070, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i32 %2, metadata !8069, metadata !DIExpression()), !dbg !8072
  %6 = add i32 %2, -1, !dbg !8076
  call void @llvm.dbg.value(metadata i32 %6, metadata !8069, metadata !DIExpression()), !dbg !8072
  %7 = icmp eq i32 %6, 0, !dbg !8077
  br i1 %7, label %23, label %8, !dbg !8078

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8079
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8079
  br label %11, !dbg !8079

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8071, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i8* %14, metadata !8070, metadata !DIExpression()), !dbg !8072
  %15 = load i8, i8* %14, align 1, !dbg !8080
  %16 = load i8, i8* %13, align 1, !dbg !8081
  %17 = icmp eq i8 %15, %16, !dbg !8082
  br i1 %17, label %18, label %23, !dbg !8079

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8083
  call void @llvm.dbg.value(metadata i8* %19, metadata !8070, metadata !DIExpression()), !dbg !8072
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8085
  call void @llvm.dbg.value(metadata i8* %20, metadata !8071, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i32 %12, metadata !8069, metadata !DIExpression()), !dbg !8072
  %21 = add i32 %12, -1, !dbg !8076
  call void @llvm.dbg.value(metadata i32 %21, metadata !8069, metadata !DIExpression()), !dbg !8072
  %22 = icmp eq i32 %21, 0, !dbg !8077
  br i1 %22, label %23, label %11, !dbg !8078, !llvm.loop !8086

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8072
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8072
  %26 = load i8, i8* %24, align 1, !dbg !8088
  %27 = zext i8 %26 to i32, !dbg !8088
  %28 = load i8, i8* %25, align 1, !dbg !8089
  %29 = zext i8 %28 to i32, !dbg !8089
  %30 = sub nsw i32 %27, %29, !dbg !8090
  br label %31, !dbg !8091

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8072
  ret i32 %32, !dbg !8092
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8093 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8097, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i8* %1, metadata !8098, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i32 %2, metadata !8099, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i8* %0, metadata !8100, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i8* %1, metadata !8101, metadata !DIExpression()), !dbg !8102
  %4 = ptrtoint i8* %0 to i32, !dbg !8103
  %5 = ptrtoint i8* %1 to i32, !dbg !8103
  %6 = sub i32 %4, %5, !dbg !8103
  %7 = icmp ult i32 %6, %2, !dbg !8105
  br i1 %7, label %10, label %8, !dbg !8106

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8101, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i8* %0, metadata !8100, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i32 %2, metadata !8099, metadata !DIExpression()), !dbg !8102
  %9 = icmp eq i32 %2, 0, !dbg !8107
  br i1 %9, label %26, label %17, !dbg !8109

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8099, metadata !DIExpression()), !dbg !8102
  %12 = add i32 %11, -1, !dbg !8110
  call void @llvm.dbg.value(metadata i32 %12, metadata !8099, metadata !DIExpression()), !dbg !8102
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8113
  %14 = load i8, i8* %13, align 1, !dbg !8113
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8114
  store i8 %14, i8* %15, align 1, !dbg !8115
  %16 = icmp eq i32 %12, 0, !dbg !8116
  br i1 %16, label %26, label %10, !dbg !8117, !llvm.loop !8118

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8101, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i8* %19, metadata !8100, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i32 %20, metadata !8099, metadata !DIExpression()), !dbg !8102
  %21 = load i8, i8* %18, align 1, !dbg !8120
  store i8 %21, i8* %19, align 1, !dbg !8122
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8123
  call void @llvm.dbg.value(metadata i8* %22, metadata !8100, metadata !DIExpression()), !dbg !8102
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8124
  call void @llvm.dbg.value(metadata i8* %23, metadata !8101, metadata !DIExpression()), !dbg !8102
  %24 = add i32 %20, -1, !dbg !8125
  call void @llvm.dbg.value(metadata i32 %24, metadata !8099, metadata !DIExpression()), !dbg !8102
  %25 = icmp eq i32 %24, 0, !dbg !8107
  br i1 %25, label %26, label %17, !dbg !8109, !llvm.loop !8126

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8128
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8135, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i8* %1, metadata !8136, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32 %2, metadata !8137, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i8* %0, metadata !8138, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i8* %1, metadata !8139, metadata !DIExpression()), !dbg !8140
  %4 = icmp eq i32 %2, 0, !dbg !8141
  br i1 %4, label %14, label %5, !dbg !8142

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8139, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i8* %7, metadata !8138, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32 %8, metadata !8137, metadata !DIExpression()), !dbg !8140
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8143
  call void @llvm.dbg.value(metadata i8* %9, metadata !8139, metadata !DIExpression()), !dbg !8140
  %10 = load i8, i8* %6, align 1, !dbg !8145
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8146
  call void @llvm.dbg.value(metadata i8* %11, metadata !8138, metadata !DIExpression()), !dbg !8140
  store i8 %10, i8* %7, align 1, !dbg !8147
  %12 = add i32 %8, -1, !dbg !8148
  call void @llvm.dbg.value(metadata i32 %12, metadata !8137, metadata !DIExpression()), !dbg !8140
  %13 = icmp eq i32 %12, 0, !dbg !8141
  br i1 %13, label %14, label %5, !dbg !8142, !llvm.loop !8149

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8151
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8152 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8156, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 %1, metadata !8157, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 %2, metadata !8158, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i8* %0, metadata !8159, metadata !DIExpression()), !dbg !8161
  %4 = trunc i32 %1 to i8, !dbg !8162
  call void @llvm.dbg.value(metadata i8 %4, metadata !8160, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i32 %2, metadata !8158, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i8* %0, metadata !8159, metadata !DIExpression()), !dbg !8161
  %5 = icmp eq i32 %2, 0, !dbg !8163
  br i1 %5, label %12, label %6, !dbg !8164

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8158, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata i8* %8, metadata !8159, metadata !DIExpression()), !dbg !8161
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8165
  call void @llvm.dbg.value(metadata i8* %9, metadata !8159, metadata !DIExpression()), !dbg !8161
  store i8 %4, i8* %8, align 1, !dbg !8167
  %10 = add i32 %7, -1, !dbg !8168
  call void @llvm.dbg.value(metadata i32 %10, metadata !8158, metadata !DIExpression()), !dbg !8161
  %11 = icmp eq i32 %10, 0, !dbg !8163
  br i1 %11, label %12, label %6, !dbg !8164, !llvm.loop !8169

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8171
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8172 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8176, metadata !DIExpression()), !dbg !8182
  call void @llvm.dbg.value(metadata i32 %1, metadata !8177, metadata !DIExpression()), !dbg !8182
  call void @llvm.dbg.value(metadata i32 %2, metadata !8178, metadata !DIExpression()), !dbg !8182
  %4 = icmp eq i32 %2, 0, !dbg !8183
  br i1 %4, label %17, label %5, !dbg !8184

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8185

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8186
  call void @llvm.dbg.value(metadata i8* %9, metadata !8179, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %8, metadata !8178, metadata !DIExpression()), !dbg !8182
  call void @llvm.dbg.value(metadata i8* %9, metadata !8179, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8186
  %10 = load i8, i8* %9, align 1, !dbg !8187
  %11 = icmp eq i8 %10, %6, !dbg !8190
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8191
  call void @llvm.dbg.value(metadata i8* %12, metadata !8179, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %13, metadata !8178, metadata !DIExpression()), !dbg !8182
  br i1 %15, label %16, label %7, !dbg !8191, !llvm.loop !8192

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8194

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8182
  ret i8* %19, !dbg !8195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8196 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8198, metadata !DIExpression()), !dbg !8199
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8200
  ret void, !dbg !8201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8204, metadata !DIExpression()), !dbg !8205
  ret i32 -1, !dbg !8206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8211, metadata !DIExpression()), !dbg !8213
  call void @llvm.dbg.value(metadata i32* %1, metadata !8212, metadata !DIExpression()), !dbg !8213
  %3 = ptrtoint i32* %1 to i32, !dbg !8214
  %4 = and i32 %3, -2, !dbg !8214
  %5 = icmp eq i32 %4, 2, !dbg !8214
  br i1 %5, label %6, label %9, !dbg !8214

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8215
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8215
  br label %9, !dbg !8216

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8216
  ret i32 %10, !dbg !8217
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8220, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.value(metadata i32* %1, metadata !8221, metadata !DIExpression()), !dbg !8222
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8223
  ret i32 %3, !dbg !8224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8228, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32* %1, metadata !8229, metadata !DIExpression()), !dbg !8230
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8231, !srcloc !8233
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8234
  ret i32 %3, !dbg !8235
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8236 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8241, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.value(metadata i32* %1, metadata !8242, metadata !DIExpression()), !dbg !8245
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8246
  call void @llvm.dbg.value(metadata i32 %3, metadata !8243, metadata !DIExpression()), !dbg !8245
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8247
  call void @llvm.dbg.value(metadata i32 %4, metadata !8244, metadata !DIExpression()), !dbg !8245
  %5 = icmp ne i32 %3, %4, !dbg !8248
  %6 = sext i1 %5 to i32, !dbg !8249
  ret i32 %6, !dbg !8250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8251 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8255, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.value(metadata i32 %1, metadata !8256, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.value(metadata i32 %2, metadata !8257, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.value(metadata i32* %3, metadata !8258, metadata !DIExpression()), !dbg !8259
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8260
  ret i32 %5, !dbg !8261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8262 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8264, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32 %1, metadata !8265, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32 %2, metadata !8266, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32* %3, metadata !8267, metadata !DIExpression()), !dbg !8268
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8269, !srcloc !8271
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8272
  ret i32 %5, !dbg !8273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8274 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8276, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %1, metadata !8277, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %2, metadata !8278, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32* %3, metadata !8279, metadata !DIExpression()), !dbg !8284
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8285
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8287
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8287
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8287
  br i1 %11, label %33, label %12, !dbg !8287

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8284
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8284
  call void @llvm.dbg.value(metadata i8* %14, metadata !8282, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %13, metadata !8280, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %1, metadata !8281, metadata !DIExpression()), !dbg !8284
  br label %15, !dbg !8288

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8290
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8284
  call void @llvm.dbg.value(metadata i8* %17, metadata !8282, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %16, metadata !8281, metadata !DIExpression()), !dbg !8284
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8291
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8294
  call void @llvm.dbg.value(metadata i8* %19, metadata !8282, metadata !DIExpression()), !dbg !8284
  %20 = load i8, i8* %17, align 1, !dbg !8295
  %21 = zext i8 %20 to i32, !dbg !8296
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8291
  %23 = icmp eq i32 %22, -1, !dbg !8297
  br i1 %23, label %30, label %24, !dbg !8298

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8299
  call void @llvm.dbg.value(metadata i32 %25, metadata !8281, metadata !DIExpression()), !dbg !8284
  %26 = icmp eq i32 %25, 0, !dbg !8300
  br i1 %26, label %27, label %15, !dbg !8301, !llvm.loop !8302

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8304
  call void @llvm.dbg.value(metadata i32 %28, metadata !8280, metadata !DIExpression()), !dbg !8284
  %29 = icmp eq i32 %28, 0, !dbg !8305
  br i1 %29, label %30, label %12, !dbg !8306, !llvm.loop !8307

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8284
  call void @llvm.dbg.value(metadata i32 %31, metadata !8280, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.label(metadata !8283), !dbg !8310
  %32 = sub i32 %2, %31, !dbg !8311
  br label %33, !dbg !8312

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8284
  ret i32 %34, !dbg !8313
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8314 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8318, metadata !DIExpression()), !dbg !8319
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8320
  %3 = icmp eq i32 %2, -1, !dbg !8322
  br i1 %3, label %8, label %4, !dbg !8323

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8324
  %6 = icmp eq i32 %5, -1, !dbg !8325
  %7 = sext i1 %6 to i32, !dbg !8324
  br label %8, !dbg !8326

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8319
  ret i32 %9, !dbg !8327
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8328 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8330, metadata !DIExpression()), !dbg !8331
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8332
  ret void, !dbg !8333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8338, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i32 %1, metadata !8339, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8340, metadata !DIExpression()), !dbg !8344
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8345
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8345
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8345
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8341, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i32 %0, metadata !8343, metadata !DIExpression()), !dbg !8344
  %7 = icmp slt i32 %0, %1, !dbg !8346
  br i1 %7, label %8, label %22, !dbg !8349

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8343, metadata !DIExpression()), !dbg !8344
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8350
  %11 = icmp eq i32 %10, 0, !dbg !8350
  br i1 %11, label %19, label %12, !dbg !8353

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8354
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8356
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8356
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8358
  br i1 %15, label %19, label %16, !dbg !8359

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8360
  %18 = load i8*, i8** %17, align 4, !dbg !8360
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8361
  br label %19, !dbg !8362

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8363
  call void @llvm.dbg.value(metadata i32 %20, metadata !8343, metadata !DIExpression()), !dbg !8344
  %21 = icmp eq i32 %20, %1, !dbg !8346
  br i1 %21, label %22, label %8, !dbg !8349, !llvm.loop !8364

22:                                               ; preds = %19, %3
  ret void, !dbg !8366
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !8367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8369, metadata !DIExpression()), !dbg !8370
  %2 = shl nuw i32 1, %0, !dbg !8371
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8374
  ret i32 %3, !dbg !8375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !8376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8380, metadata !DIExpression()), !dbg !8381
  %2 = shl nuw i32 1, %0, !dbg !8382
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8385
  ret void, !dbg !8386
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8390, metadata !DIExpression()), !dbg !8391
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8392
  ret void, !dbg !8393
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8396, metadata !DIExpression()), !dbg !8397
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8398
  %3 = and i32 %2, %0, !dbg !8398
  %4 = icmp eq i32 %3, %0, !dbg !8399
  %5 = zext i1 %4 to i32, !dbg !8399
  ret i32 %5, !dbg !8400
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8403, metadata !DIExpression()), !dbg !8404
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8405
  ret void, !dbg !8406
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8407 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8409, metadata !DIExpression()), !dbg !8410
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8411
  ret void, !dbg !8412
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8413 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8415, metadata !DIExpression()), !dbg !8416
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8417
  ret void, !dbg !8418
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8419 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8421, metadata !DIExpression()), !dbg !8422
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !8423
  ret void, !dbg !8424
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8425 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8427, metadata !DIExpression()), !dbg !8428
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !8429
  ret void, !dbg !8430
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8431 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8433, metadata !DIExpression()), !dbg !8434
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8435
  ret void, !dbg !8436
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8437 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8439, metadata !DIExpression()), !dbg !8440
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !8441
  ret void, !dbg !8442
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8443 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8445, metadata !DIExpression()), !dbg !8446
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !8447
  ret void, !dbg !8448
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8449 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8451, metadata !DIExpression()), !dbg !8452
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8453
  ret void, !dbg !8454
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8457, metadata !DIExpression()), !dbg !8458
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8459
  ret void, !dbg !8460
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8461 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8463, metadata !DIExpression()), !dbg !8464
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8465
  ret i32 0, !dbg !8466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !736 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !740, metadata !DIExpression()), !dbg !8467
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8468
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8470
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8472
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8474
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8476
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8478
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8480
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8482
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8484
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8486
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8488
  ret void, !dbg !8490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8493, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.value(metadata i32 0, metadata !8494, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.value(metadata i32 undef, metadata !8494, metadata !DIExpression()), !dbg !8495
  %2 = lshr i32 6684671, %0, !dbg !8496
  %3 = and i32 %2, 1, !dbg !8496
  %4 = or i32 %3, %0, !dbg !8498
  %5 = icmp eq i32 %4, 0, !dbg !8498
  br i1 %5, label %6, label %7, !dbg !8498

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 123) #25, !dbg !8499
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 123) #25, !dbg !8499
  unreachable, !dbg !8499

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8504
  %9 = load i32, i32* %8, align 4, !dbg !8504
  call void @llvm.dbg.value(metadata i32 %9, metadata !8494, metadata !DIExpression()), !dbg !8495
  %10 = shl nuw i32 1, %0, !dbg !8505
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !8506
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !8507
  ret void, !dbg !8508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8511, metadata !DIExpression()), !dbg !8512
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8513
  %3 = or i32 %2, %0, !dbg !8513
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8513
  ret void, !dbg !8514
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !8515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8517, metadata !DIExpression()), !dbg !8518
  %2 = icmp slt i32 %0, 32, !dbg !8519
  br i1 %2, label %3, label %5, !dbg !8521

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8522
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8524
  br label %5, !dbg !8525

5:                                                ; preds = %1, %3
  ret void, !dbg !8526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8529, metadata !DIExpression()), !dbg !8530
  %2 = xor i32 %0, -1, !dbg !8531
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8531
  %4 = and i32 %3, %2, !dbg !8531
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8531
  ret void, !dbg !8532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !8533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8537, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata i32 %1, metadata !8538, metadata !DIExpression()), !dbg !8539
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8540

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8541
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8543
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8544
  br label %11, !dbg !8545

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8546
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8547
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8548
  br label %11, !dbg !8549

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8550
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8551
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8552
  br label %11, !dbg !8553

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8554
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8555
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8556
  br label %11, !dbg !8557

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8561, metadata !DIExpression()), !dbg !8562
  %2 = xor i32 %0, -1, !dbg !8563
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8563
  %4 = and i32 %3, %2, !dbg !8563
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8563
  ret void, !dbg !8564
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8567, metadata !DIExpression()), !dbg !8568
  %2 = xor i32 %0, -1, !dbg !8569
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8569
  %4 = and i32 %3, %2, !dbg !8569
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8569
  ret void, !dbg !8570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8573, metadata !DIExpression()), !dbg !8574
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8575
  %3 = or i32 %2, %0, !dbg !8575
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8575
  ret void, !dbg !8576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8579, metadata !DIExpression()), !dbg !8580
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8581
  %3 = or i32 %2, %0, !dbg !8581
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8581
  ret void, !dbg !8582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8587, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8588, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata i8* %2, metadata !8589, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8590, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8592, metadata !DIExpression()), !dbg !8593
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8594
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8594
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8596
  br i1 %6, label %7, label %9, !dbg !8597

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8598
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8599
  store i8* %2, i8** %8, align 4, !dbg !8600
  br label %9, !dbg !8601

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8593
  ret i32 %10, !dbg !8602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8605, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8606, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8607, metadata !DIExpression()), !dbg !8608
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8609
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8610
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8611
  store i8* null, i8** %3, align 4, !dbg !8612
  ret void, !dbg !8613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8614 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8616, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i8* %1, metadata !8617, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i8* %1, metadata !8618, metadata !DIExpression()), !dbg !8621
  %3 = bitcast i8* %1 to i32*, !dbg !8622
  %4 = load i32, i32* %3, align 4, !dbg !8622
  %5 = add i32 %4, -169, !dbg !8622
  %6 = icmp ult i32 %5, -121, !dbg !8622
  br i1 %6, label %15, label %7, !dbg !8624

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8625
  %9 = inttoptr i32 %8 to i32*, !dbg !8626
  call void @llvm.dbg.value(metadata i32* %9, metadata !8619, metadata !DIExpression()), !dbg !8621
  %10 = load volatile i32, i32* %9, align 4, !dbg !8627
  call void @llvm.dbg.value(metadata i32 %10, metadata !8620, metadata !DIExpression()), !dbg !8621
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8628
  %12 = bitcast i8* %11 to i32*, !dbg !8628
  %13 = load i32, i32* %12, align 4, !dbg !8628
  %14 = or i32 %13, %10, !dbg !8629
  call void @llvm.dbg.value(metadata i32 %14, metadata !8620, metadata !DIExpression()), !dbg !8621
  store volatile i32 %14, i32* %9, align 4, !dbg !8630
  br label %15, !dbg !8631

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8621
  ret i32 %16, !dbg !8632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8635, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %1, metadata !8636, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %1, metadata !8637, metadata !DIExpression()), !dbg !8640
  %3 = bitcast i8* %1 to i32*, !dbg !8641
  %4 = load i32, i32* %3, align 4, !dbg !8641
  %5 = add i32 %4, -169, !dbg !8641
  %6 = icmp ult i32 %5, -121, !dbg !8641
  br i1 %6, label %16, label %7, !dbg !8643

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8644
  %9 = inttoptr i32 %8 to i32*, !dbg !8645
  call void @llvm.dbg.value(metadata i32* %9, metadata !8638, metadata !DIExpression()), !dbg !8640
  %10 = load volatile i32, i32* %9, align 4, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %10, metadata !8639, metadata !DIExpression()), !dbg !8640
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8647
  %12 = bitcast i8* %11 to i32*, !dbg !8647
  %13 = load i32, i32* %12, align 4, !dbg !8647
  %14 = xor i32 %13, -1, !dbg !8648
  %15 = and i32 %10, %14, !dbg !8649
  call void @llvm.dbg.value(metadata i32 %15, metadata !8639, metadata !DIExpression()), !dbg !8640
  store volatile i32 %15, i32* %9, align 4, !dbg !8650
  br label %16, !dbg !8651

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8640
  ret i32 %17, !dbg !8652
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8653 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8655, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i8* %1, metadata !8656, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32* %2, metadata !8657, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i8* %1, metadata !8658, metadata !DIExpression()), !dbg !8663
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8664
  call void @llvm.dbg.value(metadata i32 %4, metadata !8659, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 undef, metadata !8660, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 undef, metadata !8661, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 %4, metadata !8662, metadata !DIExpression()), !dbg !8663
  %5 = bitcast i8* %1 to i32*, !dbg !8665
  %6 = load i32, i32* %5, align 4, !dbg !8665
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8666

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !8667
  call void @llvm.dbg.value(metadata i32 %8, metadata !8660, metadata !DIExpression()), !dbg !8663
  br label %19, !dbg !8668

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !8670
  call void @llvm.dbg.value(metadata i32 %10, metadata !8661, metadata !DIExpression()), !dbg !8663
  br label %19, !dbg !8671

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8672
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #24, !dbg !8673
  br label %19, !dbg !8674

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8675
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !8676
  br label %19, !dbg !8677

17:                                               ; preds = %3
  br label %19, !dbg !8678

18:                                               ; preds = %3
  br label %19, !dbg !8679

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8680
  br label %21, !dbg !8681

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8663
  ret i32 %22, !dbg !8681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8682 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8684, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.value(metadata i8* %1, metadata !8685, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.value(metadata i8* %2, metadata !8686, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.value(metadata i8* %1, metadata !8687, metadata !DIExpression()), !dbg !8692
  %4 = bitcast i8* %1 to i32*, !dbg !8693
  %5 = load i32, i32* %4, align 4, !dbg !8693
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8694
  call void @llvm.dbg.value(metadata i32 %6, metadata !8691, metadata !DIExpression()), !dbg !8692
  %7 = icmp slt i32 %6, 0, !dbg !8695
  br i1 %7, label %22, label %8, !dbg !8697

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8687, metadata !DIExpression()), !dbg !8692
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8698
  %10 = bitcast i8* %9 to i32*, !dbg !8698
  %11 = load i32, i32* %10, align 4, !dbg !8698
  %12 = lshr i32 %11, 16, !dbg !8698
  %13 = and i32 %12, 7, !dbg !8698
  %14 = lshr i32 %11, 8, !dbg !8699
  %15 = and i32 %14, 31, !dbg !8699
  %16 = shl i32 %13, %15, !dbg !8700
  call void @llvm.dbg.value(metadata i32 %16, metadata !8690, metadata !DIExpression()), !dbg !8692
  %17 = and i32 %11, 255, !dbg !8701
  %18 = or i32 %17, 1073887232, !dbg !8702
  %19 = inttoptr i32 %18 to i32*, !dbg !8703
  call void @llvm.dbg.value(metadata i32* %19, metadata !8688, metadata !DIExpression()), !dbg !8692
  %20 = load volatile i32, i32* %19, align 4, !dbg !8704
  call void @llvm.dbg.value(metadata i32 %20, metadata !8689, metadata !DIExpression()), !dbg !8692
  %21 = or i32 %16, %20, !dbg !8705
  call void @llvm.dbg.value(metadata i32 %21, metadata !8689, metadata !DIExpression()), !dbg !8692
  store volatile i32 %21, i32* %19, align 4, !dbg !8706
  br label %22, !dbg !8707

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8692
  ret i32 %23, !dbg !8708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8713, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i32 0, metadata !8714, metadata !DIExpression()), !dbg !8715
  %2 = add i32 %0, -1, !dbg !8716
  %3 = icmp ult i32 %2, 6, !dbg !8716
  br i1 %3, label %4, label %7, !dbg !8716

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8716
  %6 = load i32, i32* %5, align 4, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %6, metadata !8714, metadata !DIExpression()), !dbg !8715
  br label %7, !dbg !8717

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8715
  ret i32 %8, !dbg !8718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8723, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.value(metadata i32 %1, metadata !8724, metadata !DIExpression()), !dbg !8725
  %3 = udiv i32 %0, %1, !dbg !8726
  ret i32 %3, !dbg !8727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8732, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 16, metadata !8733, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 336, metadata !8734, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 %1, metadata !8735, metadata !DIExpression()), !dbg !8736
  %3 = mul i32 %0, 336, !dbg !8737
  %4 = shl nsw i32 %1, 4, !dbg !8738
  %5 = udiv i32 %3, %4, !dbg !8739
  ret i32 %5, !dbg !8740
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8741 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8743, metadata !DIExpression()), !dbg !8746
  tail call void @config_enable_default_clocks() #25, !dbg !8747
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8748
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8748
  %4 = lshr i32 %3, 4, !dbg !8748
  %5 = and i32 %4, 15, !dbg !8748
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8748
  %7 = load i8, i8* %6, align 1, !dbg !8748
  %8 = zext i8 %7 to i32, !dbg !8748
  %9 = lshr i32 %2, %8, !dbg !8748
  call void @llvm.dbg.value(metadata i32 %9, metadata !8744, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8745, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8746
  %10 = icmp ult i32 %9, 84000000, !dbg !8749
  br i1 %10, label %11, label %13, !dbg !8751

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8752
  br label %13, !dbg !8754

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8755
  tail call fastcc void @set_up_plls() #24, !dbg !8756
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8757
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8760
  br label %14, !dbg !8761

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8762
  %16 = icmp eq i32 %15, 8, !dbg !8763
  br i1 %16, label %17, label %14, !dbg !8761, !llvm.loop !8764

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8766
  br i1 %18, label %19, label %21, !dbg !8768

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8769
  br label %21, !dbg !8771

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8772
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8773
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8774
  ret i32 0, !dbg !8775
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8776 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8778
  %2 = and i32 %1, 240, !dbg !8778
  ret i32 %2, !dbg !8779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8780 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !8781
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !8786
  br label %1, !dbg !8787

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !8788
  %3 = icmp eq i32 %2, 1, !dbg !8789
  br i1 %3, label %4, label %1, !dbg !8787, !llvm.loop !8790

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8792
  br label %5, !dbg !8795

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8796
  %7 = icmp eq i32 %6, 1, !dbg !8797
  br i1 %7, label %8, label %5, !dbg !8795, !llvm.loop !8798

8:                                                ; preds = %5
  ret void, !dbg !8800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8801 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8802
  %2 = icmp eq i32 %1, 8, !dbg !8804
  br i1 %2, label %3, label %4, !dbg !8805

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8806
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8808
  br label %4, !dbg !8809

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8810
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8811
  %6 = and i32 %5, -196609, !dbg !8811
  %7 = or i32 %6, 65536, !dbg !8811
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8811
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8812
  %9 = and i32 %8, -251658241, !dbg !8812
  %10 = or i32 %9, 117440512, !dbg !8812
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8812
  tail call void @config_pll_sysclock() #25, !dbg !8813
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8814
  br label %11, !dbg !8815

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8816
  %13 = icmp eq i32 %12, 1, !dbg !8817
  br i1 %13, label %14, label %11, !dbg !8815, !llvm.loop !8818

14:                                               ; preds = %11
  ret void, !dbg !8820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8821 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8823, metadata !DIExpression()), !dbg !8824
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8825
  %2 = and i32 %1, -241, !dbg !8825
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8825
  ret void, !dbg !8826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8829, metadata !DIExpression()), !dbg !8830
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8831
  %3 = and i32 %2, -4, !dbg !8831
  %4 = or i32 %3, %0, !dbg !8831
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8831
  ret void, !dbg !8832
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8833 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8834
  %2 = and i32 %1, 12, !dbg !8834
  ret i32 %2, !dbg !8835
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8836 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8838, metadata !DIExpression()), !dbg !8839
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8840
  %2 = and i32 %1, -7169, !dbg !8840
  %3 = or i32 %2, 4096, !dbg !8840
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8840
  ret void, !dbg !8841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8842 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8844, metadata !DIExpression()), !dbg !8845
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8846
  %2 = and i32 %1, -57345, !dbg !8846
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8846
  ret void, !dbg !8847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8848 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8849
  %2 = icmp eq i32 %1, 1, !dbg !8851
  br i1 %2, label %7, label %3, !dbg !8852

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8853
  br label %4, !dbg !8855

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8856
  %6 = icmp eq i32 %5, 1, !dbg !8857
  br i1 %6, label %7, label %4, !dbg !8855, !llvm.loop !8858

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8860
  br label %8, !dbg !8861

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8862
  %10 = icmp eq i32 %9, 0, !dbg !8863
  br i1 %10, label %11, label %8, !dbg !8861, !llvm.loop !8864

11:                                               ; preds = %8
  ret void, !dbg !8866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8867 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8868
  %2 = and i32 %1, -16777217, !dbg !8868
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8868
  ret void, !dbg !8869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8870 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8871
  %2 = or i32 %1, 16777216, !dbg !8871
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8871
  ret void, !dbg !8872
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8873 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8874
  %2 = lshr i32 %1, 25, !dbg !8875
  %3 = and i32 %2, 1, !dbg !8875
  ret i32 %3, !dbg !8876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8877 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8878
  %2 = lshr i32 %1, 1, !dbg !8879
  %3 = and i32 %2, 1, !dbg !8879
  ret i32 %3, !dbg !8880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8881 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8882
  %2 = or i32 %1, 1, !dbg !8882
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8882
  ret void, !dbg !8883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !8884 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8885
  %2 = and i32 %1, -262145, !dbg !8885
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8885
  ret void, !dbg !8886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !8887 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8888
  %2 = or i32 %1, 65536, !dbg !8888
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8888
  ret void, !dbg !8889
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !8890 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8891
  %2 = lshr i32 %1, 17, !dbg !8892
  %3 = and i32 %2, 1, !dbg !8892
  ret i32 %3, !dbg !8893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8894 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8895
  %2 = or i32 %1, 1, !dbg !8895
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8895
  ret void, !dbg !8896
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8897 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8898
  %2 = lshr i32 %1, 1, !dbg !8899
  %3 = and i32 %2, 1, !dbg !8899
  ret i32 %3, !dbg !8900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8901 {
  ret i32 16000000, !dbg !8903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8907 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8908
  ret void, !dbg !8909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8910 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8914, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i32 16, metadata !8915, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i32 336, metadata !8916, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i32 65536, metadata !8917, metadata !DIExpression()), !dbg !8918
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8919
  %2 = and i32 %1, -4227072, !dbg !8919
  %3 = or i32 %2, 4215824, !dbg !8919
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8919
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8920
  %5 = and i32 %4, -196609, !dbg !8920
  %6 = or i32 %5, 65536, !dbg !8920
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8920
  ret void, !dbg !8921
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8922 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8923
  ret void, !dbg !8924
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8925 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8928, metadata !DIExpression()), !dbg !8930
  %2 = bitcast i32* %1 to i8*, !dbg !8931
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8931
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8929, metadata !DIExpression()), !dbg !8932
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8933
  %4 = or i32 %3, 268435456, !dbg !8933
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8933
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8934
  %6 = and i32 %5, 268435456, !dbg !8934
  store volatile i32 %6, i32* %1, align 4, !dbg !8935
  %7 = load volatile i32, i32* %1, align 4, !dbg !8936
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8937
  ret void, !dbg !8937
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8938 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8940, metadata !DIExpression()), !dbg !8941
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8942
  br i1 %2, label %3, label %4, !dbg !8944

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8945
  br label %4, !dbg !8946

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8941
  ret i32 %5, !dbg !8947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8948 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8953, metadata !DIExpression()), !dbg !8954
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8955, !srcloc !8957
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8958
  ret i1 %1, !dbg !8959
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8960 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8961
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8962
  ret void, !dbg !8963
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8966, metadata !DIExpression()), !dbg !8967
  %2 = icmp eq i32 %0, 10, !dbg !8968
  br i1 %2, label %3, label %4, !dbg !8970

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8971
  br label %4, !dbg !8973

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8974
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8975
  ret i32 %0, !dbg !8976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8977 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8980, metadata !DIExpression()), !dbg !8982
  call void @llvm.dbg.value(metadata i8 %0, metadata !8981, metadata !DIExpression()), !dbg !8982
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8983, !srcloc !8985
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8986
  ret void, !dbg !8987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8988 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8990, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i8 %0, metadata !8991, metadata !DIExpression()), !dbg !8993
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8994
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8992, metadata !DIExpression()), !dbg !8993
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8995
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8995
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #25, !dbg !8996
  ret void, !dbg !8997
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8998 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !9000, metadata !DIExpression()), !dbg !9001
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #25, !dbg !9002
  ret i1 %1, !dbg !9003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !9004 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9053, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9054, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9055, metadata !DIExpression()), !dbg !9056
  ret void, !dbg !9057
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9058 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9060, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i8 %1, metadata !9061, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %2, metadata !9062, metadata !DIExpression()), !dbg !9065
  %5 = bitcast i32* %4 to i8*, !dbg !9066
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9066
  call void @llvm.dbg.value(metadata i32* %4, metadata !9064, metadata !DIExpression(DW_OP_deref)), !dbg !9065
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9067
  call void @llvm.dbg.value(metadata i32 %6, metadata !9063, metadata !DIExpression()), !dbg !9065
  %7 = icmp eq i32 %6, 0, !dbg !9068
  br i1 %7, label %8, label %31, !dbg !9070

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9063, metadata !DIExpression()), !dbg !9065
  %9 = and i32 %2, 131072, !dbg !9071
  %10 = icmp eq i32 %9, 0, !dbg !9073
  br i1 %10, label %28, label %11, !dbg !9074

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9075
  %13 = icmp eq i32 %12, 0, !dbg !9078
  br i1 %13, label %18, label %14, !dbg !9079

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9080
  %16 = shl nuw i32 1, %15, !dbg !9080
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9082
  br label %25, !dbg !9083

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9084
  %20 = icmp eq i32 %19, 0, !dbg !9086
  %21 = zext i8 %1 to i32, !dbg !9065
  br i1 %20, label %25, label %22, !dbg !9087

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9088
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9090
  br label %25, !dbg !9091

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9092
  %27 = load i32, i32* %4, align 4, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %30, metadata !9064, metadata !DIExpression()), !dbg !9065
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9094
  br label %31, !dbg !9095

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9092
  %30 = load i32, i32* %4, align 4, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %30, metadata !9064, metadata !DIExpression()), !dbg !9065
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9094
  call void @llvm.dbg.value(metadata i32 0, metadata !9063, metadata !DIExpression()), !dbg !9065
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9096
  ret i32 %6, !dbg !9096
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9097 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9101, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i32* %1, metadata !9102, metadata !DIExpression()), !dbg !9106
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9107
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9107
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9107
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9103, metadata !DIExpression()), !dbg !9106
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9108
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9108
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9108
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9105, metadata !DIExpression()), !dbg !9106
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9109
  store i32 %9, i32* %1, align 4, !dbg !9110
  ret i32 0, !dbg !9111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9112 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9114, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %1, metadata !9115, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %2, metadata !9116, metadata !DIExpression()), !dbg !9120
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9121
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9121
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9121
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9117, metadata !DIExpression()), !dbg !9120
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9122
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9122
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9122
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9118, metadata !DIExpression()), !dbg !9120
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9123
  call void @llvm.dbg.value(metadata i32 %10, metadata !9119, metadata !DIExpression()), !dbg !9120
  %11 = xor i32 %1, -1, !dbg !9124
  %12 = and i32 %10, %11, !dbg !9125
  %13 = and i32 %2, %1, !dbg !9126
  %14 = or i32 %12, %13, !dbg !9127
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9128
  ret i32 0, !dbg !9129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9132, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %1, metadata !9133, metadata !DIExpression()), !dbg !9136
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9137
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9137
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9137
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9134, metadata !DIExpression()), !dbg !9136
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9138
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9138
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9138
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9135, metadata !DIExpression()), !dbg !9136
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9139
  store volatile i32 %1, i32* %9, align 4, !dbg !9139
  ret i32 0, !dbg !9140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9141 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9143, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32 %1, metadata !9144, metadata !DIExpression()), !dbg !9147
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9148
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9148
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9148
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9145, metadata !DIExpression()), !dbg !9147
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9149
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9149
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9149
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9146, metadata !DIExpression()), !dbg !9147
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9150
  ret i32 0, !dbg !9151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9152 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9154, metadata !DIExpression()), !dbg !9158
  call void @llvm.dbg.value(metadata i32 %1, metadata !9155, metadata !DIExpression()), !dbg !9158
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9159
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9159
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9159
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9156, metadata !DIExpression()), !dbg !9158
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9160
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9160
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9160
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9157, metadata !DIExpression()), !dbg !9158
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9161
  %10 = load volatile i32, i32* %9, align 4, !dbg !9161
  %11 = xor i32 %10, %1, !dbg !9161
  store volatile i32 %11, i32* %9, align 4, !dbg !9161
  ret i32 0, !dbg !9162
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9163 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9165, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata i8 %1, metadata !9166, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata i32 %2, metadata !9167, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata i32 %3, metadata !9168, metadata !DIExpression()), !dbg !9175
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9176
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9176
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9176
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9169, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata i8* undef, metadata !9170, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata i32 0, metadata !9172, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata i32 0, metadata !9173, metadata !DIExpression()), !dbg !9175
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9177

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9178
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9182
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9183
  %12 = load i32, i32* %11, align 4, !dbg !9183
  %13 = icmp eq i32 %10, %12, !dbg !9184
  br i1 %13, label %14, label %29, !dbg !9185

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9186
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9188
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9189
  br label %29, !dbg !9190

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9191
  %17 = load i8*, i8** %16, align 4, !dbg !9191
  call void @llvm.dbg.value(metadata i8* %17, metadata !9170, metadata !DIExpression()), !dbg !9175
  %18 = zext i8 %1 to i32, !dbg !9192
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9194
  %20 = icmp eq i32 %19, 0, !dbg !9195
  br i1 %20, label %21, label %29, !dbg !9196

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9197
  %23 = load i32, i32* %22, align 4, !dbg !9197
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9198
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9199

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9172, metadata !DIExpression()), !dbg !9175
  br label %27, !dbg !9200

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9172, metadata !DIExpression()), !dbg !9175
  br label %27, !dbg !9202

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9172, metadata !DIExpression()), !dbg !9175
  br label %27, !dbg !9203

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9175
  call void @llvm.dbg.value(metadata i32 %28, metadata !9172, metadata !DIExpression()), !dbg !9175
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9204
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9205
  br label %29, !dbg !9205

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9175
  call void @llvm.dbg.value(metadata i32 %30, metadata !9173, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.label(metadata !9174), !dbg !9206
  ret i32 %30, !dbg !9207
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9208 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9210, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9211, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.value(metadata i1 %2, metadata !9212, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9214
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9215
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9215
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9215
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9213, metadata !DIExpression()), !dbg !9214
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9216
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9217
  ret i32 %8, !dbg !9218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9219 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9225, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9226, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.value(metadata i1 %2, metadata !9227, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9228
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9229
  br i1 %4, label %5, label %6, !dbg !9232

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 42) #25, !dbg !9233
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.118, i32 0, i32 0)) #25, !dbg !9233
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 42) #25, !dbg !9233
  unreachable, !dbg !9233

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9235
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9235
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9235
  br i1 %9, label %10, label %11, !dbg !9238

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 43) #25, !dbg !9239
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.120, i32 0, i32 0)) #25, !dbg !9239
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 43) #25, !dbg !9239
  unreachable, !dbg !9239

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9241
  br i1 %12, label %18, label %13, !dbg !9243

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9244
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9247
  %16 = or i1 %15, %2, !dbg !9248
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9248
  br i1 %2, label %19, label %21, !dbg !9248

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9249

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9250
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9253
  br label %21, !dbg !9254

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9228
  ret i32 %22, !dbg !9255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9256 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9260, metadata !DIExpression()), !dbg !9261
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9262
  %3 = icmp eq %struct._snode* %2, null, !dbg !9262
  ret i1 %3, !dbg !9262
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9263 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9267, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9268, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9269, metadata !DIExpression()), !dbg !9271
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9272
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9270, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9269, metadata !DIExpression()), !dbg !9271
  %4 = icmp eq %struct._snode* %3, null, !dbg !9274
  br i1 %4, label %15, label %5, !dbg !9272

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9270, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9269, metadata !DIExpression()), !dbg !9271
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9276
  br i1 %6, label %9, label %11, !dbg !9279

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9270, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9269, metadata !DIExpression()), !dbg !9271
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9276
  br i1 %8, label %9, label %11, !dbg !9279, !llvm.loop !9280

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9281
  br label %15, !dbg !9281

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9270, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9269, metadata !DIExpression()), !dbg !9271
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9274
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9270, metadata !DIExpression()), !dbg !9271
  %14 = icmp eq %struct._snode* %13, null, !dbg !9274
  br i1 %14, label %15, label %7, !dbg !9272, !llvm.loop !9280

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9288, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9289, metadata !DIExpression()), !dbg !9290
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9291
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9291
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9291
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9292
  %5 = icmp eq %struct._snode* %4, null, !dbg !9292
  br i1 %5, label %6, label %8, !dbg !9291

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9294
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9294
  br label %8, !dbg !9294

8:                                                ; preds = %6, %2
  ret void, !dbg !9291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9296 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9300, metadata !DIExpression()), !dbg !9301
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9302
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9302
  ret %struct._snode* %3, !dbg !9303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9304 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9308, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9309, metadata !DIExpression()), !dbg !9310
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9311
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9312
  ret void, !dbg !9313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9314 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9316, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9317, metadata !DIExpression()), !dbg !9318
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9319
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9320
  ret void, !dbg !9321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9322 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9324, metadata !DIExpression()), !dbg !9325
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9326
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9326
  ret %struct._snode* %3, !dbg !9327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9328 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9330, metadata !DIExpression()), !dbg !9332
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9331, metadata !DIExpression()), !dbg !9332
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9333
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9334
  ret void, !dbg !9335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9336 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9340, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9341, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9342, metadata !DIExpression()), !dbg !9343
  %4 = icmp eq %struct._snode* %1, null, !dbg !9344
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9346
  br i1 %4, label %6, label %11, !dbg !9347

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9348
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9350
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9350
  br i1 %8, label %9, label %15, !dbg !9348

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9352
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9352
  br label %15, !dbg !9352

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9354
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9356
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9356
  br i1 %13, label %14, label %15, !dbg !9354

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9358
  br label %15, !dbg !9358

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9347
  ret void, !dbg !9347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9360 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9364, metadata !DIExpression()), !dbg !9365
  %2 = icmp eq %struct._snode* %0, null, !dbg !9366
  br i1 %2, label %5, label %3, !dbg !9366

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9366
  br label %5, !dbg !9366

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9366
  ret %struct._snode* %6, !dbg !9366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9367 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9369, metadata !DIExpression()), !dbg !9370
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9371
  ret %struct._snode* %2, !dbg !9371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9372 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9374, metadata !DIExpression()), !dbg !9375
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9376
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9376
  ret %struct._snode* %3, !dbg !9377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9380, metadata !DIExpression()), !dbg !9383
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9384, !range !9385
  call void @llvm.dbg.value(metadata i32 %2, metadata !9381, metadata !DIExpression()), !dbg !9383
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %3, metadata !9382, metadata !DIExpression()), !dbg !9383
  ret i32 %3, !dbg !9387
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9390, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8* %1, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8* %1, metadata !9392, metadata !DIExpression()), !dbg !9393
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9394
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9394
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9395
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9395
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9395
  %8 = shl nuw i32 1, %0, !dbg !9396
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9397
  ret void, !dbg !9398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9399 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9403, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata i32 %1, metadata !9404, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9405, metadata !DIExpression()), !dbg !9409
  %4 = bitcast i64* %3 to i8*, !dbg !9410
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9410
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9407, metadata !DIExpression()), !dbg !9409
  store i64 70368744177732, i64* %3, align 8, !dbg !9411
  call void @llvm.dbg.value(metadata i64* %3, metadata !9407, metadata !DIExpression(DW_OP_deref)), !dbg !9409
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9412
  call void @llvm.dbg.value(metadata i32 %5, metadata !9408, metadata !DIExpression()), !dbg !9409
  %6 = icmp eq i32 %5, 0, !dbg !9413
  br i1 %6, label %7, label %8, !dbg !9415

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9416
  br label %8, !dbg !9417

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9418
  ret void, !dbg !9418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9419 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9421, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.value(metadata i8* %0, metadata !9422, metadata !DIExpression()), !dbg !9424
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9425
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9423, metadata !DIExpression()), !dbg !9424
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9426
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9426
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !9427
  ret i32 %5, !dbg !9428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9431, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i32 %1, metadata !9432, metadata !DIExpression()), !dbg !9434
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9435
  call void @llvm.dbg.value(metadata i32 %3, metadata !9433, metadata !DIExpression()), !dbg !9434
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9436
  ret void, !dbg !9437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !9438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9442, metadata !DIExpression()), !dbg !9443
  %2 = sdiv i32 %0, 4, !dbg !9444
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9445
  %6 = add nsw i32 %5, 16, !dbg !9446
  %7 = shl i32 15, %6, !dbg !9447
  %8 = or i32 %7, %2, !dbg !9448
  ret i32 %8, !dbg !9449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9454, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.value(metadata i32 %1, metadata !9455, metadata !DIExpression()), !dbg !9456
  %3 = and i32 %1, 255, !dbg !9457
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9457
  %5 = load volatile i32, i32* %4, align 4, !dbg !9457
  %6 = lshr i32 %1, 16, !dbg !9457
  %7 = xor i32 %6, -1, !dbg !9457
  %8 = and i32 %5, %7, !dbg !9457
  call void @llvm.dbg.value(metadata i32 %6, metadata !9458, metadata !DIExpression()) #23, !dbg !9462
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9464, !srcloc !9465
  call void @llvm.dbg.value(metadata i32 %9, metadata !9461, metadata !DIExpression()) #23, !dbg !9462
  call void @llvm.dbg.value(metadata i32 %9, metadata !9466, metadata !DIExpression()) #23, !dbg !9471
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9473, !range !7634
  %11 = shl i32 %0, %10, !dbg !9457
  %12 = or i32 %11, %8, !dbg !9457
  store volatile i32 %12, i32* %4, align 4, !dbg !9457
  ret void, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9479, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9480, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata i32 %2, metadata !9481, metadata !DIExpression()), !dbg !9484
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9485
  %5 = icmp eq %struct._snode* %4, null, !dbg !9485
  br i1 %5, label %24, label %6, !dbg !9485

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9487
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9483, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9482, metadata !DIExpression()), !dbg !9484
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9488
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9488
  %12 = load i32, i32* %11, align 4, !dbg !9488
  %13 = and i32 %12, %2, !dbg !9492
  %14 = icmp eq i32 %13, 0, !dbg !9492
  br i1 %14, label %22, label %15, !dbg !9493

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9494
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9494
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9494
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9494
  br i1 %19, label %20, label %21, !dbg !9498

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 77) #25, !dbg !9499
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.120, i32 0, i32 0)) #25, !dbg !9499
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 77) #25, !dbg !9499
  unreachable, !dbg !9499

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9501
  br label %22, !dbg !9502

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9482, metadata !DIExpression()), !dbg !9484
  %23 = icmp eq %struct._snode* %8, null, !dbg !9503
  br i1 %23, label %24, label %6, !dbg !9503

24:                                               ; preds = %22, %3
  ret void, !dbg !9504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9507, metadata !DIExpression()), !dbg !9508
  %2 = and i32 %0, 255, !dbg !9509
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9509
  %4 = load volatile i32, i32* %3, align 4, !dbg !9509
  %5 = lshr i32 %0, 16, !dbg !9509
  %6 = and i32 %4, %5, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %5, metadata !9458, metadata !DIExpression()) #23, !dbg !9510
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9512, !srcloc !9465
  call void @llvm.dbg.value(metadata i32 %7, metadata !9461, metadata !DIExpression()) #23, !dbg !9510
  call void @llvm.dbg.value(metadata i32 %7, metadata !9466, metadata !DIExpression()) #23, !dbg !9513
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9515, !range !7634
  %9 = lshr i32 %6, %8, !dbg !9516
  ret i32 %9, !dbg !9517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9518 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9523, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata i32 %1, metadata !9524, metadata !DIExpression()), !dbg !9525
  %3 = shl i32 %1, 16, !dbg !9526
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9526
  store volatile i32 %3, i32* %4, align 4, !dbg !9526
  ret void, !dbg !9527
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9528 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9532, metadata !DIExpression()), !dbg !9533
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9534
  %3 = load volatile i32, i32* %2, align 4, !dbg !9534
  ret i32 %3, !dbg !9535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9536 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9538, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.value(metadata i32 %1, metadata !9539, metadata !DIExpression()), !dbg !9540
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9541
  store volatile i32 %1, i32* %3, align 4, !dbg !9541
  ret void, !dbg !9542
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9543 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9545, metadata !DIExpression()), !dbg !9546
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9547
  %3 = load volatile i32, i32* %2, align 4, !dbg !9547
  ret i32 %3, !dbg !9548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9553, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.value(metadata i32* %1, metadata !9554, metadata !DIExpression()), !dbg !9555
  %3 = and i32 %0, 131072, !dbg !9556
  %4 = icmp eq i32 %3, 0, !dbg !9558
  br i1 %4, label %22, label %5, !dbg !9559

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9560
  %6 = and i32 %0, 2, !dbg !9562
  %7 = icmp eq i32 %6, 0, !dbg !9564
  br i1 %7, label %11, label %8, !dbg !9565

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9566
  %10 = icmp eq i32 %9, 0, !dbg !9566
  br i1 %10, label %33, label %11, !dbg !9569

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9570
  store i32 %12, i32* %1, align 4, !dbg !9570
  %13 = and i32 %0, 16, !dbg !9571
  %14 = icmp eq i32 %13, 0, !dbg !9573
  br i1 %14, label %17, label %15, !dbg !9574

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9575
  br label %31, !dbg !9577

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9578
  %19 = icmp eq i32 %18, 0, !dbg !9580
  br i1 %19, label %33, label %20, !dbg !9581

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9582
  br label %31, !dbg !9584

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9585
  %24 = icmp eq i32 %23, 0, !dbg !9587
  br i1 %24, label %31, label %25, !dbg !9588

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9589
  %27 = icmp eq i32 %26, 0, !dbg !9592
  br i1 %27, label %28, label %31, !dbg !9593

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9594
  br label %33, !dbg !9595

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9555
  ret i32 %34, !dbg !9595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9596 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9600, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %1, metadata !9601, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %2, metadata !9602, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %3, metadata !9603, metadata !DIExpression()), !dbg !9611
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9612
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9612
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9612
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9604, metadata !DIExpression()), !dbg !9611
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9613
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9613
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9613
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9605, metadata !DIExpression()), !dbg !9611
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9614
  call void @llvm.dbg.value(metadata i32 %11, metadata !9606, metadata !DIExpression()), !dbg !9611
  %12 = and i32 %2, 48, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %12, metadata !9607, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %2, metadata !9608, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %2, metadata !9609, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %2, metadata !9610, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9611
  %13 = lshr i32 %2, 6, !dbg !9616
  %14 = and i32 %13, 1, !dbg !9616
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9617
  %15 = lshr i32 %2, 7, !dbg !9618
  %16 = and i32 %15, 3, !dbg !9618
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9619
  %17 = lshr i32 %2, 9, !dbg !9620
  %18 = and i32 %17, 3, !dbg !9620
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9621
  %19 = icmp eq i32 %12, 32, !dbg !9622
  br i1 %19, label %20, label %24, !dbg !9624

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9625
  br i1 %21, label %22, label %23, !dbg !9628

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9629
  br label %24, !dbg !9631

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9632
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9634
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9635
  ret void, !dbg !9636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9639, metadata !DIExpression()), !dbg !9641
  %2 = shl nuw i32 1, %0, !dbg !9642
  call void @llvm.dbg.value(metadata i32 %2, metadata !9640, metadata !DIExpression()), !dbg !9641
  ret i32 %2, !dbg !9643
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9644 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9648, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata i32 %1, metadata !9649, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata i32 %2, metadata !9650, metadata !DIExpression()), !dbg !9651
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9652
  %5 = load volatile i32, i32* %4, align 4, !dbg !9652
  %6 = xor i32 %1, -1, !dbg !9652
  %7 = and i32 %5, %6, !dbg !9652
  %8 = mul i32 %2, %1, !dbg !9652
  %9 = or i32 %7, %8, !dbg !9652
  store volatile i32 %9, i32* %4, align 4, !dbg !9652
  ret void, !dbg !9653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9654 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9656, metadata !DIExpression()), !dbg !9659
  call void @llvm.dbg.value(metadata i32 %1, metadata !9657, metadata !DIExpression()), !dbg !9659
  call void @llvm.dbg.value(metadata i32 %2, metadata !9658, metadata !DIExpression()), !dbg !9659
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9660
  %5 = load volatile i32, i32* %4, align 4, !dbg !9660
  call void @llvm.dbg.value(metadata i32 %1, metadata !9458, metadata !DIExpression()) #23, !dbg !9661
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9663, !srcloc !9465
  call void @llvm.dbg.value(metadata i32 %6, metadata !9461, metadata !DIExpression()) #23, !dbg !9661
  call void @llvm.dbg.value(metadata i32 %6, metadata !9466, metadata !DIExpression()) #23, !dbg !9664
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9666, !range !7634
  %8 = shl nuw nsw i32 %7, 1, !dbg !9660
  %9 = shl i32 3, %8, !dbg !9660
  %10 = xor i32 %9, -1, !dbg !9660
  %11 = and i32 %5, %10, !dbg !9660
  call void @llvm.dbg.value(metadata i32 %1, metadata !9458, metadata !DIExpression()) #23, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %6, metadata !9461, metadata !DIExpression()) #23, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %6, metadata !9466, metadata !DIExpression()) #23, !dbg !9669
  %12 = shl i32 %2, %8, !dbg !9660
  %13 = or i32 %11, %12, !dbg !9660
  store volatile i32 %13, i32* %4, align 4, !dbg !9660
  ret void, !dbg !9671
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9672 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9674, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i32 %1, metadata !9675, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i32 %2, metadata !9676, metadata !DIExpression()), !dbg !9677
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9678
  %5 = load volatile i32, i32* %4, align 4, !dbg !9678
  call void @llvm.dbg.value(metadata i32 %1, metadata !9458, metadata !DIExpression()) #23, !dbg !9679
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9681, !srcloc !9465
  call void @llvm.dbg.value(metadata i32 %6, metadata !9461, metadata !DIExpression()) #23, !dbg !9679
  call void @llvm.dbg.value(metadata i32 %6, metadata !9466, metadata !DIExpression()) #23, !dbg !9682
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9684, !range !7634
  %8 = shl nuw nsw i32 %7, 1, !dbg !9678
  %9 = shl i32 3, %8, !dbg !9678
  %10 = xor i32 %9, -1, !dbg !9678
  %11 = and i32 %5, %10, !dbg !9678
  call void @llvm.dbg.value(metadata i32 %1, metadata !9458, metadata !DIExpression()) #23, !dbg !9685
  call void @llvm.dbg.value(metadata i32 %6, metadata !9461, metadata !DIExpression()) #23, !dbg !9685
  call void @llvm.dbg.value(metadata i32 %6, metadata !9466, metadata !DIExpression()) #23, !dbg !9687
  %12 = shl i32 %2, %8, !dbg !9678
  %13 = or i32 %11, %12, !dbg !9678
  store volatile i32 %13, i32* %4, align 4, !dbg !9678
  ret void, !dbg !9689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9690 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9692, metadata !DIExpression()), !dbg !9695
  call void @llvm.dbg.value(metadata i32 %1, metadata !9693, metadata !DIExpression()), !dbg !9695
  call void @llvm.dbg.value(metadata i32 %2, metadata !9694, metadata !DIExpression()), !dbg !9695
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9696
  %5 = load volatile i32, i32* %4, align 4, !dbg !9696
  call void @llvm.dbg.value(metadata i32 %1, metadata !9458, metadata !DIExpression()) #23, !dbg !9697
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9699, !srcloc !9465
  call void @llvm.dbg.value(metadata i32 %6, metadata !9461, metadata !DIExpression()) #23, !dbg !9697
  call void @llvm.dbg.value(metadata i32 %6, metadata !9466, metadata !DIExpression()) #23, !dbg !9700
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9702, !range !7634
  %8 = shl nuw nsw i32 %7, 2, !dbg !9696
  %9 = shl i32 15, %8, !dbg !9696
  %10 = xor i32 %9, -1, !dbg !9696
  %11 = and i32 %5, %10, !dbg !9696
  call void @llvm.dbg.value(metadata i32 %1, metadata !9458, metadata !DIExpression()) #23, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %6, metadata !9461, metadata !DIExpression()) #23, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %6, metadata !9466, metadata !DIExpression()) #23, !dbg !9705
  %12 = shl i32 %2, %8, !dbg !9696
  %13 = or i32 %11, %12, !dbg !9696
  store volatile i32 %13, i32* %4, align 4, !dbg !9696
  ret void, !dbg !9707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9708 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9710, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata i32 %1, metadata !9711, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata i32 %2, metadata !9712, metadata !DIExpression()), !dbg !9713
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9714
  %5 = load volatile i32, i32* %4, align 4, !dbg !9714
  %6 = lshr i32 %1, 8, !dbg !9714
  call void @llvm.dbg.value(metadata i32 %6, metadata !9458, metadata !DIExpression()) #23, !dbg !9715
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9717, !srcloc !9465
  call void @llvm.dbg.value(metadata i32 %7, metadata !9461, metadata !DIExpression()) #23, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %7, metadata !9466, metadata !DIExpression()) #23, !dbg !9718
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9720, !range !7634
  %9 = shl nuw nsw i32 %8, 2, !dbg !9714
  %10 = shl i32 15, %9, !dbg !9714
  %11 = xor i32 %10, -1, !dbg !9714
  %12 = and i32 %5, %11, !dbg !9714
  call void @llvm.dbg.value(metadata i32 %6, metadata !9458, metadata !DIExpression()) #23, !dbg !9721
  call void @llvm.dbg.value(metadata i32 %7, metadata !9461, metadata !DIExpression()) #23, !dbg !9721
  call void @llvm.dbg.value(metadata i32 %7, metadata !9466, metadata !DIExpression()) #23, !dbg !9723
  %13 = shl i32 %2, %9, !dbg !9714
  %14 = or i32 %12, %13, !dbg !9714
  store volatile i32 %14, i32* %4, align 4, !dbg !9714
  ret void, !dbg !9725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9726 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9728, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i32 %1, metadata !9729, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i32 %2, metadata !9730, metadata !DIExpression()), !dbg !9731
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9732
  %5 = load volatile i32, i32* %4, align 4, !dbg !9732
  call void @llvm.dbg.value(metadata i32 %1, metadata !9458, metadata !DIExpression()) #23, !dbg !9733
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9735, !srcloc !9465
  call void @llvm.dbg.value(metadata i32 %6, metadata !9461, metadata !DIExpression()) #23, !dbg !9733
  call void @llvm.dbg.value(metadata i32 %6, metadata !9466, metadata !DIExpression()) #23, !dbg !9736
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9738, !range !7634
  %8 = shl nuw nsw i32 %7, 1, !dbg !9732
  %9 = shl i32 3, %8, !dbg !9732
  %10 = xor i32 %9, -1, !dbg !9732
  %11 = and i32 %5, %10, !dbg !9732
  call void @llvm.dbg.value(metadata i32 %1, metadata !9458, metadata !DIExpression()) #23, !dbg !9739
  call void @llvm.dbg.value(metadata i32 %6, metadata !9461, metadata !DIExpression()) #23, !dbg !9739
  call void @llvm.dbg.value(metadata i32 %6, metadata !9466, metadata !DIExpression()) #23, !dbg !9741
  %12 = shl i32 %2, %8, !dbg !9732
  %13 = or i32 %11, %12, !dbg !9732
  store volatile i32 %13, i32* %4, align 4, !dbg !9732
  ret void, !dbg !9743
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9746, metadata !DIExpression()), !dbg !9749
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9750
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9750
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9750
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9747, metadata !DIExpression()), !dbg !9749
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9751
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9752
  %6 = tail call fastcc zeroext i1 @device_is_ready.130() #24, !dbg !9753
  br i1 %6, label %7, label %11, !dbg !9755

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9756
  call void @llvm.dbg.value(metadata i32 %8, metadata !9748, metadata !DIExpression()), !dbg !9749
  %9 = icmp slt i32 %8, 0, !dbg !9757
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9759
  br label %11, !dbg !9759

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9749
  ret i32 %12, !dbg !9760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.130() unnamed_addr #1 !dbg !9761 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9765, metadata !DIExpression()), !dbg !9766
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9767, !srcloc !9769
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.131() #24, !dbg !9770
  ret i1 %1, !dbg !9771
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9772 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9776, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i8 1, metadata !9777, metadata !DIExpression()), !dbg !9781
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9782
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9782
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9782
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9778, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 0, metadata !9779, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9780, metadata !DIExpression()), !dbg !9781
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9783
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9786
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9787
  call void @llvm.dbg.value(metadata i32 %7, metadata !9779, metadata !DIExpression()), !dbg !9781
  ret i32 %7, !dbg !9788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.131() unnamed_addr #1 !dbg !9789 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9791, metadata !DIExpression()), !dbg !9792
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !9793
  ret i1 %1, !dbg !9794
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9795 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9799, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 %1, metadata !9800, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 %2, metadata !9801, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 %3, metadata !9802, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 0, metadata !9803, metadata !DIExpression()), !dbg !9807
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9808
  %5 = icmp eq i32 %3, 17, !dbg !9809
  br i1 %5, label %6, label %14, !dbg !9810

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9811
  call void @llvm.dbg.value(metadata i32 %7, metadata !9804, metadata !DIExpression()), !dbg !9812
  %8 = icmp eq i32 %7, 0, !dbg !9813
  %9 = shl nuw i32 1, %1, !dbg !9815
  br i1 %8, label %12, label %10, !dbg !9816

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9817
  br label %14, !dbg !9819

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9820
  br label %14, !dbg !9823

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9824
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9825 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9827, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i8* %1, metadata !9828, metadata !DIExpression()), !dbg !9831
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9832
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9832
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9832
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9829, metadata !DIExpression()), !dbg !9831
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9833
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9833
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9835
  %9 = icmp eq i32 %8, 0, !dbg !9835
  br i1 %9, label %12, label %10, !dbg !9836

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9837
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9839
  br label %12, !dbg !9840

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9841
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9843
  %15 = icmp eq i32 %14, 0, !dbg !9843
  br i1 %15, label %19, label %16, !dbg !9844

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9845
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9846
  store i8 %18, i8* %1, align 1, !dbg !9847
  br label %19, !dbg !9848

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9831
  ret i32 %20, !dbg !9849
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9852, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i8 %1, metadata !9853, metadata !DIExpression()), !dbg !9856
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9857
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9857
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9857
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9854, metadata !DIExpression()), !dbg !9856
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9858

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9859
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9862
  %10 = icmp eq i32 %9, 0, !dbg !9862
  br i1 %10, label %18, label %11, !dbg !9863

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9864, !srcloc !9871
  call void @llvm.dbg.value(metadata i32 undef, metadata !9867, metadata !DIExpression()) #23, !dbg !9872
  call void @llvm.dbg.value(metadata i32 undef, metadata !9868, metadata !DIExpression()) #23, !dbg !9872
  call void @llvm.dbg.value(metadata i32 undef, metadata !9855, metadata !DIExpression()), !dbg !9856
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9873
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9875
  %15 = icmp eq i32 %14, 0, !dbg !9875
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9864
  br i1 %15, label %17, label %19, !dbg !9876

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9867, metadata !DIExpression()) #23, !dbg !9872
  call void @llvm.dbg.value(metadata i32 %16, metadata !9855, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata i32 undef, metadata !9877, metadata !DIExpression()) #23, !dbg !9880
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9882, !srcloc !9883
  br label %18, !dbg !9884

18:                                               ; preds = %17, %7
  br label %7, !dbg !9859, !llvm.loop !9885

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9864
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9887
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9888
  call void @llvm.dbg.value(metadata i32 %20, metadata !9877, metadata !DIExpression()) #23, !dbg !9889
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9891, !srcloc !9883
  ret void, !dbg !9892
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9893 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9895, metadata !DIExpression()), !dbg !9898
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9899
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9899
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9899
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9896, metadata !DIExpression()), !dbg !9898
  call void @llvm.dbg.value(metadata i32 0, metadata !9897, metadata !DIExpression()), !dbg !9898
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9900
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9900
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9902
  %8 = icmp ne i32 %7, 0, !dbg !9902
  %9 = zext i1 %8 to i32, !dbg !9903
  call void @llvm.dbg.value(metadata i32 %9, metadata !9897, metadata !DIExpression()), !dbg !9898
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9904
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9906
  %12 = icmp eq i32 %11, 0, !dbg !9906
  %13 = or i32 %9, 2, !dbg !9907
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9907
  call void @llvm.dbg.value(metadata i32 %14, metadata !9897, metadata !DIExpression()), !dbg !9898
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9908
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9910
  %17 = icmp eq i32 %16, 0, !dbg !9910
  %18 = or i32 %14, 4, !dbg !9911
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9911
  call void @llvm.dbg.value(metadata i32 %19, metadata !9897, metadata !DIExpression()), !dbg !9898
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9912
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9914
  %22 = icmp eq i32 %21, 0, !dbg !9914
  %23 = or i32 %19, 8, !dbg !9915
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9915
  call void @llvm.dbg.value(metadata i32 %24, metadata !9897, metadata !DIExpression()), !dbg !9898
  %25 = and i32 %24, 8, !dbg !9916
  %26 = icmp eq i32 %25, 0, !dbg !9916
  br i1 %26, label %29, label %27, !dbg !9918

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9919
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9921
  br label %29, !dbg !9922

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9923
  %31 = icmp eq i32 %30, 0, !dbg !9923
  br i1 %31, label %34, label %32, !dbg !9925

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9926
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9928
  br label %34, !dbg !9929

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9930
  %36 = icmp eq i32 %35, 0, !dbg !9930
  br i1 %36, label %39, label %37, !dbg !9932

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9933
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9935
  br label %39, !dbg !9936

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9937
  %41 = icmp eq i32 %40, 0, !dbg !9937
  br i1 %41, label %44, label %42, !dbg !9939

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9940
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9942
  br label %44, !dbg !9943

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9944
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9945
  ret i32 %24, !dbg !9946
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9947 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9949, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9950, metadata !DIExpression()), !dbg !9958
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9959
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9959
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9959
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9951, metadata !DIExpression()), !dbg !9958
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9960
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9960
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9960
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9952, metadata !DIExpression()), !dbg !9958
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9961
  %10 = load i8, i8* %9, align 4, !dbg !9961
  %11 = zext i8 %10 to i32, !dbg !9962
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9963
  call void @llvm.dbg.value(metadata i32 %12, metadata !9954, metadata !DIExpression()), !dbg !9958
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9964
  %14 = load i8, i8* %13, align 1, !dbg !9964
  %15 = zext i8 %14 to i32, !dbg !9965
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9966
  call void @llvm.dbg.value(metadata i32 %16, metadata !9955, metadata !DIExpression()), !dbg !9958
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9967
  %18 = load i8, i8* %17, align 2, !dbg !9967
  %19 = zext i8 %18 to i32, !dbg !9968
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9969
  call void @llvm.dbg.value(metadata i32 %20, metadata !9956, metadata !DIExpression()), !dbg !9958
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9970
  %22 = load i8, i8* %21, align 1, !dbg !9970
  %23 = zext i8 %22 to i32, !dbg !9971
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9972
  call void @llvm.dbg.value(metadata i32 %24, metadata !9957, metadata !DIExpression()), !dbg !9958
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9973

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9975
  br i1 %26, label %69, label %27, !dbg !9977

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9978

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9979
  br i1 %29, label %65, label %30, !dbg !9979

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9981
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9958
  br i1 %31, label %38, label %34, !dbg !9983

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9984
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9984

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9987
  br i1 %37, label %38, label %69, !dbg !9988

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9989
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9990
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9991
  %41 = icmp eq i32 %12, %40, !dbg !9993
  br i1 %41, label %43, label %42, !dbg !9994

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9995
  br label %43, !dbg !9997

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9998
  %45 = icmp eq i32 %16, %44, !dbg !10000
  br i1 %45, label %47, label %46, !dbg !10001

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10002
  br label %47, !dbg !10004

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10005
  %49 = icmp eq i32 %20, %48, !dbg !10007
  br i1 %49, label %51, label %50, !dbg !10008

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10009
  br label %51, !dbg !10011

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10012
  %53 = icmp eq i32 %24, %52, !dbg !10014
  br i1 %53, label %55, label %54, !dbg !10015

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10016
  br label %55, !dbg !10018

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10019
  %57 = load i32, i32* %56, align 4, !dbg !10019
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10021
  %59 = load i32, i32* %58, align 4, !dbg !10021
  %60 = icmp eq i32 %57, %59, !dbg !10022
  br i1 %60, label %63, label %61, !dbg !10023

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10024
  %62 = load i32, i32* %56, align 4, !dbg !10026
  store i32 %62, i32* %58, align 4, !dbg !10027
  br label %63, !dbg !10028

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10029
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10030
  br label %69, !dbg !10031

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9979
  %67 = and i8 %66, 1, !dbg !9979
  %68 = icmp eq i8 %67, 0, !dbg !9979
  br i1 %68, label %30, label %69, !dbg !9979

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9958
  ret i32 %70, !dbg !10032
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10033 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10035, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10036, metadata !DIExpression()), !dbg !10038
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10039
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10039
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10039
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10037, metadata !DIExpression()), !dbg !10038
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10040
  %7 = load i32, i32* %6, align 4, !dbg !10040
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10041
  store i32 %7, i32* %8, align 4, !dbg !10042
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10043, !range !10044
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10045
  %11 = trunc i32 %10 to i8, !dbg !10045
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10046
  store i8 %11, i8* %12, align 4, !dbg !10047
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10048, !range !10049
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10050
  %15 = trunc i32 %14 to i8, !dbg !10050
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10051
  store i8 %15, i8* %16, align 1, !dbg !10052
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10053
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10054, !range !10044
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10055
  %20 = trunc i32 %19 to i8, !dbg !10055
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10056
  store i8 %20, i8* %21, align 2, !dbg !10057
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10058, !range !10059
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10060
  %24 = trunc i32 %23 to i8, !dbg !10060
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10061
  store i8 %24, i8* %25, align 1, !dbg !10062
  ret i32 0, !dbg !10063
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10064 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10068, metadata !DIExpression()), !dbg !10070
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10071
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10071
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10071
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10069, metadata !DIExpression()), !dbg !10070
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10072
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10072
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10073
  ret i32 %7, !dbg !10074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10079, metadata !DIExpression()), !dbg !10080
  %2 = icmp eq i32 %0, 1024, !dbg !10081
  %3 = select i1 %2, i32 2, i32 0, !dbg !10081
  %4 = icmp eq i32 %0, 1536, !dbg !10081
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10081
  ret i32 %5, !dbg !10082
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10083 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10085, metadata !DIExpression()), !dbg !10087
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10088
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10088
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10088
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10086, metadata !DIExpression()), !dbg !10087
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10089
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10089
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10090
  ret i32 %7, !dbg !10091
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10096, metadata !DIExpression()), !dbg !10097
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10098
  %3 = icmp ult i32 %2, 4, !dbg !10098
  br i1 %3, label %4, label %7, !dbg !10098

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10098
  %6 = load i32, i32* %5, align 4, !dbg !10098
  br label %7, !dbg !10098

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10099
  ret i32 %8, !dbg !10101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10104, metadata !DIExpression()), !dbg !10106
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10107
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10107
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10107
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10105, metadata !DIExpression()), !dbg !10106
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10108
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10108
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10109
  ret i32 %7, !dbg !10110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10115, metadata !DIExpression()), !dbg !10117
  call void @llvm.dbg.value(metadata i32 %1, metadata !10116, metadata !DIExpression()), !dbg !10117
  %3 = icmp eq i32 %0, 4096, !dbg !10118
  %4 = icmp eq i32 %1, 0, !dbg !10118
  %5 = select i1 %4, i32 4, i32 3, !dbg !10118
  %6 = select i1 %4, i32 3, i32 2, !dbg !10118
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10118
  ret i32 %7, !dbg !10119
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10120 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10122, metadata !DIExpression()), !dbg !10124
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10125
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10125
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10125
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10123, metadata !DIExpression()), !dbg !10124
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10126
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10126
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10127
  ret i32 %7, !dbg !10128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10133, metadata !DIExpression()), !dbg !10134
  %2 = icmp eq i32 %0, 768, !dbg !10135
  %3 = zext i1 %2 to i32, !dbg !10134
  ret i32 %3, !dbg !10137
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10138 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10143, metadata !DIExpression()), !dbg !10144
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10145
  %3 = load volatile i32, i32* %2, align 4, !dbg !10145
  %4 = and i32 %3, 768, !dbg !10145
  ret i32 %4, !dbg !10146
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10147 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10149, metadata !DIExpression()), !dbg !10150
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10151
  %3 = load volatile i32, i32* %2, align 4, !dbg !10151
  %4 = and i32 %3, 4096, !dbg !10151
  ret i32 %4, !dbg !10152
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10153 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10155, metadata !DIExpression()), !dbg !10156
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10157
  %3 = load volatile i32, i32* %2, align 4, !dbg !10157
  %4 = and i32 %3, 12288, !dbg !10157
  ret i32 %4, !dbg !10158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10159 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10161, metadata !DIExpression()), !dbg !10162
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10163
  %3 = load volatile i32, i32* %2, align 4, !dbg !10163
  %4 = and i32 %3, 1536, !dbg !10163
  ret i32 %4, !dbg !10164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10169, metadata !DIExpression()), !dbg !10170
  %2 = icmp eq i32 %0, 2, !dbg !10171
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10171
  %4 = icmp eq i32 %0, 1, !dbg !10171
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10171
  ret i32 %5, !dbg !10172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10177, metadata !DIExpression()), !dbg !10178
  %2 = icmp ult i32 %0, 3, !dbg !10179
  br i1 %2, label %3, label %6, !dbg !10179

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10179
  %5 = load i32, i32* %4, align 4, !dbg !10179
  br label %6, !dbg !10179

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10180
  ret i32 %7, !dbg !10182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10187, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata i32 %1, metadata !10188, metadata !DIExpression()), !dbg !10189
  %3 = icmp eq i32 %0, 4, !dbg !10190
  %4 = icmp eq i32 %1, 0, !dbg !10190
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10190
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10190
  ret i32 %6, !dbg !10191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10196, metadata !DIExpression()), !dbg !10197
  %2 = icmp eq i32 %0, 1, !dbg !10198
  %3 = select i1 %2, i32 768, i32 0, !dbg !10197
  ret i32 %3, !dbg !10200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10201 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10205, metadata !DIExpression()), !dbg !10206
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10207
  %3 = load volatile i32, i32* %2, align 4, !dbg !10207
  %4 = and i32 %3, -8193, !dbg !10207
  store volatile i32 %4, i32* %2, align 4, !dbg !10207
  ret void, !dbg !10208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10209 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10213, metadata !DIExpression()), !dbg !10216
  call void @llvm.dbg.value(metadata i32 %1, metadata !10214, metadata !DIExpression()), !dbg !10216
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10217
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10217
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10217
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10215, metadata !DIExpression()), !dbg !10216
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10218
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10218
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10219
  ret void, !dbg !10220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10221 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10223, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.value(metadata i32 %1, metadata !10224, metadata !DIExpression()), !dbg !10226
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10227
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10227
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10227
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10225, metadata !DIExpression()), !dbg !10226
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10228
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10228
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10229
  ret void, !dbg !10230
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10233, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.value(metadata i32 %1, metadata !10234, metadata !DIExpression()), !dbg !10236
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10237
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10237
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10237
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10235, metadata !DIExpression()), !dbg !10236
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10238
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10238
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10239
  ret void, !dbg !10240
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10243, metadata !DIExpression()), !dbg !10246
  call void @llvm.dbg.value(metadata i32 %1, metadata !10244, metadata !DIExpression()), !dbg !10246
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10247
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10247
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10247
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10245, metadata !DIExpression()), !dbg !10246
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10248
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10248
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10249
  ret void, !dbg !10250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10251 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10253, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata i32 %1, metadata !10254, metadata !DIExpression()), !dbg !10258
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10259
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10259
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10259
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10255, metadata !DIExpression()), !dbg !10258
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10260
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10260
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10260
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10256, metadata !DIExpression()), !dbg !10258
  %10 = bitcast i32* %3 to i8*, !dbg !10261
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10261
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10262
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10262
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10266
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10266
  %15 = load i8*, i8** %14, align 4, !dbg !10266
  call void @llvm.dbg.value(metadata i32* %3, metadata !10257, metadata !DIExpression(DW_OP_deref)), !dbg !10258
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10267
  %17 = icmp slt i32 %16, 0, !dbg !10268
  br i1 %17, label %18, label %21, !dbg !10269

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !10270
  %20 = zext i8 %19 to i32, !dbg !10270
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.137, i32 0, i32 0), i32 noundef %20) #25, !dbg !10270
  br label %31, !dbg !10276

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10277
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10277
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10278
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10279
  %25 = load i32, i32* %3, align 4, !dbg !10280
  call void @llvm.dbg.value(metadata i32 %25, metadata !10257, metadata !DIExpression()), !dbg !10258
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10281
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10282
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10282
  %28 = load volatile i32, i32* %27, align 4, !dbg !10282
  %29 = icmp ugt i32 %28, 16, !dbg !10282
  br i1 %29, label %31, label %30, !dbg !10285

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.140, i32 0, i32 0), i32 noundef 190) #25, !dbg !10286
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.141, i32 0, i32 0)) #25, !dbg !10286
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.140, i32 0, i32 0), i32 noundef 190) #25, !dbg !10286
  unreachable, !dbg !10286

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10288
  ret void, !dbg !10288
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10289 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10291, metadata !DIExpression()), !dbg !10292
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10293
  %3 = load volatile i32, i32* %2, align 4, !dbg !10293
  %4 = or i32 %3, 8192, !dbg !10293
  store volatile i32 %4, i32* %2, align 4, !dbg !10293
  ret void, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10297, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.value(metadata i8* %1, metadata !10298, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.value(metadata i32* %2, metadata !10299, metadata !DIExpression()), !dbg !10301
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10302
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10302
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10302
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10300, metadata !DIExpression()), !dbg !10301
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10303
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10303
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10305
  br i1 %9, label %12, label %10, !dbg !10306

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10307
  br label %12, !dbg !10308

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10301
  ret i32 %13, !dbg !10309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef %0) unnamed_addr #4 !dbg !10310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10312, metadata !DIExpression()), !dbg !10313
  %2 = icmp eq i32 %0, 2, !dbg !10314
  %3 = select i1 %2, i8 87, i8 63, !dbg !10314
  %4 = icmp eq i32 %0, 1, !dbg !10314
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10314
  ret i8 %5, !dbg !10315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10316 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10320, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i32 0, metadata !10321, metadata !DIExpression()), !dbg !10322
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10323
  %3 = load volatile i32, i32* %2, align 4, !dbg !10323
  %4 = and i32 %3, -32769, !dbg !10323
  store volatile i32 %4, i32* %2, align 4, !dbg !10323
  ret void, !dbg !10324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10329, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 %1, metadata !10330, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 0, metadata !10331, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 %2, metadata !10332, metadata !DIExpression()), !dbg !10333
  %4 = zext i32 %1 to i64, !dbg !10334
  %5 = mul nuw nsw i64 %4, 25, !dbg !10334
  %6 = zext i32 %2 to i64, !dbg !10334
  %7 = shl nuw nsw i64 %6, 2, !dbg !10334
  %8 = udiv i64 %5, %7, !dbg !10334
  %9 = trunc i64 %8 to i32, !dbg !10334
  %10 = udiv i32 %9, 100, !dbg !10334
  %11 = shl nuw nsw i32 %10, 4, !dbg !10334
  %12 = mul i32 %10, -100, !dbg !10334
  %13 = add i32 %12, %9, !dbg !10334
  %14 = shl i32 %13, 4, !dbg !10334
  %15 = add i32 %14, 50, !dbg !10334
  %16 = udiv i32 %15, 100, !dbg !10334
  %17 = and i32 %16, 240, !dbg !10334
  %18 = add nuw nsw i32 %17, %11, !dbg !10334
  %19 = and i32 %16, 15, !dbg !10334
  %20 = and i32 %18, 65520, !dbg !10337
  %21 = or i32 %20, %19, !dbg !10337
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10338
  store volatile i32 %21, i32* %22, align 4, !dbg !10339
  ret void, !dbg !10340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10341 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10343, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata i32 %1, metadata !10344, metadata !DIExpression()), !dbg !10345
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10346
  %4 = load volatile i32, i32* %3, align 4, !dbg !10346
  %5 = and i32 %4, -769, !dbg !10346
  %6 = or i32 %5, %1, !dbg !10346
  store volatile i32 %6, i32* %3, align 4, !dbg !10346
  ret void, !dbg !10347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10348 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10350, metadata !DIExpression()), !dbg !10352
  call void @llvm.dbg.value(metadata i32 %1, metadata !10351, metadata !DIExpression()), !dbg !10352
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10353
  %4 = load volatile i32, i32* %3, align 4, !dbg !10353
  %5 = and i32 %4, -4097, !dbg !10353
  %6 = or i32 %5, %1, !dbg !10353
  store volatile i32 %6, i32* %3, align 4, !dbg !10353
  ret void, !dbg !10354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10355 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10357, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.value(metadata i32 %1, metadata !10358, metadata !DIExpression()), !dbg !10359
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10360
  %4 = load volatile i32, i32* %3, align 4, !dbg !10360
  %5 = and i32 %4, -12289, !dbg !10360
  %6 = or i32 %5, %1, !dbg !10360
  store volatile i32 %6, i32* %3, align 4, !dbg !10360
  ret void, !dbg !10361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10362 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10364, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata i32 %1, metadata !10365, metadata !DIExpression()), !dbg !10366
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10367
  %4 = load volatile i32, i32* %3, align 4, !dbg !10367
  %5 = and i32 %4, -1537, !dbg !10367
  %6 = or i32 %5, %1, !dbg !10367
  store volatile i32 %6, i32* %3, align 4, !dbg !10367
  ret void, !dbg !10368
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10369 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10371, metadata !DIExpression()), !dbg !10372
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10373
  %3 = load volatile i32, i32* %2, align 4, !dbg !10373
  %4 = lshr i32 %3, 3, !dbg !10374
  %5 = and i32 %4, 1, !dbg !10374
  ret i32 %5, !dbg !10375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10376 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10378, metadata !DIExpression()), !dbg !10379
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10380
  %3 = load volatile i32, i32* %2, align 4, !dbg !10380
  %4 = and i32 %3, 1, !dbg !10380
  ret i32 %4, !dbg !10381
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10382 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10384, metadata !DIExpression()), !dbg !10385
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10386
  %3 = load volatile i32, i32* %2, align 4, !dbg !10386
  %4 = lshr i32 %3, 1, !dbg !10387
  %5 = and i32 %4, 1, !dbg !10387
  ret i32 %5, !dbg !10388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10391, metadata !DIExpression()), !dbg !10392
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10393
  %3 = load volatile i32, i32* %2, align 4, !dbg !10393
  %4 = lshr i32 %3, 8, !dbg !10394
  %5 = and i32 %4, 1, !dbg !10394
  ret i32 %5, !dbg !10395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10396 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10398, metadata !DIExpression()), !dbg !10399
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10400
  store volatile i32 -257, i32* %2, align 4, !dbg !10400
  ret void, !dbg !10401
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10402 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10404, metadata !DIExpression()), !dbg !10406
  %3 = bitcast i32* %2 to i8*, !dbg !10407
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10407
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10405, metadata !DIExpression()), !dbg !10408
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10409
  %5 = load volatile i32, i32* %4, align 4, !dbg !10409
  store volatile i32 %5, i32* %2, align 4, !dbg !10410
  %6 = load volatile i32, i32* %2, align 4, !dbg !10411
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10412
  %8 = load volatile i32, i32* %7, align 4, !dbg !10412
  store volatile i32 %8, i32* %2, align 4, !dbg !10413
  %9 = load volatile i32, i32* %2, align 4, !dbg !10414
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10415
  ret void, !dbg !10415
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10416 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10418, metadata !DIExpression()), !dbg !10420
  %3 = bitcast i32* %2 to i8*, !dbg !10421
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10421
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10419, metadata !DIExpression()), !dbg !10422
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10423
  %5 = load volatile i32, i32* %4, align 4, !dbg !10423
  store volatile i32 %5, i32* %2, align 4, !dbg !10424
  %6 = load volatile i32, i32* %2, align 4, !dbg !10425
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10426
  %8 = load volatile i32, i32* %7, align 4, !dbg !10426
  store volatile i32 %8, i32* %2, align 4, !dbg !10427
  %9 = load volatile i32, i32* %2, align 4, !dbg !10428
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10429
  ret void, !dbg !10429
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10430 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10432, metadata !DIExpression()), !dbg !10434
  %3 = bitcast i32* %2 to i8*, !dbg !10435
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10435
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10433, metadata !DIExpression()), !dbg !10436
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10437
  %5 = load volatile i32, i32* %4, align 4, !dbg !10437
  store volatile i32 %5, i32* %2, align 4, !dbg !10438
  %6 = load volatile i32, i32* %2, align 4, !dbg !10439
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10440
  %8 = load volatile i32, i32* %7, align 4, !dbg !10440
  store volatile i32 %8, i32* %2, align 4, !dbg !10441
  %9 = load volatile i32, i32* %2, align 4, !dbg !10442
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10443
  ret void, !dbg !10443
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10444 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10446, metadata !DIExpression()), !dbg !10448
  %3 = bitcast i32* %2 to i8*, !dbg !10449
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10449
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10447, metadata !DIExpression()), !dbg !10450
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10451
  %5 = load volatile i32, i32* %4, align 4, !dbg !10451
  store volatile i32 %5, i32* %2, align 4, !dbg !10452
  %6 = load volatile i32, i32* %2, align 4, !dbg !10453
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10454
  %8 = load volatile i32, i32* %7, align 4, !dbg !10454
  store volatile i32 %8, i32* %2, align 4, !dbg !10455
  %9 = load volatile i32, i32* %2, align 4, !dbg !10456
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10457
  ret void, !dbg !10457
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10458 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10460, metadata !DIExpression()), !dbg !10461
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10462
  %3 = load volatile i32, i32* %2, align 4, !dbg !10462
  %4 = lshr i32 %3, 7, !dbg !10463
  %5 = and i32 %4, 1, !dbg !10463
  ret i32 %5, !dbg !10464
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !10465 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10469, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i8 %1, metadata !10470, metadata !DIExpression()), !dbg !10471
  %3 = zext i8 %1 to i32, !dbg !10472
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10473
  store volatile i32 %3, i32* %4, align 4, !dbg !10474
  ret void, !dbg !10475
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10476 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10478, metadata !DIExpression()), !dbg !10479
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10480
  %3 = load volatile i32, i32* %2, align 4, !dbg !10480
  %4 = lshr i32 %3, 5, !dbg !10481
  %5 = and i32 %4, 1, !dbg !10481
  ret i32 %5, !dbg !10482
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10483 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10487, metadata !DIExpression()), !dbg !10488
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10489
  %3 = load volatile i32, i32* %2, align 4, !dbg !10489
  %4 = trunc i32 %3 to i8, !dbg !10490
  ret i8 %4, !dbg !10491
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10492 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10494, metadata !DIExpression()), !dbg !10500
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10501
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10501
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10501
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10495, metadata !DIExpression()), !dbg !10500
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10502
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10502
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10502
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10496, metadata !DIExpression()), !dbg !10500
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10503
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10504
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10504
  %10 = tail call fastcc zeroext i1 @device_is_ready.145(%struct.device* noundef %9) #24, !dbg !10506
  br i1 %10, label %14, label %11, !dbg !10507

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !10508
  %13 = zext i8 %12 to i32, !dbg !10508
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9.146, i32 0, i32 0), i32 noundef %13) #25, !dbg !10508
  br label %62, !dbg !10514

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10515
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10516
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10516
  %18 = load i8*, i8** %17, align 4, !dbg !10516
  %19 = tail call fastcc i32 @clock_control_on.147(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %19, metadata !10499, metadata !DIExpression()), !dbg !10500
  %20 = icmp eq i32 %19, 0, !dbg !10518
  br i1 %20, label %24, label %21, !dbg !10520

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !10521
  %23 = zext i8 %22 to i32, !dbg !10521
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.148, i32 0, i32 0), i32 noundef %23) #25, !dbg !10521
  br label %62, !dbg !10527

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10528
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10528
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10529
  call void @llvm.dbg.value(metadata i32 %27, metadata !10499, metadata !DIExpression()), !dbg !10500
  %28 = icmp slt i32 %27, 0, !dbg !10530
  br i1 %28, label %62, label %29, !dbg !10532

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10533
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10533
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10534
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10535
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10536
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10537
  %34 = load i32, i32* %33, align 4, !dbg !10537
  %35 = icmp ult i32 %34, 3, !dbg !10539
  br i1 %35, label %39, label %36, !dbg !10539

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 2) #24, !dbg !10540
  %38 = zext i8 %37 to i32, !dbg !10540
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11.149, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10540
  call void @llvm.dbg.value(metadata i32 0, metadata !10497, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i32 0, metadata !10498, metadata !DIExpression()), !dbg !10500
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10539
  %41 = load i32, i32* %40, align 4, !dbg !10539
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.12, i32 0, i32 %34, !dbg !10539
  %43 = load i32, i32* %42, align 4, !dbg !10539
  br label %44, !dbg !10539

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10549
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10549
  call void @llvm.dbg.value(metadata i32 %46, metadata !10498, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i32 %45, metadata !10497, metadata !DIExpression()), !dbg !10500
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10550
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10551
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10552
  %49 = load i8, i8* %48, align 4, !dbg !10552, !range !6797
  %50 = icmp eq i8 %49, 0, !dbg !10552
  br i1 %50, label %52, label %51, !dbg !10554

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10555
  br label %52, !dbg !10557

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10558
  %54 = load i32, i32* %53, align 4, !dbg !10558
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10559
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10560
  %56 = load i8, i8* %55, align 4, !dbg !10560, !range !6797
  %57 = icmp eq i8 %56, 0, !dbg !10560
  br i1 %57, label %60, label %58, !dbg !10562

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10563
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10565
  br label %60, !dbg !10566

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10567
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10568
  br label %62, !dbg !10569

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10500
  ret i32 %63, !dbg !10570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10575, metadata !DIExpression()), !dbg !10579
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10580
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10580
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10580
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10576, metadata !DIExpression()), !dbg !10579
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10577, metadata !DIExpression()), !dbg !10579
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10581
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10582
  ret void, !dbg !10583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.145(%struct.device* noundef %0) unnamed_addr #1 !dbg !10584 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10588, metadata !DIExpression()), !dbg !10589
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10590, !srcloc !10592
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.150(%struct.device* noundef %0) #24, !dbg !10593
  ret i1 %2, !dbg !10594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.147(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10597, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i8* %1, metadata !10598, metadata !DIExpression()), !dbg !10600
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10601
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10601
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10601
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10599, metadata !DIExpression()), !dbg !10600
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10602
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10602
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10603
  ret i32 %8, !dbg !10604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10605 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10609, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata i8 0, metadata !10610, metadata !DIExpression()), !dbg !10613
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10614
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10612, metadata !DIExpression(DW_OP_deref)), !dbg !10613
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10615
  call void @llvm.dbg.value(metadata i32 %4, metadata !10611, metadata !DIExpression()), !dbg !10613
  %5 = icmp slt i32 %4, 0, !dbg !10616
  br i1 %5, label %9, label %6, !dbg !10618

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10619
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10612, metadata !DIExpression()), !dbg !10613
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10620
  br label %9, !dbg !10621

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10613
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10622
  ret i32 %10, !dbg !10622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10623 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10625, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i32 12, metadata !10626, metadata !DIExpression()), !dbg !10629
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10630

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10631, metadata !DIExpression()) #23, !dbg !10637
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10640, !srcloc !10641
  call void @llvm.dbg.value(metadata i32 %4, metadata !10636, metadata !DIExpression()) #23, !dbg !10637
  %5 = or i32 %4, 12, !dbg !10642
  call void @llvm.dbg.value(metadata i32 %5, metadata !10627, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 %5, metadata !10644, metadata !DIExpression()) #23, !dbg !10651
  call void @llvm.dbg.value(metadata i32* %2, metadata !10649, metadata !DIExpression()) #23, !dbg !10651
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10653, !srcloc !10654
  call void @llvm.dbg.value(metadata i32 %6, metadata !10650, metadata !DIExpression()) #23, !dbg !10651
  %7 = icmp eq i32 %6, 0, !dbg !10630
  br i1 %7, label %8, label %3, !dbg !10642, !llvm.loop !10655

8:                                                ; preds = %3
  ret void, !dbg !10656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10657 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10659, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.value(metadata i32 %1, metadata !10660, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.value(metadata i32 %2, metadata !10661, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.value(metadata i32 0, metadata !10662, metadata !DIExpression()), !dbg !10663
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10664
  %5 = load volatile i32, i32* %4, align 4, !dbg !10664
  %6 = and i32 %5, -5633, !dbg !10664
  %7 = or i32 %2, %1, !dbg !10664
  %8 = or i32 %7, %6, !dbg !10664
  store volatile i32 %8, i32* %4, align 4, !dbg !10664
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10665
  %10 = load volatile i32, i32* %9, align 4, !dbg !10665
  %11 = and i32 %10, -12289, !dbg !10665
  store volatile i32 %11, i32* %9, align 4, !dbg !10665
  ret void, !dbg !10666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10667 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10669, metadata !DIExpression()), !dbg !10670
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10671
  %3 = load volatile i32, i32* %2, align 4, !dbg !10671
  %4 = or i32 %3, 8, !dbg !10671
  store volatile i32 %4, i32* %2, align 4, !dbg !10671
  ret void, !dbg !10672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10673 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10677, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10678, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i32 0, metadata !10679, metadata !DIExpression()), !dbg !10680
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10681
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10681
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10682
  %5 = load i8, i8* %4, align 4, !dbg !10682
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10683
  ret i32 %6, !dbg !10684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.150(%struct.device* noundef %0) unnamed_addr #1 !dbg !10685 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10687, metadata !DIExpression()), !dbg !10688
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10689
  ret i1 %2, !dbg !10690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10691 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10693, metadata !DIExpression()), !dbg !10694
  tail call fastcc void @__NVIC_SetPriority.152() #24, !dbg !10695
  store i32 8399, i32* @last_load, align 4, !dbg !10696
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10697
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10698
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10699
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10700
  %3 = or i32 %2, 7, !dbg !10700
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10700
  ret i32 0, !dbg !10701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.152() unnamed_addr #14 !dbg !10702 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10704, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata i32 1, metadata !10705, metadata !DIExpression()), !dbg !10706
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10707
  ret void, !dbg !10710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10711 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10713, metadata !DIExpression()), !dbg !10715
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10716
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10717
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10718
  %5 = add i32 %4, %3, !dbg !10718
  store i32 %5, i32* @cycle_count, align 4, !dbg !10718
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10719
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10720
  %7 = sub i32 %5, %6, !dbg !10723
  %8 = udiv i32 %7, 8400, !dbg !10724
  call void @llvm.dbg.value(metadata i32 %8, metadata !10714, metadata !DIExpression()), !dbg !10715
  %9 = mul nuw i32 %8, 8400, !dbg !10725
  %10 = add i32 %9, %6, !dbg !10726
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10726
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10727
  tail call void @z_arm_int_exit() #25, !dbg !10728
  ret void, !dbg !10729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10730 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10735
  call void @llvm.dbg.value(metadata i32 %1, metadata !10732, metadata !DIExpression()), !dbg !10736
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %2, metadata !10733, metadata !DIExpression()), !dbg !10736
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %3, metadata !10734, metadata !DIExpression()), !dbg !10736
  %4 = and i32 %2, 65536, !dbg !10739
  %5 = icmp ne i32 %4, 0, !dbg !10739
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10741
  %8 = load i32, i32* @last_load, align 4, !dbg !10736
  br i1 %7, label %9, label %13, !dbg !10741

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10742
  %11 = add i32 %10, %8, !dbg !10742
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10742
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10744
  br label %13, !dbg !10745

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10746
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10747
  %16 = add i32 %14, %15, !dbg !10748
  ret i32 %16, !dbg !10749
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10754, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i1 %1, metadata !10755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10767
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10768
  br i1 %4, label %5, label %8, !dbg !10768

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10770
  %7 = and i32 %6, -2, !dbg !10770
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10770
  store i32 -16777216, i32* @last_load, align 4, !dbg !10772
  br label %60, !dbg !10773

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10774
  call void @llvm.dbg.value(metadata i32 %9, metadata !10759, metadata !DIExpression()), !dbg !10767
  br i1 %3, label %18, label %10, !dbg !10775

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10775
  call void @llvm.dbg.value(metadata i32 undef, metadata !10754, metadata !DIExpression()), !dbg !10767
  %12 = icmp slt i32 %11, 1, !dbg !10776
  br i1 %12, label %18, label %13, !dbg !10776

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10776
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10776
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10776
  %17 = add nuw nsw i32 %16, 8399, !dbg !10776
  br label %18, !dbg !10776

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10754, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10777, metadata !DIExpression()) #23, !dbg !10784
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10786, !srcloc !10792
  call void @llvm.dbg.value(metadata i32 undef, metadata !10789, metadata !DIExpression()) #23, !dbg !10793
  call void @llvm.dbg.value(metadata i32 undef, metadata !10790, metadata !DIExpression()) #23, !dbg !10793
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10784
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10794
  br i1 %21, label %23, label %22, !dbg !10797

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 148) #25, !dbg !10798
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10798
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 148) #25, !dbg !10798
  unreachable, !dbg !10798

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10786
  call void @llvm.dbg.value(metadata i32 %24, metadata !10789, metadata !DIExpression()) #23, !dbg !10793
  call void @llvm.dbg.value(metadata i32 %24, metadata !10783, metadata !DIExpression()) #23, !dbg !10784
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10800
  call void @llvm.dbg.value(metadata i32 %24, metadata !10760, metadata !DIExpression()), !dbg !10767
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10801
  call void @llvm.dbg.value(metadata i32 %25, metadata !10765, metadata !DIExpression()), !dbg !10767
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10802
  call void @llvm.dbg.value(metadata i32 %26, metadata !10757, metadata !DIExpression()), !dbg !10767
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10803
  %28 = add i32 %27, %25, !dbg !10803
  store i32 %28, i32* @cycle_count, align 4, !dbg !10803
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10804
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10805
  %30 = sub i32 %28, %29, !dbg !10806
  call void @llvm.dbg.value(metadata i32 %30, metadata !10766, metadata !DIExpression()), !dbg !10767
  %31 = icmp slt i32 %30, 0, !dbg !10807
  br i1 %31, label %41, label %32, !dbg !10809

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10756, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 undef, metadata !10756, metadata !DIExpression()), !dbg !10767
  %33 = add nuw i32 %19, %30, !dbg !10810
  %34 = urem i32 %33, 8400, !dbg !10812
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10756, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10767
  %35 = sub nuw nsw i32 %19, %34, !dbg !10813
  call void @llvm.dbg.value(metadata i32 %35, metadata !10756, metadata !DIExpression()), !dbg !10767
  %36 = icmp ugt i32 %35, 1024, !dbg !10814
  br i1 %36, label %37, label %39, !dbg !10814

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10756, metadata !DIExpression()), !dbg !10767
  %38 = icmp ugt i32 %35, 16766400, !dbg !10815
  br i1 %38, label %41, label %39, !dbg !10817

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10818
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10819
  call void @llvm.dbg.value(metadata i32 %43, metadata !10758, metadata !DIExpression()), !dbg !10767
  %44 = add nsw i32 %42, -1, !dbg !10820
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10821
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10822
  %45 = icmp ult i32 %26, %43, !dbg !10823
  br i1 %45, label %46, label %51, !dbg !10825

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10826
  %48 = add i32 %26, %9, !dbg !10828
  %49 = sub i32 %48, %43, !dbg !10829
  %50 = add i32 %49, %47, !dbg !10826
  br label %55, !dbg !10830

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10831
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10833
  %54 = add i32 %52, %53, !dbg !10833
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10834
  store i32 %56, i32* @cycle_count, align 4, !dbg !10834
  call void @llvm.dbg.value(metadata i32 undef, metadata !10835, metadata !DIExpression()) #23, !dbg !10841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10840, metadata !DIExpression()) #23, !dbg !10841
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10843
  br i1 %57, label %59, label %58, !dbg !10846

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 194) #25, !dbg !10847
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.158, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10847
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 194) #25, !dbg !10847
  unreachable, !dbg !10847

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10835, metadata !DIExpression()) #23, !dbg !10841
  call void @llvm.dbg.value(metadata i32 %24, metadata !10849, metadata !DIExpression()) #23, !dbg !10852
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10854, !srcloc !10855
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10856
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10857 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10777, metadata !DIExpression()) #23, !dbg !10861
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10863, !srcloc !10792
  call void @llvm.dbg.value(metadata i32 undef, metadata !10789, metadata !DIExpression()) #23, !dbg !10865
  call void @llvm.dbg.value(metadata i32 undef, metadata !10790, metadata !DIExpression()) #23, !dbg !10865
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10861
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10866
  br i1 %2, label %4, label %3, !dbg !10867

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 148) #25, !dbg !10868
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10868
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 148) #25, !dbg !10868
  unreachable, !dbg !10868

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10789, metadata !DIExpression()) #23, !dbg !10865
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10861
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10869
  call void @llvm.dbg.value(metadata i32 undef, metadata !10859, metadata !DIExpression()), !dbg !10870
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10871
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10872
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10873
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10870
  call void @llvm.dbg.value(metadata i32 undef, metadata !10835, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10840, metadata !DIExpression()) #23, !dbg !10874
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10876
  br i1 %8, label %10, label %9, !dbg !10877

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 194) #25, !dbg !10878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.158, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 194) #25, !dbg !10878
  unreachable, !dbg !10878

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10879
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10870
  %12 = sub i32 %11, %7, !dbg !10880
  call void @llvm.dbg.value(metadata i32 %12, metadata !10860, metadata !DIExpression()), !dbg !10870
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10863
  call void @llvm.dbg.value(metadata i32 %13, metadata !10789, metadata !DIExpression()) #23, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %13, metadata !10783, metadata !DIExpression()) #23, !dbg !10861
  call void @llvm.dbg.value(metadata i32 %13, metadata !10859, metadata !DIExpression()), !dbg !10870
  call void @llvm.dbg.value(metadata i32 undef, metadata !10835, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 undef, metadata !10849, metadata !DIExpression()) #23, !dbg !10881
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10883, !srcloc !10855
  %14 = udiv i32 %12, 8400, !dbg !10884
  ret i32 %14, !dbg !10885
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10886 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10777, metadata !DIExpression()) #23, !dbg !10890
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10892, !srcloc !10792
  call void @llvm.dbg.value(metadata i32 undef, metadata !10789, metadata !DIExpression()) #23, !dbg !10894
  call void @llvm.dbg.value(metadata i32 undef, metadata !10790, metadata !DIExpression()) #23, !dbg !10894
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10890
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10895
  br i1 %2, label %4, label %3, !dbg !10896

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 148) #25, !dbg !10897
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10897
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 148) #25, !dbg !10897
  unreachable, !dbg !10897

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10789, metadata !DIExpression()) #23, !dbg !10894
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10890
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10898
  call void @llvm.dbg.value(metadata i32 undef, metadata !10888, metadata !DIExpression()), !dbg !10899
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10900
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10901
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10889, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10899
  call void @llvm.dbg.value(metadata i32 undef, metadata !10835, metadata !DIExpression()) #23, !dbg !10902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10840, metadata !DIExpression()) #23, !dbg !10902
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10904
  br i1 %7, label %9, label %8, !dbg !10905

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 194) #25, !dbg !10906
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.158, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10906
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 194) #25, !dbg !10906
  unreachable, !dbg !10906

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10907
  call void @llvm.dbg.value(metadata i32 %10, metadata !10889, metadata !DIExpression()), !dbg !10899
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10892
  call void @llvm.dbg.value(metadata i32 %11, metadata !10789, metadata !DIExpression()) #23, !dbg !10894
  call void @llvm.dbg.value(metadata i32 %11, metadata !10783, metadata !DIExpression()) #23, !dbg !10890
  call void @llvm.dbg.value(metadata i32 %11, metadata !10888, metadata !DIExpression()), !dbg !10899
  call void @llvm.dbg.value(metadata i32 undef, metadata !10835, metadata !DIExpression()) #23, !dbg !10902
  call void @llvm.dbg.value(metadata i32 undef, metadata !10849, metadata !DIExpression()) #23, !dbg !10908
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10910, !srcloc !10855
  ret i32 %10, !dbg !10911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10912 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10913
  %2 = icmp eq i32 %1, -16777216, !dbg !10915
  br i1 %2, label %3, label %6, !dbg !10916

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10917
  %5 = or i32 %4, 1, !dbg !10917
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10917
  br label %6, !dbg !10919

6:                                                ; preds = %3, %0
  ret void, !dbg !10920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10921 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10922
  %2 = and i32 %1, -2, !dbg !10922
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10922
  ret void, !dbg !10923
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10924 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10950, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i8 %1, metadata !10951, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10952, metadata !DIExpression()), !dbg !10953
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10954
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10954
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10953
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10955
  %8 = load i8, i8* %6, align 4, !dbg !10956
  %9 = zext i8 %8 to i32, !dbg !10957
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10957
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10958
  br i1 %11, label %18, label %24, !dbg !10959

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10953
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10955
  %14 = load i8, i8* %6, align 4, !dbg !10956
  %15 = zext i8 %14 to i32, !dbg !10957
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10957
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10958
  br i1 %17, label %18, label %24, !dbg !10959, !llvm.loop !10960

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10962
  %21 = load i8, i8* %20, align 1, !dbg !10962
  %22 = icmp eq i8 %21, %1, !dbg !10965
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10966
  br i1 %22, label %24, label %12, !dbg !10967

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10953
  ret i32 %25, !dbg !10968
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10969 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10980, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i8 %1, metadata !10981, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 %2, metadata !10982, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 0, metadata !10985, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i32 0, metadata !10986, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.value(metadata i8 0, metadata !10987, metadata !DIExpression()), !dbg !10997
  %4 = icmp eq i8 %1, 0, !dbg !10998
  br i1 %4, label %35, label %5, !dbg !10999

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10998
  br label %9, !dbg !10999

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10987, metadata !DIExpression()), !dbg !10997
  call void @llvm.dbg.value(metadata i32 %29, metadata !10985, metadata !DIExpression()), !dbg !10996
  %8 = icmp eq i32 %34, %6, !dbg !10998
  br i1 %8, label %35, label %9, !dbg !10999, !llvm.loop !11000

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10987, metadata !DIExpression()), !dbg !10997
  call void @llvm.dbg.value(metadata i32 %11, metadata !10985, metadata !DIExpression()), !dbg !10996
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11002
  %13 = load i32, i32* %12, align 4, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %13, metadata !10984, metadata !DIExpression()), !dbg !10996
  %14 = and i32 %13, 31, !dbg !11003
  %15 = icmp ult i32 %14, 16, !dbg !11004
  br i1 %15, label %16, label %20, !dbg !11005

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11006
  %18 = load i32, i32* %17, align 4, !dbg !11006
  %19 = or i32 %18, 32, !dbg !11008
  call void @llvm.dbg.value(metadata i32 %19, metadata !10985, metadata !DIExpression()), !dbg !10996
  br label %28, !dbg !11009

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11010

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11011
  %23 = load i32, i32* %22, align 4, !dbg !11011
  call void @llvm.dbg.value(metadata i32 %23, metadata !10989, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11012
  %24 = lshr i32 %23, 7, !dbg !11013
  %25 = and i32 %24, 16, !dbg !11013
  %26 = or i32 %25, %23, !dbg !11013
  call void @llvm.dbg.value(metadata i32 %26, metadata !10985, metadata !DIExpression()), !dbg !10996
  br label %28, !dbg !11014

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10996
  call void @llvm.dbg.value(metadata i32 %29, metadata !10985, metadata !DIExpression()), !dbg !10996
  %30 = lshr i32 %13, 5, !dbg !11015
  %31 = and i32 %30, 255, !dbg !11015
  call void @llvm.dbg.value(metadata i32 %31, metadata !10983, metadata !DIExpression()), !dbg !10996
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11016
  call void @llvm.dbg.value(metadata i32 %32, metadata !10986, metadata !DIExpression()), !dbg !10996
  %33 = icmp slt i32 %32, 0, !dbg !11017
  %34 = add nuw nsw i32 %10, 1, !dbg !11019
  call void @llvm.dbg.value(metadata i32 %34, metadata !10987, metadata !DIExpression()), !dbg !10997
  br i1 %33, label %35, label %7, !dbg !11020

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11026, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i32 %1, metadata !11027, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i32 %2, metadata !11028, metadata !DIExpression()), !dbg !11030
  %4 = icmp ugt i32 %0, 175, !dbg !11031
  br i1 %4, label %16, label %5, !dbg !11033

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11034
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11035
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11035
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11029, metadata !DIExpression()), !dbg !11030
  %9 = add nsw i32 %6, -8, !dbg !11036
  %10 = icmp ult i32 %9, 3, !dbg !11036
  br i1 %10, label %16, label %11, !dbg !11038

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.163(%struct.device* noundef %8) #24, !dbg !11039
  br i1 %12, label %13, label %16, !dbg !11040

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11041
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11042
  br label %16, !dbg !11043

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11030
  ret i32 %17, !dbg !11044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.163(%struct.device* noundef %0) unnamed_addr #1 !dbg !11045 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11049, metadata !DIExpression()), !dbg !11050
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11051, !srcloc !11053
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.164(%struct.device* noundef %0) #24, !dbg !11054
  ret i1 %2, !dbg !11055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.164(%struct.device* noundef %0) unnamed_addr #1 !dbg !11056 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11058, metadata !DIExpression()), !dbg !11059
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11060
  ret i1 %2, !dbg !11061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11062 {
  ret void, !dbg !11063
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11064 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11066, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i32 0, metadata !11067, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i32 2, metadata !11068, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i32 0, metadata !11069, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i32 2, metadata !11070, metadata !DIExpression()), !dbg !11071
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11072
  %2 = and i32 %1, 12, !dbg !11073
  call void @llvm.dbg.value(metadata i32 %2, metadata !11066, metadata !DIExpression()), !dbg !11071
  %3 = icmp eq i32 %2, 8, !dbg !11074
  br i1 %3, label %4, label %18, !dbg !11074

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11075
  call void @llvm.dbg.value(metadata i32 %5, metadata !11069, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11071
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11077
  %7 = and i32 %6, 63, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %7, metadata !11070, metadata !DIExpression()), !dbg !11071
  %8 = udiv i32 16000000, %7, !dbg !11079
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11079
  %10 = lshr i32 %9, 6, !dbg !11079
  %11 = and i32 %10, 511, !dbg !11079
  %12 = mul i32 %11, %8, !dbg !11079
  call void @llvm.dbg.value(metadata i32 %12, metadata !11067, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i32 %12, metadata !11067, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i32 %12, metadata !11067, metadata !DIExpression()), !dbg !11071
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11081
  %14 = lshr i32 %13, 15, !dbg !11082
  %15 = and i32 %14, 6, !dbg !11082
  %16 = add nuw nsw i32 %15, 2, !dbg !11082
  call void @llvm.dbg.value(metadata i32 %16, metadata !11068, metadata !DIExpression()), !dbg !11071
  %17 = udiv i32 %12, %16, !dbg !11083
  br label %18, !dbg !11084

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11085
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11086
  %21 = lshr i32 %20, 4, !dbg !11087
  %22 = and i32 %21, 15, !dbg !11087
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11088
  %24 = load i8, i8* %23, align 1, !dbg !11088
  %25 = zext i8 %24 to i32, !dbg !11088
  call void @llvm.dbg.value(metadata i32 %25, metadata !11066, metadata !DIExpression()), !dbg !11071
  %26 = lshr i32 %19, %25, !dbg !11089
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11089
  ret void, !dbg !11090
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11091 {
  ret i32 0, !dbg !11096
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11097 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11123, metadata !DIExpression()), !dbg !11134
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11135
  br i1 %3, label %311, label %4, !dbg !11137

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11138
  %6 = load i32, i32* %5, align 4, !dbg !11138
  %7 = and i32 %6, 1, !dbg !11140
  %8 = icmp eq i32 %7, 0, !dbg !11141
  br i1 %8, label %66, label %9, !dbg !11142

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11143
  %11 = and i32 %10, 12, !dbg !11143
  %12 = icmp eq i32 %11, 4, !dbg !11146
  br i1 %12, label %21, label %13, !dbg !11147

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11148
  %15 = and i32 %14, 12, !dbg !11148
  %16 = icmp eq i32 %15, 8, !dbg !11149
  br i1 %16, label %17, label %29, !dbg !11150

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11151
  %19 = and i32 %18, 4194304, !dbg !11152
  %20 = icmp eq i32 %19, 0, !dbg !11153
  br i1 %20, label %29, label %21, !dbg !11154

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11155
  %23 = and i32 %22, 131072, !dbg !11155
  %24 = icmp eq i32 %23, 0, !dbg !11155
  br i1 %24, label %66, label %25, !dbg !11158

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11159
  %27 = load i32, i32* %26, align 4, !dbg !11159
  %28 = icmp eq i32 %27, 0, !dbg !11160
  br i1 %28, label %311, label %66, !dbg !11161

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11162
  %31 = load i32, i32* %30, align 4, !dbg !11162
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11166

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11167
  %34 = or i32 %33, 65536, !dbg !11167
  br label %45, !dbg !11167

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11169
  %37 = or i32 %36, 262144, !dbg !11169
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11169
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11169
  %39 = or i32 %38, 65536, !dbg !11169
  br label %45, !dbg !11169

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11172
  %42 = and i32 %41, -65537, !dbg !11172
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11172
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11172
  %44 = and i32 %43, -262145, !dbg !11172
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11174
  %47 = load i32, i32* %30, align 4, !dbg !11175
  %48 = icmp eq i32 %47, 0, !dbg !11177
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11178
  call void @llvm.dbg.value(metadata i32 %49, metadata !11124, metadata !DIExpression()), !dbg !11134
  call void @llvm.dbg.value(metadata i32 %49, metadata !11124, metadata !DIExpression()), !dbg !11134
  br i1 %48, label %58, label %50, !dbg !11179

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11180
  %52 = and i32 %51, 131072, !dbg !11182
  %53 = icmp eq i32 %52, 0, !dbg !11182
  br i1 %53, label %54, label %66, !dbg !11183

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11184
  %56 = sub i32 %55, %49, !dbg !11187
  %57 = icmp ugt i32 %56, 100, !dbg !11188
  br i1 %57, label %311, label %50, !dbg !11189, !llvm.loop !11190

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11192
  %60 = and i32 %59, 131072, !dbg !11192
  %61 = icmp eq i32 %60, 0, !dbg !11192
  br i1 %61, label %66, label %62, !dbg !11194

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11195
  %64 = sub i32 %63, %49, !dbg !11198
  %65 = icmp ugt i32 %64, 100, !dbg !11199
  br i1 %65, label %311, label %58, !dbg !11200, !llvm.loop !11201

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11203
  %68 = and i32 %67, 2, !dbg !11205
  %69 = icmp eq i32 %68, 0, !dbg !11206
  br i1 %69, label %121, label %70, !dbg !11207

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11208
  %72 = and i32 %71, 12, !dbg !11208
  %73 = icmp eq i32 %72, 0, !dbg !11211
  br i1 %73, label %82, label %74, !dbg !11212

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11213
  %76 = and i32 %75, 12, !dbg !11213
  %77 = icmp eq i32 %76, 8, !dbg !11214
  br i1 %77, label %78, label %90, !dbg !11215

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11216
  %80 = and i32 %79, 4194304, !dbg !11217
  %81 = icmp eq i32 %80, 0, !dbg !11218
  br i1 %81, label %82, label %90, !dbg !11219

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11220
  %84 = and i32 %83, 2, !dbg !11220
  %85 = icmp eq i32 %84, 0, !dbg !11220
  br i1 %85, label %114, label %86, !dbg !11223

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11224
  %88 = load i32, i32* %87, align 4, !dbg !11224
  %89 = icmp eq i32 %88, 1, !dbg !11225
  br i1 %89, label %114, label %311, !dbg !11226

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11227
  %92 = load i32, i32* %91, align 4, !dbg !11227
  %93 = icmp eq i32 %92, 0, !dbg !11230
  br i1 %93, label %104, label %94, !dbg !11231

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11232
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !11234
  call void @llvm.dbg.value(metadata i32 %95, metadata !11124, metadata !DIExpression()), !dbg !11134
  br label %96, !dbg !11235

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11236
  %98 = and i32 %97, 2, !dbg !11237
  %99 = icmp eq i32 %98, 0, !dbg !11237
  br i1 %99, label %100, label %114, !dbg !11235

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !11238
  %102 = sub i32 %101, %95, !dbg !11241
  %103 = icmp ugt i32 %102, 2, !dbg !11242
  br i1 %103, label %311, label %96, !dbg !11243, !llvm.loop !11244

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11246
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !11248
  call void @llvm.dbg.value(metadata i32 %105, metadata !11124, metadata !DIExpression()), !dbg !11134
  br label %106, !dbg !11249

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11250
  %108 = and i32 %107, 2, !dbg !11250
  %109 = icmp eq i32 %108, 0, !dbg !11250
  br i1 %109, label %121, label %110, !dbg !11249

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !11251
  %112 = sub i32 %111, %105, !dbg !11254
  %113 = icmp ugt i32 %112, 2, !dbg !11255
  br i1 %113, label %311, label %106, !dbg !11256, !llvm.loop !11257

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11259
  %116 = and i32 %115, -249, !dbg !11259
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11259
  %118 = load i32, i32* %117, align 4, !dbg !11259
  %119 = shl i32 %118, 3, !dbg !11259
  %120 = or i32 %119, %116, !dbg !11259
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11259
  br label %121, !dbg !11260

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11260
  %123 = and i32 %122, 8, !dbg !11262
  %124 = icmp eq i32 %123, 0, !dbg !11263
  br i1 %124, label %149, label %125, !dbg !11264

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11265
  %127 = load i32, i32* %126, align 4, !dbg !11265
  %128 = icmp eq i32 %127, 0, !dbg !11268
  br i1 %128, label %139, label %129, !dbg !11269

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11270
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !11272
  call void @llvm.dbg.value(metadata i32 %130, metadata !11124, metadata !DIExpression()), !dbg !11134
  br label %131, !dbg !11273

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11274
  %133 = and i32 %132, 2, !dbg !11275
  %134 = icmp eq i32 %133, 0, !dbg !11275
  br i1 %134, label %135, label %149, !dbg !11273

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !11276
  %137 = sub i32 %136, %130, !dbg !11279
  %138 = icmp ugt i32 %137, 2, !dbg !11280
  br i1 %138, label %311, label %131, !dbg !11281, !llvm.loop !11282

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11284
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !11286
  call void @llvm.dbg.value(metadata i32 %140, metadata !11124, metadata !DIExpression()), !dbg !11134
  br label %141, !dbg !11287

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11288
  %143 = and i32 %142, 2, !dbg !11288
  %144 = icmp eq i32 %143, 0, !dbg !11288
  br i1 %144, label %149, label %145, !dbg !11287

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !11289
  %147 = sub i32 %146, %140, !dbg !11292
  %148 = icmp ugt i32 %147, 2, !dbg !11293
  br i1 %148, label %311, label %141, !dbg !11294, !llvm.loop !11295

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11297
  %151 = and i32 %150, 4, !dbg !11298
  %152 = icmp eq i32 %151, 0, !dbg !11299
  br i1 %152, label %221, label %153, !dbg !11300

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11126, metadata !DIExpression()), !dbg !11301
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11302
  %155 = and i32 %154, 268435456, !dbg !11302
  %156 = icmp eq i32 %155, 0, !dbg !11302
  br i1 %156, label %157, label %164, !dbg !11303

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11304
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11304
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11130, metadata !DIExpression()), !dbg !11304
  store volatile i32 0, i32* %2, align 4, !dbg !11304
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11304
  %160 = or i32 %159, 268435456, !dbg !11304
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11304
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11304
  %162 = and i32 %161, 268435456, !dbg !11304
  store volatile i32 %162, i32* %2, align 4, !dbg !11304
  %163 = load volatile i32, i32* %2, align 4, !dbg !11304
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11305
  call void @llvm.dbg.value(metadata i32 1, metadata !11126, metadata !DIExpression()), !dbg !11301
  br label %164, !dbg !11306

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11126, metadata !DIExpression()), !dbg !11301
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11307
  %166 = and i32 %165, 256, !dbg !11307
  %167 = icmp eq i32 %166, 0, !dbg !11307
  br i1 %167, label %168, label %180, !dbg !11309

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11310
  %170 = or i32 %169, 256, !dbg !11310
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11310
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !11312
  call void @llvm.dbg.value(metadata i32 %171, metadata !11124, metadata !DIExpression()), !dbg !11134
  br label %172, !dbg !11313

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11314
  %174 = and i32 %173, 256, !dbg !11314
  %175 = icmp eq i32 %174, 0, !dbg !11314
  br i1 %175, label %176, label %180, !dbg !11313

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !11315
  %178 = sub i32 %177, %171, !dbg !11318
  %179 = icmp ugt i32 %178, 2, !dbg !11319
  br i1 %179, label %311, label %172, !dbg !11320, !llvm.loop !11321

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11323
  %182 = load i32, i32* %181, align 4, !dbg !11323
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11326

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11327
  %185 = or i32 %184, 1, !dbg !11327
  br label %196, !dbg !11327

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11329
  %188 = or i32 %187, 4, !dbg !11329
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11329
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11329
  %190 = or i32 %189, 1, !dbg !11329
  br label %196, !dbg !11329

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11332
  %193 = and i32 %192, -2, !dbg !11332
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11332
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11332
  %195 = and i32 %194, -5, !dbg !11332
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11334
  %198 = load i32, i32* %181, align 4, !dbg !11335
  %199 = icmp eq i32 %198, 0, !dbg !11337
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !11338
  call void @llvm.dbg.value(metadata i32 %200, metadata !11124, metadata !DIExpression()), !dbg !11134
  call void @llvm.dbg.value(metadata i32 %200, metadata !11124, metadata !DIExpression()), !dbg !11134
  br i1 %199, label %209, label %201, !dbg !11339

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11340
  %203 = and i32 %202, 2, !dbg !11342
  %204 = icmp eq i32 %203, 0, !dbg !11342
  br i1 %204, label %205, label %217, !dbg !11343

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !11344
  %207 = sub i32 %206, %200, !dbg !11347
  %208 = icmp ugt i32 %207, 5000, !dbg !11348
  br i1 %208, label %311, label %201, !dbg !11349, !llvm.loop !11350

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11352
  %211 = and i32 %210, 2, !dbg !11352
  %212 = icmp eq i32 %211, 0, !dbg !11352
  br i1 %212, label %217, label %213, !dbg !11354

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !11355
  %215 = sub i32 %214, %200, !dbg !11358
  %216 = icmp ugt i32 %215, 5000, !dbg !11359
  br i1 %216, label %311, label %209, !dbg !11360, !llvm.loop !11361

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11363

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11364
  %220 = and i32 %219, -268435457, !dbg !11364
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11364
  br label %221, !dbg !11367

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11368
  %223 = load i32, i32* %222, align 4, !dbg !11368
  %224 = icmp eq i32 %223, 0, !dbg !11370
  br i1 %224, label %310, label %225, !dbg !11371

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11372
  %227 = and i32 %226, 12, !dbg !11372
  %228 = icmp eq i32 %227, 8, !dbg !11375
  br i1 %228, label %277, label %229, !dbg !11376

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11377
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11380
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !11380
  call void @llvm.dbg.value(metadata i32 %231, metadata !11124, metadata !DIExpression()), !dbg !11134
  call void @llvm.dbg.value(metadata i32 %231, metadata !11124, metadata !DIExpression()), !dbg !11134
  br i1 %230, label %232, label %269, !dbg !11381

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11382
  %234 = and i32 %233, 33554432, !dbg !11382
  %235 = icmp eq i32 %234, 0, !dbg !11382
  br i1 %235, label %240, label %236, !dbg !11384

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !11385
  %238 = sub i32 %237, %231, !dbg !11388
  %239 = icmp ugt i32 %238, 2, !dbg !11389
  br i1 %239, label %311, label %232, !dbg !11390, !llvm.loop !11391

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11393
  %242 = load i32, i32* %241, align 4, !dbg !11393
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11393
  %244 = load i32, i32* %243, align 4, !dbg !11393
  %245 = or i32 %244, %242, !dbg !11393
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11393
  %247 = load i32, i32* %246, align 4, !dbg !11393
  %248 = shl i32 %247, 6, !dbg !11393
  %249 = or i32 %245, %248, !dbg !11393
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11393
  %251 = load i32, i32* %250, align 4, !dbg !11393
  %252 = shl i32 %251, 15, !dbg !11393
  %253 = add i32 %252, -65536, !dbg !11393
  %254 = and i32 %253, -65536, !dbg !11393
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11393
  %256 = load i32, i32* %255, align 4, !dbg !11393
  %257 = shl i32 %256, 24, !dbg !11393
  %258 = or i32 %249, %257, !dbg !11393
  %259 = or i32 %258, %254, !dbg !11393
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11393
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11394
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !11395
  call void @llvm.dbg.value(metadata i32 %260, metadata !11124, metadata !DIExpression()), !dbg !11134
  br label %261, !dbg !11396

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11397
  %263 = and i32 %262, 33554432, !dbg !11398
  %264 = icmp eq i32 %263, 0, !dbg !11398
  br i1 %264, label %265, label %310, !dbg !11396

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !11399
  %267 = sub i32 %266, %260, !dbg !11402
  %268 = icmp ugt i32 %267, 2, !dbg !11403
  br i1 %268, label %311, label %261, !dbg !11404, !llvm.loop !11405

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11407
  %271 = and i32 %270, 33554432, !dbg !11407
  %272 = icmp eq i32 %271, 0, !dbg !11407
  br i1 %272, label %310, label %273, !dbg !11409

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !11410
  %275 = sub i32 %274, %231, !dbg !11413
  %276 = icmp ugt i32 %275, 2, !dbg !11414
  br i1 %276, label %311, label %269, !dbg !11415, !llvm.loop !11416

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11418
  br i1 %278, label %311, label %279, !dbg !11421

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11422
  call void @llvm.dbg.value(metadata i32 %280, metadata !11125, metadata !DIExpression()), !dbg !11134
  %281 = and i32 %280, 4194304, !dbg !11424
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11426
  %283 = load i32, i32* %282, align 4, !dbg !11426
  %284 = icmp eq i32 %281, %283, !dbg !11427
  br i1 %284, label %285, label %311, !dbg !11428

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11429
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11430
  %288 = load i32, i32* %287, align 4, !dbg !11430
  %289 = icmp eq i32 %286, %288, !dbg !11431
  br i1 %289, label %290, label %311, !dbg !11432

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11433
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11434
  %293 = load i32, i32* %292, align 4, !dbg !11434
  %294 = shl i32 %293, 6, !dbg !11435
  %295 = icmp eq i32 %291, %294, !dbg !11436
  br i1 %295, label %296, label %311, !dbg !11437

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11438
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11439
  %299 = load i32, i32* %298, align 4, !dbg !11439
  %300 = shl i32 %299, 15, !dbg !11440
  %301 = add i32 %300, -65536, !dbg !11440
  %302 = and i32 %301, -65536, !dbg !11440
  %303 = icmp eq i32 %297, %302, !dbg !11441
  br i1 %303, label %304, label %311, !dbg !11442

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11443
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11444
  %307 = load i32, i32* %306, align 4, !dbg !11444
  %308 = shl i32 %307, 24, !dbg !11445
  %309 = icmp eq i32 %305, %308, !dbg !11446
  br i1 %309, label %310, label %311, !dbg !11447

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11448

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11134
  ret i32 %312, !dbg !11449
}

; Function Attrs: optsize
declare !dbg !11450 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11452 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11465, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata i32 %1, metadata !11466, metadata !DIExpression()), !dbg !11468
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11469
  br i1 %3, label %115, label %4, !dbg !11471

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11472
  %6 = and i32 %5, 7, !dbg !11472
  %7 = icmp ult i32 %6, %1, !dbg !11474
  br i1 %7, label %8, label %13, !dbg !11475

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11476
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11476
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11478
  %11 = and i32 %10, 7, !dbg !11478
  %12 = icmp eq i32 %11, %1, !dbg !11480
  br i1 %12, label %13, label %115, !dbg !11481

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11482
  %15 = load i32, i32* %14, align 4, !dbg !11482
  %16 = and i32 %15, 2, !dbg !11484
  %17 = icmp eq i32 %16, 0, !dbg !11485
  br i1 %17, label %39, label %18, !dbg !11486

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11487
  %20 = icmp eq i32 %19, 0, !dbg !11490
  br i1 %20, label %25, label %21, !dbg !11491

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11492
  %23 = or i32 %22, 7168, !dbg !11492
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11492
  %24 = load i32, i32* %14, align 4, !dbg !11494
  br label %25, !dbg !11496

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11494
  %27 = and i32 %26, 8, !dbg !11497
  %28 = icmp eq i32 %27, 0, !dbg !11498
  br i1 %28, label %32, label %29, !dbg !11499

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11500
  %31 = or i32 %30, 57344, !dbg !11500
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11500
  br label %32, !dbg !11502

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11503
  %34 = and i32 %33, -241, !dbg !11503
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11503
  %36 = load i32, i32* %35, align 4, !dbg !11503
  %37 = or i32 %34, %36, !dbg !11503
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11503
  %38 = load i32, i32* %14, align 4, !dbg !11504
  br label %39, !dbg !11506

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11504
  %41 = and i32 %40, 1, !dbg !11507
  %42 = icmp eq i32 %41, 0, !dbg !11508
  br i1 %42, label %73, label %43, !dbg !11509

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11510
  %45 = load i32, i32* %44, align 4, !dbg !11510
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11513

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11514
  %48 = and i32 %47, 131072, !dbg !11517
  %49 = icmp eq i32 %48, 0, !dbg !11517
  br i1 %49, label %115, label %58, !dbg !11518

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11519
  %52 = and i32 %51, 33554432, !dbg !11523
  %53 = icmp eq i32 %52, 0, !dbg !11523
  br i1 %53, label %115, label %58, !dbg !11524

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11525
  %56 = and i32 %55, 2, !dbg !11528
  %57 = icmp eq i32 %56, 0, !dbg !11528
  br i1 %57, label %115, label %58, !dbg !11529

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11530
  %60 = and i32 %59, -4, !dbg !11530
  %61 = or i32 %60, %45, !dbg !11530
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11530
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11531
  call void @llvm.dbg.value(metadata i32 %62, metadata !11467, metadata !DIExpression()), !dbg !11468
  br label %63, !dbg !11532

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11533
  %65 = and i32 %64, 12, !dbg !11533
  %66 = load i32, i32* %44, align 4, !dbg !11534
  %67 = shl i32 %66, 2, !dbg !11535
  %68 = icmp eq i32 %65, %67, !dbg !11536
  br i1 %68, label %73, label %69, !dbg !11532

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11537
  %71 = sub i32 %70, %62, !dbg !11540
  %72 = icmp ugt i32 %71, 5000, !dbg !11541
  br i1 %72, label %115, label %63, !dbg !11542, !llvm.loop !11543

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11545
  %75 = and i32 %74, 7, !dbg !11545
  %76 = icmp ugt i32 %75, %1, !dbg !11547
  br i1 %76, label %77, label %82, !dbg !11548

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11549
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11549
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11551
  %80 = and i32 %79, 7, !dbg !11551
  %81 = icmp eq i32 %80, %1, !dbg !11553
  br i1 %81, label %82, label %115, !dbg !11554

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11555
  %84 = and i32 %83, 4, !dbg !11557
  %85 = icmp eq i32 %84, 0, !dbg !11558
  br i1 %85, label %93, label %86, !dbg !11559

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11560
  %88 = and i32 %87, -7169, !dbg !11560
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11560
  %90 = load i32, i32* %89, align 4, !dbg !11560
  %91 = or i32 %88, %90, !dbg !11560
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11560
  %92 = load i32, i32* %14, align 4, !dbg !11562
  br label %93, !dbg !11564

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11562
  %95 = and i32 %94, 8, !dbg !11565
  %96 = icmp eq i32 %95, 0, !dbg !11566
  br i1 %96, label %104, label %97, !dbg !11567

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11568
  %99 = and i32 %98, -57345, !dbg !11568
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11568
  %101 = load i32, i32* %100, align 4, !dbg !11568
  %102 = shl i32 %101, 3, !dbg !11568
  %103 = or i32 %102, %99, !dbg !11568
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11568
  br label %104, !dbg !11570

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !11571
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11572
  %107 = lshr i32 %106, 4, !dbg !11573
  %108 = and i32 %107, 15, !dbg !11573
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11574
  %110 = load i8, i8* %109, align 1, !dbg !11574
  %111 = zext i8 %110 to i32, !dbg !11574
  %112 = lshr i32 %105, %111, !dbg !11575
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11576
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11577
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11578
  br label %115, !dbg !11579

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11468
  ret i32 %116, !dbg !11580
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11581 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11583, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 0, metadata !11584, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 0, metadata !11585, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 0, metadata !11586, metadata !DIExpression()), !dbg !11587
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11588
  %2 = and i32 %1, 12, !dbg !11589
  %3 = icmp eq i32 %2, 8, !dbg !11590
  br i1 %3, label %4, label %21, !dbg !11590

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11591
  %6 = and i32 %5, 63, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %6, metadata !11583, metadata !DIExpression()), !dbg !11587
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11595
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11597
  %9 = lshr i32 %8, 6, !dbg !11597
  %10 = and i32 %9, 511, !dbg !11597
  %11 = zext i32 %10 to i64, !dbg !11597
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11597
  %13 = zext i32 %6 to i64, !dbg !11597
  %14 = udiv i64 %12, %13, !dbg !11597
  %15 = trunc i64 %14 to i32, !dbg !11597
  call void @llvm.dbg.value(metadata i32 %15, metadata !11584, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 %15, metadata !11584, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 %15, metadata !11584, metadata !DIExpression()), !dbg !11587
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11598
  %17 = lshr i32 %16, 15, !dbg !11599
  %18 = and i32 %17, 6, !dbg !11599
  %19 = add nuw nsw i32 %18, 2, !dbg !11599
  call void @llvm.dbg.value(metadata i32 %19, metadata !11585, metadata !DIExpression()), !dbg !11587
  %20 = udiv i32 %15, %19, !dbg !11600
  call void @llvm.dbg.value(metadata i32 %20, metadata !11586, metadata !DIExpression()), !dbg !11587
  br label %21, !dbg !11601

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11602
  call void @llvm.dbg.value(metadata i32 %22, metadata !11586, metadata !DIExpression()), !dbg !11587
  ret i32 %22, !dbg !11603
}

; Function Attrs: optsize
declare !dbg !11604 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11607 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11611, metadata !DIExpression()), !dbg !11631
  call void @llvm.dbg.value(metadata i32 %1, metadata !11612, metadata !DIExpression()), !dbg !11631
  call void @llvm.dbg.value(metadata i32 %2, metadata !11613, metadata !DIExpression()), !dbg !11631
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11632
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11632
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11614, metadata !DIExpression()), !dbg !11633
  %8 = icmp eq i32 %0, 0, !dbg !11634
  br i1 %8, label %9, label %23, !dbg !11635

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11636
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11636
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11624, metadata !DIExpression()), !dbg !11636
  store volatile i32 0, i32* %5, align 4, !dbg !11636
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11636
  %12 = or i32 %11, 1, !dbg !11636
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11636
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11636
  %14 = and i32 %13, 1, !dbg !11636
  store volatile i32 %14, i32* %5, align 4, !dbg !11636
  %15 = load volatile i32, i32* %5, align 4, !dbg !11636
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11637
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11638
  store i32 256, i32* %16, align 4, !dbg !11639
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11640
  store i32 2, i32* %17, align 4, !dbg !11641
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11642
  store i32 3, i32* %18, align 4, !dbg !11643
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11644
  store i32 0, i32* %19, align 4, !dbg !11645
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11646
  store i32 0, i32* %20, align 4, !dbg !11647
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11648
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11649
  %22 = and i32 %21, -123731969, !dbg !11649
  br label %38, !dbg !11650

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11651
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11651
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11628, metadata !DIExpression()), !dbg !11651
  store volatile i32 0, i32* %6, align 4, !dbg !11651
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11651
  %26 = or i32 %25, 4, !dbg !11651
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11651
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11651
  %28 = and i32 %27, 4, !dbg !11651
  store volatile i32 %28, i32* %6, align 4, !dbg !11651
  %29 = load volatile i32, i32* %6, align 4, !dbg !11651
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11652
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11653
  store i32 512, i32* %30, align 4, !dbg !11654
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11655
  store i32 2, i32* %31, align 4, !dbg !11656
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11657
  store i32 3, i32* %32, align 4, !dbg !11658
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11659
  store i32 0, i32* %33, align 4, !dbg !11660
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11661
  store i32 0, i32* %34, align 4, !dbg !11662
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11663
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11664
  %36 = and i32 %35, 134217727, !dbg !11664
  %37 = shl i32 %2, 3, !dbg !11664
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11665
  %42 = or i32 %41, %40, !dbg !11665
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11665
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11666
  ret void, !dbg !11666
}

; Function Attrs: optsize
declare !dbg !11667 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !11671 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11672
  ret void, !dbg !11673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !11674 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11675
  ret void, !dbg !11676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11677 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11678
  ret i32 %1, !dbg !11679
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !11680 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11681
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11682
  %3 = lshr i32 %2, 10, !dbg !11683
  %4 = and i32 %3, 7, !dbg !11683
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11684
  %6 = load i8, i8* %5, align 1, !dbg !11684
  %7 = zext i8 %6 to i32, !dbg !11684
  %8 = lshr i32 %1, %7, !dbg !11685
  ret i32 %8, !dbg !11686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !11687 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11688
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11689
  %3 = lshr i32 %2, 13, !dbg !11690
  %4 = and i32 %3, 7, !dbg !11690
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11691
  %6 = load i8, i8* %5, align 1, !dbg !11691
  %7 = zext i8 %6 to i32, !dbg !11691
  %8 = lshr i32 %1, %7, !dbg !11692
  ret i32 %8, !dbg !11693
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11694 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11698, metadata !DIExpression()), !dbg !11699
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11700
  store i32 15, i32* %2, align 4, !dbg !11701
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11702
  %4 = and i32 %3, 262144, !dbg !11704
  %5 = icmp eq i32 %4, 0, !dbg !11705
  br i1 %5, label %8, label %6, !dbg !11706

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11707
  store i32 327680, i32* %7, align 4, !dbg !11709
  br label %15, !dbg !11710

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11711
  %10 = and i32 %9, 65536, !dbg !11713
  %11 = icmp eq i32 %10, 0, !dbg !11714
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11715
  br i1 %11, label %14, label %13, !dbg !11716

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11717
  br label %15, !dbg !11719

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11720
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11722
  %17 = and i32 %16, 1, !dbg !11724
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11725
  store i32 %17, i32* %18, align 4, !dbg !11727
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11728
  %20 = lshr i32 %19, 3, !dbg !11729
  %21 = and i32 %20, 31, !dbg !11729
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11730
  store i32 %21, i32* %22, align 4, !dbg !11731
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11732
  %24 = and i32 %23, 4, !dbg !11734
  %25 = icmp eq i32 %24, 0, !dbg !11735
  br i1 %25, label %28, label %26, !dbg !11736

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11737
  store i32 5, i32* %27, align 4, !dbg !11739
  br label %35, !dbg !11740

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11741
  %30 = and i32 %29, 1, !dbg !11743
  %31 = icmp eq i32 %30, 0, !dbg !11744
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11745
  br i1 %31, label %34, label %33, !dbg !11746

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11747
  br label %35, !dbg !11749

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11750
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11752
  %37 = and i32 %36, 1, !dbg !11754
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11755
  store i32 %37, i32* %38, align 4, !dbg !11757
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11758
  %40 = and i32 %39, 16777216, !dbg !11760
  %41 = icmp eq i32 %40, 0, !dbg !11761
  %42 = select i1 %41, i32 1, i32 2, !dbg !11762
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11763
  store i32 %42, i32* %43, align 4, !dbg !11765
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11766
  %45 = and i32 %44, 4194304, !dbg !11767
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11768
  store i32 %45, i32* %46, align 4, !dbg !11769
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11770
  %48 = and i32 %47, 63, !dbg !11771
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11772
  store i32 %48, i32* %49, align 4, !dbg !11773
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11774
  %51 = lshr i32 %50, 6, !dbg !11775
  %52 = and i32 %51, 511, !dbg !11775
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11776
  store i32 %52, i32* %53, align 4, !dbg !11777
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11778
  %55 = shl i32 %54, 1, !dbg !11779
  %56 = and i32 %55, 393216, !dbg !11779
  %57 = add nuw nsw i32 %56, 131072, !dbg !11779
  %58 = lshr exact i32 %57, 16, !dbg !11780
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11781
  store i32 %58, i32* %59, align 4, !dbg !11782
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11783
  %61 = lshr i32 %60, 24, !dbg !11784
  %62 = and i32 %61, 15, !dbg !11784
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11785
  store i32 %62, i32* %63, align 4, !dbg !11786
  ret void, !dbg !11787
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !11788 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11792, metadata !DIExpression()), !dbg !11794
  call void @llvm.dbg.value(metadata i32* %1, metadata !11793, metadata !DIExpression()), !dbg !11794
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11795
  store i32 15, i32* %3, align 4, !dbg !11796
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11797
  %5 = and i32 %4, 3, !dbg !11798
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11799
  store i32 %5, i32* %6, align 4, !dbg !11800
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11801
  %8 = and i32 %7, 240, !dbg !11802
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11803
  store i32 %8, i32* %9, align 4, !dbg !11804
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11805
  %11 = and i32 %10, 7168, !dbg !11806
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11807
  store i32 %11, i32* %12, align 4, !dbg !11808
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11809
  %14 = lshr i32 %13, 3, !dbg !11810
  %15 = and i32 %14, 7168, !dbg !11810
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11811
  store i32 %15, i32* %16, align 4, !dbg !11812
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11813
  %18 = and i32 %17, 7, !dbg !11814
  store i32 %18, i32* %1, align 4, !dbg !11815
  ret void, !dbg !11816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11817 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11818
  %2 = and i32 %1, 128, !dbg !11818
  %3 = icmp eq i32 %2, 0, !dbg !11818
  br i1 %3, label %5, label %4, !dbg !11820

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11821
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11823
  br label %5, !dbg !11824

5:                                                ; preds = %4, %0
  ret void, !dbg !11825
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11826 {
  ret void, !dbg !11827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11831, metadata !DIExpression()), !dbg !11832
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11833
  ret void, !dbg !11834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11838, metadata !DIExpression()), !dbg !11840
  call void @llvm.dbg.value(metadata i32 1000, metadata !11839, metadata !DIExpression()), !dbg !11840
  %2 = udiv i32 %0, 1000, !dbg !11841
  %3 = add nsw i32 %2, -1, !dbg !11842
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11843
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11844
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11845
  ret void, !dbg !11846
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11847 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11849, metadata !DIExpression()), !dbg !11851
  %3 = bitcast i32* %2 to i8*, !dbg !11852
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11852
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11850, metadata !DIExpression()), !dbg !11853
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11854
  store volatile i32 %4, i32* %2, align 4, !dbg !11853
  %5 = load volatile i32, i32* %2, align 4, !dbg !11855
  %6 = icmp eq i32 %0, -1, !dbg !11856
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11849, metadata !DIExpression()), !dbg !11851
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11851
  call void @llvm.dbg.value(metadata i32 %8, metadata !11849, metadata !DIExpression()), !dbg !11851
  br label %9, !dbg !11858

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11849, metadata !DIExpression()), !dbg !11851
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11859
  call void @llvm.dbg.value(metadata i32 undef, metadata !11849, metadata !DIExpression()), !dbg !11851
  %12 = shl i32 %11, 15, !dbg !11851
  %13 = ashr i32 %12, 31, !dbg !11851
  %14 = add i32 %13, %10, !dbg !11851
  call void @llvm.dbg.value(metadata i32 %14, metadata !11849, metadata !DIExpression()), !dbg !11851
  %15 = icmp eq i32 %14, 0, !dbg !11858
  br i1 %15, label %16, label %9, !dbg !11858

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11862
  ret void, !dbg !11862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11865, metadata !DIExpression()), !dbg !11866
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11867
  ret void, !dbg !11868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11874, metadata !DIExpression()), !dbg !11879
  call void @llvm.dbg.value(metadata i32 0, metadata !11877, metadata !DIExpression()), !dbg !11879
  call void @llvm.dbg.value(metadata i32 0, metadata !11878, metadata !DIExpression()), !dbg !11879
  %2 = icmp eq i32 %0, 0, !dbg !11880
  br i1 %2, label %35, label %3, !dbg !11882

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11883
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11886
  %6 = icmp eq i32 %5, 32768, !dbg !11888
  br i1 %6, label %7, label %12, !dbg !11889

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !11890
  br i1 %8, label %12, label %9, !dbg !11893

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !11894
  %11 = zext i1 %10 to i32, !dbg !11897
  call void @llvm.dbg.value(metadata i32 %11, metadata !11877, metadata !DIExpression()), !dbg !11879
  br label %12, !dbg !11897

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !11879
  call void @llvm.dbg.value(metadata i32 %13, metadata !11877, metadata !DIExpression()), !dbg !11879
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11898
  %15 = icmp eq i32 %14, 16384, !dbg !11900
  br i1 %15, label %16, label %24, !dbg !11901

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !11902
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !11905
  br i1 %19, label %24, label %20, !dbg !11905

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !11906
  %22 = and i1 %21, %18, !dbg !11909
  %23 = select i1 %22, i32 1, i32 %13, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %23, metadata !11877, metadata !DIExpression()), !dbg !11879
  br label %24, !dbg !11909

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !11910
  call void @llvm.dbg.value(metadata i32 %25, metadata !11877, metadata !DIExpression()), !dbg !11879
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #24, !dbg !11911
  call void @llvm.dbg.value(metadata i32 2, metadata !11875, metadata !DIExpression()), !dbg !11879
  br label %26, !dbg !11912

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !11910
  call void @llvm.dbg.value(metadata i32 %27, metadata !11875, metadata !DIExpression()), !dbg !11879
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11913
  call void @llvm.dbg.value(metadata i32 %28, metadata !11876, metadata !DIExpression()), !dbg !11879
  %29 = add nsw i32 %27, -1, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %29, metadata !11875, metadata !DIExpression()), !dbg !11879
  %30 = icmp ne i32 %28, %25, !dbg !11916
  %31 = icmp ne i32 %29, 0, !dbg !11917
  %32 = select i1 %30, i1 %31, i1 false, !dbg !11917
  br i1 %32, label %26, label %33, !dbg !11918, !llvm.loop !11919

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !11921
  call void @llvm.dbg.value(metadata i32 %36, metadata !11878, metadata !DIExpression()), !dbg !11879
  ret i32 %36, !dbg !11922
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11923 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11925
  %2 = and i32 %1, 49152, !dbg !11925
  ret i32 %2, !dbg !11926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11929, metadata !DIExpression()), !dbg !11930
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11931
  %3 = and i32 %2, -8, !dbg !11931
  %4 = or i32 %3, %0, !dbg !11931
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11931
  ret void, !dbg !11932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11933 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11934
  %2 = and i32 %1, 7, !dbg !11934
  ret i32 %2, !dbg !11935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11936 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11954, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11955, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata i32 0, metadata !11956, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata i32 0, metadata !11957, metadata !DIExpression()), !dbg !11958
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11959
  %4 = icmp eq i32 %3, 0, !dbg !11961
  br i1 %4, label %5, label %21, !dbg !11962

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %6, metadata !11957, metadata !DIExpression()), !dbg !11958
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.173() #24, !dbg !11965
  %8 = icmp eq i32 %7, 1, !dbg !11967
  br i1 %8, label %13, label %9, !dbg !11968

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.174() #24, !dbg !11969
  br label %10, !dbg !11971

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.173() #24, !dbg !11972
  %12 = icmp eq i32 %11, 1, !dbg !11973
  br i1 %12, label %13, label %10, !dbg !11971, !llvm.loop !11974

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11976
  %15 = load i32, i32* %14, align 4, !dbg !11976
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11977
  %17 = load i32, i32* %16, align 4, !dbg !11977
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11978
  %19 = load i32, i32* %18, align 4, !dbg !11978
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.175(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !11979
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11980
  call void @llvm.dbg.value(metadata i32 %20, metadata !11956, metadata !DIExpression()), !dbg !11958
  br label %21, !dbg !11981

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11982
  call void @llvm.dbg.value(metadata i32 %22, metadata !11956, metadata !DIExpression()), !dbg !11958
  ret i32 %22, !dbg !11983
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !11984 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11988, metadata !DIExpression()), !dbg !11989
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.177() #24, !dbg !11990
  %2 = icmp ne i32 %1, 0, !dbg !11992
  call void @llvm.dbg.value(metadata i1 %2, metadata !11988, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11989
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !11993
  %4 = icmp ne i32 %3, 0, !dbg !11995
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11996
  %6 = zext i1 %5 to i32, !dbg !11996
  call void @llvm.dbg.value(metadata i32 %6, metadata !11988, metadata !DIExpression()), !dbg !11989
  ret i32 %6, !dbg !11997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !11998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12002, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12003, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 0, metadata !12004, metadata !DIExpression()), !dbg !12005
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12006
  %4 = load i32, i32* %3, align 4, !dbg !12006
  %5 = and i32 %4, 63, !dbg !12007
  %6 = udiv i32 %0, %5, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %6, metadata !12004, metadata !DIExpression()), !dbg !12005
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12009
  %8 = load i32, i32* %7, align 4, !dbg !12009
  %9 = and i32 %8, 511, !dbg !12010
  %10 = mul i32 %9, %6, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %10, metadata !12004, metadata !DIExpression()), !dbg !12005
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12012
  %12 = load i32, i32* %11, align 4, !dbg !12012
  %13 = lshr i32 %12, 15, !dbg !12013
  %14 = and i32 %13, 131070, !dbg !12013
  %15 = add nuw nsw i32 %14, 2, !dbg !12013
  %16 = udiv i32 %10, %15, !dbg !12014
  call void @llvm.dbg.value(metadata i32 %16, metadata !12004, metadata !DIExpression()), !dbg !12005
  ret i32 %16, !dbg !12015
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.173() unnamed_addr #15 !dbg !12016 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12017
  %2 = lshr i32 %1, 1, !dbg !12018
  %3 = and i32 %2, 1, !dbg !12018
  ret i32 %3, !dbg !12019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.174() unnamed_addr #14 !dbg !12020 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12021
  %2 = or i32 %1, 1, !dbg !12021
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12021
  ret void, !dbg !12022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.175(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12025, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %1, metadata !12026, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %2, metadata !12027, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %3, metadata !12028, metadata !DIExpression()), !dbg !12029
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12030
  %6 = and i32 %5, -4227072, !dbg !12030
  %7 = or i32 %1, %0, !dbg !12030
  %8 = shl i32 %2, 6, !dbg !12030
  %9 = or i32 %7, %8, !dbg !12030
  %10 = or i32 %9, %6, !dbg !12030
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12030
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12031
  %12 = and i32 %11, -196609, !dbg !12031
  %13 = or i32 %12, %3, !dbg !12031
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12031
  ret void, !dbg !12032
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12037, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12038, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata i32 0, metadata !12039, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata i32 0, metadata !12040, metadata !DIExpression()), !dbg !12041
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12042
  %4 = load i32, i32* %3, align 4, !dbg !12042
  %5 = lshr i32 %4, 4, !dbg !12042
  %6 = and i32 %5, 15, !dbg !12042
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12042
  %8 = load i8, i8* %7, align 1, !dbg !12042
  %9 = zext i8 %8 to i32, !dbg !12042
  %10 = lshr i32 %0, %9, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %10, metadata !12040, metadata !DIExpression()), !dbg !12041
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12043
  %12 = icmp ult i32 %11, %10, !dbg !12045
  br i1 %12, label %13, label %16, !dbg !12046

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %14, metadata !12039, metadata !DIExpression()), !dbg !12041
  %15 = icmp eq i32 %14, 0, !dbg !12049
  br i1 %15, label %16, label %30, !dbg !12051

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.176() #24, !dbg !12052
  br label %17, !dbg !12054

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.177() #24, !dbg !12055
  %19 = icmp eq i32 %18, 1, !dbg !12056
  br i1 %19, label %20, label %17, !dbg !12054, !llvm.loop !12057

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12059
  tail call fastcc void @LL_RCC_SetAHBPrescaler.178(i32 noundef %21) #24, !dbg !12060
  tail call fastcc void @LL_RCC_SetSysClkSource.179() #24, !dbg !12061
  br label %22, !dbg !12062

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.180() #24, !dbg !12063
  %24 = icmp eq i32 %23, 8, !dbg !12064
  br i1 %24, label %25, label %22, !dbg !12062, !llvm.loop !12065

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12067
  %27 = load i32, i32* %26, align 4, !dbg !12067
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.181(i32 noundef %27) #24, !dbg !12068
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12069
  %29 = load i32, i32* %28, align 4, !dbg !12069
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.182(i32 noundef %29) #24, !dbg !12070
  br label %30, !dbg !12071

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12072
  %33 = icmp ugt i32 %32, %10, !dbg !12074
  br i1 %33, label %34, label %36, !dbg !12075

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %35, metadata !12039, metadata !DIExpression()), !dbg !12041
  br label %36, !dbg !12078

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12041
  call void @llvm.dbg.value(metadata i32 %37, metadata !12039, metadata !DIExpression()), !dbg !12041
  %38 = icmp eq i32 %37, 0, !dbg !12079
  br i1 %38, label %39, label %40, !dbg !12081

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12082
  br label %40, !dbg !12084

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.176() unnamed_addr #14 !dbg !12086 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12087
  %2 = or i32 %1, 16777216, !dbg !12087
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12087
  ret void, !dbg !12088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.177() unnamed_addr #15 !dbg !12089 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12090
  %2 = lshr i32 %1, 25, !dbg !12091
  %3 = and i32 %2, 1, !dbg !12091
  ret i32 %3, !dbg !12092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.178(i32 noundef %0) unnamed_addr #14 !dbg !12093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12095, metadata !DIExpression()), !dbg !12096
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12097
  %3 = and i32 %2, -241, !dbg !12097
  %4 = or i32 %3, %0, !dbg !12097
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12097
  ret void, !dbg !12098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.179() unnamed_addr #14 !dbg !12099 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12101, metadata !DIExpression()), !dbg !12102
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12103
  %2 = and i32 %1, -4, !dbg !12103
  %3 = or i32 %2, 2, !dbg !12103
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12103
  ret void, !dbg !12104
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.180() unnamed_addr #15 !dbg !12105 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12106
  %2 = and i32 %1, 12, !dbg !12106
  ret i32 %2, !dbg !12107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.181(i32 noundef %0) unnamed_addr #14 !dbg !12108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12110, metadata !DIExpression()), !dbg !12111
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12112
  %3 = and i32 %2, -7169, !dbg !12112
  %4 = or i32 %3, %0, !dbg !12112
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12112
  ret void, !dbg !12113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.182(i32 noundef %0) unnamed_addr #14 !dbg !12114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12116, metadata !DIExpression()), !dbg !12117
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12118
  %3 = and i32 %2, -57345, !dbg !12118
  %4 = or i32 %3, %0, !dbg !12118
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12118
  ret void, !dbg !12119
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12120 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12121
  %2 = lshr i32 %1, 27, !dbg !12122
  %3 = and i32 %2, 1, !dbg !12122
  ret i32 %3, !dbg !12123
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12128, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 %1, metadata !12129, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12130, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12131, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 0, metadata !12132, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 0, metadata !12133, metadata !DIExpression()), !dbg !12134
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12135
  %6 = icmp eq i32 %5, 0, !dbg !12137
  br i1 %6, label %7, label %27, !dbg !12138

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %8, metadata !12133, metadata !DIExpression()), !dbg !12134
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.183() #24, !dbg !12141
  %10 = icmp eq i32 %9, 1, !dbg !12143
  br i1 %10, label %19, label %11, !dbg !12144

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12145
  br i1 %12, label %13, label %14, !dbg !12148

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12149
  br label %15, !dbg !12151

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.184() #24, !dbg !12152
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.185() #24, !dbg !12154
  br label %16, !dbg !12155

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.183() #24, !dbg !12156
  %18 = icmp eq i32 %17, 1, !dbg !12157
  br i1 %18, label %19, label %16, !dbg !12155, !llvm.loop !12158

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12160
  %21 = load i32, i32* %20, align 4, !dbg !12160
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12161
  %23 = load i32, i32* %22, align 4, !dbg !12161
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12162
  %25 = load i32, i32* %24, align 4, !dbg !12162
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.175(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12163
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12164
  call void @llvm.dbg.value(metadata i32 %26, metadata !12132, metadata !DIExpression()), !dbg !12134
  br label %27, !dbg !12165

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12166
  call void @llvm.dbg.value(metadata i32 %28, metadata !12132, metadata !DIExpression()), !dbg !12134
  ret i32 %28, !dbg !12167
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.183() unnamed_addr #15 !dbg !12168 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12169
  %2 = lshr i32 %1, 17, !dbg !12170
  %3 = and i32 %2, 1, !dbg !12170
  ret i32 %3, !dbg !12171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12172 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  %2 = or i32 %1, 262144, !dbg !12173
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  ret void, !dbg !12174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.184() unnamed_addr #14 !dbg !12175 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  %2 = and i32 %1, -262145, !dbg !12176
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  ret void, !dbg !12177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.185() unnamed_addr #14 !dbg !12178 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12179
  %2 = or i32 %1, 65536, !dbg !12179
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12179
  ret void, !dbg !12180
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12181 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12184, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 undef, metadata !12184, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 undef, metadata !12184, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12200
  ret void, !dbg !12201
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12202 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12206, metadata !DIExpression()), !dbg !12208
  %2 = icmp eq i8* %0, null, !dbg !12209
  br i1 %2, label %29, label %3, !dbg !12211

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12212
  %5 = icmp eq i8 %4, 0, !dbg !12213
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12214
  br i1 %6, label %29, label %8, !dbg !12214

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12207, metadata !DIExpression()), !dbg !12208
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12215

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12207, metadata !DIExpression()), !dbg !12208
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12217
  br i1 %10, label %11, label %15, !dbg !12222

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12223
  %13 = load i8*, i8** %12, align 4, !dbg !12223
  %14 = icmp eq i8* %13, %0, !dbg !12224
  br i1 %14, label %29, label %15, !dbg !12225

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12226
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12207, metadata !DIExpression()), !dbg !12208
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12227
  br i1 %17, label %7, label %8, !dbg !12228, !llvm.loop !12229

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12207, metadata !DIExpression()), !dbg !12208
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12231
  br i1 %20, label %21, label %26, !dbg !12235

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12236
  %23 = load i8*, i8** %22, align 4, !dbg !12236
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12237
  %25 = icmp eq i32 %24, 0, !dbg !12238
  br i1 %25, label %29, label %26, !dbg !12239

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12240
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12207, metadata !DIExpression()), !dbg !12208
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12241
  br i1 %28, label %29, label %18, !dbg !12215, !llvm.loop !12242

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12208
  ret %struct.device* %30, !dbg !12244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12245 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12249, metadata !DIExpression()), !dbg !12250
  %2 = icmp eq %struct.device* %0, null, !dbg !12251
  br i1 %2, label %14, label %3, !dbg !12253

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12254
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12254
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12255
  %7 = load i8, i8* %6, align 1, !dbg !12255
  %8 = and i8 %7, 1, !dbg !12255
  %9 = icmp eq i8 %8, 0, !dbg !12255
  br i1 %9, label %14, label %10, !dbg !12256

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12257
  %12 = load i8, i8* %11, align 1, !dbg !12257
  %13 = icmp eq i8 %12, 0, !dbg !12258
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12250
  ret i1 %15, !dbg !12259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12260 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12265, metadata !DIExpression()), !dbg !12266
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12267
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12269 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12277, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12278, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.value(metadata i8* %2, metadata !12279, metadata !DIExpression()), !dbg !12282
  %5 = bitcast i32* %4 to i8*, !dbg !12283
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12283
  call void @llvm.dbg.value(metadata i32 0, metadata !12280, metadata !DIExpression()), !dbg !12282
  store i32 0, i32* %4, align 4, !dbg !12284
  call void @llvm.dbg.value(metadata i32* %4, metadata !12280, metadata !DIExpression(DW_OP_deref)), !dbg !12282
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12285
  call void @llvm.dbg.value(metadata i16* %6, metadata !12281, metadata !DIExpression()), !dbg !12282
  %7 = load i32, i32* %4, align 4, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %7, metadata !12280, metadata !DIExpression()), !dbg !12282
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12287
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12288
  ret i32 %8, !dbg !12289
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12290 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12294, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.value(metadata i32* %1, metadata !12295, metadata !DIExpression()), !dbg !12300
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12301
  %4 = load i16*, i16** %3, align 4, !dbg !12301
  call void @llvm.dbg.value(metadata i16* %4, metadata !12296, metadata !DIExpression()), !dbg !12300
  %5 = icmp eq i16* %4, null, !dbg !12302
  br i1 %5, label %14, label %6, !dbg !12303

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12304
  call void @llvm.dbg.value(metadata i32 %7, metadata !12297, metadata !DIExpression()), !dbg !12304
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12305
  %9 = load i16, i16* %8, align 2, !dbg !12305
  %10 = add i16 %9, -32767, !dbg !12306
  %11 = icmp ult i16 %10, 2, !dbg !12306
  %12 = add i32 %7, 1, !dbg !12307
  call void @llvm.dbg.value(metadata i32 %12, metadata !12297, metadata !DIExpression()), !dbg !12304
  br i1 %11, label %13, label %6, !dbg !12306, !llvm.loop !12309

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12312
  br label %14, !dbg !12313

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12315 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12319, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i32 %1, metadata !12320, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12321, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i8* %3, metadata !12322, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i32 0, metadata !12323, metadata !DIExpression()), !dbg !12331
  %5 = icmp eq i32 %1, 0, !dbg !12332
  br i1 %5, label %16, label %8, !dbg !12333

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12323, metadata !DIExpression()), !dbg !12331
  %7 = icmp eq i32 %15, %1, !dbg !12332
  br i1 %7, label %16, label %8, !dbg !12333, !llvm.loop !12334

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12323, metadata !DIExpression()), !dbg !12331
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12336
  %11 = load i16, i16* %10, align 2, !dbg !12336
  call void @llvm.dbg.value(metadata i16 %11, metadata !12325, metadata !DIExpression()), !dbg !12337
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12338
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12328, metadata !DIExpression()), !dbg !12337
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12339
  call void @llvm.dbg.value(metadata i32 %13, metadata !12329, metadata !DIExpression()), !dbg !12337
  %14 = icmp slt i32 %13, 0, !dbg !12340
  %15 = add nuw i32 %9, 1, !dbg !12342
  call void @llvm.dbg.value(metadata i32 %15, metadata !12323, metadata !DIExpression()), !dbg !12331
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !12344 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12348, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12349, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12350, metadata !DIExpression()), !dbg !12351
  %2 = sext i16 %0 to i32, !dbg !12352
  %3 = icmp slt i16 %0, 1, !dbg !12354
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12355
  %6 = add nsw i32 %2, -1, !dbg !12355
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12355
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12355
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12349, metadata !DIExpression()), !dbg !12351
  ret %struct.device* %8, !dbg !12356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12357 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12359, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12360, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i8* %2, metadata !12361, metadata !DIExpression()), !dbg !12364
  %5 = bitcast i32* %4 to i8*, !dbg !12365
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12365
  call void @llvm.dbg.value(metadata i32 0, metadata !12362, metadata !DIExpression()), !dbg !12364
  store i32 0, i32* %4, align 4, !dbg !12366
  call void @llvm.dbg.value(metadata i32* %4, metadata !12362, metadata !DIExpression(DW_OP_deref)), !dbg !12364
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12367
  call void @llvm.dbg.value(metadata i16* %6, metadata !12363, metadata !DIExpression()), !dbg !12364
  %7 = load i32, i32* %4, align 4, !dbg !12368
  call void @llvm.dbg.value(metadata i32 %7, metadata !12362, metadata !DIExpression()), !dbg !12364
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12369
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12370
  ret i32 %8, !dbg !12371
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12372 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12374, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32* %1, metadata !12375, metadata !DIExpression()), !dbg !12379
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12380
  %4 = load i16*, i16** %3, align 4, !dbg !12380
  call void @llvm.dbg.value(metadata i16* %4, metadata !12376, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12377, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12378, metadata !DIExpression()), !dbg !12379
  %5 = icmp eq i16* %4, null, !dbg !12381
  br i1 %5, label %22, label %6, !dbg !12383

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12377, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i16* %8, metadata !12376, metadata !DIExpression()), !dbg !12379
  %9 = load i16, i16* %8, align 2, !dbg !12384
  %10 = icmp eq i16 %9, -32768, !dbg !12388
  call void @llvm.dbg.value(metadata i32 undef, metadata !12377, metadata !DIExpression()), !dbg !12379
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12389
  call void @llvm.dbg.value(metadata i16* %11, metadata !12376, metadata !DIExpression()), !dbg !12379
  %12 = zext i1 %10 to i32, !dbg !12390
  %13 = add i32 %7, %12, !dbg !12390
  call void @llvm.dbg.value(metadata i32 %13, metadata !12377, metadata !DIExpression()), !dbg !12379
  %14 = icmp eq i32 %13, 2, !dbg !12391
  br i1 %14, label %15, label %6, !dbg !12392

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12379
  call void @llvm.dbg.value(metadata i32 %16, metadata !12378, metadata !DIExpression()), !dbg !12379
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12393
  %18 = load i16, i16* %17, align 2, !dbg !12393
  %19 = icmp eq i16 %18, 32767, !dbg !12394
  %20 = add i32 %16, 1, !dbg !12395
  call void @llvm.dbg.value(metadata i32 %20, metadata !12378, metadata !DIExpression()), !dbg !12379
  br i1 %19, label %21, label %15, !dbg !12397, !llvm.loop !12398

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12400
  br label %22, !dbg !12401

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12402
  call void @llvm.dbg.value(metadata i16* %23, metadata !12376, metadata !DIExpression()), !dbg !12379
  ret i16* %23, !dbg !12403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12404 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12407
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12408
  ret i32* %2, !dbg !12409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12410 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12561, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12562, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12563, metadata !DIExpression()), !dbg !12564
  ret void, !dbg !12565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12570, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 %1, metadata !12571, metadata !DIExpression()), !dbg !12572
  ret void, !dbg !12573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12574 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12578, metadata !DIExpression()), !dbg !12580
  call void @llvm.dbg.value(metadata i32 %1, metadata !12579, metadata !DIExpression()), !dbg !12580
  ret void, !dbg !12581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12586, metadata !DIExpression()), !dbg !12588
  call void @llvm.dbg.value(metadata i8* %1, metadata !12587, metadata !DIExpression()), !dbg !12588
  ret i32 -134, !dbg !12589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12594, metadata !DIExpression()), !dbg !12596
  call void @llvm.dbg.value(metadata i8* %1, metadata !12595, metadata !DIExpression()), !dbg !12596
  ret i32 -134, !dbg !12597
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12601, metadata !DIExpression()), !dbg !12602
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12603, !srcloc !12609
  call void @llvm.dbg.value(metadata i32 undef, metadata !12606, metadata !DIExpression()) #23, !dbg !12610
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()) #23, !dbg !12610
  br label %3, !dbg !12611

3:                                                ; preds = %3, %1
  br label %3, !dbg !12612, !llvm.loop !12615
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12622, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12623, metadata !DIExpression()), !dbg !12624
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.190, i32 0, i32 0), i32 noundef 69) #25, !dbg !12625
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12630
  unreachable, !dbg !12630
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12633, metadata !DIExpression()), !dbg !12634
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12635
  unreachable, !dbg !12635
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12638, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12639, metadata !DIExpression()), !dbg !12642
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12643, !srcloc !12609
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12643
  call void @llvm.dbg.value(metadata i32 %4, metadata !12606, metadata !DIExpression()) #23, !dbg !12645
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()) #23, !dbg !12645
  call void @llvm.dbg.value(metadata i32 %4, metadata !12640, metadata !DIExpression()), !dbg !12642
  %5 = tail call fastcc %struct.k_thread* @k_current_get.193() #26, !dbg !12646
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12641, metadata !DIExpression()), !dbg !12642
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !12647
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.194, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !12647
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12652
  br i1 %7, label %20, label %8, !dbg !12654

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12655, metadata !DIExpression()), !dbg !12660
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12662
  %10 = load i32, i32* %9, align 4, !dbg !12662
  %11 = and i32 %10, 511, !dbg !12663
  %12 = icmp eq i32 %11, 0, !dbg !12664
  br i1 %12, label %14, label %13, !dbg !12665

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 69) #25, !dbg !12666
  br label %14, !dbg !12672

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12673
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.196, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !12673
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !12678
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12655, metadata !DIExpression()), !dbg !12679
  %16 = load i32, i32* %9, align 4, !dbg !12684
  %17 = and i32 %16, 511, !dbg !12685
  %18 = icmp eq i32 %17, 0, !dbg !12686
  br i1 %18, label %22, label %19, !dbg !12687

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12688, metadata !DIExpression()) #23, !dbg !12691
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12694, !srcloc !12695
  br label %25, !dbg !12696

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12673
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.196, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !12673
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !12678
  br label %22, !dbg !12697

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %4, metadata !12688, metadata !DIExpression()) #23, !dbg !12701
  call void @llvm.dbg.value(metadata i32 %4, metadata !12688, metadata !DIExpression()) #23, !dbg !12704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12642
  br i1 %23, label %25, label %24, !dbg !12706

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.197(%struct.k_thread* noundef %5) #24, !dbg !12707
  br label %25, !dbg !12710

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12710
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.193() unnamed_addr #11 !dbg !12711 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.205() #26, !dbg !12715
  ret %struct.k_thread* %1, !dbg !12716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !12717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12721, metadata !DIExpression()), !dbg !12722
  %2 = icmp ult i32 %0, 5, !dbg !12723
  br i1 %2, label %3, label %6, !dbg !12723

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12723
  %5 = load i8*, i8** %4, align 4, !dbg !12723
  br label %6, !dbg !12723

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.199, i32 0, i32 0), %1 ], !dbg !12724
  ret i8* %7, !dbg !12726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12727 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12731, metadata !DIExpression()), !dbg !12733
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12734
  br i1 %2, label %9, label %3, !dbg !12735

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !12736
  call void @llvm.dbg.value(metadata i8* %4, metadata !12732, metadata !DIExpression()), !dbg !12733
  %5 = icmp eq i8* %4, null, !dbg !12737
  br i1 %5, label %9, label %6, !dbg !12739

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12740
  %8 = icmp eq i8 %7, 0, !dbg !12741
  br i1 %8, label %9, label %10, !dbg !12742

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.198, i32 0, i32 0), metadata !12732, metadata !DIExpression()), !dbg !12733
  br label %10, !dbg !12743

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.198, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12733
  call void @llvm.dbg.value(metadata i8* %11, metadata !12732, metadata !DIExpression()), !dbg !12733
  ret i8* %11, !dbg !12745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.197(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12746 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12750, metadata !DIExpression()), !dbg !12751
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12752, !srcloc !12754
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12755
  ret void, !dbg !12756
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.205() unnamed_addr #11 !dbg !12757 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12758, !srcloc !12760
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12761
  ret %struct.k_thread* %1, !dbg !12762
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12763 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12767, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata i32 %1, metadata !12768, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata i32 %2, metadata !12769, metadata !DIExpression()), !dbg !12770
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12771
  ret void, !dbg !12772
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12773 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12777, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.value(metadata i8* %1, metadata !12778, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.value(metadata i32 %2, metadata !12779, metadata !DIExpression()), !dbg !12780
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12781
  ret void, !dbg !12782
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12783 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12784
  ret void, !dbg !12785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12788, metadata !DIExpression()), !dbg !12789
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12790
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12791
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12792
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12793
  %4 = trunc i32 %0 to i8, !dbg !12794
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12795
  store i8 %4, i8* %5, align 4, !dbg !12796
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12797
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12798
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12799
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12800
  store i8* %8, i8** %9, align 4, !dbg !12801
  ret void, !dbg !12802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12805, metadata !DIExpression()), !dbg !12811
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12812
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12806, metadata !DIExpression()), !dbg !12811
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12813
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12807, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.212, i32 0, i32 0), metadata !12810, metadata !DIExpression()), !dbg !12811
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12814
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12815
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.212, i32 0, i32 0)) #25, !dbg !12816
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12817
  ret void, !dbg !12818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12819 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12823, metadata !DIExpression()), !dbg !12824
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12825
  ret i8* %2, !dbg !12826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12827 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12832, metadata !DIExpression()), !dbg !12833
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12834
  %3 = load i8, i8* %2, align 1, !dbg !12835
  %4 = and i8 %3, -5, !dbg !12835
  store i8 %4, i8* %2, align 1, !dbg !12835
  ret void, !dbg !12836
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !12837 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12840
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12841
  %3 = ptrtoint i8* %2 to i32, !dbg !12850
  %4 = add i32 %3, 2048, !dbg !12851
  call void @llvm.dbg.value(metadata i32 %4, metadata !12845, metadata !DIExpression()) #23, !dbg !12852
  call void @llvm.dbg.value(metadata i32 %4, metadata !12853, metadata !DIExpression()) #23, !dbg !12856
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12858, !srcloc !12859
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12860
  %6 = or i32 %5, 512, !dbg !12860
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12860
  tail call fastcc void @__NVIC_SetPriority.215(i32 noundef -2, i32 noundef 255) #25, !dbg !12861
  tail call fastcc void @__NVIC_SetPriority.215(i32 noundef -5, i32 noundef 0) #25, !dbg !12864
  tail call fastcc void @__NVIC_SetPriority.215(i32 noundef -12, i32 noundef 0) #25, !dbg !12865
  tail call fastcc void @__NVIC_SetPriority.215(i32 noundef -11, i32 noundef 0) #25, !dbg !12866
  tail call fastcc void @__NVIC_SetPriority.215(i32 noundef -10, i32 noundef 0) #25, !dbg !12867
  tail call fastcc void @__NVIC_SetPriority.215(i32 noundef -4, i32 noundef 0) #25, !dbg !12868
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12869
  %8 = or i32 %7, 458752, !dbg !12869
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12869
  tail call void @z_arm_fault_init() #25, !dbg !12870
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12871
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12872
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12875
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12876
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12877
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12878
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12878
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12839, metadata !DIExpression()), !dbg !12879
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12880
  call void @z_device_state_init() #25, !dbg !12881
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12882
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12883
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12884
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12885
  unreachable, !dbg !12885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2086, metadata !DIExpression()), !dbg !12886
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12887
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12887
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2087, metadata !DIExpression()), !dbg !12886
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2087, metadata !DIExpression()), !dbg !12886
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12888
  br i1 %7, label %8, label %35, !dbg !12889

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2087, metadata !DIExpression()), !dbg !12886
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12890
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12890
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2097, metadata !DIExpression()), !dbg !12891
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12892
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12892
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12893
  call void @llvm.dbg.value(metadata i32 %14, metadata !2101, metadata !DIExpression()), !dbg !12891
  %15 = icmp eq %struct.device* %11, null, !dbg !12894
  br i1 %15, label %32, label %16, !dbg !12896

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12897
  br i1 %17, label %26, label %18, !dbg !12900

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12901
  call void @llvm.dbg.value(metadata i32 %19, metadata !2101, metadata !DIExpression()), !dbg !12891
  %20 = icmp ult i32 %19, 255, !dbg !12903
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12903
  call void @llvm.dbg.value(metadata i32 %21, metadata !2101, metadata !DIExpression()), !dbg !12891
  %22 = trunc i32 %21 to i8, !dbg !12904
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12905
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12905
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12906
  store i8 %22, i8* %25, align 1, !dbg !12907
  br label %26, !dbg !12908

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12909
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12909
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12910
  %30 = load i8, i8* %29, align 1, !dbg !12911
  %31 = or i8 %30, 1, !dbg !12911
  store i8 %31, i8* %29, align 1, !dbg !12911
  br label %32, !dbg !12912

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12913
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2087, metadata !DIExpression()), !dbg !12886
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12888
  br i1 %34, label %8, label %35, !dbg !12889, !llvm.loop !12914

35:                                               ; preds = %32, %1
  ret void, !dbg !12916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.215(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12919, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata i32 %1, metadata !12920, metadata !DIExpression()), !dbg !12921
  %3 = trunc i32 %1 to i8, !dbg !12922
  %4 = shl i8 %3, 4, !dbg !12922
  %5 = and i32 %0, 15, !dbg !12925
  %6 = add nsw i32 %5, -4, !dbg !12926
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12927
  store volatile i8 %4, i8* %7, align 1, !dbg !12928
  ret void, !dbg !12929
}

; Function Attrs: optsize
declare !dbg !12930 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12931 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12934, metadata !DIExpression()), !dbg !12935
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12936
  store i8 1, i8* %2, align 1, !dbg !12937
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12938
  store i8 1, i8* %3, align 4, !dbg !12939
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12940
  store i32 0, i32* %4, align 4, !dbg !12941
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12942
  store i32 0, i32* %5, align 4, !dbg !12943
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12944
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12945
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12946
  ret void, !dbg !12947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12948 {
  tail call void @z_sched_init() #25, !dbg !12953
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12954
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.216, i32 0, i32 0)) #25, !dbg !12955
  call void @llvm.dbg.value(metadata i8* %1, metadata !12952, metadata !DIExpression()), !dbg !12956
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12957
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12958
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12959
  ret i8* %1, !dbg !12960
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !12961 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12965, metadata !DIExpression()), !dbg !12966
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12967
  unreachable, !dbg !12968
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12971, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.value(metadata i8* %1, metadata !12972, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.value(metadata i8* %2, metadata !12973, metadata !DIExpression()), !dbg !12974
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12975
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12976
  tail call void @boot_banner() #25, !dbg !12977
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12978
  tail call void @z_init_static_threads() #25, !dbg !12979
  tail call void @main() #25, !dbg !12980
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12981
  %5 = and i8 %4, -2, !dbg !12981
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12981
  ret void, !dbg !12982
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12983 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12993, metadata !DIExpression()), !dbg !12995
  call void @llvm.dbg.value(metadata i8* %1, metadata !12994, metadata !DIExpression()), !dbg !12995
  ret void, !dbg !12996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12997 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12999, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i8* %1, metadata !13000, metadata !DIExpression()), !dbg !13001
  ret void, !dbg !13002
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13003 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13004, !srcloc !13011
  call void @llvm.dbg.value(metadata i32 %1, metadata !13007, metadata !DIExpression()) #23, !dbg !13012
  %2 = icmp ne i32 %1, 0, !dbg !13013
  ret i1 %2, !dbg !13014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13015 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13016
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13017
  %3 = load i8, i8* %2, align 4, !dbg !13018
  %4 = or i8 %3, 1, !dbg !13018
  store i8 %4, i8* %2, align 4, !dbg !13018
  ret void, !dbg !13019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13020 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13021
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13022
  %3 = load i8, i8* %2, align 4, !dbg !13023
  %4 = and i8 %3, -2, !dbg !13023
  store i8 %4, i8* %2, align 4, !dbg !13023
  ret void, !dbg !13024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13025 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13026
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13027
  %3 = load i8, i8* %2, align 4, !dbg !13027
  %4 = and i8 %3, 1, !dbg !13028
  %5 = icmp ne i8 %4, 0, !dbg !13029
  ret i1 %5, !dbg !13030
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13031 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13035, metadata !DIExpression()), !dbg !13037
  call void @llvm.dbg.value(metadata i8* %1, metadata !13036, metadata !DIExpression()), !dbg !13037
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13038
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13040
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13035, metadata !DIExpression()), !dbg !13037
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13041
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13042
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13043
  store i8 0, i8* %8, align 1, !dbg !13044
  ret i32 0, !dbg !13045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13046 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13050, metadata !DIExpression()), !dbg !13051
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13052
  ret i8* %2, !dbg !13053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13054 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13058, metadata !DIExpression()), !dbg !13061
  call void @llvm.dbg.value(metadata i8* %1, metadata !13059, metadata !DIExpression()), !dbg !13061
  call void @llvm.dbg.value(metadata i32 %2, metadata !13060, metadata !DIExpression()), !dbg !13061
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13062
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13063
  ret i32 0, !dbg !13064
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2110 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2227, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i8* %1, metadata !2228, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 %2, metadata !2229, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 0, metadata !2230, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i8 undef, metadata !2232, metadata !DIExpression()), !dbg !13065
  %4 = icmp eq i8* %1, null, !dbg !13066
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13068
  br i1 %6, label %46, label %7, !dbg !13068

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13069
  %9 = load i8, i8* %8, align 1, !dbg !13069
  call void @llvm.dbg.value(metadata i8 %9, metadata !2232, metadata !DIExpression()), !dbg !13065
  %10 = add i32 %2, -1, !dbg !13070
  call void @llvm.dbg.value(metadata i32 %10, metadata !2229, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i8 0, metadata !2233, metadata !DIExpression()), !dbg !13071
  call void @llvm.dbg.value(metadata i8 %9, metadata !2232, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 0, metadata !2230, metadata !DIExpression()), !dbg !13065
  %11 = icmp eq i8 %9, 0, !dbg !13072
  br i1 %11, label %12, label %15, !dbg !13074

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13075
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13076
  store i8 0, i8* %14, align 1, !dbg !13077
  br label %46, !dbg !13078

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2233, metadata !DIExpression()), !dbg !13071
  call void @llvm.dbg.value(metadata i8 %17, metadata !2232, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 %18, metadata !2230, metadata !DIExpression()), !dbg !13065
  %19 = zext i8 %17 to i32, !dbg !13079
  %20 = zext i8 %16 to i32, !dbg !13080
  %21 = shl nuw i32 1, %20, !dbg !13080
  call void @llvm.dbg.value(metadata i32 %21, metadata !2231, metadata !DIExpression()), !dbg !13065
  %22 = and i32 %21, %19, !dbg !13082
  %23 = icmp eq i32 %22, 0, !dbg !13084
  br i1 %23, label %42, label %24, !dbg !13085

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13086
  %26 = sub i32 %10, %18, !dbg !13087
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13088
  %28 = load i8*, i8** %27, align 4, !dbg !13088
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13089
  %30 = load i32, i32* %29, align 4, !dbg !13089
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13090
  %32 = add i32 %31, %18, !dbg !13091
  call void @llvm.dbg.value(metadata i32 %32, metadata !2230, metadata !DIExpression()), !dbg !13065
  %33 = trunc i32 %21 to i8, !dbg !13092
  %34 = xor i8 %33, -1, !dbg !13092
  %35 = and i8 %17, %34, !dbg !13092
  call void @llvm.dbg.value(metadata i8 %35, metadata !2232, metadata !DIExpression()), !dbg !13065
  %36 = icmp eq i8 %35, 0, !dbg !13093
  br i1 %36, label %12, label %37, !dbg !13095

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13096
  %39 = sub i32 %10, %32, !dbg !13098
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.219, i32 0, i32 0), i32 noundef 1) #24, !dbg !13099
  %41 = add i32 %40, %32, !dbg !13100
  call void @llvm.dbg.value(metadata i32 %41, metadata !2230, metadata !DIExpression()), !dbg !13065
  br label %42, !dbg !13101

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13065
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13065
  call void @llvm.dbg.value(metadata i8 %44, metadata !2232, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 %43, metadata !2230, metadata !DIExpression()), !dbg !13065
  %45 = add i8 %16, 1, !dbg !13102
  call void @llvm.dbg.value(metadata i8 %45, metadata !2233, metadata !DIExpression()), !dbg !13071
  br label %15, !dbg !13074

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.220, i32 0, i32 0), %3 ], !dbg !13065
  ret i8* %47, !dbg !13103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13104 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13108, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.value(metadata i32 %1, metadata !13109, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.value(metadata i8* %2, metadata !13110, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()), !dbg !13113
  %5 = icmp ult i32 %1, %3, !dbg !13114
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13114
  call void @llvm.dbg.value(metadata i32 %6, metadata !13112, metadata !DIExpression()), !dbg !13113
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13115
  ret i32 %6, !dbg !13116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13121, metadata !DIExpression()), !dbg !13122
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13123
  ret void, !dbg !13124
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13125 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13134, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13135, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 %2, metadata !13136, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13137, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i8* %4, metadata !13138, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i8* %5, metadata !13139, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i8* %6, metadata !13140, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 %7, metadata !13141, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 %8, metadata !13142, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i8* %9, metadata !13143, metadata !DIExpression()), !dbg !13145
  %11 = icmp eq i32 %7, 15, !dbg !13146
  br i1 %11, label %12, label %15, !dbg !13146

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13146
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13146
  br i1 %14, label %19, label %18, !dbg !13146

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13146
  %17 = icmp ult i32 %16, 31, !dbg !13146
  br i1 %17, label %19, label %18, !dbg !13146

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.232, i32 0, i32 0), i32 noundef 536) #25, !dbg !13150
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.233, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13150
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.232, i32 0, i32 0), i32 noundef 536) #25, !dbg !13150
  unreachable, !dbg !13150

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13152
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13153
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13154
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13155
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13156
  call void @llvm.dbg.value(metadata i8* %22, metadata !13144, metadata !DIExpression()), !dbg !13145
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13157
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13158
  store i8* null, i8** %23, align 4, !dbg !13159
  %24 = icmp eq i8* %9, null, !dbg !13160
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13162
  br i1 %24, label %29, label %26, !dbg !13163

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13164
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13166
  store i8 0, i8* %28, align 1, !dbg !13167
  br label %30, !dbg !13168

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13169
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13171
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13171
  br i1 %32, label %36, label %33, !dbg !13173

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13174
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13174
  br label %36, !dbg !13175

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13145
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13176
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13178
  ret i8* %22, !dbg !13179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13180 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13184, metadata !DIExpression()), !dbg !13185
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13186
  ret i1 %2, !dbg !13187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13188 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13193, metadata !DIExpression()), !dbg !13194
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13195
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13196
  ret void, !dbg !13197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13198 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13203, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %1, metadata !13204, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %2, metadata !13205, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %3, metadata !13206, metadata !DIExpression()), !dbg !13207
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13208
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13209
  %6 = trunc i32 %3 to i8, !dbg !13210
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13211
  store i8 %6, i8* %7, align 4, !dbg !13212
  %8 = trunc i32 %2 to i8, !dbg !13213
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13214
  store i8 %8, i8* %9, align 1, !dbg !13215
  %10 = trunc i32 %1 to i8, !dbg !13216
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13217
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13217
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13217
  store i8 %10, i8* %13, align 2, !dbg !13218
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13219
  store i8 0, i8* %14, align 1, !dbg !13220
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13221
  ret void, !dbg !13222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13223 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13227, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13228, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 %2, metadata !13229, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 0, metadata !13234, metadata !DIExpression()), !dbg !13235
  %4 = add i32 %2, 7, !dbg !13236
  %5 = and i32 %4, -8, !dbg !13236
  %6 = add i32 %5, 64, !dbg !13236
  call void @llvm.dbg.value(metadata i32 %6, metadata !13230, metadata !DIExpression()), !dbg !13235
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.234(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13238
  call void @llvm.dbg.value(metadata i8* %7, metadata !13233, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 %5, metadata !13231, metadata !DIExpression()), !dbg !13235
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13239
  call void @llvm.dbg.value(metadata i8* %8, metadata !13232, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 0, metadata !13234, metadata !DIExpression()), !dbg !13235
  %9 = ptrtoint i8* %7 to i32, !dbg !13240
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13241
  store i32 %9, i32* %10, align 4, !dbg !13242
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13243
  store i32 %5, i32* %11, align 4, !dbg !13244
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13245
  store i32 0, i32* %12, align 4, !dbg !13246
  call void @llvm.dbg.value(metadata i8* %8, metadata !13232, metadata !DIExpression()), !dbg !13235
  ret i8* %8, !dbg !13247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.234(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13248 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13252, metadata !DIExpression()), !dbg !13253
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13254
  ret i8* %2, !dbg !13255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13256 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13261, metadata !DIExpression()), !dbg !13262
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13263
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13264
  ret void, !dbg !13265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13266 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13268, metadata !DIExpression()), !dbg !13269
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13270
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13271
  ret void, !dbg !13272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13273 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13277, metadata !DIExpression()), !dbg !13278
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13279
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13280
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13281
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13282
  ret void, !dbg !13283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13284 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13289, metadata !DIExpression()), !dbg !13290
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13291
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13292
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13293
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13294
  ret void, !dbg !13295
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13296 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13313, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13304, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13305, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i32 %2, metadata !13306, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13307, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i8* %4, metadata !13308, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i8* %5, metadata !13309, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i8* %6, metadata !13310, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i32 %7, metadata !13311, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i32 %8, metadata !13312, metadata !DIExpression()), !dbg !13314
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13315, !srcloc !13011
  call void @llvm.dbg.value(metadata i32 %11, metadata !13007, metadata !DIExpression()) #23, !dbg !13320
  %12 = icmp eq i32 %11, 0, !dbg !13321
  br i1 %12, label %14, label %13, !dbg !13322

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.232, i32 0, i32 0), i32 noundef 647) #25, !dbg !13323
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.238, i32 0, i32 0)) #25, !dbg !13323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.232, i32 0, i32 0), i32 noundef 647) #25, !dbg !13323
  unreachable, !dbg !13323

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13313, metadata !DIExpression()), !dbg !13314
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13325
  %17 = icmp eq i64 %15, -1, !dbg !13326
  br i1 %17, label %19, label %18, !dbg !13328

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13329
  br label %19, !dbg !13331

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13333 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13338, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13337, metadata !DIExpression()), !dbg !13339
  %4 = icmp eq i64 %3, 0, !dbg !13340
  br i1 %4, label %5, label %6, !dbg !13342

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13343
  br label %7, !dbg !13345

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13346
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13353, metadata !DIExpression()), !dbg !13354
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13355, !srcloc !13357
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13358
  ret void, !dbg !13359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13360 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13363, metadata !DIExpression()), !dbg !13364
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13362, metadata !DIExpression()), !dbg !13364
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13365
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13366
  ret void, !dbg !13367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13368 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13370, metadata !DIExpression()), !dbg !13390
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13391

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.241, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.232, i32 0, i32 0), i32 noundef 750) #25, !dbg !13395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.242, i32 0, i32 0)) #25, !dbg !13395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.232, i32 0, i32 0), i32 noundef 750) #25, !dbg !13395
  unreachable, !dbg !13395

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13370, metadata !DIExpression()), !dbg !13390
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13398
  br i1 %4, label %6, label %5, !dbg !13399

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13400
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13388, metadata !DIExpression()), !dbg !13401
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13402

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13406
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13406
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13408
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13408
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13409
  %12 = load i32, i32* %11, align 4, !dbg !13409
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13410
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13410
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13411
  %16 = load i8*, i8** %15, align 4, !dbg !13411
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13412
  %18 = load i8*, i8** %17, align 4, !dbg !13412
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13413
  %20 = load i8*, i8** %19, align 4, !dbg !13413
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13414
  %22 = load i32, i32* %21, align 4, !dbg !13414
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13415
  %24 = load i32, i32* %23, align 4, !dbg !13415
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13416
  %26 = load i8*, i8** %25, align 4, !dbg !13416
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13417
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13418
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13419
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13420
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13420
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13421
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13370, metadata !DIExpression()), !dbg !13390
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13422
  br i1 %32, label %1, label %2, !dbg !13391, !llvm.loop !13423

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.241, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.232, i32 0, i32 0), i32 noundef 781) #25, !dbg !13425
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.242, i32 0, i32 0)) #25, !dbg !13425
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.232, i32 0, i32 0), i32 noundef 781) #25, !dbg !13425
  unreachable, !dbg !13425

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13388, metadata !DIExpression()), !dbg !13401
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13428
  br i1 %36, label %38, label %37, !dbg !13429

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !13430
  ret void, !dbg !13431

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13432
  %40 = load i32, i32* %39, align 4, !dbg !13432
  %41 = icmp eq i32 %40, -1, !dbg !13435
  br i1 %41, label %50, label %42, !dbg !13436

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13437
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13437
  %45 = icmp sgt i32 %40, 0, !dbg !13439
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13439
  %47 = zext i32 %46 to i64, !dbg !13439
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !13439
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13440
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13440
  br label %50, !dbg !13441

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13442
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13388, metadata !DIExpression()), !dbg !13401
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13443
  br i1 %52, label %33, label %34, !dbg !13402, !llvm.loop !13444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !13446 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13451, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata i64 %0, metadata !13453, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i32 1000, metadata !13458, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i32 10000, metadata !13459, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i8 1, metadata !13460, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i8 0, metadata !13461, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i8 1, metadata !13462, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i8 0, metadata !13463, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i8 1, metadata !13464, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i8 0, metadata !13465, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i64 0, metadata !13466, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i64 0, metadata !13466, metadata !DIExpression()), !dbg !13470
  %2 = mul i64 %0, 10, !dbg !13472
  ret i64 %2, !dbg !13478
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !13479 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13481, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i8* %1, metadata !13482, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i8* %2, metadata !13483, metadata !DIExpression()), !dbg !13485
  call void @llvm.dbg.value(metadata i8* %3, metadata !13484, metadata !DIExpression()), !dbg !13485
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13486
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13487
  %7 = load i8, i8* %6, align 4, !dbg !13488
  %8 = or i8 %7, 4, !dbg !13488
  store i8 %8, i8* %6, align 4, !dbg !13488
  tail call void @z_thread_essential_clear() #24, !dbg !13489
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13490
  unreachable, !dbg !13490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13491 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13496, metadata !DIExpression()), !dbg !13498
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13499
  %3 = load i32, i32* %2, align 4, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %3, metadata !13497, metadata !DIExpression()), !dbg !13498
  %4 = icmp eq i32 %3, 0, !dbg !13500
  br i1 %4, label %10, label %5, !dbg !13502

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13503
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13506
  %8 = zext i8 %7 to i32, !dbg !13507
  %9 = icmp eq i32 %6, %8, !dbg !13508
  br i1 %9, label %11, label %10, !dbg !13509

10:                                               ; preds = %5, %1
  br label %11, !dbg !13510

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13498
  ret i1 %12, !dbg !13511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !13512 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13514, metadata !DIExpression()), !dbg !13515
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13516
  %3 = load i32, i32* %2, align 4, !dbg !13516
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13518
  %5 = zext i8 %4 to i32, !dbg !13519
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13520
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13521
  %8 = or i32 %7, %5, !dbg !13522
  %9 = icmp eq i32 %3, %8, !dbg !13523
  br i1 %9, label %10, label %11, !dbg !13524

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13525
  br label %11, !dbg !13526

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13528 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13532, metadata !DIExpression()), !dbg !13533
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13534
  %3 = zext i8 %2 to i32, !dbg !13535
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13536
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13537
  %6 = or i32 %5, %3, !dbg !13538
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13539
  store i32 %6, i32* %7, align 4, !dbg !13540
  ret void, !dbg !13541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13542 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13546, metadata !DIExpression()), !dbg !13547
  ret i32 -134, !dbg !13548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13549 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13553, metadata !DIExpression()), !dbg !13555
  call void @llvm.dbg.value(metadata i32 %1, metadata !13554, metadata !DIExpression()), !dbg !13555
  ret i32 -134, !dbg !13556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13564, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13565, metadata !DIExpression()), !dbg !13566
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13567
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13569
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13566
  ret i32 %6, !dbg !13570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13571 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13575, metadata !DIExpression()), !dbg !13576
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13577
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13576
  ret i32 %3, !dbg !13579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13580 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13582
  ret void, !dbg !13583
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !13584 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13586, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i8* %1, metadata !13587, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i8* %2, metadata !13588, metadata !DIExpression()), !dbg !13589
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13590
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13590
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13590
  %7 = load i8, i8* %6, align 2, !dbg !13590
  %8 = icmp sgt i8 %7, -1, !dbg !13590
  br i1 %8, label %10, label %9, !dbg !13593

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.253, i32 0, i32 0), i32 noundef 39) #25, !dbg !13594
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.253, i32 0, i32 0), i32 noundef 39) #25, !dbg !13594
  unreachable, !dbg !13594

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13596, !srcloc !13603
  call void @llvm.dbg.value(metadata i32 undef, metadata !13599, metadata !DIExpression()) #23, !dbg !13604
  call void @llvm.dbg.value(metadata i32 undef, metadata !13600, metadata !DIExpression()) #23, !dbg !13604
  tail call fastcc void @k_cpu_idle() #24, !dbg !13605
  br label %10, !dbg !13606, !llvm.loop !13607
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13609 {
  tail call void @arch_cpu_idle() #25, !dbg !13610
  ret void, !dbg !13611
}

; Function Attrs: optsize
declare !dbg !13612 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13613 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13624, metadata !DIExpression()), !dbg !13625
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13626
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13627
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13628
  store i32 0, i32* %3, align 4, !dbg !13629
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13630
  tail call fastcc void @z_waitq_init.254(%struct._wait_q_t* noundef %4) #24, !dbg !13631
  ret i32 0, !dbg !13632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.254(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13633 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13637, metadata !DIExpression()), !dbg !13638
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13639
  tail call fastcc void @sys_dlist_init.255(%struct._dnode* noundef %2) #24, !dbg !13640
  ret void, !dbg !13641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.255(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13642 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13647, metadata !DIExpression()), !dbg !13648
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13649
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13650
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13651
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13652
  ret void, !dbg !13653
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13654 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13663, metadata !DIExpression()), !dbg !13675
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13662, metadata !DIExpression()), !dbg !13675
  call void @llvm.dbg.value(metadata i8 0, metadata !13670, metadata !DIExpression()), !dbg !13675
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13676, !srcloc !13685
  call void @llvm.dbg.value(metadata i32 %4, metadata !13679, metadata !DIExpression()) #23, !dbg !13686
  %5 = icmp eq i32 %4, 0, !dbg !13687
  br i1 %5, label %7, label %6, !dbg !13688

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.260, i32 0, i32 0), i32 noundef 101) #25, !dbg !13689
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.261, i32 0, i32 0)) #25, !dbg !13689
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.260, i32 0, i32 0), i32 noundef 101) #25, !dbg !13689
  unreachable, !dbg !13689

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.262, metadata !13691, metadata !DIExpression()) #23, !dbg !13698
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13700, !srcloc !13706
  call void @llvm.dbg.value(metadata i32 undef, metadata !13703, metadata !DIExpression()) #23, !dbg !13707
  call void @llvm.dbg.value(metadata i32 undef, metadata !13704, metadata !DIExpression()) #23, !dbg !13707
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !13698
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13708
  br i1 %9, label %11, label %10, !dbg !13711

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !13712
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13712
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !13712
  unreachable, !dbg !13712

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13700
  call void @llvm.dbg.value(metadata i32 %12, metadata !13703, metadata !DIExpression()) #23, !dbg !13707
  call void @llvm.dbg.value(metadata i32 %12, metadata !13697, metadata !DIExpression()) #23, !dbg !13698
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13714
  call void @llvm.dbg.value(metadata i32 %12, metadata !13665, metadata !DIExpression()), !dbg !13675
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13715
  %14 = load i32, i32* %13, align 4, !dbg !13715
  %15 = icmp eq i32 %14, 0, !dbg !13715
  br i1 %15, label %21, label %16, !dbg !13715

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13715
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13715
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13715
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13715
  br i1 %20, label %27, label %39, !dbg !13717, !prof !13718

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13719
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13721
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13721
  %25 = load i8, i8* %24, align 2, !dbg !13721
  %26 = sext i8 %25 to i32, !dbg !13719
  br label %30, !dbg !13722

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13723
  %29 = load i32, i32* %28, align 4, !dbg !13723
  br label %30, !dbg !13722

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13724
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13722
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13725
  store i32 %32, i32* %33, align 4, !dbg !13726
  %34 = add i32 %14, 1, !dbg !13727
  store i32 %34, i32* %13, align 4, !dbg !13727
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13728
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13729
  call void @llvm.dbg.value(metadata i32 undef, metadata !13730, metadata !DIExpression()) #23, !dbg !13736
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.262, metadata !13735, metadata !DIExpression()) #23, !dbg !13736
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13738
  br i1 %36, label %38, label %37, !dbg !13741

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !13742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !13742
  unreachable, !dbg !13742

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13730, metadata !DIExpression()) #23, !dbg !13736
  call void @llvm.dbg.value(metadata i32 %12, metadata !13744, metadata !DIExpression()) #23, !dbg !13747
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13749, !srcloc !13750
  br label %97, !dbg !13751

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13752
  br i1 %40, label %41, label %45, !dbg !13754, !prof !13755

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13730, metadata !DIExpression()) #23, !dbg !13756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.262, metadata !13735, metadata !DIExpression()) #23, !dbg !13756
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13759
  br i1 %42, label %44, label %43, !dbg !13760

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !13761
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13761
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !13761
  unreachable, !dbg !13761

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13730, metadata !DIExpression()) #23, !dbg !13756
  call void @llvm.dbg.value(metadata i32 %12, metadata !13744, metadata !DIExpression()) #23, !dbg !13762
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13764, !srcloc !13750
  br label %97, !dbg !13765

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13766
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13766
  %48 = load i8, i8* %47, align 2, !dbg !13766
  %49 = sext i8 %48 to i32, !dbg !13767
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13768
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13768
  %52 = load i8, i8* %51, align 2, !dbg !13768
  %53 = sext i8 %52 to i32, !dbg !13769
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13770
  call void @llvm.dbg.value(metadata i32 %54, metadata !13664, metadata !DIExpression()), !dbg !13675
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13771
  br i1 %55, label %56, label %58, !dbg !13773

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13774
  call void @llvm.dbg.value(metadata i1 %57, metadata !13670, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13675
  br label %58, !dbg !13776

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13670, metadata !DIExpression()), !dbg !13675
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13777
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13778
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.262, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !13778
  call void @llvm.dbg.value(metadata i32 %62, metadata !13671, metadata !DIExpression()), !dbg !13675
  %63 = icmp eq i32 %62, 0, !dbg !13779
  br i1 %63, label %97, label %64, !dbg !13781

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.262, metadata !13691, metadata !DIExpression()) #23, !dbg !13782
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13784, !srcloc !13706
  call void @llvm.dbg.value(metadata i32 undef, metadata !13703, metadata !DIExpression()) #23, !dbg !13786
  call void @llvm.dbg.value(metadata i32 undef, metadata !13704, metadata !DIExpression()) #23, !dbg !13786
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !13782
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13787
  br i1 %66, label %68, label %67, !dbg !13788

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !13789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !13789
  unreachable, !dbg !13789

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13784
  call void @llvm.dbg.value(metadata i32 %69, metadata !13703, metadata !DIExpression()) #23, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %69, metadata !13697, metadata !DIExpression()) #23, !dbg !13782
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %69, metadata !13665, metadata !DIExpression()), !dbg !13675
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13791
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13791
  br i1 %71, label %90, label %72, !dbg !13792, !prof !13755

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13793
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13672, metadata !DIExpression()), !dbg !13794
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13795
  br i1 %74, label %83, label %75, !dbg !13796

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13797
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13797
  %78 = load i8, i8* %77, align 2, !dbg !13797
  %79 = sext i8 %78 to i32, !dbg !13798
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13799
  %81 = load i32, i32* %80, align 4, !dbg !13799
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13800
  br label %86, !dbg !13796

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13801
  %85 = load i32, i32* %84, align 4, !dbg !13801
  br label %86, !dbg !13796

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13796
  call void @llvm.dbg.value(metadata i32 %87, metadata !13664, metadata !DIExpression()), !dbg !13675
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13802
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13803
  call void @llvm.dbg.value(metadata i1 %89, metadata !13670, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13675
  call void @llvm.dbg.value(metadata i8 poison, metadata !13670, metadata !DIExpression()), !dbg !13675
  br i1 %89, label %91, label %93, !dbg !13804

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13670, metadata !DIExpression()), !dbg !13675
  br i1 %59, label %91, label %93, !dbg !13804

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13805
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.262, [1 x i32] %92) #25, !dbg !13805
  br label %97, !dbg !13808

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13730, metadata !DIExpression()) #23, !dbg !13809
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.262, metadata !13735, metadata !DIExpression()) #23, !dbg !13809
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13812
  br i1 %94, label %96, label %95, !dbg !13813

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !13814
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13814
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !13814
  unreachable, !dbg !13814

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13730, metadata !DIExpression()) #23, !dbg !13809
  call void @llvm.dbg.value(metadata i32 %69, metadata !13744, metadata !DIExpression()) #23, !dbg !13815
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13817, !srcloc !13750
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13675
  ret i32 %98, !dbg !13818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13823, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i32 %1, metadata !13824, metadata !DIExpression()), !dbg !13826
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13827
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13827
  call void @llvm.dbg.value(metadata i32 %4, metadata !13825, metadata !DIExpression()), !dbg !13826
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13828
  call void @llvm.dbg.value(metadata i32 %5, metadata !13825, metadata !DIExpression()), !dbg !13826
  ret i32 %5, !dbg !13829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13834, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 %1, metadata !13835, metadata !DIExpression()), !dbg !13836
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13837
  ret i1 %3, !dbg !13838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13839 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13843, metadata !DIExpression()), !dbg !13845
  call void @llvm.dbg.value(metadata i32 %1, metadata !13844, metadata !DIExpression()), !dbg !13845
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13846
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13846
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13848
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13848
  %7 = load i8, i8* %6, align 2, !dbg !13848
  %8 = sext i8 %7 to i32, !dbg !13849
  %9 = icmp eq i32 %8, %1, !dbg !13850
  br i1 %9, label %12, label %10, !dbg !13851

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13852
  br label %12, !dbg !13854

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13845
  ret i1 %13, !dbg !13855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13856 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13860, metadata !DIExpression()), !dbg !13861
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13862
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13863
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13864
  ret %struct.k_thread* %4, !dbg !13865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13866 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13870, metadata !DIExpression()), !dbg !13871
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13872
  br i1 %2, label %6, label %3, !dbg !13872

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13873
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13873
  br label %6, !dbg !13872

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13872
  ret %struct._dnode* %7, !dbg !13874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13875 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13879, metadata !DIExpression()), !dbg !13880
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13881
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13881
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13882
  ret i1 %4, !dbg !13883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13886, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i32 %1, metadata !13887, metadata !DIExpression()), !dbg !13888
  %3 = icmp slt i32 %0, %1, !dbg !13889
  ret i1 %3, !dbg !13890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13893, metadata !DIExpression()), !dbg !13894
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13895
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13895
  ret i32 %3, !dbg !13896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13901, metadata !DIExpression()), !dbg !13902
  %2 = icmp sgt i32 %0, -128, !dbg !13903
  ret i1 %2, !dbg !13904
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13905 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13907, metadata !DIExpression()), !dbg !13911
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13912, !srcloc !13685
  call void @llvm.dbg.value(metadata i32 %2, metadata !13679, metadata !DIExpression()) #23, !dbg !13917
  %3 = icmp eq i32 %2, 0, !dbg !13918
  br i1 %3, label %5, label %4, !dbg !13919

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.260, i32 0, i32 0), i32 noundef 205) #25, !dbg !13920
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.261, i32 0, i32 0)) #25, !dbg !13920
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.260, i32 0, i32 0), i32 noundef 205) #25, !dbg !13920
  unreachable, !dbg !13920

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13922
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !13922
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13922
  br i1 %8, label %41, label %9, !dbg !13924

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13925
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !13925
  br i1 %11, label %12, label %41, !dbg !13927

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13928
  %14 = load i32, i32* %13, align 4, !dbg !13928
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !13931

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.260, i32 0, i32 0), i32 noundef 229) #25, !dbg !13932
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.260, i32 0, i32 0), i32 noundef 229) #25, !dbg !13932
  unreachable, !dbg !13932

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !13934
  store i32 %17, i32* %13, align 4, !dbg !13934
  br label %41, !dbg !13937

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.262, metadata !13691, metadata !DIExpression()) #23, !dbg !13938
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13940, !srcloc !13706
  call void @llvm.dbg.value(metadata i32 undef, metadata !13703, metadata !DIExpression()) #23, !dbg !13942
  call void @llvm.dbg.value(metadata i32 undef, metadata !13704, metadata !DIExpression()) #23, !dbg !13942
  call void @llvm.dbg.value(metadata i32 undef, metadata !13697, metadata !DIExpression()) #23, !dbg !13938
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13943
  br i1 %20, label %22, label %21, !dbg !13944

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !13945
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13945
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !13945
  unreachable, !dbg !13945

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13940
  call void @llvm.dbg.value(metadata i32 %23, metadata !13703, metadata !DIExpression()) #23, !dbg !13942
  call void @llvm.dbg.value(metadata i32 %23, metadata !13697, metadata !DIExpression()) #23, !dbg !13938
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13946
  call void @llvm.dbg.value(metadata i32 %23, metadata !13909, metadata !DIExpression()), !dbg !13911
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13947
  %25 = load i32, i32* %24, align 4, !dbg !13947
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !13948
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13949
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !13950
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13908, metadata !DIExpression()), !dbg !13911
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !13951
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !13952
  br i1 %29, label %37, label %30, !dbg !13954

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !13955
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !13955
  %33 = load i8, i8* %32, align 2, !dbg !13955
  %34 = sext i8 %33 to i32, !dbg !13957
  store i32 %34, i32* %24, align 4, !dbg !13958
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13959, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i32 0, metadata !13964, metadata !DIExpression()), !dbg !13965
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !13967
  store i32 0, i32* %35, align 4, !dbg !13968
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !13969
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13970
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.262, [1 x i32] %36) #25, !dbg !13970
  br label %41, !dbg !13971

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !13972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13730, metadata !DIExpression()) #23, !dbg !13974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.262, metadata !13735, metadata !DIExpression()) #23, !dbg !13974
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13976
  br i1 %38, label %40, label %39, !dbg !13977

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !13978
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.262) #25, !dbg !13978
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !13978
  unreachable, !dbg !13978

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13730, metadata !DIExpression()) #23, !dbg !13974
  call void @llvm.dbg.value(metadata i32 %23, metadata !13744, metadata !DIExpression()) #23, !dbg !13979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13981, !srcloc !13750
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !13911
  ret i32 %42, !dbg !13982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13983 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13987, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13988, metadata !DIExpression()), !dbg !13991
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13992
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13992
  %5 = load i8, i8* %4, align 2, !dbg !13992
  call void @llvm.dbg.value(metadata i8 %5, metadata !13989, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13991
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13993
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13993
  %8 = load i8, i8* %7, align 2, !dbg !13993
  call void @llvm.dbg.value(metadata i8 %8, metadata !13990, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13991
  %9 = icmp eq i8 %8, %5, !dbg !13994
  %10 = sext i8 %5 to i32, !dbg !13996
  %11 = sext i8 %8 to i32, !dbg !13996
  %12 = sub nsw i32 %11, %10, !dbg !13996
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13996
  ret i32 %13, !dbg !13997
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13998 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14002, metadata !DIExpression()), !dbg !14003
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14004
  %3 = icmp eq i32 %2, 0, !dbg !14006
  br i1 %3, label %8, label %4, !dbg !14007

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14008
  %6 = add i32 %5, %2, !dbg !14010
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14011
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14012
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14013
  br label %8, !dbg !14014

8:                                                ; preds = %4, %1
  ret void, !dbg !14015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14016 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14020, metadata !DIExpression()), !dbg !14022
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14023
  call void @llvm.dbg.value(metadata i32 %1, metadata !14021, metadata !DIExpression()), !dbg !14022
  ret i32 %1, !dbg !14024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14029, metadata !DIExpression()), !dbg !14038
  call void @llvm.dbg.value(metadata i32 %1, metadata !14030, metadata !DIExpression()), !dbg !14038
  call void @llvm.dbg.value(metadata i32 0, metadata !14031, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !14047
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14049, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14056
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14056
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14047
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14057
  br i1 %4, label %6, label %5, !dbg !14060

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14061
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14061
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14061
  unreachable, !dbg !14061

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14056
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14047
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14063
  call void @llvm.dbg.value(metadata i32 undef, metadata !14037, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()), !dbg !14039
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14064
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14067
  %8 = icmp sgt i32 %0, 0, !dbg !14068
  %9 = icmp sgt i32 %7, 2, !dbg !14070
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14070
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14070
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14071
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14072
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14073
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14080
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !14080
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14082
  br i1 %12, label %14, label %13, !dbg !14085

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14086
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14086
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14086
  unreachable, !dbg !14086

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14049
  call void @llvm.dbg.value(metadata i32 %15, metadata !14052, metadata !DIExpression()) #23, !dbg !14056
  call void @llvm.dbg.value(metadata i32 %15, metadata !14046, metadata !DIExpression()) #23, !dbg !14047
  call void @llvm.dbg.value(metadata i32 %15, metadata !14037, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14080
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !14091
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14093, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !14031, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()), !dbg !14039
  ret void, !dbg !14095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14098, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 %0, metadata !14100, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14115
  call void @llvm.dbg.value(metadata i32 1000, metadata !14103, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i32 10000, metadata !14104, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i8 1, metadata !14105, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i1 true, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14115
  call void @llvm.dbg.value(metadata i1 true, metadata !14107, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14115
  call void @llvm.dbg.value(metadata i8 0, metadata !14108, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i1 true, metadata !14109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14115
  call void @llvm.dbg.value(metadata i1 false, metadata !14110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14115
  call void @llvm.dbg.value(metadata i64 0, metadata !14111, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i64 0, metadata !14111, metadata !DIExpression()), !dbg !14115
  %2 = mul i32 %0, 10, !dbg !14117
  ret i32 %2, !dbg !14123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14126, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !14129
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14131, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14133
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14133
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14129
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14134
  br i1 %3, label %5, label %4, !dbg !14135

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14136
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14136
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14136
  unreachable, !dbg !14136

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14131
  call void @llvm.dbg.value(metadata i32 %6, metadata !14052, metadata !DIExpression()) #23, !dbg !14133
  call void @llvm.dbg.value(metadata i32 %6, metadata !14046, metadata !DIExpression()) #23, !dbg !14129
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14137
  call void @llvm.dbg.value(metadata i32 %6, metadata !14127, metadata !DIExpression()), !dbg !14128
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14138
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14140
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14141
  br i1 %9, label %10, label %14, !dbg !14142

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14143
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !14145
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14147
  br i1 %11, label %13, label %12, !dbg !14148

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14149
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14149
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14149
  unreachable, !dbg !14149

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14074, metadata !DIExpression()) #23, !dbg !14145
  call void @llvm.dbg.value(metadata i32 %6, metadata !14088, metadata !DIExpression()) #23, !dbg !14150
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14152, !srcloc !14094
  br label %33, !dbg !14153

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14154
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14155
  %16 = icmp eq i32 %15, 0, !dbg !14155
  br i1 %16, label %27, label %17, !dbg !14157

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14158
  br i1 %18, label %19, label %27, !dbg !14159

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14160
  %21 = icmp sgt i32 %20, %0, !dbg !14163
  br i1 %21, label %25, label %22, !dbg !14164

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14165
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14165
  call void @llvm.dbg.value(metadata i32 %24, metadata !14127, metadata !DIExpression()), !dbg !14128
  br label %28, !dbg !14167

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14168
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14168
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14170
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14128
  call void @llvm.dbg.value(metadata i32 %29, metadata !14127, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !14172
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14174
  br i1 %30, label %32, label %31, !dbg !14175

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14176
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14176
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14176
  unreachable, !dbg !14176

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14074, metadata !DIExpression()) #23, !dbg !14172
  call void @llvm.dbg.value(metadata i32 %29, metadata !14088, metadata !DIExpression()) #23, !dbg !14177
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14179, !srcloc !14094
  br label %33, !dbg !14180

33:                                               ; preds = %32, %13
  ret void, !dbg !14180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14185, metadata !DIExpression()), !dbg !14187
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14188
  %3 = icmp eq i32 %2, 0, !dbg !14188
  br i1 %3, label %16, label %4, !dbg !14189

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14190
  br i1 %5, label %16, label %6, !dbg !14191

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14192
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14192
  %9 = load i8, i8* %8, align 2, !dbg !14192
  %10 = sext i8 %9 to i32, !dbg !14193
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14194
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.284(i32 noundef %10, i32 noundef %11) #24, !dbg !14195
  br i1 %12, label %16, label %13, !dbg !14196

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14197
  %15 = xor i1 %14, true, !dbg !14198
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14187
  call void @llvm.dbg.value(metadata i1 %17, metadata !14186, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14187
  ret i1 %17, !dbg !14199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14200 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14204, metadata !DIExpression()), !dbg !14206
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14207
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14205, metadata !DIExpression()), !dbg !14206
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14208
  br i1 %3, label %5, label %4, !dbg !14210

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14211
  br label %5, !dbg !14213

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14204, metadata !DIExpression()), !dbg !14206
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14214
  ret i32 %6, !dbg !14215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14216 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14218, metadata !DIExpression()), !dbg !14220
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14221
  %3 = load i8, i8* %2, align 1, !dbg !14221
  call void @llvm.dbg.value(metadata i8 %3, metadata !14219, metadata !DIExpression()), !dbg !14220
  %4 = and i8 %3, 31, !dbg !14222
  %5 = icmp ne i8 %4, 0, !dbg !14223
  ret i1 %5, !dbg !14224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14227, metadata !DIExpression()), !dbg !14228
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14229
  br i1 %2, label %3, label %7, !dbg !14231

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14232, metadata !DIExpression()) #23, !dbg !14235
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14238
  %5 = load i8, i8* %4, align 1, !dbg !14239
  %6 = and i8 %5, 127, !dbg !14239
  store i8 %6, i8* %4, align 1, !dbg !14239
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14240, metadata !DIExpression()) #23, !dbg !14243
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14247
  br label %7, !dbg !14248

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14249, metadata !DIExpression()) #23, !dbg !14252
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14254
  %9 = load i8, i8* %8, align 1, !dbg !14255
  %10 = or i8 %9, -128, !dbg !14255
  store i8 %10, i8* %8, align 1, !dbg !14255
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14256, metadata !DIExpression()) #23, !dbg !14259
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14263, metadata !DIExpression()) #23, !dbg !14271
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14269, metadata !DIExpression()) #23, !dbg !14271
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14273
  br i1 %11, label %12, label %13, !dbg !14276

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 186) #25, !dbg !14277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 186) #25, !dbg !14277
  unreachable, !dbg !14277

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14279
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14270, metadata !DIExpression()) #23, !dbg !14271
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14281
  br i1 %15, label %26, label %16, !dbg !14279

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14270, metadata !DIExpression()) #23, !dbg !14271
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14283
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14270, metadata !DIExpression()) #23, !dbg !14271
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14284
  %20 = icmp sgt i32 %19, 0, !dbg !14287
  br i1 %20, label %21, label %23, !dbg !14288

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14289
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14291
  br label %28, !dbg !14292

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14281
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14270, metadata !DIExpression()) #23, !dbg !14271
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14281
  br i1 %25, label %26, label %16, !dbg !14279, !llvm.loop !14293

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14295
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14296
  br label %28, !dbg !14297

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14298
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14299
  %31 = zext i1 %30 to i32, !dbg !14299
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14300
  ret void, !dbg !14301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14302 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14304, metadata !DIExpression()), !dbg !14305
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14306
  ret i1 %2, !dbg !14307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14308 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14310, metadata !DIExpression()), !dbg !14312
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14311, metadata !DIExpression()), !dbg !14312
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14313
  br i1 %3, label %4, label %5, !dbg !14316

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14317
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14317
  unreachable, !dbg !14317

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14319
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14320
  ret void, !dbg !14321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14324, metadata !DIExpression()), !dbg !14325
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14326
  ret i1 %2, !dbg !14327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14328 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14332, metadata !DIExpression()), !dbg !14333
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.282(%struct._dnode* noundef %0) #24, !dbg !14334
  br i1 %2, label %6, label %3, !dbg !14334

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14335
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14335
  br label %6, !dbg !14334

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14334
  ret %struct._dnode* %7, !dbg !14336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14337 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14341, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14342, metadata !DIExpression()), !dbg !14345
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14346
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14346
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14343, metadata !DIExpression()), !dbg !14345
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14347
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14348
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14349
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14350
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14351
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14352
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14353
  ret void, !dbg !14354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14355 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14359, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14360, metadata !DIExpression()), !dbg !14361
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14362
  br i1 %3, label %6, label %4, !dbg !14363

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14364
  br label %6, !dbg !14363

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14363
  ret %struct._dnode* %7, !dbg !14365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14366 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14370, metadata !DIExpression()), !dbg !14373
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14371, metadata !DIExpression()), !dbg !14373
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14374
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14374
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14372, metadata !DIExpression()), !dbg !14373
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14375
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14376
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14377
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14378
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14379
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14380
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14381
  ret void, !dbg !14382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14385, metadata !DIExpression()), !dbg !14387
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14388
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14395, metadata !DIExpression()) #23, !dbg !14397
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14398
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14399
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14399
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14386, metadata !DIExpression()), !dbg !14387
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14400, metadata !DIExpression()) #23, !dbg !14406
  call void @llvm.dbg.value(metadata i32 %0, metadata !14405, metadata !DIExpression()) #23, !dbg !14406
  %6 = icmp eq i32 %0, 0, !dbg !14409
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14411
  br i1 %6, label %8, label %18, !dbg !14412

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14413
  br i1 %9, label %10, label %11, !dbg !14416

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 137) #25, !dbg !14417
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.281, i32 0, i32 0)) #25, !dbg !14417
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 137) #25, !dbg !14417
  unreachable, !dbg !14417

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14419
  br i1 %12, label %18, label %13, !dbg !14421

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14422
  br i1 %14, label %18, label %15, !dbg !14424

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14425
  %17 = icmp eq i32 %16, 0, !dbg !14425
  br i1 %17, label %21, label %18, !dbg !14427

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14428
  br i1 %19, label %21, label %20, !dbg !14431

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14432
  br label %21, !dbg !14434

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14411
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14411
  ret void, !dbg !14435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14436 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14440, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14441, metadata !DIExpression()), !dbg !14443
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef %0) #24, !dbg !14444
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14442, metadata !DIExpression()), !dbg !14443
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14441, metadata !DIExpression()), !dbg !14443
  ret %struct.k_thread* %3, !dbg !14445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14446 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14448, metadata !DIExpression()), !dbg !14449
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14450
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14451
  %4 = xor i1 %3, true, !dbg !14452
  ret i1 %4, !dbg !14453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14454 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14456, metadata !DIExpression()), !dbg !14457
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14458
  %3 = load i16, i16* %2, align 2, !dbg !14458
  %4 = icmp ult i16 %3, 128, !dbg !14459
  %5 = zext i1 %4 to i32, !dbg !14459
  ret i32 %5, !dbg !14460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14461 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14467, metadata !DIExpression()), !dbg !14468
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14469
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14470
  %4 = xor i1 %3, true, !dbg !14471
  ret i1 %4, !dbg !14472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14473 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14479, metadata !DIExpression()), !dbg !14480
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14481
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14481
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14482
  ret i1 %4, !dbg !14483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14484 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14486, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14487, metadata !DIExpression()), !dbg !14488
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14489
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14489
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14490
  br i1 %5, label %9, label %6, !dbg !14491

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14492
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14492
  br label %9, !dbg !14491

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14491
  ret %struct._dnode* %10, !dbg !14493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.282(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14494 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14498, metadata !DIExpression()), !dbg !14499
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14500
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14500
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14501
  ret i1 %4, !dbg !14502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14503 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14507, metadata !DIExpression()), !dbg !14510
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14511
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14511
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14508, metadata !DIExpression()), !dbg !14510
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14512
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14512
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14509, metadata !DIExpression()), !dbg !14510
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14513
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14514
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14515
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14516
  tail call fastcc void @sys_dnode_init.283(%struct._dnode* noundef %0) #24, !dbg !14517
  ret void, !dbg !14518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.283(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14519 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14521, metadata !DIExpression()), !dbg !14522
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14523
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14524
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14525
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14526
  ret void, !dbg !14527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14532, metadata !DIExpression()), !dbg !14534
  call void @llvm.dbg.value(metadata i32 %1, metadata !14533, metadata !DIExpression()), !dbg !14534
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14535
  %4 = load i8, i8* %3, align 1, !dbg !14535
  %5 = zext i8 %4 to i32, !dbg !14536
  %6 = and i32 %5, %1, !dbg !14537
  %7 = icmp ne i32 %6, 0, !dbg !14538
  ret i1 %7, !dbg !14539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.284(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14542, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.value(metadata i32 %1, metadata !14543, metadata !DIExpression()), !dbg !14544
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.285(i32 noundef %0, i32 noundef %1) #24, !dbg !14545
  ret i1 %3, !dbg !14546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.285(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14547 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14549, metadata !DIExpression()), !dbg !14551
  call void @llvm.dbg.value(metadata i32 %1, metadata !14550, metadata !DIExpression()), !dbg !14551
  %3 = icmp slt i32 %0, %1, !dbg !14552
  ret i1 %3, !dbg !14553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14554 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14556, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i32 0, metadata !14557, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !14562
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14564, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14566
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14566
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14562
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14567
  br i1 %3, label %5, label %4, !dbg !14568

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14569
  unreachable, !dbg !14569

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14566
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14562
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14570
  call void @llvm.dbg.value(metadata i32 undef, metadata !14559, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata i32 undef, metadata !14557, metadata !DIExpression()), !dbg !14561
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14571
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !14576
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14578
  br i1 %6, label %8, label %7, !dbg !14579

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14580
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14580
  unreachable, !dbg !14580

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14564
  call void @llvm.dbg.value(metadata i32 %9, metadata !14052, metadata !DIExpression()) #23, !dbg !14566
  call void @llvm.dbg.value(metadata i32 %9, metadata !14046, metadata !DIExpression()) #23, !dbg !14562
  call void @llvm.dbg.value(metadata i32 %9, metadata !14559, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14576
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !14581
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14583, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !14557, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata i32 undef, metadata !14557, metadata !DIExpression()), !dbg !14561
  ret void, !dbg !14584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14587, metadata !DIExpression()), !dbg !14588
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14589
  br i1 %2, label %27, label %3, !dbg !14591

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14592
  br i1 %4, label %5, label %27, !dbg !14593

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14249, metadata !DIExpression()) #23, !dbg !14594
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14597
  %7 = load i8, i8* %6, align 1, !dbg !14598
  %8 = or i8 %7, -128, !dbg !14598
  store i8 %8, i8* %6, align 1, !dbg !14598
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14256, metadata !DIExpression()) #23, !dbg !14599
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14263, metadata !DIExpression()) #23, !dbg !14601
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14269, metadata !DIExpression()) #23, !dbg !14601
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14603
  br i1 %9, label %10, label %11, !dbg !14604

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 186) #25, !dbg !14605
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 186) #25, !dbg !14605
  unreachable, !dbg !14605

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14606
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14270, metadata !DIExpression()) #23, !dbg !14601
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14607
  br i1 %13, label %24, label %14, !dbg !14606

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14270, metadata !DIExpression()) #23, !dbg !14601
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14608
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14270, metadata !DIExpression()) #23, !dbg !14601
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !14609
  %18 = icmp sgt i32 %17, 0, !dbg !14610
  br i1 %18, label %19, label %21, !dbg !14611

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14612
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !14613
  br label %26, !dbg !14614

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !14607
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14270, metadata !DIExpression()) #23, !dbg !14601
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14607
  br i1 %23, label %24, label %14, !dbg !14606, !llvm.loop !14615

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14617
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !14618
  br label %26, !dbg !14619

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14620
  br label %27, !dbg !14621

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14623 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14625, metadata !DIExpression()), !dbg !14626
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14627
  br i1 %2, label %6, label %3, !dbg !14628

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14629
  %5 = xor i1 %4, true, !dbg !14628
  br label %6, !dbg !14628

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14631 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14633, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i32 0, metadata !14634, metadata !DIExpression()), !dbg !14638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !14639
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14641, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14643
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14643
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14639
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14644
  br i1 %3, label %5, label %4, !dbg !14645

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14646
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14646
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14646
  unreachable, !dbg !14646

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14643
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14639
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14647
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()), !dbg !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14634, metadata !DIExpression()), !dbg !14638
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !14651
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14653
  br i1 %6, label %8, label %7, !dbg !14654

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14655
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14655
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14655
  unreachable, !dbg !14655

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14641
  call void @llvm.dbg.value(metadata i32 %9, metadata !14052, metadata !DIExpression()) #23, !dbg !14643
  call void @llvm.dbg.value(metadata i32 %9, metadata !14046, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata i32 %9, metadata !14636, metadata !DIExpression()), !dbg !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14651
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !14656
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14658, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !14634, metadata !DIExpression()), !dbg !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14634, metadata !DIExpression()), !dbg !14638
  ret void, !dbg !14659
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14660 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14662, metadata !DIExpression()), !dbg !14664
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !14665
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14667, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14665
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14670
  br i1 %3, label %5, label %4, !dbg !14671

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14672
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14672
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14672
  unreachable, !dbg !14672

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14667
  call void @llvm.dbg.value(metadata i32 %6, metadata !14052, metadata !DIExpression()) #23, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %6, metadata !14046, metadata !DIExpression()) #23, !dbg !14665
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14673
  call void @llvm.dbg.value(metadata i32 %6, metadata !14663, metadata !DIExpression()), !dbg !14664
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14674
  br i1 %7, label %8, label %12, !dbg !14676

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !14677
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14680
  br i1 %9, label %11, label %10, !dbg !14681

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14682
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14682
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14682
  unreachable, !dbg !14682

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14074, metadata !DIExpression()) #23, !dbg !14677
  call void @llvm.dbg.value(metadata i32 %6, metadata !14088, metadata !DIExpression()) #23, !dbg !14683
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14685, !srcloc !14094
  br label %14, !dbg !14686

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.290(%struct.k_thread* noundef %0) #24, !dbg !14687
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14688
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14689
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14689
  br label %14, !dbg !14690

14:                                               ; preds = %12, %11
  ret void, !dbg !14690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14691 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14693, metadata !DIExpression()), !dbg !14694
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14695
  %3 = load i8, i8* %2, align 1, !dbg !14695
  %4 = and i8 %3, 4, !dbg !14696
  %5 = icmp eq i8 %4, 0, !dbg !14697
  ret i1 %5, !dbg !14698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.290(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14699 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14701, metadata !DIExpression()), !dbg !14702
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14703
  %3 = load i8, i8* %2, align 1, !dbg !14704
  %4 = and i8 %3, -5, !dbg !14704
  store i8 %4, i8* %2, align 1, !dbg !14704
  ret void, !dbg !14705
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14706 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14709, metadata !DIExpression()), !dbg !14710
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14708, metadata !DIExpression()), !dbg !14710
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14711
  br i1 %4, label %5, label %12, !dbg !14713

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14714
  br i1 %6, label %7, label %12, !dbg !14715

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14716, metadata !DIExpression()) #23, !dbg !14722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14721, metadata !DIExpression()) #23, !dbg !14722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14725, metadata !DIExpression()) #23, !dbg !14730
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14732
  br i1 %8, label %10, label %9, !dbg !14735

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !14736
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14736
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !14736
  unreachable, !dbg !14736

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14716, metadata !DIExpression()) #23, !dbg !14722
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14738
  br label %16, !dbg !14739

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14079, metadata !DIExpression()) #23, !dbg !14740
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14743
  br i1 %13, label %15, label %14, !dbg !14744

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14745
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14745
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14745
  unreachable, !dbg !14745

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14074, metadata !DIExpression()) #23, !dbg !14740
  call void @llvm.dbg.value(metadata i32 %3, metadata !14088, metadata !DIExpression()) #23, !dbg !14746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14748, !srcloc !14094
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14754, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata i32 %0, metadata !14756, metadata !DIExpression()), !dbg !14761
  %2 = icmp eq i32 %0, 0, !dbg !14763
  br i1 %2, label %3, label %6, !dbg !14764

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14765, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %4, metadata !14768, metadata !DIExpression()) #23, !dbg !14773
  %5 = icmp eq i32 %4, 0, !dbg !14774
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14755
  ret i1 %7, !dbg !14775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14776 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14779
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14778, metadata !DIExpression()), !dbg !14780
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14781
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14782
  ret i1 %3, !dbg !14783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14786, metadata !DIExpression()), !dbg !14788
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14789
  call void @llvm.dbg.value(metadata i32 %2, metadata !14787, metadata !DIExpression()), !dbg !14788
  ret i32 %2, !dbg !14790
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14791 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14793, metadata !DIExpression()), !dbg !14797
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14798
  call void @llvm.dbg.value(metadata i32 0, metadata !14794, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !14800
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14802, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14800
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14805
  br i1 %4, label %6, label %5, !dbg !14806

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14807
  unreachable, !dbg !14807

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14802
  call void @llvm.dbg.value(metadata i32 %7, metadata !14052, metadata !DIExpression()) #23, !dbg !14804
  call void @llvm.dbg.value(metadata i32 %7, metadata !14046, metadata !DIExpression()) #23, !dbg !14800
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14808
  call void @llvm.dbg.value(metadata i32 %7, metadata !14796, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14794, metadata !DIExpression()), !dbg !14799
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14809
  br i1 %8, label %9, label %13, !dbg !14813

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14232, metadata !DIExpression()) #23, !dbg !14814
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14817
  %11 = load i8, i8* %10, align 1, !dbg !14818
  %12 = and i8 %11, 127, !dbg !14818
  store i8 %12, i8* %10, align 1, !dbg !14818
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14240, metadata !DIExpression()) #23, !dbg !14819
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14821
  br label %13, !dbg !14822

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14823
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14824
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14825
  %16 = zext i1 %15 to i32, !dbg !14825
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14826
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !14827
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14829
  br i1 %17, label %19, label %18, !dbg !14830

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14831
  unreachable, !dbg !14831

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14074, metadata !DIExpression()) #23, !dbg !14827
  call void @llvm.dbg.value(metadata i32 %7, metadata !14088, metadata !DIExpression()) #23, !dbg !14832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14834, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !14794, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14794, metadata !DIExpression()), !dbg !14799
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14835
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14837
  br i1 %21, label %22, label %23, !dbg !14838

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14839
  br label %23, !dbg !14841

23:                                               ; preds = %22, %19
  ret void, !dbg !14842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14845, metadata !DIExpression()), !dbg !14846
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14847
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14848
  ret i32 %3, !dbg !14849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14852, metadata !DIExpression()), !dbg !14853
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14854
  %3 = load i8, i8* %2, align 1, !dbg !14855
  %4 = or i8 %3, 16, !dbg !14855
  store i8 %4, i8* %2, align 1, !dbg !14855
  ret void, !dbg !14856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14857 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14858, !srcloc !14055
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14858
  call void @llvm.dbg.value(metadata i32 %2, metadata !14052, metadata !DIExpression()) #23, !dbg !14860
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14860
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14861
  ret void, !dbg !14862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14865, metadata !DIExpression()), !dbg !14866
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14867
  br i1 %2, label %3, label %5, !dbg !14869

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14870
  br label %6, !dbg !14872

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14088, metadata !DIExpression()) #23, !dbg !14873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14876, !srcloc !14094
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14878 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14880, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !14883
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14885, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14887
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14887
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14883
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14888
  br i1 %3, label %5, label %4, !dbg !14889

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14890
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14890
  unreachable, !dbg !14890

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14885
  call void @llvm.dbg.value(metadata i32 %6, metadata !14052, metadata !DIExpression()) #23, !dbg !14887
  call void @llvm.dbg.value(metadata i32 %6, metadata !14046, metadata !DIExpression()) #23, !dbg !14883
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14891
  call void @llvm.dbg.value(metadata i32 %6, metadata !14881, metadata !DIExpression()), !dbg !14882
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14892
  br i1 %7, label %12, label %8, !dbg !14894

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14895
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !14895
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14898
  br i1 %9, label %11, label %10, !dbg !14899

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14900
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14900
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14900
  unreachable, !dbg !14900

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14074, metadata !DIExpression()) #23, !dbg !14895
  call void @llvm.dbg.value(metadata i32 %6, metadata !14088, metadata !DIExpression()) #23, !dbg !14901
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14903, !srcloc !14094
  br label %14, !dbg !14904

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14905
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14906
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14907
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14907
  br label %14, !dbg !14908

14:                                               ; preds = %12, %11
  ret void, !dbg !14908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14909 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()), !dbg !14912
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14913
  %3 = load i8, i8* %2, align 1, !dbg !14913
  %4 = and i8 %3, 16, !dbg !14914
  %5 = icmp ne i8 %4, 0, !dbg !14915
  ret i1 %5, !dbg !14916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14917 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14919, metadata !DIExpression()), !dbg !14920
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14921
  %3 = load i8, i8* %2, align 1, !dbg !14922
  %4 = and i8 %3, -17, !dbg !14922
  store i8 %4, i8* %2, align 1, !dbg !14922
  ret void, !dbg !14923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14924 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14934, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14932, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14933, metadata !DIExpression()), !dbg !14938
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14939
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14939
  br i1 %5, label %9, label %6, !dbg !14939

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !14939
  br i1 %7, label %9, label %8, !dbg !14942

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 773) #25, !dbg !14943
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 773) #25, !dbg !14943
  unreachable, !dbg !14943

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14935, metadata !DIExpression()), !dbg !14945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !14946
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14948, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14950
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14950
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14946
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14951
  br i1 %11, label %13, label %12, !dbg !14952

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14953
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14953
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !14953
  unreachable, !dbg !14953

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14950
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14946
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14954
  call void @llvm.dbg.value(metadata i32 undef, metadata !14937, metadata !DIExpression()), !dbg !14945
  call void @llvm.dbg.value(metadata i32 undef, metadata !14935, metadata !DIExpression()), !dbg !14945
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14955
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !14958
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14960
  br i1 %14, label %16, label %15, !dbg !14961

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !14962
  unreachable, !dbg !14962

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14948
  call void @llvm.dbg.value(metadata i32 %17, metadata !14052, metadata !DIExpression()) #23, !dbg !14950
  call void @llvm.dbg.value(metadata i32 %17, metadata !14046, metadata !DIExpression()) #23, !dbg !14946
  call void @llvm.dbg.value(metadata i32 %17, metadata !14937, metadata !DIExpression()), !dbg !14945
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14958
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !14963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14965, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !14935, metadata !DIExpression()), !dbg !14945
  call void @llvm.dbg.value(metadata i32 undef, metadata !14935, metadata !DIExpression()), !dbg !14945
  ret void, !dbg !14966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14967 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14969, metadata !DIExpression()), !dbg !14970
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14971
  %3 = load i8, i8* %2, align 1, !dbg !14971
  %4 = and i8 %3, 1, !dbg !14972
  %5 = icmp ne i8 %4, 0, !dbg !14973
  ret i1 %5, !dbg !14974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14975 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14979, metadata !DIExpression()), !dbg !14980
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14977, metadata !DIExpression()), !dbg !14980
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14978, metadata !DIExpression()), !dbg !14980
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14981
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14982
  ret void, !dbg !14983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14984 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14988, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14989, metadata !DIExpression()), !dbg !14990
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14991
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14992
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14993
  br i1 %3, label %24, label %4, !dbg !14995

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14996
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14998
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14999
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14263, metadata !DIExpression()) #23, !dbg !15000
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14269, metadata !DIExpression()) #23, !dbg !15000
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15002
  br i1 %7, label %8, label %9, !dbg !15003

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 186) #25, !dbg !15004
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 186) #25, !dbg !15004
  unreachable, !dbg !15004

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef nonnull %6) #25, !dbg !15005
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14270, metadata !DIExpression()) #23, !dbg !15000
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15006
  br i1 %11, label %22, label %12, !dbg !15005

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14270, metadata !DIExpression()) #23, !dbg !15000
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15007
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14270, metadata !DIExpression()) #23, !dbg !15000
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15008
  %16 = icmp sgt i32 %15, 0, !dbg !15009
  br i1 %16, label %17, label %19, !dbg !15010

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15011
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15012
  br label %24, !dbg !15013

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15006
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14270, metadata !DIExpression()) #23, !dbg !15000
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15006
  br i1 %21, label %22, label %12, !dbg !15005, !llvm.loop !15014

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15016
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15017
  br label %24, !dbg !15018

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15020 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15025, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15024, metadata !DIExpression()), !dbg !15026
  %4 = icmp eq i64 %3, -1, !dbg !15027
  br i1 %4, label %6, label %5, !dbg !15029

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.294(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15030
  br label %6, !dbg !15032

6:                                                ; preds = %5, %2
  ret void, !dbg !15033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.294(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15034 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15037, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15036, metadata !DIExpression()), !dbg !15038
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15039
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15040
  ret void, !dbg !15041
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15042 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15044, metadata !DIExpression()), !dbg !15052
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15053
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15053
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15045, metadata !DIExpression()), !dbg !15052
  call void @llvm.dbg.value(metadata i32 0, metadata !15046, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15055
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15057, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15059
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15059
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15055
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15060
  br i1 %5, label %7, label %6, !dbg !15061

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15062
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15062
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15062
  unreachable, !dbg !15062

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15059
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15055
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15063
  call void @llvm.dbg.value(metadata i32 undef, metadata !15048, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata i32 undef, metadata !15046, metadata !DIExpression()), !dbg !15054
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15064
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15065
  %10 = load i8, i8* %9, align 1, !dbg !15065
  %11 = and i8 %10, 40, !dbg !15066
  %12 = icmp eq i8 %11, 0, !dbg !15066
  call void @llvm.dbg.value(metadata i1 %12, metadata !15049, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15067
  br i1 %12, label %13, label %20, !dbg !15068

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15069
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15069
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15069
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15073
  br i1 %17, label %19, label %18, !dbg !15074

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15075
  br label %19, !dbg !15077

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.290(%struct.k_thread* noundef nonnull %3) #24, !dbg !15078
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15079
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15080
  br label %20, !dbg !15081

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !15082
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15084
  br i1 %21, label %23, label %22, !dbg !15085

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15086
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15086
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15086
  unreachable, !dbg !15086

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15057
  call void @llvm.dbg.value(metadata i32 %24, metadata !14052, metadata !DIExpression()) #23, !dbg !15059
  call void @llvm.dbg.value(metadata i32 %24, metadata !14046, metadata !DIExpression()) #23, !dbg !15055
  call void @llvm.dbg.value(metadata i32 %24, metadata !15048, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !15087
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15089, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !15046, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata i32 undef, metadata !15046, metadata !DIExpression()), !dbg !15054
  ret void, !dbg !15090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15091 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15093, metadata !DIExpression()), !dbg !15094
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15095
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15096
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15097
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15098
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15099
  ret void, !dbg !15100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15101 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15105, metadata !DIExpression()), !dbg !15106
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15107
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15107
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15107
  br i1 %4, label %5, label %6, !dbg !15110

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 726) #25, !dbg !15111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 726) #25, !dbg !15111
  unreachable, !dbg !15111

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15114 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15116, metadata !DIExpression()), !dbg !15117
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15118
  %3 = load i8, i8* %2, align 1, !dbg !15119
  %4 = and i8 %3, -3, !dbg !15119
  store i8 %4, i8* %2, align 1, !dbg !15119
  ret void, !dbg !15120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15121 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15123, metadata !DIExpression()), !dbg !15124
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15125
  br i1 %2, label %3, label %7, !dbg !15127

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14232, metadata !DIExpression()) #23, !dbg !15128
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15131
  %5 = load i8, i8* %4, align 1, !dbg !15132
  %6 = and i8 %5, 127, !dbg !15132
  store i8 %6, i8* %4, align 1, !dbg !15132
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14240, metadata !DIExpression()) #23, !dbg !15133
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15135
  br label %7, !dbg !15136

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15137
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15138
  %10 = zext i1 %9 to i32, !dbg !15138
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15139
  ret void, !dbg !15140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15141 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15143, metadata !DIExpression()), !dbg !15144
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15145
  %3 = load i8, i8* %2, align 1, !dbg !15146
  %4 = or i8 %3, 2, !dbg !15146
  store i8 %4, i8* %2, align 1, !dbg !15146
  ret void, !dbg !15147
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15148 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15150, metadata !DIExpression()), !dbg !15154
  call void @llvm.dbg.value(metadata i32 0, metadata !15151, metadata !DIExpression()), !dbg !15155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15156
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15158, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15160
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15160
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15156
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15161
  br i1 %3, label %5, label %4, !dbg !15162

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15163
  unreachable, !dbg !15163

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15160
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15156
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15164
  call void @llvm.dbg.value(metadata i32 undef, metadata !15153, metadata !DIExpression()), !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()), !dbg !15155
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15165
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !15168
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15170
  br i1 %6, label %8, label %7, !dbg !15171

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15172
  unreachable, !dbg !15172

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15158
  call void @llvm.dbg.value(metadata i32 %9, metadata !14052, metadata !DIExpression()) #23, !dbg !15160
  call void @llvm.dbg.value(metadata i32 %9, metadata !14046, metadata !DIExpression()) #23, !dbg !15156
  call void @llvm.dbg.value(metadata i32 %9, metadata !15153, metadata !DIExpression()), !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15168
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !15173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15175, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !15151, metadata !DIExpression()), !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()), !dbg !15155
  ret void, !dbg !15176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15177 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15183, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 %0, metadata !15181, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15182, metadata !DIExpression()), !dbg !15188
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15189
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15190
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15191
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15192
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15193
  call void @llvm.dbg.value(metadata i32 %6, metadata !15184, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 0, metadata !15185, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15195
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15197, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15199
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15199
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15195
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15200
  br i1 %8, label %10, label %9, !dbg !15201

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15202
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15202
  unreachable, !dbg !15202

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15199
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15195
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15203
  call void @llvm.dbg.value(metadata i32 undef, metadata !15187, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata i32 undef, metadata !15185, metadata !DIExpression()), !dbg !15194
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15204
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15208
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15209
  br i1 %13, label %14, label %15, !dbg !15210

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15211
  br label %15, !dbg !15213

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !15214
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15216
  br i1 %16, label %18, label %17, !dbg !15217

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15218
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15218
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15218
  unreachable, !dbg !15218

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15197
  call void @llvm.dbg.value(metadata i32 %19, metadata !14052, metadata !DIExpression()) #23, !dbg !15199
  call void @llvm.dbg.value(metadata i32 %19, metadata !14046, metadata !DIExpression()) #23, !dbg !15195
  call void @llvm.dbg.value(metadata i32 %19, metadata !15187, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15214
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !15219
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15221, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !15185, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata i32 undef, metadata !15185, metadata !DIExpression()), !dbg !15194
  ret i32 %6, !dbg !15222
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15223 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15228, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.value(metadata i64 undef, metadata !15230, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15227, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15229, metadata !DIExpression()), !dbg !15231
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15232
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15233
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15234
  br i1 %6, label %7, label %8, !dbg !15237

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 846) #25, !dbg !15238
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 846) #25, !dbg !15238
  unreachable, !dbg !15238

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15240
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15242, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15244
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15244
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15240
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15245
  br i1 %10, label %12, label %11, !dbg !15246

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15247
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15247
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15247
  unreachable, !dbg !15247

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15244
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15240
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15248
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15249
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14725, metadata !DIExpression()) #23, !dbg !15251
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15253
  br i1 %14, label %16, label %15, !dbg !15254

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !15255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !15255
  unreachable, !dbg !15255

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14716, metadata !DIExpression()) #23, !dbg !15256
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14721, metadata !DIExpression()) #23, !dbg !15256
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14725, metadata !DIExpression()) #23, !dbg !15258
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15260
  br i1 %17, label %19, label %18, !dbg !15261

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !15262
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15262
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !15262
  unreachable, !dbg !15262

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14716, metadata !DIExpression()) #23, !dbg !15256
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15263
  ret i32 %21, !dbg !15264
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15265 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15269, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15270, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i32 0, metadata !15271, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15276
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15278, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15280
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15280
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15276
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15281
  br i1 %3, label %5, label %4, !dbg !15282

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15283
  unreachable, !dbg !15283

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15280
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15276
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15284
  call void @llvm.dbg.value(metadata i32 undef, metadata !15273, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15270, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i32 undef, metadata !15271, metadata !DIExpression()), !dbg !15275
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15285
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15270, metadata !DIExpression()), !dbg !15274
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15288
  br i1 %8, label %10, label %9, !dbg !15290

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15291
  br label %10, !dbg !15293

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !15294
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15296
  br i1 %11, label %13, label %12, !dbg !15297

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15298
  unreachable, !dbg !15298

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15278
  call void @llvm.dbg.value(metadata i32 %14, metadata !14052, metadata !DIExpression()) #23, !dbg !15280
  call void @llvm.dbg.value(metadata i32 %14, metadata !14046, metadata !DIExpression()) #23, !dbg !15276
  call void @llvm.dbg.value(metadata i32 %14, metadata !15273, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !15299
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15301, !srcloc !14094
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15270, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i32 undef, metadata !15271, metadata !DIExpression()), !dbg !15275
  ret %struct.k_thread* %7, !dbg !15302
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15303 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15305, metadata !DIExpression()), !dbg !15310
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15306, metadata !DIExpression()), !dbg !15310
  call void @llvm.dbg.value(metadata i32 0, metadata !15307, metadata !DIExpression()), !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15312
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15314, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15316
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15316
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15312
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15317
  br i1 %3, label %5, label %4, !dbg !15318

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15319
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15319
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15319
  unreachable, !dbg !15319

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15316
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15312
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15320
  call void @llvm.dbg.value(metadata i32 undef, metadata !15309, metadata !DIExpression()), !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15306, metadata !DIExpression()), !dbg !15310
  call void @llvm.dbg.value(metadata i32 undef, metadata !15307, metadata !DIExpression()), !dbg !15311
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15306, metadata !DIExpression()), !dbg !15310
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15324
  br i1 %8, label %11, label %9, !dbg !15326

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15327
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15329
  br label %11, !dbg !15330

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !15331
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15333
  br i1 %12, label %14, label %13, !dbg !15334

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15335
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15335
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15335
  unreachable, !dbg !15335

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15314
  call void @llvm.dbg.value(metadata i32 %15, metadata !14052, metadata !DIExpression()) #23, !dbg !15316
  call void @llvm.dbg.value(metadata i32 %15, metadata !14046, metadata !DIExpression()) #23, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %15, metadata !15309, metadata !DIExpression()), !dbg !15311
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15331
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !15336
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15338, !srcloc !14094
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15306, metadata !DIExpression()), !dbg !15310
  call void @llvm.dbg.value(metadata i32 undef, metadata !15307, metadata !DIExpression()), !dbg !15311
  ret %struct.k_thread* %7, !dbg !15339
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15340 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15342, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15150, metadata !DIExpression()) #23, !dbg !15344
  call void @llvm.dbg.value(metadata i32 0, metadata !15151, metadata !DIExpression()) #23, !dbg !15346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15347
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15349, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15351
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15351
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15347
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15352
  br i1 %3, label %5, label %4, !dbg !15353

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15354
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15354
  unreachable, !dbg !15354

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15351
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15347
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15355
  call void @llvm.dbg.value(metadata i32 undef, metadata !15153, metadata !DIExpression()) #23, !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()) #23, !dbg !15346
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15356
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15357
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !15357
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15359
  br i1 %6, label %8, label %7, !dbg !15360

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15361
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15361
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15361
  unreachable, !dbg !15361

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15349
  call void @llvm.dbg.value(metadata i32 %9, metadata !14052, metadata !DIExpression()) #23, !dbg !15351
  call void @llvm.dbg.value(metadata i32 %9, metadata !14046, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 %9, metadata !15153, metadata !DIExpression()) #23, !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15357
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !15362
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15364, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !15151, metadata !DIExpression()) #23, !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()) #23, !dbg !15346
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15365
  ret void, !dbg !15366
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15369, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i32 %1, metadata !15370, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i8 0, metadata !15371, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i32 0, metadata !15372, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15377
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15379, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15381
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15381
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15377
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15382
  br i1 %4, label %6, label %5, !dbg !15383

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15384
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15384
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15384
  unreachable, !dbg !15384

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15381
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15377
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15385
  call void @llvm.dbg.value(metadata i32 undef, metadata !15374, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata i8 poison, metadata !15371, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15372, metadata !DIExpression()), !dbg !15376
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15386
  call void @llvm.dbg.value(metadata i1 %9, metadata !15371, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15375
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15389

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14232, metadata !DIExpression()) #23, !dbg !15390
  %14 = load i8, i8* %7, align 1, !dbg !15396
  %15 = and i8 %14, 127, !dbg !15396
  store i8 %15, i8* %7, align 1, !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14240, metadata !DIExpression()) #23, !dbg !15397
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15399
  store i8 %12, i8* %11, align 2, !dbg !15400
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14249, metadata !DIExpression()) #23, !dbg !15401
  %16 = load i8, i8* %7, align 1, !dbg !15403
  %17 = or i8 %16, -128, !dbg !15403
  store i8 %17, i8* %7, align 1, !dbg !15403
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14256, metadata !DIExpression()) #23, !dbg !15404
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14263, metadata !DIExpression()) #23, !dbg !15406
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14269, metadata !DIExpression()) #23, !dbg !15406
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15408
  br i1 %18, label %19, label %20, !dbg !15409

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 186) #25, !dbg !15410
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 186) #25, !dbg !15410
  unreachable, !dbg !15410

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15411
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14270, metadata !DIExpression()) #23, !dbg !15406
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15412
  br i1 %22, label %32, label %23, !dbg !15411

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14270, metadata !DIExpression()) #23, !dbg !15406
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15413
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14270, metadata !DIExpression()) #23, !dbg !15406
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15414
  %27 = icmp sgt i32 %26, 0, !dbg !15415
  br i1 %27, label %28, label %29, !dbg !15416

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15417
  br label %33, !dbg !15418

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15412
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14270, metadata !DIExpression()) #23, !dbg !15406
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15412
  br i1 %31, label %32, label %23, !dbg !15411, !llvm.loop !15419

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15421
  br label %33, !dbg !15422

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15423
  br label %35, !dbg !15424

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15425
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !15427
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15429
  br i1 %36, label %38, label %37, !dbg !15430

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15431
  unreachable, !dbg !15431

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15379
  call void @llvm.dbg.value(metadata i32 %39, metadata !14052, metadata !DIExpression()) #23, !dbg !15381
  call void @llvm.dbg.value(metadata i32 %39, metadata !14046, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 %39, metadata !15374, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15427
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !15432
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15434, !srcloc !14094
  call void @llvm.dbg.value(metadata i8 poison, metadata !15371, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15372, metadata !DIExpression()), !dbg !15376
  ret i1 %9, !dbg !15435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15440, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata i32 %1, metadata !15441, metadata !DIExpression()), !dbg !15443
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15444
  call void @llvm.dbg.value(metadata i1 %3, metadata !15442, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15443
  br i1 %3, label %4, label %12, !dbg !15445

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15447
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15448
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15448
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15448
  %9 = load i8, i8* %8, align 1, !dbg !15448
  %10 = icmp eq i8 %9, 0, !dbg !15449
  br i1 %10, label %11, label %12, !dbg !15450

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15451
  br label %12, !dbg !15453

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15454
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15455 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15457, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15461
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15463, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15461
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15466
  br i1 %2, label %4, label %3, !dbg !15467

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15468
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15468
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15468
  unreachable, !dbg !15468

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15461
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15469
  call void @llvm.dbg.value(metadata i32 undef, metadata !15459, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15457, metadata !DIExpression()), !dbg !15460
  tail call fastcc void @z_sched_lock() #24, !dbg !15470
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !15473
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15475
  br i1 %5, label %7, label %6, !dbg !15476

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15477
  unreachable, !dbg !15477

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15463
  call void @llvm.dbg.value(metadata i32 %8, metadata !14052, metadata !DIExpression()) #23, !dbg !15465
  call void @llvm.dbg.value(metadata i32 %8, metadata !14046, metadata !DIExpression()) #23, !dbg !15461
  call void @llvm.dbg.value(metadata i32 %8, metadata !15459, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15473
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !15478
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15480, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !15457, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15457, metadata !DIExpression()), !dbg !15460
  ret void, !dbg !15481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15482 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15483, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %1, metadata !14768, metadata !DIExpression()) #23, !dbg !15488
  %2 = icmp eq i32 %1, 0, !dbg !15489
  br i1 %2, label %4, label %3, !dbg !15490

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.308, i32 0, i32 0), i32 noundef 253) #25, !dbg !15491
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.281, i32 0, i32 0)) #25, !dbg !15491
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.308, i32 0, i32 0), i32 noundef 253) #25, !dbg !15491
  unreachable, !dbg !15491

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15493
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15493
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15493
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15493
  %9 = load i8, i8* %8, align 1, !dbg !15493
  %10 = icmp eq i8 %9, 1, !dbg !15493
  br i1 %10, label %11, label %12, !dbg !15496

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.308, i32 0, i32 0), i32 noundef 254) #25, !dbg !15497
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.281, i32 0, i32 0)) #25, !dbg !15497
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.308, i32 0, i32 0), i32 noundef 254) #25, !dbg !15497
  unreachable, !dbg !15497

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15499
  store i8 %13, i8* %8, align 1, !dbg !15499
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15500, !srcloc !15502
  ret void, !dbg !15503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15504 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15506, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15510
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15512, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15510
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15515
  br i1 %2, label %4, label %3, !dbg !15516

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15517
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15517
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15517
  unreachable, !dbg !15517

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15510
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15518
  call void @llvm.dbg.value(metadata i32 undef, metadata !15508, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i32 undef, metadata !15506, metadata !DIExpression()), !dbg !15509
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15519
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15519
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15519
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15519
  %9 = load i8, i8* %8, align 1, !dbg !15519
  %10 = icmp eq i8 %9, 0, !dbg !15519
  br i1 %10, label %11, label %12, !dbg !15524

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 999) #25, !dbg !15525
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.281, i32 0, i32 0)) #25, !dbg !15525
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 999) #25, !dbg !15525
  unreachable, !dbg !15525

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15527, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %13, metadata !14768, metadata !DIExpression()) #23, !dbg !15532
  %14 = icmp eq i32 %13, 0, !dbg !15533
  br i1 %14, label %16, label %15, !dbg !15534

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15535
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.281, i32 0, i32 0)) #25, !dbg !15535
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15535
  unreachable, !dbg !15535

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15537
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15538
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15538
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15538
  %21 = load i8, i8* %20, align 1, !dbg !15539
  %22 = add i8 %21, 1, !dbg !15539
  store i8 %22, i8* %20, align 1, !dbg !15539
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15540
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !15541
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15543
  br i1 %23, label %25, label %24, !dbg !15544

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !15545
  unreachable, !dbg !15545

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15512
  call void @llvm.dbg.value(metadata i32 %26, metadata !14052, metadata !DIExpression()) #23, !dbg !15514
  call void @llvm.dbg.value(metadata i32 %26, metadata !14046, metadata !DIExpression()) #23, !dbg !15510
  call void @llvm.dbg.value(metadata i32 %26, metadata !15508, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !15541
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !15546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15548, !srcloc !14094
  call void @llvm.dbg.value(metadata i32 1, metadata !15506, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i32 undef, metadata !15506, metadata !DIExpression()), !dbg !15509
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15549
  ret void, !dbg !15550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15551 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15552
  ret %struct.k_thread* %1, !dbg !15553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15554 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15558, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15559, metadata !DIExpression()), !dbg !15563
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15564
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15560, metadata !DIExpression()), !dbg !15563
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15565
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15561, metadata !DIExpression()), !dbg !15563
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15566
  call void @llvm.dbg.value(metadata i32 %5, metadata !15562, metadata !DIExpression()), !dbg !15563
  %6 = icmp sgt i32 %5, 0, !dbg !15567
  br i1 %6, label %17, label %7, !dbg !15569

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15570
  br i1 %8, label %17, label %9, !dbg !15572

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15573
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15573
  %12 = load i32, i32* %11, align 8, !dbg !15573
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15575
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15575
  %15 = load i32, i32* %14, align 8, !dbg !15575
  %16 = icmp ult i32 %12, %15, !dbg !15576
  br label %17, !dbg !15577

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15578
  ret i1 %18, !dbg !15579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15580 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15597, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15598, metadata !DIExpression()), !dbg !15612
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15613
  br i1 %4, label %5, label %6, !dbg !15616

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15617
  unreachable, !dbg !15617

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15619
  %8 = load i32, i32* %7, align 4, !dbg !15620
  %9 = add nsw i32 %8, 1, !dbg !15620
  store i32 %9, i32* %7, align 4, !dbg !15620
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15621
  store i32 %8, i32* %10, align 8, !dbg !15622
  %11 = load i32, i32* %7, align 4, !dbg !15623
  %12 = icmp eq i32 %11, 0, !dbg !15624
  br i1 %12, label %13, label %35, !dbg !15625

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15626
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15626
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15600, metadata !DIExpression()), !dbg !15626
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15626
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15626
  %17 = load i32, i32* %16, align 4, !dbg !15626
  %18 = shl i32 %17, 2, !dbg !15626
  %19 = alloca i8, i32 %18, align 8, !dbg !15626
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15626
  store i8* %19, i8** %20, align 4, !dbg !15626
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15626
  %22 = alloca i8, i32 %17, align 8, !dbg !15626
  store i8* %22, i8** %21, align 4, !dbg !15626
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15626
  store i32 -1, i32* %23, align 4, !dbg !15626
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15627
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15609, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15599, metadata !DIExpression()), !dbg !15612
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15629
  br i1 %25, label %26, label %27, !dbg !15626

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15629
  br label %35, !dbg !15630

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15599, metadata !DIExpression()), !dbg !15612
  %29 = load i32, i32* %7, align 4, !dbg !15631
  %30 = add nsw i32 %29, 1, !dbg !15631
  store i32 %30, i32* %7, align 4, !dbg !15631
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15633
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15633
  store i32 %29, i32* %32, align 8, !dbg !15634
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15627
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15609, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15599, metadata !DIExpression()), !dbg !15612
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15629
  br i1 %34, label %26, label %27, !dbg !15626, !llvm.loop !15635

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15637
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15638
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !15639
  ret void, !dbg !15640
}

; Function Attrs: optsize
declare !dbg !15641 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15646 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15649 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15651, metadata !DIExpression()), !dbg !15653
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15652, metadata !DIExpression()), !dbg !15653
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15654
  br i1 %3, label %4, label %5, !dbg !15657

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15658
  unreachable, !dbg !15658

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15660
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15661
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !15662
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15663
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15663
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15665
  br i1 %10, label %11, label %13, !dbg !15666

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15667
  store i32 0, i32* %12, align 4, !dbg !15669
  br label %13, !dbg !15670

13:                                               ; preds = %11, %5
  ret void, !dbg !15671
}

; Function Attrs: optsize
declare !dbg !15672 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15673 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15677, metadata !DIExpression()), !dbg !15680
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15678, metadata !DIExpression()), !dbg !15680
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15681
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !15682
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15679, metadata !DIExpression()), !dbg !15680
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15678, metadata !DIExpression()), !dbg !15680
  ret %struct.k_thread* %4, !dbg !15683
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15684 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15688, metadata !DIExpression()), !dbg !15689
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15690
  ret %struct.rbnode* %2, !dbg !15691
}

; Function Attrs: optsize
declare !dbg !15692 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15695 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15705, metadata !DIExpression()), !dbg !15709
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15710
  %3 = load i32, i32* %2, align 4, !dbg !15710
  %4 = icmp eq i32 %3, 0, !dbg !15712
  br i1 %4, label %10, label %5, !dbg !15713

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15706, metadata !DIExpression()), !dbg !15709
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15714, !range !7634
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15715
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15707, metadata !DIExpression()), !dbg !15709
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef %7) #24, !dbg !15716
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15708, metadata !DIExpression()), !dbg !15709
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15706, metadata !DIExpression()), !dbg !15709
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15709
  ret %struct.k_thread* %11, !dbg !15717
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15718 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15722, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 0, metadata !15723, metadata !DIExpression()), !dbg !15725
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.313(%struct._wait_q_t* noundef %0) #24, !dbg !15726
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15724, metadata !DIExpression()), !dbg !15725
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15727
  br i1 %3, label %8, label %4, !dbg !15728

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15729
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15731
  call void @llvm.dbg.value(metadata i32 1, metadata !15723, metadata !DIExpression()), !dbg !15725
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.313(%struct._wait_q_t* noundef %0) #24, !dbg !15726
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15724, metadata !DIExpression()), !dbg !15725
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15727
  br i1 %7, label %8, label %4, !dbg !15728, !llvm.loop !15732

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15725
  ret i32 %9, !dbg !15734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.313(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15735 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15737, metadata !DIExpression()), !dbg !15738
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15739
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef %2) #24, !dbg !15740
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15741
  ret %struct.k_thread* %4, !dbg !15742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !15743 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15752, metadata !DIExpression()), !dbg !15753
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15754
  tail call fastcc void @sys_dlist_init.314(%struct._dnode* noundef nonnull %2) #24, !dbg !15755
  ret void, !dbg !15756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.314(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15757 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15761, metadata !DIExpression()), !dbg !15762
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15763
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15764
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15765
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15766
  ret void, !dbg !15767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15768 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15769
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15770
  ret void, !dbg !15771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15772 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15777, metadata !DIExpression()), !dbg !15778
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15779
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15779
  %4 = load i8, i8* %3, align 2, !dbg !15779
  %5 = sext i8 %4 to i32, !dbg !15780
  ret i32 %5, !dbg !15781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15782 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15786, metadata !DIExpression()), !dbg !15789
  call void @llvm.dbg.value(metadata i32 %1, metadata !15787, metadata !DIExpression()), !dbg !15789
  %3 = add i32 %1, 16, !dbg !15790
  %4 = icmp ult i32 %3, 31, !dbg !15790
  br i1 %4, label %6, label %5, !dbg !15790

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15794
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.318, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !15794
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15794
  unreachable, !dbg !15794

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15796, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %7, metadata !14768, metadata !DIExpression()) #23, !dbg !15801
  %8 = icmp eq i32 %7, 0, !dbg !15802
  br i1 %8, label %10, label %9, !dbg !15803

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15804
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.281, i32 0, i32 0)) #25, !dbg !15804
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15804
  unreachable, !dbg !15804

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15788, metadata !DIExpression()), !dbg !15789
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15806
  ret void, !dbg !15807
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15808 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15809
  br i1 %1, label %8, label %2, !dbg !15810

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15811
  br i1 %3, label %8, label %4, !dbg !15812

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15813
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15814
  %7 = xor i1 %6, true, !dbg !15812
  br label %8, !dbg !15812

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15816 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15817, !range !6797
  %2 = icmp eq i8 %1, 0, !dbg !15817
  ret i1 %2, !dbg !15818
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15819 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15822, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %1, metadata !14768, metadata !DIExpression()) #23, !dbg !15827
  %2 = icmp eq i32 %1, 0, !dbg !15828
  br i1 %2, label %4, label %3, !dbg !15829

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15830
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.281, i32 0, i32 0)) #25, !dbg !15830
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15830
  unreachable, !dbg !15830

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15832
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15834, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15832
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15837
  br i1 %6, label %8, label %7, !dbg !15838

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15839
  unreachable, !dbg !15839

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15832
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15840
  call void @llvm.dbg.value(metadata i32 undef, metadata !15821, metadata !DIExpression()), !dbg !15841
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15842
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14232, metadata !DIExpression()) #23, !dbg !15845
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15847
  %11 = load i8, i8* %10, align 1, !dbg !15848
  %12 = and i8 %11, 127, !dbg !15848
  store i8 %12, i8* %10, align 1, !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14240, metadata !DIExpression()) #23, !dbg !15849
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !15851
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15852
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14249, metadata !DIExpression()) #23, !dbg !15853
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15855
  %15 = load i8, i8* %14, align 1, !dbg !15856
  %16 = or i8 %15, -128, !dbg !15856
  store i8 %16, i8* %14, align 1, !dbg !15856
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14256, metadata !DIExpression()) #23, !dbg !15857
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14263, metadata !DIExpression()) #23, !dbg !15859
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14269, metadata !DIExpression()) #23, !dbg !15859
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !15861
  br i1 %17, label %18, label %19, !dbg !15862

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 186) #25, !dbg !15863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 186) #25, !dbg !15863
  unreachable, !dbg !15863

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.279(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15864
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14270, metadata !DIExpression()) #23, !dbg !15859
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15865
  br i1 %21, label %32, label %22, !dbg !15864

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14270, metadata !DIExpression()) #23, !dbg !15859
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15866
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14270, metadata !DIExpression()) #23, !dbg !15859
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !15867
  %26 = icmp sgt i32 %25, 0, !dbg !15868
  br i1 %26, label %27, label %29, !dbg !15869

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15870
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !15871
  br label %34, !dbg !15872

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !15865
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14270, metadata !DIExpression()) #23, !dbg !15859
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15865
  br i1 %31, label %32, label %22, !dbg !15864, !llvm.loop !15873

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15875
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !15876
  br label %34, !dbg !15877

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !14716, metadata !DIExpression()) #23, !dbg !15879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14721, metadata !DIExpression()) #23, !dbg !15879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14725, metadata !DIExpression()) #23, !dbg !15881
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15883
  br i1 %35, label %37, label %36, !dbg !15884

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !15885
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15885
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !15885
  unreachable, !dbg !15885

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15834
  call void @llvm.dbg.value(metadata i32 %38, metadata !14052, metadata !DIExpression()) #23, !dbg !15836
  call void @llvm.dbg.value(metadata i32 %38, metadata !14046, metadata !DIExpression()) #23, !dbg !15832
  call void @llvm.dbg.value(metadata i32 %38, metadata !15821, metadata !DIExpression()), !dbg !15841
  call void @llvm.dbg.value(metadata i32 undef, metadata !14716, metadata !DIExpression()) #23, !dbg !15879
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !15886
  ret void, !dbg !15887
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15888 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15892, metadata !DIExpression()), !dbg !15895
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15896, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %3, metadata !14768, metadata !DIExpression()) #23, !dbg !15901
  %4 = icmp eq i32 %3, 0, !dbg !15902
  br i1 %4, label %6, label %5, !dbg !15903

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15904
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.281, i32 0, i32 0)) #25, !dbg !15904
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15904
  unreachable, !dbg !15904

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15906
  br i1 %7, label %8, label %10, !dbg !15908

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15909
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15911
  br label %15, !dbg !15912

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15893, metadata !DIExpression()), !dbg !15895
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15913
  %12 = sext i32 %11 to i64, !dbg !15913
  call void @llvm.dbg.value(metadata i64 %12, metadata !15893, metadata !DIExpression()), !dbg !15895
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !15914
  %14 = trunc i64 %13 to i32, !dbg !15914
  call void @llvm.dbg.value(metadata i32 %14, metadata !15894, metadata !DIExpression()), !dbg !15895
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15895
  ret i32 %16, !dbg !15915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15916 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15920, metadata !DIExpression()), !dbg !15921
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15922, !srcloc !15924
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15925
  ret void, !dbg !15926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15927 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15931, metadata !DIExpression()), !dbg !15935
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15936, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %2, metadata !14768, metadata !DIExpression()) #23, !dbg !15941
  %3 = icmp eq i32 %2, 0, !dbg !15942
  br i1 %3, label %5, label %4, !dbg !15943

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15944
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.281, i32 0, i32 0)) #25, !dbg !15944
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15944
  unreachable, !dbg !15944

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15946
  br i1 %6, label %7, label %8, !dbg !15948

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !15949
  br label %43, !dbg !15951

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15933, metadata !DIExpression()), !dbg !15935
  %9 = icmp sgt i64 %0, -3, !dbg !15952
  br i1 %9, label %10, label %14, !dbg !15954

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15955
  %12 = trunc i64 %0 to i32, !dbg !15957
  %13 = add i32 %11, %12, !dbg !15957
  call void @llvm.dbg.value(metadata i32 %13, metadata !15932, metadata !DIExpression()), !dbg !15935
  br label %17, !dbg !15958

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15959
  %16 = sub i32 -2, %15, !dbg !15959
  call void @llvm.dbg.value(metadata i32 %16, metadata !15932, metadata !DIExpression()), !dbg !15935
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15961
  call void @llvm.dbg.value(metadata i32 %18, metadata !15932, metadata !DIExpression()), !dbg !15935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !15962
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15964, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15962
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15967
  br i1 %20, label %22, label %21, !dbg !15968

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15969
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15969
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !15969
  unreachable, !dbg !15969

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15962
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !15934, metadata !DIExpression()), !dbg !15935
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15971
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15972
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !15973
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15974
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15975
  tail call fastcc void @z_add_thread_timeout.294(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !15975
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15976
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !15977
  call void @llvm.dbg.value(metadata i32 undef, metadata !14716, metadata !DIExpression()) #23, !dbg !15978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14721, metadata !DIExpression()) #23, !dbg !15978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14725, metadata !DIExpression()) #23, !dbg !15980
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15982
  br i1 %27, label %29, label %28, !dbg !15983

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !15984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !15984
  unreachable, !dbg !15984

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %30, metadata !14052, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %30, metadata !14046, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %30, metadata !15934, metadata !DIExpression()), !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !14716, metadata !DIExpression()) #23, !dbg !15978
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !15985
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15986
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !15986
  br i1 %33, label %34, label %35, !dbg !15989

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15990
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.281, i32 0, i32 0)) #25, !dbg !15990
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15990
  unreachable, !dbg !15990

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15992
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15993
  %38 = zext i32 %37 to i64, !dbg !15993
  %39 = sub nsw i64 %36, %38, !dbg !15994
  call void @llvm.dbg.value(metadata i64 %39, metadata !15931, metadata !DIExpression()), !dbg !15935
  %40 = icmp sgt i64 %39, 0, !dbg !15995
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15995
  %42 = trunc i64 %41 to i32, !dbg !15995
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15935
  ret i32 %44, !dbg !15996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15997 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15999, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata i64 %0, metadata !14100, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.value(metadata i32 10000, metadata !14103, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.value(metadata i32 1000, metadata !14104, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.value(metadata i8 1, metadata !14105, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.value(metadata i1 false, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16001
  call void @llvm.dbg.value(metadata i1 false, metadata !14107, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16001
  call void @llvm.dbg.value(metadata i8 0, metadata !14108, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.value(metadata i1 false, metadata !14109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16001
  call void @llvm.dbg.value(metadata i1 true, metadata !14110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16001
  call void @llvm.dbg.value(metadata i64 0, metadata !14111, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.value(metadata i64 0, metadata !14111, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.value(metadata i64 %0, metadata !14100, metadata !DIExpression()), !dbg !16001
  %2 = udiv i64 %0, 10, !dbg !16003
  ret i64 %2, !dbg !16007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16008 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16009, !srcloc !16011
  tail call void @z_impl_k_yield() #24, !dbg !16012
  ret void, !dbg !16013
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16018, metadata !DIExpression()), !dbg !16020
  %2 = sext i32 %0 to i64, !dbg !16021
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16022
  call void @llvm.dbg.value(metadata i64 %3, metadata !16019, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16020
  %4 = shl i64 %3, 32, !dbg !16023
  %5 = ashr exact i64 %4, 32, !dbg !16023
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16024
  call void @llvm.dbg.value(metadata i32 %6, metadata !16019, metadata !DIExpression()), !dbg !16020
  %7 = sext i32 %6 to i64, !dbg !16025
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16026
  %9 = trunc i64 %8 to i32, !dbg !16026
  ret i32 %9, !dbg !16027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16028 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16030, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i64 %0, metadata !14100, metadata !DIExpression()), !dbg !16032
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14103, metadata !DIExpression()), !dbg !16032
  call void @llvm.dbg.value(metadata i32 10000, metadata !14104, metadata !DIExpression()), !dbg !16032
  call void @llvm.dbg.value(metadata i8 1, metadata !14105, metadata !DIExpression()), !dbg !16032
  call void @llvm.dbg.value(metadata i1 false, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16032
  call void @llvm.dbg.value(metadata i1 true, metadata !14107, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16032
  call void @llvm.dbg.value(metadata i8 0, metadata !14108, metadata !DIExpression()), !dbg !16032
  call void @llvm.dbg.value(metadata i1 false, metadata !14109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16032
  call void @llvm.dbg.value(metadata i1 true, metadata !14110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16032
  call void @llvm.dbg.value(metadata i64 0, metadata !14111, metadata !DIExpression()), !dbg !16032
  call void @llvm.dbg.value(metadata i64 0, metadata !14111, metadata !DIExpression()), !dbg !16032
  %2 = add i64 %0, 99, !dbg !16034
  call void @llvm.dbg.value(metadata i64 %2, metadata !14100, metadata !DIExpression()), !dbg !16032
  %3 = udiv i64 %2, 100, !dbg !16035
  ret i64 %3, !dbg !16036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16037 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16039, metadata !DIExpression()), !dbg !16040
  call void @llvm.dbg.value(metadata i64 %0, metadata !14100, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.value(metadata i32 10000, metadata !14103, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14104, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.value(metadata i8 1, metadata !14105, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.value(metadata i1 false, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16041
  call void @llvm.dbg.value(metadata i1 false, metadata !14107, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16041
  call void @llvm.dbg.value(metadata i8 0, metadata !14108, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.value(metadata i1 true, metadata !14109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16041
  call void @llvm.dbg.value(metadata i1 false, metadata !14110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16041
  call void @llvm.dbg.value(metadata i64 0, metadata !14111, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.value(metadata i64 0, metadata !14111, metadata !DIExpression()), !dbg !16041
  %2 = mul i64 %0, 100, !dbg !16043
  ret i64 %2, !dbg !16045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16046 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16048, metadata !DIExpression()), !dbg !16049
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16050
  br i1 %2, label %14, label %3, !dbg !16052

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16053
  %5 = icmp slt i32 %4, 0, !dbg !16055
  br i1 %5, label %6, label %10, !dbg !16056

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16057
  %8 = load i8, i8* %7, align 1, !dbg !16057
  %9 = icmp eq i8 %8, 16, !dbg !16060
  br i1 %9, label %10, label %14, !dbg !16061

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16062
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16063
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16064, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %11, metadata !14768, metadata !DIExpression()) #23, !dbg !16068
  %12 = icmp eq i32 %11, 0, !dbg !16069
  br i1 %12, label %13, label %14, !dbg !16070

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16071
  br label %14, !dbg !16073

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16077, metadata !DIExpression()), !dbg !16078
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16079
  %3 = load i8, i8* %2, align 1, !dbg !16079
  %4 = and i8 %3, 2, !dbg !16080
  %5 = icmp ne i8 %4, 0, !dbg !16081
  ret i1 %5, !dbg !16082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16083 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16088
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16087, metadata !DIExpression()), !dbg !16089
  ret %struct.k_thread* %1, !dbg !16090
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16091 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16092, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %1, metadata !14768, metadata !DIExpression()) #23, !dbg !16095
  %2 = icmp eq i32 %1, 0, !dbg !16096
  br i1 %2, label %3, label %8, !dbg !16097

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16098
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16099
  %6 = icmp ne i32 %5, 0, !dbg !16097
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16101 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16103, metadata !DIExpression()), !dbg !16105
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !16106
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16108, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !16110
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !16110
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !16106
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16111
  br i1 %3, label %5, label %4, !dbg !16112

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !16113
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16113
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !16113
  unreachable, !dbg !16113

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16108
  call void @llvm.dbg.value(metadata i32 %6, metadata !14052, metadata !DIExpression()) #23, !dbg !16110
  call void @llvm.dbg.value(metadata i32 %6, metadata !14046, metadata !DIExpression()) #23, !dbg !16106
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16114
  call void @llvm.dbg.value(metadata i32 %6, metadata !16104, metadata !DIExpression()), !dbg !16105
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16115
  %8 = load i8, i8* %7, align 4, !dbg !16115
  %9 = and i8 %8, 1, !dbg !16117
  %10 = icmp eq i8 %9, 0, !dbg !16118
  br i1 %10, label %15, label %11, !dbg !16119

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !16120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !16120
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16123
  br i1 %12, label %14, label %13, !dbg !16124

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !16125
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16125
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !16125
  unreachable, !dbg !16125

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14074, metadata !DIExpression()) #23, !dbg !16120
  call void @llvm.dbg.value(metadata i32 %6, metadata !14088, metadata !DIExpression()) #23, !dbg !16126
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16128, !srcloc !14094
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.327, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16129
  unreachable, !dbg !16129

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16133
  %17 = load i8, i8* %16, align 1, !dbg !16133
  %18 = and i8 %17, 8, !dbg !16135
  %19 = icmp eq i8 %18, 0, !dbg !16136
  br i1 %19, label %24, label %20, !dbg !16137

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !16138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !16138
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16141
  br i1 %21, label %23, label %22, !dbg !16142

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !16143
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16143
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !16143
  unreachable, !dbg !16143

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14074, metadata !DIExpression()) #23, !dbg !16138
  call void @llvm.dbg.value(metadata i32 %6, metadata !14088, metadata !DIExpression()) #23, !dbg !16144
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16146, !srcloc !14094
  br label %39, !dbg !16147

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16148
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16149
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16151
  br i1 %26, label %27, label %35, !dbg !16152

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16153, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %28, metadata !14768, metadata !DIExpression()) #23, !dbg !16156
  %29 = icmp eq i32 %28, 0, !dbg !16157
  br i1 %29, label %30, label %35, !dbg !16158

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14716, metadata !DIExpression()) #23, !dbg !16159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14721, metadata !DIExpression()) #23, !dbg !16159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14725, metadata !DIExpression()) #23, !dbg !16162
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16164
  br i1 %31, label %33, label %32, !dbg !16165

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !16166
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16166
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !16166
  unreachable, !dbg !16166

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14716, metadata !DIExpression()) #23, !dbg !16159
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16167
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.328, i32 0, i32 0)) #25, !dbg !16168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16168
  unreachable, !dbg !16168

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !16172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !16172
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16174
  br i1 %36, label %38, label %37, !dbg !16175

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !16176
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16176
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !16176
  unreachable, !dbg !16176

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14074, metadata !DIExpression()) #23, !dbg !16172
  call void @llvm.dbg.value(metadata i32 %6, metadata !14088, metadata !DIExpression()) #23, !dbg !16177
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16179, !srcloc !14094
  br label %39, !dbg !16180

39:                                               ; preds = %38, %23
  ret void, !dbg !16180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16183, metadata !DIExpression()), !dbg !16184
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16185
  %3 = load i8, i8* %2, align 1, !dbg !16185
  %4 = and i8 %3, 8, !dbg !16187
  %5 = icmp eq i8 %4, 0, !dbg !16188
  br i1 %5, label %6, label %20, !dbg !16189

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16190
  %8 = or i8 %7, 8, !dbg !16190
  store i8 %8, i8* %2, align 1, !dbg !16190
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16192
  br i1 %9, label %10, label %12, !dbg !16194

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14232, metadata !DIExpression()) #23, !dbg !16195
  %11 = and i8 %8, 95, !dbg !16198
  store i8 %11, i8* %2, align 1, !dbg !16198
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14240, metadata !DIExpression()) #23, !dbg !16199
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16201
  br label %12, !dbg !16202

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16203
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16203
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16205
  br i1 %15, label %17, label %16, !dbg !16206

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16207
  br label %17, !dbg !16209

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16210
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16211
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16212
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16213
  br label %20, !dbg !16214

20:                                               ; preds = %17, %1
  ret void, !dbg !16215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16216 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16220, metadata !DIExpression()), !dbg !16222
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.313(%struct._wait_q_t* noundef %0) #24, !dbg !16223
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16221, metadata !DIExpression()), !dbg !16222
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16224
  br i1 %3, label %10, label %4, !dbg !16225

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16226
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16228
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16229, metadata !DIExpression()), !dbg !16235
  call void @llvm.dbg.value(metadata i32 0, metadata !16234, metadata !DIExpression()), !dbg !16235
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16237
  store i32 0, i32* %7, align 4, !dbg !16238
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16239
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.313(%struct._wait_q_t* noundef %0) #24, !dbg !16223
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16221, metadata !DIExpression()), !dbg !16222
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16224
  br i1 %9, label %10, label %4, !dbg !16225, !llvm.loop !16240

10:                                               ; preds = %4, %1
  ret void, !dbg !16242
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16243 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16248, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16247, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !16252
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16254, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !16256
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !16256
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !16252
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16257
  br i1 %4, label %6, label %5, !dbg !16258

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !16259
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !16259
  unreachable, !dbg !16259

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16254
  call void @llvm.dbg.value(metadata i32 %7, metadata !14052, metadata !DIExpression()) #23, !dbg !16256
  call void @llvm.dbg.value(metadata i32 %7, metadata !14046, metadata !DIExpression()) #23, !dbg !16252
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16260
  call void @llvm.dbg.value(metadata i32 %7, metadata !16249, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.value(metadata i32 0, metadata !16250, metadata !DIExpression()), !dbg !16251
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16261
  %9 = load i8, i8* %8, align 1, !dbg !16261
  %10 = and i8 %9, 8, !dbg !16263
  %11 = icmp eq i8 %10, 0, !dbg !16264
  br i1 %11, label %12, label %35, !dbg !16265

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16248, metadata !DIExpression()), !dbg !16251
  %14 = icmp eq i64 %13, 0, !dbg !16266
  br i1 %14, label %35, label %15, !dbg !16268

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16269
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16271
  br i1 %17, label %35, label %18, !dbg !16272

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16273
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16273
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16274
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16275
  br i1 %22, label %35, label %23, !dbg !16276

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16277, !srcloc !14772
  call void @llvm.dbg.value(metadata i32 %24, metadata !14768, metadata !DIExpression()) #23, !dbg !16283
  %25 = icmp eq i32 %24, 0, !dbg !16284
  br i1 %25, label %27, label %26, !dbg !16285

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.331, i32 0, i32 0)) #25, !dbg !16286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.278, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16286
  unreachable, !dbg !16286

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16288
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16289
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16290
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16291
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16292
  call void @llvm.dbg.value(metadata i32 undef, metadata !14716, metadata !DIExpression()) #23, !dbg !16293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14721, metadata !DIExpression()) #23, !dbg !16293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14725, metadata !DIExpression()) #23, !dbg !16295
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16297
  br i1 %31, label %33, label %32, !dbg !16298

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !16299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 225) #25, !dbg !16299
  unreachable, !dbg !16299

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14716, metadata !DIExpression()) #23, !dbg !16293
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16300
  call void @llvm.dbg.value(metadata i32 %34, metadata !16250, metadata !DIExpression()), !dbg !16251
  br label %40, !dbg !16301

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16302
  call void @llvm.dbg.value(metadata i32 %36, metadata !16250, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !16303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !16303
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16305
  br i1 %37, label %39, label %38, !dbg !16306

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !16307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !16307
  unreachable, !dbg !16307

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14074, metadata !DIExpression()) #23, !dbg !16303
  call void @llvm.dbg.value(metadata i32 %7, metadata !14088, metadata !DIExpression()) #23, !dbg !16308
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16310, !srcloc !14094
  br label %40, !dbg !16311

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16251
  ret i32 %41, !dbg !16312
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16313 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16317, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata i32 %1, metadata !16318, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata i8* %2, metadata !16319, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata i8 0, metadata !16321, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata i32 0, metadata !16322, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14040, metadata !DIExpression()) #23, !dbg !16327
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16329, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !16327
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16332
  br i1 %5, label %7, label %6, !dbg !16333

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !16334
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16334
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 148) #25, !dbg !16334
  unreachable, !dbg !16334

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !16327
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i8 poison, metadata !16321, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata i32 undef, metadata !16322, metadata !DIExpression()), !dbg !16326
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16336
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16320, metadata !DIExpression()), !dbg !16325
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16339
  br i1 %10, label %15, label %11, !dbg !16341

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16342, metadata !DIExpression()), !dbg !16350
  call void @llvm.dbg.value(metadata i32 %1, metadata !16348, metadata !DIExpression()), !dbg !16350
  call void @llvm.dbg.value(metadata i8* %2, metadata !16349, metadata !DIExpression()), !dbg !16350
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16229, metadata !DIExpression()), !dbg !16353
  call void @llvm.dbg.value(metadata i32 %1, metadata !16234, metadata !DIExpression()), !dbg !16353
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16355
  store i32 %1, i32* %12, align 4, !dbg !16356
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16357
  store i8* %2, i8** %13, align 4, !dbg !16358
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16359
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16360
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16361
  call void @llvm.dbg.value(metadata i8 1, metadata !16321, metadata !DIExpression()), !dbg !16325
  br label %15, !dbg !16362

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16321, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !16363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14079, metadata !DIExpression()) #23, !dbg !16363
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16365
  br i1 %16, label %18, label %17, !dbg !16366

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !16367
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.276, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16367
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.273, i32 0, i32 0), i32 noundef 194) #25, !dbg !16367
  unreachable, !dbg !16367

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16325
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16329
  call void @llvm.dbg.value(metadata i32 %20, metadata !14052, metadata !DIExpression()) #23, !dbg !16331
  call void @llvm.dbg.value(metadata i32 %20, metadata !14046, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %20, metadata !16324, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !16363
  call void @llvm.dbg.value(metadata i32 undef, metadata !14088, metadata !DIExpression()) #23, !dbg !16368
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16370, !srcloc !14094
  call void @llvm.dbg.value(metadata i8 poison, metadata !16321, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata i32 undef, metadata !16322, metadata !DIExpression()), !dbg !16326
  ret i1 %19, !dbg !16371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16372 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16378, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i64 undef, metadata !16380, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16377, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16379, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i8** %4, metadata !16381, metadata !DIExpression()), !dbg !16383
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16384
  call void @llvm.dbg.value(metadata i32 %6, metadata !16382, metadata !DIExpression()), !dbg !16383
  %7 = icmp eq i8** %4, null, !dbg !16385
  br i1 %7, label %12, label %8, !dbg !16387

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16388
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16390
  %11 = load i8*, i8** %10, align 4, !dbg !16390
  store i8* %11, i8** %4, align 4, !dbg !16391
  br label %12, !dbg !16392

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !16394 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16407, metadata !DIExpression()), !dbg !16408
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16409
  tail call fastcc void @z_waitq_init.332(%struct._wait_q_t* noundef %2) #24, !dbg !16410
  ret i32 0, !dbg !16411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.332(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16412 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16417, metadata !DIExpression()), !dbg !16418
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16419
  tail call fastcc void @sys_dlist_init.333(%struct._dnode* noundef %2) #24, !dbg !16420
  ret void, !dbg !16421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.333(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16422 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16427, metadata !DIExpression()), !dbg !16428
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16429
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16430
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16431
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16432
  ret void, !dbg !16433
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16434 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16436, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16524, metadata !DIExpression()) #23, !dbg !16531
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16533, !srcloc !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16536, metadata !DIExpression()) #23, !dbg !16540
  call void @llvm.dbg.value(metadata i32 undef, metadata !16537, metadata !DIExpression()) #23, !dbg !16540
  call void @llvm.dbg.value(metadata i32 undef, metadata !16530, metadata !DIExpression()) #23, !dbg !16531
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16541
  br i1 %3, label %5, label %4, !dbg !16544

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 148) #25, !dbg !16545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.340, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 148) #25, !dbg !16545
  unreachable, !dbg !16545

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16533
  call void @llvm.dbg.value(metadata i32 %6, metadata !16536, metadata !DIExpression()) #23, !dbg !16540
  call void @llvm.dbg.value(metadata i32 %6, metadata !16530, metadata !DIExpression()) #23, !dbg !16531
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16547
  call void @llvm.dbg.value(metadata i32 %6, metadata !16437, metadata !DIExpression()), !dbg !16523
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16548
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !16549
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16442, metadata !DIExpression()), !dbg !16523
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16550
  br i1 %9, label %13, label %10, !dbg !16552

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16553, metadata !DIExpression()), !dbg !16559
  call void @llvm.dbg.value(metadata i32 0, metadata !16558, metadata !DIExpression()), !dbg !16559
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !16562
  store i32 0, i32* %11, align 4, !dbg !16563
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !16564
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16565
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.336, [1 x i32] %12) #25, !dbg !16565
  br label %17, !dbg !16566

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16567, metadata !DIExpression()) #23, !dbg !16573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16572, metadata !DIExpression()) #23, !dbg !16573
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16576
  br i1 %14, label %16, label %15, !dbg !16579

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 194) #25, !dbg !16580
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.342, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 194) #25, !dbg !16580
  unreachable, !dbg !16580

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !16567, metadata !DIExpression()) #23, !dbg !16573
  call void @llvm.dbg.value(metadata i32 %6, metadata !16582, metadata !DIExpression()) #23, !dbg !16585
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16587, !srcloc !16588
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !16589
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16590 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16592, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.value(metadata i32 0, metadata !16595, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16524, metadata !DIExpression()) #23, !dbg !16597
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16599, !srcloc !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16536, metadata !DIExpression()) #23, !dbg !16601
  call void @llvm.dbg.value(metadata i32 undef, metadata !16537, metadata !DIExpression()) #23, !dbg !16601
  call void @llvm.dbg.value(metadata i32 undef, metadata !16530, metadata !DIExpression()) #23, !dbg !16597
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16602
  br i1 %3, label %5, label %4, !dbg !16603

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 148) #25, !dbg !16604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.340, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 148) #25, !dbg !16604
  unreachable, !dbg !16604

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16536, metadata !DIExpression()) #23, !dbg !16601
  call void @llvm.dbg.value(metadata i32 undef, metadata !16530, metadata !DIExpression()) #23, !dbg !16597
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16605
  call void @llvm.dbg.value(metadata i32 undef, metadata !16594, metadata !DIExpression()), !dbg !16596
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !16595, metadata !DIExpression()), !dbg !16596
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16606
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16593, metadata !DIExpression()), !dbg !16596
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16607
  br i1 %8, label %16, label %9, !dbg !16608

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !16595, metadata !DIExpression()), !dbg !16596
  %12 = add nuw nsw i32 %11, 1, !dbg !16609
  call void @llvm.dbg.value(metadata i32 %12, metadata !16595, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !16553, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.value(metadata i32 0, metadata !16558, metadata !DIExpression()), !dbg !16611
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !16613
  store i32 0, i32* %13, align 4, !dbg !16614
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !16615
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16606
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16593, metadata !DIExpression()), !dbg !16596
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16607
  br i1 %15, label %16, label %9, !dbg !16608, !llvm.loop !16616

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !16596
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !16599
  call void @llvm.dbg.value(metadata i32 %18, metadata !16536, metadata !DIExpression()) #23, !dbg !16601
  call void @llvm.dbg.value(metadata i32 %18, metadata !16530, metadata !DIExpression()) #23, !dbg !16597
  call void @llvm.dbg.value(metadata i32 %18, metadata !16594, metadata !DIExpression()), !dbg !16596
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !16618
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.336, [1 x i32] %19) #25, !dbg !16618
  ret i32 %17, !dbg !16619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16620 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16637, metadata !DIExpression()), !dbg !16640
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16635, metadata !DIExpression()), !dbg !16640
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !16636, metadata !DIExpression()), !dbg !16640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.336, metadata !16524, metadata !DIExpression()) #23, !dbg !16641
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16643, !srcloc !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16536, metadata !DIExpression()) #23, !dbg !16645
  call void @llvm.dbg.value(metadata i32 undef, metadata !16537, metadata !DIExpression()) #23, !dbg !16645
  call void @llvm.dbg.value(metadata i32 undef, metadata !16530, metadata !DIExpression()) #23, !dbg !16641
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16646
  br i1 %5, label %7, label %6, !dbg !16647

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 148) #25, !dbg !16648
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.340, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 148) #25, !dbg !16648
  unreachable, !dbg !16648

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !16643
  call void @llvm.dbg.value(metadata i32 %8, metadata !16536, metadata !DIExpression()) #23, !dbg !16645
  call void @llvm.dbg.value(metadata i32 %8, metadata !16530, metadata !DIExpression()) #23, !dbg !16641
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.336) #25, !dbg !16649
  call void @llvm.dbg.value(metadata i32 %8, metadata !16638, metadata !DIExpression()), !dbg !16640
  tail call fastcc void @k_mutex_unlock.345(%struct.k_mutex* noundef %1) #24, !dbg !16650
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16651
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !16652
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.336, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !16652
  call void @llvm.dbg.value(metadata i32 %11, metadata !16639, metadata !DIExpression()), !dbg !16640
  tail call fastcc void @k_mutex_lock.346(%struct.k_mutex* noundef %1) #24, !dbg !16653
  ret i32 %11, !dbg !16654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.345(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16655 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16659, metadata !DIExpression()), !dbg !16660
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16661, !srcloc !16663
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !16664
  ret void, !dbg !16665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.346(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16666 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16671, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16670, metadata !DIExpression()), !dbg !16672
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16673, !srcloc !16675
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !16676
  ret void, !dbg !16677
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16678 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16680
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16681
  ret void, !dbg !16682
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16683 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16693, metadata !DIExpression()), !dbg !16710
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16691, metadata !DIExpression()), !dbg !16710
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16692, metadata !DIExpression()), !dbg !16710
  %5 = icmp eq i64 %4, -1, !dbg !16711
  br i1 %5, label %63, label %6, !dbg !16713

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16714
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.351(%struct._dnode* noundef %7) #24, !dbg !16714
  br i1 %8, label %9, label %10, !dbg !16717

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.354, i32 0, i32 0), i32 noundef 99) #25, !dbg !16718
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.355, i32 0, i32 0)) #25, !dbg !16718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.354, i32 0, i32 0), i32 noundef 99) #25, !dbg !16718
  unreachable, !dbg !16718

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16720
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16721
  call void @llvm.dbg.value(metadata i32 0, metadata !16694, metadata !DIExpression()), !dbg !16722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16723, metadata !DIExpression()) #23, !dbg !16730
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16732, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()) #23, !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !16730
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16740
  br i1 %13, label %15, label %14, !dbg !16743

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !16744
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16744
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !16744
  unreachable, !dbg !16744

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16732
  call void @llvm.dbg.value(metadata i32 %16, metadata !16735, metadata !DIExpression()) #23, !dbg !16739
  call void @llvm.dbg.value(metadata i32 %16, metadata !16729, metadata !DIExpression()) #23, !dbg !16730
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16746
  call void @llvm.dbg.value(metadata i32 %16, metadata !16700, metadata !DIExpression()), !dbg !16722
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()), !dbg !16722
  %17 = icmp slt i64 %4, -1, !dbg !16747
  br i1 %17, label %18, label %24, !dbg !16748

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16749
  %20 = add i64 %4, %19, !dbg !16750
  %21 = sub i64 -2, %20, !dbg !16750
  call void @llvm.dbg.value(metadata i64 %21, metadata !16704, metadata !DIExpression()), !dbg !16751
  %22 = icmp sgt i64 %21, 1, !dbg !16752
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16752
  br label %29, !dbg !16753

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16754
  %26 = tail call fastcc i32 @elapsed.359() #24, !dbg !16756
  %27 = sext i32 %26 to i64, !dbg !16756
  %28 = add nsw i64 %25, %27, !dbg !16757
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16758
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16759
  store i64 %30, i64* %31, align 8, !dbg !16760
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16761
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16701, metadata !DIExpression()), !dbg !16763
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16764
  br i1 %33, label %48, label %34, !dbg !16764

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16765
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16701, metadata !DIExpression()), !dbg !16763
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16769
  %38 = load i64, i64* %37, align 8, !dbg !16769
  %39 = icmp slt i64 %35, %38, !dbg !16770
  br i1 %39, label %40, label %44, !dbg !16771

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16769
  %42 = sub nsw i64 %38, %35, !dbg !16772
  store i64 %42, i64* %41, align 8, !dbg !16772
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16774
  tail call fastcc void @sys_dlist_insert.360(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16775
  br label %49, !dbg !16776

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16777
  store i64 %45, i64* %31, align 8, !dbg !16777
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16778
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16701, metadata !DIExpression()), !dbg !16763
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16764
  br i1 %47, label %48, label %34, !dbg !16764, !llvm.loop !16779

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.361(%struct._dnode* noundef nonnull %7) #24, !dbg !16781
  br label %49, !dbg !16784

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16785
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16786
  br i1 %51, label %52, label %59, !dbg !16787

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16788
  call void @llvm.dbg.value(metadata i32 %53, metadata !16707, metadata !DIExpression()), !dbg !16789
  %54 = icmp ne i32 %53, 0, !dbg !16790
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16792
  br i1 %57, label %59, label %58, !dbg !16792

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16793
  br label %59, !dbg !16795

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !16802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16801, metadata !DIExpression()) #23, !dbg !16802
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16804
  br i1 %60, label %62, label %61, !dbg !16807

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !16808
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !16808
  unreachable, !dbg !16808

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16796, metadata !DIExpression()) #23, !dbg !16802
  call void @llvm.dbg.value(metadata i32 %16, metadata !16810, metadata !DIExpression()) #23, !dbg !16813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16815, !srcloc !16816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()), !dbg !16722
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.351(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16818 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16824, metadata !DIExpression()), !dbg !16825
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16826
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16826
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16827
  ret i1 %4, !dbg !16828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.359() unnamed_addr #1 !dbg !16829 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16832
  %2 = icmp eq i32 %1, 0, !dbg !16833
  br i1 %2, label %3, label %5, !dbg !16832

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16834
  br label %5, !dbg !16832

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16832
  ret i32 %6, !dbg !16835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16836 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.366() #24, !dbg !16842
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16840, metadata !DIExpression()), !dbg !16843
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16844
  ret %struct._timeout* %2, !dbg !16845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.360(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16846 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16850, metadata !DIExpression()), !dbg !16854
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16851, metadata !DIExpression()), !dbg !16854
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16855
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16855
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16852, metadata !DIExpression()), !dbg !16854
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16856
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16857
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16858
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16859
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16860
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16861
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16862
  ret void, !dbg !16863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16864 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16868, metadata !DIExpression()), !dbg !16870
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16871
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.364(%struct._dnode* noundef %2) #24, !dbg !16872
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16869, metadata !DIExpression()), !dbg !16870
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16873
  ret %struct._timeout* %4, !dbg !16874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.361(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16875 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16880, metadata !DIExpression()), !dbg !16883
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16881, metadata !DIExpression()), !dbg !16883
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16884
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16882, metadata !DIExpression()), !dbg !16883
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16885
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16886
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16887
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16888
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16889
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16890
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16891
  ret void, !dbg !16892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16893 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16898
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16895, metadata !DIExpression()), !dbg !16899
  %2 = tail call fastcc i32 @elapsed.359() #24, !dbg !16900
  call void @llvm.dbg.value(metadata i32 %2, metadata !16896, metadata !DIExpression()), !dbg !16899
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16901
  br i1 %3, label %14, label %4, !dbg !16903

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16904
  %6 = load i64, i64* %5, align 8, !dbg !16904
  %7 = sext i32 %2 to i64, !dbg !16905
  %8 = sub nsw i64 %6, %7, !dbg !16906
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16907
  br i1 %9, label %14, label %10, !dbg !16908

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16909
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16909
  %13 = trunc i64 %12 to i32, !dbg !16909
  call void @llvm.dbg.value(metadata i32 %13, metadata !16897, metadata !DIExpression()), !dbg !16899
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16911
  call void @llvm.dbg.value(metadata i32 %15, metadata !16897, metadata !DIExpression()), !dbg !16899
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16912
  %17 = icmp ne i32 %16, 0, !dbg !16914
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16915
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16915
  call void @llvm.dbg.value(metadata i32 %20, metadata !16897, metadata !DIExpression()), !dbg !16899
  ret i32 %20, !dbg !16916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.364(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16917 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16921, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16922, metadata !DIExpression()), !dbg !16923
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16924
  br i1 %2, label %5, label %3, !dbg !16925

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.365(%struct._dnode* noundef nonnull %0) #24, !dbg !16926
  br label %5, !dbg !16925

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16925
  ret %struct._dnode* %6, !dbg !16927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.365(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16928 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16930, metadata !DIExpression()), !dbg !16932
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16931, metadata !DIExpression()), !dbg !16932
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16933
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16934
  br i1 %3, label %7, label %4, !dbg !16935

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16936
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16936
  br label %7, !dbg !16935

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16935
  ret %struct._dnode* %8, !dbg !16937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.366() unnamed_addr #8 !dbg !16938 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16942, metadata !DIExpression()), !dbg !16943
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.367() #24, !dbg !16944
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16944
  ret %struct._dnode* %3, !dbg !16945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.367() unnamed_addr #8 !dbg !16946 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16950, metadata !DIExpression()), !dbg !16951
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16952
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16953
  ret i1 %2, !dbg !16954
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16955 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16959, metadata !DIExpression()), !dbg !16964
  call void @llvm.dbg.value(metadata i32 -22, metadata !16960, metadata !DIExpression()), !dbg !16964
  call void @llvm.dbg.value(metadata i32 0, metadata !16961, metadata !DIExpression()), !dbg !16965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16723, metadata !DIExpression()) #23, !dbg !16966
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16968, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !16970
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()) #23, !dbg !16970
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !16966
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16971
  br i1 %3, label %5, label %4, !dbg !16972

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !16973
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16973
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !16973
  unreachable, !dbg !16973

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !16970
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !16966
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16974
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16965
  call void @llvm.dbg.value(metadata i32 -22, metadata !16960, metadata !DIExpression()), !dbg !16964
  call void @llvm.dbg.value(metadata i32 undef, metadata !16961, metadata !DIExpression()), !dbg !16965
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16960, metadata !DIExpression()), !dbg !16964
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.351(%struct._dnode* noundef %6) #24, !dbg !16975
  br i1 %7, label %8, label %9, !dbg !16979

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16980
  call void @llvm.dbg.value(metadata i32 0, metadata !16960, metadata !DIExpression()), !dbg !16964
  br label %9, !dbg !16982

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16964
  call void @llvm.dbg.value(metadata i32 %10, metadata !16960, metadata !DIExpression()), !dbg !16964
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !16983
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16801, metadata !DIExpression()) #23, !dbg !16983
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16985
  br i1 %11, label %13, label %12, !dbg !16986

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !16987
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16987
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !16987
  unreachable, !dbg !16987

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16968
  call void @llvm.dbg.value(metadata i32 %14, metadata !16735, metadata !DIExpression()) #23, !dbg !16970
  call void @llvm.dbg.value(metadata i32 %14, metadata !16729, metadata !DIExpression()) #23, !dbg !16966
  call void @llvm.dbg.value(metadata i32 %14, metadata !16963, metadata !DIExpression()), !dbg !16965
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !16983
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()) #23, !dbg !16988
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16990, !srcloc !16816
  call void @llvm.dbg.value(metadata i32 %10, metadata !16960, metadata !DIExpression()), !dbg !16964
  call void @llvm.dbg.value(metadata i32 undef, metadata !16961, metadata !DIExpression()), !dbg !16965
  ret i32 %10, !dbg !16991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !16992 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16994, metadata !DIExpression()), !dbg !16995
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16996
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16998
  br i1 %3, label %10, label %4, !dbg !16999

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17000
  %6 = load i64, i64* %5, align 8, !dbg !17000
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17002
  %8 = load i64, i64* %7, align 8, !dbg !17003
  %9 = add nsw i64 %8, %6, !dbg !17003
  store i64 %9, i64* %7, align 8, !dbg !17003
  br label %10, !dbg !17004

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17005
  tail call fastcc void @sys_dlist_remove.370(%struct._dnode* noundef %11) #24, !dbg !17006
  ret void, !dbg !17007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.370(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17008 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17012, metadata !DIExpression()), !dbg !17015
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17016
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17016
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17013, metadata !DIExpression()), !dbg !17015
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17017
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17017
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17014, metadata !DIExpression()), !dbg !17015
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17018
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17019
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17020
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17021
  tail call fastcc void @sys_dnode_init.371(%struct._dnode* noundef %0) #24, !dbg !17022
  ret void, !dbg !17023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.371(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17024 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17026, metadata !DIExpression()), !dbg !17027
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17028
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17029
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17030
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17031
  ret void, !dbg !17032
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17033 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17039, metadata !DIExpression()), !dbg !17044
  call void @llvm.dbg.value(metadata i64 0, metadata !17040, metadata !DIExpression()), !dbg !17044
  call void @llvm.dbg.value(metadata i32 0, metadata !17041, metadata !DIExpression()), !dbg !17045
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16723, metadata !DIExpression()) #23, !dbg !17046
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17048, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17050
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()) #23, !dbg !17050
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17046
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17051
  br i1 %3, label %5, label %4, !dbg !17052

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17053
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17053
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17053
  unreachable, !dbg !17053

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17050
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17046
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17054
  call void @llvm.dbg.value(metadata i32 undef, metadata !17043, metadata !DIExpression()), !dbg !17045
  call void @llvm.dbg.value(metadata i64 0, metadata !17040, metadata !DIExpression()), !dbg !17044
  call void @llvm.dbg.value(metadata i32 undef, metadata !17041, metadata !DIExpression()), !dbg !17045
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17055
  call void @llvm.dbg.value(metadata i64 %6, metadata !17040, metadata !DIExpression()), !dbg !17044
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17058
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16801, metadata !DIExpression()) #23, !dbg !17058
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17060
  br i1 %7, label %9, label %8, !dbg !17061

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17062
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17062
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17062
  unreachable, !dbg !17062

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17048
  call void @llvm.dbg.value(metadata i32 %10, metadata !16735, metadata !DIExpression()) #23, !dbg !17050
  call void @llvm.dbg.value(metadata i32 %10, metadata !16729, metadata !DIExpression()) #23, !dbg !17046
  call void @llvm.dbg.value(metadata i32 %10, metadata !17043, metadata !DIExpression()), !dbg !17045
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17058
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()) #23, !dbg !17063
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17065, !srcloc !16816
  call void @llvm.dbg.value(metadata i64 %6, metadata !17040, metadata !DIExpression()), !dbg !17044
  call void @llvm.dbg.value(metadata i32 undef, metadata !17041, metadata !DIExpression()), !dbg !17045
  ret i64 %6, !dbg !17066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17067 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17069, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i64 0, metadata !17070, metadata !DIExpression()), !dbg !17073
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.372(%struct._timeout* noundef %0) #24, !dbg !17074
  br i1 %2, label %21, label %3, !dbg !17076

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17077
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17071, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i64 0, metadata !17070, metadata !DIExpression()), !dbg !17073
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17079
  br i1 %5, label %16, label %6, !dbg !17081

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17071, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i64 %8, metadata !17070, metadata !DIExpression()), !dbg !17073
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17082
  %10 = load i64, i64* %9, align 8, !dbg !17082
  %11 = add nsw i64 %10, %8, !dbg !17084
  call void @llvm.dbg.value(metadata i64 %11, metadata !17070, metadata !DIExpression()), !dbg !17073
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17085
  br i1 %12, label %16, label %13, !dbg !17087

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17088
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17071, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i64 %11, metadata !17070, metadata !DIExpression()), !dbg !17073
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17079
  br i1 %15, label %16, label %6, !dbg !17081, !llvm.loop !17089

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17073
  call void @llvm.dbg.value(metadata i64 %17, metadata !17070, metadata !DIExpression()), !dbg !17073
  %18 = tail call fastcc i32 @elapsed.359() #24, !dbg !17091
  %19 = sext i32 %18 to i64, !dbg !17091
  %20 = sub nsw i64 %17, %19, !dbg !17092
  br label %21, !dbg !17093

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17073
  ret i64 %22, !dbg !17094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.372(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17095 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17099, metadata !DIExpression()), !dbg !17100
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17101
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.351(%struct._dnode* noundef %2) #24, !dbg !17102
  %4 = xor i1 %3, true, !dbg !17103
  ret i1 %4, !dbg !17104
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17105 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17107, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i64 0, metadata !17108, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i32 0, metadata !17109, metadata !DIExpression()), !dbg !17113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16723, metadata !DIExpression()) #23, !dbg !17114
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17116, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()) #23, !dbg !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17114
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17119
  br i1 %3, label %5, label %4, !dbg !17120

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17121
  unreachable, !dbg !17121

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17114
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17122
  call void @llvm.dbg.value(metadata i32 undef, metadata !17111, metadata !DIExpression()), !dbg !17113
  call void @llvm.dbg.value(metadata i64 0, metadata !17108, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i32 undef, metadata !17109, metadata !DIExpression()), !dbg !17113
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17123
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17126
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17108, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17112
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16801, metadata !DIExpression()) #23, !dbg !17127
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17129
  br i1 %8, label %10, label %9, !dbg !17130

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17131
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17131
  unreachable, !dbg !17131

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17116
  call void @llvm.dbg.value(metadata i32 %11, metadata !16735, metadata !DIExpression()) #23, !dbg !17118
  call void @llvm.dbg.value(metadata i32 %11, metadata !16729, metadata !DIExpression()) #23, !dbg !17114
  call void @llvm.dbg.value(metadata i32 %11, metadata !17111, metadata !DIExpression()), !dbg !17113
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17108, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17112
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17127
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()) #23, !dbg !17132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17134, !srcloc !16816
  call void @llvm.dbg.value(metadata i32 undef, metadata !17109, metadata !DIExpression()), !dbg !17113
  %12 = add i64 %7, %6, !dbg !17135
  ret i64 %12, !dbg !17136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17137 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17139, metadata !DIExpression()), !dbg !17143
  call void @llvm.dbg.value(metadata i32 0, metadata !17140, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16723, metadata !DIExpression()) #23, !dbg !17145
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17147, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17149
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()) #23, !dbg !17149
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17145
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17150
  br i1 %2, label %4, label %3, !dbg !17151

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17152
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17152
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17152
  unreachable, !dbg !17152

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17149
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17145
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17153
  call void @llvm.dbg.value(metadata i32 undef, metadata !17142, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata i32 -1, metadata !17139, metadata !DIExpression()), !dbg !17143
  call void @llvm.dbg.value(metadata i32 undef, metadata !17140, metadata !DIExpression()), !dbg !17144
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17154
  call void @llvm.dbg.value(metadata i32 %5, metadata !17139, metadata !DIExpression()), !dbg !17143
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16801, metadata !DIExpression()) #23, !dbg !17157
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17159
  br i1 %6, label %8, label %7, !dbg !17160

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17161
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17161
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17161
  unreachable, !dbg !17161

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17147
  call void @llvm.dbg.value(metadata i32 %9, metadata !16735, metadata !DIExpression()) #23, !dbg !17149
  call void @llvm.dbg.value(metadata i32 %9, metadata !16729, metadata !DIExpression()) #23, !dbg !17145
  call void @llvm.dbg.value(metadata i32 %9, metadata !17142, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()) #23, !dbg !17162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17164, !srcloc !16816
  call void @llvm.dbg.value(metadata i32 %5, metadata !17139, metadata !DIExpression()), !dbg !17143
  call void @llvm.dbg.value(metadata i32 undef, metadata !17140, metadata !DIExpression()), !dbg !17144
  ret i32 %5, !dbg !17165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17168, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i1 %1, metadata !17169, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17178
  call void @llvm.dbg.value(metadata i32 0, metadata !17170, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16723, metadata !DIExpression()) #23, !dbg !17180
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17182, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17180
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17185
  br i1 %4, label %6, label %5, !dbg !17186

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17187
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17187
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17187
  unreachable, !dbg !17187

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17180
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17188
  call void @llvm.dbg.value(metadata i32 undef, metadata !17172, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17179
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17189
  call void @llvm.dbg.value(metadata i32 %7, metadata !17173, metadata !DIExpression()), !dbg !17190
  call void @llvm.dbg.value(metadata i1 undef, metadata !17176, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17190
  %8 = icmp slt i32 %7, 2, !dbg !17191
  call void @llvm.dbg.value(metadata i1 %8, metadata !17177, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17190
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17192
  call void @llvm.dbg.value(metadata i1 %9, metadata !17176, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17190
  br i1 %10, label %14, label %11, !dbg !17192

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17194
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17194
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17196
  br label %14, !dbg !17197

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16801, metadata !DIExpression()) #23, !dbg !17198
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17200
  br i1 %15, label %17, label %16, !dbg !17201

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17202
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17202
  unreachable, !dbg !17202

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17182
  call void @llvm.dbg.value(metadata i32 %18, metadata !16735, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 %18, metadata !16729, metadata !DIExpression()) #23, !dbg !17180
  call void @llvm.dbg.value(metadata i32 %18, metadata !17172, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17198
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()) #23, !dbg !17203
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17205, !srcloc !16816
  call void @llvm.dbg.value(metadata i32 1, metadata !17170, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17179
  ret void, !dbg !17206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17211, metadata !DIExpression()), !dbg !17216
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16723, metadata !DIExpression()) #23, !dbg !17218
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17220, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17222
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()) #23, !dbg !17222
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17218
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17223
  br i1 %3, label %5, label %4, !dbg !17224

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17225
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17225
  unreachable, !dbg !17225

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17222
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17218
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17226
  call void @llvm.dbg.value(metadata i32 undef, metadata !17212, metadata !DIExpression()), !dbg !17216
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17216
  call void @llvm.dbg.value(metadata i32 undef, metadata !17212, metadata !DIExpression()), !dbg !17216
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17227
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17228
  br i1 %7, label %37, label %8, !dbg !17229

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17216
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17230
  %14 = load i64, i64* %13, align 8, !dbg !17230
  %15 = sext i32 %11 to i64, !dbg !17231
  %16 = icmp sgt i64 %14, %15, !dbg !17232
  br i1 %16, label %35, label %17, !dbg !17233

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17213, metadata !DIExpression()), !dbg !17234
  %18 = trunc i64 %14 to i32, !dbg !17235
  call void @llvm.dbg.value(metadata i32 %18, metadata !17215, metadata !DIExpression()), !dbg !17234
  %19 = sext i32 %18 to i64, !dbg !17236
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17237
  %21 = add i64 %20, %19, !dbg !17237
  store i64 %21, i64* @curr_tick, align 8, !dbg !17237
  store i64 0, i64* %13, align 8, !dbg !17238
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17239
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16801, metadata !DIExpression()) #23, !dbg !17240
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17242
  br i1 %22, label %24, label %23, !dbg !17243

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17244
  unreachable, !dbg !17244

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16796, metadata !DIExpression()) #23, !dbg !17240
  call void @llvm.dbg.value(metadata i32 %12, metadata !16810, metadata !DIExpression()) #23, !dbg !17245
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17247, !srcloc !16816
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17248
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17248
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17249
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16723, metadata !DIExpression()) #23, !dbg !17250
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17252, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17254
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()) #23, !dbg !17254
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17250
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17255
  br i1 %28, label %30, label %29, !dbg !17256

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17257
  unreachable, !dbg !17257

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17254
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17250
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17258
  call void @llvm.dbg.value(metadata i32 undef, metadata !17212, metadata !DIExpression()), !dbg !17216
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17259
  %32 = sub nsw i32 %31, %18, !dbg !17259
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17216
  call void @llvm.dbg.value(metadata i32 undef, metadata !17212, metadata !DIExpression()), !dbg !17216
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17227
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17228
  br i1 %34, label %37, label %8, !dbg !17229, !llvm.loop !17260

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17262
  store i64 %36, i64* %13, align 8, !dbg !17262
  br label %41, !dbg !17265

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17216
  %40 = sext i32 %39 to i64, !dbg !17266
  br label %41, !dbg !17266

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17266
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17267
  %45 = add i64 %44, %42, !dbg !17267
  store i64 %45, i64* @curr_tick, align 8, !dbg !17267
  store i32 0, i32* @announce_remaining, align 4, !dbg !17268
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17269
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17270
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16801, metadata !DIExpression()) #23, !dbg !17271
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17273
  br i1 %47, label %49, label %48, !dbg !17274

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17275
  unreachable, !dbg !17275

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17216
  call void @llvm.dbg.value(metadata i32 %50, metadata !16796, metadata !DIExpression()) #23, !dbg !17271
  call void @llvm.dbg.value(metadata i32 %50, metadata !16810, metadata !DIExpression()) #23, !dbg !17276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17278, !srcloc !16816
  ret void, !dbg !17279
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17280 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17284, metadata !DIExpression()), !dbg !17288
  call void @llvm.dbg.value(metadata i32 0, metadata !17285, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16723, metadata !DIExpression()) #23, !dbg !17290
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17292, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()) #23, !dbg !17294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17290
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17295
  br i1 %2, label %4, label %3, !dbg !17296

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17297
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17297
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 148) #25, !dbg !17297
  unreachable, !dbg !17297

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()) #23, !dbg !17294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()) #23, !dbg !17290
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !17287, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata i64 0, metadata !17284, metadata !DIExpression()), !dbg !17288
  call void @llvm.dbg.value(metadata i32 undef, metadata !17285, metadata !DIExpression()), !dbg !17289
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17299
  %6 = tail call fastcc i32 @elapsed.359() #24, !dbg !17302
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17284, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16801, metadata !DIExpression()) #23, !dbg !17303
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17305
  br i1 %7, label %9, label %8, !dbg !17306

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.363, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.357, i32 0, i32 0), i32 noundef 194) #25, !dbg !17307
  unreachable, !dbg !17307

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17292
  call void @llvm.dbg.value(metadata i32 %10, metadata !16735, metadata !DIExpression()) #23, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %10, metadata !16729, metadata !DIExpression()) #23, !dbg !17290
  call void @llvm.dbg.value(metadata i32 %10, metadata !17287, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17284, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17288
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17284, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #23, !dbg !17303
  call void @llvm.dbg.value(metadata i32 undef, metadata !16810, metadata !DIExpression()) #23, !dbg !17308
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17310, !srcloc !16816
  call void @llvm.dbg.value(metadata i32 undef, metadata !17285, metadata !DIExpression()), !dbg !17289
  %11 = sext i32 %6 to i64, !dbg !17302
  %12 = add i64 %5, %11, !dbg !17311
  ret i64 %12, !dbg !17312
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17313 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17314
  %2 = trunc i64 %1 to i32, !dbg !17315
  ret i32 %2, !dbg !17316
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17317 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17318
  ret i64 %1, !dbg !17319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17322, metadata !DIExpression()), !dbg !17329
  %2 = icmp eq i32 %0, 0, !dbg !17330
  br i1 %2, label %10, label %3, !dbg !17332

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %4, metadata !17323, metadata !DIExpression()), !dbg !17329
  %5 = mul i32 %0, 84, !dbg !17334
  call void @llvm.dbg.value(metadata i32 %5, metadata !17324, metadata !DIExpression()), !dbg !17329
  br label %6, !dbg !17335

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17336
  call void @llvm.dbg.value(metadata i32 %7, metadata !17325, metadata !DIExpression()), !dbg !17337
  %8 = sub i32 %7, %4, !dbg !17338
  %9 = icmp ult i32 %8, %5, !dbg !17340
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17342 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17343
  ret i32 %1, !dbg !17344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17345 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17347
  ret i32 %1, !dbg !17348
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17349 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17353, metadata !DIExpression()), !dbg !17355
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17356

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17357
  br label %14, !dbg !17361

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17354, metadata !DIExpression()), !dbg !17355
  %6 = icmp slt i64 %2, -1, !dbg !17362
  br i1 %6, label %7, label %9, !dbg !17365

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17366
  br label %14, !dbg !17367

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17369
  %11 = icmp ugt i64 %2, 1, !dbg !17370
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17370
  %13 = add nsw i64 %10, %12, !dbg !17371
  br label %14, !dbg !17372

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17373
  ret i64 %15, !dbg !17374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17375 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.381, i32 0, i32 0)) #25, !dbg !17377
  ret void, !dbg !17378
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!773, !2, !2531, !27, !271, !297, !2533, !2535, !2569, !2571, !307, !358, !2573, !2576, !2587, !2633, !2635, !2663, !2691, !2734, !2806, !2851, !387, !530, !2879, !566, !576, !601, !807, !2884, !945, !1011, !1317, !1581, !2923, !1696, !1786, !2925, !3011, !3076, !1838, !3079, !1845, !2218, !3097, !2238, !2349, !2467, !3099, !2492, !3102}
!llvm.ident = !{!3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104, !3104}
!llvm.module.flags = !{!3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "count_mutex", scope: !27, file: !116, line: 16, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !143, !154}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "count_threshold_cv", scope: !27, file: !116, line: 17, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !116, line: 14, type: !109, isLocal: true, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 21, type: !145, isLocal: false, isDefinition: true, align: 512)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 26112, elements: !151)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !148)
!147 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!148 = !{!149}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !147, line: 48, baseType: !150, size: 8)
!150 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!151 = !{!152, !153}
!152 = !DISubrange(count: 3)
!153 = !DISubrange(count: 1088)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 23, type: !156, isLocal: true, isDefinition: true)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 3840, elements: !261)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !159)
!158 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!159 = !{!160, !209, !222, !223, !224, !228, !229, !237, !256}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !157, file: !158, line: 247, baseType: !161, size: 384)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !162)
!162 = !{!163, !177, !179, !182, !183, !196, !197, !198}
!163 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 60, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 60, size: 64, elements: !165)
!165 = !{!166, !168}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !164, file: !158, line: 61, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !164, file: !158, line: 62, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !171)
!170 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!171 = !{!172}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !169, file: !170, line: 50, baseType: !173, size: 64)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !175)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!175 = !{!176}
!176 = !DISubrange(count: 2)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !161, file: !158, line: 68, baseType: !178, size: 32, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !161, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !181)
!181 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !161, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!183 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 90, baseType: !184, size: 16, offset: 112)
!184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 90, size: 16, elements: !185)
!185 = !{!186, !193}
!186 = !DIDerivedType(tag: DW_TAG_member, scope: !184, file: !158, line: 91, baseType: !187, size: 16)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !158, line: 91, size: 16, elements: !188)
!188 = !{!189, !192}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !187, file: !158, line: 96, baseType: !190, size: 8)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !191)
!191 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !187, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !184, file: !158, line: 100, baseType: !194, size: 16)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !195)
!195 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !161, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !161, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !161, file: !158, line: 131, baseType: !199, size: 192, offset: 192)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !200)
!200 = !{!201, !202, !208}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !199, file: !122, line: 245, baseType: !167, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !199, file: !122, line: 246, baseType: !203, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = !DISubroutineType(types: !206)
!206 = !{null, !207}
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !199, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !157, file: !158, line: 250, baseType: !210, size: 288, offset: 384)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220, !221}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !210, file: !211, line: 26, baseType: !110, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !210, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !210, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !210, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !210, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !210, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !210, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !210, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !210, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !157, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !157, file: !158, line: 256, baseType: !121, size: 64, offset: 704)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !226)
!226 = !{!227}
!227 = !DISubrange(count: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !157, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !157, file: !158, line: 300, baseType: !230, size: 96, offset: 1056)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !231)
!231 = !{!232, !233, !236}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !230, file: !158, line: 153, baseType: !22, size: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !230, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !235, line: 214, baseType: !32)
!235 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !230, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !157, file: !158, line: 325, baseType: !238, size: 32, offset: 1152)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !240)
!240 = !{!241, !250, !251}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !118, line: 5074, baseType: !242, size: 96)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !244)
!243 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!244 = !{!245, !248, !249}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !242, file: !243, line: 57, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !243, line: 57, flags: DIFlagFwdDecl)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !242, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !242, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !239, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !239, file: !118, line: 5076, baseType: !252, size: 32, offset: 160)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !254)
!253 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !{!255}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !252, file: !253, line: 52, baseType: !22, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !157, file: !158, line: 343, baseType: !257, size: 64, offset: 1184)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !258)
!258 = !{!259, !260}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !257, file: !211, line: 63, baseType: !110, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !257, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!261 = !{!152}
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!273 = !{!22, !107, !24, !274, !276, !278, !234, !109, !281, !282, !283, !284, !285, !286, !194, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !307, file: !324, line: 56, type: !325, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !323, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 258, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 249, size: 224, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !313, file: !312, line: 251, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !313, file: !312, line: 252, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !313, file: !312, line: 253, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !313, file: !312, line: 254, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 255, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !313, file: !312, line: 256, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !313, file: !312, line: 257, baseType: !316, size: 32, offset: 192)
!323 = !{!305}
!324 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !328)
!327 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!328 = !{!329, !355}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !326, file: !327, line: 60, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DISubroutineType(types: !332)
!332 = !{!109, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !337)
!336 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!337 = !{!338, !339, !340, !341, !348, !349}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !335, file: !336, line: 380, baseType: !279, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !335, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !335, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !335, file: !336, line: 386, baseType: !342, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !344)
!344 = !{!345, !346}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !343, file: !336, line: 359, baseType: !180, size: 8)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !343, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!347 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !335, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !335, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !336, line: 43, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !354)
!354 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !326, file: !327, line: 65, baseType: !333, size: 32, offset: 32)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !358, file: !361, line: 71, type: !362, isLocal: true, isDefinition: true, align: 32)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !360, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!360 = !{!356}
!361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !364)
!364 = !{!365, !384}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !363, file: !327, line: 60, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DISubroutineType(types: !368)
!368 = !{!109, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !372)
!372 = !{!373, !374, !375, !376, !382, !383}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !336, line: 380, baseType: !279, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !371, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !371, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !336, line: 386, baseType: !377, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !378, file: !336, line: 359, baseType: !180, size: 8)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !378, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !371, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !363, file: !327, line: 65, baseType: !369, size: 32, offset: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !387, file: !394, line: 17, type: !523, isLocal: false, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!389 = !{!234, !109, !110, !107}
!390 = !{!385, !391, !519}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !505, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !500)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !473, !474, !480, !495}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !158, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !158, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !158, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !158, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !127, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !127, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !127, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !127, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !158, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !170, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !175)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !158, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !122, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !158, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !158, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !158, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !158, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !158, line: 96, baseType: !190, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !158, line: 100, baseType: !194, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !158, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !122, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !122, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !158, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !211, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !158, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !158, line: 300, baseType: !475, size: 96, offset: 1056)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !476)
!476 = !{!477, !478, !479}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !158, line: 153, baseType: !22, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !475, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !158, line: 325, baseType: !481, size: 32, offset: 1152)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !483)
!483 = !{!484, !490, !491}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !482, file: !118, line: 5074, baseType: !485, size: 96)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !486)
!486 = !{!487, !488, !489}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !485, file: !243, line: 57, baseType: !246, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !485, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !485, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !482, file: !118, line: 5075, baseType: !429, size: 64, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !482, file: !118, line: 5076, baseType: !492, size: 32, offset: 160)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !492, file: !253, line: 52, baseType: !22, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !158, line: 343, baseType: !496, size: 64, offset: 1184)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !497)
!497 = !{!498, !499}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !496, file: !211, line: 63, baseType: !110, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !496, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!500 = !{!501, !502, !503, !504}
!501 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!502 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !180)
!503 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!504 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !234)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 96, elements: !517)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !508)
!507 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !506, file: !507, line: 53, baseType: !22, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !507, line: 54, baseType: !234, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !506, file: !507, line: 55, baseType: !512, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !514, file: !513, line: 150, baseType: !110, size: 32)
!517 = !{!518}
!518 = !DISubrange(count: 1)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 96, elements: !517)
!522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !291, line: 17, baseType: !279, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !524, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !530, file: !563, line: 39, type: !180, isLocal: true, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !532, globals: !562, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!532 = !{!533, !107, !109, !550, !180}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !535, line: 1226, baseType: !536)
!535 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 1213, size: 352, elements: !537)
!537 = !{!538, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !536, file: !535, line: 1215, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !536, file: !535, line: 1216, baseType: !316, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !536, file: !535, line: 1217, baseType: !316, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !536, file: !535, line: 1218, baseType: !316, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !536, file: !535, line: 1219, baseType: !316, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !536, file: !535, line: 1220, baseType: !316, size: 32, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !536, file: !535, line: 1221, baseType: !316, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !536, file: !535, line: 1222, baseType: !316, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !536, file: !535, line: 1223, baseType: !316, size: 32, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !536, file: !535, line: 1224, baseType: !316, size: 32, offset: 288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !536, file: !535, line: 1225, baseType: !316, size: 32, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !554)
!553 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !{!555, !556, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !552, file: !553, line: 29, baseType: !110, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !552, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !552, file: !553, line: 37, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !559, file: !513, line: 143, baseType: !110, size: 32)
!562 = !{!528}
!563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !566, file: !573, line: 21, type: !302, isLocal: true, isDefinition: true)
!566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !568, globals: !572, splitDebugInlining: false, nameTableKind: None)
!567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!568 = !{!569, !109, !107}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !571, line: 22, baseType: !109)
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !{!564}
!573 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !576, file: !581, line: 13, type: !598, isLocal: true, isDefinition: true)
!576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !578, splitDebugInlining: false, nameTableKind: None)
!577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!578 = !{!579, !574}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "mpu_config", scope: !576, file: !581, line: 37, type: !582, isLocal: false, isDefinition: true)
!581 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !553, line: 41, size: 64, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !583, file: !553, line: 43, baseType: !110, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !583, file: !553, line: 45, baseType: !587, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !589, file: !553, line: 29, baseType: !110, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !589, file: !553, line: 37, baseType: !594, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !595)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !596)
!596 = !{!597}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !595, file: !513, line: 143, baseType: !110, size: 32)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 192, elements: !175)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !601, file: !684, line: 72, type: !768, isLocal: true, isDefinition: true)
!601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !603, retainedTypes: !670, globals: !681, splitDebugInlining: false, nameTableKind: None)
!602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!603 = !{!30, !604}
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 65, baseType: !109, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669}
!606 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!607 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!608 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!609 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!610 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!611 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!612 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!613 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!614 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!615 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!616 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!617 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!618 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!619 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!620 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!621 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!622 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!623 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!624 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!625 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!626 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!627 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!628 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!629 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!630 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!631 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!632 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!633 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!634 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!635 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!636 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!637 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!638 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!639 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!640 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!641 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!642 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!643 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!644 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!645 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!646 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!647 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!648 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!649 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!650 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!651 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!652 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!653 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!654 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!655 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!656 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!657 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!658 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!659 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!660 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!661 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!662 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!663 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!664 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!665 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!666 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!667 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!668 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!669 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!670 = !{!234, !109, !107, !671}
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 243, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 235, size: 192, elements: !674)
!674 = !{!675, !676, !677, !678, !679, !680}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !673, file: !312, line: 237, baseType: !316, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !673, file: !312, line: 238, baseType: !316, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !673, file: !312, line: 239, baseType: !316, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !673, file: !312, line: 240, baseType: !316, size: 32, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !673, file: !312, line: 241, baseType: !316, size: 32, offset: 128)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !673, file: !312, line: 242, baseType: !316, size: 32, offset: 160)
!681 = !{!682, !688, !704, !715, !732, !599, !734, !748, !750, !752, !754, !756, !758, !760, !762, !764, !766}
!682 = !DIGlobalVariableExpression(var: !683, expr: !DIExpression())
!683 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !601, file: !684, line: 424, type: !685, isLocal: false, isDefinition: true, align: 16)
!684 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 64, elements: !686)
!686 = !{!687}
!687 = !DISubrange(count: 4)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !601, file: !684, line: 424, type: !690, isLocal: false, isDefinition: true, align: 32)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !692)
!692 = !{!693, !694, !695, !696, !702, !703}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !691, file: !336, line: 380, baseType: !279, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !691, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !691, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !691, file: !336, line: 386, baseType: !697, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 32)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !699)
!699 = !{!700, !701}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !698, file: !336, line: 359, baseType: !180, size: 8)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !698, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !691, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !691, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!704 = !DIGlobalVariableExpression(var: !705, expr: !DIExpression())
!705 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !601, file: !684, line: 424, type: !706, isLocal: true, isDefinition: true, align: 32)
!706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !708)
!708 = !{!709, !714}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !707, file: !327, line: 60, baseType: !710, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!711 = !DISubroutineType(types: !712)
!712 = !{!109, !713}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !707, file: !327, line: 65, baseType: !713, size: 32, offset: 32)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "exti_data", scope: !601, file: !684, line: 423, type: !717, isLocal: true, isDefinition: true)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !684, line: 107, size: 1472, elements: !718)
!718 = !{!719}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !717, file: !684, line: 109, baseType: !720, size: 1472)
!720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !721, size: 1472, elements: !730)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !684, line: 101, size: 64, elements: !722)
!722 = !{!723, !729}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !721, file: !684, line: 102, baseType: !724, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !725, line: 63, baseType: !726)
!725 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{null, !109, !107}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !721, file: !684, line: 103, baseType: !107, size: 32, offset: 32)
!730 = !{!731}
!731 = !DISubrange(count: 23)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !601, file: !684, line: 424, type: !698, isLocal: true, isDefinition: true, align: 8)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !736, file: !684, line: 493, type: !741, isLocal: true, isDefinition: true, align: 32)
!736 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !684, file: !684, line: 460, type: !737, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !739)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !713}
!739 = !{!740}
!740 = !DILocalVariable(name: "dev", arg: 1, scope: !736, file: !684, line: 460, type: !713)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !742)
!742 = !{!743, !745, !746, !747}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !741, file: !10, line: 55, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !741, file: !10, line: 57, baseType: !744, size: 32, offset: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !741, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !741, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !736, file: !684, line: 497, type: !741, isLocal: true, isDefinition: true, align: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !736, file: !684, line: 507, type: !741, isLocal: true, isDefinition: true, align: 32)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !736, file: !684, line: 512, type: !741, isLocal: true, isDefinition: true, align: 32)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !736, file: !684, line: 516, type: !741, isLocal: true, isDefinition: true, align: 32)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !736, file: !684, line: 523, type: !741, isLocal: true, isDefinition: true, align: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !736, file: !684, line: 527, type: !741, isLocal: true, isDefinition: true, align: 32)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !736, file: !684, line: 581, type: !741, isLocal: true, isDefinition: true, align: 32)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !736, file: !684, line: 586, type: !741, isLocal: true, isDefinition: true, align: 32)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !736, file: !684, line: 591, type: !741, isLocal: true, isDefinition: true, align: 32)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !736, file: !684, line: 595, type: !741, isLocal: true, isDefinition: true, align: 32)
!768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !769, size: 736, elements: !730)
!769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !770)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 133, baseType: !604)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !773, file: !778, line: 24, type: !804, isLocal: false, isDefinition: true, align: 16)
!773 = distinct !DICompileUnit(language: DW_LANG_C99, file: !774, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !775, splitDebugInlining: false, nameTableKind: None)
!774 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!775 = !{!776, !771, !782, !784, !786, !788, !790, !792, !794, !796, !798, !800, !802}
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !773, file: !778, line: 19, type: !779, isLocal: false, isDefinition: true, align: 16)
!778 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 224, elements: !780)
!780 = !{!781}
!781 = !DISubrange(count: 14)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !773, file: !778, line: 31, type: !685, isLocal: false, isDefinition: true, align: 16)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !773, file: !778, line: 38, type: !685, isLocal: false, isDefinition: true, align: 16)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !773, file: !778, line: 45, type: !685, isLocal: false, isDefinition: true, align: 16)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !773, file: !778, line: 52, type: !685, isLocal: false, isDefinition: true, align: 16)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !773, file: !778, line: 59, type: !685, isLocal: false, isDefinition: true, align: 16)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !773, file: !778, line: 66, type: !685, isLocal: false, isDefinition: true, align: 16)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !773, file: !778, line: 73, type: !685, isLocal: false, isDefinition: true, align: 16)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !773, file: !778, line: 80, type: !685, isLocal: false, isDefinition: true, align: 16)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !773, file: !778, line: 87, type: !685, isLocal: false, isDefinition: true, align: 16)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !773, file: !778, line: 94, type: !685, isLocal: false, isDefinition: true, align: 16)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !773, file: !778, line: 101, type: !685, isLocal: false, isDefinition: true, align: 16)
!804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 48, elements: !261)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !807, file: !871, line: 398, type: !904, isLocal: true, isDefinition: true)
!807 = distinct !DICompileUnit(language: DW_LANG_C99, file: !808, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !809, retainedTypes: !822, globals: !868, splitDebugInlining: false, nameTableKind: None)
!808 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!809 = !{!810, !30, !815}
!810 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !811, line: 197, baseType: !32, size: 32, elements: !812)
!811 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!812 = !{!813, !814}
!813 = !DIEnumerator(name: "SUCCESS", value: 0)
!814 = !DIEnumerator(name: "ERROR", value: 1)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !816, line: 44, baseType: !32, size: 32, elements: !817)
!816 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!817 = !{!818, !819, !820, !821}
!818 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!819 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!820 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!821 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!822 = !{!107, !109, !110, !823, !861, !867}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 369, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 335, size: 1152, elements: !826)
!826 = !{!827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !860}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !825, file: !312, line: 337, baseType: !316, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !825, file: !312, line: 338, baseType: !316, size: 32, offset: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !825, file: !312, line: 339, baseType: !316, size: 32, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !825, file: !312, line: 340, baseType: !316, size: 32, offset: 96)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !825, file: !312, line: 341, baseType: !316, size: 32, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !825, file: !312, line: 342, baseType: !316, size: 32, offset: 160)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !825, file: !312, line: 343, baseType: !316, size: 32, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !825, file: !312, line: 344, baseType: !110, size: 32, offset: 224)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !825, file: !312, line: 345, baseType: !316, size: 32, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !825, file: !312, line: 346, baseType: !316, size: 32, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !825, file: !312, line: 347, baseType: !838, size: 64, offset: 320)
!838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !175)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !825, file: !312, line: 348, baseType: !316, size: 32, offset: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !825, file: !312, line: 349, baseType: !316, size: 32, offset: 416)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !825, file: !312, line: 350, baseType: !316, size: 32, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !825, file: !312, line: 351, baseType: !110, size: 32, offset: 480)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !825, file: !312, line: 352, baseType: !316, size: 32, offset: 512)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !825, file: !312, line: 353, baseType: !316, size: 32, offset: 544)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !825, file: !312, line: 354, baseType: !838, size: 64, offset: 576)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !825, file: !312, line: 355, baseType: !316, size: 32, offset: 640)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !825, file: !312, line: 356, baseType: !316, size: 32, offset: 672)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !825, file: !312, line: 357, baseType: !316, size: 32, offset: 704)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !825, file: !312, line: 358, baseType: !110, size: 32, offset: 736)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !825, file: !312, line: 359, baseType: !316, size: 32, offset: 768)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !825, file: !312, line: 360, baseType: !316, size: 32, offset: 800)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !825, file: !312, line: 361, baseType: !838, size: 64, offset: 832)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !825, file: !312, line: 362, baseType: !316, size: 32, offset: 896)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !825, file: !312, line: 363, baseType: !316, size: 32, offset: 928)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !825, file: !312, line: 364, baseType: !838, size: 64, offset: 960)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !825, file: !312, line: 365, baseType: !316, size: 32, offset: 1024)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !825, file: !312, line: 366, baseType: !316, size: 32, offset: 1056)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !825, file: !312, line: 367, baseType: !859, size: 32, offset: 1088)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 32, elements: !517)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !825, file: !312, line: 368, baseType: !316, size: 32, offset: 1120)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !863, line: 343, size: 64, elements: !864)
!863 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!864 = !{!865, !866}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !862, file: !863, line: 344, baseType: !110, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !862, file: !863, line: 345, baseType: !110, size: 32, offset: 32)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!868 = !{!869, !875, !891, !902, !805}
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !807, file: !871, line: 752, type: !872, isLocal: false, isDefinition: true, align: 16)
!871 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 640, elements: !873)
!873 = !{!874}
!874 = !DISubrange(count: 40)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !807, file: !871, line: 752, type: !877, isLocal: false, isDefinition: true, align: 32)
!877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !878)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !879)
!879 = !{!880, !881, !882, !883, !889, !890}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !878, file: !336, line: 380, baseType: !279, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !878, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !878, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !878, file: !336, line: 386, baseType: !884, size: 32, offset: 96)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !886)
!886 = !{!887, !888}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !885, file: !336, line: 359, baseType: !180, size: 8)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !885, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !878, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !878, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !807, file: !871, line: 752, type: !893, isLocal: true, isDefinition: true, align: 32)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !894)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !895)
!895 = !{!896, !901}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !894, file: !327, line: 60, baseType: !897, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = !DISubroutineType(types: !899)
!899 = !{!109, !900}
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !894, file: !327, line: 65, baseType: !900, size: 32, offset: 32)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !807, file: !871, line: 752, type: !885, isLocal: true, isDefinition: true, align: 8)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !816, line: 100, size: 224, elements: !905)
!905 = !{!906, !912, !913, !922, !927, !932, !938}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !904, file: !816, line: 101, baseType: !907, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !816, line: 76, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DISubroutineType(types: !910)
!910 = !{!109, !900, !911}
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !816, line: 56, baseType: !107)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !904, file: !816, line: 102, baseType: !907, size: 32, offset: 32)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !904, file: !816, line: 103, baseType: !914, size: 32, offset: 64)
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !816, line: 83, baseType: !915)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 32)
!916 = !DISubroutineType(types: !917)
!917 = !{!109, !900, !911, !918, !107}
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !816, line: 72, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{null, !900, !911, !107}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !904, file: !816, line: 104, baseType: !923, size: 32, offset: 96)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !816, line: 79, baseType: !924)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 32)
!925 = !DISubroutineType(types: !926)
!926 = !{!109, !900, !911, !867}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !904, file: !816, line: 105, baseType: !928, size: 32, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !816, line: 88, baseType: !929)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DISubroutineType(types: !931)
!931 = !{!815, !900, !911}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !904, file: !816, line: 106, baseType: !933, size: 32, offset: 160)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !816, line: 92, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{!109, !900, !911, !937}
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !816, line: 64, baseType: !107)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !904, file: !816, line: 107, baseType: !939, size: 32, offset: 192)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !816, line: 96, baseType: !940)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = !DISubroutineType(types: !942)
!942 = !{!109, !900, !911, !107}
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !945, file: !1002, line: 603, type: !1004, isLocal: true, isDefinition: true, align: 32)
!945 = distinct !DICompileUnit(language: DW_LANG_C99, file: !946, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !947, globals: !999, splitDebugInlining: false, nameTableKind: None)
!946 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!947 = !{!107, !109, !948}
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !950)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !951, line: 336, size: 160, elements: !952)
!951 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!952 = !{!953, !973, !977, !981, !994}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !950, file: !951, line: 365, baseType: !954, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!955 = !DISubroutineType(types: !956)
!956 = !{!109, !957, !972}
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !959)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !960)
!960 = !{!961, !962, !963, !964, !970, !971}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !959, file: !336, line: 380, baseType: !279, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !959, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !959, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !959, file: !336, line: 386, baseType: !965, size: 32, offset: 96)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !967)
!967 = !{!968, !969}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !966, file: !336, line: 359, baseType: !180, size: 8)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !966, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !959, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !959, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !950, file: !951, line: 366, baseType: !974, size: 32, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!975 = !DISubroutineType(types: !976)
!976 = !{null, !957, !181}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !950, file: !951, line: 374, baseType: !978, size: 32, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DISubroutineType(types: !980)
!980 = !{!109, !957}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !950, file: !951, line: 377, baseType: !982, size: 32, offset: 96)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DISubroutineType(types: !984)
!984 = !{!109, !957, !985}
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !951, line: 122, size: 64, elements: !988)
!988 = !{!989, !990, !991, !992, !993}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !987, file: !951, line: 123, baseType: !110, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !987, file: !951, line: 124, baseType: !180, size: 8, offset: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !987, file: !951, line: 125, baseType: !180, size: 8, offset: 40)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !987, file: !951, line: 126, baseType: !180, size: 8, offset: 48)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !987, file: !951, line: 127, baseType: !180, size: 8, offset: 56)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !950, file: !951, line: 379, baseType: !995, size: 32, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!109, !957, !998}
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!999 = !{!943, !1000}
!1000 = !DIGlobalVariableExpression(var: !1001, expr: !DIExpression())
!1001 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !945, file: !1002, line: 38, type: !1003, isLocal: true, isDefinition: true)
!1002 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!1004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1005)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1006)
!1006 = !{!1007, !1008}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1005, file: !327, line: 60, baseType: !978, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1005, file: !327, line: 65, baseType: !957, size: 32, offset: 32)
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1011, file: !1180, line: 762, type: !1292, isLocal: true, isDefinition: true)
!1011 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1012, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1013, retainedTypes: !1031, globals: !1177, splitDebugInlining: false, nameTableKind: None)
!1012 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!1013 = !{!30, !1014, !1020, !1025, !815}
!1014 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1015, line: 506, baseType: !32, size: 32, elements: !1016)
!1015 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1016 = !{!1017, !1018, !1019}
!1017 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1018 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1019 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1020 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1015, line: 512, baseType: !32, size: 32, elements: !1021)
!1021 = !{!1022, !1023, !1024}
!1022 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1023 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1024 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1025 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !725, line: 43, baseType: !32, size: 32, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030}
!1027 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1028 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1029 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1030 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1031 = !{!107, !109, !1032, !1102, !1107, !1067, !1020, !1014, !1112, !1113, !110, !1127, !1082, !285, !1137, !1138}
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1015, line: 523, size: 288, elements: !1035)
!1035 = !{!1036, !1057, !1063, !1068, !1072, !1073, !1074, !1078, !1098}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1034, file: !1015, line: 524, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!109, !1040, !1055, !1056}
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1053, !1054}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1042, file: !336, line: 380, baseType: !279, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1042, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1042, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1042, file: !336, line: 386, baseType: !1048, size: 32, offset: 96)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1050)
!1050 = !{!1051, !1052}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1049, file: !336, line: 359, baseType: !180, size: 8)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1049, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1042, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1042, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1015, line: 237, baseType: !180)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1015, line: 257, baseType: !110)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1034, file: !1015, line: 530, baseType: !1058, size: 32, offset: 32)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!109, !1040, !1061}
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1015, line: 229, baseType: !110)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1034, file: !1015, line: 532, baseType: !1064, size: 32, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!109, !1040, !1067, !1062}
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1015, line: 216, baseType: !110)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1034, file: !1015, line: 535, baseType: !1069, size: 32, offset: 96)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!109, !1040, !1067}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1034, file: !1015, line: 537, baseType: !1069, size: 32, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1034, file: !1015, line: 539, baseType: !1069, size: 32, offset: 160)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1034, file: !1015, line: 541, baseType: !1075, size: 32, offset: 192)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!109, !1040, !1055, !1014, !1020}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1034, file: !1015, line: 544, baseType: !1079, size: 32, offset: 224)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!109, !1040, !1082, !347}
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1015, line: 478, size: 96, elements: !1084)
!1084 = !{!1085, !1092, !1097}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1083, file: !1015, line: 482, baseType: !1086, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1087, line: 33, baseType: !1088)
!1087 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1087, line: 29, size: 32, elements: !1089)
!1089 = !{!1090}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1088, file: !1087, line: 30, baseType: !1091, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1083, file: !1015, line: 485, baseType: !1093, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1015, line: 464, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{null, !1040, !1082, !1067}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1083, file: !1015, line: 493, baseType: !1067, size: 32, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1034, file: !1015, line: 547, baseType: !1099, size: 32, offset: 256)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!110, !1040}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1015, line: 428, size: 32, elements: !1105)
!1105 = !{!1106}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1104, file: !1015, line: 434, baseType: !1067, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1015, line: 441, size: 32, elements: !1110)
!1110 = !{!1111}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1109, file: !1015, line: 447, baseType: !1067, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 275, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 264, size: 320, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1115, file: !312, line: 266, baseType: !316, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1115, file: !312, line: 267, baseType: !316, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1115, file: !312, line: 268, baseType: !316, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1115, file: !312, line: 269, baseType: !316, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1115, file: !312, line: 270, baseType: !316, size: 32, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1115, file: !312, line: 271, baseType: !316, size: 32, offset: 160)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1115, file: !312, line: 272, baseType: !316, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1115, file: !312, line: 273, baseType: !316, size: 32, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1115, file: !312, line: 274, baseType: !1126, size: 64, offset: 256)
!1126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !175)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 288, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 281, size: 288, elements: !1130)
!1130 = !{!1131, !1132, !1133, !1135, !1136}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1129, file: !312, line: 283, baseType: !316, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1129, file: !312, line: 284, baseType: !316, size: 32, offset: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1129, file: !312, line: 285, baseType: !1134, size: 128, offset: 64)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !686)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1129, file: !312, line: 286, baseType: !838, size: 64, offset: 192)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1129, file: !312, line: 287, baseType: !316, size: 32, offset: 256)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !816, line: 100, size: 224, elements: !1141)
!1141 = !{!1142, !1147, !1148, !1157, !1162, !1167, !1172}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1140, file: !816, line: 101, baseType: !1143, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !816, line: 76, baseType: !1144)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!109, !1040, !911}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1140, file: !816, line: 102, baseType: !1143, size: 32, offset: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1140, file: !816, line: 103, baseType: !1149, size: 32, offset: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !816, line: 83, baseType: !1150)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!109, !1040, !911, !1153, !107}
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !816, line: 72, baseType: !1154)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{null, !1040, !911, !107}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1140, file: !816, line: 104, baseType: !1158, size: 32, offset: 96)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !816, line: 79, baseType: !1159)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!109, !1040, !911, !867}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1140, file: !816, line: 105, baseType: !1163, size: 32, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !816, line: 88, baseType: !1164)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!815, !1040, !911}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1140, file: !816, line: 106, baseType: !1168, size: 32, offset: 160)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !816, line: 92, baseType: !1169)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!109, !1040, !911, !937}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1140, file: !816, line: 107, baseType: !1173, size: 32, offset: 192)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !816, line: 96, baseType: !1174)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!109, !1040, !911, !107}
!1177 = !{!1178, !1184, !1186, !1196, !1198, !1200, !1202, !1207, !1209, !1211, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240, !1242, !1244, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1278, !1280, !1282, !1284, !1286, !1009, !1288, !1290, !1303, !1305, !1307, !1309, !1311, !1313}
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1011, file: !1180, line: 762, type: !1181, isLocal: false, isDefinition: true, align: 16)
!1180 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 112, elements: !1182)
!1182 = !{!1183}
!1183 = !DISubrange(count: 7)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1011, file: !1180, line: 762, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1011, file: !1180, line: 762, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1190)
!1190 = !{!1191, !1195}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1189, file: !327, line: 60, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!109, !1040}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1189, file: !327, line: 65, baseType: !1040, size: 32, offset: 32)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1011, file: !1180, line: 766, type: !1181, isLocal: false, isDefinition: true, align: 16)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1011, file: !1180, line: 766, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1011, file: !1180, line: 766, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1011, file: !1180, line: 770, type: !1204, isLocal: false, isDefinition: true, align: 16)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 80, elements: !1205)
!1205 = !{!1206}
!1206 = !DISubrange(count: 5)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1011, file: !1180, line: 770, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1011, file: !1180, line: 770, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1011, file: !1180, line: 774, type: !1213, isLocal: false, isDefinition: true, align: 16)
!1213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 96, elements: !1214)
!1214 = !{!1215}
!1215 = !DISubrange(count: 6)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1011, file: !1180, line: 774, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1011, file: !1180, line: 774, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1011, file: !1180, line: 778, type: !1204, isLocal: false, isDefinition: true, align: 16)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1011, file: !1180, line: 778, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1011, file: !1180, line: 778, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1011, file: !1180, line: 782, type: !1204, isLocal: false, isDefinition: true, align: 16)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1011, file: !1180, line: 782, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1011, file: !1180, line: 782, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1011, file: !1180, line: 786, type: !1204, isLocal: false, isDefinition: true, align: 16)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1011, file: !1180, line: 786, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1011, file: !1180, line: 786, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1011, file: !1180, line: 790, type: !1204, isLocal: false, isDefinition: true, align: 16)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1011, file: !1180, line: 790, type: !1041, isLocal: false, isDefinition: true, align: 32)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1011, file: !1180, line: 790, type: !1188, isLocal: true, isDefinition: true, align: 32)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1011, file: !1180, line: 762, type: !1246, isLocal: true, isDefinition: true)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1247, line: 237, size: 128, elements: !1248)
!1247 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1248 = !{!1249, !1250, !1251}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1246, file: !1247, line: 239, baseType: !1109, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1246, file: !1247, line: 241, baseType: !1040, size: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1246, file: !1247, line: 243, baseType: !1252, size: 64, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1087, line: 40, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1087, line: 35, size: 64, elements: !1254)
!1254 = !{!1255, !1257}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1253, file: !1087, line: 36, baseType: !1256, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1253, file: !1087, line: 37, baseType: !1256, size: 32, offset: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1011, file: !1180, line: 762, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1011, file: !1180, line: 766, type: !1246, isLocal: true, isDefinition: true)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1011, file: !1180, line: 766, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1011, file: !1180, line: 770, type: !1246, isLocal: true, isDefinition: true)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1011, file: !1180, line: 770, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1011, file: !1180, line: 774, type: !1246, isLocal: true, isDefinition: true)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1011, file: !1180, line: 774, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1011, file: !1180, line: 778, type: !1246, isLocal: true, isDefinition: true)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1011, file: !1180, line: 778, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1011, file: !1180, line: 782, type: !1246, isLocal: true, isDefinition: true)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1011, file: !1180, line: 782, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1011, file: !1180, line: 786, type: !1246, isLocal: true, isDefinition: true)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1011, file: !1180, line: 786, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1011, file: !1180, line: 790, type: !1246, isLocal: true, isDefinition: true)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1011, file: !1180, line: 790, type: !1049, isLocal: true, isDefinition: true, align: 8)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1011, file: !1180, line: 656, type: !1033, isLocal: true, isDefinition: true)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1011, file: !1180, line: 766, type: !1292, isLocal: true, isDefinition: true)
!1292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1247, line: 224, size: 160, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1293, file: !1247, line: 226, baseType: !1104, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1293, file: !1247, line: 228, baseType: !867, size: 32, offset: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1293, file: !1247, line: 230, baseType: !109, size: 32, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1293, file: !1247, line: 231, baseType: !1299, size: 64, offset: 96)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !863, line: 343, size: 64, elements: !1300)
!1300 = !{!1301, !1302}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1299, file: !863, line: 344, baseType: !110, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1299, file: !863, line: 345, baseType: !110, size: 32, offset: 32)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1011, file: !1180, line: 770, type: !1292, isLocal: true, isDefinition: true)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1011, file: !1180, line: 774, type: !1292, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1011, file: !1180, line: 778, type: !1292, isLocal: true, isDefinition: true)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1011, file: !1180, line: 782, type: !1292, isLocal: true, isDefinition: true)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1011, file: !1180, line: 786, type: !1292, isLocal: true, isDefinition: true)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1011, file: !1180, line: 790, type: !1292, isLocal: true, isDefinition: true)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1317, file: !1456, line: 44, type: !1574, isLocal: false, isDefinition: true)
!1317 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1318, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1319, retainedTypes: !1352, globals: !1453, splitDebugInlining: false, nameTableKind: None)
!1318 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!1319 = !{!30, !1320, !1327, !1334, !1341, !1347, !815}
!1320 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !951, line: 47, baseType: !32, size: 32, elements: !1321)
!1321 = !{!1322, !1323, !1324, !1325, !1326}
!1322 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1323 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1324 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1325 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1326 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1327 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !951, line: 75, baseType: !32, size: 32, elements: !1328)
!1328 = !{!1329, !1330, !1331, !1332, !1333}
!1329 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1330 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1331 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1332 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1333 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1334 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !951, line: 92, baseType: !32, size: 32, elements: !1335)
!1335 = !{!1336, !1337, !1338, !1339, !1340}
!1336 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1337 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1338 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1339 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1340 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1341 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !951, line: 84, baseType: !32, size: 32, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346}
!1343 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1344 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1345 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1346 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !951, line: 107, baseType: !32, size: 32, elements: !1348)
!1348 = !{!1349, !1350, !1351}
!1349 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1350 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1351 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1352 = !{!107, !109, !1353, !181, !180, !1402, !110, !911, !1413, !194, !111, !1452}
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !951, line: 336, size: 160, elements: !1356)
!1356 = !{!1357, !1376, !1380, !1384, !1397}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1355, file: !951, line: 365, baseType: !1358, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 32)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!109, !1361, !972}
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1363)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1364)
!1364 = !{!1365, !1366, !1367, !1368, !1374, !1375}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1363, file: !336, line: 380, baseType: !279, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1363, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1363, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1363, file: !336, line: 386, baseType: !1369, size: 32, offset: 96)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1371)
!1371 = !{!1372, !1373}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1370, file: !336, line: 359, baseType: !180, size: 8)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1370, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1363, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1363, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1355, file: !951, line: 366, baseType: !1377, size: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{null, !1361, !181}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1355, file: !951, line: 374, baseType: !1381, size: 32, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!109, !1361}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1355, file: !951, line: 377, baseType: !1385, size: 32, offset: 96)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{!109, !1361, !1388}
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !951, line: 122, size: 64, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1395, !1396}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1390, file: !951, line: 123, baseType: !110, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1390, file: !951, line: 124, baseType: !180, size: 8, offset: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1390, file: !951, line: 125, baseType: !180, size: 8, offset: 40)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1390, file: !951, line: 126, baseType: !180, size: 8, offset: 48)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1390, file: !951, line: 127, baseType: !180, size: 8, offset: 56)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1355, file: !951, line: 379, baseType: !1398, size: 32, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!109, !1361, !1401}
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 507, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 498, size: 224, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1410, !1411, !1412}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1404, file: !312, line: 500, baseType: !316, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1404, file: !312, line: 501, baseType: !316, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1404, file: !312, line: 502, baseType: !316, size: 32, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1404, file: !312, line: 503, baseType: !316, size: 32, offset: 96)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1404, file: !312, line: 504, baseType: !316, size: 32, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1404, file: !312, line: 505, baseType: !316, size: 32, offset: 160)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1404, file: !312, line: 506, baseType: !316, size: 32, offset: 192)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !816, line: 100, size: 224, elements: !1416)
!1416 = !{!1417, !1422, !1423, !1432, !1437, !1442, !1447}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1415, file: !816, line: 101, baseType: !1418, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !816, line: 76, baseType: !1419)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!109, !1361, !911}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1415, file: !816, line: 102, baseType: !1418, size: 32, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1415, file: !816, line: 103, baseType: !1424, size: 32, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !816, line: 83, baseType: !1425)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 32)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!109, !1361, !911, !1428, !107}
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !816, line: 72, baseType: !1429)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{null, !1361, !911, !107}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1415, file: !816, line: 104, baseType: !1433, size: 32, offset: 96)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !816, line: 79, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!109, !1361, !911, !867}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1415, file: !816, line: 105, baseType: !1438, size: 32, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !816, line: 88, baseType: !1439)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!815, !1361, !911}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1415, file: !816, line: 106, baseType: !1443, size: 32, offset: 160)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !816, line: 92, baseType: !1444)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!109, !1361, !911, !937}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1415, file: !816, line: 107, baseType: !1448, size: 32, offset: 192)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !816, line: 96, baseType: !1449)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!109, !1361, !911, !107}
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!1453 = !{!1315, !1454, !1460, !1462, !1469, !1471, !1473, !1475, !1477, !1479, !1481, !1483, !1485, !1487, !1531, !1534, !1536, !1539, !1542, !1544, !1550, !1552, !1554, !1556, !1558, !1560, !1562, !1564, !1566, !1568, !1570, !1572}
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1457, isLocal: false, isDefinition: true, align: 16)
!1456 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !1458)
!1458 = !{!1459}
!1459 = !DISubrange(count: 8)
!1460 = !DIGlobalVariableExpression(var: !1461, expr: !DIExpression())
!1461 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1362, isLocal: false, isDefinition: true, align: 32)
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1464, isLocal: true, isDefinition: true, align: 32)
!1464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1466)
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1465, file: !327, line: 60, baseType: !1381, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1465, file: !327, line: 65, baseType: !1361, size: 32, offset: 32)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1457, isLocal: false, isDefinition: true, align: 16)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1362, isLocal: false, isDefinition: true, align: 32)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1464, isLocal: true, isDefinition: true, align: 32)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1457, isLocal: false, isDefinition: true, align: 16)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1362, isLocal: false, isDefinition: true, align: 32)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1464, isLocal: true, isDefinition: true, align: 32)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1370, isLocal: true, isDefinition: true, align: 8)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1370, isLocal: true, isDefinition: true, align: 8)
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1370, isLocal: true, isDefinition: true, align: 8)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1317, file: !1456, line: 1914, type: !1489, isLocal: true, isDefinition: true)
!1489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1491, line: 22, size: 224, elements: !1492)
!1491 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1492 = !{!1493, !1494, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1490, file: !1491, line: 24, baseType: !1402, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1490, file: !1491, line: 26, baseType: !1495, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !863, line: 343, size: 64, elements: !1498)
!1498 = !{!1499, !1500}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1497, file: !863, line: 344, baseType: !110, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1497, file: !863, line: 345, baseType: !110, size: 32, offset: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1490, file: !1491, line: 28, baseType: !234, size: 32, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1490, file: !1491, line: 30, baseType: !347, size: 8, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1490, file: !1491, line: 32, baseType: !109, size: 32, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1490, file: !1491, line: 34, baseType: !347, size: 8, offset: 160)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1490, file: !1491, line: 36, baseType: !347, size: 8, offset: 168)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1490, file: !1491, line: 38, baseType: !347, size: 8, offset: 176)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1490, file: !1491, line: 40, baseType: !347, size: 8, offset: 184)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1490, file: !1491, line: 41, baseType: !1509, size: 32, offset: 192)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1512, line: 60, size: 64, elements: !1513)
!1512 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1513 = !{!1514, !1530}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1511, file: !1512, line: 69, baseType: !1515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1512, line: 50, size: 64, elements: !1518)
!1518 = !{!1519, !1528, !1529}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1517, file: !1512, line: 52, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1523, line: 37, baseType: !1524)
!1523 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1523, line: 32, size: 64, elements: !1525)
!1525 = !{!1526, !1527}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1524, file: !1523, line: 34, baseType: !110, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1524, file: !1523, line: 36, baseType: !110, size: 32, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1517, file: !1512, line: 54, baseType: !180, size: 8, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1517, file: !1512, line: 56, baseType: !180, size: 8, offset: 40)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1511, file: !1512, line: 71, baseType: !180, size: 8, offset: 32)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1317, file: !1456, line: 1914, type: !1533, isLocal: true, isDefinition: true)
!1533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1496, size: 64, elements: !517)
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1510, isLocal: true, isDefinition: true)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1516, size: 64, elements: !517)
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1317, file: !1456, line: 1914, type: !1541, isLocal: true, isDefinition: true)
!1541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1521, size: 128, elements: !175)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1317, file: !1456, line: 1539, type: !1354, isLocal: true, isDefinition: true)
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1317, file: !1456, line: 1914, type: !1546, isLocal: true, isDefinition: true)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1491, line: 74, size: 64, elements: !1547)
!1547 = !{!1548, !1549}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1546, file: !1491, line: 76, baseType: !110, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1546, file: !1491, line: 78, baseType: !1361, size: 32, offset: 32)
!1550 = !DIGlobalVariableExpression(var: !1551, expr: !DIExpression())
!1551 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1317, file: !1456, line: 1914, type: !1489, isLocal: true, isDefinition: true)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1317, file: !1456, line: 1914, type: !1533, isLocal: true, isDefinition: true)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1510, isLocal: true, isDefinition: true)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1317, file: !1456, line: 1914, type: !1541, isLocal: true, isDefinition: true)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1317, file: !1456, line: 1914, type: !1546, isLocal: true, isDefinition: true)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1317, file: !1456, line: 1914, type: !1489, isLocal: true, isDefinition: true)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1317, file: !1456, line: 1914, type: !1533, isLocal: true, isDefinition: true)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1510, isLocal: true, isDefinition: true)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1317, file: !1456, line: 1914, type: !1541, isLocal: true, isDefinition: true)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1317, file: !1456, line: 1914, type: !1546, isLocal: true, isDefinition: true)
!1574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1576)
!1576 = !{!1577, !1578}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1575, file: !291, line: 17, baseType: !279, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1575, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1581, file: !1659, line: 65, type: !316, isLocal: true, isDefinition: true)
!1581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1583, retainedTypes: !1584, globals: !1656, splitDebugInlining: false, nameTableKind: None)
!1582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!1583 = !{!604}
!1584 = !{!103, !1585, !744, !180, !110, !1593, !1624}
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !1587)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !1588)
!1588 = !{!1589, !1590, !1591, !1592}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1587, file: !535, line: 766, baseType: !316, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1587, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1587, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1587, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1596)
!1596 = !{!1597, !1599, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1614, !1619, !1623}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1595, file: !535, line: 413, baseType: !1598, size: 256)
!1598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1458)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1595, file: !535, line: 414, baseType: !1600, size: 768, offset: 256)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1601)
!1601 = !{!1602}
!1602 = !DISubrange(count: 24)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1595, file: !535, line: 415, baseType: !1598, size: 256, offset: 1024)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1595, file: !535, line: 416, baseType: !1600, size: 768, offset: 1280)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1595, file: !535, line: 417, baseType: !1598, size: 256, offset: 2048)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1595, file: !535, line: 418, baseType: !1600, size: 768, offset: 2304)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1595, file: !535, line: 419, baseType: !1598, size: 256, offset: 3072)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1595, file: !535, line: 420, baseType: !1600, size: 768, offset: 3328)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1595, file: !535, line: 421, baseType: !1598, size: 256, offset: 4096)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1595, file: !535, line: 422, baseType: !1611, size: 1792, offset: 4352)
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1612)
!1612 = !{!1613}
!1613 = !DISubrange(count: 56)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1595, file: !535, line: 423, baseType: !1615, size: 1920, offset: 6144)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1616, size: 1920, elements: !1617)
!1616 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !180)
!1617 = !{!1618}
!1618 = !DISubrange(count: 240)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1595, file: !535, line: 424, baseType: !1620, size: 20608, offset: 8064)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1621)
!1621 = !{!1622}
!1622 = !DISubrange(count: 644)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1595, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1631, !1632, !1633, !1634, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1647, !1648, !1649, !1651, !1653, !1655}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1626, file: !535, line: 447, baseType: !539, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1626, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1626, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1626, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1626, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1626, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1626, file: !535, line: 453, baseType: !1635, size: 96, offset: 192)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1616, size: 96, elements: !1636)
!1636 = !{!1637}
!1637 = !DISubrange(count: 12)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1626, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1626, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1626, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1626, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1626, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1626, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1626, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1626, file: !535, line: 461, baseType: !1646, size: 64, offset: 512)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !175)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1626, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1626, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1626, file: !535, line: 464, baseType: !1650, size: 128, offset: 640)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 128, elements: !686)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1626, file: !535, line: 465, baseType: !1652, size: 160, offset: 768)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 160, elements: !1205)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1626, file: !535, line: 466, baseType: !1654, size: 160, offset: 928)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1205)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1626, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1656 = !{!1657, !1683, !1688, !1690, !1692, !1579}
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1581, file: !1659, line: 285, type: !1660, isLocal: true, isDefinition: true, align: 32)
!1659 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1662)
!1662 = !{!1663, !1682}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1661, file: !327, line: 60, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!109, !1667}
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1670)
!1670 = !{!1671, !1672, !1673, !1674, !1680, !1681}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1669, file: !336, line: 380, baseType: !279, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1669, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1669, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1669, file: !336, line: 386, baseType: !1675, size: 32, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1677)
!1677 = !{!1678, !1679}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1676, file: !336, line: 359, baseType: !180, size: 8)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1676, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1669, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1669, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1661, file: !327, line: 65, baseType: !1667, size: 32, offset: 32)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "lock", scope: !1581, file: !1659, line: 34, type: !1685, isLocal: true, isDefinition: true)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !1686)
!1686 = !{!1687}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1685, file: !253, line: 52, baseType: !22, size: 32)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "last_load", scope: !1581, file: !1659, line: 36, type: !110, isLocal: true, isDefinition: true)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1581, file: !1659, line: 48, type: !110, isLocal: true, isDefinition: true)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1581, file: !1659, line: 54, type: !110, isLocal: true, isDefinition: true)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1696, file: !1778, line: 22, type: !1780, isLocal: true, isDefinition: true)
!1696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1698, retainedTypes: !1699, globals: !1775, splitDebugInlining: false, nameTableKind: None)
!1697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!1698 = !{!1014, !1020}
!1699 = !{!1700, !1764, !1769, !1067, !1020, !1014, !1774, !107}
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1015, line: 523, size: 288, elements: !1703)
!1703 = !{!1704, !1723, !1727, !1731, !1735, !1736, !1737, !1741, !1760}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1702, file: !1015, line: 524, baseType: !1705, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!109, !1708, !1055, !1056}
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1721, !1722}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1710, file: !336, line: 380, baseType: !279, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1710, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1710, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1710, file: !336, line: 386, baseType: !1716, size: 32, offset: 96)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1718)
!1718 = !{!1719, !1720}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1717, file: !336, line: 359, baseType: !180, size: 8)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1717, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1710, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1710, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1702, file: !1015, line: 530, baseType: !1724, size: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{!109, !1708, !1061}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1702, file: !1015, line: 532, baseType: !1728, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!109, !1708, !1067, !1062}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1702, file: !1015, line: 535, baseType: !1732, size: 32, offset: 96)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!109, !1708, !1067}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1702, file: !1015, line: 537, baseType: !1732, size: 32, offset: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1702, file: !1015, line: 539, baseType: !1732, size: 32, offset: 160)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1702, file: !1015, line: 541, baseType: !1738, size: 32, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!109, !1708, !1055, !1014, !1020}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1702, file: !1015, line: 544, baseType: !1742, size: 32, offset: 224)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!109, !1708, !1745, !347}
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1015, line: 478, size: 96, elements: !1747)
!1747 = !{!1748, !1754, !1759}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1746, file: !1015, line: 482, baseType: !1749, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1087, line: 33, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1087, line: 29, size: 32, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1750, file: !1087, line: 30, baseType: !1753, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1746, file: !1015, line: 485, baseType: !1755, size: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1015, line: 464, baseType: !1756)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{null, !1708, !1745, !1067}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1746, file: !1015, line: 493, baseType: !1067, size: 32, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1702, file: !1015, line: 547, baseType: !1761, size: 32, offset: 256)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{!110, !1708}
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1015, line: 428, size: 32, elements: !1767)
!1767 = !{!1768}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1766, file: !1015, line: 434, baseType: !1067, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1015, line: 441, size: 32, elements: !1772)
!1772 = !{!1773}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1771, file: !1015, line: 447, baseType: !1067, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1775 = !{!1776, !1694}
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1777 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1696, file: !1778, line: 37, type: !1779, isLocal: true, isDefinition: true)
!1778 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !234)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1781, size: 352, elements: !1782)
!1781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1708)
!1782 = !{!1783}
!1783 = !DISubrange(count: 11)
!1784 = !DIGlobalVariableExpression(var: !1785, expr: !DIExpression())
!1785 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1786, file: !1828, line: 139, type: !1835, isLocal: false, isDefinition: true)
!1786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1788, globals: !1825, splitDebugInlining: false, nameTableKind: None)
!1787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!1788 = !{!1789}
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 369, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 335, size: 1152, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1791, file: !312, line: 337, baseType: !316, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1791, file: !312, line: 338, baseType: !316, size: 32, offset: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1791, file: !312, line: 339, baseType: !316, size: 32, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1791, file: !312, line: 340, baseType: !316, size: 32, offset: 96)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1791, file: !312, line: 341, baseType: !316, size: 32, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1791, file: !312, line: 342, baseType: !316, size: 32, offset: 160)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1791, file: !312, line: 343, baseType: !316, size: 32, offset: 192)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1791, file: !312, line: 344, baseType: !110, size: 32, offset: 224)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1791, file: !312, line: 345, baseType: !316, size: 32, offset: 256)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1791, file: !312, line: 346, baseType: !316, size: 32, offset: 288)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1791, file: !312, line: 347, baseType: !838, size: 64, offset: 320)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1791, file: !312, line: 348, baseType: !316, size: 32, offset: 384)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1791, file: !312, line: 349, baseType: !316, size: 32, offset: 416)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1791, file: !312, line: 350, baseType: !316, size: 32, offset: 448)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1791, file: !312, line: 351, baseType: !110, size: 32, offset: 480)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1791, file: !312, line: 352, baseType: !316, size: 32, offset: 512)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1791, file: !312, line: 353, baseType: !316, size: 32, offset: 544)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1791, file: !312, line: 354, baseType: !838, size: 64, offset: 576)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1791, file: !312, line: 355, baseType: !316, size: 32, offset: 640)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1791, file: !312, line: 356, baseType: !316, size: 32, offset: 672)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1791, file: !312, line: 357, baseType: !316, size: 32, offset: 704)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1791, file: !312, line: 358, baseType: !110, size: 32, offset: 736)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1791, file: !312, line: 359, baseType: !316, size: 32, offset: 768)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1791, file: !312, line: 360, baseType: !316, size: 32, offset: 800)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1791, file: !312, line: 361, baseType: !838, size: 64, offset: 832)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1791, file: !312, line: 362, baseType: !316, size: 32, offset: 896)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1791, file: !312, line: 363, baseType: !316, size: 32, offset: 928)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1791, file: !312, line: 364, baseType: !838, size: 64, offset: 960)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1791, file: !312, line: 365, baseType: !316, size: 32, offset: 1024)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1791, file: !312, line: 366, baseType: !316, size: 32, offset: 1056)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1791, file: !312, line: 367, baseType: !859, size: 32, offset: 1088)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1791, file: !312, line: 368, baseType: !316, size: 32, offset: 1120)
!1825 = !{!1826, !1829, !1784}
!1826 = !DIGlobalVariableExpression(var: !1827, expr: !DIExpression())
!1827 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1786, file: !1828, line: 137, type: !110, isLocal: false, isDefinition: true)
!1828 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1786, file: !1828, line: 138, type: !1831, isLocal: false, isDefinition: true)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1832, size: 128, elements: !1833)
!1832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!1833 = !{!1834}
!1834 = !DISubrange(count: 16)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1832, size: 64, elements: !1458)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1838, file: !1841, line: 23, type: !1842, isLocal: false, isDefinition: true)
!1838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1840, splitDebugInlining: false, nameTableKind: None)
!1839 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!1840 = !{!1836}
!1841 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1843 = !DIGlobalVariableExpression(var: !1844, expr: !DIExpression())
!1844 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1845, file: !1849, line: 37, type: !2103, isLocal: false, isDefinition: true)
!1845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1846, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1847, retainedTypes: !1856, globals: !1929, splitDebugInlining: false, nameTableKind: None)
!1846 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!1847 = !{!1848, !30, !604}
!1848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1849, line: 63, baseType: !32, size: 32, elements: !1850)
!1849 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1850 = !{!1851, !1852, !1853, !1854, !1855}
!1851 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1852 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1853 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1854 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1855 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1856 = !{!234, !107, !109, !1857, !285, !110, !1887, !744, !180, !1912}
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1859)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1860, line: 51, size: 64, elements: !1861)
!1860 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1861 = !{!1862, !1882}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1859, file: !1860, line: 52, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1860, line: 38, baseType: !1864)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!109, !1867, !286, !194}
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874, !1880, !1881}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1869, file: !336, line: 380, baseType: !279, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1869, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1869, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1869, file: !336, line: 386, baseType: !1875, size: 32, offset: 96)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1876, file: !336, line: 359, baseType: !180, size: 8)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1876, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1869, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1869, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1859, file: !1860, line: 53, baseType: !1883, size: 32, offset: 32)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1860, line: 47, baseType: !1884)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!109, !1867, !286, !194, !110}
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1890)
!1890 = !{!1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1889, file: !535, line: 447, baseType: !539, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1889, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1889, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1889, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1889, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1889, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1889, file: !535, line: 453, baseType: !1635, size: 96, offset: 192)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1889, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1889, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1889, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1889, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1889, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1889, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1889, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1889, file: !535, line: 461, baseType: !1646, size: 64, offset: 512)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1889, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1889, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1889, file: !535, line: 464, baseType: !1650, size: 128, offset: 640)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1889, file: !535, line: 465, baseType: !1652, size: 160, offset: 768)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1889, file: !535, line: 466, baseType: !1654, size: 160, offset: 928)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1889, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1914)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1915)
!1915 = !{!1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1914, file: !535, line: 413, baseType: !1598, size: 256)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1914, file: !535, line: 414, baseType: !1600, size: 768, offset: 256)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1914, file: !535, line: 415, baseType: !1598, size: 256, offset: 1024)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1914, file: !535, line: 416, baseType: !1600, size: 768, offset: 1280)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1914, file: !535, line: 417, baseType: !1598, size: 256, offset: 2048)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1914, file: !535, line: 418, baseType: !1600, size: 768, offset: 2304)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1914, file: !535, line: 419, baseType: !1598, size: 256, offset: 3072)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1914, file: !535, line: 420, baseType: !1600, size: 768, offset: 3328)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1914, file: !535, line: 421, baseType: !1598, size: 256, offset: 4096)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1914, file: !535, line: 422, baseType: !1611, size: 1792, offset: 4352)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1914, file: !535, line: 423, baseType: !1615, size: 1920, offset: 6144)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1914, file: !535, line: 424, baseType: !1620, size: 20608, offset: 8064)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1914, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1929 = !{!1843, !1930, !2056, !2063, !2065, !2068, !2073, !2075, !2080}
!1930 = !DIGlobalVariableExpression(var: !1931, expr: !DIExpression())
!1931 = distinct !DIGlobalVariable(name: "_kernel", scope: !1845, file: !1849, line: 40, type: !1932, isLocal: false, isDefinition: true)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1933)
!1933 = !{!1934, !2051}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1932, file: !122, line: 159, baseType: !1935, size: 192)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1936, size: 192, elements: !517)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1937)
!1937 = !{!1938, !1939, !1940, !2044, !2045, !2046, !2047}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1936, file: !122, line: 102, baseType: !110, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1936, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1936, file: !122, line: 108, baseType: !1941, size: 32, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !1943)
!1943 = !{!1944, !2002, !2014, !2015, !2016, !2017, !2018, !2024, !2039}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1942, file: !158, line: 247, baseType: !1945, size: 384)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !1946)
!1946 = !{!1947, !1971, !1978, !1979, !1980, !1989, !1990, !1991}
!1947 = !DIDerivedType(tag: DW_TAG_member, scope: !1945, file: !158, line: 60, baseType: !1948, size: 64)
!1948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1945, file: !158, line: 60, size: 64, elements: !1949)
!1949 = !{!1950, !1965}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1948, file: !158, line: 61, baseType: !1951, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !1953)
!1953 = !{!1954, !1960}
!1954 = !DIDerivedType(tag: DW_TAG_member, scope: !1952, file: !127, line: 38, baseType: !1955, size: 32)
!1955 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1952, file: !127, line: 38, size: 32, elements: !1956)
!1956 = !{!1957, !1959}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1955, file: !127, line: 39, baseType: !1958, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1955, file: !127, line: 40, baseType: !1958, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, scope: !1952, file: !127, line: 42, baseType: !1961, size: 32, offset: 32)
!1961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1952, file: !127, line: 42, size: 32, elements: !1962)
!1962 = !{!1963, !1964}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1961, file: !127, line: 43, baseType: !1958, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1961, file: !127, line: 44, baseType: !1958, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1948, file: !158, line: 62, baseType: !1966, size: 64)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !1967)
!1967 = !{!1968}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1966, file: !170, line: 50, baseType: !1969, size: 64)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1970, size: 64, elements: !175)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1945, file: !158, line: 68, baseType: !1972, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !1974)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !1975)
!1975 = !{!1976}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1974, file: !122, line: 232, baseType: !1977, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !1952)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1945, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1945, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!1980 = !DIDerivedType(tag: DW_TAG_member, scope: !1945, file: !158, line: 90, baseType: !1981, size: 16, offset: 112)
!1981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1945, file: !158, line: 90, size: 16, elements: !1982)
!1982 = !{!1983, !1988}
!1983 = !DIDerivedType(tag: DW_TAG_member, scope: !1981, file: !158, line: 91, baseType: !1984, size: 16)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1981, file: !158, line: 91, size: 16, elements: !1985)
!1985 = !{!1986, !1987}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1984, file: !158, line: 96, baseType: !190, size: 8)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1984, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1981, file: !158, line: 100, baseType: !194, size: 16)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1945, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1945, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1945, file: !158, line: 131, baseType: !1992, size: 192, offset: 192)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !1993)
!1993 = !{!1994, !1995, !2001}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1992, file: !122, line: 245, baseType: !1951, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1992, file: !122, line: 246, baseType: !1996, size: 32, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !1997)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{null, !2000}
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1992, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1942, file: !158, line: 250, baseType: !2003, size: 288, offset: 384)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2004)
!2004 = !{!2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2003, file: !211, line: 26, baseType: !110, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2003, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2003, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2003, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2003, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2003, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2003, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2003, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2003, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1942, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1942, file: !158, line: 256, baseType: !1973, size: 64, offset: 704)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1942, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1942, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1942, file: !158, line: 300, baseType: !2019, size: 96, offset: 1056)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2020)
!2020 = !{!2021, !2022, !2023}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2019, file: !158, line: 153, baseType: !22, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2019, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2019, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1942, file: !158, line: 325, baseType: !2025, size: 32, offset: 1152)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2027)
!2027 = !{!2028, !2034, !2035}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2026, file: !118, line: 5074, baseType: !2029, size: 96)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2030)
!2030 = !{!2031, !2032, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2029, file: !243, line: 57, baseType: !246, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2029, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2029, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2026, file: !118, line: 5075, baseType: !1973, size: 64, offset: 96)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2026, file: !118, line: 5076, baseType: !2036, size: 32, offset: 160)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2037)
!2037 = !{!2038}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2036, file: !253, line: 52, baseType: !22, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1942, file: !158, line: 343, baseType: !2040, size: 64, offset: 1184)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2041)
!2041 = !{!2042, !2043}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2040, file: !211, line: 63, baseType: !110, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2040, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1936, file: !122, line: 111, baseType: !1941, size: 32, offset: 96)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1936, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1936, file: !122, line: 127, baseType: !180, size: 8, offset: 160)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1936, file: !122, line: 153, baseType: !2048, offset: 168)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2049, line: 33, elements: !2050)
!2049 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2050 = !{}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1932, file: !122, line: 170, baseType: !2052, size: 96, offset: 192)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2053)
!2053 = !{!2054, !2055}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2052, file: !122, line: 86, baseType: !1941, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2052, file: !122, line: 90, baseType: !1977, size: 64, offset: 32)
!2056 = !DIGlobalVariableExpression(var: !2057, expr: !DIExpression())
!2057 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1845, file: !1849, line: 43, type: !2058, isLocal: false, isDefinition: true, align: 512)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2059, size: 8704, elements: !2062)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !2060)
!2060 = !{!2061}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2059, file: !147, line: 48, baseType: !150, size: 8)
!2062 = !{!153}
!2063 = !DIGlobalVariableExpression(var: !2064, expr: !DIExpression())
!2064 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1845, file: !1849, line: 44, type: !1942, isLocal: false, isDefinition: true)
!2065 = !DIGlobalVariableExpression(var: !2066, expr: !DIExpression())
!2066 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1845, file: !1849, line: 48, type: !2067, isLocal: false, isDefinition: true)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 1280, elements: !517)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1845, file: !1849, line: 86, type: !2070, isLocal: false, isDefinition: true, align: 512)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2059, size: 16896, elements: !2071)
!2071 = !{!518, !2072}
!2072 = !DISubrange(count: 2112)
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1845, file: !1849, line: 217, type: !347, isLocal: false, isDefinition: true)
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1845, file: !1849, line: 50, type: !2077, isLocal: true, isDefinition: true, align: 512)
!2077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2059, size: 3072, elements: !2078)
!2078 = !{!518, !2079}
!2079 = !DISubrange(count: 384)
!2080 = !DIGlobalVariableExpression(var: !2081, expr: !DIExpression())
!2081 = distinct !DIGlobalVariable(name: "levels", scope: !2082, file: !1849, line: 232, type: !2102, isLocal: true, isDefinition: true)
!2082 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1849, file: !1849, line: 230, type: !2083, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !2085)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{null, !1848}
!2085 = !{!2086, !2087, !2097, !2101}
!2086 = !DILocalVariable(name: "level", arg: 1, scope: !2082, file: !1849, line: 230, type: !1848)
!2087 = !DILocalVariable(name: "entry", scope: !2082, file: !1849, line: 244, type: !2088)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2090)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !2091)
!2091 = !{!2092, !2096}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2090, file: !327, line: 60, baseType: !2093, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{!109, !1867}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2090, file: !327, line: 65, baseType: !1867, size: 32, offset: 32)
!2097 = !DILocalVariable(name: "dev", scope: !2098, file: !1849, line: 247, type: !1867)
!2098 = distinct !DILexicalBlock(scope: !2099, file: !1849, line: 246, column: 64)
!2099 = distinct !DILexicalBlock(scope: !2100, file: !1849, line: 246, column: 2)
!2100 = distinct !DILexicalBlock(scope: !2082, file: !1849, line: 246, column: 2)
!2101 = !DILocalVariable(name: "rc", scope: !2098, file: !1849, line: 248, type: !109)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2088, size: 192, elements: !1214)
!2103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2105)
!2105 = !{!2106, !2107}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2104, file: !291, line: 17, baseType: !279, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2104, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!2108 = !DIGlobalVariableExpression(var: !2109, expr: !DIExpression())
!2109 = distinct !DIGlobalVariable(name: "states_str", scope: !2110, file: !2111, line: 276, type: !2235, isLocal: true, isDefinition: true)
!2110 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2111, file: !2111, line: 271, type: !2112, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !2226)
!2111 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2112 = !DISubroutineType(types: !2113)
!2113 = !{!279, !2114, !285, !234}
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2115)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2117)
!2117 = !{!2118, !2176, !2188, !2189, !2190, !2191, !2192, !2198, !2213}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2116, file: !158, line: 247, baseType: !2119, size: 384)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2120)
!2120 = !{!2121, !2145, !2152, !2153, !2154, !2163, !2164, !2165}
!2121 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !158, line: 60, baseType: !2122, size: 64)
!2122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !158, line: 60, size: 64, elements: !2123)
!2123 = !{!2124, !2139}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2122, file: !158, line: 61, baseType: !2125, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2126)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2127)
!2127 = !{!2128, !2134}
!2128 = !DIDerivedType(tag: DW_TAG_member, scope: !2126, file: !127, line: 38, baseType: !2129, size: 32)
!2129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2126, file: !127, line: 38, size: 32, elements: !2130)
!2130 = !{!2131, !2133}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2129, file: !127, line: 39, baseType: !2132, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2129, file: !127, line: 40, baseType: !2132, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, scope: !2126, file: !127, line: 42, baseType: !2135, size: 32, offset: 32)
!2135 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2126, file: !127, line: 42, size: 32, elements: !2136)
!2136 = !{!2137, !2138}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2135, file: !127, line: 43, baseType: !2132, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2135, file: !127, line: 44, baseType: !2132, size: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2122, file: !158, line: 62, baseType: !2140, size: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2141)
!2141 = !{!2142}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2140, file: !170, line: 50, baseType: !2143, size: 64)
!2143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2144, size: 64, elements: !175)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2119, file: !158, line: 68, baseType: !2146, size: 32, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2148)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2149)
!2149 = !{!2150}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2148, file: !122, line: 232, baseType: !2151, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2126)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2119, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2119, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2154 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !158, line: 90, baseType: !2155, size: 16, offset: 112)
!2155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !158, line: 90, size: 16, elements: !2156)
!2156 = !{!2157, !2162}
!2157 = !DIDerivedType(tag: DW_TAG_member, scope: !2155, file: !158, line: 91, baseType: !2158, size: 16)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2155, file: !158, line: 91, size: 16, elements: !2159)
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2158, file: !158, line: 96, baseType: !190, size: 8)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2158, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2155, file: !158, line: 100, baseType: !194, size: 16)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2119, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2119, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2119, file: !158, line: 131, baseType: !2166, size: 192, offset: 192)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2167)
!2167 = !{!2168, !2169, !2175}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2166, file: !122, line: 245, baseType: !2125, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2166, file: !122, line: 246, baseType: !2170, size: 32, offset: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2171)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{null, !2174}
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2166, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2116, file: !158, line: 250, baseType: !2177, size: 288, offset: 384)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2178)
!2178 = !{!2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2177, file: !211, line: 26, baseType: !110, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2177, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2177, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2177, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2177, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2177, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2177, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2177, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2177, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2116, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2116, file: !158, line: 256, baseType: !2147, size: 64, offset: 704)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2116, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2116, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2116, file: !158, line: 300, baseType: !2193, size: 96, offset: 1056)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2194)
!2194 = !{!2195, !2196, !2197}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2193, file: !158, line: 153, baseType: !22, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2193, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2193, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2116, file: !158, line: 325, baseType: !2199, size: 32, offset: 1152)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 32)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2201)
!2201 = !{!2202, !2208, !2209}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2200, file: !118, line: 5074, baseType: !2203, size: 96)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2204)
!2204 = !{!2205, !2206, !2207}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2203, file: !243, line: 57, baseType: !246, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2203, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2203, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2200, file: !118, line: 5075, baseType: !2147, size: 64, offset: 96)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2200, file: !118, line: 5076, baseType: !2210, size: 32, offset: 160)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2211)
!2211 = !{!2212}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2210, file: !253, line: 52, baseType: !22, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2116, file: !158, line: 343, baseType: !2214, size: 64, offset: 1184)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2215)
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2214, file: !211, line: 63, baseType: !110, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2214, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2220, globals: !2222, splitDebugInlining: false, nameTableKind: None)
!2219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2220 = !{!107, !279, !103, !180, !22, !109, !2221, !24, !234, !285, !110, !111}
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!2222 = !{!2108, !2223}
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "states_sz", scope: !2110, file: !2111, line: 279, type: !2225, isLocal: true, isDefinition: true)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1779, size: 256, elements: !1458)
!2226 = !{!2227, !2228, !2229, !2230, !2231, !2232, !2233}
!2227 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2110, file: !2111, line: 271, type: !2114)
!2228 = !DILocalVariable(name: "buf", arg: 2, scope: !2110, file: !2111, line: 271, type: !285)
!2229 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2110, file: !2111, line: 271, type: !234)
!2230 = !DILocalVariable(name: "off", scope: !2110, file: !2111, line: 273, type: !234)
!2231 = !DILocalVariable(name: "bit", scope: !2110, file: !2111, line: 274, type: !180)
!2232 = !DILocalVariable(name: "thread_state", scope: !2110, file: !2111, line: 275, type: !180)
!2233 = !DILocalVariable(name: "index", scope: !2234, file: !2111, line: 293, type: !180)
!2234 = distinct !DILexicalBlock(scope: !2110, file: !2111, line: 293, column: 2)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1458)
!2236 = !DIGlobalVariableExpression(var: !2237, expr: !DIExpression())
!2237 = distinct !DIGlobalVariable(name: "lock", scope: !2238, file: !2346, line: 47, type: !2337, isLocal: true, isDefinition: true)
!2238 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2239, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2240, globals: !2345, splitDebugInlining: false, nameTableKind: None)
!2239 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2240 = !{!347, !107, !109, !2241, !2256}
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2243)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2244)
!2244 = !{!2245, !2251}
!2245 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !127, line: 38, baseType: !2246, size: 32)
!2246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !127, line: 38, size: 32, elements: !2247)
!2247 = !{!2248, !2250}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2246, file: !127, line: 39, baseType: !2249, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2246, file: !127, line: 40, baseType: !2249, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !127, line: 42, baseType: !2252, size: 32, offset: 32)
!2252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !127, line: 42, size: 32, elements: !2253)
!2253 = !{!2254, !2255}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2252, file: !127, line: 43, baseType: !2249, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2252, file: !127, line: 44, baseType: !2249, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2258)
!2258 = !{!2259, !2303, !2315, !2316, !2317, !2318, !2319, !2325, !2340}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2257, file: !158, line: 247, baseType: !2260, size: 384)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2261)
!2261 = !{!2262, !2272, !2279, !2280, !2281, !2290, !2291, !2292}
!2262 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !158, line: 60, baseType: !2263, size: 64)
!2263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !158, line: 60, size: 64, elements: !2264)
!2264 = !{!2265, !2266}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2263, file: !158, line: 61, baseType: !2242, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2263, file: !158, line: 62, baseType: !2267, size: 64)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2268)
!2268 = !{!2269}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2267, file: !170, line: 50, baseType: !2270, size: 64)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2271, size: 64, elements: !175)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2260, file: !158, line: 68, baseType: !2273, size: 32, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2276)
!2276 = !{!2277}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2275, file: !122, line: 232, baseType: !2278, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2243)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2260, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2260, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2281 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !158, line: 90, baseType: !2282, size: 16, offset: 112)
!2282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !158, line: 90, size: 16, elements: !2283)
!2283 = !{!2284, !2289}
!2284 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !158, line: 91, baseType: !2285, size: 16)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2282, file: !158, line: 91, size: 16, elements: !2286)
!2286 = !{!2287, !2288}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2285, file: !158, line: 96, baseType: !190, size: 8)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2285, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2282, file: !158, line: 100, baseType: !194, size: 16)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2260, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2260, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2260, file: !158, line: 131, baseType: !2293, size: 192, offset: 192)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2294)
!2294 = !{!2295, !2296, !2302}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2293, file: !122, line: 245, baseType: !2242, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2293, file: !122, line: 246, baseType: !2297, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2298)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{null, !2301}
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2293, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2257, file: !158, line: 250, baseType: !2304, size: 288, offset: 384)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2305)
!2305 = !{!2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2304, file: !211, line: 26, baseType: !110, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2304, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2304, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2304, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2304, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2304, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2304, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2304, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2304, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2257, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2257, file: !158, line: 256, baseType: !2274, size: 64, offset: 704)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2257, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2257, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2257, file: !158, line: 300, baseType: !2320, size: 96, offset: 1056)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2321)
!2321 = !{!2322, !2323, !2324}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2320, file: !158, line: 153, baseType: !22, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2320, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2320, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2257, file: !158, line: 325, baseType: !2326, size: 32, offset: 1152)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2328)
!2328 = !{!2329, !2335, !2336}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2327, file: !118, line: 5074, baseType: !2330, size: 96)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2331)
!2331 = !{!2332, !2333, !2334}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2330, file: !243, line: 57, baseType: !246, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2330, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2330, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2327, file: !118, line: 5075, baseType: !2274, size: 64, offset: 96)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2327, file: !118, line: 5076, baseType: !2337, size: 32, offset: 160)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2338)
!2338 = !{!2339}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2337, file: !253, line: 52, baseType: !22, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2257, file: !158, line: 343, baseType: !2341, size: 64, offset: 1184)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2342)
!2342 = !{!2343, !2344}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2341, file: !211, line: 63, baseType: !110, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2341, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2345 = !{!2236}
!2346 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2349, file: !2460, line: 56, type: !2447, isLocal: false, isDefinition: true)
!2349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2350, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2351, globals: !2457, splitDebugInlining: false, nameTableKind: None)
!2350 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2351 = !{!2352, !285, !107, !2455, !286, !103, !744, !109, !110, !111, !2456}
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2354)
!2354 = !{!2355, !2413, !2425, !2426, !2427, !2428, !2429, !2435, !2450}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2353, file: !158, line: 247, baseType: !2356, size: 384)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2357)
!2357 = !{!2358, !2382, !2389, !2390, !2391, !2400, !2401, !2402}
!2358 = !DIDerivedType(tag: DW_TAG_member, scope: !2356, file: !158, line: 60, baseType: !2359, size: 64)
!2359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2356, file: !158, line: 60, size: 64, elements: !2360)
!2360 = !{!2361, !2376}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2359, file: !158, line: 61, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2363)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2364)
!2364 = !{!2365, !2371}
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2363, file: !127, line: 38, baseType: !2366, size: 32)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2363, file: !127, line: 38, size: 32, elements: !2367)
!2367 = !{!2368, !2370}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2366, file: !127, line: 39, baseType: !2369, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2366, file: !127, line: 40, baseType: !2369, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, scope: !2363, file: !127, line: 42, baseType: !2372, size: 32, offset: 32)
!2372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2363, file: !127, line: 42, size: 32, elements: !2373)
!2373 = !{!2374, !2375}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2372, file: !127, line: 43, baseType: !2369, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2372, file: !127, line: 44, baseType: !2369, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2359, file: !158, line: 62, baseType: !2377, size: 64)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2378)
!2378 = !{!2379}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2377, file: !170, line: 50, baseType: !2380, size: 64)
!2380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2381, size: 64, elements: !175)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2356, file: !158, line: 68, baseType: !2383, size: 32, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2385)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2386)
!2386 = !{!2387}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2385, file: !122, line: 232, baseType: !2388, size: 64)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2363)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2356, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2356, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2391 = !DIDerivedType(tag: DW_TAG_member, scope: !2356, file: !158, line: 90, baseType: !2392, size: 16, offset: 112)
!2392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2356, file: !158, line: 90, size: 16, elements: !2393)
!2393 = !{!2394, !2399}
!2394 = !DIDerivedType(tag: DW_TAG_member, scope: !2392, file: !158, line: 91, baseType: !2395, size: 16)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2392, file: !158, line: 91, size: 16, elements: !2396)
!2396 = !{!2397, !2398}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2395, file: !158, line: 96, baseType: !190, size: 8)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2395, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2392, file: !158, line: 100, baseType: !194, size: 16)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2356, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2356, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2356, file: !158, line: 131, baseType: !2403, size: 192, offset: 192)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2404)
!2404 = !{!2405, !2406, !2412}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2403, file: !122, line: 245, baseType: !2362, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2403, file: !122, line: 246, baseType: !2407, size: 32, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2408)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!2409 = !DISubroutineType(types: !2410)
!2410 = !{null, !2411}
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2403, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2353, file: !158, line: 250, baseType: !2414, size: 288, offset: 384)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2415)
!2415 = !{!2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2414, file: !211, line: 26, baseType: !110, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2414, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2414, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2414, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2414, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2414, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2414, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2414, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2414, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2353, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2353, file: !158, line: 256, baseType: !2384, size: 64, offset: 704)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2353, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2353, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2353, file: !158, line: 300, baseType: !2430, size: 96, offset: 1056)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2431)
!2431 = !{!2432, !2433, !2434}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2430, file: !158, line: 153, baseType: !22, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2430, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2430, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2353, file: !158, line: 325, baseType: !2436, size: 32, offset: 1152)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 32)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2438)
!2438 = !{!2439, !2445, !2446}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2437, file: !118, line: 5074, baseType: !2440, size: 96)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2441)
!2441 = !{!2442, !2443, !2444}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2440, file: !243, line: 57, baseType: !246, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2440, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2440, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2437, file: !118, line: 5075, baseType: !2384, size: 64, offset: 96)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2437, file: !118, line: 5076, baseType: !2447, size: 32, offset: 160)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2448)
!2448 = !{!2449}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2447, file: !253, line: 52, baseType: !22, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2353, file: !158, line: 343, baseType: !2451, size: 64, offset: 1184)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2452)
!2452 = !{!2453, !2454}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2451, file: !211, line: 63, baseType: !110, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2451, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!2457 = !{!2347, !2458, !2461, !2463}
!2458 = !DIGlobalVariableExpression(var: !2459, expr: !DIExpression())
!2459 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2349, file: !2460, line: 404, type: !109, isLocal: true, isDefinition: true)
!2460 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2461 = !DIGlobalVariableExpression(var: !2462, expr: !DIExpression())
!2462 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2349, file: !2460, line: 405, type: !109, isLocal: true, isDefinition: true)
!2463 = !DIGlobalVariableExpression(var: !2464, expr: !DIExpression())
!2464 = distinct !DIGlobalVariable(name: "pending_current", scope: !2349, file: !2460, line: 425, type: !2352, isLocal: true, isDefinition: true)
!2465 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression())
!2466 = distinct !DIGlobalVariable(name: "lock", scope: !2467, file: !2486, line: 14, type: !2487, isLocal: true, isDefinition: true)
!2467 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2468, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2469, globals: !2485, splitDebugInlining: false, nameTableKind: None)
!2468 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2469 = !{!107, !103, !109, !2470}
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2472)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2473)
!2473 = !{!2474, !2480}
!2474 = !DIDerivedType(tag: DW_TAG_member, scope: !2472, file: !127, line: 38, baseType: !2475, size: 32)
!2475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2472, file: !127, line: 38, size: 32, elements: !2476)
!2476 = !{!2477, !2479}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2475, file: !127, line: 39, baseType: !2478, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2475, file: !127, line: 40, baseType: !2478, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, scope: !2472, file: !127, line: 42, baseType: !2481, size: 32, offset: 32)
!2481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2472, file: !127, line: 42, size: 32, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2481, file: !127, line: 43, baseType: !2478, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2481, file: !127, line: 44, baseType: !2478, size: 32)
!2485 = !{!2465}
!2486 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2488)
!2488 = !{!2489}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2487, file: !253, line: 52, baseType: !22, size: 32)
!2490 = !DIGlobalVariableExpression(var: !2491, expr: !DIExpression())
!2491 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2492, file: !2522, line: 19, type: !2528, isLocal: true, isDefinition: true)
!2492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2494, globals: !2519, splitDebugInlining: false, nameTableKind: None)
!2493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2494 = !{!103, !107, !744, !110, !111, !109, !2495, !285, !105}
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2497)
!2497 = !{!2498, !2513, !2518}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2496, file: !122, line: 245, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2500)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2501)
!2501 = !{!2502, !2508}
!2502 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !127, line: 38, baseType: !2503, size: 32)
!2503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !127, line: 38, size: 32, elements: !2504)
!2504 = !{!2505, !2507}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2503, file: !127, line: 39, baseType: !2506, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2503, file: !127, line: 40, baseType: !2506, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !127, line: 42, baseType: !2509, size: 32, offset: 32)
!2509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !127, line: 42, size: 32, elements: !2510)
!2510 = !{!2511, !2512}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2509, file: !127, line: 43, baseType: !2506, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2509, file: !127, line: 44, baseType: !2506, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2496, file: !122, line: 246, baseType: !2514, size: 32, offset: 64)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2515)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{null, !2495}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2496, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2519 = !{!2520, !2490, !2523, !2525}
!2520 = !DIGlobalVariableExpression(var: !2521, expr: !DIExpression())
!2521 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2492, file: !2522, line: 15, type: !111, isLocal: true, isDefinition: true)
!2522 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2492, file: !2522, line: 25, type: !109, isLocal: true, isDefinition: true)
!2525 = !DIGlobalVariableExpression(var: !2526, expr: !DIExpression())
!2526 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2492, file: !2522, line: 17, type: !2527, isLocal: true, isDefinition: true)
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2500)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2529)
!2529 = !{!2530}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2528, file: !253, line: 52, baseType: !22, size: 32)
!2531 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2532, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2532 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2533 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2534, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2534 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2536, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2537, retainedTypes: !2557, splitDebugInlining: false, nameTableKind: None)
!2536 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2537 = !{!2538, !2546}
!2538 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2539, line: 69, baseType: !32, size: 32, elements: !2540)
!2539 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2540 = !{!2541, !2542, !2543, !2544, !2545}
!2541 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2542 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2543 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2544 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2545 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2546 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2539, line: 56, baseType: !32, size: 32, elements: !2547)
!2547 = !{!2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556}
!2548 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2549 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2550 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2551 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2552 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2553 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2554 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2555 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2556 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2557 = !{!109, !2538, !2546, !2558, !191, !354, !2560, !2561, !181, !195, !279, !234, !107, !22, !32, !281, !2563, !2564, !102, !282, !106, !283, !2559, !2565, !2566, !2567, !2568}
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2539, line: 31, baseType: !2559)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !235, line: 329, baseType: !32)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2539, line: 32, baseType: !2562)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !235, line: 145, baseType: !109)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 32)
!2569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2570, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2570 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2575, splitDebugInlining: false, nameTableKind: None)
!2574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2575 = !{!279, !181, !109, !32}
!2576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2578, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2578 = !{!2579, !30}
!2579 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2580, line: 27, baseType: !32, size: 32, elements: !2581)
!2580 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2581 = !{!2582, !2583, !2584, !2585, !2586}
!2582 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2583 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2584 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2585 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2586 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2587 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2588, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2589, retainedTypes: !2590, splitDebugInlining: false, nameTableKind: None)
!2588 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2589 = !{!604, !2579, !30}
!2590 = !{!770, !2591, !107, !109, !744, !110, !180, !2608}
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2593)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2594)
!2594 = !{!2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2593, file: !535, line: 413, baseType: !1598, size: 256)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2593, file: !535, line: 414, baseType: !1600, size: 768, offset: 256)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2593, file: !535, line: 415, baseType: !1598, size: 256, offset: 1024)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2593, file: !535, line: 416, baseType: !1600, size: 768, offset: 1280)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2593, file: !535, line: 417, baseType: !1598, size: 256, offset: 2048)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2593, file: !535, line: 418, baseType: !1600, size: 768, offset: 2304)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2593, file: !535, line: 419, baseType: !1598, size: 256, offset: 3072)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2593, file: !535, line: 420, baseType: !1600, size: 768, offset: 3328)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2593, file: !535, line: 421, baseType: !1598, size: 256, offset: 4096)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2593, file: !535, line: 422, baseType: !1611, size: 1792, offset: 4352)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2593, file: !535, line: 423, baseType: !1615, size: 1920, offset: 6144)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2593, file: !535, line: 424, baseType: !1620, size: 20608, offset: 8064)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2593, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2611)
!2611 = !{!2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2610, file: !535, line: 447, baseType: !539, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2610, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2610, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2610, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2610, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2610, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2610, file: !535, line: 453, baseType: !1635, size: 96, offset: 192)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2610, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2610, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2610, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2610, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2610, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2610, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2610, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2610, file: !535, line: 461, baseType: !1646, size: 64, offset: 512)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2610, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2610, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2610, file: !535, line: 464, baseType: !1650, size: 128, offset: 640)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2610, file: !535, line: 465, baseType: !1652, size: 160, offset: 768)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2610, file: !535, line: 466, baseType: !1654, size: 160, offset: 928)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2610, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2634 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2635 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2636, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2637, splitDebugInlining: false, nameTableKind: None)
!2636 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2637 = !{!107, !109, !22, !2638}
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2640)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2640, file: !535, line: 447, baseType: !539, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2640, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2640, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2640, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2640, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2640, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2640, file: !535, line: 453, baseType: !1635, size: 96, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2640, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2640, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2640, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2640, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2640, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2640, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2640, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2640, file: !535, line: 461, baseType: !1646, size: 64, offset: 512)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2640, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2640, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2640, file: !535, line: 464, baseType: !1650, size: 128, offset: 640)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2640, file: !535, line: 465, baseType: !1652, size: 160, offset: 768)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2640, file: !535, line: 466, baseType: !1654, size: 160, offset: 928)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2640, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2663 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2664, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2665, splitDebugInlining: false, nameTableKind: None)
!2664 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2665 = !{!2666, !107, !109}
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2668)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2669)
!2669 = !{!2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2668, file: !535, line: 447, baseType: !539, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2668, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2668, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2668, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2668, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2668, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2668, file: !535, line: 453, baseType: !1635, size: 96, offset: 192)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2668, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2668, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2668, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2668, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2668, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2668, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2668, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2668, file: !535, line: 461, baseType: !1646, size: 64, offset: 512)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2668, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2668, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2668, file: !535, line: 464, baseType: !1650, size: 128, offset: 640)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2668, file: !535, line: 465, baseType: !1652, size: 160, offset: 768)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2668, file: !535, line: 466, baseType: !1654, size: 160, offset: 928)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2668, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2693, splitDebugInlining: false, nameTableKind: None)
!2692 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2693 = !{!2694, !110, !107, !109}
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 32)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2696, line: 98, size: 256, elements: !2697)
!2696 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2697 = !{!2698, !2703, !2708, !2713, !2718, !2723, !2728, !2733}
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2695, file: !2696, line: 99, baseType: !2699, size: 32)
!2699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2695, file: !2696, line: 99, size: 32, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2699, file: !2696, line: 99, baseType: !110, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2699, file: !2696, line: 99, baseType: !110, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2695, file: !2696, line: 100, baseType: !2704, size: 32, offset: 32)
!2704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2695, file: !2696, line: 100, size: 32, elements: !2705)
!2705 = !{!2706, !2707}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2704, file: !2696, line: 100, baseType: !110, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2704, file: !2696, line: 100, baseType: !110, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, scope: !2695, file: !2696, line: 101, baseType: !2709, size: 32, offset: 64)
!2709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2695, file: !2696, line: 101, size: 32, elements: !2710)
!2710 = !{!2711, !2712}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2709, file: !2696, line: 101, baseType: !110, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2709, file: !2696, line: 101, baseType: !110, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2695, file: !2696, line: 102, baseType: !2714, size: 32, offset: 96)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2695, file: !2696, line: 102, size: 32, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2714, file: !2696, line: 102, baseType: !110, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2714, file: !2696, line: 102, baseType: !110, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2695, file: !2696, line: 103, baseType: !2719, size: 32, offset: 128)
!2719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2695, file: !2696, line: 103, size: 32, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2719, file: !2696, line: 103, baseType: !110, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2719, file: !2696, line: 103, baseType: !110, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !2695, file: !2696, line: 104, baseType: !2724, size: 32, offset: 160)
!2724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2695, file: !2696, line: 104, size: 32, elements: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2724, file: !2696, line: 104, baseType: !110, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2724, file: !2696, line: 104, baseType: !110, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, scope: !2695, file: !2696, line: 105, baseType: !2729, size: 32, offset: 192)
!2729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2695, file: !2696, line: 105, size: 32, elements: !2730)
!2730 = !{!2731, !2732}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2729, file: !2696, line: 105, baseType: !110, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2729, file: !2696, line: 105, baseType: !110, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2695, file: !2696, line: 106, baseType: !110, size: 32, offset: 224)
!2734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2578, retainedTypes: !2736, splitDebugInlining: false, nameTableKind: None)
!2735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2736 = !{!2737, !107, !109, !2762, !2805, !110}
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2739)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2739, file: !535, line: 447, baseType: !539, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2739, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2739, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2739, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2739, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2739, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2739, file: !535, line: 453, baseType: !1635, size: 96, offset: 192)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2739, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2739, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2739, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2739, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2739, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2739, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2739, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2739, file: !535, line: 461, baseType: !1646, size: 64, offset: 512)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2739, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2739, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2739, file: !535, line: 464, baseType: !1650, size: 128, offset: 640)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2739, file: !535, line: 465, baseType: !1652, size: 160, offset: 768)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2739, file: !535, line: 466, baseType: !1654, size: 160, offset: 928)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2739, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2696, line: 141, baseType: !2764)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2696, line: 97, size: 256, elements: !2765)
!2765 = !{!2766}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2764, file: !2696, line: 107, baseType: !2767, size: 256)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2696, line: 98, size: 256, elements: !2768)
!2768 = !{!2769, !2774, !2779, !2784, !2789, !2794, !2799, !2804}
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2696, line: 99, baseType: !2770, size: 32)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2696, line: 99, size: 32, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2770, file: !2696, line: 99, baseType: !110, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2770, file: !2696, line: 99, baseType: !110, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2696, line: 100, baseType: !2775, size: 32, offset: 32)
!2775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2696, line: 100, size: 32, elements: !2776)
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2775, file: !2696, line: 100, baseType: !110, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2775, file: !2696, line: 100, baseType: !110, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2696, line: 101, baseType: !2780, size: 32, offset: 64)
!2780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2696, line: 101, size: 32, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2780, file: !2696, line: 101, baseType: !110, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2780, file: !2696, line: 101, baseType: !110, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2696, line: 102, baseType: !2785, size: 32, offset: 96)
!2785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2696, line: 102, size: 32, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2785, file: !2696, line: 102, baseType: !110, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2785, file: !2696, line: 102, baseType: !110, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2696, line: 103, baseType: !2790, size: 32, offset: 128)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2696, line: 103, size: 32, elements: !2791)
!2791 = !{!2792, !2793}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2790, file: !2696, line: 103, baseType: !110, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2790, file: !2696, line: 103, baseType: !110, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2696, line: 104, baseType: !2795, size: 32, offset: 160)
!2795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2696, line: 104, size: 32, elements: !2796)
!2796 = !{!2797, !2798}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2795, file: !2696, line: 104, baseType: !110, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2795, file: !2696, line: 104, baseType: !110, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2696, line: 105, baseType: !2800, size: 32, offset: 192)
!2800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2696, line: 105, size: 32, elements: !2801)
!2801 = !{!2802, !2803}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2800, file: !2696, line: 105, baseType: !110, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2800, file: !2696, line: 105, baseType: !110, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2767, file: !2696, line: 106, baseType: !110, size: 32, offset: 224)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!2806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2807, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1583, retainedTypes: !2808, splitDebugInlining: false, nameTableKind: None)
!2807 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2808 = !{!770, !744, !180, !110, !2809, !2826}
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2811)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2812)
!2812 = !{!2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2811, file: !535, line: 413, baseType: !1598, size: 256)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2811, file: !535, line: 414, baseType: !1600, size: 768, offset: 256)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2811, file: !535, line: 415, baseType: !1598, size: 256, offset: 1024)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2811, file: !535, line: 416, baseType: !1600, size: 768, offset: 1280)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2811, file: !535, line: 417, baseType: !1598, size: 256, offset: 2048)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2811, file: !535, line: 418, baseType: !1600, size: 768, offset: 2304)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2811, file: !535, line: 419, baseType: !1598, size: 256, offset: 3072)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2811, file: !535, line: 420, baseType: !1600, size: 768, offset: 3328)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2811, file: !535, line: 421, baseType: !1598, size: 256, offset: 4096)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2811, file: !535, line: 422, baseType: !1611, size: 1792, offset: 4352)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2811, file: !535, line: 423, baseType: !1615, size: 1920, offset: 6144)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2811, file: !535, line: 424, baseType: !1620, size: 20608, offset: 8064)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2811, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2828)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2829)
!2829 = !{!2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2828, file: !535, line: 447, baseType: !539, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2828, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2828, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2828, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2828, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2828, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2828, file: !535, line: 453, baseType: !1635, size: 96, offset: 192)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2828, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2828, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2828, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2828, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2828, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2828, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2828, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2828, file: !535, line: 461, baseType: !1646, size: 64, offset: 512)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2828, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2828, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2828, file: !535, line: 464, baseType: !1650, size: 128, offset: 640)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2828, file: !535, line: 465, baseType: !1652, size: 160, offset: 768)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2828, file: !535, line: 466, baseType: !1654, size: 160, offset: 928)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2828, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2852, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2853, splitDebugInlining: false, nameTableKind: None)
!2852 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2853 = !{!2854, !107, !109}
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2856)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2857)
!2857 = !{!2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2856, file: !535, line: 447, baseType: !539, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2856, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2856, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2856, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2856, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2856, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2856, file: !535, line: 453, baseType: !1635, size: 96, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2856, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2856, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2856, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2856, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2856, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2856, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2856, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2856, file: !535, line: 461, baseType: !1646, size: 64, offset: 512)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2856, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2856, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2856, file: !535, line: 464, baseType: !1650, size: 128, offset: 640)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2856, file: !535, line: 465, baseType: !1652, size: 160, offset: 768)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2856, file: !535, line: 466, baseType: !1654, size: 160, offset: 928)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2856, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2881, splitDebugInlining: false, nameTableKind: None)
!2880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2881 = !{!150, !285, !234, !972, !2882, !181, !107}
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!2884 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2885, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2886, splitDebugInlining: false, nameTableKind: None)
!2885 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2886 = !{!2887}
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 369, baseType: !2889)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 335, size: 1152, elements: !2890)
!2890 = !{!2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2889, file: !312, line: 337, baseType: !316, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2889, file: !312, line: 338, baseType: !316, size: 32, offset: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2889, file: !312, line: 339, baseType: !316, size: 32, offset: 64)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2889, file: !312, line: 340, baseType: !316, size: 32, offset: 96)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2889, file: !312, line: 341, baseType: !316, size: 32, offset: 128)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2889, file: !312, line: 342, baseType: !316, size: 32, offset: 160)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2889, file: !312, line: 343, baseType: !316, size: 32, offset: 192)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2889, file: !312, line: 344, baseType: !110, size: 32, offset: 224)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2889, file: !312, line: 345, baseType: !316, size: 32, offset: 256)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2889, file: !312, line: 346, baseType: !316, size: 32, offset: 288)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2889, file: !312, line: 347, baseType: !838, size: 64, offset: 320)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2889, file: !312, line: 348, baseType: !316, size: 32, offset: 384)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2889, file: !312, line: 349, baseType: !316, size: 32, offset: 416)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2889, file: !312, line: 350, baseType: !316, size: 32, offset: 448)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2889, file: !312, line: 351, baseType: !110, size: 32, offset: 480)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2889, file: !312, line: 352, baseType: !316, size: 32, offset: 512)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2889, file: !312, line: 353, baseType: !316, size: 32, offset: 544)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2889, file: !312, line: 354, baseType: !838, size: 64, offset: 576)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2889, file: !312, line: 355, baseType: !316, size: 32, offset: 640)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2889, file: !312, line: 356, baseType: !316, size: 32, offset: 672)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2889, file: !312, line: 357, baseType: !316, size: 32, offset: 704)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2889, file: !312, line: 358, baseType: !110, size: 32, offset: 736)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2889, file: !312, line: 359, baseType: !316, size: 32, offset: 768)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2889, file: !312, line: 360, baseType: !316, size: 32, offset: 800)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2889, file: !312, line: 361, baseType: !838, size: 64, offset: 832)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2889, file: !312, line: 362, baseType: !316, size: 32, offset: 896)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2889, file: !312, line: 363, baseType: !316, size: 32, offset: 928)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2889, file: !312, line: 364, baseType: !838, size: 64, offset: 960)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2889, file: !312, line: 365, baseType: !316, size: 32, offset: 1024)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2889, file: !312, line: 366, baseType: !316, size: 32, offset: 1056)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2889, file: !312, line: 367, baseType: !859, size: 32, offset: 1088)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2889, file: !312, line: 368, baseType: !316, size: 32, offset: 1120)
!2923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2925 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2926, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2927, retainedTypes: !2943, splitDebugInlining: false, nameTableKind: None)
!2926 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!2927 = !{!2928, !2935, !2939}
!2928 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2929, line: 38, baseType: !32, size: 32, elements: !2930)
!2929 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2930 = !{!2931, !2932, !2933, !2934}
!2931 = !DIEnumerator(name: "HAL_OK", value: 0)
!2932 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2933 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2934 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2935 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !811, line: 184, baseType: !32, size: 32, elements: !2936)
!2936 = !{!2937, !2938}
!2937 = !DIEnumerator(name: "RESET", value: 0)
!2938 = !DIEnumerator(name: "SET", value: 1)
!2939 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !811, line: 190, baseType: !32, size: 32, elements: !2940)
!2940 = !{!2941, !2942}
!2941 = !DIEnumerator(name: "DISABLE", value: 0)
!2942 = !DIEnumerator(name: "ENABLE", value: 1)
!2943 = !{!107, !2944, !180, !110, !1452, !2980, !2986, !2997, !194, !2998, !111}
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 369, baseType: !2946)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 335, size: 1152, elements: !2947)
!2947 = !{!2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2946, file: !312, line: 337, baseType: !316, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2946, file: !312, line: 338, baseType: !316, size: 32, offset: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2946, file: !312, line: 339, baseType: !316, size: 32, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2946, file: !312, line: 340, baseType: !316, size: 32, offset: 96)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2946, file: !312, line: 341, baseType: !316, size: 32, offset: 128)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2946, file: !312, line: 342, baseType: !316, size: 32, offset: 160)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2946, file: !312, line: 343, baseType: !316, size: 32, offset: 192)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2946, file: !312, line: 344, baseType: !110, size: 32, offset: 224)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2946, file: !312, line: 345, baseType: !316, size: 32, offset: 256)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2946, file: !312, line: 346, baseType: !316, size: 32, offset: 288)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2946, file: !312, line: 347, baseType: !838, size: 64, offset: 320)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2946, file: !312, line: 348, baseType: !316, size: 32, offset: 384)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2946, file: !312, line: 349, baseType: !316, size: 32, offset: 416)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2946, file: !312, line: 350, baseType: !316, size: 32, offset: 448)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2946, file: !312, line: 351, baseType: !110, size: 32, offset: 480)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2946, file: !312, line: 352, baseType: !316, size: 32, offset: 512)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2946, file: !312, line: 353, baseType: !316, size: 32, offset: 544)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2946, file: !312, line: 354, baseType: !838, size: 64, offset: 576)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2946, file: !312, line: 355, baseType: !316, size: 32, offset: 640)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2946, file: !312, line: 356, baseType: !316, size: 32, offset: 672)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2946, file: !312, line: 357, baseType: !316, size: 32, offset: 704)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2946, file: !312, line: 358, baseType: !110, size: 32, offset: 736)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2946, file: !312, line: 359, baseType: !316, size: 32, offset: 768)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2946, file: !312, line: 360, baseType: !316, size: 32, offset: 800)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2946, file: !312, line: 361, baseType: !838, size: 64, offset: 832)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2946, file: !312, line: 362, baseType: !316, size: 32, offset: 896)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2946, file: !312, line: 363, baseType: !316, size: 32, offset: 928)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2946, file: !312, line: 364, baseType: !838, size: 64, offset: 960)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2946, file: !312, line: 365, baseType: !316, size: 32, offset: 1024)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2946, file: !312, line: 366, baseType: !316, size: 32, offset: 1056)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2946, file: !312, line: 367, baseType: !859, size: 32, offset: 1088)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2946, file: !312, line: 368, baseType: !316, size: 32, offset: 1120)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 329, baseType: !2982)
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 325, size: 64, elements: !2983)
!2983 = !{!2984, !2985}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2982, file: !312, line: 327, baseType: !316, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2982, file: !312, line: 328, baseType: !316, size: 32, offset: 32)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 258, baseType: !2988)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 249, size: 224, elements: !2989)
!2989 = !{!2990, !2991, !2992, !2993, !2994, !2995, !2996}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2988, file: !312, line: 251, baseType: !316, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2988, file: !312, line: 252, baseType: !316, size: 32, offset: 32)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2988, file: !312, line: 253, baseType: !316, size: 32, offset: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2988, file: !312, line: 254, baseType: !316, size: 32, offset: 96)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2988, file: !312, line: 255, baseType: !316, size: 32, offset: 128)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2988, file: !312, line: 256, baseType: !316, size: 32, offset: 160)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2988, file: !312, line: 257, baseType: !316, size: 32, offset: 192)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 275, baseType: !3000)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 264, size: 320, elements: !3001)
!3001 = !{!3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3000, file: !312, line: 266, baseType: !316, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3000, file: !312, line: 267, baseType: !316, size: 32, offset: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3000, file: !312, line: 268, baseType: !316, size: 32, offset: 64)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3000, file: !312, line: 269, baseType: !316, size: 32, offset: 96)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3000, file: !312, line: 270, baseType: !316, size: 32, offset: 128)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3000, file: !312, line: 271, baseType: !316, size: 32, offset: 160)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3000, file: !312, line: 272, baseType: !316, size: 32, offset: 192)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3000, file: !312, line: 273, baseType: !316, size: 32, offset: 224)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3000, file: !312, line: 274, baseType: !1126, size: 64, offset: 256)
!3011 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3012, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3013, retainedTypes: !3014, splitDebugInlining: false, nameTableKind: None)
!3012 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!3013 = !{!810}
!3014 = !{!3015, !110, !3023, !3029, !3040}
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !3017)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !3018)
!3018 = !{!3019, !3020, !3021, !3022}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3017, file: !535, line: 766, baseType: !316, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3017, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3017, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3017, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 32)
!3024 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 329, baseType: !3025)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 325, size: 64, elements: !3026)
!3026 = !{!3027, !3028}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3025, file: !312, line: 327, baseType: !316, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3025, file: !312, line: 328, baseType: !316, size: 32, offset: 32)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 32)
!3030 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 258, baseType: !3031)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 249, size: 224, elements: !3032)
!3032 = !{!3033, !3034, !3035, !3036, !3037, !3038, !3039}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3031, file: !312, line: 251, baseType: !316, size: 32)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3031, file: !312, line: 252, baseType: !316, size: 32, offset: 32)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3031, file: !312, line: 253, baseType: !316, size: 32, offset: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3031, file: !312, line: 254, baseType: !316, size: 32, offset: 96)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3031, file: !312, line: 255, baseType: !316, size: 32, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3031, file: !312, line: 256, baseType: !316, size: 32, offset: 160)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3031, file: !312, line: 257, baseType: !316, size: 32, offset: 192)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 369, baseType: !3042)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 335, size: 1152, elements: !3043)
!3043 = !{!3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3042, file: !312, line: 337, baseType: !316, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3042, file: !312, line: 338, baseType: !316, size: 32, offset: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3042, file: !312, line: 339, baseType: !316, size: 32, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3042, file: !312, line: 340, baseType: !316, size: 32, offset: 96)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3042, file: !312, line: 341, baseType: !316, size: 32, offset: 128)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3042, file: !312, line: 342, baseType: !316, size: 32, offset: 160)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3042, file: !312, line: 343, baseType: !316, size: 32, offset: 192)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3042, file: !312, line: 344, baseType: !110, size: 32, offset: 224)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3042, file: !312, line: 345, baseType: !316, size: 32, offset: 256)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3042, file: !312, line: 346, baseType: !316, size: 32, offset: 288)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3042, file: !312, line: 347, baseType: !838, size: 64, offset: 320)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3042, file: !312, line: 348, baseType: !316, size: 32, offset: 384)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3042, file: !312, line: 349, baseType: !316, size: 32, offset: 416)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3042, file: !312, line: 350, baseType: !316, size: 32, offset: 448)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3042, file: !312, line: 351, baseType: !110, size: 32, offset: 480)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3042, file: !312, line: 352, baseType: !316, size: 32, offset: 512)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3042, file: !312, line: 353, baseType: !316, size: 32, offset: 544)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3042, file: !312, line: 354, baseType: !838, size: 64, offset: 576)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3042, file: !312, line: 355, baseType: !316, size: 32, offset: 640)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3042, file: !312, line: 356, baseType: !316, size: 32, offset: 672)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3042, file: !312, line: 357, baseType: !316, size: 32, offset: 704)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3042, file: !312, line: 358, baseType: !110, size: 32, offset: 736)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3042, file: !312, line: 359, baseType: !316, size: 32, offset: 768)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3042, file: !312, line: 360, baseType: !316, size: 32, offset: 800)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3042, file: !312, line: 361, baseType: !838, size: 64, offset: 832)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3042, file: !312, line: 362, baseType: !316, size: 32, offset: 896)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3042, file: !312, line: 363, baseType: !316, size: 32, offset: 928)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3042, file: !312, line: 364, baseType: !838, size: 64, offset: 960)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3042, file: !312, line: 365, baseType: !316, size: 32, offset: 1024)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3042, file: !312, line: 366, baseType: !316, size: 32, offset: 1056)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3042, file: !312, line: 367, baseType: !859, size: 32, offset: 1088)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3042, file: !312, line: 368, baseType: !316, size: 32, offset: 1120)
!3076 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3077, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3078, splitDebugInlining: false, nameTableKind: None)
!3077 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!3078 = !{!107, !234}
!3079 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3080, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3081, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3080 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!3081 = !{!3082, !3089, !2579, !30}
!3082 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3083, line: 14, baseType: !32, size: 32, elements: !3084)
!3083 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3084 = !{!3085, !3086, !3087, !3088}
!3085 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3086 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3087 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3088 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3089 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3083, line: 42, baseType: !32, size: 32, elements: !3090)
!3090 = !{!3091, !3092, !3093, !3094, !3095, !3096}
!3091 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3092 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3093 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3094 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3095 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3096 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3097 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3098, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3098 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!3099 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3100, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3101, splitDebugInlining: false, nameTableKind: None)
!3100 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!3101 = !{!22, !107, !109}
!3102 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3103, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3103 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!3104 = !{!"Ubuntu clang version 14.0.6"}
!3105 = !{i32 7, !"Dwarf Version", i32 4}
!3106 = !{i32 2, !"Debug Info Version", i32 3}
!3107 = !{i32 1, !"wchar_size", i32 4}
!3108 = !{i32 1, !"min_enum_size", i32 4}
!3109 = !{i32 1, !"branch-target-enforcement", i32 0}
!3110 = !{i32 1, !"sign-return-address", i32 0}
!3111 = !{i32 1, !"sign-return-address-all", i32 0}
!3112 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3113 = !{i32 7, !"frame-pointer", i32 2}
!3114 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3115, file: !3115, line: 26, type: !3116, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !2050)
!3115 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3116 = !DISubroutineType(types: !3117)
!3117 = !{null}
!3118 = !DILocation(line: 28, column: 1, scope: !3114)
!3119 = !{i64 2154450174, i64 2154450194, i64 2154450257}
!3120 = !DILocation(line: 29, column: 1, scope: !3114)
!3121 = !{i64 2154450589, i64 2154450609, i64 2154450672}
!3122 = !DILocation(line: 30, column: 1, scope: !3114)
!3123 = !{i64 2154451008, i64 2154451028, i64 2154451091}
!3124 = !DILocation(line: 31, column: 1, scope: !3114)
!3125 = !{i64 2154451427, i64 2154451447, i64 2154451510}
!3126 = !DILocation(line: 33, column: 1, scope: !3114)
!3127 = !{i64 2154451719, i64 2154451739, i64 2154451802}
!3128 = !DILocation(line: 35, column: 1, scope: !3114)
!3129 = !{i64 2154452044, i64 2154452064, i64 2154452127}
!3130 = !DILocation(line: 50, column: 1, scope: !3114)
!3131 = !{i64 2154452471, i64 2154452491, i64 2154452554}
!3132 = !DILocation(line: 54, column: 1, scope: !3114)
!3133 = !{i64 2154452910, i64 2154452930, i64 2154452993}
!3134 = !DILocation(line: 61, column: 1, scope: !3114)
!3135 = !{i64 2154453227, i64 2154453247, i64 2154453310}
!3136 = !DILocation(line: 63, column: 1, scope: !3114)
!3137 = !{i64 2154457668, i64 2154457688, i64 2154457751}
!3138 = !DILocation(line: 64, column: 1, scope: !3114)
!3139 = !{i64 2154458190, i64 2154458210, i64 2154458273}
!3140 = !DILocation(line: 65, column: 1, scope: !3114)
!3141 = !{i64 2154458688, i64 2154458708, i64 2154458771}
!3142 = !DILocation(line: 66, column: 1, scope: !3114)
!3143 = !{i64 2154459170, i64 2154459190, i64 2154459253}
!3144 = !DILocation(line: 67, column: 1, scope: !3114)
!3145 = !{i64 2154459677, i64 2154459697, i64 2154459760}
!3146 = !DILocation(line: 68, column: 1, scope: !3114)
!3147 = !{i64 2154460165, i64 2154460185, i64 2154460248}
!3148 = !DILocation(line: 70, column: 1, scope: !3114)
!3149 = !{i64 2154460633, i64 2154460653, i64 2154460716}
!3150 = !DILocation(line: 71, column: 1, scope: !3114)
!3151 = !{i64 2154461075, i64 2154461095, i64 2154461158}
!3152 = !DILocation(line: 72, column: 1, scope: !3114)
!3153 = !{i64 2154461533, i64 2154461553, i64 2154461616}
!3154 = !DILocation(line: 79, column: 1, scope: !3114)
!3155 = !{i64 2154461987, i64 2154462007, i64 2154462070}
!3156 = !DILocation(line: 80, column: 1, scope: !3114)
!3157 = !{i64 2154462498, i64 2154462518, i64 2154462581}
!3158 = !DILocation(line: 82, column: 1, scope: !3114)
!3159 = !{i64 2154462989, i64 2154463009, i64 2154463072}
!3160 = !DILocation(line: 97, column: 1, scope: !3114)
!3161 = !{i64 2154463326, i64 2154463346, i64 2154463409}
!3162 = !DILocation(line: 99, column: 1, scope: !3114)
!3163 = !{i64 2154463544, i64 2154463564, i64 2154463627}
!3164 = !DILocation(line: 102, column: 1, scope: !3114)
!3165 = !{i64 2154463801, i64 2154463821, i64 2154463884}
!3166 = !DILocation(line: 105, column: 1, scope: !3114)
!3167 = !{i64 2154464041, i64 2154464061, i64 2154464124}
!3168 = !DILocation(line: 115, column: 1, scope: !3114)
!3169 = !{i64 2154464380, i64 2154464400, i64 2154464463}
!3170 = !DILocation(line: 118, column: 1, scope: !3114)
!3171 = !{i64 2154464724, i64 2154464744, i64 2154464807}
!3172 = !DILocation(line: 32, column: 1, scope: !3173)
!3173 = !DILexicalBlockFile(scope: !3114, file: !3174, discriminator: 0)
!3174 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3175 = !{i64 2154465080, i64 2154465100, i64 2154465163}
!3176 = !DILocation(line: 33, column: 1, scope: !3173)
!3177 = !{i64 2154465592, i64 2154465612, i64 2154465675}
!3178 = !DILocation(line: 53, column: 1, scope: !3173)
!3179 = !{i64 2154466100, i64 2154466120, i64 2154466183}
!3180 = !DILocation(line: 54, column: 1, scope: !3173)
!3181 = !{i64 2154466518, i64 2154466538, i64 2154466601}
!3182 = !DILocation(line: 55, column: 1, scope: !3173)
!3183 = !{i64 2154470997, i64 2154471017, i64 2154471080}
!3184 = !DILocation(line: 56, column: 1, scope: !3173)
!3185 = !{i64 2154471415, i64 2154471435, i64 2154471498}
!3186 = !DILocation(line: 57, column: 1, scope: !3173)
!3187 = !{i64 2154471833, i64 2154471853, i64 2154471916}
!3188 = !DILocation(line: 58, column: 1, scope: !3173)
!3189 = !{i64 2154472251, i64 2154472271, i64 2154472334}
!3190 = !DILocation(line: 59, column: 1, scope: !3173)
!3191 = !{i64 2154472669, i64 2154472689, i64 2154472752}
!3192 = !DILocation(line: 60, column: 1, scope: !3173)
!3193 = !{i64 2154473093, i64 2154473113, i64 2154473176}
!3194 = !DILocation(line: 61, column: 1, scope: !3173)
!3195 = !{i64 2154473410, i64 2154473430, i64 2154473493}
!3196 = !DILocation(line: 70, column: 1, scope: !3173)
!3197 = !{i64 2154473639, i64 2154473659, i64 2154473722}
!3198 = !DILocation(line: 72, column: 1, scope: !3173)
!3199 = !{i64 2154473971, i64 2154473991, i64 2154474054}
!3200 = !DILocation(line: 73, column: 1, scope: !3173)
!3201 = !{i64 2154474421, i64 2154474441, i64 2154474504}
!3202 = !DILocation(line: 74, column: 1, scope: !3173)
!3203 = !{i64 2154474871, i64 2154474891, i64 2154474954}
!3204 = !DILocation(line: 75, column: 1, scope: !3173)
!3205 = !{i64 2154475321, i64 2154475341, i64 2154475404}
!3206 = !DILocation(line: 76, column: 1, scope: !3173)
!3207 = !{i64 2154475771, i64 2154475791, i64 2154475854}
!3208 = !DILocation(line: 77, column: 1, scope: !3173)
!3209 = !{i64 2154476221, i64 2154476241, i64 2154476304}
!3210 = !DILocation(line: 78, column: 1, scope: !3173)
!3211 = !{i64 2154476671, i64 2154476691, i64 2154476754}
!3212 = !DILocation(line: 79, column: 1, scope: !3173)
!3213 = !{i64 2154477121, i64 2154477141, i64 2154477204}
!3214 = !DILocation(line: 80, column: 1, scope: !3173)
!3215 = !{i64 2154477574, i64 2154477594, i64 2154477657}
!3216 = !DILocation(line: 84, column: 1, scope: !3173)
!3217 = !{i64 2154477906, i64 2154477926, i64 2154477989}
!3218 = !DILocation(line: 91, column: 1, scope: !3173)
!3219 = !{i64 2154478303, i64 2154478323, i64 2154478386}
!3220 = !DILocation(line: 93, column: 1, scope: !3173)
!3221 = !{i64 2154478670, i64 2154478690, i64 2154478753}
!3222 = !DILocation(line: 106, column: 1, scope: !3173)
!3223 = !{i64 2154478940, i64 2154478960, i64 2154479023}
!3224 = !DILocation(line: 11, column: 1, scope: !3225)
!3225 = !DILexicalBlockFile(scope: !3114, file: !3226, discriminator: 0)
!3226 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3227 = distinct !DISubprogram(name: "inc_count", scope: !116, file: !116, line: 25, type: !3228, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3230)
!3228 = !DISubroutineType(types: !3229)
!3229 = !{null, !107, !107, !107}
!3230 = !{!3231, !3232, !3233, !3234, !3235}
!3231 = !DILocalVariable(name: "p1", arg: 1, scope: !3227, file: !116, line: 25, type: !107)
!3232 = !DILocalVariable(name: "p2", arg: 2, scope: !3227, file: !116, line: 25, type: !107)
!3233 = !DILocalVariable(name: "p3", arg: 3, scope: !3227, file: !116, line: 25, type: !107)
!3234 = !DILocalVariable(name: "i", scope: !3227, file: !116, line: 27, type: !109)
!3235 = !DILocalVariable(name: "my_id", scope: !3227, file: !116, line: 28, type: !102)
!3236 = !DILocation(line: 0, scope: !3227)
!3237 = !DILocation(line: 28, column: 15, scope: !3227)
!3238 = !DILocation(line: 30, column: 2, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3227, file: !116, line: 30, column: 2)
!3240 = !DILocation(line: 31, column: 3, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3242, file: !116, line: 30, column: 31)
!3242 = distinct !DILexicalBlock(scope: !3239, file: !116, line: 30, column: 2)
!3243 = !DILocation(line: 32, column: 8, scope: !3241)
!3244 = !DILocation(line: 40, column: 13, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3241, file: !116, line: 40, column: 7)
!3246 = !DILocation(line: 40, column: 7, scope: !3241)
!3247 = !DILocation(line: 41, column: 4, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3245, file: !116, line: 40, column: 29)
!3249 = !DILocation(line: 43, column: 4, scope: !3248)
!3250 = !DILocation(line: 44, column: 4, scope: !3248)
!3251 = !DILocation(line: 47, column: 27, scope: !3241)
!3252 = !DILocation(line: 45, column: 3, scope: !3248)
!3253 = !DILocation(line: 46, column: 3, scope: !3241)
!3254 = !DILocation(line: 48, column: 3, scope: !3241)
!3255 = !DILocation(line: 51, column: 3, scope: !3241)
!3256 = !DILocation(line: 30, column: 27, scope: !3242)
!3257 = !DILocation(line: 30, column: 16, scope: !3242)
!3258 = distinct !{!3258, !3238, !3259}
!3259 = !DILocation(line: 52, column: 2, scope: !3239)
!3260 = !DILocation(line: 53, column: 1, scope: !3227)
!3261 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3262, file: !3262, line: 927, type: !3263, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3270)
!3262 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!109, !3265, !3266}
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3266 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3267)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3268)
!3268 = !{!3269}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3267, file: !104, line: 66, baseType: !103, size: 64)
!3270 = !{!3271, !3272}
!3271 = !DILocalVariable(name: "mutex", arg: 1, scope: !3261, file: !3262, line: 927, type: !3265)
!3272 = !DILocalVariable(name: "timeout", arg: 2, scope: !3261, file: !3262, line: 927, type: !3266)
!3273 = !DILocation(line: 0, scope: !3261)
!3274 = !DILocation(line: 936, column: 2, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3261, file: !3262, line: 936, column: 2)
!3276 = !{i64 2154159758}
!3277 = !DILocation(line: 937, column: 9, scope: !3261)
!3278 = !DILocation(line: 937, column: 2, scope: !3261)
!3279 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3262, file: !3262, line: 976, type: !3280, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3283)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!109, !3282}
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3283 = !{!3284}
!3284 = !DILocalVariable(name: "condvar", arg: 1, scope: !3279, file: !3262, line: 976, type: !3282)
!3285 = !DILocation(line: 0, scope: !3279)
!3286 = !DILocation(line: 984, column: 2, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3279, file: !3262, line: 984, column: 2)
!3288 = !{i64 2154159962}
!3289 = !DILocation(line: 985, column: 9, scope: !3279)
!3290 = !DILocation(line: 985, column: 2, scope: !3279)
!3291 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3262, file: !3262, line: 944, type: !3292, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3294)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!109, !3265}
!3294 = !{!3295}
!3295 = !DILocalVariable(name: "mutex", arg: 1, scope: !3291, file: !3262, line: 944, type: !3265)
!3296 = !DILocation(line: 0, scope: !3291)
!3297 = !DILocation(line: 952, column: 2, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3291, file: !3262, line: 952, column: 2)
!3299 = !{i64 2154159826}
!3300 = !DILocation(line: 953, column: 9, scope: !3291)
!3301 = !DILocation(line: 953, column: 2, scope: !3291)
!3302 = distinct !DISubprogram(name: "k_sleep", scope: !3262, file: !3262, line: 91, type: !3303, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3305)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{!744, !3266}
!3305 = !{!3306}
!3306 = !DILocalVariable(name: "timeout", arg: 1, scope: !3302, file: !3262, line: 91, type: !3266)
!3307 = !DILocation(line: 0, scope: !3302)
!3308 = !DILocation(line: 99, column: 2, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3302, file: !3262, line: 99, column: 2)
!3310 = !{i64 2154156390}
!3311 = !DILocation(line: 100, column: 9, scope: !3302)
!3312 = !DILocation(line: 100, column: 2, scope: !3302)
!3313 = distinct !DISubprogram(name: "watch_count", scope: !116, file: !116, line: 55, type: !3228, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3314)
!3314 = !{!3315, !3316, !3317, !3318}
!3315 = !DILocalVariable(name: "p1", arg: 1, scope: !3313, file: !116, line: 55, type: !107)
!3316 = !DILocalVariable(name: "p2", arg: 2, scope: !3313, file: !116, line: 55, type: !107)
!3317 = !DILocalVariable(name: "p3", arg: 3, scope: !3313, file: !116, line: 55, type: !107)
!3318 = !DILocalVariable(name: "my_id", scope: !3313, file: !116, line: 57, type: !102)
!3319 = !DILocation(line: 0, scope: !3313)
!3320 = !DILocation(line: 57, column: 15, scope: !3313)
!3321 = !DILocation(line: 59, column: 2, scope: !3313)
!3322 = !DILocation(line: 61, column: 2, scope: !3313)
!3323 = !DILocation(line: 62, column: 9, scope: !3313)
!3324 = !DILocation(line: 62, column: 15, scope: !3313)
!3325 = !DILocation(line: 62, column: 2, scope: !3313)
!3326 = !DILocation(line: 63, column: 3, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3313, file: !116, line: 62, column: 30)
!3328 = !DILocation(line: 65, column: 3, scope: !3327)
!3329 = !DILocation(line: 68, column: 27, scope: !3327)
!3330 = !DILocation(line: 67, column: 3, scope: !3327)
!3331 = distinct !{!3331, !3325, !3332}
!3332 = !DILocation(line: 69, column: 2, scope: !3313)
!3333 = !DILocation(line: 70, column: 2, scope: !3313)
!3334 = !DILocation(line: 72, column: 8, scope: !3313)
!3335 = !DILocation(line: 73, column: 2, scope: !3313)
!3336 = !DILocation(line: 74, column: 2, scope: !3313)
!3337 = !DILocation(line: 75, column: 2, scope: !3313)
!3338 = !DILocation(line: 76, column: 1, scope: !3313)
!3339 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3262, file: !3262, line: 1008, type: !3340, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3342)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!109, !3282, !3265, !3266}
!3342 = !{!3343, !3344, !3345}
!3343 = !DILocalVariable(name: "condvar", arg: 1, scope: !3339, file: !3262, line: 1008, type: !3282)
!3344 = !DILocalVariable(name: "mutex", arg: 2, scope: !3339, file: !3262, line: 1008, type: !3265)
!3345 = !DILocalVariable(name: "timeout", arg: 3, scope: !3339, file: !3262, line: 1008, type: !3266)
!3346 = !DILocation(line: 0, scope: !3339)
!3347 = !DILocation(line: 1018, column: 2, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3339, file: !3262, line: 1018, column: 2)
!3349 = !{i64 2154160098}
!3350 = !DILocation(line: 1019, column: 9, scope: !3339)
!3351 = !DILocation(line: 1019, column: 2, scope: !3339)
!3352 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 78, type: !3116, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3353)
!3353 = !{!3354, !3355, !3356, !3357}
!3354 = !DILocalVariable(name: "t1", scope: !3352, file: !116, line: 80, type: !102)
!3355 = !DILocalVariable(name: "t2", scope: !3352, file: !116, line: 80, type: !102)
!3356 = !DILocalVariable(name: "t3", scope: !3352, file: !116, line: 80, type: !102)
!3357 = !DILocalVariable(name: "i", scope: !3352, file: !116, line: 81, type: !109)
!3358 = !DILocation(line: 0, scope: !3352)
!3359 = !DILocation(line: 83, column: 8, scope: !3352)
!3360 = !DILocation(line: 85, column: 2, scope: !3352)
!3361 = !DILocation(line: 89, column: 2, scope: !3352)
!3362 = !DILocation(line: 93, column: 2, scope: !3352)
!3363 = !DILocation(line: 98, column: 2, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3352, file: !116, line: 98, column: 2)
!3365 = !DILocation(line: 99, column: 18, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !116, line: 98, column: 36)
!3367 = distinct !DILexicalBlock(scope: !3364, file: !116, line: 98, column: 2)
!3368 = !DILocation(line: 99, column: 3, scope: !3366)
!3369 = !DILocation(line: 98, column: 32, scope: !3367)
!3370 = !DILocation(line: 98, column: 16, scope: !3367)
!3371 = distinct !{!3371, !3363, !3372}
!3372 = !DILocation(line: 100, column: 2, scope: !3364)
!3373 = !DILocation(line: 103, column: 22, scope: !3352)
!3374 = !DILocation(line: 102, column: 2, scope: !3352)
!3375 = !DILocation(line: 104, column: 1, scope: !3352)
!3376 = distinct !DISubprogram(name: "k_thread_create", scope: !3262, file: !3262, line: 24, type: !3377, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3385)
!3377 = !DISubroutineType(types: !3378)
!3378 = !{!3379, !266, !3380, !234, !3383, !107, !107, !107, !109, !110, !3266}
!3379 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !266)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 32)
!3381 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3382, line: 44, baseType: !146)
!3382 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3383 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3382, line: 46, baseType: !3384)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 32)
!3385 = !{!3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395}
!3386 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3376, file: !3262, line: 24, type: !266)
!3387 = !DILocalVariable(name: "stack", arg: 2, scope: !3376, file: !3262, line: 24, type: !3380)
!3388 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3376, file: !3262, line: 24, type: !234)
!3389 = !DILocalVariable(name: "entry", arg: 4, scope: !3376, file: !3262, line: 24, type: !3383)
!3390 = !DILocalVariable(name: "p1", arg: 5, scope: !3376, file: !3262, line: 24, type: !107)
!3391 = !DILocalVariable(name: "p2", arg: 6, scope: !3376, file: !3262, line: 24, type: !107)
!3392 = !DILocalVariable(name: "p3", arg: 7, scope: !3376, file: !3262, line: 24, type: !107)
!3393 = !DILocalVariable(name: "prio", arg: 8, scope: !3376, file: !3262, line: 24, type: !109)
!3394 = !DILocalVariable(name: "options", arg: 9, scope: !3376, file: !3262, line: 24, type: !110)
!3395 = !DILocalVariable(name: "delay", arg: 10, scope: !3376, file: !3262, line: 24, type: !3266)
!3396 = !DILocation(line: 0, scope: !3376)
!3397 = !DILocation(line: 49, column: 2, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3376, file: !3262, line: 49, column: 2)
!3399 = !{i64 2154156186}
!3400 = !DILocation(line: 50, column: 9, scope: !3376)
!3401 = !DILocation(line: 50, column: 2, scope: !3376)
!3402 = distinct !DISubprogram(name: "k_thread_join", scope: !3262, file: !3262, line: 74, type: !3403, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3405)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!109, !266, !3266}
!3405 = !{!3406, !3407}
!3406 = !DILocalVariable(name: "thread", arg: 1, scope: !3402, file: !3262, line: 74, type: !266)
!3407 = !DILocalVariable(name: "timeout", arg: 2, scope: !3402, file: !3262, line: 74, type: !3266)
!3408 = !DILocation(line: 0, scope: !3402)
!3409 = !DILocation(line: 83, column: 2, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3402, file: !3262, line: 83, column: 2)
!3411 = !{i64 2154156322}
!3412 = !DILocation(line: 84, column: 9, scope: !3402)
!3413 = !DILocation(line: 84, column: 2, scope: !3402)
!3414 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3415, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3424)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!109, !107, !234, !110, !279, !3417}
!3417 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3418, line: 99, baseType: !3419)
!3418 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3419 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3418, line: 40, baseType: !3420)
!3420 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3421)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3422)
!3422 = !{!3423}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3421, file: !288, line: 18, baseType: !107, size: 32)
!3424 = !{!3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3460, !3469, !3472, !3473, !3476, !3479, !3482, !3485, !3491}
!3425 = !DILocalVariable(name: "packaged", arg: 1, scope: !3414, file: !288, line: 233, type: !107)
!3426 = !DILocalVariable(name: "len", arg: 2, scope: !3414, file: !288, line: 233, type: !234)
!3427 = !DILocalVariable(name: "flags", arg: 3, scope: !3414, file: !288, line: 233, type: !110)
!3428 = !DILocalVariable(name: "fmt", arg: 4, scope: !3414, file: !288, line: 234, type: !279)
!3429 = !DILocalVariable(name: "ap", arg: 5, scope: !3414, file: !288, line: 234, type: !3417)
!3430 = !DILocalVariable(name: "buf0", scope: !3414, file: !288, line: 247, type: !286)
!3431 = !DILocalVariable(name: "buf", scope: !3414, file: !288, line: 248, type: !286)
!3432 = !DILocalVariable(name: "size", scope: !3414, file: !288, line: 249, type: !32)
!3433 = !DILocalVariable(name: "align", scope: !3414, file: !288, line: 250, type: !32)
!3434 = !DILocalVariable(name: "str_ptr_pos", scope: !3414, file: !288, line: 251, type: !3435)
!3435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 128, elements: !1833)
!3436 = !DILocalVariable(name: "str_ptr_arg", scope: !3414, file: !288, line: 252, type: !3435)
!3437 = !DILocalVariable(name: "s_idx", scope: !3414, file: !288, line: 253, type: !32)
!3438 = !DILocalVariable(name: "s_rw_cnt", scope: !3414, file: !288, line: 254, type: !32)
!3439 = !DILocalVariable(name: "s_ro_cnt", scope: !3414, file: !288, line: 255, type: !32)
!3440 = !DILocalVariable(name: "arg_idx", scope: !3414, file: !288, line: 256, type: !109)
!3441 = !DILocalVariable(name: "i", scope: !3414, file: !288, line: 257, type: !32)
!3442 = !DILocalVariable(name: "s", scope: !3414, file: !288, line: 258, type: !279)
!3443 = !DILocalVariable(name: "parsing", scope: !3414, file: !288, line: 259, type: !347)
!3444 = !DILocalVariable(name: "rws_pos_en", scope: !3414, file: !288, line: 263, type: !347)
!3445 = !DILocalVariable(name: "fros_cnt", scope: !3414, file: !288, line: 268, type: !109)
!3446 = !DILocalVariable(name: "is_str_arg", scope: !3414, file: !288, line: 269, type: !347)
!3447 = !DILocalVariable(name: "pkg_hdr", scope: !3414, file: !288, line: 270, type: !3448)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 32)
!3449 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3450, line: 78, size: 32, elements: !3451)
!3450 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3451 = !{!3452, !3459}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3449, file: !3450, line: 80, baseType: !3453, size: 32)
!3453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3450, line: 45, size: 32, elements: !3454)
!3454 = !{!3455, !3456, !3457, !3458}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3453, file: !3450, line: 47, baseType: !180, size: 8)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3453, file: !3450, line: 50, baseType: !180, size: 8, offset: 8)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3453, file: !3450, line: 53, baseType: !180, size: 8, offset: 16)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3453, file: !3450, line: 56, baseType: !180, size: 8, offset: 24)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3449, file: !3450, line: 82, baseType: !107, size: 32)
!3460 = !DILocalVariable(name: "v", scope: !3461, file: !288, line: 567, type: !3465)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !288, line: 562, column: 14)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !288, line: 481, column: 18)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !288, line: 466, column: 3)
!3464 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 343, column: 15)
!3465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3414, file: !288, line: 567, size: 64, elements: !3466)
!3466 = !{!3467, !3468}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3465, file: !288, line: 567, baseType: !277, size: 64)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3465, file: !288, line: 567, baseType: !275, size: 64)
!3469 = !DILocalVariable(name: "is_ro", scope: !3470, file: !288, line: 620, type: !347)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !288, line: 613, column: 19)
!3471 = distinct !DILexicalBlock(scope: !3464, file: !288, line: 613, column: 7)
!3472 = !DILocalVariable(name: "do_ro", scope: !3470, file: !288, line: 621, type: !347)
!3473 = !DILocalVariable(name: "s_ptr_idx", scope: !3474, file: !288, line: 626, type: !110)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !288, line: 625, column: 11)
!3475 = distinct !DILexicalBlock(scope: !3470, file: !288, line: 623, column: 8)
!3476 = !DILocalVariable(name: "v", scope: !3477, file: !288, line: 684, type: !109)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !288, line: 683, column: 35)
!3478 = distinct !DILexicalBlock(scope: !3471, file: !288, line: 683, column: 14)
!3479 = !DILocalVariable(name: "v", scope: !3480, file: !288, line: 691, type: !102)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !288, line: 690, column: 36)
!3481 = distinct !DILexicalBlock(scope: !3478, file: !288, line: 690, column: 14)
!3482 = !DILocalVariable(name: "v", scope: !3483, file: !288, line: 698, type: !106)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !288, line: 697, column: 41)
!3484 = distinct !DILexicalBlock(scope: !3481, file: !288, line: 697, column: 14)
!3485 = !DILocalVariable(name: "pos", scope: !3486, file: !288, line: 762, type: !180)
!3486 = distinct !DILexicalBlock(scope: !3487, file: !288, line: 757, column: 31)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !288, line: 757, column: 3)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !288, line: 757, column: 3)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !288, line: 756, column: 16)
!3490 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 756, column: 6)
!3491 = !DILabel(scope: !3470, name: "process_string", file: !288, line: 615)
!3492 = !DILocation(line: 0, scope: !3414)
!3493 = !DILocation(line: 251, column: 2, scope: !3414)
!3494 = !DILocation(line: 251, column: 10, scope: !3414)
!3495 = !DILocation(line: 252, column: 2, scope: !3414)
!3496 = !DILocation(line: 252, column: 10, scope: !3414)
!3497 = !DILocation(line: 263, column: 29, scope: !3414)
!3498 = !DILocation(line: 263, column: 21, scope: !3414)
!3499 = !DILocation(line: 268, column: 21, scope: !3414)
!3500 = !DILocation(line: 268, column: 19, scope: !3414)
!3501 = !DILocation(line: 273, column: 6, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 273, column: 6)
!3503 = !DILocation(line: 273, column: 26, scope: !3502)
!3504 = !DILocation(line: 273, column: 6, scope: !3414)
!3505 = !DILocation(line: 297, column: 6, scope: !3414)
!3506 = !DILocation(line: 305, column: 11, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 305, column: 6)
!3508 = !DILocation(line: 305, column: 6, scope: !3414)
!3509 = !DILocation(line: 327, column: 19, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 327, column: 6)
!3511 = !DILocation(line: 327, column: 22, scope: !3510)
!3512 = !DILocation(line: 327, column: 33, scope: !3510)
!3513 = !DILocation(line: 327, column: 50, scope: !3510)
!3514 = !DILocation(line: 327, column: 6, scope: !3414)
!3515 = !DILocation(line: 338, column: 9, scope: !3414)
!3516 = !DILocation(line: 341, column: 2, scope: !3414)
!3517 = !DILocation(line: 472, column: 8, scope: !3463)
!3518 = !DILocation(line: 473, column: 14, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !288, line: 473, column: 9)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !288, line: 472, column: 18)
!3521 = distinct !DILexicalBlock(scope: !3463, file: !288, line: 472, column: 8)
!3522 = !DILocation(line: 473, column: 9, scope: !3520)
!3523 = !DILocation(line: 479, column: 5, scope: !3520)
!3524 = !DILocation(line: 468, column: 9, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3463, file: !288, line: 468, column: 8)
!3526 = !DILocation(line: 468, column: 8, scope: !3525)
!3527 = !DILocation(line: 468, column: 15, scope: !3525)
!3528 = !DILocation(line: 468, column: 8, scope: !3463)
!3529 = distinct !{!3529, !3530, !3531}
!3530 = !DILocation(line: 343, column: 2, scope: !3414)
!3531 = !DILocation(line: 712, column: 2, scope: !3414)
!3532 = !DILocation(line: 481, column: 4, scope: !3463)
!3533 = !DILocation(line: 484, column: 12, scope: !3462)
!3534 = !DILocation(line: 485, column: 5, scope: !3462)
!3535 = !DILocation(line: 505, column: 5, scope: !3462)
!3536 = !DILocation(line: 518, column: 5, scope: !3462)
!3537 = !DILocation(line: 523, column: 5, scope: !3462)
!3538 = !DILocation(line: 532, column: 9, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3462, file: !288, line: 532, column: 9)
!3540 = !DILocation(line: 532, column: 17, scope: !3539)
!3541 = !DILocation(line: 532, column: 9, scope: !3462)
!3542 = !DILocation(line: 533, column: 10, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !288, line: 533, column: 10)
!3544 = distinct !DILexicalBlock(scope: !3539, file: !288, line: 532, column: 25)
!3545 = !DILocation(line: 533, column: 18, scope: !3543)
!3546 = !DILocation(line: 0, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3461, file: !288, line: 569, column: 9)
!3548 = !DILocation(line: 0, scope: !3461)
!3549 = !DILocation(line: 579, column: 20, scope: !3461)
!3550 = !DILocation(line: 579, column: 11, scope: !3461)
!3551 = !DILocation(line: 580, column: 9, scope: !3461)
!3552 = !DILocation(line: 582, column: 21, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !288, line: 582, column: 10)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !288, line: 580, column: 23)
!3555 = distinct !DILexicalBlock(scope: !3461, file: !288, line: 580, column: 9)
!3556 = !DILocation(line: 582, column: 28, scope: !3553)
!3557 = !DILocation(line: 582, column: 10, scope: !3554)
!3558 = !DILocation(line: 0, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !288, line: 587, column: 17)
!3560 = distinct !DILexicalBlock(scope: !3554, file: !288, line: 585, column: 10)
!3561 = !DILocation(line: 593, column: 9, scope: !3461)
!3562 = !DILocation(line: 600, column: 5, scope: !3462)
!3563 = !DILocation(line: 605, column: 18, scope: !3464)
!3564 = !DILocation(line: 605, column: 9, scope: !3464)
!3565 = !DILocation(line: 608, column: 20, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3464, file: !288, line: 608, column: 7)
!3567 = !DILocation(line: 608, column: 23, scope: !3566)
!3568 = !DILocation(line: 608, column: 34, scope: !3566)
!3569 = !DILocation(line: 608, column: 41, scope: !3566)
!3570 = !DILocation(line: 608, column: 7, scope: !3464)
!3571 = !DILocation(line: 613, column: 7, scope: !3464)
!3572 = !DILocation(line: 614, column: 8, scope: !3470)
!3573 = !DILocation(line: 614, column: 4, scope: !3470)
!3574 = !DILocation(line: 256, column: 6, scope: !3414)
!3575 = !DILocation(line: 254, column: 15, scope: !3414)
!3576 = !DILocation(line: 320, column: 7, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3507, file: !288, line: 305, column: 20)
!3578 = !DILocation(line: 615, column: 1, scope: !3470)
!3579 = !DILocation(line: 616, column: 8, scope: !3470)
!3580 = !DILocation(line: 617, column: 5, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !288, line: 616, column: 22)
!3582 = distinct !DILexicalBlock(scope: !3470, file: !288, line: 616, column: 8)
!3583 = !DILocation(line: 617, column: 25, scope: !3581)
!3584 = !DILocation(line: 618, column: 4, scope: !3581)
!3585 = !DILocation(line: 620, column: 26, scope: !3470)
!3586 = !DILocation(line: 620, column: 29, scope: !3470)
!3587 = !DILocation(line: 620, column: 17, scope: !3470)
!3588 = !DILocation(line: 620, column: 43, scope: !3470)
!3589 = !DILocation(line: 0, scope: !3470)
!3590 = !DILocation(line: 623, column: 14, scope: !3475)
!3591 = !DILocation(line: 626, column: 26, scope: !3474)
!3592 = !DILocation(line: 626, column: 37, scope: !3474)
!3593 = !DILocation(line: 0, scope: !3474)
!3594 = !DILocation(line: 634, column: 15, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3474, file: !288, line: 634, column: 9)
!3596 = !DILocation(line: 635, column: 6, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !288, line: 635, column: 6)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !288, line: 635, column: 6)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !288, line: 635, column: 6)
!3600 = distinct !DILexicalBlock(scope: !3595, file: !288, line: 634, column: 44)
!3601 = !DILocation(line: 639, column: 15, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3474, file: !288, line: 639, column: 9)
!3603 = !DILocation(line: 639, column: 9, scope: !3474)
!3604 = !DILocation(line: 640, column: 6, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !288, line: 640, column: 6)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !288, line: 640, column: 6)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !288, line: 640, column: 6)
!3608 = distinct !DILexicalBlock(scope: !3602, file: !288, line: 639, column: 43)
!3609 = !DILocation(line: 644, column: 9, scope: !3474)
!3610 = !DILocation(line: 649, column: 27, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !288, line: 644, column: 23)
!3612 = distinct !DILexicalBlock(scope: !3474, file: !288, line: 644, column: 9)
!3613 = !DILocation(line: 649, column: 6, scope: !3611)
!3614 = !DILocation(line: 649, column: 25, scope: !3611)
!3615 = !DILocation(line: 650, column: 27, scope: !3611)
!3616 = !DILocation(line: 650, column: 6, scope: !3611)
!3617 = !DILocation(line: 650, column: 25, scope: !3611)
!3618 = !DILocation(line: 651, column: 10, scope: !3611)
!3619 = !DILocation(line: 653, column: 26, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !288, line: 651, column: 17)
!3621 = distinct !DILexicalBlock(scope: !3611, file: !288, line: 651, column: 10)
!3622 = !DILocation(line: 654, column: 15, scope: !3620)
!3623 = !DILocation(line: 655, column: 6, scope: !3620)
!3624 = !DILocation(line: 656, column: 15, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3621, file: !288, line: 655, column: 13)
!3626 = !DILocation(line: 658, column: 16, scope: !3612)
!3627 = !DILocation(line: 663, column: 10, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !288, line: 658, column: 23)
!3629 = distinct !DILexicalBlock(scope: !3612, file: !288, line: 658, column: 16)
!3630 = !DILocation(line: 664, column: 5, scope: !3628)
!3631 = !DILocation(line: 664, column: 16, scope: !3629)
!3632 = !DILocation(line: 669, column: 10, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !288, line: 664, column: 28)
!3634 = distinct !DILexicalBlock(scope: !3629, file: !288, line: 664, column: 16)
!3635 = !DILocation(line: 670, column: 5, scope: !3633)
!3636 = !DILocation(line: 675, column: 13, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3634, file: !288, line: 670, column: 12)
!3638 = !DILocation(line: 675, column: 27, scope: !3637)
!3639 = !DILocation(line: 675, column: 10, scope: !3637)
!3640 = !DILocation(line: 678, column: 10, scope: !3474)
!3641 = !DILocation(line: 680, column: 8, scope: !3470)
!3642 = !DILocation(line: 683, column: 14, scope: !3471)
!3643 = !DILocation(line: 684, column: 12, scope: !3477)
!3644 = !DILocation(line: 0, scope: !3477)
!3645 = !DILocation(line: 686, column: 8, scope: !3477)
!3646 = !DILocation(line: 687, column: 5, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !288, line: 686, column: 22)
!3648 = distinct !DILexicalBlock(scope: !3477, file: !288, line: 686, column: 8)
!3649 = !DILocation(line: 687, column: 17, scope: !3647)
!3650 = !DILocation(line: 688, column: 4, scope: !3647)
!3651 = !DILocation(line: 698, column: 18, scope: !3483)
!3652 = !DILocation(line: 0, scope: !3483)
!3653 = !DILocation(line: 700, column: 8, scope: !3483)
!3654 = !DILocation(line: 704, column: 6, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3656, file: !288, line: 703, column: 12)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !288, line: 701, column: 9)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !288, line: 700, column: 22)
!3658 = distinct !DILexicalBlock(scope: !3483, file: !288, line: 700, column: 8)
!3659 = !DILocation(line: 704, column: 24, scope: !3655)
!3660 = !DILocation(line: 706, column: 4, scope: !3657)
!3661 = !DILocation(line: 709, column: 4, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !288, line: 709, column: 4)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !288, line: 709, column: 4)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !288, line: 709, column: 4)
!3665 = distinct !DILexicalBlock(scope: !3484, file: !288, line: 708, column: 10)
!3666 = !DILocation(line: 0, scope: !3478)
!3667 = !DILocation(line: 0, scope: !3464)
!3668 = !DILocation(line: 720, column: 6, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 720, column: 6)
!3670 = !DILocation(line: 720, column: 17, scope: !3669)
!3671 = !DILocation(line: 720, column: 31, scope: !3669)
!3672 = !DILocation(line: 720, column: 6, scope: !3414)
!3673 = !DILocation(line: 721, column: 3, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !288, line: 721, column: 3)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !288, line: 721, column: 3)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !288, line: 721, column: 3)
!3677 = distinct !DILexicalBlock(scope: !3669, file: !288, line: 720, column: 38)
!3678 = !DILocation(line: 729, column: 6, scope: !3414)
!3679 = !DILocation(line: 730, column: 21, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !288, line: 729, column: 20)
!3681 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 729, column: 6)
!3682 = !DILocation(line: 730, column: 27, scope: !3680)
!3683 = !DILocation(line: 730, column: 3, scope: !3680)
!3684 = !DILocation(line: 737, column: 22, scope: !3414)
!3685 = !DILocation(line: 737, column: 20, scope: !3414)
!3686 = !DILocation(line: 0, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 739, column: 6)
!3688 = !DILocation(line: 745, column: 17, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3687, file: !288, line: 743, column: 9)
!3690 = !DILocation(line: 745, column: 25, scope: !3689)
!3691 = !DILocation(line: 746, column: 17, scope: !3689)
!3692 = !DILocation(line: 746, column: 28, scope: !3689)
!3693 = !DILocation(line: 749, column: 29, scope: !3414)
!3694 = !DILocation(line: 749, column: 16, scope: !3414)
!3695 = !DILocation(line: 749, column: 27, scope: !3414)
!3696 = !DILocation(line: 756, column: 6, scope: !3490)
!3697 = !DILocation(line: 756, column: 6, scope: !3414)
!3698 = !DILocation(line: 757, column: 3, scope: !3488)
!3699 = !DILocation(line: 758, column: 10, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3486, file: !288, line: 758, column: 8)
!3701 = !DILocation(line: 758, column: 25, scope: !3700)
!3702 = !DILocation(line: 758, column: 8, scope: !3486)
!3703 = !DILocation(line: 0, scope: !3486)
!3704 = !DILocation(line: 765, column: 8, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3486, file: !288, line: 765, column: 8)
!3706 = !DILocation(line: 765, column: 19, scope: !3705)
!3707 = !DILocation(line: 765, column: 23, scope: !3705)
!3708 = !DILocation(line: 765, column: 8, scope: !3486)
!3709 = !DILocation(line: 762, column: 33, scope: !3486)
!3710 = !DILocation(line: 769, column: 8, scope: !3486)
!3711 = !DILocation(line: 769, column: 11, scope: !3486)
!3712 = !DILocation(line: 757, column: 27, scope: !3487)
!3713 = !DILocation(line: 757, column: 17, scope: !3487)
!3714 = distinct !{!3714, !3698, !3715}
!3715 = !DILocation(line: 770, column: 3, scope: !3488)
!3716 = !DILocation(line: 774, column: 16, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !288, line: 774, column: 2)
!3718 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 774, column: 2)
!3719 = !DILocation(line: 774, column: 2, scope: !3718)
!3720 = !DILocation(line: 776, column: 16, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !288, line: 776, column: 7)
!3722 = distinct !DILexicalBlock(scope: !3717, file: !288, line: 774, column: 30)
!3723 = !DILocation(line: 776, column: 19, scope: !3721)
!3724 = !DILocation(line: 776, column: 34, scope: !3721)
!3725 = !DILocation(line: 776, column: 7, scope: !3722)
!3726 = !DILocation(line: 780, column: 7, scope: !3722)
!3727 = !DILocation(line: 782, column: 13, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !288, line: 780, column: 19)
!3729 = distinct !DILexicalBlock(scope: !3722, file: !288, line: 780, column: 7)
!3730 = !DILocation(line: 782, column: 8, scope: !3728)
!3731 = !DILocation(line: 782, column: 11, scope: !3728)
!3732 = !DILocation(line: 783, column: 3, scope: !3728)
!3733 = !DILocation(line: 785, column: 26, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3729, file: !288, line: 783, column: 10)
!3735 = !DILocation(line: 785, column: 41, scope: !3734)
!3736 = !DILocation(line: 785, column: 24, scope: !3734)
!3737 = !DILocation(line: 785, column: 8, scope: !3734)
!3738 = !DILocation(line: 787, column: 52, scope: !3734)
!3739 = !DILocation(line: 789, column: 11, scope: !3734)
!3740 = !DILocation(line: 789, column: 21, scope: !3734)
!3741 = !DILocation(line: 0, scope: !3729)
!3742 = !DILocation(line: 793, column: 7, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3722, file: !288, line: 793, column: 7)
!3744 = !DILocation(line: 793, column: 18, scope: !3743)
!3745 = !DILocation(line: 793, column: 22, scope: !3743)
!3746 = !DILocation(line: 793, column: 29, scope: !3743)
!3747 = !DILocation(line: 793, column: 7, scope: !3722)
!3748 = !DILocation(line: 797, column: 12, scope: !3722)
!3749 = !DILocation(line: 797, column: 7, scope: !3722)
!3750 = !DILocation(line: 797, column: 10, scope: !3722)
!3751 = !DILocation(line: 799, column: 3, scope: !3722)
!3752 = !DILocation(line: 800, column: 7, scope: !3722)
!3753 = !DILocation(line: 801, column: 2, scope: !3722)
!3754 = !DILocation(line: 338, column: 4, scope: !3414)
!3755 = !DILocation(line: 774, column: 26, scope: !3717)
!3756 = distinct !{!3756, !3719, !3757}
!3757 = !DILocation(line: 801, column: 2, scope: !3718)
!3758 = !DILocation(line: 808, column: 9, scope: !3414)
!3759 = !DILocation(line: 808, column: 2, scope: !3414)
!3760 = !DILocation(line: 813, column: 1, scope: !3414)
!3761 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3762, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3764)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{!347, !279}
!3764 = !{!3765}
!3765 = !DILocalVariable(name: "addr", arg: 1, scope: !3761, file: !288, line: 33, type: !279)
!3766 = !DILocation(line: 0, scope: !3761)
!3767 = !DILocation(line: 41, column: 9, scope: !3761)
!3768 = !DILocation(line: 41, column: 2, scope: !3761)
!3769 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3770, file: !3770, line: 24, type: !3771, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3773)
!3770 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3771 = !DISubroutineType(types: !3772)
!3772 = !{!347, !13}
!3773 = !{!3774}
!3774 = !DILocalVariable(name: "addr", arg: 1, scope: !3769, file: !3770, line: 24, type: !13)
!3775 = !DILocation(line: 0, scope: !3769)
!3776 = !DILocation(line: 49, column: 30, scope: !3769)
!3777 = !DILocation(line: 49, column: 57, scope: !3769)
!3778 = !DILocation(line: 49, column: 2, scope: !3769)
!3779 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3780, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3782)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!109, !107, !234, !110, !279, null}
!3782 = !{!3783, !3784, !3785, !3786, !3787, !3788}
!3783 = !DILocalVariable(name: "packaged", arg: 1, scope: !3779, file: !288, line: 815, type: !107)
!3784 = !DILocalVariable(name: "len", arg: 2, scope: !3779, file: !288, line: 815, type: !234)
!3785 = !DILocalVariable(name: "flags", arg: 3, scope: !3779, file: !288, line: 815, type: !110)
!3786 = !DILocalVariable(name: "format", arg: 4, scope: !3779, file: !288, line: 816, type: !279)
!3787 = !DILocalVariable(name: "ap", scope: !3779, file: !288, line: 818, type: !3417)
!3788 = !DILocalVariable(name: "ret", scope: !3779, file: !288, line: 819, type: !109)
!3789 = !DILocation(line: 0, scope: !3779)
!3790 = !DILocation(line: 818, column: 2, scope: !3779)
!3791 = !DILocation(line: 818, column: 10, scope: !3779)
!3792 = !DILocation(line: 821, column: 2, scope: !3779)
!3793 = !DILocation(line: 822, column: 8, scope: !3779)
!3794 = !DILocation(line: 823, column: 2, scope: !3779)
!3795 = !DILocation(line: 825, column: 1, scope: !3779)
!3796 = !DILocation(line: 824, column: 2, scope: !3779)
!3797 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3798, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3808)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!109, !3800, !3804, !107, !107}
!3800 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3450, line: 297, baseType: !3801)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 32)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!109, null}
!3804 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3450, line: 328, baseType: !3805)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 32)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{!109, !3800, !107, !279, !3417}
!3808 = !{!3809, !3810, !3811, !3812, !3813, !3814, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827}
!3809 = !DILocalVariable(name: "out", arg: 1, scope: !3797, file: !288, line: 827, type: !3800)
!3810 = !DILocalVariable(name: "formatter", arg: 2, scope: !3797, file: !288, line: 828, type: !3804)
!3811 = !DILocalVariable(name: "ctx", arg: 3, scope: !3797, file: !288, line: 829, type: !107)
!3812 = !DILocalVariable(name: "packaged", arg: 4, scope: !3797, file: !288, line: 829, type: !107)
!3813 = !DILocalVariable(name: "buf", scope: !3797, file: !288, line: 831, type: !286)
!3814 = !DILocalVariable(name: "hdr", scope: !3797, file: !288, line: 832, type: !3815)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 32)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3450, line: 96, size: 64, elements: !3817)
!3817 = !{!3818, !3819}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3816, file: !3450, line: 98, baseType: !3449, size: 32)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3816, file: !3450, line: 101, baseType: !285, size: 32, offset: 32)
!3820 = !DILocalVariable(name: "s", scope: !3797, file: !288, line: 833, type: !285)
!3821 = !DILocalVariable(name: "ps", scope: !3797, file: !288, line: 833, type: !284)
!3822 = !DILocalVariable(name: "i", scope: !3797, file: !288, line: 834, type: !32)
!3823 = !DILocalVariable(name: "args_size", scope: !3797, file: !288, line: 834, type: !32)
!3824 = !DILocalVariable(name: "s_nbr", scope: !3797, file: !288, line: 834, type: !32)
!3825 = !DILocalVariable(name: "ros_nbr", scope: !3797, file: !288, line: 834, type: !32)
!3826 = !DILocalVariable(name: "rws_nbr", scope: !3797, file: !288, line: 834, type: !32)
!3827 = !DILocalVariable(name: "s_idx", scope: !3797, file: !288, line: 834, type: !32)
!3828 = !DILocation(line: 0, scope: !3797)
!3829 = !DILocation(line: 836, column: 10, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3797, file: !288, line: 836, column: 6)
!3831 = !DILocation(line: 836, column: 6, scope: !3797)
!3832 = !DILocation(line: 842, column: 28, scope: !3797)
!3833 = !DILocation(line: 842, column: 14, scope: !3797)
!3834 = !DILocation(line: 852, column: 16, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !288, line: 852, column: 2)
!3836 = distinct !DILexicalBlock(scope: !3797, file: !288, line: 852, column: 2)
!3837 = !DILocation(line: 852, column: 2, scope: !3836)
!3838 = !DILocation(line: 841, column: 28, scope: !3797)
!3839 = !DILocation(line: 841, column: 14, scope: !3797)
!3840 = !DILocation(line: 841, column: 32, scope: !3797)
!3841 = !DILocation(line: 847, column: 19, scope: !3797)
!3842 = !DILocation(line: 843, column: 28, scope: !3797)
!3843 = !DILocation(line: 843, column: 14, scope: !3797)
!3844 = !DILocation(line: 847, column: 31, scope: !3797)
!3845 = !DILocation(line: 844, column: 28, scope: !3797)
!3846 = !DILocation(line: 844, column: 14, scope: !3797)
!3847 = !DILocation(line: 847, column: 45, scope: !3797)
!3848 = !DILocation(line: 847, column: 41, scope: !3797)
!3849 = !DILocation(line: 854, column: 24, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3835, file: !288, line: 852, column: 30)
!3851 = !DILocation(line: 854, column: 11, scope: !3850)
!3852 = !DILocation(line: 855, column: 30, scope: !3850)
!3853 = !DILocation(line: 855, column: 22, scope: !3850)
!3854 = !DILocation(line: 855, column: 8, scope: !3850)
!3855 = !DILocation(line: 857, column: 7, scope: !3850)
!3856 = !DILocation(line: 859, column: 8, scope: !3850)
!3857 = !DILocation(line: 859, column: 18, scope: !3850)
!3858 = !DILocation(line: 859, column: 5, scope: !3850)
!3859 = !DILocation(line: 852, column: 26, scope: !3835)
!3860 = distinct !{!3860, !3837, !3861}
!3861 = !DILocation(line: 860, column: 2, scope: !3836)
!3862 = !DILocation(line: 863, column: 6, scope: !3797)
!3863 = !DILocation(line: 866, column: 56, scope: !3797)
!3864 = !DILocation(line: 866, column: 9, scope: !3797)
!3865 = !DILocation(line: 866, column: 2, scope: !3797)
!3866 = !DILocation(line: 867, column: 1, scope: !3797)
!3867 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3868, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3870)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!109, !3800, !3804, !107, !279, !107}
!3870 = !{!3871, !3872, !3873, !3874, !3875, !3876}
!3871 = !DILocalVariable(name: "out", arg: 1, scope: !3867, file: !288, line: 179, type: !3800)
!3872 = !DILocalVariable(name: "formatter", arg: 2, scope: !3867, file: !288, line: 180, type: !3804)
!3873 = !DILocalVariable(name: "ctx", arg: 3, scope: !3867, file: !288, line: 181, type: !107)
!3874 = !DILocalVariable(name: "fmt", arg: 4, scope: !3867, file: !288, line: 182, type: !279)
!3875 = !DILocalVariable(name: "buf", arg: 5, scope: !3867, file: !288, line: 182, type: !107)
!3876 = !DILocalVariable(name: "u", scope: !3867, file: !288, line: 187, type: !3877)
!3877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3867, file: !288, line: 184, size: 32, elements: !3878)
!3878 = !{!3879, !3880}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3877, file: !288, line: 185, baseType: !3417, size: 32)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3877, file: !288, line: 186, baseType: !107, size: 32)
!3881 = !DILocation(line: 0, scope: !3867)
!3882 = !DILocation(line: 191, column: 9, scope: !3867)
!3883 = !DILocation(line: 191, column: 2, scope: !3867)
!3884 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3885, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3887)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{!347, !279, !109}
!3887 = !{!3888, !3889, !3890, !3891, !3892}
!3888 = !DILocalVariable(name: "fmt", arg: 1, scope: !3884, file: !288, line: 881, type: !279)
!3889 = !DILocalVariable(name: "n", arg: 2, scope: !3884, file: !288, line: 881, type: !109)
!3890 = !DILocalVariable(name: "c", scope: !3884, file: !288, line: 883, type: !150)
!3891 = !DILocalVariable(name: "mod", scope: !3884, file: !288, line: 884, type: !347)
!3892 = !DILocalVariable(name: "cnt", scope: !3884, file: !288, line: 885, type: !109)
!3893 = !DILocation(line: 0, scope: !3884)
!3894 = !DILocation(line: 887, column: 14, scope: !3884)
!3895 = !DILocation(line: 887, column: 22, scope: !3884)
!3896 = !DILocation(line: 887, column: 2, scope: !3884)
!3897 = !DILocation(line: 887, column: 18, scope: !3884)
!3898 = !DILocation(line: 888, column: 7, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3884, file: !288, line: 887, column: 31)
!3900 = !DILocation(line: 889, column: 12, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !288, line: 889, column: 8)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !288, line: 888, column: 12)
!3903 = distinct !DILexicalBlock(scope: !3899, file: !288, line: 888, column: 7)
!3904 = !DILocation(line: 889, column: 8, scope: !3902)
!3905 = !DILocation(line: 890, column: 11, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 890, column: 9)
!3907 = distinct !DILexicalBlock(scope: !3901, file: !288, line: 889, column: 18)
!3908 = !DILocation(line: 890, column: 9, scope: !3907)
!3909 = !DILocation(line: 892, column: 16, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3906, file: !288, line: 892, column: 16)
!3911 = !DILocation(line: 892, column: 16, scope: !3906)
!3912 = !DILocation(line: 895, column: 15, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3901, file: !288, line: 895, column: 15)
!3914 = !DILocation(line: 895, column: 15, scope: !3901)
!3915 = !DILocation(line: 900, column: 9, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3899, file: !288, line: 900, column: 7)
!3917 = !DILocation(line: 900, column: 7, scope: !3899)
!3918 = distinct !{!3918, !3896, !3919}
!3919 = !DILocation(line: 903, column: 2, scope: !3884)
!3920 = !DILocation(line: 906, column: 1, scope: !3884)
!3921 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3922, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3924)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!347, !150}
!3924 = !{!3925}
!3925 = !DILocalVariable(name: "c", arg: 1, scope: !3921, file: !288, line: 873, type: !150)
!3926 = !DILocation(line: 0, scope: !3921)
!3927 = !DILocation(line: 875, column: 19, scope: !3921)
!3928 = !DILocation(line: 875, column: 2, scope: !3921)
!3929 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3930, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3936)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{!109, !107, !234, !3932, !107, !110, !2805, !234}
!3932 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3450, line: 308, baseType: !3933)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 32)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{!109, !13, !234, !107}
!3936 = !{!3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3954, !3955, !3956, !3957, !3958, !3964, !3967, !3968, !3969, !3971, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3987, !3990, !3991, !3992, !3993, !3994, !3995, !3997, !4000, !4001, !4002}
!3937 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3929, file: !288, line: 908, type: !107)
!3938 = !DILocalVariable(name: "in_len", arg: 2, scope: !3929, file: !288, line: 909, type: !234)
!3939 = !DILocalVariable(name: "cb", arg: 3, scope: !3929, file: !288, line: 910, type: !3932)
!3940 = !DILocalVariable(name: "ctx", arg: 4, scope: !3929, file: !288, line: 911, type: !107)
!3941 = !DILocalVariable(name: "flags", arg: 5, scope: !3929, file: !288, line: 912, type: !110)
!3942 = !DILocalVariable(name: "strl", arg: 6, scope: !3929, file: !288, line: 913, type: !2805)
!3943 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3929, file: !288, line: 914, type: !234)
!3944 = !DILocalVariable(name: "buf", scope: !3929, file: !288, line: 918, type: !286)
!3945 = !DILocalVariable(name: "buf32", scope: !3929, file: !288, line: 919, type: !867)
!3946 = !DILocalVariable(name: "args_size", scope: !3929, file: !288, line: 920, type: !32)
!3947 = !DILocalVariable(name: "ros_nbr", scope: !3929, file: !288, line: 920, type: !32)
!3948 = !DILocalVariable(name: "rws_nbr", scope: !3929, file: !288, line: 920, type: !32)
!3949 = !DILocalVariable(name: "fmt_present", scope: !3929, file: !288, line: 921, type: !347)
!3950 = !DILocalVariable(name: "rw_cpy", scope: !3929, file: !288, line: 922, type: !347)
!3951 = !DILocalVariable(name: "ro_cpy", scope: !3929, file: !288, line: 923, type: !347)
!3952 = !DILocalVariable(name: "in_desc", scope: !3929, file: !288, line: 924, type: !3953)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 32)
!3954 = !DILocalVariable(name: "out_len", scope: !3929, file: !288, line: 960, type: !109)
!3955 = !DILocalVariable(name: "fmt", scope: !3929, file: !288, line: 965, type: !279)
!3956 = !DILocalVariable(name: "str_pos", scope: !3929, file: !288, line: 966, type: !286)
!3957 = !DILocalVariable(name: "strl_cnt", scope: !3929, file: !288, line: 967, type: !234)
!3958 = !DILocalVariable(name: "i", scope: !3959, file: !288, line: 973, type: !109)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !288, line: 973, column: 4)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !288, line: 972, column: 15)
!3961 = distinct !DILexicalBlock(scope: !3962, file: !288, line: 972, column: 7)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !288, line: 970, column: 18)
!3963 = distinct !DILexicalBlock(scope: !3929, file: !288, line: 970, column: 6)
!3964 = !DILocalVariable(name: "str", scope: !3965, file: !288, line: 974, type: !279)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 973, column: 38)
!3966 = distinct !DILexicalBlock(scope: !3959, file: !288, line: 973, column: 4)
!3967 = !DILocalVariable(name: "len", scope: !3965, file: !288, line: 975, type: !109)
!3968 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3962, file: !288, line: 990, type: !347)
!3969 = !DILocalVariable(name: "i", scope: !3970, file: !288, line: 995, type: !109)
!3970 = distinct !DILexicalBlock(scope: !3962, file: !288, line: 995, column: 3)
!3971 = !DILocalVariable(name: "arg_idx", scope: !3972, file: !288, line: 996, type: !180)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !288, line: 995, column: 37)
!3973 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 995, column: 3)
!3974 = !DILocalVariable(name: "arg_pos", scope: !3972, file: !288, line: 997, type: !180)
!3975 = !DILocalVariable(name: "str", scope: !3972, file: !288, line: 998, type: !279)
!3976 = !DILocalVariable(name: "is_ro", scope: !3972, file: !288, line: 999, type: !347)
!3977 = !DILocalVariable(name: "len", scope: !3972, file: !288, line: 1000, type: !109)
!3978 = !DILocalVariable(name: "out_desc", scope: !3929, file: !288, line: 1038, type: !3453)
!3979 = !DILocalVariable(name: "cpy_str_pos", scope: !3929, file: !288, line: 1040, type: !3435)
!3980 = !DILocalVariable(name: "keep_str_pos", scope: !3929, file: !288, line: 1042, type: !3435)
!3981 = !DILocalVariable(name: "scpy_cnt", scope: !3929, file: !288, line: 1043, type: !180)
!3982 = !DILocalVariable(name: "keep_cnt", scope: !3929, file: !288, line: 1044, type: !180)
!3983 = !DILocalVariable(name: "dst", scope: !3929, file: !288, line: 1045, type: !286)
!3984 = !DILocalVariable(name: "rv", scope: !3929, file: !288, line: 1046, type: !109)
!3985 = !DILocalVariable(name: "i", scope: !3986, file: !288, line: 1074, type: !109)
!3986 = distinct !DILexicalBlock(scope: !3929, file: !288, line: 1074, column: 2)
!3987 = !DILocalVariable(name: "arg_idx", scope: !3988, file: !288, line: 1075, type: !180)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !288, line: 1074, column: 36)
!3989 = distinct !DILexicalBlock(scope: !3986, file: !288, line: 1074, column: 2)
!3990 = !DILocalVariable(name: "arg_pos", scope: !3988, file: !288, line: 1076, type: !180)
!3991 = !DILocalVariable(name: "str", scope: !3988, file: !288, line: 1077, type: !279)
!3992 = !DILocalVariable(name: "is_ro", scope: !3988, file: !288, line: 1078, type: !347)
!3993 = !DILocalVariable(name: "in_desc_backup", scope: !3929, file: !288, line: 1114, type: !3453)
!3994 = !DILocalVariable(name: "strs_len", scope: !3929, file: !288, line: 1134, type: !234)
!3995 = !DILocalVariable(name: "i", scope: !3996, file: !288, line: 1143, type: !109)
!3996 = distinct !DILexicalBlock(scope: !3929, file: !288, line: 1143, column: 2)
!3997 = !DILocalVariable(name: "loc", scope: !3998, file: !288, line: 1144, type: !180)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !288, line: 1143, column: 37)
!3999 = distinct !DILexicalBlock(scope: !3996, file: !288, line: 1143, column: 2)
!4000 = !DILocalVariable(name: "str", scope: !3998, file: !288, line: 1145, type: !279)
!4001 = !DILocalVariable(name: "str_len", scope: !3998, file: !288, line: 1146, type: !194)
!4002 = !DILabel(scope: !4003, name: "calculate_string_length", file: !288, line: 1021)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !288, line: 1020, column: 56)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !288, line: 1020, column: 15)
!4005 = distinct !DILexicalBlock(scope: !3972, file: !288, line: 1014, column: 8)
!4006 = !DILocation(line: 0, scope: !3929)
!4007 = !DILocation(line: 916, column: 2, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !288, line: 916, column: 2)
!4009 = distinct !DILexicalBlock(scope: !3929, file: !288, line: 916, column: 2)
!4010 = !DILocation(line: 916, column: 2, scope: !4009)
!4011 = !DILocation(line: 916, column: 2, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4008, file: !288, line: 916, column: 2)
!4013 = !DILocation(line: 919, column: 20, scope: !3929)
!4014 = !DILocation(line: 921, column: 27, scope: !3929)
!4015 = !DILocation(line: 921, column: 21, scope: !3929)
!4016 = !DILocation(line: 926, column: 18, scope: !3929)
!4017 = !DILocation(line: 926, column: 11, scope: !3929)
!4018 = !DILocation(line: 926, column: 34, scope: !3929)
!4019 = !DILocation(line: 931, column: 21, scope: !3929)
!4020 = !DILocation(line: 931, column: 12, scope: !3929)
!4021 = !DILocation(line: 932, column: 11, scope: !3929)
!4022 = !DILocation(line: 932, column: 19, scope: !3929)
!4023 = !DILocation(line: 938, column: 21, scope: !3929)
!4024 = !DILocation(line: 938, column: 12, scope: !3929)
!4025 = !DILocation(line: 939, column: 19, scope: !3929)
!4026 = !DILocation(line: 939, column: 23, scope: !3929)
!4027 = !DILocation(line: 946, column: 14, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !3929, file: !288, line: 946, column: 6)
!4029 = !DILocation(line: 947, column: 7, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !288, line: 947, column: 7)
!4031 = distinct !DILexicalBlock(scope: !4028, file: !288, line: 946, column: 26)
!4032 = !DILocation(line: 947, column: 7, scope: !4031)
!4033 = !DILocation(line: 948, column: 4, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4030, file: !288, line: 947, column: 11)
!4035 = !DILocation(line: 949, column: 3, scope: !4034)
!4036 = !DILocation(line: 958, column: 23, scope: !3929)
!4037 = !DILocation(line: 958, column: 14, scope: !3929)
!4038 = !DILocation(line: 958, column: 27, scope: !3929)
!4039 = !DILocation(line: 965, column: 41, scope: !3929)
!4040 = !DILocation(line: 965, column: 20, scope: !3929)
!4041 = !DILocation(line: 966, column: 22, scope: !3929)
!4042 = !DILocation(line: 970, column: 9, scope: !3963)
!4043 = !DILocation(line: 970, column: 6, scope: !3929)
!4044 = !DILocation(line: 972, column: 7, scope: !3962)
!4045 = !DILocation(line: 0, scope: !3959)
!4046 = !DILocation(line: 973, column: 4, scope: !3959)
!4047 = !DILocation(line: 974, column: 46, scope: !3965)
!4048 = !DILocation(line: 974, column: 40, scope: !3965)
!4049 = !DILocation(line: 974, column: 23, scope: !3965)
!4050 = !DILocation(line: 0, scope: !3965)
!4051 = !DILocation(line: 975, column: 15, scope: !3965)
!4052 = !DILocation(line: 978, column: 14, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !3965, file: !288, line: 978, column: 9)
!4054 = !DILocation(line: 979, column: 25, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4053, file: !288, line: 978, column: 38)
!4056 = !DILocation(line: 979, column: 19, scope: !4055)
!4057 = !DILocation(line: 979, column: 6, scope: !4055)
!4058 = !DILocation(line: 979, column: 23, scope: !4055)
!4059 = !DILocation(line: 980, column: 5, scope: !4055)
!4060 = !DILocation(line: 981, column: 13, scope: !3965)
!4061 = !DILocation(line: 982, column: 12, scope: !3965)
!4062 = !DILocation(line: 973, column: 34, scope: !3966)
!4063 = !DILocation(line: 973, column: 22, scope: !3966)
!4064 = distinct !{!4064, !4046, !4065}
!4065 = !DILocation(line: 983, column: 4, scope: !3959)
!4066 = !DILocation(line: 985, column: 16, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !288, line: 985, column: 8)
!4068 = distinct !DILexicalBlock(scope: !3961, file: !288, line: 984, column: 10)
!4069 = !DILocation(line: 967, column: 9, scope: !3929)
!4070 = !DILocation(line: 971, column: 11, scope: !3962)
!4071 = !DILocation(line: 0, scope: !3962)
!4072 = !DILocation(line: 0, scope: !3970)
!4073 = !DILocation(line: 995, column: 21, scope: !3973)
!4074 = !DILocation(line: 995, column: 3, scope: !3970)
!4075 = !DILocation(line: 990, column: 34, scope: !3962)
!4076 = !DILocation(line: 990, column: 26, scope: !3962)
!4077 = !DILocation(line: 996, column: 30, scope: !3972)
!4078 = !DILocation(line: 0, scope: !3972)
!4079 = !DILocation(line: 997, column: 30, scope: !3972)
!4080 = !DILocation(line: 997, column: 22, scope: !3972)
!4081 = !DILocation(line: 998, column: 39, scope: !3972)
!4082 = !DILocation(line: 998, column: 22, scope: !3972)
!4083 = !DILocation(line: 999, column: 17, scope: !3972)
!4084 = !DILocation(line: 1002, column: 20, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !3972, file: !288, line: 1002, column: 8)
!4086 = !DILocation(line: 996, column: 22, scope: !3972)
!4087 = !DILocation(line: 1002, column: 35, scope: !4085)
!4088 = !DILocation(line: 1002, column: 23, scope: !4085)
!4089 = !DILocation(line: 1002, column: 8, scope: !3972)
!4090 = !DILocation(line: 1003, column: 5, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4092, file: !288, line: 1003, column: 5)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !288, line: 1003, column: 5)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !288, line: 1003, column: 5)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !288, line: 1003, column: 5)
!4095 = distinct !DILexicalBlock(scope: !4085, file: !288, line: 1002, column: 45)
!4096 = !DILocation(line: 1010, column: 13, scope: !4095)
!4097 = !DILocation(line: 1011, column: 5, scope: !4095)
!4098 = !DILocation(line: 1014, column: 8, scope: !3972)
!4099 = !DILocation(line: 1015, column: 9, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4005, file: !288, line: 1014, column: 15)
!4101 = !DILocation(line: 1018, column: 14, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !288, line: 1017, column: 12)
!4103 = distinct !DILexicalBlock(scope: !4100, file: !288, line: 1015, column: 9)
!4104 = !DILocation(line: 1020, column: 4, scope: !4100)
!4105 = !DILocation(line: 1020, column: 15, scope: !4005)
!4106 = !DILocation(line: 1021, column: 1, scope: !4003)
!4107 = !DILocation(line: 1022, column: 11, scope: !4003)
!4108 = !DILocation(line: 1025, column: 14, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4003, file: !288, line: 1025, column: 9)
!4110 = !DILocation(line: 1026, column: 25, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4109, file: !288, line: 1025, column: 38)
!4112 = !DILocation(line: 1026, column: 19, scope: !4111)
!4113 = !DILocation(line: 1026, column: 6, scope: !4111)
!4114 = !DILocation(line: 1026, column: 23, scope: !4111)
!4115 = !DILocation(line: 1027, column: 5, scope: !4111)
!4116 = !DILocation(line: 1031, column: 21, scope: !4003)
!4117 = !DILocation(line: 1031, column: 13, scope: !4003)
!4118 = !DILocation(line: 1032, column: 4, scope: !4003)
!4119 = !DILocation(line: 995, column: 33, scope: !3973)
!4120 = distinct !{!4120, !4074, !4121}
!4121 = !DILocation(line: 1033, column: 3, scope: !3970)
!4122 = !DILocation(line: 1040, column: 10, scope: !3929)
!4123 = !DILocation(line: 1042, column: 10, scope: !3929)
!4124 = !DILocation(line: 1052, column: 6, scope: !3929)
!4125 = !DILocation(line: 1055, column: 9, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !288, line: 1052, column: 14)
!4127 = distinct !DILexicalBlock(scope: !3929, file: !288, line: 1052, column: 6)
!4128 = !DILocation(line: 1056, column: 2, scope: !4126)
!4129 = !DILocation(line: 1056, column: 21, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4127, file: !288, line: 1056, column: 13)
!4131 = !DILocation(line: 1066, column: 3, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !288, line: 1065, column: 11)
!4133 = distinct !DILexicalBlock(scope: !3929, file: !288, line: 1065, column: 6)
!4134 = !DILocation(line: 1067, column: 2, scope: !4132)
!4135 = !DILocation(line: 1068, column: 10, scope: !3929)
!4136 = !DILocation(line: 0, scope: !3986)
!4137 = !DILocation(line: 1074, column: 20, scope: !3989)
!4138 = !DILocation(line: 1074, column: 2, scope: !3986)
!4139 = !DILocation(line: 1110, column: 24, scope: !3929)
!4140 = !DILocation(line: 1053, column: 12, scope: !4126)
!4141 = !DILocation(line: 1054, column: 12, scope: !4126)
!4142 = !DILocation(line: 1108, column: 30, scope: !3929)
!4143 = !DILocation(line: 1108, column: 40, scope: !3929)
!4144 = !DILocation(line: 1108, column: 38, scope: !3929)
!4145 = !DILocation(line: 1109, column: 31, scope: !3929)
!4146 = !DILocation(line: 1109, column: 24, scope: !3929)
!4147 = !DILocation(line: 1110, column: 31, scope: !3929)
!4148 = !DILocation(line: 1114, column: 31, scope: !3929)
!4149 = !DILocation(line: 1114, column: 48, scope: !3929)
!4150 = !DILocation(line: 1115, column: 13, scope: !3929)
!4151 = !DILocation(line: 1118, column: 7, scope: !3929)
!4152 = !DILocation(line: 1119, column: 9, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !3929, file: !288, line: 1119, column: 6)
!4154 = !DILocation(line: 1119, column: 6, scope: !3929)
!4155 = !DILocation(line: 1075, column: 29, scope: !3988)
!4156 = !DILocation(line: 1075, column: 21, scope: !3988)
!4157 = !DILocation(line: 0, scope: !3988)
!4158 = !DILocation(line: 1076, column: 29, scope: !3988)
!4159 = !DILocation(line: 1076, column: 21, scope: !3988)
!4160 = !DILocation(line: 1077, column: 38, scope: !3988)
!4161 = !DILocation(line: 1077, column: 21, scope: !3988)
!4162 = !DILocation(line: 1078, column: 16, scope: !3988)
!4163 = !DILocation(line: 1080, column: 19, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !3988, file: !288, line: 1080, column: 7)
!4165 = !DILocation(line: 1080, column: 34, scope: !4164)
!4166 = !DILocation(line: 1080, column: 22, scope: !4164)
!4167 = !DILocation(line: 1080, column: 7, scope: !3988)
!4168 = !DILocation(line: 1084, column: 7, scope: !3988)
!4169 = !DILocation(line: 1085, column: 8, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !288, line: 1084, column: 14)
!4171 = distinct !DILexicalBlock(scope: !3988, file: !288, line: 1084, column: 7)
!4172 = !DILocation(line: 1086, column: 5, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !288, line: 1086, column: 5)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !288, line: 1086, column: 5)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !288, line: 1085, column: 49)
!4176 = distinct !DILexicalBlock(scope: !4170, file: !288, line: 1085, column: 8)
!4177 = !DILocation(line: 1086, column: 5, scope: !4174)
!4178 = !DILocation(line: 1086, column: 5, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4173, file: !288, line: 1086, column: 5)
!4180 = !DILocation(line: 1087, column: 25, scope: !4175)
!4181 = !DILocation(line: 1087, column: 5, scope: !4175)
!4182 = !DILocation(line: 1088, column: 4, scope: !4175)
!4183 = !DILocation(line: 1088, column: 15, scope: !4176)
!4184 = !DILocation(line: 1089, column: 5, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !288, line: 1089, column: 5)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !288, line: 1089, column: 5)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !288, line: 1088, column: 61)
!4188 = distinct !DILexicalBlock(scope: !4176, file: !288, line: 1088, column: 15)
!4189 = !DILocation(line: 1089, column: 5, scope: !4186)
!4190 = !DILocation(line: 1089, column: 5, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4185, file: !288, line: 1089, column: 5)
!4192 = !DILocation(line: 1090, column: 26, scope: !4187)
!4193 = !DILocation(line: 1090, column: 5, scope: !4187)
!4194 = !DILocation(line: 1091, column: 4, scope: !4187)
!4195 = !DILocation(line: 1095, column: 8, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4171, file: !288, line: 1094, column: 10)
!4197 = !DILocation(line: 1096, column: 5, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4199, file: !288, line: 1096, column: 5)
!4199 = distinct !DILexicalBlock(scope: !4200, file: !288, line: 1096, column: 5)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !288, line: 1095, column: 49)
!4201 = distinct !DILexicalBlock(scope: !4196, file: !288, line: 1095, column: 8)
!4202 = !DILocation(line: 1096, column: 5, scope: !4199)
!4203 = !DILocation(line: 1096, column: 5, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4198, file: !288, line: 1096, column: 5)
!4205 = !DILocation(line: 1097, column: 25, scope: !4200)
!4206 = !DILocation(line: 1097, column: 5, scope: !4200)
!4207 = !DILocation(line: 1098, column: 4, scope: !4200)
!4208 = !DILocation(line: 1099, column: 5, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !288, line: 1099, column: 5)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !288, line: 1099, column: 5)
!4211 = distinct !DILexicalBlock(scope: !4201, file: !288, line: 1098, column: 11)
!4212 = !DILocation(line: 1099, column: 5, scope: !4210)
!4213 = !DILocation(line: 1099, column: 5, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4209, file: !288, line: 1099, column: 5)
!4215 = !DILocation(line: 1100, column: 26, scope: !4211)
!4216 = !DILocation(line: 1100, column: 5, scope: !4211)
!4217 = !DILocation(line: 1100, column: 30, scope: !4211)
!4218 = !DILocation(line: 1101, column: 26, scope: !4211)
!4219 = !DILocation(line: 1101, column: 5, scope: !4211)
!4220 = !DILocation(line: 0, scope: !4171)
!4221 = !DILocation(line: 1074, column: 32, scope: !3989)
!4222 = distinct !{!4222, !4138, !4223}
!4223 = !DILocation(line: 1104, column: 2, scope: !3986)
!4224 = !DILocation(line: 1124, column: 13, scope: !3929)
!4225 = !DILocation(line: 1127, column: 10, scope: !3929)
!4226 = !DILocation(line: 1127, column: 7, scope: !3929)
!4227 = !DILocation(line: 1128, column: 9, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !3929, file: !288, line: 1128, column: 6)
!4229 = !DILocation(line: 1128, column: 6, scope: !3929)
!4230 = !DILocation(line: 1134, column: 27, scope: !3929)
!4231 = !DILocation(line: 1136, column: 7, scope: !3929)
!4232 = !DILocation(line: 1137, column: 9, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !3929, file: !288, line: 1137, column: 6)
!4234 = !DILocation(line: 1137, column: 6, scope: !3929)
!4235 = !DILocation(line: 1131, column: 10, scope: !3929)
!4236 = !DILocation(line: 1140, column: 10, scope: !3929)
!4237 = !DILocation(line: 0, scope: !3996)
!4238 = !DILocation(line: 1143, column: 20, scope: !3999)
!4239 = !DILocation(line: 1143, column: 2, scope: !3996)
!4240 = !DILocation(line: 1144, column: 3, scope: !3998)
!4241 = !DILocation(line: 1144, column: 17, scope: !3998)
!4242 = !DILocation(line: 0, scope: !3998)
!4243 = !DILocation(line: 1144, column: 11, scope: !3998)
!4244 = !DILocation(line: 1145, column: 38, scope: !3998)
!4245 = !DILocation(line: 1145, column: 21, scope: !3998)
!4246 = !DILocation(line: 1146, column: 22, scope: !3998)
!4247 = !DILocation(line: 1146, column: 29, scope: !3998)
!4248 = !DILocation(line: 1148, column: 8, scope: !3998)
!4249 = !DILocation(line: 1149, column: 10, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !3998, file: !288, line: 1149, column: 7)
!4251 = !DILocation(line: 1149, column: 7, scope: !3998)
!4252 = !DILocation(line: 1154, column: 8, scope: !3998)
!4253 = !DILocation(line: 1155, column: 10, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !3998, file: !288, line: 1155, column: 7)
!4255 = !DILocation(line: 1155, column: 7, scope: !3998)
!4256 = !DILocation(line: 1159, column: 2, scope: !3999)
!4257 = !DILocation(line: 1152, column: 11, scope: !3998)
!4258 = !DILocation(line: 1158, column: 11, scope: !3998)
!4259 = !DILocation(line: 1143, column: 33, scope: !3999)
!4260 = distinct !{!4260, !4239, !4261}
!4261 = !DILocation(line: 1159, column: 2, scope: !3996)
!4262 = !DILocation(line: 1162, column: 8, scope: !3929)
!4263 = !DILocation(line: 1164, column: 2, scope: !3929)
!4264 = !DILocation(line: 1165, column: 1, scope: !3929)
!4265 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4266, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4268)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{!234, !107}
!4268 = !{!4269, !4270, !4271, !4272, !4273, !4274, !4275}
!4269 = !DILocalVariable(name: "packaged", arg: 1, scope: !4265, file: !288, line: 196, type: !107)
!4270 = !DILocalVariable(name: "buf", scope: !4265, file: !288, line: 200, type: !286)
!4271 = !DILocalVariable(name: "start", scope: !4265, file: !288, line: 201, type: !286)
!4272 = !DILocalVariable(name: "args_size", scope: !4265, file: !288, line: 202, type: !32)
!4273 = !DILocalVariable(name: "s_nbr", scope: !4265, file: !288, line: 202, type: !32)
!4274 = !DILocalVariable(name: "ros_nbr", scope: !4265, file: !288, line: 202, type: !32)
!4275 = !DILocalVariable(name: "i", scope: !4276, file: !288, line: 215, type: !109)
!4276 = distinct !DILexicalBlock(scope: !4265, file: !288, line: 215, column: 2)
!4277 = !DILocation(line: 0, scope: !4265)
!4278 = !DILocation(line: 198, column: 2, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !288, line: 198, column: 2)
!4280 = distinct !DILexicalBlock(scope: !4265, file: !288, line: 198, column: 2)
!4281 = !DILocation(line: 198, column: 2, scope: !4280)
!4282 = !DILocation(line: 198, column: 2, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4279, file: !288, line: 198, column: 2)
!4284 = !DILocation(line: 204, column: 14, scope: !4265)
!4285 = !DILocation(line: 204, column: 21, scope: !4265)
!4286 = !DILocation(line: 205, column: 14, scope: !4265)
!4287 = !DILocation(line: 206, column: 14, scope: !4265)
!4288 = !DILocation(line: 209, column: 6, scope: !4265)
!4289 = !DILocation(line: 212, column: 6, scope: !4265)
!4290 = !DILocation(line: 0, scope: !4276)
!4291 = !DILocation(line: 215, column: 20, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4276, file: !288, line: 215, column: 2)
!4293 = !DILocation(line: 215, column: 2, scope: !4276)
!4294 = !DILocation(line: 220, column: 33, scope: !4265)
!4295 = !DILocation(line: 220, column: 2, scope: !4265)
!4296 = !DILocation(line: 216, column: 6, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4292, file: !288, line: 215, column: 34)
!4298 = !DILocation(line: 217, column: 10, scope: !4297)
!4299 = !DILocation(line: 217, column: 36, scope: !4297)
!4300 = !DILocation(line: 217, column: 7, scope: !4297)
!4301 = !DILocation(line: 215, column: 30, scope: !4292)
!4302 = distinct !{!4302, !4293, !4303}
!4303 = !DILocation(line: 218, column: 2, scope: !4276)
!4304 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4305, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4307)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{!109, !3932, !107, !279, !194}
!4307 = !{!4308, !4309, !4310, !4311}
!4308 = !DILocalVariable(name: "cb", arg: 1, scope: !4304, file: !288, line: 223, type: !3932)
!4309 = !DILocalVariable(name: "ctx", arg: 2, scope: !4304, file: !288, line: 223, type: !107)
!4310 = !DILocalVariable(name: "str", arg: 3, scope: !4304, file: !288, line: 223, type: !279)
!4311 = !DILocalVariable(name: "strl", arg: 4, scope: !4304, file: !288, line: 223, type: !194)
!4312 = !DILocation(line: 0, scope: !4304)
!4313 = !DILocation(line: 225, column: 9, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4304, file: !288, line: 225, column: 6)
!4315 = !DILocation(line: 225, column: 6, scope: !4304)
!4316 = !DILocation(line: 226, column: 14, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4314, file: !288, line: 225, column: 18)
!4318 = !DILocation(line: 226, column: 12, scope: !4317)
!4319 = !DILocation(line: 226, column: 3, scope: !4317)
!4320 = !DILocation(line: 229, column: 14, scope: !4304)
!4321 = !DILocation(line: 229, column: 9, scope: !4304)
!4322 = !DILocation(line: 229, column: 27, scope: !4304)
!4323 = !DILocation(line: 229, column: 39, scope: !4304)
!4324 = !DILocation(line: 230, column: 17, scope: !4304)
!4325 = !DILocation(line: 230, column: 9, scope: !4304)
!4326 = !DILocation(line: 230, column: 2, scope: !4304)
!4327 = !DILocation(line: 231, column: 1, scope: !4304)
!4328 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4329)
!4329 = !{!4330}
!4330 = !DILocalVariable(name: "c", arg: 1, scope: !4328, file: !301, line: 45, type: !109)
!4331 = !DILocation(line: 0, scope: !4328)
!4332 = !DILocation(line: 50, column: 2, scope: !4328)
!4333 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4334, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4336)
!4334 = !DISubroutineType(types: !4335)
!4335 = !{null, !302}
!4336 = !{!4337}
!4337 = !DILocalVariable(name: "fn", arg: 1, scope: !4333, file: !301, line: 63, type: !302)
!4338 = !DILocation(line: 0, scope: !4333)
!4339 = !DILocation(line: 65, column: 12, scope: !4333)
!4340 = !DILocation(line: 66, column: 1, scope: !4333)
!4341 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4342, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2050)
!4342 = !DISubroutineType(types: !4343)
!4343 = !{!107}
!4344 = !DILocation(line: 78, column: 9, scope: !4341)
!4345 = !DILocation(line: 78, column: 2, scope: !4341)
!4346 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4347, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4355)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{null, !279, !4349}
!4349 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3418, line: 99, baseType: !4350)
!4350 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3418, line: 40, baseType: !4351)
!4351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4352)
!4352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4353)
!4353 = !{!4354}
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4352, file: !301, line: 79, baseType: !107, size: 32)
!4355 = !{!4356, !4357, !4358}
!4356 = !DILocalVariable(name: "fmt", arg: 1, scope: !4346, file: !301, line: 113, type: !279)
!4357 = !DILocalVariable(name: "ap", arg: 2, scope: !4346, file: !301, line: 113, type: !4349)
!4358 = !DILocalVariable(name: "ctx", scope: !4359, file: !301, line: 121, type: !4361)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !301, line: 120, column: 27)
!4360 = distinct !DILexicalBlock(scope: !4346, file: !301, line: 120, column: 6)
!4361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4362)
!4362 = !{!4363, !4364}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4361, file: !301, line: 85, baseType: !32, size: 32)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4361, file: !301, line: 86, baseType: !4365, offset: 32)
!4365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, elements: !4366)
!4366 = !{!4367}
!4367 = !DISubrange(count: 0)
!4368 = !DILocation(line: 0, scope: !4346)
!4369 = !DILocation(line: 148, column: 3, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4360, file: !301, line: 138, column: 9)
!4371 = !DILocation(line: 155, column: 1, scope: !4346)
!4372 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4373, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4375)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!109, !109, !107}
!4375 = !{!4376, !4377}
!4376 = !DILocalVariable(name: "c", arg: 1, scope: !4372, file: !301, line: 107, type: !109)
!4377 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4372, file: !301, line: 107, type: !107)
!4378 = !DILocation(line: 0, scope: !4372)
!4379 = !DILocation(line: 110, column: 9, scope: !4372)
!4380 = !DILocation(line: 110, column: 2, scope: !4372)
!4381 = distinct !DISubprogram(name: "cbvprintf", scope: !3450, file: !3450, line: 739, type: !4382, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4384)
!4382 = !DISubroutineType(types: !4383)
!4383 = !{!109, !3800, !107, !279, !4349}
!4384 = !{!4385, !4386, !4387, !4388}
!4385 = !DILocalVariable(name: "out", arg: 1, scope: !4381, file: !3450, line: 739, type: !3800)
!4386 = !DILocalVariable(name: "ctx", arg: 2, scope: !4381, file: !3450, line: 739, type: !107)
!4387 = !DILocalVariable(name: "format", arg: 3, scope: !4381, file: !3450, line: 739, type: !279)
!4388 = !DILocalVariable(name: "ap", arg: 4, scope: !4381, file: !3450, line: 739, type: !4349)
!4389 = !DILocation(line: 0, scope: !4381)
!4390 = !DILocation(line: 741, column: 9, scope: !4381)
!4391 = !DILocation(line: 741, column: 2, scope: !4381)
!4392 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4393, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4395)
!4393 = !DISubroutineType(types: !4394)
!4394 = !{null, !285, !234}
!4395 = !{!4396, !4397, !4398}
!4396 = !DILocalVariable(name: "c", arg: 1, scope: !4392, file: !301, line: 157, type: !285)
!4397 = !DILocalVariable(name: "n", arg: 2, scope: !4392, file: !301, line: 157, type: !234)
!4398 = !DILocalVariable(name: "i", scope: !4392, file: !301, line: 159, type: !234)
!4399 = !DILocation(line: 0, scope: !4392)
!4400 = !DILocation(line: 164, column: 16, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !301, line: 164, column: 2)
!4402 = distinct !DILexicalBlock(scope: !4392, file: !301, line: 164, column: 2)
!4403 = !DILocation(line: 164, column: 2, scope: !4402)
!4404 = !DILocation(line: 165, column: 3, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4401, file: !301, line: 164, column: 26)
!4406 = !DILocation(line: 165, column: 13, scope: !4405)
!4407 = !DILocation(line: 164, column: 22, scope: !4401)
!4408 = distinct !{!4408, !4403, !4409}
!4409 = !DILocation(line: 166, column: 2, scope: !4402)
!4410 = !DILocation(line: 171, column: 1, scope: !4392)
!4411 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4412, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4414)
!4412 = !DISubroutineType(types: !4413)
!4413 = !{null, !279, null}
!4414 = !{!4415, !4416}
!4415 = !DILocalVariable(name: "fmt", arg: 1, scope: !4411, file: !301, line: 203, type: !279)
!4416 = !DILocalVariable(name: "ap", scope: !4411, file: !301, line: 205, type: !4349)
!4417 = !DILocation(line: 0, scope: !4411)
!4418 = !DILocation(line: 205, column: 2, scope: !4411)
!4419 = !DILocation(line: 205, column: 10, scope: !4411)
!4420 = !DILocation(line: 207, column: 2, scope: !4411)
!4421 = !DILocation(line: 209, column: 2, scope: !4411)
!4422 = !DILocation(line: 211, column: 2, scope: !4411)
!4423 = !DILocation(line: 212, column: 1, scope: !4411)
!4424 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4425, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4427)
!4425 = !DISubroutineType(types: !4426)
!4426 = !{!109, !285, !234, !279, null}
!4427 = !{!4428, !4429, !4430, !4431, !4432}
!4428 = !DILocalVariable(name: "str", arg: 1, scope: !4424, file: !301, line: 239, type: !285)
!4429 = !DILocalVariable(name: "size", arg: 2, scope: !4424, file: !301, line: 239, type: !234)
!4430 = !DILocalVariable(name: "fmt", arg: 3, scope: !4424, file: !301, line: 239, type: !279)
!4431 = !DILocalVariable(name: "ap", scope: !4424, file: !301, line: 241, type: !4349)
!4432 = !DILocalVariable(name: "ret", scope: !4424, file: !301, line: 242, type: !109)
!4433 = !DILocation(line: 0, scope: !4424)
!4434 = !DILocation(line: 241, column: 2, scope: !4424)
!4435 = !DILocation(line: 241, column: 10, scope: !4424)
!4436 = !DILocation(line: 244, column: 2, scope: !4424)
!4437 = !DILocation(line: 245, column: 8, scope: !4424)
!4438 = !DILocation(line: 246, column: 2, scope: !4424)
!4439 = !DILocation(line: 249, column: 1, scope: !4424)
!4440 = !DILocation(line: 248, column: 2, scope: !4424)
!4441 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4442, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4444)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{!109, !285, !234, !279, !4349}
!4444 = !{!4445, !4446, !4447, !4448, !4449}
!4445 = !DILocalVariable(name: "str", arg: 1, scope: !4441, file: !301, line: 251, type: !285)
!4446 = !DILocalVariable(name: "size", arg: 2, scope: !4441, file: !301, line: 251, type: !234)
!4447 = !DILocalVariable(name: "fmt", arg: 3, scope: !4441, file: !301, line: 251, type: !279)
!4448 = !DILocalVariable(name: "ap", arg: 4, scope: !4441, file: !301, line: 251, type: !4349)
!4449 = !DILocalVariable(name: "ctx", scope: !4441, file: !301, line: 253, type: !4450)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4451)
!4451 = !{!4452, !4453, !4454}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4450, file: !301, line: 218, baseType: !285, size: 32)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4450, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4450, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4455 = !DILocation(line: 0, scope: !4441)
!4456 = !DILocation(line: 253, column: 2, scope: !4441)
!4457 = !DILocation(line: 253, column: 21, scope: !4441)
!4458 = !DILocation(line: 253, column: 27, scope: !4441)
!4459 = !DILocation(line: 255, column: 2, scope: !4441)
!4460 = !DILocation(line: 257, column: 10, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4441, file: !301, line: 257, column: 6)
!4462 = !DILocation(line: 257, column: 22, scope: !4461)
!4463 = !DILocation(line: 257, column: 16, scope: !4461)
!4464 = !DILocation(line: 257, column: 6, scope: !4441)
!4465 = !DILocation(line: 258, column: 3, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4461, file: !301, line: 257, column: 27)
!4467 = !DILocation(line: 258, column: 18, scope: !4466)
!4468 = !DILocation(line: 259, column: 2, scope: !4466)
!4469 = !DILocation(line: 262, column: 1, scope: !4441)
!4470 = !DILocation(line: 261, column: 2, scope: !4441)
!4471 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4472, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4475)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!109, !109, !4474}
!4474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 32)
!4475 = !{!4476, !4477}
!4476 = !DILocalVariable(name: "c", arg: 1, scope: !4471, file: !301, line: 223, type: !109)
!4477 = !DILocalVariable(name: "ctx", arg: 2, scope: !4471, file: !301, line: 223, type: !4474)
!4478 = !DILocation(line: 0, scope: !4471)
!4479 = !DILocation(line: 225, column: 11, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4471, file: !301, line: 225, column: 6)
!4481 = !DILocation(line: 225, column: 15, scope: !4480)
!4482 = !DILocation(line: 0, scope: !4480)
!4483 = !DILocation(line: 225, column: 23, scope: !4480)
!4484 = !DILocation(line: 225, column: 45, scope: !4480)
!4485 = !DILocation(line: 225, column: 37, scope: !4480)
!4486 = !DILocation(line: 225, column: 6, scope: !4471)
!4487 = !DILocation(line: 226, column: 8, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4480, file: !301, line: 225, column: 50)
!4489 = !DILocation(line: 226, column: 13, scope: !4488)
!4490 = !DILocation(line: 227, column: 3, scope: !4488)
!4491 = !DILocation(line: 230, column: 29, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4471, file: !301, line: 230, column: 6)
!4493 = !DILocation(line: 230, column: 17, scope: !4492)
!4494 = !DILocation(line: 230, column: 6, scope: !4471)
!4495 = !DILocation(line: 231, column: 22, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4492, file: !301, line: 230, column: 34)
!4497 = !DILocation(line: 231, column: 3, scope: !4496)
!4498 = !DILocation(line: 231, column: 26, scope: !4496)
!4499 = !DILocation(line: 232, column: 2, scope: !4496)
!4500 = !DILocation(line: 233, column: 28, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4492, file: !301, line: 232, column: 9)
!4502 = !DILocation(line: 233, column: 22, scope: !4501)
!4503 = !DILocation(line: 233, column: 3, scope: !4501)
!4504 = !DILocation(line: 233, column: 26, scope: !4501)
!4505 = !DILocation(line: 237, column: 1, scope: !4471)
!4506 = distinct !DISubprogram(name: "z_thread_entry", scope: !4507, file: !4507, line: 30, type: !4508, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4510)
!4507 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4508 = !DISubroutineType(types: !4509)
!4509 = !{null, !3383, !107, !107, !107}
!4510 = !{!4511, !4512, !4513, !4514}
!4511 = !DILocalVariable(name: "entry", arg: 1, scope: !4506, file: !4507, line: 30, type: !3383)
!4512 = !DILocalVariable(name: "p1", arg: 2, scope: !4506, file: !4507, line: 31, type: !107)
!4513 = !DILocalVariable(name: "p2", arg: 3, scope: !4506, file: !4507, line: 31, type: !107)
!4514 = !DILocalVariable(name: "p3", arg: 4, scope: !4506, file: !4507, line: 31, type: !107)
!4515 = !DILocation(line: 0, scope: !4506)
!4516 = !DILocation(line: 36, column: 2, scope: !4506)
!4517 = !DILocation(line: 38, column: 17, scope: !4506)
!4518 = !DILocation(line: 38, column: 2, scope: !4506)
!4519 = !DILocation(line: 45, column: 2, scope: !4506)
!4520 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4521, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !2050)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{!4523}
!4523 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !4524)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 32)
!4525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !4526)
!4526 = !{!4527, !4585, !4597, !4598, !4599, !4600, !4601, !4607, !4622}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4525, file: !158, line: 247, baseType: !4528, size: 384)
!4528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !4529)
!4529 = !{!4530, !4554, !4561, !4562, !4563, !4572, !4573, !4574}
!4530 = !DIDerivedType(tag: DW_TAG_member, scope: !4528, file: !158, line: 60, baseType: !4531, size: 64)
!4531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4528, file: !158, line: 60, size: 64, elements: !4532)
!4532 = !{!4533, !4548}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4531, file: !158, line: 61, baseType: !4534, size: 64)
!4534 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4535)
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4536)
!4536 = !{!4537, !4543}
!4537 = !DIDerivedType(tag: DW_TAG_member, scope: !4535, file: !127, line: 38, baseType: !4538, size: 32)
!4538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4535, file: !127, line: 38, size: 32, elements: !4539)
!4539 = !{!4540, !4542}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4538, file: !127, line: 39, baseType: !4541, size: 32)
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4538, file: !127, line: 40, baseType: !4541, size: 32)
!4543 = !DIDerivedType(tag: DW_TAG_member, scope: !4535, file: !127, line: 42, baseType: !4544, size: 32, offset: 32)
!4544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4535, file: !127, line: 42, size: 32, elements: !4545)
!4545 = !{!4546, !4547}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4544, file: !127, line: 43, baseType: !4541, size: 32)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4544, file: !127, line: 44, baseType: !4541, size: 32)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4531, file: !158, line: 62, baseType: !4549, size: 64)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !4550)
!4550 = !{!4551}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4549, file: !170, line: 50, baseType: !4552, size: 64)
!4552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4553, size: 64, elements: !175)
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 32)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4528, file: !158, line: 68, baseType: !4555, size: 32, offset: 64)
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 32)
!4556 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4557)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4558)
!4558 = !{!4559}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4557, file: !122, line: 232, baseType: !4560, size: 64)
!4560 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4535)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4528, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4528, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!4563 = !DIDerivedType(tag: DW_TAG_member, scope: !4528, file: !158, line: 90, baseType: !4564, size: 16, offset: 112)
!4564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4528, file: !158, line: 90, size: 16, elements: !4565)
!4565 = !{!4566, !4571}
!4566 = !DIDerivedType(tag: DW_TAG_member, scope: !4564, file: !158, line: 91, baseType: !4567, size: 16)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4564, file: !158, line: 91, size: 16, elements: !4568)
!4568 = !{!4569, !4570}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4567, file: !158, line: 96, baseType: !190, size: 8)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4567, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4564, file: !158, line: 100, baseType: !194, size: 16)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4528, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4528, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4528, file: !158, line: 131, baseType: !4575, size: 192, offset: 192)
!4575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4576)
!4576 = !{!4577, !4578, !4584}
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4575, file: !122, line: 245, baseType: !4534, size: 64)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4575, file: !122, line: 246, baseType: !4579, size: 32, offset: 64)
!4579 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4580)
!4580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4581, size: 32)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{null, !4583}
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4575, size: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4575, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4525, file: !158, line: 250, baseType: !4586, size: 288, offset: 384)
!4586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !4587)
!4587 = !{!4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4586, file: !211, line: 26, baseType: !110, size: 32)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4586, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4586, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4586, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4586, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4586, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4586, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4586, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4586, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4525, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4525, file: !158, line: 256, baseType: !4556, size: 64, offset: 704)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4525, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4525, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4525, file: !158, line: 300, baseType: !4602, size: 96, offset: 1056)
!4602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !4603)
!4603 = !{!4604, !4605, !4606}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4602, file: !158, line: 153, baseType: !22, size: 32)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4602, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4602, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4525, file: !158, line: 325, baseType: !4608, size: 32, offset: 1152)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4609, size: 32)
!4609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4610)
!4610 = !{!4611, !4617, !4618}
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4609, file: !118, line: 5074, baseType: !4612, size: 96)
!4612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !4613)
!4613 = !{!4614, !4615, !4616}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4612, file: !243, line: 57, baseType: !246, size: 32)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4612, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4612, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4609, file: !118, line: 5075, baseType: !4556, size: 64, offset: 96)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4609, file: !118, line: 5076, baseType: !4619, size: 32, offset: 160)
!4619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !4620)
!4620 = !{!4621}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4619, file: !253, line: 52, baseType: !22, size: 32)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4525, file: !158, line: 343, baseType: !4623, size: 64, offset: 1184)
!4623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !4624)
!4624 = !{!4625, !4626}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4623, file: !211, line: 63, baseType: !110, size: 32)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4623, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!4627 = !DILocation(line: 535, column: 9, scope: !4520)
!4628 = !DILocation(line: 535, column: 2, scope: !4520)
!4629 = distinct !DISubprogram(name: "k_thread_abort", scope: !3262, file: !3262, line: 188, type: !4630, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !4632)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{null, !4523}
!4632 = !{!4633}
!4633 = !DILocalVariable(name: "thread", arg: 1, scope: !4629, file: !3262, line: 188, type: !4523)
!4634 = !DILocation(line: 0, scope: !4629)
!4635 = !DILocation(line: 197, column: 2, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4629, file: !3262, line: 197, column: 2)
!4637 = !{i64 2154155265}
!4638 = !DILocation(line: 198, column: 2, scope: !4629)
!4639 = !DILocation(line: 199, column: 1, scope: !4629)
!4640 = distinct !DISubprogram(name: "z_current_get", scope: !3262, file: !3262, line: 173, type: !4521, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !2050)
!4641 = !DILocation(line: 180, column: 2, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4640, file: !3262, line: 180, column: 2)
!4643 = !{i64 2154155197}
!4644 = !DILocation(line: 181, column: 9, scope: !4640)
!4645 = !DILocation(line: 181, column: 2, scope: !4640)
!4646 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2539, file: !2539, line: 1338, type: !4647, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !4655)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!109, !3800, !107, !279, !4649, !110}
!4649 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3418, line: 99, baseType: !4650)
!4650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3418, line: 40, baseType: !4651)
!4651 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2539, baseType: !4652)
!4652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4653)
!4653 = !{!4654}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4652, file: !2539, baseType: !107, size: 32)
!4655 = !{!4656, !4657, !4658, !4659, !4660, !4661, !4665, !4666, !4667, !4669, !4674, !4717, !4720, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4732, !4733, !4734, !4738, !4741, !4743, !4746, !4747, !4748, !4753, !4759, !4762, !4766, !4772, !4776, !4779, !4781, !4784}
!4656 = !DILocalVariable(name: "out", arg: 1, scope: !4646, file: !2539, line: 1338, type: !3800)
!4657 = !DILocalVariable(name: "ctx", arg: 2, scope: !4646, file: !2539, line: 1338, type: !107)
!4658 = !DILocalVariable(name: "fp", arg: 3, scope: !4646, file: !2539, line: 1338, type: !279)
!4659 = !DILocalVariable(name: "ap", arg: 4, scope: !4646, file: !2539, line: 1339, type: !4649)
!4660 = !DILocalVariable(name: "flags", arg: 5, scope: !4646, file: !2539, line: 1339, type: !110)
!4661 = !DILocalVariable(name: "buf", scope: !4646, file: !2539, line: 1341, type: !4662)
!4662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 176, elements: !4663)
!4663 = !{!4664}
!4664 = !DISubrange(count: 22)
!4665 = !DILocalVariable(name: "count", scope: !4646, file: !2539, line: 1342, type: !234)
!4666 = !DILocalVariable(name: "sint", scope: !4646, file: !2539, line: 1343, type: !2558)
!4667 = !DILocalVariable(name: "tagged_ap", scope: !4646, file: !2539, line: 1345, type: !4668)
!4668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!4669 = !DILocalVariable(name: "rc", scope: !4670, file: !2539, line: 1377, type: !109)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !2539, line: 1377, column: 4)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !2539, line: 1376, column: 19)
!4672 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1376, column: 7)
!4673 = distinct !DILexicalBlock(scope: !4646, file: !2539, line: 1375, column: 19)
!4674 = !DILocalVariable(name: "state", scope: !4673, file: !2539, line: 1395, type: !4675)
!4675 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4646, file: !2539, line: 1392, size: 192, elements: !4676)
!4676 = !{!4677, !4685}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4675, file: !2539, line: 1393, baseType: !4678, size: 64)
!4678 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2539, line: 166, size: 64, elements: !4679)
!4679 = !{!4680, !4681, !4682, !4683, !4684}
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4678, file: !2539, line: 168, baseType: !2558, size: 64)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4678, file: !2539, line: 171, baseType: !2561, size: 64)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4678, file: !2539, line: 174, baseType: !277, size: 64)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4678, file: !2539, line: 177, baseType: !275, size: 64)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4678, file: !2539, line: 180, baseType: !107, size: 32)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4675, file: !2539, line: 1394, baseType: !4686, size: 96, offset: 64)
!4686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2539, line: 189, size: 96, elements: !4687)
!4687 = !{!4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4712}
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4686, file: !2539, line: 191, baseType: !347, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4686, file: !2539, line: 194, baseType: !347, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4686, file: !2539, line: 197, baseType: !347, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4686, file: !2539, line: 200, baseType: !347, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4686, file: !2539, line: 203, baseType: !347, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4686, file: !2539, line: 206, baseType: !347, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4686, file: !2539, line: 209, baseType: !347, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4686, file: !2539, line: 212, baseType: !347, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4686, file: !2539, line: 219, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4686, file: !2539, line: 222, baseType: !347, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4686, file: !2539, line: 229, baseType: !347, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4686, file: !2539, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4686, file: !2539, line: 238, baseType: !347, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4686, file: !2539, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4686, file: !2539, line: 244, baseType: !347, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4686, file: !2539, line: 247, baseType: !347, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4686, file: !2539, line: 252, baseType: !347, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4686, file: !2539, line: 257, baseType: !347, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4686, file: !2539, line: 260, baseType: !181, size: 8, offset: 24)
!4707 = !DIDerivedType(tag: DW_TAG_member, scope: !4686, file: !2539, line: 262, baseType: !4708, size: 32, offset: 32)
!4708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4686, file: !2539, line: 262, size: 32, elements: !4709)
!4709 = !{!4710, !4711}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4708, file: !2539, line: 267, baseType: !109, size: 32)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4708, file: !2539, line: 289, baseType: !109, size: 32)
!4712 = !DIDerivedType(tag: DW_TAG_member, scope: !4686, file: !2539, line: 292, baseType: !4713, size: 32, offset: 64)
!4713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4686, file: !2539, line: 292, size: 32, elements: !4714)
!4714 = !{!4715, !4716}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4713, file: !2539, line: 297, baseType: !109, size: 32)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4713, file: !2539, line: 306, baseType: !109, size: 32)
!4717 = !DILocalVariable(name: "conv", scope: !4673, file: !2539, line: 1400, type: !4718)
!4718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4719)
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 32)
!4720 = !DILocalVariable(name: "value", scope: !4673, file: !2539, line: 1401, type: !4721)
!4721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4722)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4678, size: 32)
!4723 = !DILocalVariable(name: "sp", scope: !4673, file: !2539, line: 1402, type: !279)
!4724 = !DILocalVariable(name: "width", scope: !4673, file: !2539, line: 1403, type: !109)
!4725 = !DILocalVariable(name: "precision", scope: !4673, file: !2539, line: 1404, type: !109)
!4726 = !DILocalVariable(name: "bps", scope: !4673, file: !2539, line: 1405, type: !279)
!4727 = !DILocalVariable(name: "bpe", scope: !4673, file: !2539, line: 1406, type: !279)
!4728 = !DILocalVariable(name: "sign", scope: !4673, file: !2539, line: 1407, type: !150)
!4729 = !DILocalVariable(name: "arg", scope: !4730, file: !2539, line: 1432, type: !109)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !2539, line: 1431, column: 24)
!4731 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1431, column: 7)
!4732 = !DILocalVariable(name: "specifier_cat", scope: !4673, file: !2539, line: 1468, type: !2538)
!4733 = !DILocalVariable(name: "length_mod", scope: !4673, file: !2539, line: 1470, type: !2546)
!4734 = !DILocalVariable(name: "rc", scope: !4735, file: !2539, line: 1575, type: !109)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !2539, line: 1575, column: 4)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !2539, line: 1574, column: 43)
!4737 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1574, column: 7)
!4738 = !DILocalVariable(name: "rc", scope: !4739, file: !2539, line: 1584, type: !109)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !2539, line: 1584, column: 4)
!4740 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1582, column: 28)
!4741 = !DILocalVariable(name: "len", scope: !4742, file: !2539, line: 1589, type: !234)
!4742 = distinct !DILexicalBlock(scope: !4740, file: !2539, line: 1586, column: 13)
!4743 = !DILocalVariable(name: "len", scope: !4744, file: !2539, line: 1641, type: !234)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !2539, line: 1640, column: 24)
!4745 = distinct !DILexicalBlock(scope: !4740, file: !2539, line: 1640, column: 8)
!4746 = !DILocalVariable(name: "nj_len", scope: !4673, file: !2539, line: 1722, type: !234)
!4747 = !DILocalVariable(name: "pad_len", scope: !4673, file: !2539, line: 1723, type: !109)
!4748 = !DILocalVariable(name: "pad", scope: !4749, file: !2539, line: 1751, type: !150)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !2539, line: 1750, column: 26)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !2539, line: 1750, column: 8)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !2539, line: 1747, column: 18)
!4752 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1747, column: 7)
!4753 = !DILocalVariable(name: "rc", scope: !4754, file: !2539, line: 1758, type: !109)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !2539, line: 1758, column: 7)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !2539, line: 1757, column: 21)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !2539, line: 1757, column: 10)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !2539, line: 1756, column: 26)
!4758 = distinct !DILexicalBlock(scope: !4749, file: !2539, line: 1756, column: 9)
!4759 = !DILocalVariable(name: "rc", scope: !4760, file: !2539, line: 1765, type: !109)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !2539, line: 1765, column: 6)
!4761 = distinct !DILexicalBlock(scope: !4749, file: !2539, line: 1764, column: 25)
!4762 = !DILocalVariable(name: "rc", scope: !4763, file: !2539, line: 1774, type: !109)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !2539, line: 1774, column: 4)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !2539, line: 1773, column: 18)
!4765 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1773, column: 7)
!4766 = !DILocalVariable(name: "rc", scope: !4767, file: !2539, line: 1819, type: !109)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !2539, line: 1819, column: 5)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !2539, line: 1818, column: 44)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !2539, line: 1818, column: 8)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !2539, line: 1817, column: 10)
!4771 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1777, column: 7)
!4772 = !DILocalVariable(name: "rc", scope: !4773, file: !2539, line: 1823, type: !109)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !2539, line: 1823, column: 5)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !2539, line: 1822, column: 26)
!4775 = distinct !DILexicalBlock(scope: !4770, file: !2539, line: 1822, column: 8)
!4776 = !DILocalVariable(name: "rc", scope: !4777, file: !2539, line: 1828, type: !109)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !2539, line: 1828, column: 5)
!4778 = distinct !DILexicalBlock(scope: !4770, file: !2539, line: 1827, column: 26)
!4779 = !DILocalVariable(name: "rc", scope: !4780, file: !2539, line: 1831, type: !109)
!4780 = distinct !DILexicalBlock(scope: !4770, file: !2539, line: 1831, column: 4)
!4781 = !DILocalVariable(name: "rc", scope: !4782, file: !2539, line: 1836, type: !109)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !2539, line: 1836, column: 4)
!4783 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1835, column: 21)
!4784 = !DILabel(scope: !4740, name: "prec_int_pad0", file: !2539, line: 1634)
!4785 = !DILocation(line: 0, scope: !4646)
!4786 = !DILocation(line: 1341, column: 2, scope: !4646)
!4787 = !DILocation(line: 1341, column: 7, scope: !4646)
!4788 = !DILocation(line: 1375, column: 2, scope: !4646)
!4789 = !DILocation(line: 1342, column: 9, scope: !4646)
!4790 = !DILocation(line: 1375, column: 9, scope: !4646)
!4791 = !DILocation(line: 1377, column: 4, scope: !4670)
!4792 = !DILocation(line: 0, scope: !4670)
!4793 = !DILocation(line: 1377, column: 4, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4670, file: !2539, line: 1377, column: 4)
!4795 = distinct !{!4795, !4788, !4796}
!4796 = !DILocation(line: 1839, column: 2, scope: !4646)
!4797 = !DILocation(line: 1392, column: 3, scope: !4673)
!4798 = !DILocation(line: 1395, column: 5, scope: !4673)
!4799 = !DILocation(line: 0, scope: !4673)
!4800 = !DILocation(line: 1409, column: 8, scope: !4673)
!4801 = !DILocation(line: 1414, column: 13, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1414, column: 7)
!4803 = !DILocation(line: 1414, column: 7, scope: !4673)
!4804 = !DILocation(line: 1415, column: 12, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4802, file: !2539, line: 1414, column: 25)
!4806 = !DILocation(line: 1417, column: 14, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4805, file: !2539, line: 1417, column: 8)
!4808 = !DILocation(line: 1417, column: 8, scope: !4805)
!4809 = !DILocation(line: 1418, column: 21, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4807, file: !2539, line: 1417, column: 19)
!4811 = !DILocation(line: 1419, column: 13, scope: !4810)
!4812 = !DILocation(line: 1420, column: 4, scope: !4810)
!4813 = !DILocation(line: 1421, column: 20, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4802, file: !2539, line: 1421, column: 14)
!4815 = !DILocation(line: 1421, column: 14, scope: !4802)
!4816 = !DILocation(line: 1431, column: 13, scope: !4731)
!4817 = !DILocation(line: 1431, column: 7, scope: !4673)
!4818 = !DILocation(line: 1432, column: 14, scope: !4730)
!4819 = !DILocation(line: 0, scope: !4730)
!4820 = !DILocation(line: 1434, column: 12, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4730, file: !2539, line: 1434, column: 8)
!4822 = !DILocation(line: 1434, column: 8, scope: !4730)
!4823 = !DILocation(line: 1435, column: 24, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4821, file: !2539, line: 1434, column: 17)
!4825 = !DILocation(line: 1436, column: 4, scope: !4824)
!4826 = !DILocation(line: 1439, column: 20, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4731, file: !2539, line: 1439, column: 14)
!4828 = !DILocation(line: 1439, column: 14, scope: !4731)
!4829 = !DILocation(line: 1469, column: 37, scope: !4673)
!4830 = !DILocation(line: 1448, column: 20, scope: !4673)
!4831 = !DILocation(line: 1449, column: 22, scope: !4673)
!4832 = !DILocation(line: 1471, column: 34, scope: !4673)
!4833 = !DILocation(line: 1478, column: 7, scope: !4673)
!4834 = !DILocation(line: 1479, column: 4, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !2539, line: 1478, column: 40)
!4836 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1478, column: 7)
!4837 = !DILocation(line: 1484, column: 19, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4835, file: !2539, line: 1479, column: 24)
!4839 = !DILocation(line: 1484, column: 17, scope: !4838)
!4840 = !DILocation(line: 1485, column: 5, scope: !4838)
!4841 = !DILocation(line: 1492, column: 20, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4843, file: !2539, line: 1491, column: 12)
!4843 = distinct !DILexicalBlock(scope: !4838, file: !2539, line: 1487, column: 9)
!4844 = !DILocation(line: 1492, column: 18, scope: !4842)
!4845 = !DILocation(line: 1494, column: 5, scope: !4838)
!4846 = !DILocation(line: 1497, column: 23, scope: !4838)
!4847 = !DILocation(line: 1496, column: 17, scope: !4838)
!4848 = !DILocation(line: 1498, column: 5, scope: !4838)
!4849 = !DILocation(line: 1501, column: 23, scope: !4838)
!4850 = !DILocation(line: 1500, column: 17, scope: !4838)
!4851 = !DILocation(line: 1502, column: 5, scope: !4838)
!4852 = !DILocation(line: 1513, column: 23, scope: !4838)
!4853 = !DILocation(line: 1513, column: 6, scope: !4838)
!4854 = !DILocation(line: 1512, column: 17, scope: !4838)
!4855 = !DILocation(line: 1514, column: 5, scope: !4838)
!4856 = !DILocation(line: 0, scope: !4838)
!4857 = !DILocation(line: 1516, column: 8, scope: !4835)
!4858 = !DILocation(line: 1517, column: 19, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !2539, line: 1516, column: 33)
!4860 = distinct !DILexicalBlock(scope: !4835, file: !2539, line: 1516, column: 8)
!4861 = !DILocation(line: 1517, column: 17, scope: !4859)
!4862 = !DILocation(line: 1518, column: 4, scope: !4859)
!4863 = !DILocation(line: 1519, column: 19, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !2539, line: 1518, column: 39)
!4865 = distinct !DILexicalBlock(scope: !4860, file: !2539, line: 1518, column: 15)
!4866 = !DILocation(line: 1519, column: 17, scope: !4864)
!4867 = !DILocation(line: 1520, column: 4, scope: !4864)
!4868 = !DILocation(line: 1522, column: 4, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4870, file: !2539, line: 1521, column: 47)
!4870 = distinct !DILexicalBlock(scope: !4836, file: !2539, line: 1521, column: 14)
!4871 = !DILocation(line: 1527, column: 19, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4869, file: !2539, line: 1522, column: 24)
!4873 = !DILocation(line: 1527, column: 17, scope: !4872)
!4874 = !DILocation(line: 1528, column: 5, scope: !4872)
!4875 = !DILocation(line: 0, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4872, file: !2539, line: 1530, column: 9)
!4877 = !DILocation(line: 1540, column: 23, scope: !4872)
!4878 = !DILocation(line: 1539, column: 17, scope: !4872)
!4879 = !DILocation(line: 1542, column: 5, scope: !4872)
!4880 = !DILocation(line: 1545, column: 23, scope: !4872)
!4881 = !DILocation(line: 1544, column: 17, scope: !4872)
!4882 = !DILocation(line: 1547, column: 5, scope: !4872)
!4883 = !DILocation(line: 1551, column: 23, scope: !4872)
!4884 = !DILocation(line: 1551, column: 6, scope: !4872)
!4885 = !DILocation(line: 1550, column: 17, scope: !4872)
!4886 = !DILocation(line: 1552, column: 5, scope: !4872)
!4887 = !DILocation(line: 0, scope: !4872)
!4888 = !DILocation(line: 1554, column: 8, scope: !4869)
!4889 = !DILocation(line: 1555, column: 19, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !2539, line: 1554, column: 33)
!4891 = distinct !DILexicalBlock(scope: !4869, file: !2539, line: 1554, column: 8)
!4892 = !DILocation(line: 1555, column: 17, scope: !4890)
!4893 = !DILocation(line: 1556, column: 4, scope: !4890)
!4894 = !DILocation(line: 1557, column: 19, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !2539, line: 1556, column: 39)
!4896 = distinct !DILexicalBlock(scope: !4891, file: !2539, line: 1556, column: 15)
!4897 = !DILocation(line: 1557, column: 17, scope: !4895)
!4898 = !DILocation(line: 1558, column: 4, scope: !4895)
!4899 = !DILocation(line: 0, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !2539, line: 1560, column: 8)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !2539, line: 1559, column: 45)
!4902 = distinct !DILexicalBlock(scope: !4870, file: !2539, line: 1559, column: 14)
!4903 = !DILocation(line: 1566, column: 17, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !2539, line: 1565, column: 46)
!4905 = distinct !DILexicalBlock(scope: !4902, file: !2539, line: 1565, column: 14)
!4906 = !DILocation(line: 1566, column: 15, scope: !4904)
!4907 = !DILocation(line: 1567, column: 3, scope: !4904)
!4908 = !DILocation(line: 1574, column: 21, scope: !4737)
!4909 = !DILocation(line: 1575, column: 4, scope: !4735)
!4910 = !DILocation(line: 0, scope: !4735)
!4911 = !DILocation(line: 1575, column: 4, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4735, file: !2539, line: 1575, column: 4)
!4913 = !DILocation(line: 1582, column: 17, scope: !4673)
!4914 = !DILocation(line: 1582, column: 3, scope: !4673)
!4915 = !DILocation(line: 1584, column: 4, scope: !4739)
!4916 = !DILocation(line: 0, scope: !4739)
!4917 = !DILocation(line: 1584, column: 4, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4739, file: !2539, line: 1584, column: 4)
!4919 = !DILocation(line: 1587, column: 31, scope: !4742)
!4920 = !DILocation(line: 1591, column: 18, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4742, file: !2539, line: 1591, column: 8)
!4922 = !DILocation(line: 1591, column: 8, scope: !4742)
!4923 = !DILocation(line: 1592, column: 11, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4921, file: !2539, line: 1591, column: 24)
!4925 = !DILocation(line: 0, scope: !4742)
!4926 = !DILocation(line: 1593, column: 4, scope: !4924)
!4927 = !DILocation(line: 1594, column: 11, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4921, file: !2539, line: 1593, column: 11)
!4929 = !DILocation(line: 1604, column: 51, scope: !4740)
!4930 = !DILocation(line: 1604, column: 13, scope: !4740)
!4931 = !DILocation(line: 1604, column: 11, scope: !4740)
!4932 = !DILocation(line: 1606, column: 4, scope: !4740)
!4933 = !DILocation(line: 1609, column: 14, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4740, file: !2539, line: 1609, column: 8)
!4935 = !DILocation(line: 1609, column: 8, scope: !4740)
!4936 = !DILocation(line: 1619, column: 18, scope: !4740)
!4937 = !DILocation(line: 1620, column: 13, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4740, file: !2539, line: 1620, column: 8)
!4939 = !DILocation(line: 1620, column: 8, scope: !4740)
!4940 = !DILocation(line: 1622, column: 36, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4938, file: !2539, line: 1620, column: 18)
!4942 = !DILocation(line: 1622, column: 17, scope: !4941)
!4943 = !DILocation(line: 1623, column: 4, scope: !4941)
!4944 = !DILocation(line: 1632, column: 29, scope: !4740)
!4945 = !DILocation(line: 1632, column: 10, scope: !4740)
!4946 = !DILocation(line: 1632, column: 4, scope: !4740)
!4947 = !DILocation(line: 1407, column: 8, scope: !4673)
!4948 = !DILocation(line: 0, scope: !4740)
!4949 = !DILocation(line: 1634, column: 3, scope: !4740)
!4950 = !DILocation(line: 1640, column: 18, scope: !4745)
!4951 = !DILocation(line: 1640, column: 8, scope: !4740)
!4952 = !DILocation(line: 1729, column: 13, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1729, column: 7)
!4954 = !DILocation(line: 1641, column: 22, scope: !4744)
!4955 = !DILocation(line: 0, scope: !4744)
!4956 = !DILocation(line: 1646, column: 21, scope: !4744)
!4957 = !DILocation(line: 1649, column: 13, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4744, file: !2539, line: 1649, column: 9)
!4959 = !DILocation(line: 1649, column: 9, scope: !4744)
!4960 = !DILocation(line: 1650, column: 35, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4958, file: !2539, line: 1649, column: 34)
!4962 = !DILocation(line: 1650, column: 23, scope: !4961)
!4963 = !DILocation(line: 1651, column: 5, scope: !4961)
!4964 = !DILocation(line: 1660, column: 15, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4740, file: !2539, line: 1660, column: 8)
!4966 = !DILocation(line: 1660, column: 19, scope: !4965)
!4967 = !DILocation(line: 1660, column: 8, scope: !4740)
!4968 = !DILocation(line: 1661, column: 23, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4965, file: !2539, line: 1660, column: 28)
!4970 = !DILocation(line: 1661, column: 11, scope: !4969)
!4971 = !DILocation(line: 1665, column: 22, scope: !4969)
!4972 = !DILocation(line: 1666, column: 21, scope: !4969)
!4973 = !DILocation(line: 1668, column: 5, scope: !4969)
!4974 = !DILocation(line: 1677, column: 30, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4976, file: !2539, line: 1676, column: 49)
!4976 = distinct !DILexicalBlock(scope: !4740, file: !2539, line: 1676, column: 8)
!4977 = !DILocation(line: 1677, column: 5, scope: !4975)
!4978 = !DILocation(line: 1680, column: 4, scope: !4740)
!4979 = !DILocation(line: 0, scope: !4921)
!4980 = !DILocation(line: 1597, column: 14, scope: !4742)
!4981 = !DILocation(line: 1699, column: 11, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1699, column: 7)
!4983 = !DILocation(line: 1699, column: 7, scope: !4673)
!4984 = !DILocation(line: 1725, column: 7, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1725, column: 7)
!4986 = !DILocation(line: 1725, column: 12, scope: !4985)
!4987 = !DILocation(line: 1747, column: 13, scope: !4752)
!4988 = !DILocation(line: 1747, column: 7, scope: !4673)
!4989 = !DILocation(line: 1722, column: 24, scope: !4673)
!4990 = !DILocation(line: 1725, column: 7, scope: !4673)
!4991 = !DILocation(line: 1729, column: 7, scope: !4673)
!4992 = !DILocation(line: 1736, column: 13, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4673, file: !2539, line: 1736, column: 7)
!4994 = !DILocation(line: 1735, column: 19, scope: !4673)
!4995 = !DILocation(line: 1736, column: 7, scope: !4673)
!4996 = !DILocation(line: 1748, column: 10, scope: !4751)
!4997 = !DILocation(line: 1750, column: 15, scope: !4750)
!4998 = !DILocation(line: 1750, column: 8, scope: !4751)
!4999 = !DILocation(line: 0, scope: !4749)
!5000 = !DILocation(line: 1756, column: 15, scope: !4758)
!5001 = !DILocation(line: 1756, column: 9, scope: !4749)
!5002 = !DILocation(line: 1758, column: 7, scope: !4754)
!5003 = !DILocation(line: 0, scope: !4754)
!5004 = !DILocation(line: 1758, column: 7, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4754, file: !2539, line: 1758, column: 7)
!5006 = !DILocation(line: 1764, column: 5, scope: !4749)
!5007 = !DILocation(line: 0, scope: !4751)
!5008 = !DILocation(line: 1764, column: 20, scope: !4749)
!5009 = !DILocation(line: 1764, column: 17, scope: !4749)
!5010 = !DILocation(line: 1765, column: 6, scope: !4760)
!5011 = !DILocation(line: 0, scope: !4760)
!5012 = !DILocation(line: 1765, column: 6, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4760, file: !2539, line: 1765, column: 6)
!5014 = distinct !{!5014, !5006, !5015}
!5015 = !DILocation(line: 1766, column: 5, scope: !4749)
!5016 = !DILocation(line: 1773, column: 12, scope: !4765)
!5017 = !DILocation(line: 1773, column: 7, scope: !4673)
!5018 = !DILocation(line: 1773, column: 7, scope: !4765)
!5019 = !DILocation(line: 1774, column: 4, scope: !4763)
!5020 = !DILocation(line: 0, scope: !4763)
!5021 = !DILocation(line: 1774, column: 4, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4763, file: !2539, line: 1774, column: 4)
!5023 = !DILocation(line: 1818, column: 8, scope: !4769)
!5024 = !DILocation(line: 1818, column: 27, scope: !4769)
!5025 = !DILocation(line: 1818, column: 25, scope: !4769)
!5026 = !DILocation(line: 1818, column: 8, scope: !4770)
!5027 = !DILocation(line: 1819, column: 5, scope: !4767)
!5028 = !DILocation(line: 0, scope: !4767)
!5029 = !DILocation(line: 1819, column: 5, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4767, file: !2539, line: 1819, column: 5)
!5031 = !DILocation(line: 1822, column: 14, scope: !4775)
!5032 = !DILocation(line: 1822, column: 8, scope: !4770)
!5033 = !DILocation(line: 1823, column: 5, scope: !4773)
!5034 = !DILocation(line: 0, scope: !4773)
!5035 = !DILocation(line: 1823, column: 5, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !4773, file: !2539, line: 1823, column: 5)
!5037 = !DILocation(line: 1826, column: 20, scope: !4770)
!5038 = !DILocation(line: 1827, column: 4, scope: !4770)
!5039 = !DILocation(line: 0, scope: !4770)
!5040 = !DILocation(line: 1827, column: 21, scope: !4770)
!5041 = !DILocation(line: 1827, column: 18, scope: !4770)
!5042 = !DILocation(line: 1828, column: 5, scope: !4777)
!5043 = !DILocation(line: 0, scope: !4777)
!5044 = !DILocation(line: 1828, column: 5, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !4777, file: !2539, line: 1828, column: 5)
!5046 = distinct !{!5046, !5038, !5047}
!5047 = !DILocation(line: 1829, column: 4, scope: !4770)
!5048 = !DILocation(line: 1831, column: 4, scope: !4780)
!5049 = !DILocation(line: 0, scope: !4780)
!5050 = !DILocation(line: 1831, column: 4, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !4780, file: !2539, line: 1831, column: 4)
!5052 = !DILocation(line: 1835, column: 16, scope: !4673)
!5053 = !DILocation(line: 1835, column: 3, scope: !4673)
!5054 = !DILocation(line: 1836, column: 4, scope: !4782)
!5055 = !DILocation(line: 0, scope: !4782)
!5056 = !DILocation(line: 1836, column: 4, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !4782, file: !2539, line: 1836, column: 4)
!5058 = !DILocation(line: 1837, column: 4, scope: !4783)
!5059 = distinct !{!5059, !5053, !5060}
!5060 = !DILocation(line: 1838, column: 3, scope: !4673)
!5061 = !DILocation(line: 1844, column: 1, scope: !4646)
!5062 = distinct !DISubprogram(name: "extract_conversion", scope: !2539, file: !2539, line: 642, type: !5063, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5065)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{!279, !4719, !279}
!5065 = !{!5066, !5067}
!5066 = !DILocalVariable(name: "conv", arg: 1, scope: !5062, file: !2539, line: 642, type: !4719)
!5067 = !DILocalVariable(name: "sp", arg: 2, scope: !5062, file: !2539, line: 643, type: !279)
!5068 = !DILocation(line: 0, scope: !5062)
!5069 = !DILocation(line: 645, column: 10, scope: !5062)
!5070 = !DILocation(line: 653, column: 2, scope: !5062)
!5071 = !DILocation(line: 654, column: 6, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5062, file: !2539, line: 654, column: 6)
!5073 = !DILocation(line: 654, column: 10, scope: !5072)
!5074 = !DILocation(line: 654, column: 6, scope: !5062)
!5075 = !DILocation(line: 655, column: 24, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5072, file: !2539, line: 654, column: 18)
!5077 = !DILocation(line: 655, column: 19, scope: !5076)
!5078 = !DILocation(line: 656, column: 3, scope: !5076)
!5079 = !DILocation(line: 659, column: 7, scope: !5062)
!5080 = !DILocation(line: 660, column: 7, scope: !5062)
!5081 = !DILocation(line: 661, column: 7, scope: !5062)
!5082 = !DILocation(line: 662, column: 7, scope: !5062)
!5083 = !DILocation(line: 663, column: 7, scope: !5062)
!5084 = !DILocation(line: 665, column: 2, scope: !5062)
!5085 = !DILocation(line: 666, column: 1, scope: !5062)
!5086 = distinct !DISubprogram(name: "outs", scope: !2539, file: !2539, line: 1319, type: !5087, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5089)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!109, !3800, !107, !279, !279}
!5089 = !{!5090, !5091, !5092, !5093, !5094, !5095}
!5090 = !DILocalVariable(name: "out", arg: 1, scope: !5086, file: !2539, line: 1319, type: !3800)
!5091 = !DILocalVariable(name: "ctx", arg: 2, scope: !5086, file: !2539, line: 1320, type: !107)
!5092 = !DILocalVariable(name: "sp", arg: 3, scope: !5086, file: !2539, line: 1321, type: !279)
!5093 = !DILocalVariable(name: "ep", arg: 4, scope: !5086, file: !2539, line: 1322, type: !279)
!5094 = !DILocalVariable(name: "count", scope: !5086, file: !2539, line: 1324, type: !234)
!5095 = !DILocalVariable(name: "rc", scope: !5096, file: !2539, line: 1327, type: !109)
!5096 = distinct !DILexicalBlock(scope: !5086, file: !2539, line: 1326, column: 45)
!5097 = !DILocation(line: 0, scope: !5086)
!5098 = !DILocation(line: 1326, column: 2, scope: !5086)
!5099 = !DILocation(line: 1324, column: 9, scope: !5086)
!5100 = !DILocation(line: 1326, column: 13, scope: !5086)
!5101 = !DILocation(line: 1326, column: 19, scope: !5086)
!5102 = !DILocation(line: 1327, column: 21, scope: !5096)
!5103 = !DILocation(line: 1326, column: 36, scope: !5086)
!5104 = !DILocation(line: 1326, column: 39, scope: !5086)
!5105 = !DILocation(line: 1327, column: 24, scope: !5096)
!5106 = !DILocation(line: 1327, column: 16, scope: !5096)
!5107 = !DILocation(line: 1327, column: 12, scope: !5096)
!5108 = !DILocation(line: 0, scope: !5096)
!5109 = !DILocation(line: 1329, column: 10, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5096, file: !2539, line: 1329, column: 7)
!5111 = !DILocation(line: 1329, column: 7, scope: !5096)
!5112 = distinct !{!5112, !5098, !5113}
!5113 = !DILocation(line: 1333, column: 2, scope: !5086)
!5114 = !DILocation(line: 1336, column: 1, scope: !5086)
!5115 = distinct !DISubprogram(name: "encode_uint", scope: !2539, file: !2539, line: 788, type: !5116, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5118)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!285, !2561, !4719, !285, !279}
!5118 = !{!5119, !5120, !5121, !5122, !5123, !5124, !5126, !5127}
!5119 = !DILocalVariable(name: "value", arg: 1, scope: !5115, file: !2539, line: 788, type: !2561)
!5120 = !DILocalVariable(name: "conv", arg: 2, scope: !5115, file: !2539, line: 789, type: !4719)
!5121 = !DILocalVariable(name: "bps", arg: 3, scope: !5115, file: !2539, line: 790, type: !285)
!5122 = !DILocalVariable(name: "bpe", arg: 4, scope: !5115, file: !2539, line: 791, type: !279)
!5123 = !DILocalVariable(name: "upcase", scope: !5115, file: !2539, line: 793, type: !347)
!5124 = !DILocalVariable(name: "radix", scope: !5115, file: !2539, line: 794, type: !5125)
!5125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5126 = !DILocalVariable(name: "bp", scope: !5115, file: !2539, line: 795, type: !285)
!5127 = !DILocalVariable(name: "lsv", scope: !5128, file: !2539, line: 798, type: !32)
!5128 = distinct !DILexicalBlock(scope: !5115, file: !2539, line: 797, column: 5)
!5129 = !DILocation(line: 0, scope: !5115)
!5130 = !DILocation(line: 793, column: 35, scope: !5115)
!5131 = !DILocation(line: 793, column: 24, scope: !5115)
!5132 = !DILocation(line: 793, column: 16, scope: !5115)
!5133 = !DILocation(line: 794, column: 29, scope: !5115)
!5134 = !DILocation(line: 795, column: 24, scope: !5115)
!5135 = !DILocation(line: 795, column: 17, scope: !5115)
!5136 = !DILocation(line: 797, column: 2, scope: !5115)
!5137 = !DILocation(line: 802, column: 9, scope: !5128)
!5138 = !DILocation(line: 798, column: 22, scope: !5128)
!5139 = !DILocation(line: 0, scope: !5128)
!5140 = !DILocation(line: 800, column: 16, scope: !5128)
!5141 = !DILocation(line: 800, column: 11, scope: !5128)
!5142 = !DILocation(line: 800, column: 4, scope: !5128)
!5143 = !DILocation(line: 800, column: 9, scope: !5128)
!5144 = !DILocation(line: 803, column: 18, scope: !5115)
!5145 = !DILocation(line: 803, column: 24, scope: !5115)
!5146 = !DILocation(line: 803, column: 2, scope: !5128)
!5147 = distinct !{!5147, !5136, !5148}
!5148 = !DILocation(line: 803, column: 37, scope: !5115)
!5149 = !DILocation(line: 808, column: 12, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5115, file: !2539, line: 808, column: 6)
!5151 = !DILocation(line: 808, column: 6, scope: !5115)
!5152 = !DILocation(line: 809, column: 7, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5150, file: !2539, line: 808, column: 23)
!5154 = !DILocation(line: 813, column: 3, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5156, file: !2539, line: 811, column: 27)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !2539, line: 811, column: 14)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !2539, line: 809, column: 7)
!5158 = !DILocation(line: 0, scope: !5157)
!5159 = !DILocation(line: 818, column: 2, scope: !5115)
!5160 = distinct !DISubprogram(name: "store_count", scope: !2539, file: !2539, line: 1280, type: !5161, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5165)
!5161 = !DISubroutineType(types: !5162)
!5162 = !{null, !5163, !107, !109}
!5163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5164, size: 32)
!5164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4686)
!5165 = !{!5166, !5167, !5168}
!5166 = !DILocalVariable(name: "conv", arg: 1, scope: !5160, file: !2539, line: 1280, type: !5163)
!5167 = !DILocalVariable(name: "dp", arg: 2, scope: !5160, file: !2539, line: 1281, type: !107)
!5168 = !DILocalVariable(name: "count", arg: 3, scope: !5160, file: !2539, line: 1282, type: !109)
!5169 = !DILocation(line: 0, scope: !5160)
!5170 = !DILocation(line: 1284, column: 38, scope: !5160)
!5171 = !DILocation(line: 1284, column: 2, scope: !5160)
!5172 = !DILocation(line: 1286, column: 4, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5160, file: !2539, line: 1284, column: 50)
!5174 = !DILocation(line: 1286, column: 14, scope: !5173)
!5175 = !DILocation(line: 1287, column: 3, scope: !5173)
!5176 = !DILocation(line: 1289, column: 24, scope: !5173)
!5177 = !DILocation(line: 1289, column: 22, scope: !5173)
!5178 = !DILocation(line: 1290, column: 3, scope: !5173)
!5179 = !DILocation(line: 1292, column: 18, scope: !5173)
!5180 = !DILocation(line: 1292, column: 4, scope: !5173)
!5181 = !DILocation(line: 1292, column: 16, scope: !5173)
!5182 = !DILocation(line: 1293, column: 3, scope: !5173)
!5183 = !DILocation(line: 1295, column: 4, scope: !5173)
!5184 = !DILocation(line: 1295, column: 15, scope: !5173)
!5185 = !DILocation(line: 1296, column: 3, scope: !5173)
!5186 = !DILocation(line: 1298, column: 22, scope: !5173)
!5187 = !DILocation(line: 1298, column: 4, scope: !5173)
!5188 = !DILocation(line: 1298, column: 20, scope: !5173)
!5189 = !DILocation(line: 1299, column: 3, scope: !5173)
!5190 = !DILocation(line: 1301, column: 21, scope: !5173)
!5191 = !DILocation(line: 1301, column: 4, scope: !5173)
!5192 = !DILocation(line: 1301, column: 19, scope: !5173)
!5193 = !DILocation(line: 1302, column: 3, scope: !5173)
!5194 = !DILocation(line: 1304, column: 4, scope: !5173)
!5195 = !DILocation(line: 1304, column: 17, scope: !5173)
!5196 = !DILocation(line: 1305, column: 3, scope: !5173)
!5197 = !DILocation(line: 1307, column: 4, scope: !5173)
!5198 = !DILocation(line: 1307, column: 20, scope: !5173)
!5199 = !DILocation(line: 1308, column: 3, scope: !5173)
!5200 = !DILocation(line: 1316, column: 1, scope: !5160)
!5201 = distinct !DISubprogram(name: "isupper", scope: !5202, file: !5202, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5203)
!5202 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5203 = !{!5204}
!5204 = !DILocalVariable(name: "a", arg: 1, scope: !5201, file: !5202, line: 16, type: !109)
!5205 = !DILocation(line: 0, scope: !5201)
!5206 = !DILocation(line: 18, column: 29, scope: !5201)
!5207 = !DILocation(line: 18, column: 45, scope: !5201)
!5208 = !DILocation(line: 18, column: 2, scope: !5201)
!5209 = distinct !DISubprogram(name: "conversion_radix", scope: !2539, file: !2539, line: 761, type: !5210, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5212)
!5210 = !DISubroutineType(types: !5211)
!5211 = !{!234, !150}
!5212 = !{!5213}
!5213 = !DILocalVariable(name: "specifier", arg: 1, scope: !5209, file: !2539, line: 761, type: !150)
!5214 = !DILocation(line: 0, scope: !5209)
!5215 = !DILocation(line: 763, column: 2, scope: !5209)
!5216 = !DILocation(line: 770, column: 3, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5209, file: !2539, line: 763, column: 21)
!5218 = !DILocation(line: 774, column: 3, scope: !5217)
!5219 = !DILocation(line: 0, scope: !5217)
!5220 = !DILocation(line: 776, column: 1, scope: !5209)
!5221 = distinct !DISubprogram(name: "extract_flags", scope: !2539, file: !2539, line: 339, type: !5063, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5222)
!5222 = !{!5223, !5224, !5225}
!5223 = !DILocalVariable(name: "conv", arg: 1, scope: !5221, file: !2539, line: 339, type: !4719)
!5224 = !DILocalVariable(name: "sp", arg: 2, scope: !5221, file: !2539, line: 340, type: !279)
!5225 = !DILocalVariable(name: "loop", scope: !5221, file: !2539, line: 342, type: !347)
!5226 = !DILocation(line: 0, scope: !5221)
!5227 = !DILocation(line: 344, column: 2, scope: !5221)
!5228 = !DILocation(line: 345, column: 11, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5221, file: !2539, line: 344, column: 5)
!5230 = !DILocation(line: 345, column: 3, scope: !5229)
!5231 = !DILocation(line: 351, column: 4, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5229, file: !2539, line: 345, column: 16)
!5233 = !DILocation(line: 354, column: 4, scope: !5232)
!5234 = !DILocation(line: 357, column: 4, scope: !5232)
!5235 = !DILocation(line: 360, column: 4, scope: !5232)
!5236 = !DILocation(line: 0, scope: !5232)
!5237 = !DILocation(line: 370, column: 12, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5221, file: !2539, line: 370, column: 6)
!5239 = !DILocation(line: 370, column: 22, scope: !5238)
!5240 = !DILocation(line: 371, column: 19, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5238, file: !2539, line: 370, column: 42)
!5242 = !DILocation(line: 372, column: 2, scope: !5241)
!5243 = !DILocation(line: 376, column: 2, scope: !5221)
!5244 = distinct !DISubprogram(name: "extract_width", scope: !2539, file: !2539, line: 388, type: !5063, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5245)
!5245 = !{!5246, !5247, !5248, !5249}
!5246 = !DILocalVariable(name: "conv", arg: 1, scope: !5244, file: !2539, line: 388, type: !4719)
!5247 = !DILocalVariable(name: "sp", arg: 2, scope: !5244, file: !2539, line: 389, type: !279)
!5248 = !DILocalVariable(name: "wp", scope: !5244, file: !2539, line: 398, type: !279)
!5249 = !DILocalVariable(name: "width", scope: !5244, file: !2539, line: 399, type: !234)
!5250 = !DILocation(line: 0, scope: !5244)
!5251 = !DILocation(line: 391, column: 8, scope: !5244)
!5252 = !DILocation(line: 391, column: 22, scope: !5244)
!5253 = !DILocation(line: 393, column: 6, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5244, file: !2539, line: 393, column: 6)
!5255 = !DILocation(line: 393, column: 10, scope: !5254)
!5256 = !DILocation(line: 393, column: 6, scope: !5244)
!5257 = !DILocation(line: 394, column: 20, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5254, file: !2539, line: 393, column: 18)
!5259 = !DILocation(line: 395, column: 10, scope: !5258)
!5260 = !DILocation(line: 395, column: 3, scope: !5258)
!5261 = !DILocation(line: 399, column: 17, scope: !5244)
!5262 = !DILocation(line: 401, column: 6, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5244, file: !2539, line: 401, column: 6)
!5264 = !DILocation(line: 401, column: 9, scope: !5263)
!5265 = !DILocation(line: 401, column: 6, scope: !5244)
!5266 = !DILocation(line: 402, column: 23, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5263, file: !2539, line: 401, column: 16)
!5268 = !DILocation(line: 403, column: 9, scope: !5267)
!5269 = !DILocation(line: 403, column: 21, scope: !5267)
!5270 = !DILocation(line: 405, column: 11, scope: !5267)
!5271 = !DILocation(line: 404, column: 21, scope: !5267)
!5272 = !DILocation(line: 406, column: 2, scope: !5267)
!5273 = !DILocation(line: 409, column: 1, scope: !5244)
!5274 = distinct !DISubprogram(name: "extract_prec", scope: !2539, file: !2539, line: 420, type: !5063, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5275)
!5275 = !{!5276, !5277, !5278}
!5276 = !DILocalVariable(name: "conv", arg: 1, scope: !5274, file: !2539, line: 420, type: !4719)
!5277 = !DILocalVariable(name: "sp", arg: 2, scope: !5274, file: !2539, line: 421, type: !279)
!5278 = !DILocalVariable(name: "prec", scope: !5274, file: !2539, line: 435, type: !234)
!5279 = !DILocation(line: 0, scope: !5274)
!5280 = !DILocation(line: 423, column: 24, scope: !5274)
!5281 = !DILocation(line: 423, column: 28, scope: !5274)
!5282 = !DILocation(line: 423, column: 8, scope: !5274)
!5283 = !DILocation(line: 423, column: 21, scope: !5274)
!5284 = !DILocation(line: 425, column: 6, scope: !5274)
!5285 = !DILocation(line: 428, column: 2, scope: !5274)
!5286 = !DILocation(line: 430, column: 6, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5274, file: !2539, line: 430, column: 6)
!5288 = !DILocation(line: 430, column: 10, scope: !5287)
!5289 = !DILocation(line: 430, column: 6, scope: !5274)
!5290 = !DILocation(line: 431, column: 19, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5287, file: !2539, line: 430, column: 18)
!5292 = !DILocation(line: 432, column: 10, scope: !5291)
!5293 = !DILocation(line: 432, column: 3, scope: !5291)
!5294 = !DILocation(line: 435, column: 16, scope: !5274)
!5295 = !DILocation(line: 437, column: 8, scope: !5274)
!5296 = !DILocation(line: 437, column: 19, scope: !5274)
!5297 = !DILocation(line: 439, column: 10, scope: !5274)
!5298 = !DILocation(line: 438, column: 20, scope: !5274)
!5299 = !DILocation(line: 441, column: 9, scope: !5274)
!5300 = !DILocation(line: 442, column: 1, scope: !5274)
!5301 = distinct !DISubprogram(name: "extract_length", scope: !2539, file: !2539, line: 453, type: !5063, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5302)
!5302 = !{!5303, !5304}
!5303 = !DILocalVariable(name: "conv", arg: 1, scope: !5301, file: !2539, line: 453, type: !4719)
!5304 = !DILocalVariable(name: "sp", arg: 2, scope: !5301, file: !2539, line: 454, type: !279)
!5305 = !DILocation(line: 0, scope: !5301)
!5306 = !DILocation(line: 456, column: 10, scope: !5301)
!5307 = !DILocation(line: 456, column: 2, scope: !5301)
!5308 = !DILocation(line: 458, column: 8, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !2539, line: 458, column: 7)
!5310 = distinct !DILexicalBlock(scope: !5301, file: !2539, line: 456, column: 15)
!5311 = !DILocation(line: 458, column: 7, scope: !5309)
!5312 = !DILocation(line: 458, column: 13, scope: !5309)
!5313 = !DILocation(line: 0, scope: !5309)
!5314 = !DILocation(line: 458, column: 7, scope: !5310)
!5315 = !DILocation(line: 459, column: 21, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5309, file: !2539, line: 458, column: 21)
!5317 = !DILocation(line: 460, column: 4, scope: !5316)
!5318 = !DILocation(line: 461, column: 3, scope: !5316)
!5319 = !DILocation(line: 462, column: 21, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5309, file: !2539, line: 461, column: 10)
!5321 = !DILocation(line: 466, column: 8, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5310, file: !2539, line: 466, column: 7)
!5323 = !DILocation(line: 466, column: 7, scope: !5322)
!5324 = !DILocation(line: 466, column: 13, scope: !5322)
!5325 = !DILocation(line: 0, scope: !5322)
!5326 = !DILocation(line: 466, column: 7, scope: !5310)
!5327 = !DILocation(line: 467, column: 21, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5322, file: !2539, line: 466, column: 21)
!5329 = !DILocation(line: 468, column: 4, scope: !5328)
!5330 = !DILocation(line: 469, column: 3, scope: !5328)
!5331 = !DILocation(line: 470, column: 21, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5322, file: !2539, line: 469, column: 10)
!5333 = !DILocation(line: 474, column: 9, scope: !5310)
!5334 = !DILocation(line: 474, column: 20, scope: !5310)
!5335 = !DILocation(line: 475, column: 3, scope: !5310)
!5336 = !DILocation(line: 476, column: 3, scope: !5310)
!5337 = !DILocation(line: 478, column: 9, scope: !5310)
!5338 = !DILocation(line: 478, column: 20, scope: !5310)
!5339 = !DILocation(line: 479, column: 3, scope: !5310)
!5340 = !DILocation(line: 480, column: 3, scope: !5310)
!5341 = !DILocation(line: 482, column: 9, scope: !5310)
!5342 = !DILocation(line: 482, column: 20, scope: !5310)
!5343 = !DILocation(line: 483, column: 3, scope: !5310)
!5344 = !DILocation(line: 484, column: 3, scope: !5310)
!5345 = !DILocation(line: 486, column: 9, scope: !5310)
!5346 = !DILocation(line: 486, column: 20, scope: !5310)
!5347 = !DILocation(line: 487, column: 3, scope: !5310)
!5348 = !DILocation(line: 492, column: 21, scope: !5310)
!5349 = !DILocation(line: 493, column: 3, scope: !5310)
!5350 = !DILocation(line: 495, column: 9, scope: !5310)
!5351 = !DILocation(line: 495, column: 20, scope: !5310)
!5352 = !DILocation(line: 496, column: 3, scope: !5310)
!5353 = !DILocation(line: 498, column: 2, scope: !5301)
!5354 = distinct !DISubprogram(name: "extract_specifier", scope: !2539, file: !2539, line: 513, type: !5063, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5355)
!5355 = !{!5356, !5357, !5358, !5359}
!5356 = !DILocalVariable(name: "conv", arg: 1, scope: !5354, file: !2539, line: 513, type: !4719)
!5357 = !DILocalVariable(name: "sp", arg: 2, scope: !5354, file: !2539, line: 514, type: !279)
!5358 = !DILocalVariable(name: "unsupported", scope: !5354, file: !2539, line: 516, type: !347)
!5359 = !DILabel(scope: !5360, name: "int_conv", file: !2539, line: 526)
!5360 = distinct !DILexicalBlock(scope: !5354, file: !2539, line: 520, column: 27)
!5361 = !DILocation(line: 0, scope: !5354)
!5362 = !DILocation(line: 518, column: 20, scope: !5354)
!5363 = !DILocation(line: 518, column: 8, scope: !5354)
!5364 = !DILocation(line: 518, column: 18, scope: !5354)
!5365 = !DILocation(line: 520, column: 2, scope: !5354)
!5366 = !DILocation(line: 525, column: 3, scope: !5360)
!5367 = !DILocation(line: 0, scope: !5360)
!5368 = !DILocation(line: 526, column: 1, scope: !5360)
!5369 = !DILocation(line: 528, column: 24, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5360, file: !2539, line: 528, column: 7)
!5371 = !DILocation(line: 528, column: 7, scope: !5360)
!5372 = !DILocation(line: 535, column: 23, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5360, file: !2539, line: 535, column: 7)
!5374 = !DILocation(line: 535, column: 7, scope: !5360)
!5375 = !DILocation(line: 536, column: 36, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5373, file: !2539, line: 535, column: 31)
!5377 = !DILocation(line: 537, column: 3, scope: !5376)
!5378 = !DILocation(line: 570, column: 9, scope: !5360)
!5379 = !DILocation(line: 570, column: 23, scope: !5360)
!5380 = !DILocation(line: 575, column: 4, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5382, file: !2539, line: 573, column: 48)
!5382 = distinct !DILexicalBlock(scope: !5360, file: !2539, line: 573, column: 7)
!5383 = !DILocation(line: 603, column: 9, scope: !5360)
!5384 = !DILocation(line: 603, column: 23, scope: !5360)
!5385 = !DILocation(line: 605, column: 24, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5360, file: !2539, line: 605, column: 7)
!5387 = !DILocation(line: 605, column: 7, scope: !5360)
!5388 = !DILocation(line: 612, column: 9, scope: !5360)
!5389 = !DILocation(line: 612, column: 23, scope: !5360)
!5390 = !DILocation(line: 619, column: 24, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5360, file: !2539, line: 619, column: 7)
!5392 = !DILocation(line: 619, column: 7, scope: !5360)
!5393 = !DILocation(line: 625, column: 9, scope: !5360)
!5394 = !DILocation(line: 625, column: 17, scope: !5360)
!5395 = !DILocation(line: 626, column: 3, scope: !5360)
!5396 = !DILocation(line: 629, column: 20, scope: !5354)
!5397 = !DILocation(line: 629, column: 8, scope: !5354)
!5398 = !DILocation(line: 518, column: 23, scope: !5354)
!5399 = !DILocation(line: 631, column: 2, scope: !5354)
!5400 = distinct !DISubprogram(name: "extract_decimal", scope: !2539, file: !2539, line: 318, type: !5401, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5403)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{!234, !278}
!5403 = !{!5404, !5405, !5406}
!5404 = !DILocalVariable(name: "str", arg: 1, scope: !5400, file: !2539, line: 318, type: !278)
!5405 = !DILocalVariable(name: "sp", scope: !5400, file: !2539, line: 320, type: !279)
!5406 = !DILocalVariable(name: "val", scope: !5400, file: !2539, line: 321, type: !234)
!5407 = !DILocation(line: 0, scope: !5400)
!5408 = !DILocation(line: 320, column: 19, scope: !5400)
!5409 = !DILocation(line: 323, column: 37, scope: !5400)
!5410 = !DILocation(line: 323, column: 17, scope: !5400)
!5411 = !DILocation(line: 323, column: 9, scope: !5400)
!5412 = !DILocation(line: 323, column: 2, scope: !5400)
!5413 = !DILocation(line: 324, column: 13, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5400, file: !2539, line: 323, column: 43)
!5415 = !DILocation(line: 324, column: 24, scope: !5414)
!5416 = !DILocation(line: 324, column: 19, scope: !5414)
!5417 = !DILocation(line: 324, column: 27, scope: !5414)
!5418 = distinct !{!5418, !5412, !5419}
!5419 = !DILocation(line: 325, column: 2, scope: !5400)
!5420 = !DILocation(line: 326, column: 7, scope: !5400)
!5421 = !DILocation(line: 327, column: 2, scope: !5400)
!5422 = distinct !DISubprogram(name: "isdigit", scope: !5202, file: !5202, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5423)
!5423 = !{!5424}
!5424 = !DILocalVariable(name: "a", arg: 1, scope: !5422, file: !5202, line: 43, type: !109)
!5425 = !DILocation(line: 0, scope: !5422)
!5426 = !DILocation(line: 45, column: 29, scope: !5422)
!5427 = !DILocation(line: 45, column: 45, scope: !5422)
!5428 = !DILocation(line: 45, column: 2, scope: !5422)
!5429 = distinct !DISubprogram(name: "assert_post_action", scope: !5430, file: !5430, line: 26, type: !5431, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5433)
!5430 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5431 = !DISubroutineType(types: !5432)
!5432 = !{null, !279, !32}
!5433 = !{!5434, !5435}
!5434 = !DILocalVariable(name: "file", arg: 1, scope: !5429, file: !5430, line: 26, type: !279)
!5435 = !DILocalVariable(name: "line", arg: 2, scope: !5429, file: !5430, line: 26, type: !32)
!5436 = !DILocation(line: 0, scope: !5429)
!5437 = !DILocation(line: 43, column: 2, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5429, file: !5430, line: 43, column: 2)
!5439 = !{i64 2154160609, i64 2154160625, i64 2154160651, i64 2154160679, i64 2154160699}
!5440 = !DILocation(line: 44, column: 1, scope: !5429)
!5441 = distinct !DISubprogram(name: "assert_print", scope: !5430, file: !5430, line: 46, type: !4412, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5442)
!5442 = !{!5443, !5444}
!5443 = !DILocalVariable(name: "fmt", arg: 1, scope: !5441, file: !5430, line: 46, type: !279)
!5444 = !DILocalVariable(name: "ap", scope: !5441, file: !5430, line: 48, type: !5445)
!5445 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3418, line: 99, baseType: !5446)
!5446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3418, line: 40, baseType: !5447)
!5447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5430, baseType: !5448)
!5448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5449)
!5449 = !{!5450}
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5448, file: !5430, line: 48, baseType: !107, size: 32)
!5451 = !DILocation(line: 0, scope: !5441)
!5452 = !DILocation(line: 48, column: 2, scope: !5441)
!5453 = !DILocation(line: 48, column: 10, scope: !5441)
!5454 = !DILocation(line: 50, column: 2, scope: !5441)
!5455 = !DILocation(line: 52, column: 2, scope: !5441)
!5456 = !DILocation(line: 54, column: 2, scope: !5441)
!5457 = !DILocation(line: 55, column: 1, scope: !5441)
!5458 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5459, file: !5459, line: 9, type: !3116, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !2050)
!5459 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!5460 = !DILocation(line: 11, column: 1, scope: !5458)
!5461 = !{i64 2147565279, i64 2147565322, i64 2147565362}
!5462 = !DILocation(line: 12, column: 1, scope: !5458)
!5463 = !{i64 2147569506, i64 2147569549, i64 2147569589}
!5464 = !DILocation(line: 13, column: 1, scope: !5458)
!5465 = !{i64 2147569715, i64 2147569758, i64 2147569798}
!5466 = !DILocation(line: 14, column: 1, scope: !5458)
!5467 = !{i64 2147569884, i64 2147569927, i64 2147569967}
!5468 = !DILocation(line: 15, column: 1, scope: !5458)
!5469 = !{i64 2147570047, i64 2147570090, i64 2147570130}
!5470 = !DILocation(line: 16, column: 1, scope: !5458)
!5471 = !{i64 2147570231, i64 2147570274, i64 2147570314}
!5472 = !DILocation(line: 17, column: 1, scope: !5458)
!5473 = !{i64 2147570410, i64 2147570453, i64 2147570493}
!5474 = !DILocation(line: 18, column: 1, scope: !5458)
!5475 = !{i64 2147570652, i64 2147570695, i64 2147570735}
!5476 = !DILocation(line: 19, column: 1, scope: !5458)
!5477 = !{i64 2147570887, i64 2147570930, i64 2147570970}
!5478 = !DILocation(line: 20, column: 1, scope: !5458)
!5479 = !{i64 2147571073, i64 2147571116, i64 2147571156}
!5480 = !DILocation(line: 21, column: 1, scope: !5458)
!5481 = !{i64 2147571289, i64 2147571332, i64 2147571372}
!5482 = !DILocation(line: 22, column: 1, scope: !5458)
!5483 = !{i64 2147571492, i64 2147571535, i64 2147571575}
!5484 = !DILocation(line: 23, column: 1, scope: !5458)
!5485 = !{i64 2147571695, i64 2147571738, i64 2147571778}
!5486 = !DILocation(line: 24, column: 1, scope: !5458)
!5487 = !{i64 2147571870, i64 2147571913, i64 2147571953}
!5488 = !DILocation(line: 25, column: 1, scope: !5458)
!5489 = !{i64 2147572078, i64 2147572121, i64 2147572161}
!5490 = !DILocation(line: 26, column: 1, scope: !5458)
!5491 = !{i64 2147572282, i64 2147572325, i64 2147572365}
!5492 = !DILocation(line: 27, column: 1, scope: !5458)
!5493 = !{i64 2147572475, i64 2147572518, i64 2147572558}
!5494 = !DILocation(line: 28, column: 1, scope: !5458)
!5495 = !{i64 2147572677, i64 2147572720, i64 2147572760}
!5496 = !DILocation(line: 29, column: 1, scope: !5458)
!5497 = !{i64 2147572876, i64 2147572919, i64 2147572959}
!5498 = !DILocation(line: 30, column: 1, scope: !5458)
!5499 = !{i64 2147573103, i64 2147573146, i64 2147573186}
!5500 = !DILocation(line: 31, column: 1, scope: !5458)
!5501 = !{i64 2147573305, i64 2147573348, i64 2147573388}
!5502 = !DILocation(line: 32, column: 1, scope: !5458)
!5503 = !{i64 2147573520, i64 2147573563, i64 2147573603}
!5504 = !DILocation(line: 33, column: 1, scope: !5458)
!5505 = !{i64 2147573737, i64 2147573780, i64 2147573820}
!5506 = !DILocation(line: 34, column: 1, scope: !5458)
!5507 = !{i64 2147573909, i64 2147573952, i64 2147573992}
!5508 = !DILocation(line: 35, column: 1, scope: !5458)
!5509 = !{i64 2147574111, i64 2147574154, i64 2147574194}
!5510 = !DILocation(line: 36, column: 1, scope: !5458)
!5511 = !{i64 2147574337, i64 2147574380, i64 2147574420}
!5512 = !DILocation(line: 37, column: 1, scope: !5458)
!5513 = !{i64 2147574536, i64 2147574579, i64 2147574619}
!5514 = !DILocation(line: 38, column: 1, scope: !5458)
!5515 = !{i64 2147574711, i64 2147574754, i64 2147574794}
!5516 = !DILocation(line: 39, column: 1, scope: !5458)
!5517 = !{i64 2147574964, i64 2147575007, i64 2147575047}
!5518 = !DILocation(line: 40, column: 1, scope: !5458)
!5519 = !{i64 2147575205, i64 2147575248, i64 2147575288}
!5520 = !DILocation(line: 41, column: 1, scope: !5458)
!5521 = !{i64 2147575440, i64 2147575483, i64 2147575523}
!5522 = !DILocation(line: 42, column: 1, scope: !5458)
!5523 = !{i64 2147575672, i64 2147575715, i64 2147575755}
!5524 = !DILocation(line: 43, column: 1, scope: !5458)
!5525 = !{i64 2147575919, i64 2147575962, i64 2147576002}
!5526 = !DILocation(line: 44, column: 1, scope: !5458)
!5527 = !{i64 2147576145, i64 2147576188, i64 2147576228}
!5528 = !DILocation(line: 45, column: 1, scope: !5458)
!5529 = !{i64 2147576371, i64 2147576414, i64 2147576454}
!5530 = !DILocation(line: 46, column: 1, scope: !5458)
!5531 = !{i64 2147576630, i64 2147576673, i64 2147576713}
!5532 = !DILocation(line: 47, column: 1, scope: !5458)
!5533 = !{i64 2147576856, i64 2147576899, i64 2147576939}
!5534 = !DILocation(line: 48, column: 1, scope: !5458)
!5535 = !{i64 2147577091, i64 2147577134, i64 2147577174}
!5536 = !DILocation(line: 49, column: 1, scope: !5458)
!5537 = !{i64 2147577329, i64 2147577372, i64 2147577412}
!5538 = !DILocation(line: 50, column: 1, scope: !5458)
!5539 = !{i64 2147577603, i64 2147577646, i64 2147577686}
!5540 = !DILocation(line: 51, column: 1, scope: !5458)
!5541 = !{i64 2147577841, i64 2147577884, i64 2147577924}
!5542 = !DILocation(line: 52, column: 1, scope: !5458)
!5543 = !{i64 2147578094, i64 2147578137, i64 2147578177}
!5544 = !DILocation(line: 53, column: 1, scope: !5458)
!5545 = !{i64 2147582399, i64 2147582442, i64 2147582482}
!5546 = !DILocation(line: 54, column: 1, scope: !5458)
!5547 = !{i64 2147582649, i64 2147582692, i64 2147582732}
!5548 = !DILocation(line: 55, column: 1, scope: !5458)
!5549 = !{i64 2147582890, i64 2147582933, i64 2147582973}
!5550 = !DILocation(line: 56, column: 1, scope: !5458)
!5551 = !{i64 2147583137, i64 2147583180, i64 2147583220}
!5552 = !DILocation(line: 57, column: 1, scope: !5458)
!5553 = !{i64 2147583372, i64 2147583415, i64 2147583455}
!5554 = !DILocation(line: 58, column: 1, scope: !5458)
!5555 = !{i64 2147583607, i64 2147583650, i64 2147583690}
!5556 = !DILocation(line: 59, column: 1, scope: !5458)
!5557 = !{i64 2147583842, i64 2147583885, i64 2147583925}
!5558 = !DILocation(line: 60, column: 1, scope: !5458)
!5559 = !{i64 2147584080, i64 2147584123, i64 2147584163}
!5560 = !DILocation(line: 61, column: 1, scope: !5458)
!5561 = !{i64 2147584321, i64 2147584364, i64 2147584404}
!5562 = !DILocation(line: 62, column: 1, scope: !5458)
!5563 = !{i64 2147584601, i64 2147584644, i64 2147584684}
!5564 = !DILocation(line: 63, column: 1, scope: !5458)
!5565 = !{i64 2147584860, i64 2147584903, i64 2147584943}
!5566 = !DILocation(line: 64, column: 1, scope: !5458)
!5567 = !{i64 2147585098, i64 2147585141, i64 2147585181}
!5568 = !DILocation(line: 65, column: 1, scope: !5458)
!5569 = !{i64 2147585348, i64 2147585391, i64 2147585431}
!5570 = !DILocation(line: 66, column: 1, scope: !5458)
!5571 = !{i64 2147585577, i64 2147585620, i64 2147585660}
!5572 = !DILocation(line: 67, column: 1, scope: !5458)
!5573 = !{i64 2147585785, i64 2147585828, i64 2147585868}
!5574 = !DILocation(line: 68, column: 1, scope: !5458)
!5575 = !{i64 2147585996, i64 2147586039, i64 2147586079}
!5576 = !DILocation(line: 69, column: 1, scope: !5458)
!5577 = !{i64 2147586231, i64 2147586274, i64 2147586314}
!5578 = !DILocation(line: 70, column: 1, scope: !5458)
!5579 = !{i64 2147586460, i64 2147586503, i64 2147586543}
!5580 = !DILocation(line: 71, column: 1, scope: !5458)
!5581 = !{i64 2147586677, i64 2147586720, i64 2147586760}
!5582 = !DILocation(line: 72, column: 1, scope: !5458)
!5583 = !{i64 2147586906, i64 2147586949, i64 2147586989}
!5584 = !DILocation(line: 73, column: 1, scope: !5458)
!5585 = !{i64 2147587144, i64 2147587187, i64 2147587227}
!5586 = !DILocation(line: 74, column: 1, scope: !5458)
!5587 = !{i64 2147587376, i64 2147587419, i64 2147587459}
!5588 = !DILocation(line: 75, column: 1, scope: !5458)
!5589 = !{i64 2147587602, i64 2147587645, i64 2147587685}
!5590 = !DILocation(line: 76, column: 1, scope: !5458)
!5591 = !{i64 2147587819, i64 2147587862, i64 2147587902}
!5592 = !DILocation(line: 77, column: 1, scope: !5458)
!5593 = !{i64 2147588051, i64 2147588094, i64 2147588134}
!5594 = !DILocation(line: 78, column: 1, scope: !5458)
!5595 = !{i64 2147588277, i64 2147588320, i64 2147588360}
!5596 = !DILocation(line: 79, column: 1, scope: !5458)
!5597 = !{i64 2147588491, i64 2147588534, i64 2147588574}
!5598 = !DILocation(line: 80, column: 1, scope: !5458)
!5599 = !{i64 2147588711, i64 2147588754, i64 2147588794}
!5600 = !DILocation(line: 81, column: 1, scope: !5458)
!5601 = !{i64 2147588943, i64 2147588986, i64 2147589026}
!5602 = !DILocation(line: 82, column: 1, scope: !5458)
!5603 = !{i64 2147589151, i64 2147589194, i64 2147589234}
!5604 = !DILocation(line: 83, column: 1, scope: !5458)
!5605 = !{i64 2147589356, i64 2147589399, i64 2147589439}
!5606 = !DILocation(line: 84, column: 1, scope: !5458)
!5607 = !{i64 2147589573, i64 2147589616, i64 2147589656}
!5608 = !DILocation(line: 85, column: 1, scope: !5458)
!5609 = !{i64 2147589787, i64 2147589830, i64 2147589870}
!5610 = !DILocation(line: 86, column: 1, scope: !5458)
!5611 = !{i64 2147590013, i64 2147590056, i64 2147590096}
!5612 = !DILocation(line: 87, column: 1, scope: !5458)
!5613 = !{i64 2147590233, i64 2147590276, i64 2147590316}
!5614 = !DILocation(line: 88, column: 1, scope: !5458)
!5615 = !{i64 2147594499, i64 2147594542, i64 2147594582}
!5616 = !DILocation(line: 89, column: 1, scope: !5458)
!5617 = !{i64 2147594731, i64 2147594774, i64 2147594814}
!5618 = !DILocation(line: 90, column: 1, scope: !5458)
!5619 = !{i64 2147594966, i64 2147595009, i64 2147595049}
!5620 = !DILocation(line: 91, column: 1, scope: !5458)
!5621 = !{i64 2147595216, i64 2147595259, i64 2147595299}
!5622 = !DILocation(line: 92, column: 1, scope: !5458)
!5623 = !{i64 2147595466, i64 2147595509, i64 2147595549}
!5624 = !DILocation(line: 93, column: 1, scope: !5458)
!5625 = !{i64 2147595704, i64 2147595747, i64 2147595787}
!5626 = !DILocation(line: 94, column: 1, scope: !5458)
!5627 = !{i64 2147595915, i64 2147595958, i64 2147595998}
!5628 = !DILocation(line: 95, column: 1, scope: !5458)
!5629 = !{i64 2147596132, i64 2147596175, i64 2147596215}
!5630 = !DILocation(line: 96, column: 1, scope: !5458)
!5631 = !{i64 2147596328, i64 2147596371, i64 2147596411}
!5632 = !DILocation(line: 97, column: 1, scope: !5458)
!5633 = !{i64 2147596530, i64 2147596573, i64 2147596613}
!5634 = !DILocation(line: 98, column: 1, scope: !5458)
!5635 = !{i64 2147596723, i64 2147596766, i64 2147596806}
!5636 = !DILocation(line: 99, column: 1, scope: !5458)
!5637 = !{i64 2147596931, i64 2147596974, i64 2147597014}
!5638 = !DILocation(line: 100, column: 1, scope: !5458)
!5639 = !{i64 2147597127, i64 2147597170, i64 2147597210}
!5640 = !DILocation(line: 101, column: 1, scope: !5458)
!5641 = !{i64 2147597329, i64 2147597372, i64 2147597412}
!5642 = !DILocation(line: 102, column: 1, scope: !5458)
!5643 = !{i64 2147597540, i64 2147597583, i64 2147597623}
!5644 = !DILocation(line: 103, column: 1, scope: !5458)
!5645 = !{i64 2147597739, i64 2147597782, i64 2147597822}
!5646 = !DILocation(line: 104, column: 1, scope: !5458)
!5647 = !{i64 2147597914, i64 2147597957, i64 2147597997}
!5648 = !DILocation(line: 105, column: 1, scope: !5458)
!5649 = !{i64 2147598098, i64 2147598141, i64 2147598181}
!5650 = !DILocation(line: 106, column: 1, scope: !5458)
!5651 = !{i64 2147598300, i64 2147598343, i64 2147598383}
!5652 = !DILocation(line: 107, column: 1, scope: !5458)
!5653 = !{i64 2147598499, i64 2147598542, i64 2147598582}
!5654 = !DILocation(line: 108, column: 1, scope: !5458)
!5655 = !{i64 2147598704, i64 2147598747, i64 2147598787}
!5656 = !DILocation(line: 109, column: 1, scope: !5458)
!5657 = !{i64 2147598897, i64 2147598940, i64 2147598980}
!5658 = !DILocation(line: 110, column: 1, scope: !5458)
!5659 = !{i64 2147599063, i64 2147599106, i64 2147599146}
!5660 = !DILocation(line: 111, column: 1, scope: !5458)
!5661 = !{i64 2147599247, i64 2147599290, i64 2147599330}
!5662 = !DILocation(line: 112, column: 1, scope: !5458)
!5663 = !{i64 2147599437, i64 2147599480, i64 2147599520}
!5664 = !DILocation(line: 113, column: 1, scope: !5458)
!5665 = !{i64 2147599621, i64 2147599664, i64 2147599704}
!5666 = !DILocation(line: 114, column: 1, scope: !5458)
!5667 = !{i64 2147599835, i64 2147599878, i64 2147599918}
!5668 = !DILocation(line: 115, column: 1, scope: !5458)
!5669 = !{i64 2147600046, i64 2147600089, i64 2147600129}
!5670 = !DILocation(line: 116, column: 1, scope: !5458)
!5671 = !{i64 2147600269, i64 2147600312, i64 2147600352}
!5672 = !DILocation(line: 117, column: 1, scope: !5458)
!5673 = !{i64 2147600453, i64 2147600496, i64 2147600536}
!5674 = !DILocation(line: 118, column: 1, scope: !5458)
!5675 = !{i64 2147600667, i64 2147600710, i64 2147600750}
!5676 = !DILocation(line: 119, column: 1, scope: !5458)
!5677 = !{i64 2147600833, i64 2147600876, i64 2147600916}
!5678 = !DILocation(line: 120, column: 1, scope: !5458)
!5679 = !{i64 2147601014, i64 2147601057, i64 2147601097}
!5680 = !DILocation(line: 121, column: 1, scope: !5458)
!5681 = !{i64 2147601207, i64 2147601250, i64 2147601290}
!5682 = !DILocation(line: 122, column: 1, scope: !5458)
!5683 = !{i64 2147601433, i64 2147601476, i64 2147601516}
!5684 = !DILocation(line: 123, column: 1, scope: !5458)
!5685 = !{i64 2147601647, i64 2147601690, i64 2147601730}
!5686 = !DILocation(line: 124, column: 1, scope: !5458)
!5687 = !{i64 2147601873, i64 2147601916, i64 2147601956}
!5688 = !DILocation(line: 125, column: 1, scope: !5458)
!5689 = !{i64 2147602090, i64 2147602133, i64 2147602173}
!5690 = !DILocation(line: 126, column: 1, scope: !5458)
!5691 = !{i64 2147602367, i64 2147602410, i64 2147602450}
!5692 = !DILocation(line: 127, column: 1, scope: !5458)
!5693 = !{i64 2147602593, i64 2147602636, i64 2147602676}
!5694 = !DILocation(line: 128, column: 1, scope: !5458)
!5695 = !{i64 2147602801, i64 2147602844, i64 2147602884}
!5696 = !DILocation(line: 129, column: 1, scope: !5458)
!5697 = !{i64 2147602997, i64 2147603040, i64 2147603080}
!5698 = !DILocation(line: 130, column: 1, scope: !5458)
!5699 = !{i64 2147603262, i64 2147603305, i64 2147603345}
!5700 = !DILocation(line: 131, column: 1, scope: !5458)
!5701 = !{i64 2147603476, i64 2147603519, i64 2147603559}
!5702 = !DILocation(line: 132, column: 1, scope: !5458)
!5703 = !{i64 2147607712, i64 2147607755, i64 2147607795}
!5704 = !DILocation(line: 133, column: 1, scope: !5458)
!5705 = !{i64 2147607966, i64 2147608009, i64 2147608049}
!5706 = !DILocation(line: 134, column: 1, scope: !5458)
!5707 = !{i64 2147608165, i64 2147608208, i64 2147608248}
!5708 = !DILocation(line: 135, column: 1, scope: !5458)
!5709 = !{i64 2147608407, i64 2147608450, i64 2147608490}
!5710 = !DILocation(line: 136, column: 1, scope: !5458)
!5711 = !{i64 2147608570, i64 2147608613, i64 2147608653}
!5712 = !DILocation(line: 137, column: 1, scope: !5458)
!5713 = !{i64 2147608757, i64 2147608800, i64 2147608840}
!5714 = !DILocation(line: 138, column: 1, scope: !5458)
!5715 = !{i64 2147608965, i64 2147609008, i64 2147609048}
!5716 = !DILocation(line: 139, column: 1, scope: !5458)
!5717 = !{i64 2147609161, i64 2147609204, i64 2147609244}
!5718 = !DILocation(line: 140, column: 1, scope: !5458)
!5719 = !{i64 2147609354, i64 2147609397, i64 2147609437}
!5720 = !DILocation(line: 141, column: 1, scope: !5458)
!5721 = !{i64 2147609536, i64 2147609579, i64 2147609619}
!5722 = !DILocation(line: 142, column: 1, scope: !5458)
!5723 = !{i64 2147609750, i64 2147609793, i64 2147609833}
!5724 = !DILocation(line: 143, column: 1, scope: !5458)
!5725 = !{i64 2147609961, i64 2147610004, i64 2147610044}
!5726 = !DILocation(line: 144, column: 1, scope: !5458)
!5727 = !{i64 2147610181, i64 2147610224, i64 2147610264}
!5728 = !DILocation(line: 145, column: 1, scope: !5458)
!5729 = !{i64 2147610388, i64 2147610431, i64 2147610471}
!5730 = !DILocation(line: 146, column: 1, scope: !5458)
!5731 = !{i64 2147610661, i64 2147610704, i64 2147610744}
!5732 = !DILocation(line: 147, column: 1, scope: !5458)
!5733 = !{i64 2147610909, i64 2147610952, i64 2147610992}
!5734 = !DILocation(line: 148, column: 1, scope: !5458)
!5735 = !{i64 2147611108, i64 2147611151, i64 2147611191}
!5736 = !DILocation(line: 149, column: 1, scope: !5458)
!5737 = !{i64 2147611343, i64 2147611386, i64 2147611426}
!5738 = !DILocation(line: 150, column: 1, scope: !5458)
!5739 = !{i64 2147611593, i64 2147611636, i64 2147611676}
!5740 = !DILocation(line: 151, column: 1, scope: !5458)
!5741 = !{i64 2147611795, i64 2147611838, i64 2147611878}
!5742 = !DILocation(line: 152, column: 1, scope: !5458)
!5743 = !{i64 2147612018, i64 2147612061, i64 2147612101}
!5744 = !DILocation(line: 153, column: 1, scope: !5458)
!5745 = !{i64 2147612232, i64 2147612275, i64 2147612315}
!5746 = !DILocation(line: 154, column: 1, scope: !5458)
!5747 = !{i64 2147612476, i64 2147612519, i64 2147612559}
!5748 = !DILocation(line: 155, column: 1, scope: !5458)
!5749 = !{i64 2147612705, i64 2147612748, i64 2147612788}
!5750 = !DILocation(line: 156, column: 1, scope: !5458)
!5751 = !{i64 2147612934, i64 2147612977, i64 2147613017}
!5752 = !DILocation(line: 157, column: 1, scope: !5458)
!5753 = !{i64 2147613142, i64 2147613185, i64 2147613225}
!5754 = !DILocation(line: 158, column: 1, scope: !5458)
!5755 = !{i64 2147613380, i64 2147613423, i64 2147613463}
!5756 = !DILocation(line: 159, column: 1, scope: !5458)
!5757 = !{i64 2147613606, i64 2147613649, i64 2147613689}
!5758 = !DILocation(line: 160, column: 1, scope: !5458)
!5759 = !{i64 2147613865, i64 2147613908, i64 2147613948}
!5760 = !DILocation(line: 161, column: 1, scope: !5458)
!5761 = !{i64 2147614085, i64 2147614128, i64 2147614168}
!5762 = !DILocation(line: 162, column: 1, scope: !5458)
!5763 = !{i64 2147614317, i64 2147614360, i64 2147614400}
!5764 = !DILocation(line: 163, column: 1, scope: !5458)
!5765 = !{i64 2147614558, i64 2147614601, i64 2147614641}
!5766 = !DILocation(line: 164, column: 1, scope: !5458)
!5767 = !{i64 2147614799, i64 2147614842, i64 2147614882}
!5768 = !DILocation(line: 165, column: 1, scope: !5458)
!5769 = !{i64 2147615022, i64 2147615065, i64 2147615105}
!5770 = !DILocation(line: 166, column: 1, scope: !5458)
!5771 = !{i64 2147615239, i64 2147615282, i64 2147615322}
!5772 = !DILocation(line: 167, column: 1, scope: !5458)
!5773 = !{i64 2147615480, i64 2147615523, i64 2147615563}
!5774 = !DILocation(line: 168, column: 1, scope: !5458)
!5775 = !{i64 2147615667, i64 2147615710, i64 2147615750}
!5776 = !DILocation(line: 169, column: 1, scope: !5458)
!5777 = !{i64 2147615854, i64 2147615897, i64 2147615937}
!5778 = !DILocation(line: 170, column: 1, scope: !5458)
!5779 = !{i64 2147616017, i64 2147616060, i64 2147616100}
!5780 = !DILocation(line: 171, column: 1, scope: !5458)
!5781 = !{i64 2147616222, i64 2147616265, i64 2147616305}
!5782 = !DILocation(line: 172, column: 1, scope: !5458)
!5783 = !{i64 2147620476, i64 2147620519, i64 2147620559}
!5784 = !DILocation(line: 173, column: 1, scope: !5458)
!5785 = !{i64 2147620735, i64 2147620778, i64 2147620818}
!5786 = !DILocation(line: 174, column: 1, scope: !5458)
!5787 = !{i64 2147620958, i64 2147621001, i64 2147621041}
!5788 = !DILocation(line: 175, column: 1, scope: !5458)
!5789 = !{i64 2147621187, i64 2147621230, i64 2147621270}
!5790 = !DILocation(line: 176, column: 1, scope: !5458)
!5791 = !{i64 2147621401, i64 2147621444, i64 2147621484}
!5792 = !DILocation(line: 177, column: 1, scope: !5458)
!5793 = !{i64 2147621603, i64 2147621646, i64 2147621686}
!5794 = !DILocation(line: 178, column: 1, scope: !5458)
!5795 = !{i64 2147621799, i64 2147621842, i64 2147621882}
!5796 = !DILocation(line: 179, column: 1, scope: !5458)
!5797 = !{i64 2147622011, i64 2147622054, i64 2147622094}
!5798 = !DILocation(line: 180, column: 1, scope: !5458)
!5799 = !{i64 2147622232, i64 2147622275, i64 2147622315}
!5800 = !DILocation(line: 181, column: 1, scope: !5458)
!5801 = !{i64 2147622446, i64 2147622489, i64 2147622529}
!5802 = !DILocation(line: 182, column: 1, scope: !5458)
!5803 = !{i64 2147622636, i64 2147622679, i64 2147622719}
!5804 = !DILocation(line: 183, column: 1, scope: !5458)
!5805 = !{i64 2147622835, i64 2147622878, i64 2147622918}
!5806 = !DILocation(line: 184, column: 1, scope: !5458)
!5807 = !{i64 2147623040, i64 2147623083, i64 2147623123}
!5808 = !DILocation(line: 185, column: 1, scope: !5458)
!5809 = !{i64 2147623260, i64 2147623303, i64 2147623343}
!5810 = !DILocation(line: 186, column: 1, scope: !5458)
!5811 = !{i64 2147623461, i64 2147623504, i64 2147623544}
!5812 = !DILocation(line: 187, column: 1, scope: !5458)
!5813 = !{i64 2147623660, i64 2147623703, i64 2147623743}
!5814 = !DILocation(line: 188, column: 1, scope: !5458)
!5815 = !{i64 2147623865, i64 2147623908, i64 2147623948}
!5816 = !DILocation(line: 189, column: 1, scope: !5458)
!5817 = !{i64 2147624034, i64 2147624077, i64 2147624117}
!5818 = !DILocation(line: 190, column: 1, scope: !5458)
!5819 = !{i64 2147624218, i64 2147624261, i64 2147624301}
!5820 = !DILocation(line: 191, column: 1, scope: !5458)
!5821 = !{i64 2147624402, i64 2147624445, i64 2147624485}
!5822 = !DILocation(line: 192, column: 1, scope: !5458)
!5823 = !{i64 2147624589, i64 2147624632, i64 2147624672}
!5824 = !DILocation(line: 193, column: 1, scope: !5458)
!5825 = !{i64 2147624773, i64 2147624816, i64 2147624856}
!5826 = !DILocation(line: 194, column: 1, scope: !5458)
!5827 = !{i64 2147624960, i64 2147625003, i64 2147625043}
!5828 = !DILocation(line: 195, column: 1, scope: !5458)
!5829 = !{i64 2147625172, i64 2147625215, i64 2147625255}
!5830 = !DILocation(line: 196, column: 1, scope: !5458)
!5831 = !{i64 2147625410, i64 2147625453, i64 2147625493}
!5832 = !DILocation(line: 197, column: 1, scope: !5458)
!5833 = !{i64 2147625640, i64 2147625683, i64 2147625723}
!5834 = !DILocation(line: 198, column: 1, scope: !5458)
!5835 = !{i64 2147625869, i64 2147625912, i64 2147625952}
!5836 = !DILocation(line: 199, column: 1, scope: !5458)
!5837 = !{i64 2147626056, i64 2147626099, i64 2147626139}
!5838 = !DILocation(line: 200, column: 1, scope: !5458)
!5839 = !{i64 2147626252, i64 2147626295, i64 2147626335}
!5840 = !DILocation(line: 201, column: 1, scope: !5458)
!5841 = !{i64 2147626460, i64 2147626503, i64 2147626543}
!5842 = !DILocation(line: 202, column: 1, scope: !5458)
!5843 = !{i64 2147626672, i64 2147626715, i64 2147626755}
!5844 = !DILocation(line: 203, column: 1, scope: !5458)
!5845 = !{i64 2147626871, i64 2147626914, i64 2147626954}
!5846 = !DILocation(line: 204, column: 1, scope: !5458)
!5847 = !{i64 2147627109, i64 2147627152, i64 2147627192}
!5848 = !DILocation(line: 205, column: 1, scope: !5458)
!5849 = !{i64 2147627305, i64 2147627348, i64 2147627388}
!5850 = !DILocation(line: 206, column: 1, scope: !5458)
!5851 = !{i64 2147627507, i64 2147627550, i64 2147627590}
!5852 = !DILocation(line: 207, column: 1, scope: !5458)
!5853 = !{i64 2147627700, i64 2147627743, i64 2147627783}
!5854 = !DILocation(line: 208, column: 1, scope: !5458)
!5855 = !{i64 2147627934, i64 2147627977, i64 2147628017}
!5856 = !DILocation(line: 209, column: 1, scope: !5458)
!5857 = !{i64 2147628097, i64 2147628140, i64 2147628180}
!5858 = !DILocation(line: 210, column: 1, scope: !5458)
!5859 = !{i64 2147628336, i64 2147628379, i64 2147628419}
!5860 = !DILocation(line: 211, column: 1, scope: !5458)
!5861 = !{i64 2147628575, i64 2147628618, i64 2147628658}
!5862 = !DILocation(line: 212, column: 1, scope: !5458)
!5863 = !{i64 2147628811, i64 2147628854, i64 2147628894}
!5864 = !DILocation(line: 213, column: 1, scope: !5458)
!5865 = !{i64 2147629041, i64 2147629084, i64 2147629124}
!5866 = !DILocation(line: 214, column: 1, scope: !5458)
!5867 = !{i64 2147629228, i64 2147629271, i64 2147629311}
!5868 = !DILocation(line: 215, column: 1, scope: !5458)
!5869 = !{i64 2147629427, i64 2147629470, i64 2147629510}
!5870 = !DILocation(line: 216, column: 1, scope: !5458)
!5871 = !{i64 2147633759, i64 2147633802, i64 2147633842}
!5872 = !DILocation(line: 217, column: 1, scope: !5458)
!5873 = !{i64 2147633934, i64 2147633977, i64 2147634017}
!5874 = !DILocation(line: 218, column: 1, scope: !5458)
!5875 = !{i64 2147634168, i64 2147634211, i64 2147634251}
!5876 = !DILocation(line: 219, column: 1, scope: !5458)
!5877 = !{i64 2147634376, i64 2147634419, i64 2147634459}
!5878 = !DILocation(line: 220, column: 1, scope: !5458)
!5879 = !{i64 2147634594, i64 2147634637, i64 2147634677}
!5880 = !DILocation(line: 221, column: 1, scope: !5458)
!5881 = !{i64 2147634784, i64 2147634827, i64 2147634867}
!5882 = !DILocation(line: 222, column: 1, scope: !5458)
!5883 = !{i64 2147635016, i64 2147635059, i64 2147635099}
!5884 = !DILocation(line: 223, column: 1, scope: !5458)
!5885 = !{i64 2147635236, i64 2147635279, i64 2147635319}
!5886 = !DILocation(line: 224, column: 1, scope: !5458)
!5887 = !{i64 2147635432, i64 2147635475, i64 2147635515}
!5888 = !DILocation(line: 225, column: 1, scope: !5458)
!5889 = !{i64 2147635638, i64 2147635681, i64 2147635721}
!5890 = !DILocation(line: 226, column: 1, scope: !5458)
!5891 = !{i64 2147635843, i64 2147635886, i64 2147635926}
!5892 = !DILocation(line: 227, column: 1, scope: !5458)
!5893 = !{i64 2147636069, i64 2147636112, i64 2147636152}
!5894 = !DILocation(line: 228, column: 1, scope: !5458)
!5895 = !{i64 2147636277, i64 2147636320, i64 2147636360}
!5896 = !DILocation(line: 229, column: 1, scope: !5458)
!5897 = !{i64 2147636473, i64 2147636516, i64 2147636556}
!5898 = !DILocation(line: 230, column: 1, scope: !5458)
!5899 = !{i64 2147636705, i64 2147636748, i64 2147636788}
!5900 = !DILocation(line: 231, column: 1, scope: !5458)
!5901 = !{i64 2147636889, i64 2147636932, i64 2147636972}
!5902 = !DILocation(line: 232, column: 1, scope: !5458)
!5903 = !{i64 2147637098, i64 2147637141, i64 2147637181}
!5904 = !DILocation(line: 233, column: 1, scope: !5458)
!5905 = !{i64 2147637306, i64 2147637349, i64 2147637389}
!5906 = !DILocation(line: 234, column: 1, scope: !5458)
!5907 = !{i64 2147637502, i64 2147637545, i64 2147637585}
!5908 = !DILocation(line: 235, column: 1, scope: !5458)
!5909 = !{i64 2147637686, i64 2147637729, i64 2147637769}
!5910 = !DILocation(line: 236, column: 1, scope: !5458)
!5911 = !{i64 2147637912, i64 2147637955, i64 2147637995}
!5912 = !DILocation(line: 237, column: 1, scope: !5458)
!5913 = !{i64 2147638138, i64 2147638181, i64 2147638221}
!5914 = !DILocation(line: 238, column: 1, scope: !5458)
!5915 = !{i64 2147638364, i64 2147638407, i64 2147638447}
!5916 = !DILocation(line: 239, column: 1, scope: !5458)
!5917 = !{i64 2147638590, i64 2147638633, i64 2147638673}
!5918 = !DILocation(line: 240, column: 1, scope: !5458)
!5919 = !{i64 2147638816, i64 2147638859, i64 2147638899}
!5920 = !DILocation(line: 241, column: 1, scope: !5458)
!5921 = !{i64 2147639048, i64 2147639091, i64 2147639131}
!5922 = !DILocation(line: 242, column: 1, scope: !5458)
!5923 = !{i64 2147639286, i64 2147639329, i64 2147639369}
!5924 = !DILocation(line: 243, column: 1, scope: !5458)
!5925 = !{i64 2147639506, i64 2147639549, i64 2147639589}
!5926 = !DILocation(line: 244, column: 1, scope: !5458)
!5927 = !{i64 2147639750, i64 2147639793, i64 2147639833}
!5928 = !DILocation(line: 245, column: 1, scope: !5458)
!5929 = !{i64 2147639991, i64 2147640034, i64 2147640074}
!5930 = !DILocation(line: 246, column: 1, scope: !5458)
!5931 = !{i64 2147640226, i64 2147640269, i64 2147640309}
!5932 = !DILocation(line: 247, column: 1, scope: !5458)
!5933 = !{i64 2147640458, i64 2147640501, i64 2147640541}
!5934 = !DILocation(line: 248, column: 1, scope: !5458)
!5935 = !{i64 2147640660, i64 2147640703, i64 2147640743}
!5936 = !DILocation(line: 249, column: 1, scope: !5458)
!5937 = !{i64 2147640910, i64 2147640953, i64 2147640993}
!5938 = !DILocation(line: 250, column: 1, scope: !5458)
!5939 = !{i64 2147641148, i64 2147641191, i64 2147641231}
!5940 = !DILocation(line: 251, column: 1, scope: !5458)
!5941 = !{i64 2147641356, i64 2147641399, i64 2147641439}
!5942 = !DILocation(line: 252, column: 1, scope: !5458)
!5943 = !{i64 2147641552, i64 2147641595, i64 2147641635}
!5944 = !DILocation(line: 253, column: 1, scope: !5458)
!5945 = !{i64 2147641736, i64 2147641779, i64 2147641819}
!5946 = !DILocation(line: 254, column: 1, scope: !5458)
!5947 = !{i64 2147641953, i64 2147641996, i64 2147642036}
!5948 = !DILocation(line: 255, column: 1, scope: !5458)
!5949 = !{i64 2147642158, i64 2147642201, i64 2147642241}
!5950 = !DILocation(line: 256, column: 1, scope: !5458)
!5951 = !{i64 2147646454, i64 2147646497, i64 2147646537}
!5952 = !DILocation(line: 257, column: 1, scope: !5458)
!5953 = !{i64 2147646677, i64 2147646720, i64 2147646760}
!5954 = !DILocation(line: 258, column: 1, scope: !5458)
!5955 = !{i64 2147646901, i64 2147646944, i64 2147646984}
!5956 = !DILocation(line: 259, column: 1, scope: !5458)
!5957 = !{i64 2147647139, i64 2147647182, i64 2147647222}
!5958 = !DILocation(line: 260, column: 1, scope: !5458)
!5959 = !{i64 2147647377, i64 2147647420, i64 2147647460}
!5960 = !DILocation(line: 261, column: 1, scope: !5458)
!5961 = !{i64 2147647594, i64 2147647637, i64 2147647677}
!5962 = !DILocation(line: 262, column: 1, scope: !5458)
!5963 = !{i64 2147647799, i64 2147647842, i64 2147647882}
!5964 = !DILocation(line: 263, column: 1, scope: !5458)
!5965 = !{i64 2147647992, i64 2147648035, i64 2147648075}
!5966 = !DILocation(line: 264, column: 1, scope: !5458)
!5967 = !{i64 2147648245, i64 2147648288, i64 2147648328}
!5968 = !DILocation(line: 265, column: 1, scope: !5458)
!5969 = !{i64 2147648453, i64 2147648496, i64 2147648536}
!5970 = !DILocation(line: 266, column: 1, scope: !5458)
!5971 = !{i64 2147648649, i64 2147648692, i64 2147648732}
!5972 = !DILocation(line: 267, column: 1, scope: !5458)
!5973 = !{i64 2147648863, i64 2147648906, i64 2147648946}
!5974 = !DILocation(line: 268, column: 1, scope: !5458)
!5975 = !{i64 2147649071, i64 2147649114, i64 2147649154}
!5976 = !DILocation(line: 269, column: 1, scope: !5458)
!5977 = !{i64 2147649261, i64 2147649304, i64 2147649344}
!5978 = !DILocation(line: 270, column: 1, scope: !5458)
!5979 = !{i64 2147649475, i64 2147649518, i64 2147649558}
!5980 = !DILocation(line: 271, column: 1, scope: !5458)
!5981 = !{i64 2147649737, i64 2147649780, i64 2147649820}
!5982 = !DILocation(line: 272, column: 1, scope: !5458)
!5983 = !{i64 2147649948, i64 2147649991, i64 2147650031}
!5984 = !DILocation(line: 273, column: 1, scope: !5458)
!5985 = !{i64 2147650192, i64 2147650235, i64 2147650275}
!5986 = !DILocation(line: 274, column: 1, scope: !5458)
!5987 = !{i64 2147650403, i64 2147650446, i64 2147650486}
!5988 = !DILocation(line: 275, column: 1, scope: !5458)
!5989 = !{i64 2147650632, i64 2147650675, i64 2147650715}
!5990 = !DILocation(line: 276, column: 1, scope: !5458)
!5991 = !{i64 2147650897, i64 2147650940, i64 2147650980}
!5992 = !DILocation(line: 277, column: 1, scope: !5458)
!5993 = !{i64 2147651102, i64 2147651145, i64 2147651185}
!5994 = !DILocation(line: 278, column: 1, scope: !5458)
!5995 = !{i64 2147651298, i64 2147651341, i64 2147651381}
!5996 = !DILocation(line: 279, column: 1, scope: !5458)
!5997 = !{i64 2147651521, i64 2147651564, i64 2147651604}
!5998 = !DILocation(line: 280, column: 1, scope: !5458)
!5999 = !{i64 2147651684, i64 2147651727, i64 2147651767}
!6000 = !DILocation(line: 281, column: 1, scope: !5458)
!6001 = !{i64 2147651889, i64 2147651932, i64 2147651972}
!6002 = !DILocation(line: 282, column: 1, scope: !5458)
!6003 = !{i64 2147652109, i64 2147652152, i64 2147652192}
!6004 = !DILocation(line: 283, column: 1, scope: !5458)
!6005 = !{i64 2147652323, i64 2147652366, i64 2147652406}
!6006 = !DILocation(line: 284, column: 1, scope: !5458)
!6007 = !{i64 2147652567, i64 2147652610, i64 2147652650}
!6008 = !DILocation(line: 285, column: 1, scope: !5458)
!6009 = !{i64 2147652799, i64 2147652842, i64 2147652882}
!6010 = !DILocation(line: 286, column: 1, scope: !5458)
!6011 = !{i64 2147653013, i64 2147653056, i64 2147653096}
!6012 = !DILocation(line: 287, column: 1, scope: !5458)
!6013 = !{i64 2147653224, i64 2147653267, i64 2147653307}
!6014 = !DILocation(line: 288, column: 1, scope: !5458)
!6015 = !{i64 2147653417, i64 2147653460, i64 2147653500}
!6016 = !DILocation(line: 289, column: 1, scope: !5458)
!6017 = !{i64 2147653616, i64 2147653659, i64 2147653699}
!6018 = !DILocation(line: 290, column: 1, scope: !5458)
!6019 = !{i64 2147653788, i64 2147653831, i64 2147653871}
!6020 = !DILocation(line: 291, column: 1, scope: !5458)
!6021 = !{i64 2147653981, i64 2147654024, i64 2147654064}
!6022 = !DILocation(line: 292, column: 1, scope: !5458)
!6023 = !{i64 2147654153, i64 2147654196, i64 2147654236}
!6024 = !DILocation(line: 293, column: 1, scope: !5458)
!6025 = !{i64 2147654343, i64 2147654386, i64 2147654426}
!6026 = !DILocation(line: 294, column: 1, scope: !5458)
!6027 = !{i64 2147654536, i64 2147654579, i64 2147654619}
!6028 = !DILocation(line: 295, column: 1, scope: !5458)
!6029 = !{i64 2147654732, i64 2147654775, i64 2147654815}
!6030 = !DILocation(line: 296, column: 1, scope: !5458)
!6031 = !{i64 2147654895, i64 2147654938, i64 2147654978}
!6032 = !DILocation(line: 297, column: 1, scope: !5458)
!6033 = !{i64 2147655097, i64 2147655140, i64 2147655180}
!6034 = !DILocation(line: 298, column: 1, scope: !5458)
!6035 = !{i64 2147655308, i64 2147655351, i64 2147655391}
!6036 = !DILocation(line: 299, column: 1, scope: !5458)
!6037 = !{i64 2147659574, i64 2147659617, i64 2147659657}
!6038 = !DILocation(line: 300, column: 1, scope: !5458)
!6039 = !{i64 2147659782, i64 2147659825, i64 2147659865}
!6040 = !DILocation(line: 301, column: 1, scope: !5458)
!6041 = !{i64 2147659975, i64 2147660018, i64 2147660058}
!6042 = !DILocation(line: 302, column: 1, scope: !5458)
!6043 = !{i64 2147660162, i64 2147660205, i64 2147660245}
!6044 = !DILocation(line: 303, column: 1, scope: !5458)
!6045 = !{i64 2147660328, i64 2147660371, i64 2147660411}
!6046 = !DILocation(line: 304, column: 1, scope: !5458)
!6047 = !{i64 2147660555, i64 2147660598, i64 2147660638}
!6048 = !DILocation(line: 305, column: 1, scope: !5458)
!6049 = !{i64 2147660772, i64 2147660815, i64 2147660855}
!6050 = !DILocation(line: 306, column: 1, scope: !5458)
!6051 = !{i64 2147660998, i64 2147661041, i64 2147661081}
!6052 = !DILocation(line: 307, column: 1, scope: !5458)
!6053 = !{i64 2147661203, i64 2147661246, i64 2147661286}
!6054 = !DILocation(line: 308, column: 1, scope: !5458)
!6055 = !{i64 2147661420, i64 2147661463, i64 2147661503}
!6056 = !DILocation(line: 309, column: 1, scope: !5458)
!6057 = !{i64 2147661712, i64 2147661755, i64 2147661795}
!6058 = !DILocation(line: 310, column: 1, scope: !5458)
!6059 = !{i64 2147661944, i64 2147661987, i64 2147662027}
!6060 = !DILocation(line: 311, column: 1, scope: !5458)
!6061 = !{i64 2147662161, i64 2147662204, i64 2147662244}
!6062 = !DILocation(line: 312, column: 1, scope: !5458)
!6063 = !{i64 2147662368, i64 2147662411, i64 2147662451}
!6064 = !DILocation(line: 313, column: 1, scope: !5458)
!6065 = !{i64 2147662569, i64 2147662612, i64 2147662652}
!6066 = !DILocation(line: 314, column: 1, scope: !5458)
!6067 = !{i64 2147662801, i64 2147662844, i64 2147662884}
!6068 = !DILocation(line: 315, column: 1, scope: !5458)
!6069 = !{i64 2147663009, i64 2147663052, i64 2147663092}
!6070 = !DILocation(line: 316, column: 1, scope: !5458)
!6071 = !{i64 2147663199, i64 2147663242, i64 2147663282}
!6072 = !DILocation(line: 317, column: 1, scope: !5458)
!6073 = !{i64 2147663425, i64 2147663468, i64 2147663508}
!6074 = !DILocation(line: 318, column: 1, scope: !5458)
!6075 = !{i64 2147663614, i64 2147663657, i64 2147663697}
!6076 = !DILocation(line: 319, column: 1, scope: !5458)
!6077 = !{i64 2147663885, i64 2147663928, i64 2147663968}
!6078 = !DILocation(line: 320, column: 1, scope: !5458)
!6079 = !{i64 2147664105, i64 2147664148, i64 2147664188}
!6080 = !DILocation(line: 321, column: 1, scope: !5458)
!6081 = !{i64 2147664358, i64 2147664401, i64 2147664441}
!6082 = !DILocation(line: 322, column: 1, scope: !5458)
!6083 = !{i64 2147664566, i64 2147664609, i64 2147664649}
!6084 = !DILocation(line: 323, column: 1, scope: !5458)
!6085 = !{i64 2147664798, i64 2147664841, i64 2147664881}
!6086 = !DILocation(line: 324, column: 1, scope: !5458)
!6087 = !{i64 2147665009, i64 2147665052, i64 2147665092}
!6088 = !DILocation(line: 325, column: 1, scope: !5458)
!6089 = !{i64 2147665199, i64 2147665242, i64 2147665282}
!6090 = !DILocation(line: 326, column: 1, scope: !5458)
!6091 = !{i64 2147665413, i64 2147665456, i64 2147665496}
!6092 = !DILocation(line: 327, column: 1, scope: !5458)
!6093 = !{i64 2147665612, i64 2147665655, i64 2147665695}
!6094 = !DILocation(line: 328, column: 1, scope: !5458)
!6095 = !{i64 2147665799, i64 2147665842, i64 2147665882}
!6096 = !DILocation(line: 329, column: 1, scope: !5458)
!6097 = !{i64 2147666007, i64 2147666050, i64 2147666090}
!6098 = !DILocation(line: 330, column: 1, scope: !5458)
!6099 = !{i64 2147666236, i64 2147666279, i64 2147666319}
!6100 = !DILocation(line: 331, column: 1, scope: !5458)
!6101 = !{i64 2147666438, i64 2147666481, i64 2147666521}
!6102 = !DILocation(line: 332, column: 1, scope: !5458)
!6103 = !{i64 2147666637, i64 2147666680, i64 2147666720}
!6104 = !DILocation(line: 333, column: 1, scope: !5458)
!6105 = !{i64 2147666854, i64 2147666897, i64 2147666937}
!6106 = !DILocation(line: 335, column: 1, scope: !5458)
!6107 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !324, file: !324, line: 30, type: !331, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6108)
!6108 = !{!6109, !6110}
!6109 = !DILocalVariable(name: "arg", arg: 1, scope: !6107, file: !324, line: 30, type: !333)
!6110 = !DILocalVariable(name: "key", scope: !6107, file: !324, line: 32, type: !110)
!6111 = !DILocation(line: 0, scope: !6107)
!6112 = !DILocation(line: 37, column: 2, scope: !6107)
!6113 = !DILocation(line: 38, column: 2, scope: !6107)
!6114 = !DILocation(line: 55, column: 2, scope: !6115, inlinedAt: !6122)
!6115 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6116, file: !6116, line: 42, type: !6117, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6119)
!6116 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6117 = !DISubroutineType(types: !6118)
!6118 = !{!32}
!6119 = !{!6120, !6121}
!6120 = !DILocalVariable(name: "key", scope: !6115, file: !6116, line: 44, type: !32)
!6121 = !DILocalVariable(name: "tmp", scope: !6115, file: !6116, line: 53, type: !32)
!6122 = distinct !DILocation(line: 40, column: 8, scope: !6107)
!6123 = !{i64 1937343}
!6124 = !DILocation(line: 0, scope: !6115, inlinedAt: !6122)
!6125 = !DILocalVariable(name: "key", arg: 1, scope: !6126, file: !6116, line: 84, type: !32)
!6126 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6116, file: !6116, line: 84, type: !6127, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6129)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{null, !32}
!6129 = !{!6125}
!6130 = !DILocation(line: 0, scope: !6126, inlinedAt: !6131)
!6131 = distinct !DILocation(line: 47, column: 2, scope: !6107)
!6132 = !DILocation(line: 95, column: 2, scope: !6126, inlinedAt: !6131)
!6133 = !{i64 1938160}
!6134 = !DILocation(line: 51, column: 18, scope: !6107)
!6135 = !DILocation(line: 53, column: 2, scope: !6107)
!6136 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6137, file: !6137, line: 1609, type: !3116, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2050)
!6137 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6138 = !DILocation(line: 1611, column: 3, scope: !6136)
!6139 = !DILocation(line: 1612, column: 1, scope: !6136)
!6140 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6137, file: !6137, line: 1629, type: !3116, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2050)
!6141 = !DILocation(line: 1631, column: 3, scope: !6140)
!6142 = !DILocation(line: 1632, column: 1, scope: !6140)
!6143 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !361, file: !361, line: 26, type: !367, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !6144)
!6144 = !{!6145}
!6145 = !DILocalVariable(name: "dev", arg: 1, scope: !6143, file: !361, line: 26, type: !369)
!6146 = !DILocation(line: 0, scope: !6143)
!6147 = !DILocation(line: 68, column: 2, scope: !6143)
!6148 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6149, file: !6149, line: 14, type: !4412, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6150)
!6149 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6150 = !{!6151, !6152}
!6151 = !DILocalVariable(name: "fmt", arg: 1, scope: !6148, file: !6149, line: 14, type: !279)
!6152 = !DILocalVariable(name: "ap", scope: !6148, file: !6149, line: 16, type: !6153)
!6153 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3418, line: 99, baseType: !6154)
!6154 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3418, line: 40, baseType: !6155)
!6155 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6149, baseType: !6156)
!6156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6157)
!6157 = !{!6158}
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6156, file: !6149, line: 16, baseType: !107, size: 32)
!6159 = !DILocation(line: 0, scope: !6148)
!6160 = !DILocation(line: 16, column: 2, scope: !6148)
!6161 = !DILocation(line: 16, column: 10, scope: !6148)
!6162 = !DILocation(line: 18, column: 2, scope: !6148)
!6163 = !DILocation(line: 19, column: 2, scope: !6148)
!6164 = !DILocation(line: 20, column: 2, scope: !6148)
!6165 = !DILocation(line: 21, column: 1, scope: !6148)
!6166 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6149, file: !6149, line: 23, type: !6167, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6169)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{null, !279, !6153}
!6169 = !{!6170, !6171}
!6170 = !DILocalVariable(name: "fmt", arg: 1, scope: !6166, file: !6149, line: 23, type: !279)
!6171 = !DILocalVariable(name: "ap", arg: 2, scope: !6166, file: !6149, line: 23, type: !6153)
!6172 = !DILocation(line: 0, scope: !6166)
!6173 = !DILocation(line: 25, column: 2, scope: !6166)
!6174 = !DILocation(line: 26, column: 1, scope: !6166)
!6175 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6149, file: !6149, line: 52, type: !6176, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6178)
!6176 = !DISubroutineType(types: !6177)
!6177 = !{null, !109, !13, !234}
!6178 = !{!6179, !6180, !6181, !6182}
!6179 = !DILocalVariable(name: "level", arg: 1, scope: !6175, file: !6149, line: 52, type: !109)
!6180 = !DILocalVariable(name: "data", arg: 2, scope: !6175, file: !6149, line: 52, type: !13)
!6181 = !DILocalVariable(name: "size", arg: 3, scope: !6175, file: !6149, line: 52, type: !234)
!6182 = !DILocalVariable(name: "data_buffer", scope: !6175, file: !6149, line: 54, type: !279)
!6183 = !DILocation(line: 0, scope: !6175)
!6184 = !DILocation(line: 55, column: 14, scope: !6175)
!6185 = !DILocation(line: 55, column: 2, scope: !6175)
!6186 = !DILocation(line: 56, column: 3, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6175, file: !6149, line: 55, column: 20)
!6188 = !DILocation(line: 57, column: 3, scope: !6187)
!6189 = !DILocation(line: 59, column: 7, scope: !6187)
!6190 = distinct !{!6190, !6185, !6191}
!6191 = !DILocation(line: 65, column: 2, scope: !6175)
!6192 = !DILocation(line: 66, column: 1, scope: !6175)
!6193 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6194, file: !6194, line: 175, type: !6195, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6197)
!6194 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6195 = !DISubroutineType(types: !6196)
!6196 = !{!150, !109}
!6197 = !{!6198}
!6198 = !DILocalVariable(name: "level", arg: 1, scope: !6193, file: !6194, line: 175, type: !109)
!6199 = !DILocation(line: 0, scope: !6193)
!6200 = !DILocation(line: 177, column: 2, scope: !6193)
!6201 = !DILocation(line: 189, column: 1, scope: !6193)
!6202 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6149, file: !6149, line: 28, type: !6203, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6205)
!6203 = !DISubroutineType(types: !6204)
!6204 = !{null, !279, !234}
!6205 = !{!6206, !6207, !6208, !6210, !6212}
!6206 = !DILocalVariable(name: "data", arg: 1, scope: !6202, file: !6149, line: 28, type: !279)
!6207 = !DILocalVariable(name: "length", arg: 2, scope: !6202, file: !6149, line: 28, type: !234)
!6208 = !DILocalVariable(name: "i", scope: !6209, file: !6149, line: 30, type: !234)
!6209 = distinct !DILexicalBlock(scope: !6202, file: !6149, line: 30, column: 2)
!6210 = !DILocalVariable(name: "i", scope: !6211, file: !6149, line: 40, type: !234)
!6211 = distinct !DILexicalBlock(scope: !6202, file: !6149, line: 40, column: 2)
!6212 = !DILocalVariable(name: "c", scope: !6213, file: !6149, line: 42, type: !181)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !6149, line: 41, column: 19)
!6214 = distinct !DILexicalBlock(scope: !6215, file: !6149, line: 41, column: 7)
!6215 = distinct !DILexicalBlock(scope: !6216, file: !6149, line: 40, column: 54)
!6216 = distinct !DILexicalBlock(scope: !6211, file: !6149, line: 40, column: 2)
!6217 = !DILocation(line: 0, scope: !6202)
!6218 = !DILocation(line: 0, scope: !6209)
!6219 = !DILocation(line: 30, column: 2, scope: !6209)
!6220 = !DILocation(line: 38, column: 2, scope: !6202)
!6221 = !DILocation(line: 0, scope: !6211)
!6222 = !DILocation(line: 40, column: 2, scope: !6211)
!6223 = !DILocation(line: 31, column: 9, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6225, file: !6149, line: 31, column: 7)
!6225 = distinct !DILexicalBlock(scope: !6226, file: !6149, line: 30, column: 54)
!6226 = distinct !DILexicalBlock(scope: !6209, file: !6149, line: 30, column: 2)
!6227 = !DILocation(line: 31, column: 7, scope: !6225)
!6228 = !DILocation(line: 32, column: 35, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6224, file: !6149, line: 31, column: 19)
!6230 = !DILocation(line: 32, column: 20, scope: !6229)
!6231 = !DILocation(line: 32, column: 4, scope: !6229)
!6232 = !DILocation(line: 33, column: 3, scope: !6229)
!6233 = !DILocation(line: 34, column: 4, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6224, file: !6149, line: 33, column: 10)
!6235 = !DILocation(line: 30, column: 50, scope: !6226)
!6236 = !DILocation(line: 30, column: 24, scope: !6226)
!6237 = distinct !{!6237, !6219, !6238}
!6238 = !DILocation(line: 36, column: 2, scope: !6209)
!6239 = !DILocation(line: 49, column: 2, scope: !6202)
!6240 = !DILocation(line: 50, column: 1, scope: !6202)
!6241 = !DILocation(line: 41, column: 9, scope: !6214)
!6242 = !DILocation(line: 41, column: 7, scope: !6215)
!6243 = !DILocation(line: 42, column: 22, scope: !6213)
!6244 = !DILocation(line: 0, scope: !6213)
!6245 = !DILocation(line: 44, column: 25, scope: !6213)
!6246 = !DILocation(line: 44, column: 17, scope: !6213)
!6247 = !DILocation(line: 44, column: 33, scope: !6213)
!6248 = !DILocation(line: 44, column: 4, scope: !6213)
!6249 = !DILocation(line: 45, column: 3, scope: !6213)
!6250 = !DILocation(line: 46, column: 4, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6214, file: !6149, line: 45, column: 10)
!6252 = !DILocation(line: 40, column: 50, scope: !6216)
!6253 = !DILocation(line: 40, column: 24, scope: !6216)
!6254 = distinct !{!6254, !6222, !6255}
!6255 = !DILocation(line: 48, column: 2, scope: !6211)
!6256 = distinct !DISubprogram(name: "isprint", scope: !5202, file: !5202, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6257)
!6257 = !{!6258}
!6258 = !DILocalVariable(name: "c", arg: 1, scope: !6256, file: !5202, line: 37, type: !109)
!6259 = !DILocation(line: 0, scope: !6256)
!6260 = !DILocation(line: 39, column: 38, scope: !6256)
!6261 = !DILocation(line: 39, column: 2, scope: !6256)
!6262 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6263, file: !6263, line: 57, type: !6264, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !6310)
!6263 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6264 = !DISubroutineType(types: !6265)
!6265 = !{null, !32, !6266}
!6266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6267, size: 32)
!6267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6268)
!6268 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2696, line: 141, baseType: !6269)
!6269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2696, line: 97, size: 256, elements: !6270)
!6270 = !{!6271}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6269, file: !2696, line: 107, baseType: !6272, size: 256)
!6272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2696, line: 98, size: 256, elements: !6273)
!6273 = !{!6274, !6279, !6284, !6289, !6294, !6299, !6304, !6309}
!6274 = !DIDerivedType(tag: DW_TAG_member, scope: !6272, file: !2696, line: 99, baseType: !6275, size: 32)
!6275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6272, file: !2696, line: 99, size: 32, elements: !6276)
!6276 = !{!6277, !6278}
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6275, file: !2696, line: 99, baseType: !110, size: 32)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6275, file: !2696, line: 99, baseType: !110, size: 32)
!6279 = !DIDerivedType(tag: DW_TAG_member, scope: !6272, file: !2696, line: 100, baseType: !6280, size: 32, offset: 32)
!6280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6272, file: !2696, line: 100, size: 32, elements: !6281)
!6281 = !{!6282, !6283}
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6280, file: !2696, line: 100, baseType: !110, size: 32)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6280, file: !2696, line: 100, baseType: !110, size: 32)
!6284 = !DIDerivedType(tag: DW_TAG_member, scope: !6272, file: !2696, line: 101, baseType: !6285, size: 32, offset: 64)
!6285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6272, file: !2696, line: 101, size: 32, elements: !6286)
!6286 = !{!6287, !6288}
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6285, file: !2696, line: 101, baseType: !110, size: 32)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6285, file: !2696, line: 101, baseType: !110, size: 32)
!6289 = !DIDerivedType(tag: DW_TAG_member, scope: !6272, file: !2696, line: 102, baseType: !6290, size: 32, offset: 96)
!6290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6272, file: !2696, line: 102, size: 32, elements: !6291)
!6291 = !{!6292, !6293}
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6290, file: !2696, line: 102, baseType: !110, size: 32)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6290, file: !2696, line: 102, baseType: !110, size: 32)
!6294 = !DIDerivedType(tag: DW_TAG_member, scope: !6272, file: !2696, line: 103, baseType: !6295, size: 32, offset: 128)
!6295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6272, file: !2696, line: 103, size: 32, elements: !6296)
!6296 = !{!6297, !6298}
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6295, file: !2696, line: 103, baseType: !110, size: 32)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6295, file: !2696, line: 103, baseType: !110, size: 32)
!6299 = !DIDerivedType(tag: DW_TAG_member, scope: !6272, file: !2696, line: 104, baseType: !6300, size: 32, offset: 160)
!6300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6272, file: !2696, line: 104, size: 32, elements: !6301)
!6301 = !{!6302, !6303}
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6300, file: !2696, line: 104, baseType: !110, size: 32)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6300, file: !2696, line: 104, baseType: !110, size: 32)
!6304 = !DIDerivedType(tag: DW_TAG_member, scope: !6272, file: !2696, line: 105, baseType: !6305, size: 32, offset: 192)
!6305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6272, file: !2696, line: 105, size: 32, elements: !6306)
!6306 = !{!6307, !6308}
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6305, file: !2696, line: 105, baseType: !110, size: 32)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6305, file: !2696, line: 105, baseType: !110, size: 32)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6272, file: !2696, line: 106, baseType: !110, size: 32, offset: 224)
!6310 = !{!6311, !6312}
!6311 = !DILocalVariable(name: "reason", arg: 1, scope: !6262, file: !6263, line: 57, type: !32)
!6312 = !DILocalVariable(name: "esf", arg: 2, scope: !6262, file: !6263, line: 57, type: !6266)
!6313 = !DILocation(line: 0, scope: !6262)
!6314 = !DILocation(line: 60, column: 10, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6262, file: !6263, line: 60, column: 6)
!6316 = !DILocation(line: 60, column: 6, scope: !6262)
!6317 = !DILocation(line: 61, column: 3, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6315, file: !6263, line: 60, column: 19)
!6319 = !DILocation(line: 62, column: 2, scope: !6318)
!6320 = !DILocation(line: 63, column: 2, scope: !6262)
!6321 = !DILocation(line: 64, column: 1, scope: !6262)
!6322 = distinct !DISubprogram(name: "esf_dump", scope: !6263, file: !6263, line: 20, type: !6323, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !6325)
!6323 = !DISubroutineType(types: !6324)
!6324 = !{null, !6266}
!6325 = !{!6326}
!6326 = !DILocalVariable(name: "esf", arg: 1, scope: !6322, file: !6263, line: 20, type: !6266)
!6327 = !DILocation(line: 0, scope: !6322)
!6328 = !DILocation(line: 22, column: 2, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !6263, line: 22, column: 2)
!6330 = distinct !DILexicalBlock(scope: !6331, file: !6263, line: 22, column: 2)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !6263, line: 22, column: 2)
!6332 = distinct !DILexicalBlock(scope: !6322, file: !6263, line: 22, column: 2)
!6333 = !DILocation(line: 24, column: 2, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !6263, line: 24, column: 2)
!6335 = distinct !DILexicalBlock(scope: !6336, file: !6263, line: 24, column: 2)
!6336 = distinct !DILexicalBlock(scope: !6337, file: !6263, line: 24, column: 2)
!6337 = distinct !DILexicalBlock(scope: !6322, file: !6263, line: 24, column: 2)
!6338 = !DILocation(line: 26, column: 2, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !6263, line: 26, column: 2)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !6263, line: 26, column: 2)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !6263, line: 26, column: 2)
!6342 = distinct !DILexicalBlock(scope: !6322, file: !6263, line: 26, column: 2)
!6343 = !DILocation(line: 53, column: 2, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !6263, line: 53, column: 2)
!6345 = distinct !DILexicalBlock(scope: !6346, file: !6263, line: 53, column: 2)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !6263, line: 53, column: 2)
!6347 = distinct !DILexicalBlock(scope: !6322, file: !6263, line: 53, column: 2)
!6348 = !DILocation(line: 55, column: 1, scope: !6322)
!6349 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6263, file: !6263, line: 82, type: !6350, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !6365)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{null, !6266, !6352}
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 32)
!6353 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6354)
!6354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6355)
!6355 = !{!6356, !6357, !6358, !6359, !6360, !6361, !6362, !6363, !6364}
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6354, file: !211, line: 26, baseType: !110, size: 32)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6354, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6354, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6354, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6354, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6354, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6354, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6354, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6354, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6365 = !{!6366, !6367, !6368}
!6366 = !DILocalVariable(name: "esf", arg: 1, scope: !6349, file: !6263, line: 82, type: !6266)
!6367 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6349, file: !6263, line: 82, type: !6352)
!6368 = !DILocalVariable(name: "reason", scope: !6349, file: !6263, line: 88, type: !32)
!6369 = !DILocation(line: 0, scope: !6349)
!6370 = !DILocation(line: 88, column: 35, scope: !6349)
!6371 = !DILocation(line: 108, column: 2, scope: !6349)
!6372 = !DILocation(line: 131, column: 1, scope: !6349)
!6373 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6263, file: !6263, line: 133, type: !6374, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !6376)
!6374 = !DISubroutineType(types: !6375)
!6375 = !{null, !107}
!6376 = !{!6377, !6378, !6379}
!6377 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6373, file: !6263, line: 133, type: !107)
!6378 = !DILocalVariable(name: "ssf_contents", scope: !6373, file: !6263, line: 135, type: !867)
!6379 = !DILocalVariable(name: "oops_esf", scope: !6373, file: !6263, line: 136, type: !6268)
!6380 = !DILocation(line: 0, scope: !6373)
!6381 = !DILocation(line: 136, column: 2, scope: !6373)
!6382 = !DILocation(line: 136, column: 15, scope: !6373)
!6383 = !DILocation(line: 139, column: 22, scope: !6373)
!6384 = !DILocation(line: 139, column: 17, scope: !6373)
!6385 = !DILocation(line: 139, column: 20, scope: !6373)
!6386 = !DILocation(line: 141, column: 2, scope: !6373)
!6387 = !DILocation(line: 142, column: 2, scope: !6373)
!6388 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6389, file: !6389, line: 40, type: !6127, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6390)
!6389 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6390 = !{!6391}
!6391 = !DILocalVariable(name: "irq", arg: 1, scope: !6388, file: !6389, line: 40, type: !32)
!6392 = !DILocation(line: 0, scope: !6388)
!6393 = !DILocation(line: 42, column: 2, scope: !6388)
!6394 = !DILocation(line: 43, column: 1, scope: !6388)
!6395 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !535, file: !535, line: 1684, type: !6396, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6398)
!6396 = !DISubroutineType(types: !6397)
!6397 = !{null, !770}
!6398 = !{!6399}
!6399 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6395, file: !535, line: 1684, type: !770)
!6400 = !DILocation(line: 0, scope: !6395)
!6401 = !DILocation(line: 1686, column: 23, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6395, file: !535, line: 1686, column: 7)
!6403 = !DILocation(line: 1686, column: 7, scope: !6395)
!6404 = !DILocation(line: 1688, column: 5, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6402, file: !535, line: 1687, column: 3)
!6406 = !{i64 2150445074}
!6407 = !DILocation(line: 1689, column: 81, scope: !6405)
!6408 = !DILocation(line: 1689, column: 60, scope: !6405)
!6409 = !DILocation(line: 1689, column: 34, scope: !6405)
!6410 = !DILocation(line: 1689, column: 5, scope: !6405)
!6411 = !DILocation(line: 1689, column: 43, scope: !6405)
!6412 = !DILocation(line: 1690, column: 5, scope: !6405)
!6413 = !{i64 2150445188}
!6414 = !DILocation(line: 1691, column: 3, scope: !6405)
!6415 = !DILocation(line: 1692, column: 1, scope: !6395)
!6416 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6389, file: !6389, line: 45, type: !6127, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6417)
!6417 = !{!6418}
!6418 = !DILocalVariable(name: "irq", arg: 1, scope: !6416, file: !6389, line: 45, type: !32)
!6419 = !DILocation(line: 0, scope: !6416)
!6420 = !DILocation(line: 47, column: 2, scope: !6416)
!6421 = !DILocation(line: 48, column: 1, scope: !6416)
!6422 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !535, file: !535, line: 1722, type: !6396, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6423)
!6423 = !{!6424}
!6424 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6422, file: !535, line: 1722, type: !770)
!6425 = !DILocation(line: 0, scope: !6422)
!6426 = !DILocation(line: 1724, column: 23, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6422, file: !535, line: 1724, column: 7)
!6428 = !DILocation(line: 1724, column: 7, scope: !6422)
!6429 = !DILocation(line: 1726, column: 81, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6427, file: !535, line: 1725, column: 3)
!6431 = !DILocation(line: 1726, column: 60, scope: !6430)
!6432 = !DILocation(line: 1726, column: 34, scope: !6430)
!6433 = !DILocation(line: 1726, column: 5, scope: !6430)
!6434 = !DILocation(line: 1726, column: 43, scope: !6430)
!6435 = !DILocation(line: 271, column: 3, scope: !6436, inlinedAt: !6438)
!6436 = distinct !DISubprogram(name: "__DSB", scope: !6437, file: !6437, line: 269, type: !3116, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !2050)
!6437 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6438 = distinct !DILocation(line: 1727, column: 5, scope: !6430)
!6439 = !{i64 2899457}
!6440 = !DILocation(line: 260, column: 3, scope: !6441, inlinedAt: !6442)
!6441 = distinct !DISubprogram(name: "__ISB", scope: !6437, file: !6437, line: 258, type: !3116, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !2050)
!6442 = distinct !DILocation(line: 1728, column: 5, scope: !6430)
!6443 = !{i64 2899174}
!6444 = !DILocation(line: 1729, column: 3, scope: !6430)
!6445 = !DILocation(line: 1730, column: 1, scope: !6422)
!6446 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6389, file: !6389, line: 50, type: !6447, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6449)
!6447 = !DISubroutineType(types: !6448)
!6448 = !{!109, !32}
!6449 = !{!6450}
!6450 = !DILocalVariable(name: "irq", arg: 1, scope: !6446, file: !6389, line: 50, type: !32)
!6451 = !DILocation(line: 0, scope: !6446)
!6452 = !DILocation(line: 52, column: 20, scope: !6446)
!6453 = !DILocation(line: 52, column: 9, scope: !6446)
!6454 = !DILocation(line: 52, column: 41, scope: !6446)
!6455 = !DILocation(line: 52, column: 39, scope: !6446)
!6456 = !DILocation(line: 52, column: 2, scope: !6446)
!6457 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6389, file: !6389, line: 64, type: !6458, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6460)
!6458 = !DISubroutineType(types: !6459)
!6459 = !{null, !32, !32, !110}
!6460 = !{!6461, !6462, !6463}
!6461 = !DILocalVariable(name: "irq", arg: 1, scope: !6457, file: !6389, line: 64, type: !32)
!6462 = !DILocalVariable(name: "prio", arg: 2, scope: !6457, file: !6389, line: 64, type: !32)
!6463 = !DILocalVariable(name: "flags", arg: 3, scope: !6457, file: !6389, line: 64, type: !110)
!6464 = !DILocation(line: 0, scope: !6457)
!6465 = !DILocation(line: 83, column: 8, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6467, file: !6389, line: 82, column: 9)
!6467 = distinct !DILexicalBlock(scope: !6457, file: !6389, line: 76, column: 6)
!6468 = !DILocation(line: 91, column: 2, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !6389, line: 91, column: 2)
!6470 = distinct !DILexicalBlock(scope: !6457, file: !6389, line: 91, column: 2)
!6471 = !DILocation(line: 91, column: 2, scope: !6470)
!6472 = !DILocation(line: 91, column: 2, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6469, file: !6389, line: 91, column: 2)
!6474 = !DILocation(line: 95, column: 2, scope: !6457)
!6475 = !DILocation(line: 96, column: 1, scope: !6457)
!6476 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6477, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6479)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{null, !770, !110}
!6479 = !{!6480, !6481}
!6480 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6476, file: !535, line: 1814, type: !770)
!6481 = !DILocalVariable(name: "priority", arg: 2, scope: !6476, file: !535, line: 1814, type: !110)
!6482 = !DILocation(line: 0, scope: !6476)
!6483 = !DILocation(line: 0, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6476, file: !535, line: 1816, column: 7)
!6485 = !DILocation(line: 1816, column: 7, scope: !6476)
!6486 = !DILocation(line: 1824, column: 1, scope: !6476)
!6487 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6389, file: !6389, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6488)
!6488 = !{!6489}
!6489 = !DILocalVariable(name: "unused", arg: 1, scope: !6487, file: !6389, line: 155, type: !13)
!6490 = !DILocation(line: 0, scope: !6487)
!6491 = !DILocation(line: 159, column: 2, scope: !6487)
!6492 = !DILocation(line: 160, column: 1, scope: !6487)
!6493 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6494, file: !6494, line: 87, type: !3116, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2633, retainedNodes: !2050)
!6494 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6495 = !DILocation(line: 89, column: 2, scope: !6493)
!6496 = !DILocation(line: 90, column: 2, scope: !6493)
!6497 = !DILocation(line: 91, column: 1, scope: !6493)
!6498 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6494, file: !6494, line: 23, type: !3116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!6499 = !DISubprogram(name: "z_arm_int_exit", scope: !6500, file: !6500, line: 153, type: !3116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!6500 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6501 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6502, file: !6502, line: 256, type: !3116, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2635, retainedNodes: !2050)
!6502 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6503 = !DILocation(line: 258, column: 2, scope: !6501)
!6504 = !DILocation(line: 260, column: 2, scope: !6501)
!6505 = !DILocation(line: 262, column: 2, scope: !6501)
!6506 = !DILocation(line: 263, column: 2, scope: !6501)
!6507 = !DILocation(line: 267, column: 2, scope: !6501)
!6508 = !DILocation(line: 268, column: 2, scope: !6501)
!6509 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6502, file: !6502, line: 53, type: !3116, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2635, retainedNodes: !2050)
!6510 = !DILocation(line: 55, column: 12, scope: !6509)
!6511 = !DILocation(line: 271, column: 3, scope: !6512, inlinedAt: !6513)
!6512 = distinct !DISubprogram(name: "__DSB", scope: !6437, file: !6437, line: 269, type: !3116, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2635, retainedNodes: !2050)
!6513 = distinct !DILocation(line: 56, column: 2, scope: !6509)
!6514 = !{i64 2898128}
!6515 = !DILocation(line: 260, column: 3, scope: !6516, inlinedAt: !6517)
!6516 = distinct !DISubprogram(name: "__ISB", scope: !6437, file: !6437, line: 258, type: !3116, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2635, retainedNodes: !2050)
!6517 = distinct !DILocation(line: 57, column: 2, scope: !6509)
!6518 = !{i64 2897845}
!6519 = !DILocation(line: 58, column: 1, scope: !6509)
!6520 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6502, file: !6502, line: 96, type: !3116, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2635, retainedNodes: !2050)
!6521 = !DILocation(line: 103, column: 13, scope: !6520)
!6522 = !DILocation(line: 975, column: 3, scope: !6523, inlinedAt: !6528)
!6523 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6437, file: !6437, line: 971, type: !6524, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2635, retainedNodes: !6526)
!6524 = !DISubroutineType(types: !6525)
!6525 = !{!110}
!6526 = !{!6527}
!6527 = !DILocalVariable(name: "result", scope: !6523, file: !6437, line: 973, type: !110)
!6528 = distinct !DILocation(line: 189, column: 16, scope: !6520)
!6529 = !{i64 2918958}
!6530 = !DILocation(line: 0, scope: !6523, inlinedAt: !6528)
!6531 = !DILocation(line: 189, column: 32, scope: !6520)
!6532 = !DILocalVariable(name: "control", arg: 1, scope: !6533, file: !6437, line: 1001, type: !110)
!6533 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6437, file: !6437, line: 1001, type: !6534, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2635, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{null, !110}
!6536 = !{!6532}
!6537 = !DILocation(line: 0, scope: !6533, inlinedAt: !6538)
!6538 = distinct !DILocation(line: 189, column: 2, scope: !6520)
!6539 = !DILocation(line: 1003, column: 3, scope: !6533, inlinedAt: !6538)
!6540 = !{i64 2919678}
!6541 = !DILocation(line: 260, column: 3, scope: !6516, inlinedAt: !6542)
!6542 = distinct !DILocation(line: 1004, column: 3, scope: !6533, inlinedAt: !6538)
!6543 = !DILocation(line: 191, column: 1, scope: !6520)
!6544 = distinct !DISubprogram(name: "arch_swap", scope: !6545, file: !6545, line: 33, type: !6447, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !6546)
!6545 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6546 = !{!6547}
!6547 = !DILocalVariable(name: "key", arg: 1, scope: !6544, file: !6545, line: 33, type: !32)
!6548 = !DILocation(line: 0, scope: !6544)
!6549 = !DILocation(line: 36, column: 2, scope: !6544)
!6550 = !DILocation(line: 36, column: 17, scope: !6544)
!6551 = !DILocation(line: 36, column: 25, scope: !6544)
!6552 = !DILocation(line: 37, column: 37, scope: !6544)
!6553 = !DILocation(line: 37, column: 17, scope: !6544)
!6554 = !DILocation(line: 37, column: 35, scope: !6544)
!6555 = !DILocation(line: 41, column: 12, scope: !6544)
!6556 = !DILocalVariable(name: "key", arg: 1, scope: !6557, file: !6116, line: 84, type: !32)
!6557 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6116, file: !6116, line: 84, type: !6127, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !6558)
!6558 = !{!6556}
!6559 = !DILocation(line: 0, scope: !6557, inlinedAt: !6560)
!6560 = distinct !DILocation(line: 44, column: 2, scope: !6544)
!6561 = !DILocation(line: 95, column: 2, scope: !6557, inlinedAt: !6560)
!6562 = !{i64 2040488}
!6563 = !DILocation(line: 53, column: 9, scope: !6544)
!6564 = !DILocation(line: 53, column: 24, scope: !6544)
!6565 = !DILocation(line: 53, column: 2, scope: !6544)
!6566 = distinct !DISubprogram(name: "arch_new_thread", scope: !6567, file: !6567, line: 56, type: !6568, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6678)
!6567 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6568 = !DISubroutineType(types: !6569)
!6569 = !{null, !6570, !6673, !285, !3383, !107, !107, !107}
!6570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6571, size: 32)
!6571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !6572)
!6572 = !{!6573, !6631, !6643, !6644, !6645, !6646, !6647, !6653, !6668}
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6571, file: !158, line: 247, baseType: !6574, size: 384)
!6574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !6575)
!6575 = !{!6576, !6600, !6607, !6608, !6609, !6618, !6619, !6620}
!6576 = !DIDerivedType(tag: DW_TAG_member, scope: !6574, file: !158, line: 60, baseType: !6577, size: 64)
!6577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6574, file: !158, line: 60, size: 64, elements: !6578)
!6578 = !{!6579, !6594}
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6577, file: !158, line: 61, baseType: !6580, size: 64)
!6580 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6581)
!6581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6582)
!6582 = !{!6583, !6589}
!6583 = !DIDerivedType(tag: DW_TAG_member, scope: !6581, file: !127, line: 38, baseType: !6584, size: 32)
!6584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6581, file: !127, line: 38, size: 32, elements: !6585)
!6585 = !{!6586, !6588}
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6584, file: !127, line: 39, baseType: !6587, size: 32)
!6587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6581, size: 32)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6584, file: !127, line: 40, baseType: !6587, size: 32)
!6589 = !DIDerivedType(tag: DW_TAG_member, scope: !6581, file: !127, line: 42, baseType: !6590, size: 32, offset: 32)
!6590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6581, file: !127, line: 42, size: 32, elements: !6591)
!6591 = !{!6592, !6593}
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6590, file: !127, line: 43, baseType: !6587, size: 32)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6590, file: !127, line: 44, baseType: !6587, size: 32)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6577, file: !158, line: 62, baseType: !6595, size: 64)
!6595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !6596)
!6596 = !{!6597}
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6595, file: !170, line: 50, baseType: !6598, size: 64)
!6598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6599, size: 64, elements: !175)
!6599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6595, size: 32)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6574, file: !158, line: 68, baseType: !6601, size: 32, offset: 64)
!6601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6602, size: 32)
!6602 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6603)
!6603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6604)
!6604 = !{!6605}
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6603, file: !122, line: 232, baseType: !6606, size: 64)
!6606 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6581)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6574, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6574, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!6609 = !DIDerivedType(tag: DW_TAG_member, scope: !6574, file: !158, line: 90, baseType: !6610, size: 16, offset: 112)
!6610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6574, file: !158, line: 90, size: 16, elements: !6611)
!6611 = !{!6612, !6617}
!6612 = !DIDerivedType(tag: DW_TAG_member, scope: !6610, file: !158, line: 91, baseType: !6613, size: 16)
!6613 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6610, file: !158, line: 91, size: 16, elements: !6614)
!6614 = !{!6615, !6616}
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6613, file: !158, line: 96, baseType: !190, size: 8)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6613, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6610, file: !158, line: 100, baseType: !194, size: 16)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6574, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6574, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6574, file: !158, line: 131, baseType: !6621, size: 192, offset: 192)
!6621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6622)
!6622 = !{!6623, !6624, !6630}
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6621, file: !122, line: 245, baseType: !6580, size: 64)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6621, file: !122, line: 246, baseType: !6625, size: 32, offset: 64)
!6625 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6626)
!6626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6627, size: 32)
!6627 = !DISubroutineType(types: !6628)
!6628 = !{null, !6629}
!6629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6621, size: 32)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6621, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6571, file: !158, line: 250, baseType: !6632, size: 288, offset: 384)
!6632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6633)
!6633 = !{!6634, !6635, !6636, !6637, !6638, !6639, !6640, !6641, !6642}
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6632, file: !211, line: 26, baseType: !110, size: 32)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6632, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6632, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6632, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6632, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6632, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6632, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6632, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6632, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6571, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6571, file: !158, line: 256, baseType: !6602, size: 64, offset: 704)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6571, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6571, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6571, file: !158, line: 300, baseType: !6648, size: 96, offset: 1056)
!6648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !6649)
!6649 = !{!6650, !6651, !6652}
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6648, file: !158, line: 153, baseType: !22, size: 32)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6648, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6648, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6571, file: !158, line: 325, baseType: !6654, size: 32, offset: 1152)
!6654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6655, size: 32)
!6655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6656)
!6656 = !{!6657, !6663, !6664}
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6655, file: !118, line: 5074, baseType: !6658, size: 96)
!6658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !6659)
!6659 = !{!6660, !6661, !6662}
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6658, file: !243, line: 57, baseType: !246, size: 32)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6658, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6658, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6655, file: !118, line: 5075, baseType: !6602, size: 64, offset: 96)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6655, file: !118, line: 5076, baseType: !6665, size: 32, offset: 160)
!6665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !6666)
!6666 = !{!6667}
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6665, file: !253, line: 52, baseType: !22, size: 32)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6571, file: !158, line: 343, baseType: !6669, size: 64, offset: 1184)
!6669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !6670)
!6670 = !{!6671, !6672}
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6669, file: !211, line: 63, baseType: !110, size: 32)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6669, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!6673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6674, size: 32)
!6674 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3382, line: 44, baseType: !6675)
!6675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !6676)
!6676 = !{!6677}
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6675, file: !147, line: 48, baseType: !150, size: 8)
!6678 = !{!6679, !6680, !6681, !6682, !6683, !6684, !6685, !6686}
!6679 = !DILocalVariable(name: "thread", arg: 1, scope: !6566, file: !6567, line: 56, type: !6570)
!6680 = !DILocalVariable(name: "stack", arg: 2, scope: !6566, file: !6567, line: 56, type: !6673)
!6681 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6566, file: !6567, line: 57, type: !285)
!6682 = !DILocalVariable(name: "entry", arg: 4, scope: !6566, file: !6567, line: 57, type: !3383)
!6683 = !DILocalVariable(name: "p1", arg: 5, scope: !6566, file: !6567, line: 58, type: !107)
!6684 = !DILocalVariable(name: "p2", arg: 6, scope: !6566, file: !6567, line: 58, type: !107)
!6685 = !DILocalVariable(name: "p3", arg: 7, scope: !6566, file: !6567, line: 58, type: !107)
!6686 = !DILocalVariable(name: "iframe", scope: !6566, file: !6567, line: 60, type: !2694)
!6687 = !DILocation(line: 0, scope: !6566)
!6688 = !DILocation(line: 85, column: 11, scope: !6566)
!6689 = !DILocation(line: 93, column: 10, scope: !6566)
!6690 = !DILocation(line: 98, column: 13, scope: !6566)
!6691 = !DILocation(line: 100, column: 15, scope: !6566)
!6692 = !DILocation(line: 100, column: 10, scope: !6566)
!6693 = !DILocation(line: 100, column: 13, scope: !6566)
!6694 = !DILocation(line: 101, column: 15, scope: !6566)
!6695 = !DILocation(line: 101, column: 10, scope: !6566)
!6696 = !DILocation(line: 101, column: 13, scope: !6566)
!6697 = !DILocation(line: 102, column: 15, scope: !6566)
!6698 = !DILocation(line: 102, column: 10, scope: !6566)
!6699 = !DILocation(line: 102, column: 13, scope: !6566)
!6700 = !DILocation(line: 103, column: 15, scope: !6566)
!6701 = !DILocation(line: 103, column: 10, scope: !6566)
!6702 = !DILocation(line: 103, column: 13, scope: !6566)
!6703 = !DILocation(line: 106, column: 10, scope: !6566)
!6704 = !DILocation(line: 106, column: 15, scope: !6566)
!6705 = !DILocation(line: 122, column: 29, scope: !6566)
!6706 = !DILocation(line: 122, column: 23, scope: !6566)
!6707 = !DILocation(line: 122, column: 27, scope: !6566)
!6708 = !DILocation(line: 123, column: 15, scope: !6566)
!6709 = !DILocation(line: 123, column: 23, scope: !6566)
!6710 = !DILocation(line: 143, column: 1, scope: !6566)
!6711 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6567, file: !6567, line: 385, type: !6712, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6715)
!6712 = !DISubroutineType(types: !6713)
!6713 = !{!110, !6714, !6714}
!6714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6715 = !{!6716, !6717, !6718, !6721}
!6716 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6711, file: !6567, line: 385, type: !6714)
!6717 = !DILocalVariable(name: "psp", arg: 2, scope: !6711, file: !6567, line: 385, type: !6714)
!6718 = !DILocalVariable(name: "thread", scope: !6711, file: !6567, line: 388, type: !6719)
!6719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6720, size: 32)
!6720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6571)
!6721 = !DILocalVariable(name: "guard_len", scope: !6711, file: !6567, line: 405, type: !110)
!6722 = !DILocation(line: 0, scope: !6711)
!6723 = !DILocation(line: 388, column: 34, scope: !6711)
!6724 = !DILocation(line: 390, column: 13, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6711, file: !6567, line: 390, column: 6)
!6726 = !DILocation(line: 390, column: 6, scope: !6711)
!6727 = !DILocation(line: 438, column: 6, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6711, file: !6567, line: 438, column: 6)
!6729 = !DILocation(line: 438, column: 6, scope: !6711)
!6730 = !DILocation(line: 442, column: 3, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6728, file: !6567, line: 440, column: 22)
!6732 = !DILocation(line: 455, column: 1, scope: !6711)
!6733 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6567, file: !6567, line: 530, type: !6734, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6736)
!6734 = !DISubroutineType(types: !6735)
!6735 = !{null, !6570, !285, !3383}
!6736 = !{!6737, !6738, !6739}
!6737 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6733, file: !6567, line: 530, type: !6570)
!6738 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6733, file: !6567, line: 530, type: !285)
!6739 = !DILocalVariable(name: "_main", arg: 3, scope: !6733, file: !6567, line: 531, type: !3383)
!6740 = !DILocation(line: 0, scope: !6733)
!6741 = !DILocation(line: 535, column: 11, scope: !6733)
!6742 = !DILocation(line: 560, column: 2, scope: !6733)
!6743 = !DILocation(line: 576, column: 2, scope: !6733)
!6744 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6745 = !DILocation(line: 603, column: 2, scope: !6733)
!6746 = distinct !DISubprogram(name: "z_arm_fault", scope: !6747, file: !6747, line: 1036, type: !6748, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6763)
!6747 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6748 = !DISubroutineType(types: !6749)
!6749 = !{null, !110, !110, !110, !6750}
!6750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6751, size: 32)
!6751 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6752)
!6752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6753)
!6753 = !{!6754, !6755, !6756, !6757, !6758, !6759, !6760, !6761, !6762}
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6752, file: !211, line: 26, baseType: !110, size: 32)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6752, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6752, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6752, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6752, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6752, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6752, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6752, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6752, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6763 = !{!6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773}
!6764 = !DILocalVariable(name: "msp", arg: 1, scope: !6746, file: !6747, line: 1036, type: !110)
!6765 = !DILocalVariable(name: "psp", arg: 2, scope: !6746, file: !6747, line: 1036, type: !110)
!6766 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6746, file: !6747, line: 1036, type: !110)
!6767 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6746, file: !6747, line: 1037, type: !6750)
!6768 = !DILocalVariable(name: "reason", scope: !6746, file: !6747, line: 1039, type: !110)
!6769 = !DILocalVariable(name: "fault", scope: !6746, file: !6747, line: 1040, type: !109)
!6770 = !DILocalVariable(name: "recoverable", scope: !6746, file: !6747, line: 1041, type: !347)
!6771 = !DILocalVariable(name: "nested_exc", scope: !6746, file: !6747, line: 1041, type: !347)
!6772 = !DILocalVariable(name: "esf", scope: !6746, file: !6747, line: 1042, type: !2762)
!6773 = !DILocalVariable(name: "esf_copy", scope: !6746, file: !6747, line: 1047, type: !2763)
!6774 = !DILocation(line: 0, scope: !6746)
!6775 = !DILocation(line: 1040, column: 19, scope: !6746)
!6776 = !DILocation(line: 1041, column: 2, scope: !6746)
!6777 = !DILocation(line: 1047, column: 2, scope: !6746)
!6778 = !DILocation(line: 1047, column: 15, scope: !6746)
!6779 = !DILocalVariable(name: "key", arg: 1, scope: !6780, file: !6116, line: 84, type: !32)
!6780 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6116, file: !6116, line: 84, type: !6127, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6781)
!6781 = !{!6779}
!6782 = !DILocation(line: 0, scope: !6780, inlinedAt: !6783)
!6783 = distinct !DILocation(line: 1050, column: 2, scope: !6746)
!6784 = !DILocation(line: 95, column: 2, scope: !6780, inlinedAt: !6783)
!6785 = !{i64 2073732}
!6786 = !DILocation(line: 1055, column: 9, scope: !6746)
!6787 = !DILocation(line: 1056, column: 2, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6789, file: !6747, line: 1056, column: 2)
!6789 = distinct !DILexicalBlock(scope: !6746, file: !6747, line: 1056, column: 2)
!6790 = !DILocation(line: 1056, column: 2, scope: !6789)
!6791 = !DILocation(line: 1056, column: 2, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6788, file: !6747, line: 1056, column: 2)
!6793 = !DILocation(line: 1040, column: 24, scope: !6746)
!6794 = !DILocation(line: 1063, column: 11, scope: !6746)
!6795 = !DILocation(line: 1064, column: 6, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6746, file: !6747, line: 1064, column: 6)
!6797 = !{i8 0, i8 2}
!6798 = !DILocation(line: 1064, column: 6, scope: !6746)
!6799 = !DILocation(line: 1070, column: 20, scope: !6746)
!6800 = !DILocation(line: 1070, column: 2, scope: !6746)
!6801 = !DILocation(line: 1089, column: 6, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6746, file: !6747, line: 1089, column: 6)
!6803 = !DILocation(line: 0, scope: !6802)
!6804 = !DILocation(line: 1089, column: 6, scope: !6746)
!6805 = !DILocation(line: 1090, column: 28, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6747, line: 1090, column: 7)
!6807 = distinct !DILexicalBlock(scope: !6802, file: !6747, line: 1089, column: 18)
!6808 = !DILocation(line: 1090, column: 44, scope: !6806)
!6809 = !DILocation(line: 1090, column: 7, scope: !6807)
!6810 = !DILocation(line: 1091, column: 24, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6806, file: !6747, line: 1090, column: 50)
!6812 = !DILocation(line: 1092, column: 3, scope: !6811)
!6813 = !DILocation(line: 1094, column: 23, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6802, file: !6747, line: 1093, column: 9)
!6815 = !DILocation(line: 1097, column: 2, scope: !6746)
!6816 = !DILocation(line: 1098, column: 1, scope: !6746)
!6817 = distinct !DISubprogram(name: "get_esf", scope: !6747, file: !6747, line: 894, type: !6818, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6821)
!6818 = !DISubroutineType(types: !6819)
!6819 = !{!2762, !110, !110, !110, !6820}
!6820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!6821 = !{!6822, !6823, !6824, !6825, !6826, !6827}
!6822 = !DILocalVariable(name: "msp", arg: 1, scope: !6817, file: !6747, line: 894, type: !110)
!6823 = !DILocalVariable(name: "psp", arg: 2, scope: !6817, file: !6747, line: 894, type: !110)
!6824 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6817, file: !6747, line: 894, type: !110)
!6825 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6817, file: !6747, line: 895, type: !6820)
!6826 = !DILocalVariable(name: "alternative_state_exc", scope: !6817, file: !6747, line: 897, type: !347)
!6827 = !DILocalVariable(name: "ptr_esf", scope: !6817, file: !6747, line: 898, type: !2762)
!6828 = !DILocation(line: 0, scope: !6817)
!6829 = !DILocation(line: 900, column: 14, scope: !6817)
!6830 = !DILocation(line: 902, column: 49, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6817, file: !6747, line: 902, column: 6)
!6832 = !DILocation(line: 902, column: 6, scope: !6817)
!6833 = !DILocation(line: 983, column: 44, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6817, file: !6747, line: 983, column: 6)
!6835 = !DILocation(line: 985, column: 3, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6747, line: 985, column: 3)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !6747, line: 985, column: 3)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !6747, line: 985, column: 3)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6747, line: 985, column: 3)
!6840 = distinct !DILexicalBlock(scope: !6834, file: !6747, line: 984, column: 47)
!6841 = !DILocation(line: 986, column: 3, scope: !6840)
!6842 = !DILocation(line: 983, column: 18, scope: !6834)
!6843 = !DILocation(line: 991, column: 7, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !6747, line: 990, column: 30)
!6845 = distinct !DILexicalBlock(scope: !6817, file: !6747, line: 990, column: 6)
!6846 = !DILocation(line: 998, column: 16, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6747, line: 995, column: 10)
!6848 = distinct !DILexicalBlock(scope: !6844, file: !6747, line: 991, column: 7)
!6849 = !DILocation(line: 1002, column: 2, scope: !6817)
!6850 = !DILocation(line: 1003, column: 1, scope: !6817)
!6851 = distinct !DISubprogram(name: "fault_handle", scope: !6747, file: !6747, line: 786, type: !6852, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6854)
!6852 = !DISubroutineType(types: !6853)
!6853 = !{!110, !2762, !109, !6820}
!6854 = !{!6855, !6856, !6857, !6858}
!6855 = !DILocalVariable(name: "esf", arg: 1, scope: !6851, file: !6747, line: 786, type: !2762)
!6856 = !DILocalVariable(name: "fault", arg: 2, scope: !6851, file: !6747, line: 786, type: !109)
!6857 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6851, file: !6747, line: 786, type: !6820)
!6858 = !DILocalVariable(name: "reason", scope: !6851, file: !6747, line: 788, type: !110)
!6859 = !DILocation(line: 0, scope: !6851)
!6860 = !DILocation(line: 790, column: 15, scope: !6851)
!6861 = !DILocation(line: 792, column: 2, scope: !6851)
!6862 = !DILocation(line: 794, column: 12, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6851, file: !6747, line: 792, column: 17)
!6864 = !DILocation(line: 795, column: 3, scope: !6863)
!6865 = !DILocation(line: 800, column: 12, scope: !6863)
!6866 = !DILocation(line: 801, column: 3, scope: !6863)
!6867 = !DILocation(line: 803, column: 12, scope: !6863)
!6868 = !DILocation(line: 804, column: 3, scope: !6863)
!6869 = !DILocation(line: 806, column: 12, scope: !6863)
!6870 = !DILocation(line: 807, column: 3, scope: !6863)
!6871 = !DILocation(line: 814, column: 3, scope: !6863)
!6872 = !DILocation(line: 815, column: 3, scope: !6863)
!6873 = !DILocation(line: 820, column: 3, scope: !6863)
!6874 = !DILocation(line: 821, column: 3, scope: !6863)
!6875 = !DILocation(line: 829, column: 2, scope: !6851)
!6876 = distinct !DISubprogram(name: "hard_fault", scope: !6747, file: !6747, line: 709, type: !6877, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6879)
!6877 = !DISubroutineType(types: !6878)
!6878 = !{!110, !2762, !6820}
!6879 = !{!6880, !6881, !6882}
!6880 = !DILocalVariable(name: "esf", arg: 1, scope: !6876, file: !6747, line: 709, type: !2762)
!6881 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6876, file: !6747, line: 709, type: !6820)
!6882 = !DILocalVariable(name: "reason", scope: !6876, file: !6747, line: 711, type: !110)
!6883 = !DILocation(line: 0, scope: !6876)
!6884 = !DILocation(line: 713, column: 2, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !6747, line: 713, column: 2)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !6747, line: 713, column: 2)
!6887 = distinct !DILexicalBlock(scope: !6888, file: !6747, line: 713, column: 2)
!6888 = distinct !DILexicalBlock(scope: !6876, file: !6747, line: 713, column: 2)
!6889 = !DILocation(line: 732, column: 15, scope: !6876)
!6890 = !DILocation(line: 734, column: 12, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6876, file: !6747, line: 734, column: 6)
!6892 = !DILocation(line: 734, column: 17, scope: !6891)
!6893 = !DILocation(line: 734, column: 41, scope: !6891)
!6894 = !DILocation(line: 734, column: 6, scope: !6876)
!6895 = !DILocation(line: 735, column: 3, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !6747, line: 735, column: 3)
!6897 = distinct !DILexicalBlock(scope: !6898, file: !6747, line: 735, column: 3)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !6747, line: 735, column: 3)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !6747, line: 735, column: 3)
!6900 = distinct !DILexicalBlock(scope: !6891, file: !6747, line: 734, column: 47)
!6901 = !DILocation(line: 736, column: 2, scope: !6900)
!6902 = !DILocation(line: 736, column: 19, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6891, file: !6747, line: 736, column: 13)
!6904 = !DILocation(line: 736, column: 49, scope: !6903)
!6905 = !DILocation(line: 736, column: 13, scope: !6891)
!6906 = !DILocation(line: 737, column: 3, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6747, line: 737, column: 3)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !6747, line: 737, column: 3)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6747, line: 737, column: 3)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !6747, line: 737, column: 3)
!6911 = distinct !DILexicalBlock(scope: !6903, file: !6747, line: 736, column: 55)
!6912 = !DILocation(line: 738, column: 2, scope: !6911)
!6913 = !DILocation(line: 738, column: 19, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6903, file: !6747, line: 738, column: 13)
!6915 = !DILocation(line: 738, column: 24, scope: !6914)
!6916 = !DILocation(line: 738, column: 47, scope: !6914)
!6917 = !DILocation(line: 738, column: 13, scope: !6903)
!6918 = !DILocation(line: 739, column: 3, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !6747, line: 739, column: 3)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !6747, line: 739, column: 3)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !6747, line: 739, column: 3)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !6747, line: 739, column: 3)
!6923 = distinct !DILexicalBlock(scope: !6914, file: !6747, line: 738, column: 53)
!6924 = !DILocation(line: 740, column: 7, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6923, file: !6747, line: 740, column: 7)
!6926 = !DILocation(line: 740, column: 7, scope: !6923)
!6927 = !DILocation(line: 741, column: 4, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6929, file: !6747, line: 741, column: 4)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !6747, line: 741, column: 4)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !6747, line: 741, column: 4)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6747, line: 741, column: 4)
!6932 = distinct !DILexicalBlock(scope: !6925, file: !6747, line: 740, column: 38)
!6933 = !DILocation(line: 742, column: 24, scope: !6932)
!6934 = !DILocation(line: 743, column: 3, scope: !6932)
!6935 = !DILocation(line: 743, column: 20, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6925, file: !6747, line: 743, column: 14)
!6937 = !DILocation(line: 743, column: 25, scope: !6936)
!6938 = !DILocation(line: 743, column: 52, scope: !6936)
!6939 = !DILocation(line: 743, column: 14, scope: !6925)
!6940 = !DILocation(line: 744, column: 13, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6936, file: !6747, line: 743, column: 58)
!6942 = !DILocation(line: 745, column: 3, scope: !6941)
!6943 = !DILocation(line: 745, column: 20, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6936, file: !6747, line: 745, column: 14)
!6945 = !DILocation(line: 745, column: 25, scope: !6944)
!6946 = !DILocation(line: 745, column: 52, scope: !6944)
!6947 = !DILocation(line: 745, column: 14, scope: !6936)
!6948 = !DILocation(line: 746, column: 13, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6944, file: !6747, line: 745, column: 58)
!6950 = !DILocation(line: 747, column: 3, scope: !6949)
!6951 = !DILocation(line: 747, column: 20, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6944, file: !6747, line: 747, column: 14)
!6953 = !DILocation(line: 747, column: 52, scope: !6952)
!6954 = !DILocation(line: 747, column: 14, scope: !6944)
!6955 = !DILocation(line: 748, column: 13, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6952, file: !6747, line: 747, column: 58)
!6957 = !DILocation(line: 754, column: 4, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6747, line: 754, column: 4)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6747, line: 754, column: 4)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6747, line: 754, column: 4)
!6961 = distinct !DILexicalBlock(scope: !6952, file: !6747, line: 753, column: 10)
!6962 = !DILocation(line: 758, column: 3, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !6747, line: 758, column: 3)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !6747, line: 758, column: 3)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6747, line: 758, column: 3)
!6966 = distinct !DILexicalBlock(scope: !6914, file: !6747, line: 757, column: 9)
!6967 = !DILocation(line: 766, column: 2, scope: !6876)
!6968 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6747, file: !6747, line: 229, type: !6852, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6969)
!6969 = !{!6970, !6971, !6972, !6973, !6974, !6975, !6978}
!6970 = !DILocalVariable(name: "esf", arg: 1, scope: !6968, file: !6747, line: 229, type: !2762)
!6971 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6968, file: !6747, line: 229, type: !109)
!6972 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6968, file: !6747, line: 230, type: !6820)
!6973 = !DILocalVariable(name: "reason", scope: !6968, file: !6747, line: 232, type: !110)
!6974 = !DILocalVariable(name: "mmfar", scope: !6968, file: !6747, line: 233, type: !110)
!6975 = !DILocalVariable(name: "temp", scope: !6976, file: !6747, line: 254, type: !110)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6747, line: 244, column: 48)
!6977 = distinct !DILexicalBlock(scope: !6968, file: !6747, line: 244, column: 6)
!6978 = !DILocalVariable(name: "min_stack_ptr", scope: !6979, file: !6747, line: 309, type: !110)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !6747, line: 308, column: 43)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !6747, line: 308, column: 7)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6747, line: 289, column: 40)
!6982 = distinct !DILexicalBlock(scope: !6968, file: !6747, line: 288, column: 6)
!6983 = !DILocation(line: 0, scope: !6968)
!6984 = !DILocation(line: 235, column: 2, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6986, file: !6747, line: 235, column: 2)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !6747, line: 235, column: 2)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !6747, line: 235, column: 2)
!6988 = distinct !DILexicalBlock(scope: !6968, file: !6747, line: 235, column: 2)
!6989 = !DILocation(line: 237, column: 12, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6968, file: !6747, line: 237, column: 6)
!6991 = !DILocation(line: 237, column: 17, scope: !6990)
!6992 = !DILocation(line: 237, column: 41, scope: !6990)
!6993 = !DILocation(line: 237, column: 6, scope: !6968)
!6994 = !DILocation(line: 238, column: 3, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !6747, line: 238, column: 3)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6747, line: 238, column: 3)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !6747, line: 238, column: 3)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !6747, line: 238, column: 3)
!6999 = distinct !DILexicalBlock(scope: !6990, file: !6747, line: 237, column: 47)
!7000 = !DILocation(line: 240, column: 2, scope: !6999)
!7001 = !DILocation(line: 241, column: 12, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6968, file: !6747, line: 241, column: 6)
!7003 = !DILocation(line: 241, column: 17, scope: !7002)
!7004 = !DILocation(line: 241, column: 43, scope: !7002)
!7005 = !DILocation(line: 241, column: 6, scope: !6968)
!7006 = !DILocation(line: 242, column: 3, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !6747, line: 242, column: 3)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !6747, line: 242, column: 3)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !6747, line: 242, column: 3)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !6747, line: 242, column: 3)
!7011 = distinct !DILexicalBlock(scope: !7002, file: !6747, line: 241, column: 49)
!7012 = !DILocation(line: 243, column: 2, scope: !7011)
!7013 = !DILocation(line: 244, column: 12, scope: !6977)
!7014 = !DILocation(line: 244, column: 17, scope: !6977)
!7015 = !DILocation(line: 244, column: 42, scope: !6977)
!7016 = !DILocation(line: 244, column: 6, scope: !6968)
!7017 = !DILocation(line: 245, column: 3, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !6747, line: 245, column: 3)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !6747, line: 245, column: 3)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !6747, line: 245, column: 3)
!7021 = distinct !DILexicalBlock(scope: !6976, file: !6747, line: 245, column: 3)
!7022 = !DILocation(line: 254, column: 24, scope: !6976)
!7023 = !DILocation(line: 0, scope: !6976)
!7024 = !DILocation(line: 256, column: 13, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !6976, file: !6747, line: 256, column: 7)
!7026 = !DILocation(line: 256, column: 18, scope: !7025)
!7027 = !DILocation(line: 256, column: 44, scope: !7025)
!7028 = !DILocation(line: 256, column: 7, scope: !6976)
!7029 = !DILocation(line: 258, column: 4, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !6747, line: 258, column: 4)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !6747, line: 258, column: 4)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !6747, line: 258, column: 4)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !6747, line: 258, column: 4)
!7034 = distinct !DILexicalBlock(scope: !7025, file: !6747, line: 256, column: 50)
!7035 = !DILocation(line: 259, column: 24, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7034, file: !6747, line: 259, column: 8)
!7037 = !DILocation(line: 259, column: 8, scope: !7034)
!7038 = !DILocation(line: 261, column: 15, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7036, file: !6747, line: 259, column: 30)
!7040 = !DILocation(line: 262, column: 4, scope: !7039)
!7041 = !DILocation(line: 265, column: 12, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !6968, file: !6747, line: 265, column: 6)
!7043 = !DILocation(line: 265, column: 17, scope: !7042)
!7044 = !DILocation(line: 265, column: 42, scope: !7042)
!7045 = !DILocation(line: 265, column: 6, scope: !6968)
!7046 = !DILocation(line: 266, column: 3, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6747, line: 266, column: 3)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6747, line: 266, column: 3)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !6747, line: 266, column: 3)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !6747, line: 266, column: 3)
!7051 = distinct !DILexicalBlock(scope: !7042, file: !6747, line: 265, column: 48)
!7052 = !DILocation(line: 267, column: 2, scope: !7051)
!7053 = !DILocation(line: 269, column: 12, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !6968, file: !6747, line: 269, column: 6)
!7055 = !DILocation(line: 269, column: 17, scope: !7054)
!7056 = !DILocation(line: 269, column: 41, scope: !7054)
!7057 = !DILocation(line: 269, column: 6, scope: !6968)
!7058 = !DILocation(line: 270, column: 3, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6747, line: 270, column: 3)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !6747, line: 270, column: 3)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6747, line: 270, column: 3)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6747, line: 270, column: 3)
!7063 = distinct !DILexicalBlock(scope: !7054, file: !6747, line: 269, column: 47)
!7064 = !DILocation(line: 272, column: 2, scope: !7063)
!7065 = !DILocation(line: 288, column: 12, scope: !6982)
!7066 = !DILocation(line: 288, column: 17, scope: !6982)
!7067 = !DILocation(line: 288, column: 41, scope: !6982)
!7068 = !DILocation(line: 289, column: 9, scope: !6982)
!7069 = !DILocation(line: 289, column: 14, scope: !6982)
!7070 = !DILocation(line: 288, column: 6, scope: !6968)
!7071 = !DILocation(line: 308, column: 12, scope: !6980)
!7072 = !DILocation(line: 308, column: 17, scope: !6980)
!7073 = !DILocation(line: 308, column: 7, scope: !6981)
!7074 = !DILocation(line: 310, column: 6, scope: !6979)
!7075 = !DILocation(line: 309, column: 29, scope: !6979)
!7076 = !DILocation(line: 0, scope: !6979)
!7077 = !DILocation(line: 312, column: 8, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !6979, file: !6747, line: 312, column: 8)
!7079 = !DILocation(line: 312, column: 8, scope: !6979)
!7080 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7081, file: !6437, line: 1099, type: !110)
!7081 = distinct !DISubprogram(name: "__set_PSP", scope: !6437, file: !6437, line: 1099, type: !6534, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7082)
!7082 = !{!7080}
!7083 = !DILocation(line: 0, scope: !7081, inlinedAt: !7084)
!7084 = distinct !DILocation(line: 338, column: 5, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7078, file: !6747, line: 312, column: 23)
!7086 = !DILocation(line: 1101, column: 3, scope: !7081, inlinedAt: !7084)
!7087 = !{i64 2949097}
!7088 = !DILocation(line: 341, column: 4, scope: !7085)
!7089 = !DILocation(line: 342, column: 5, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !6747, line: 342, column: 5)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !6747, line: 342, column: 5)
!7092 = distinct !DILexicalBlock(scope: !7078, file: !6747, line: 341, column: 11)
!7093 = !DILocation(line: 342, column: 5, scope: !7091)
!7094 = !DILocation(line: 342, column: 5, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7090, file: !6747, line: 342, column: 5)
!7096 = !DILocation(line: 360, column: 12, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !6968, file: !6747, line: 360, column: 6)
!7098 = !DILocation(line: 360, column: 17, scope: !7097)
!7099 = !DILocation(line: 360, column: 41, scope: !7097)
!7100 = !DILocation(line: 360, column: 6, scope: !6968)
!7101 = !DILocation(line: 361, column: 14, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7097, file: !6747, line: 360, column: 47)
!7103 = !DILocation(line: 362, column: 2, scope: !7102)
!7104 = !DILocation(line: 366, column: 12, scope: !6968)
!7105 = !DILocation(line: 369, column: 15, scope: !6968)
!7106 = !DILocation(line: 371, column: 2, scope: !6968)
!7107 = distinct !DISubprogram(name: "bus_fault", scope: !6747, file: !6747, line: 383, type: !7108, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7110)
!7108 = !DISubroutineType(types: !7109)
!7109 = !{!109, !2762, !109, !6820}
!7110 = !{!7111, !7112, !7113, !7114, !7115}
!7111 = !DILocalVariable(name: "esf", arg: 1, scope: !7107, file: !6747, line: 383, type: !2762)
!7112 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7107, file: !6747, line: 383, type: !109)
!7113 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7107, file: !6747, line: 383, type: !6820)
!7114 = !DILocalVariable(name: "reason", scope: !7107, file: !6747, line: 385, type: !110)
!7115 = !DILocalVariable(name: "bfar", scope: !7116, file: !6747, line: 405, type: !110)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !6747, line: 395, column: 42)
!7117 = distinct !DILexicalBlock(scope: !7107, file: !6747, line: 395, column: 6)
!7118 = !DILocation(line: 0, scope: !7107)
!7119 = !DILocation(line: 387, column: 2, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !6747, line: 387, column: 2)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !6747, line: 387, column: 2)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !6747, line: 387, column: 2)
!7123 = distinct !DILexicalBlock(scope: !7107, file: !6747, line: 387, column: 2)
!7124 = !DILocation(line: 389, column: 11, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7107, file: !6747, line: 389, column: 6)
!7126 = !DILocation(line: 389, column: 16, scope: !7125)
!7127 = !DILocation(line: 389, column: 6, scope: !7107)
!7128 = !DILocation(line: 390, column: 3, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !6747, line: 390, column: 3)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !6747, line: 390, column: 3)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !6747, line: 390, column: 3)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !6747, line: 390, column: 3)
!7133 = distinct !DILexicalBlock(scope: !7125, file: !6747, line: 389, column: 39)
!7134 = !DILocation(line: 391, column: 2, scope: !7133)
!7135 = !DILocation(line: 392, column: 11, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7107, file: !6747, line: 392, column: 6)
!7137 = !DILocation(line: 392, column: 16, scope: !7136)
!7138 = !DILocation(line: 392, column: 6, scope: !7107)
!7139 = !DILocation(line: 393, column: 3, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7141, file: !6747, line: 393, column: 3)
!7141 = distinct !DILexicalBlock(scope: !7142, file: !6747, line: 393, column: 3)
!7142 = distinct !DILexicalBlock(scope: !7143, file: !6747, line: 393, column: 3)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !6747, line: 393, column: 3)
!7144 = distinct !DILexicalBlock(scope: !7136, file: !6747, line: 392, column: 41)
!7145 = !DILocation(line: 394, column: 2, scope: !7144)
!7146 = !DILocation(line: 395, column: 11, scope: !7117)
!7147 = !DILocation(line: 395, column: 16, scope: !7117)
!7148 = !DILocation(line: 395, column: 6, scope: !7107)
!7149 = !DILocation(line: 396, column: 3, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7151, file: !6747, line: 396, column: 3)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !6747, line: 396, column: 3)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !6747, line: 396, column: 3)
!7153 = distinct !DILexicalBlock(scope: !7116, file: !6747, line: 396, column: 3)
!7154 = !DILocation(line: 405, column: 3, scope: !7116)
!7155 = !DILocation(line: 0, scope: !7116)
!7156 = !DILocation(line: 407, column: 13, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7116, file: !6747, line: 407, column: 7)
!7158 = !DILocation(line: 407, column: 18, scope: !7157)
!7159 = !DILocation(line: 407, column: 44, scope: !7157)
!7160 = !DILocation(line: 407, column: 7, scope: !7116)
!7161 = !DILocation(line: 408, column: 4, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !6747, line: 408, column: 4)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !6747, line: 408, column: 4)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !6747, line: 408, column: 4)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !6747, line: 408, column: 4)
!7166 = distinct !DILexicalBlock(scope: !7157, file: !6747, line: 407, column: 50)
!7167 = !DILocation(line: 409, column: 24, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7166, file: !6747, line: 409, column: 8)
!7169 = !DILocation(line: 409, column: 8, scope: !7166)
!7170 = !DILocation(line: 411, column: 15, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7168, file: !6747, line: 409, column: 30)
!7172 = !DILocation(line: 412, column: 4, scope: !7171)
!7173 = !DILocation(line: 415, column: 11, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7107, file: !6747, line: 415, column: 6)
!7175 = !DILocation(line: 415, column: 16, scope: !7174)
!7176 = !DILocation(line: 415, column: 6, scope: !7107)
!7177 = !DILocation(line: 416, column: 3, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !6747, line: 416, column: 3)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !6747, line: 416, column: 3)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !6747, line: 416, column: 3)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !6747, line: 416, column: 3)
!7182 = distinct !DILexicalBlock(scope: !7174, file: !6747, line: 415, column: 44)
!7183 = !DILocation(line: 417, column: 2, scope: !7182)
!7184 = !DILocation(line: 418, column: 12, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7107, file: !6747, line: 418, column: 6)
!7186 = !DILocation(line: 418, column: 17, scope: !7185)
!7187 = !DILocation(line: 418, column: 41, scope: !7185)
!7188 = !DILocation(line: 418, column: 6, scope: !7107)
!7189 = !DILocation(line: 423, column: 18, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7185, file: !6747, line: 423, column: 13)
!7191 = !DILocation(line: 423, column: 23, scope: !7190)
!7192 = !DILocation(line: 423, column: 13, scope: !7185)
!7193 = !DILocation(line: 0, scope: !7185)
!7194 = !DILocation(line: 524, column: 12, scope: !7107)
!7195 = !DILocation(line: 526, column: 15, scope: !7107)
!7196 = !DILocation(line: 528, column: 2, scope: !7107)
!7197 = distinct !DISubprogram(name: "usage_fault", scope: !6747, file: !6747, line: 539, type: !7198, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7202)
!7198 = !DISubroutineType(types: !7199)
!7199 = !{!110, !7200}
!7200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7201, size: 32)
!7201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2763)
!7202 = !{!7203, !7204}
!7203 = !DILocalVariable(name: "esf", arg: 1, scope: !7197, file: !6747, line: 539, type: !7200)
!7204 = !DILocalVariable(name: "reason", scope: !7197, file: !6747, line: 541, type: !110)
!7205 = !DILocation(line: 0, scope: !7197)
!7206 = !DILocation(line: 543, column: 2, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7208, file: !6747, line: 543, column: 2)
!7208 = distinct !DILexicalBlock(scope: !7209, file: !6747, line: 543, column: 2)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !6747, line: 543, column: 2)
!7210 = distinct !DILexicalBlock(scope: !7197, file: !6747, line: 543, column: 2)
!7211 = !DILocation(line: 546, column: 12, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7197, file: !6747, line: 546, column: 6)
!7213 = !DILocation(line: 546, column: 17, scope: !7212)
!7214 = !DILocation(line: 546, column: 43, scope: !7212)
!7215 = !DILocation(line: 546, column: 6, scope: !7197)
!7216 = !DILocation(line: 547, column: 3, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !6747, line: 547, column: 3)
!7218 = distinct !DILexicalBlock(scope: !7219, file: !6747, line: 547, column: 3)
!7219 = distinct !DILexicalBlock(scope: !7220, file: !6747, line: 547, column: 3)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !6747, line: 547, column: 3)
!7221 = distinct !DILexicalBlock(scope: !7212, file: !6747, line: 546, column: 49)
!7222 = !DILocation(line: 548, column: 2, scope: !7221)
!7223 = !DILocation(line: 549, column: 12, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7197, file: !6747, line: 549, column: 6)
!7225 = !DILocation(line: 549, column: 17, scope: !7224)
!7226 = !DILocation(line: 549, column: 43, scope: !7224)
!7227 = !DILocation(line: 549, column: 6, scope: !7197)
!7228 = !DILocation(line: 550, column: 3, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7230, file: !6747, line: 550, column: 3)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !6747, line: 550, column: 3)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !6747, line: 550, column: 3)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !6747, line: 550, column: 3)
!7233 = distinct !DILexicalBlock(scope: !7224, file: !6747, line: 549, column: 49)
!7234 = !DILocation(line: 551, column: 2, scope: !7233)
!7235 = !DILocation(line: 567, column: 12, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7197, file: !6747, line: 567, column: 6)
!7237 = !DILocation(line: 567, column: 17, scope: !7236)
!7238 = !DILocation(line: 567, column: 38, scope: !7236)
!7239 = !DILocation(line: 567, column: 6, scope: !7197)
!7240 = !DILocation(line: 568, column: 3, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !6747, line: 568, column: 3)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !6747, line: 568, column: 3)
!7243 = distinct !DILexicalBlock(scope: !7244, file: !6747, line: 568, column: 3)
!7244 = distinct !DILexicalBlock(scope: !7245, file: !6747, line: 568, column: 3)
!7245 = distinct !DILexicalBlock(scope: !7236, file: !6747, line: 567, column: 44)
!7246 = !DILocation(line: 569, column: 2, scope: !7245)
!7247 = !DILocation(line: 570, column: 12, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7197, file: !6747, line: 570, column: 6)
!7249 = !DILocation(line: 570, column: 17, scope: !7248)
!7250 = !DILocation(line: 570, column: 39, scope: !7248)
!7251 = !DILocation(line: 570, column: 6, scope: !7197)
!7252 = !DILocation(line: 571, column: 3, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !6747, line: 571, column: 3)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !6747, line: 571, column: 3)
!7255 = distinct !DILexicalBlock(scope: !7256, file: !6747, line: 571, column: 3)
!7256 = distinct !DILexicalBlock(scope: !7257, file: !6747, line: 571, column: 3)
!7257 = distinct !DILexicalBlock(scope: !7248, file: !6747, line: 570, column: 45)
!7258 = !DILocation(line: 572, column: 2, scope: !7257)
!7259 = !DILocation(line: 573, column: 12, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7197, file: !6747, line: 573, column: 6)
!7261 = !DILocation(line: 573, column: 17, scope: !7260)
!7262 = !DILocation(line: 573, column: 42, scope: !7260)
!7263 = !DILocation(line: 573, column: 6, scope: !7197)
!7264 = !DILocation(line: 574, column: 3, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !6747, line: 574, column: 3)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !6747, line: 574, column: 3)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !6747, line: 574, column: 3)
!7268 = distinct !DILexicalBlock(scope: !7269, file: !6747, line: 574, column: 3)
!7269 = distinct !DILexicalBlock(scope: !7260, file: !6747, line: 573, column: 48)
!7270 = !DILocation(line: 575, column: 2, scope: !7269)
!7271 = !DILocation(line: 576, column: 12, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7197, file: !6747, line: 576, column: 6)
!7273 = !DILocation(line: 576, column: 17, scope: !7272)
!7274 = !DILocation(line: 576, column: 44, scope: !7272)
!7275 = !DILocation(line: 576, column: 6, scope: !7197)
!7276 = !DILocation(line: 577, column: 3, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7278, file: !6747, line: 577, column: 3)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !6747, line: 577, column: 3)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !6747, line: 577, column: 3)
!7280 = distinct !DILexicalBlock(scope: !7281, file: !6747, line: 577, column: 3)
!7281 = distinct !DILexicalBlock(scope: !7272, file: !6747, line: 576, column: 50)
!7282 = !DILocation(line: 578, column: 2, scope: !7281)
!7283 = !DILocation(line: 581, column: 12, scope: !7197)
!7284 = !DILocation(line: 583, column: 2, scope: !7197)
!7285 = distinct !DISubprogram(name: "debug_monitor", scope: !6747, file: !6747, line: 632, type: !7286, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7288)
!7286 = !DISubroutineType(types: !7287)
!7287 = !{null, !2762, !6820}
!7288 = !{!7289, !7290}
!7289 = !DILocalVariable(name: "esf", arg: 1, scope: !7285, file: !6747, line: 632, type: !2762)
!7290 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7285, file: !6747, line: 632, type: !6820)
!7291 = !DILocation(line: 0, scope: !7285)
!7292 = !DILocation(line: 634, column: 15, scope: !7285)
!7293 = !DILocation(line: 636, column: 2, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7295, file: !6747, line: 636, column: 2)
!7295 = distinct !DILexicalBlock(scope: !7296, file: !6747, line: 636, column: 2)
!7296 = distinct !DILexicalBlock(scope: !7297, file: !6747, line: 636, column: 2)
!7297 = distinct !DILexicalBlock(scope: !7285, file: !6747, line: 636, column: 2)
!7298 = !DILocation(line: 652, column: 1, scope: !7285)
!7299 = distinct !DISubprogram(name: "reserved_exception", scope: !6747, file: !6747, line: 776, type: !7300, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7302)
!7300 = !DISubroutineType(types: !7301)
!7301 = !{null, !7200, !109}
!7302 = !{!7303, !7304}
!7303 = !DILocalVariable(name: "esf", arg: 1, scope: !7299, file: !6747, line: 776, type: !7200)
!7304 = !DILocalVariable(name: "fault", arg: 2, scope: !7299, file: !6747, line: 776, type: !109)
!7305 = !DILocation(line: 0, scope: !7299)
!7306 = !DILocation(line: 780, column: 2, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7308, file: !6747, line: 780, column: 2)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !6747, line: 780, column: 2)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !6747, line: 780, column: 2)
!7310 = distinct !DILexicalBlock(scope: !7299, file: !6747, line: 780, column: 2)
!7311 = !DILocation(line: 783, column: 1, scope: !7299)
!7312 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6747, file: !6747, line: 658, type: !7313, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7315)
!7313 = !DISubroutineType(types: !7314)
!7314 = !{!347, !2762}
!7315 = !{!7316, !7317, !7318}
!7316 = !DILocalVariable(name: "esf", arg: 1, scope: !7312, file: !6747, line: 658, type: !2762)
!7317 = !DILocalVariable(name: "ret_addr", scope: !7312, file: !6747, line: 660, type: !2805)
!7318 = !DILocalVariable(name: "fault_insn", scope: !7312, file: !6747, line: 686, type: !194)
!7319 = !DILocation(line: 0, scope: !7312)
!7320 = !DILocation(line: 660, column: 46, scope: !7312)
!7321 = !DILocation(line: 660, column: 23, scope: !7312)
!7322 = !DILocation(line: 682, column: 11, scope: !7312)
!7323 = !DILocation(line: 271, column: 3, scope: !7324, inlinedAt: !7325)
!7324 = distinct !DISubprogram(name: "__DSB", scope: !6437, file: !6437, line: 269, type: !3116, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !2050)
!7325 = distinct !DILocation(line: 683, column: 2, scope: !7312)
!7326 = !{i64 2925232}
!7327 = !DILocation(line: 260, column: 3, scope: !7328, inlinedAt: !7329)
!7328 = distinct !DISubprogram(name: "__ISB", scope: !6437, file: !6437, line: 258, type: !3116, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !2050)
!7329 = distinct !DILocation(line: 684, column: 2, scope: !7312)
!7330 = !{i64 2924949}
!7331 = !DILocation(line: 686, column: 35, scope: !7312)
!7332 = !DILocation(line: 686, column: 24, scope: !7312)
!7333 = !DILocation(line: 688, column: 11, scope: !7312)
!7334 = !DILocation(line: 271, column: 3, scope: !7324, inlinedAt: !7335)
!7335 = distinct !DILocation(line: 689, column: 2, scope: !7312)
!7336 = !DILocation(line: 260, column: 3, scope: !7328, inlinedAt: !7337)
!7337 = distinct !DILocation(line: 690, column: 2, scope: !7312)
!7338 = !DILocation(line: 693, column: 45, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7312, file: !6747, line: 693, column: 6)
!7340 = !DILocation(line: 699, column: 1, scope: !7312)
!7341 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6747, file: !6747, line: 1107, type: !3116, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !2050)
!7342 = !DILocation(line: 1111, column: 11, scope: !7341)
!7343 = !DILocation(line: 1136, column: 1, scope: !7341)
!7344 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7345, file: !7345, line: 26, type: !3116, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !7346)
!7345 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7346 = !{!7347}
!7347 = !DILocalVariable(name: "irq", scope: !7344, file: !7345, line: 28, type: !109)
!7348 = !DILocation(line: 0, scope: !7344)
!7349 = !DILocation(line: 30, column: 2, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7344, file: !7345, line: 30, column: 2)
!7351 = !DILocation(line: 31, column: 3, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7353, file: !7345, line: 30, column: 39)
!7353 = distinct !DILexicalBlock(scope: !7350, file: !7345, line: 30, column: 2)
!7354 = !DILocation(line: 30, column: 35, scope: !7353)
!7355 = !DILocation(line: 30, column: 13, scope: !7353)
!7356 = distinct !{!7356, !7349, !7357}
!7357 = !DILocation(line: 32, column: 2, scope: !7350)
!7358 = !DILocation(line: 33, column: 1, scope: !7344)
!7359 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6477, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !7360)
!7360 = !{!7361, !7362}
!7361 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7359, file: !535, line: 1814, type: !770)
!7362 = !DILocalVariable(name: "priority", arg: 2, scope: !7359, file: !535, line: 1814, type: !110)
!7363 = !DILocation(line: 0, scope: !7359)
!7364 = !DILocation(line: 1816, column: 7, scope: !7359)
!7365 = !DILocation(line: 0, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7359, file: !535, line: 1816, column: 7)
!7367 = !DILocation(line: 1824, column: 1, scope: !7359)
!7368 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7369, file: !7369, line: 27, type: !7370, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7476)
!7369 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7370 = !DISubroutineType(types: !7371)
!7371 = !{null, !7372}
!7372 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !7373)
!7373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7374, size: 32)
!7374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !7375)
!7375 = !{!7376, !7434, !7446, !7447, !7448, !7449, !7450, !7456, !7471}
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7374, file: !158, line: 247, baseType: !7377, size: 384)
!7377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !7378)
!7378 = !{!7379, !7403, !7410, !7411, !7412, !7421, !7422, !7423}
!7379 = !DIDerivedType(tag: DW_TAG_member, scope: !7377, file: !158, line: 60, baseType: !7380, size: 64)
!7380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7377, file: !158, line: 60, size: 64, elements: !7381)
!7381 = !{!7382, !7397}
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7380, file: !158, line: 61, baseType: !7383, size: 64)
!7383 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7384)
!7384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7385)
!7385 = !{!7386, !7392}
!7386 = !DIDerivedType(tag: DW_TAG_member, scope: !7384, file: !127, line: 38, baseType: !7387, size: 32)
!7387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7384, file: !127, line: 38, size: 32, elements: !7388)
!7388 = !{!7389, !7391}
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7387, file: !127, line: 39, baseType: !7390, size: 32)
!7390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7384, size: 32)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7387, file: !127, line: 40, baseType: !7390, size: 32)
!7392 = !DIDerivedType(tag: DW_TAG_member, scope: !7384, file: !127, line: 42, baseType: !7393, size: 32, offset: 32)
!7393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7384, file: !127, line: 42, size: 32, elements: !7394)
!7394 = !{!7395, !7396}
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7393, file: !127, line: 43, baseType: !7390, size: 32)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7393, file: !127, line: 44, baseType: !7390, size: 32)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7380, file: !158, line: 62, baseType: !7398, size: 64)
!7398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !7399)
!7399 = !{!7400}
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7398, file: !170, line: 50, baseType: !7401, size: 64)
!7401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7402, size: 64, elements: !175)
!7402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7398, size: 32)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7377, file: !158, line: 68, baseType: !7404, size: 32, offset: 64)
!7404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7405, size: 32)
!7405 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7406)
!7406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7407)
!7407 = !{!7408}
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7406, file: !122, line: 232, baseType: !7409, size: 64)
!7409 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7384)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7377, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7377, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!7412 = !DIDerivedType(tag: DW_TAG_member, scope: !7377, file: !158, line: 90, baseType: !7413, size: 16, offset: 112)
!7413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7377, file: !158, line: 90, size: 16, elements: !7414)
!7414 = !{!7415, !7420}
!7415 = !DIDerivedType(tag: DW_TAG_member, scope: !7413, file: !158, line: 91, baseType: !7416, size: 16)
!7416 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7413, file: !158, line: 91, size: 16, elements: !7417)
!7417 = !{!7418, !7419}
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7416, file: !158, line: 96, baseType: !190, size: 8)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7416, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7413, file: !158, line: 100, baseType: !194, size: 16)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7377, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7377, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7377, file: !158, line: 131, baseType: !7424, size: 192, offset: 192)
!7424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7425)
!7425 = !{!7426, !7427, !7433}
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7424, file: !122, line: 245, baseType: !7383, size: 64)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7424, file: !122, line: 246, baseType: !7428, size: 32, offset: 64)
!7428 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7429)
!7429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7430, size: 32)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{null, !7432}
!7432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7424, size: 32)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7424, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7374, file: !158, line: 250, baseType: !7435, size: 288, offset: 384)
!7435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !7436)
!7436 = !{!7437, !7438, !7439, !7440, !7441, !7442, !7443, !7444, !7445}
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7435, file: !211, line: 26, baseType: !110, size: 32)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7435, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7435, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7435, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7435, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7435, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7435, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7435, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7435, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7374, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7374, file: !158, line: 256, baseType: !7405, size: 64, offset: 704)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7374, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7374, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7374, file: !158, line: 300, baseType: !7451, size: 96, offset: 1056)
!7451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !7452)
!7452 = !{!7453, !7454, !7455}
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7451, file: !158, line: 153, baseType: !22, size: 32)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7451, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7451, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7374, file: !158, line: 325, baseType: !7457, size: 32, offset: 1152)
!7457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7458, size: 32)
!7458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7459)
!7459 = !{!7460, !7466, !7467}
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7458, file: !118, line: 5074, baseType: !7461, size: 96)
!7461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !7462)
!7462 = !{!7463, !7464, !7465}
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7461, file: !243, line: 57, baseType: !246, size: 32)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7461, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7461, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7458, file: !118, line: 5075, baseType: !7405, size: 64, offset: 96)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7458, file: !118, line: 5076, baseType: !7468, size: 32, offset: 160)
!7468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !7469)
!7469 = !{!7470}
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7468, file: !253, line: 52, baseType: !22, size: 32)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7374, file: !158, line: 343, baseType: !7472, size: 64, offset: 1184)
!7472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !7473)
!7473 = !{!7474, !7475}
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7472, file: !211, line: 63, baseType: !110, size: 32)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7472, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!7476 = !{!7477}
!7477 = !DILocalVariable(name: "thread", arg: 1, scope: !7368, file: !7369, line: 27, type: !7372)
!7478 = !DILocation(line: 0, scope: !7368)
!7479 = !DILocation(line: 29, column: 6, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7368, file: !7369, line: 29, column: 6)
!7481 = !DILocation(line: 29, column: 15, scope: !7480)
!7482 = !DILocation(line: 29, column: 6, scope: !7368)
!7483 = !DILocation(line: 1031, column: 3, scope: !7484, inlinedAt: !7487)
!7484 = distinct !DISubprogram(name: "__get_IPSR", scope: !6437, file: !6437, line: 1027, type: !6524, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7485)
!7485 = !{!7486}
!7486 = !DILocalVariable(name: "result", scope: !7484, file: !6437, line: 1029, type: !110)
!7487 = distinct !DILocation(line: 48, column: 10, scope: !7488, inlinedAt: !7492)
!7488 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7489, file: !7489, line: 46, type: !7490, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !2050)
!7489 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7490 = !DISubroutineType(types: !7491)
!7491 = !{!347}
!7492 = distinct !DILocation(line: 30, column: 7, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !7369, line: 30, column: 7)
!7494 = distinct !DILexicalBlock(scope: !7480, file: !7369, line: 29, column: 26)
!7495 = !{i64 2914080}
!7496 = !DILocation(line: 0, scope: !7484, inlinedAt: !7487)
!7497 = !DILocation(line: 48, column: 9, scope: !7488, inlinedAt: !7492)
!7498 = !DILocation(line: 30, column: 7, scope: !7494)
!7499 = !DILocation(line: 42, column: 14, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7493, file: !7369, line: 30, column: 25)
!7501 = !DILocation(line: 48, column: 15, scope: !7500)
!7502 = !DILocation(line: 49, column: 3, scope: !7500)
!7503 = !DILocation(line: 52, column: 2, scope: !7368)
!7504 = !DILocation(line: 53, column: 1, scope: !7368)
!7505 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3116, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2050)
!7506 = !DILocation(line: 134, column: 2, scope: !7505)
!7507 = !DILocation(line: 156, column: 1, scope: !7505)
!7508 = !DILocation(line: 0, scope: !393)
!7509 = !DILocation(line: 289, column: 36, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7511 = !DILocation(line: 289, column: 42, scope: !7510)
!7512 = !DILocation(line: 300, column: 36, scope: !393)
!7513 = !DILocation(line: 301, column: 35, scope: !393)
!7514 = !DILocation(line: 302, column: 37, scope: !393)
!7515 = !DILocation(line: 311, column: 2, scope: !393)
!7516 = !DILocation(line: 316, column: 1, scope: !393)
!7517 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !563, file: !563, line: 180, type: !3116, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2050)
!7518 = !DILocation(line: 188, column: 12, scope: !7517)
!7519 = !DILocation(line: 271, column: 3, scope: !7520, inlinedAt: !7521)
!7520 = distinct !DISubprogram(name: "__DSB", scope: !6437, file: !6437, line: 269, type: !3116, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2050)
!7521 = distinct !DILocation(line: 192, column: 2, scope: !7517)
!7522 = !{i64 3090095}
!7523 = !DILocation(line: 260, column: 3, scope: !7524, inlinedAt: !7525)
!7524 = distinct !DISubprogram(name: "__ISB", scope: !6437, file: !6437, line: 258, type: !3116, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2050)
!7525 = distinct !DILocation(line: 193, column: 2, scope: !7517)
!7526 = !{i64 3089812}
!7527 = !DILocation(line: 194, column: 1, scope: !7517)
!7528 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !563, file: !563, line: 199, type: !3116, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2050)
!7529 = !DILocation(line: 282, column: 3, scope: !7530, inlinedAt: !7531)
!7530 = distinct !DISubprogram(name: "__DMB", scope: !6437, file: !6437, line: 280, type: !3116, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2050)
!7531 = distinct !DILocation(line: 202, column: 2, scope: !7528)
!7532 = !{i64 3090371}
!7533 = !DILocation(line: 205, column: 12, scope: !7528)
!7534 = !DILocation(line: 206, column: 1, scope: !7528)
!7535 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !563, file: !563, line: 275, type: !7536, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7549)
!7536 = !DISubroutineType(types: !7537)
!7537 = !{null, !7538, !1832, !6714, !6714}
!7538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7539, size: 32)
!7539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7540)
!7540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !7541)
!7541 = !{!7542, !7543, !7544}
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7540, file: !507, line: 53, baseType: !22, size: 32)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7540, file: !507, line: 54, baseType: !234, size: 32, offset: 32)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7540, file: !507, line: 55, baseType: !7545, size: 32, offset: 64)
!7545 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !7546)
!7546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !7547)
!7547 = !{!7548}
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7546, file: !513, line: 150, baseType: !110, size: 32)
!7549 = !{!7550, !7551, !7552, !7553}
!7550 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7535, file: !563, line: 276, type: !7538)
!7551 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7535, file: !563, line: 276, type: !1832)
!7552 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7535, file: !563, line: 277, type: !6714)
!7553 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7535, file: !563, line: 277, type: !6714)
!7554 = !DILocation(line: 0, scope: !7535)
!7555 = !DILocation(line: 279, column: 6, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7535, file: !563, line: 279, column: 6)
!7557 = !DILocation(line: 280, column: 57, scope: !7556)
!7558 = !DILocation(line: 279, column: 6, scope: !7535)
!7559 = !DILocation(line: 282, column: 3, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7561, file: !563, line: 282, column: 3)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !563, line: 282, column: 3)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !563, line: 282, column: 3)
!7563 = distinct !DILexicalBlock(scope: !7556, file: !563, line: 280, column: 69)
!7564 = !DILocation(line: 285, column: 1, scope: !7535)
!7565 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7566, file: !7566, line: 220, type: !7567, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7569)
!7566 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7567 = !DISubroutineType(types: !7568)
!7568 = !{!109, !7538, !1832, !6714, !6714}
!7569 = !{!7570, !7571, !7572, !7573, !7574}
!7570 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7565, file: !7566, line: 221, type: !7538)
!7571 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7565, file: !7566, line: 221, type: !1832)
!7572 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7565, file: !7566, line: 222, type: !6714)
!7573 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7565, file: !7566, line: 223, type: !6714)
!7574 = !DILocalVariable(name: "mpu_reg_index", scope: !7565, file: !7566, line: 225, type: !109)
!7575 = !DILocation(line: 0, scope: !7565)
!7576 = !DILocation(line: 225, column: 22, scope: !7565)
!7577 = !DILocation(line: 233, column: 18, scope: !7565)
!7578 = !DILocation(line: 236, column: 23, scope: !7565)
!7579 = !DILocation(line: 236, column: 21, scope: !7565)
!7580 = !DILocation(line: 238, column: 2, scope: !7565)
!7581 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !563, file: !563, line: 105, type: !7582, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7584)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{!109, !7538, !180, !180, !347}
!7584 = !{!7585, !7586, !7587, !7588, !7589, !7590}
!7585 = !DILocalVariable(name: "regions", arg: 1, scope: !7581, file: !563, line: 106, type: !7538)
!7586 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7581, file: !563, line: 106, type: !180)
!7587 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7581, file: !563, line: 106, type: !180)
!7588 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7581, file: !563, line: 107, type: !347)
!7589 = !DILocalVariable(name: "i", scope: !7581, file: !563, line: 109, type: !109)
!7590 = !DILocalVariable(name: "reg_index", scope: !7581, file: !563, line: 110, type: !109)
!7591 = !DILocation(line: 0, scope: !7581)
!7592 = !DILocation(line: 110, column: 18, scope: !7581)
!7593 = !DILocation(line: 112, column: 16, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !563, line: 112, column: 2)
!7595 = distinct !DILexicalBlock(scope: !7581, file: !563, line: 112, column: 2)
!7596 = !DILocation(line: 112, column: 2, scope: !7595)
!7597 = !DILocation(line: 113, column: 7, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !563, line: 113, column: 7)
!7599 = distinct !DILexicalBlock(scope: !7594, file: !563, line: 112, column: 36)
!7600 = !DILocation(line: 113, column: 18, scope: !7598)
!7601 = !DILocation(line: 113, column: 23, scope: !7598)
!7602 = !DILocation(line: 113, column: 7, scope: !7599)
!7603 = !DILocation(line: 118, column: 23, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7599, file: !563, line: 118, column: 7)
!7605 = !DILocation(line: 119, column: 7, scope: !7604)
!7606 = !DILocation(line: 118, column: 7, scope: !7599)
!7607 = !DILocation(line: 120, column: 4, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7609, file: !563, line: 120, column: 4)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !563, line: 120, column: 4)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !563, line: 120, column: 4)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !563, line: 120, column: 4)
!7612 = distinct !DILexicalBlock(scope: !7604, file: !563, line: 119, column: 45)
!7613 = !DILocation(line: 121, column: 4, scope: !7612)
!7614 = !DILocation(line: 124, column: 36, scope: !7599)
!7615 = !DILocation(line: 124, column: 15, scope: !7599)
!7616 = !DILocation(line: 126, column: 17, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7599, file: !563, line: 126, column: 7)
!7618 = !DILocation(line: 126, column: 7, scope: !7599)
!7619 = !DILocation(line: 131, column: 12, scope: !7599)
!7620 = !DILocation(line: 132, column: 2, scope: !7599)
!7621 = !DILocation(line: 112, column: 32, scope: !7594)
!7622 = distinct !{!7622, !7596, !7623}
!7623 = !DILocation(line: 132, column: 2, scope: !7595)
!7624 = !DILocation(line: 135, column: 1, scope: !7581)
!7625 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7566, file: !7566, line: 63, type: !7626, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7628)
!7626 = !DISubroutineType(types: !7627)
!7627 = !{!109, !7538}
!7628 = !{!7629, !7630}
!7629 = !DILocalVariable(name: "part", arg: 1, scope: !7625, file: !7566, line: 63, type: !7538)
!7630 = !DILocalVariable(name: "partition_is_valid", scope: !7625, file: !7566, line: 70, type: !109)
!7631 = !DILocation(line: 0, scope: !7625)
!7632 = !DILocation(line: 71, column: 11, scope: !7625)
!7633 = !DILocation(line: 71, column: 37, scope: !7625)
!7634 = !{i32 0, i32 33}
!7635 = !DILocation(line: 72, column: 3, scope: !7625)
!7636 = !DILocation(line: 71, column: 30, scope: !7625)
!7637 = !DILocation(line: 75, column: 11, scope: !7625)
!7638 = !DILocation(line: 75, column: 17, scope: !7625)
!7639 = !DILocation(line: 75, column: 38, scope: !7625)
!7640 = !DILocation(line: 77, column: 2, scope: !7625)
!7641 = distinct !DISubprogram(name: "mpu_configure_region", scope: !563, file: !563, line: 79, type: !7642, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7644)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{!109, !1832, !7538}
!7644 = !{!7645, !7646, !7647}
!7645 = !DILocalVariable(name: "index", arg: 1, scope: !7641, file: !563, line: 79, type: !1832)
!7646 = !DILocalVariable(name: "new_region", arg: 2, scope: !7641, file: !563, line: 80, type: !7538)
!7647 = !DILocalVariable(name: "region_conf", scope: !7641, file: !563, line: 82, type: !552)
!7648 = !DILocation(line: 0, scope: !7641)
!7649 = !DILocation(line: 82, column: 2, scope: !7641)
!7650 = !DILocation(line: 82, column: 24, scope: !7641)
!7651 = !DILocation(line: 87, column: 33, scope: !7641)
!7652 = !DILocation(line: 87, column: 14, scope: !7641)
!7653 = !DILocation(line: 87, column: 19, scope: !7641)
!7654 = !DILocation(line: 91, column: 55, scope: !7641)
!7655 = !DILocation(line: 92, column: 16, scope: !7641)
!7656 = !DILocation(line: 92, column: 53, scope: !7641)
!7657 = !DILocation(line: 91, column: 2, scope: !7641)
!7658 = !DILocation(line: 95, column: 9, scope: !7641)
!7659 = !DILocation(line: 97, column: 1, scope: !7641)
!7660 = !DILocation(line: 95, column: 2, scope: !7641)
!7661 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7566, file: !7566, line: 113, type: !7662, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7667)
!7662 = !DISubroutineType(types: !7663)
!7663 = !{null, !7664, !7665, !110, !110}
!7664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!7665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7666, size: 32)
!7666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7545)
!7667 = !{!7668, !7669, !7670, !7671}
!7668 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7661, file: !7566, line: 114, type: !7664)
!7669 = !DILocalVariable(name: "attr", arg: 2, scope: !7661, file: !7566, line: 115, type: !7665)
!7670 = !DILocalVariable(name: "base", arg: 3, scope: !7661, file: !7566, line: 115, type: !110)
!7671 = !DILocalVariable(name: "size", arg: 4, scope: !7661, file: !7566, line: 115, type: !110)
!7672 = !DILocation(line: 0, scope: !7661)
!7673 = !DILocation(line: 127, column: 23, scope: !7661)
!7674 = !DILocation(line: 127, column: 35, scope: !7661)
!7675 = !DILocation(line: 127, column: 33, scope: !7661)
!7676 = !DILocation(line: 127, column: 10, scope: !7661)
!7677 = !DILocation(line: 127, column: 15, scope: !7661)
!7678 = !DILocation(line: 129, column: 1, scope: !7661)
!7679 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !563, file: !563, line: 57, type: !7680, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7682)
!7680 = !DISubroutineType(types: !7681)
!7681 = !{!109, !1832, !550}
!7682 = !{!7683, !7684}
!7683 = !DILocalVariable(name: "index", arg: 1, scope: !7679, file: !563, line: 57, type: !1832)
!7684 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7679, file: !563, line: 58, type: !550)
!7685 = !DILocation(line: 0, scope: !7679)
!7686 = !DILocation(line: 61, column: 6, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7679, file: !563, line: 61, column: 6)
!7688 = !DILocation(line: 61, column: 12, scope: !7687)
!7689 = !DILocation(line: 61, column: 6, scope: !7679)
!7690 = !DILocation(line: 64, column: 3, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !563, line: 64, column: 3)
!7692 = distinct !DILexicalBlock(scope: !7693, file: !563, line: 64, column: 3)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !563, line: 64, column: 3)
!7694 = distinct !DILexicalBlock(scope: !7695, file: !563, line: 64, column: 3)
!7695 = distinct !DILexicalBlock(scope: !7687, file: !563, line: 61, column: 40)
!7696 = !DILocation(line: 65, column: 3, scope: !7695)
!7697 = !DILocation(line: 71, column: 2, scope: !7679)
!7698 = !DILocation(line: 73, column: 2, scope: !7679)
!7699 = !DILocation(line: 74, column: 1, scope: !7679)
!7700 = distinct !DISubprogram(name: "region_init", scope: !7566, file: !7566, line: 29, type: !7701, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7703)
!7701 = !DISubroutineType(types: !7702)
!7702 = !{null, !6714, !550}
!7703 = !{!7704, !7705}
!7704 = !DILocalVariable(name: "index", arg: 1, scope: !7700, file: !7566, line: 29, type: !6714)
!7705 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7700, file: !7566, line: 30, type: !550)
!7706 = !DILocation(line: 0, scope: !7700)
!7707 = !DILocation(line: 33, column: 2, scope: !7700)
!7708 = !DILocation(line: 47, column: 28, scope: !7700)
!7709 = !DILocation(line: 47, column: 33, scope: !7700)
!7710 = !DILocation(line: 48, column: 26, scope: !7700)
!7711 = !DILocation(line: 47, column: 12, scope: !7700)
!7712 = !DILocation(line: 49, column: 32, scope: !7700)
!7713 = !DILocation(line: 49, column: 37, scope: !7700)
!7714 = !DILocation(line: 49, column: 12, scope: !7700)
!7715 = !DILocation(line: 53, column: 1, scope: !7700)
!7716 = distinct !DISubprogram(name: "set_region_number", scope: !7717, file: !7717, line: 32, type: !6534, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7718)
!7717 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7718 = !{!7719}
!7719 = !DILocalVariable(name: "index", arg: 1, scope: !7716, file: !7717, line: 32, type: !110)
!7720 = !DILocation(line: 0, scope: !7716)
!7721 = !DILocation(line: 34, column: 11, scope: !7716)
!7722 = !DILocation(line: 35, column: 1, scope: !7716)
!7723 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7566, file: !7566, line: 88, type: !7724, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7726)
!7724 = !DISubroutineType(types: !7725)
!7725 = !{!110, !110}
!7726 = !{!7727}
!7727 = !DILocalVariable(name: "size", arg: 1, scope: !7723, file: !7566, line: 88, type: !110)
!7728 = !DILocation(line: 0, scope: !7723)
!7729 = !DILocation(line: 91, column: 11, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7723, file: !7566, line: 91, column: 6)
!7731 = !DILocation(line: 91, column: 6, scope: !7723)
!7732 = !DILocation(line: 100, column: 11, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7723, file: !7566, line: 100, column: 6)
!7734 = !DILocation(line: 100, column: 6, scope: !7723)
!7735 = !DILocation(line: 104, column: 35, scope: !7723)
!7736 = !DILocation(line: 104, column: 16, scope: !7723)
!7737 = !DILocation(line: 104, column: 50, scope: !7723)
!7738 = !DILocation(line: 104, column: 72, scope: !7723)
!7739 = !DILocation(line: 104, column: 2, scope: !7723)
!7740 = !DILocation(line: 106, column: 1, scope: !7723)
!7741 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !563, file: !563, line: 307, type: !7742, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7744)
!7742 = !DISubroutineType(types: !7743)
!7743 = !{null, !7538, !180}
!7744 = !{!7745, !7746}
!7745 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7741, file: !563, line: 308, type: !7538)
!7746 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7741, file: !563, line: 308, type: !180)
!7747 = !DILocation(line: 0, scope: !7741)
!7748 = !DILocation(line: 310, column: 6, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7741, file: !563, line: 310, column: 6)
!7750 = !DILocation(line: 311, column: 3, scope: !7749)
!7751 = !DILocation(line: 310, column: 6, scope: !7741)
!7752 = !DILocation(line: 313, column: 3, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !563, line: 313, column: 3)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !563, line: 313, column: 3)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !563, line: 313, column: 3)
!7756 = distinct !DILexicalBlock(scope: !7749, file: !563, line: 311, column: 15)
!7757 = !DILocation(line: 316, column: 1, scope: !7741)
!7758 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7566, file: !7566, line: 249, type: !7759, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7761)
!7759 = !DISubroutineType(types: !7760)
!7760 = !{!109, !7538, !180}
!7761 = !{!7762, !7763, !7764, !7765}
!7762 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7758, file: !7566, line: 250, type: !7538)
!7763 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7758, file: !7566, line: 250, type: !180)
!7764 = !DILocalVariable(name: "mpu_reg_index", scope: !7758, file: !7566, line: 252, type: !109)
!7765 = !DILocalVariable(name: "i", scope: !7766, file: !7566, line: 264, type: !109)
!7766 = distinct !DILexicalBlock(scope: !7767, file: !7566, line: 264, column: 3)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !7566, line: 261, column: 32)
!7768 = distinct !DILexicalBlock(scope: !7758, file: !7566, line: 261, column: 6)
!7769 = !DILocation(line: 0, scope: !7758)
!7770 = !DILocation(line: 252, column: 22, scope: !7758)
!7771 = !DILocation(line: 258, column: 18, scope: !7758)
!7772 = !DILocation(line: 261, column: 20, scope: !7768)
!7773 = !DILocation(line: 261, column: 6, scope: !7758)
!7774 = !DILocation(line: 0, scope: !7766)
!7775 = !DILocation(line: 265, column: 4, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !7566, line: 264, column: 59)
!7777 = distinct !DILexicalBlock(scope: !7766, file: !7566, line: 264, column: 3)
!7778 = !DILocation(line: 264, column: 55, scope: !7777)
!7779 = !DILocation(line: 264, column: 33, scope: !7777)
!7780 = !DILocation(line: 264, column: 3, scope: !7766)
!7781 = distinct !{!7781, !7780, !7782}
!7782 = !DILocation(line: 266, column: 3, scope: !7766)
!7783 = !DILocation(line: 269, column: 2, scope: !7758)
!7784 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7785, file: !7785, line: 218, type: !6534, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7786)
!7785 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7786 = !{!7787}
!7787 = !DILocalVariable(name: "rnr", arg: 1, scope: !7784, file: !7785, line: 218, type: !110)
!7788 = !DILocation(line: 0, scope: !7784)
!7789 = !DILocation(line: 220, column: 12, scope: !7784)
!7790 = !DILocation(line: 221, column: 13, scope: !7784)
!7791 = !DILocation(line: 222, column: 1, scope: !7784)
!7792 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !563, file: !563, line: 326, type: !7793, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7795)
!7793 = !DISubroutineType(types: !7794)
!7794 = !{!109}
!7795 = !{!7796}
!7796 = !DILocalVariable(name: "r_index", scope: !7792, file: !563, line: 328, type: !110)
!7797 = !DILocation(line: 330, column: 17, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7792, file: !563, line: 330, column: 6)
!7799 = !DILocation(line: 330, column: 29, scope: !7798)
!7800 = !DILocation(line: 330, column: 6, scope: !7792)
!7801 = !DILocation(line: 337, column: 3, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !563, line: 337, column: 3)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !563, line: 337, column: 3)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !563, line: 337, column: 3)
!7805 = distinct !DILexicalBlock(scope: !7798, file: !563, line: 330, column: 50)
!7806 = !DILocation(line: 347, column: 2, scope: !7792)
!7807 = !DILocation(line: 0, scope: !7792)
!7808 = !DILocation(line: 364, column: 29, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !563, line: 364, column: 2)
!7810 = distinct !DILexicalBlock(scope: !7792, file: !563, line: 364, column: 2)
!7811 = !DILocation(line: 364, column: 2, scope: !7810)
!7812 = !DILocation(line: 365, column: 25, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7809, file: !563, line: 364, column: 66)
!7814 = !DILocation(line: 365, column: 3, scope: !7813)
!7815 = !DILocation(line: 364, column: 62, scope: !7809)
!7816 = distinct !{!7816, !7811, !7817}
!7817 = !DILocation(line: 366, column: 2, scope: !7810)
!7818 = !DILocation(line: 369, column: 23, scope: !7792)
!7819 = !DILocation(line: 369, column: 21, scope: !7792)
!7820 = !DILocation(line: 372, column: 2, scope: !7792)
!7821 = !DILocation(line: 433, column: 2, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !563, line: 433, column: 2)
!7823 = distinct !DILexicalBlock(scope: !7792, file: !563, line: 433, column: 2)
!7824 = !DILocation(line: 433, column: 2, scope: !7823)
!7825 = !DILocation(line: 433, column: 2, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7822, file: !563, line: 433, column: 2)
!7827 = !DILocation(line: 444, column: 1, scope: !7792)
!7828 = distinct !DISubprogram(name: "strcpy", scope: !7829, file: !7829, line: 20, type: !7830, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !7834)
!7829 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7830 = !DISubroutineType(types: !7831)
!7831 = !{!285, !7832, !7833}
!7832 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7833 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7834 = !{!7835, !7836, !7837}
!7835 = !DILocalVariable(name: "d", arg: 1, scope: !7828, file: !7829, line: 20, type: !7832)
!7836 = !DILocalVariable(name: "s", arg: 2, scope: !7828, file: !7829, line: 20, type: !7833)
!7837 = !DILocalVariable(name: "dest", scope: !7828, file: !7829, line: 22, type: !285)
!7838 = !DILocation(line: 0, scope: !7828)
!7839 = !DILocation(line: 24, column: 9, scope: !7828)
!7840 = !DILocation(line: 24, column: 12, scope: !7828)
!7841 = !DILocation(line: 24, column: 2, scope: !7828)
!7842 = !DILocation(line: 25, column: 6, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7828, file: !7829, line: 24, column: 21)
!7844 = !DILocation(line: 26, column: 4, scope: !7843)
!7845 = !DILocation(line: 27, column: 4, scope: !7843)
!7846 = distinct !{!7846, !7841, !7847}
!7847 = !DILocation(line: 28, column: 2, scope: !7828)
!7848 = !DILocation(line: 30, column: 5, scope: !7828)
!7849 = !DILocation(line: 32, column: 2, scope: !7828)
!7850 = distinct !DISubprogram(name: "strncpy", scope: !7829, file: !7829, line: 42, type: !7851, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !7853)
!7851 = !DISubroutineType(types: !7852)
!7852 = !{!285, !7832, !7833, !234}
!7853 = !{!7854, !7855, !7856, !7857}
!7854 = !DILocalVariable(name: "d", arg: 1, scope: !7850, file: !7829, line: 42, type: !7832)
!7855 = !DILocalVariable(name: "s", arg: 2, scope: !7850, file: !7829, line: 42, type: !7833)
!7856 = !DILocalVariable(name: "n", arg: 3, scope: !7850, file: !7829, line: 42, type: !234)
!7857 = !DILocalVariable(name: "dest", scope: !7850, file: !7829, line: 44, type: !285)
!7858 = !DILocation(line: 0, scope: !7850)
!7859 = !DILocation(line: 46, column: 12, scope: !7850)
!7860 = !DILocation(line: 46, column: 17, scope: !7850)
!7861 = !DILocation(line: 46, column: 20, scope: !7850)
!7862 = !DILocation(line: 46, column: 23, scope: !7850)
!7863 = !DILocation(line: 46, column: 2, scope: !7850)
!7864 = !DILocation(line: 47, column: 6, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7850, file: !7829, line: 46, column: 32)
!7866 = !DILocation(line: 48, column: 4, scope: !7865)
!7867 = !DILocation(line: 49, column: 4, scope: !7865)
!7868 = !DILocation(line: 50, column: 4, scope: !7865)
!7869 = distinct !{!7869, !7863, !7870}
!7870 = !DILocation(line: 51, column: 2, scope: !7850)
!7871 = !DILocation(line: 54, column: 6, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7850, file: !7829, line: 53, column: 16)
!7873 = !DILocation(line: 55, column: 4, scope: !7872)
!7874 = !DILocation(line: 56, column: 4, scope: !7872)
!7875 = !DILocation(line: 53, column: 11, scope: !7850)
!7876 = !DILocation(line: 53, column: 2, scope: !7850)
!7877 = distinct !{!7877, !7876, !7878}
!7878 = !DILocation(line: 57, column: 2, scope: !7850)
!7879 = !DILocation(line: 59, column: 2, scope: !7850)
!7880 = distinct !DISubprogram(name: "strchr", scope: !7829, file: !7829, line: 69, type: !7881, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !7883)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{!285, !279, !109}
!7883 = !{!7884, !7885, !7886}
!7884 = !DILocalVariable(name: "s", arg: 1, scope: !7880, file: !7829, line: 69, type: !279)
!7885 = !DILocalVariable(name: "c", arg: 2, scope: !7880, file: !7829, line: 69, type: !109)
!7886 = !DILocalVariable(name: "tmp", scope: !7880, file: !7829, line: 71, type: !150)
!7887 = !DILocation(line: 0, scope: !7880)
!7888 = !DILocation(line: 73, column: 2, scope: !7880)
!7889 = !DILocation(line: 73, column: 10, scope: !7880)
!7890 = !DILocation(line: 73, column: 13, scope: !7880)
!7891 = !DILocation(line: 73, column: 21, scope: !7880)
!7892 = !DILocation(line: 74, column: 4, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7880, file: !7829, line: 73, column: 38)
!7894 = distinct !{!7894, !7888, !7895}
!7895 = !DILocation(line: 75, column: 2, scope: !7880)
!7896 = !DILocation(line: 77, column: 9, scope: !7880)
!7897 = !DILocation(line: 77, column: 2, scope: !7880)
!7898 = distinct !DISubprogram(name: "strrchr", scope: !7829, file: !7829, line: 87, type: !7881, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !7899)
!7899 = !{!7900, !7901, !7902}
!7900 = !DILocalVariable(name: "s", arg: 1, scope: !7898, file: !7829, line: 87, type: !279)
!7901 = !DILocalVariable(name: "c", arg: 2, scope: !7898, file: !7829, line: 87, type: !109)
!7902 = !DILocalVariable(name: "match", scope: !7898, file: !7829, line: 89, type: !285)
!7903 = !DILocation(line: 0, scope: !7898)
!7904 = !DILocation(line: 91, column: 2, scope: !7898)
!7905 = !DILocation(line: 92, column: 7, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7907, file: !7829, line: 92, column: 7)
!7907 = distinct !DILexicalBlock(scope: !7898, file: !7829, line: 91, column: 5)
!7908 = !DILocation(line: 92, column: 10, scope: !7906)
!7909 = !DILocation(line: 92, column: 7, scope: !7907)
!7910 = !DILocation(line: 95, column: 13, scope: !7898)
!7911 = !DILocation(line: 95, column: 2, scope: !7907)
!7912 = distinct !{!7912, !7904, !7913}
!7913 = !DILocation(line: 95, column: 15, scope: !7898)
!7914 = !DILocation(line: 97, column: 2, scope: !7898)
!7915 = distinct !DISubprogram(name: "strlen", scope: !7829, file: !7829, line: 107, type: !7916, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !7918)
!7916 = !DISubroutineType(types: !7917)
!7917 = !{!234, !279}
!7918 = !{!7919, !7920}
!7919 = !DILocalVariable(name: "s", arg: 1, scope: !7915, file: !7829, line: 107, type: !279)
!7920 = !DILocalVariable(name: "n", scope: !7915, file: !7829, line: 109, type: !234)
!7921 = !DILocation(line: 0, scope: !7915)
!7922 = !DILocation(line: 111, column: 9, scope: !7915)
!7923 = !DILocation(line: 111, column: 12, scope: !7915)
!7924 = !DILocation(line: 111, column: 2, scope: !7915)
!7925 = !DILocation(line: 112, column: 4, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7915, file: !7829, line: 111, column: 21)
!7927 = !DILocation(line: 113, column: 4, scope: !7926)
!7928 = distinct !{!7928, !7924, !7929}
!7929 = !DILocation(line: 114, column: 2, scope: !7915)
!7930 = !DILocation(line: 116, column: 2, scope: !7915)
!7931 = distinct !DISubprogram(name: "strnlen", scope: !7829, file: !7829, line: 126, type: !7932, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !7934)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{!234, !279, !234}
!7934 = !{!7935, !7936, !7937}
!7935 = !DILocalVariable(name: "s", arg: 1, scope: !7931, file: !7829, line: 126, type: !279)
!7936 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7931, file: !7829, line: 126, type: !234)
!7937 = !DILocalVariable(name: "n", scope: !7931, file: !7829, line: 128, type: !234)
!7938 = !DILocation(line: 0, scope: !7931)
!7939 = !DILocation(line: 130, column: 9, scope: !7931)
!7940 = !DILocation(line: 130, column: 12, scope: !7931)
!7941 = !DILocation(line: 130, column: 20, scope: !7931)
!7942 = !DILocation(line: 130, column: 2, scope: !7931)
!7943 = !DILocation(line: 131, column: 4, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7931, file: !7829, line: 130, column: 35)
!7945 = !DILocation(line: 132, column: 4, scope: !7944)
!7946 = distinct !{!7946, !7942, !7947}
!7947 = !DILocation(line: 133, column: 2, scope: !7931)
!7948 = !DILocation(line: 135, column: 2, scope: !7931)
!7949 = distinct !DISubprogram(name: "strcmp", scope: !7829, file: !7829, line: 145, type: !7950, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !7952)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{!109, !279, !279}
!7952 = !{!7953, !7954}
!7953 = !DILocalVariable(name: "s1", arg: 1, scope: !7949, file: !7829, line: 145, type: !279)
!7954 = !DILocalVariable(name: "s2", arg: 2, scope: !7949, file: !7829, line: 145, type: !279)
!7955 = !DILocation(line: 0, scope: !7949)
!7956 = !DILocation(line: 147, column: 10, scope: !7949)
!7957 = !DILocation(line: 147, column: 17, scope: !7949)
!7958 = !DILocation(line: 147, column: 14, scope: !7949)
!7959 = !DILocation(line: 147, column: 22, scope: !7949)
!7960 = !DILocation(line: 148, column: 5, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7949, file: !7829, line: 147, column: 40)
!7962 = !DILocation(line: 149, column: 5, scope: !7961)
!7963 = distinct !{!7963, !7964, !7965}
!7964 = !DILocation(line: 147, column: 2, scope: !7949)
!7965 = !DILocation(line: 150, column: 2, scope: !7949)
!7966 = !DILocation(line: 152, column: 9, scope: !7949)
!7967 = !DILocation(line: 152, column: 15, scope: !7949)
!7968 = !DILocation(line: 152, column: 13, scope: !7949)
!7969 = !DILocation(line: 152, column: 2, scope: !7949)
!7970 = distinct !DISubprogram(name: "strncmp", scope: !7829, file: !7829, line: 162, type: !7971, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !7973)
!7971 = !DISubroutineType(types: !7972)
!7972 = !{!109, !279, !279, !234}
!7973 = !{!7974, !7975, !7976}
!7974 = !DILocalVariable(name: "s1", arg: 1, scope: !7970, file: !7829, line: 162, type: !279)
!7975 = !DILocalVariable(name: "s2", arg: 2, scope: !7970, file: !7829, line: 162, type: !279)
!7976 = !DILocalVariable(name: "n", arg: 3, scope: !7970, file: !7829, line: 162, type: !234)
!7977 = !DILocation(line: 0, scope: !7970)
!7978 = !DILocation(line: 164, column: 17, scope: !7970)
!7979 = !DILocation(line: 164, column: 21, scope: !7970)
!7980 = !DILocation(line: 164, column: 28, scope: !7970)
!7981 = !DILocation(line: 164, column: 25, scope: !7970)
!7982 = !DILocation(line: 164, column: 33, scope: !7970)
!7983 = !DILocation(line: 165, column: 5, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7970, file: !7829, line: 164, column: 51)
!7985 = !DILocation(line: 166, column: 5, scope: !7984)
!7986 = !DILocation(line: 167, column: 4, scope: !7984)
!7987 = distinct !{!7987, !7988, !7989}
!7988 = !DILocation(line: 164, column: 2, scope: !7970)
!7989 = !DILocation(line: 168, column: 2, scope: !7970)
!7990 = !DILocation(line: 170, column: 25, scope: !7970)
!7991 = !DILocation(line: 170, column: 31, scope: !7970)
!7992 = !DILocation(line: 170, column: 29, scope: !7970)
!7993 = !DILocation(line: 170, column: 9, scope: !7970)
!7994 = !DILocation(line: 170, column: 2, scope: !7970)
!7995 = distinct !DISubprogram(name: "strtok_r", scope: !7829, file: !7829, line: 180, type: !7996, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !7998)
!7996 = !DISubroutineType(types: !7997)
!7997 = !{!285, !285, !279, !284}
!7998 = !{!7999, !8000, !8001, !8002, !8003}
!7999 = !DILocalVariable(name: "str", arg: 1, scope: !7995, file: !7829, line: 180, type: !285)
!8000 = !DILocalVariable(name: "sep", arg: 2, scope: !7995, file: !7829, line: 180, type: !279)
!8001 = !DILocalVariable(name: "state", arg: 3, scope: !7995, file: !7829, line: 180, type: !284)
!8002 = !DILocalVariable(name: "start", scope: !7995, file: !7829, line: 182, type: !285)
!8003 = !DILocalVariable(name: "end", scope: !7995, file: !7829, line: 182, type: !285)
!8004 = !DILocation(line: 0, scope: !7995)
!8005 = !DILocation(line: 184, column: 10, scope: !7995)
!8006 = !DILocation(line: 184, column: 22, scope: !7995)
!8007 = !DILocation(line: 187, column: 9, scope: !7995)
!8008 = !DILocation(line: 187, column: 16, scope: !7995)
!8009 = !DILocation(line: 187, column: 19, scope: !7995)
!8010 = !DILocation(line: 187, column: 2, scope: !7995)
!8011 = !DILocation(line: 188, column: 8, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7995, file: !7829, line: 187, column: 40)
!8013 = distinct !{!8013, !8010, !8014}
!8014 = !DILocation(line: 189, column: 2, scope: !7995)
!8015 = !DILocation(line: 198, column: 9, scope: !7995)
!8016 = !DILocation(line: 198, column: 18, scope: !7995)
!8017 = !DILocation(line: 198, column: 17, scope: !7995)
!8018 = !DILocation(line: 198, column: 2, scope: !7995)
!8019 = !DILocation(line: 199, column: 6, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !7995, file: !7829, line: 198, column: 37)
!8021 = !DILocation(line: 198, column: 14, scope: !7995)
!8022 = distinct !{!8022, !8018, !8023}
!8023 = !DILocation(line: 200, column: 2, scope: !7995)
!8024 = !DILocation(line: 203, column: 8, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !7829, line: 202, column: 20)
!8026 = distinct !DILexicalBlock(scope: !7995, file: !7829, line: 202, column: 6)
!8027 = !DILocation(line: 204, column: 16, scope: !8025)
!8028 = !DILocation(line: 205, column: 2, scope: !8025)
!8029 = !DILocation(line: 210, column: 1, scope: !7995)
!8030 = distinct !DISubprogram(name: "strcat", scope: !7829, file: !7829, line: 212, type: !7830, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !8031)
!8031 = !{!8032, !8033}
!8032 = !DILocalVariable(name: "dest", arg: 1, scope: !8030, file: !7829, line: 212, type: !7832)
!8033 = !DILocalVariable(name: "src", arg: 2, scope: !8030, file: !7829, line: 212, type: !7833)
!8034 = !DILocation(line: 0, scope: !8030)
!8035 = !DILocation(line: 214, column: 16, scope: !8030)
!8036 = !DILocation(line: 214, column: 14, scope: !8030)
!8037 = !DILocation(line: 214, column: 2, scope: !8030)
!8038 = !DILocation(line: 215, column: 2, scope: !8030)
!8039 = distinct !DISubprogram(name: "strncat", scope: !7829, file: !7829, line: 218, type: !7851, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !8040)
!8040 = !{!8041, !8042, !8043, !8044, !8045}
!8041 = !DILocalVariable(name: "dest", arg: 1, scope: !8039, file: !7829, line: 218, type: !7832)
!8042 = !DILocalVariable(name: "src", arg: 2, scope: !8039, file: !7829, line: 218, type: !7833)
!8043 = !DILocalVariable(name: "n", arg: 3, scope: !8039, file: !7829, line: 219, type: !234)
!8044 = !DILocalVariable(name: "orig_dest", scope: !8039, file: !7829, line: 221, type: !285)
!8045 = !DILocalVariable(name: "len", scope: !8039, file: !7829, line: 222, type: !234)
!8046 = !DILocation(line: 0, scope: !8039)
!8047 = !DILocation(line: 222, column: 15, scope: !8039)
!8048 = !DILocation(line: 224, column: 7, scope: !8039)
!8049 = !DILocation(line: 225, column: 14, scope: !8039)
!8050 = !DILocation(line: 225, column: 19, scope: !8039)
!8051 = !DILocation(line: 225, column: 11, scope: !8039)
!8052 = !DILocation(line: 225, column: 23, scope: !8039)
!8053 = !DILocation(line: 225, column: 28, scope: !8039)
!8054 = !DILocation(line: 225, column: 2, scope: !8039)
!8055 = !DILocation(line: 226, column: 17, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8039, file: !7829, line: 225, column: 38)
!8057 = !DILocation(line: 226, column: 8, scope: !8056)
!8058 = !DILocation(line: 226, column: 11, scope: !8056)
!8059 = distinct !{!8059, !8054, !8060}
!8060 = !DILocation(line: 227, column: 2, scope: !8039)
!8061 = !DILocation(line: 228, column: 8, scope: !8039)
!8062 = !DILocation(line: 230, column: 2, scope: !8039)
!8063 = distinct !DISubprogram(name: "memcmp", scope: !7829, file: !7829, line: 239, type: !8064, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !8066)
!8064 = !DISubroutineType(types: !8065)
!8065 = !{!109, !13, !13, !234}
!8066 = !{!8067, !8068, !8069, !8070, !8071}
!8067 = !DILocalVariable(name: "m1", arg: 1, scope: !8063, file: !7829, line: 239, type: !13)
!8068 = !DILocalVariable(name: "m2", arg: 2, scope: !8063, file: !7829, line: 239, type: !13)
!8069 = !DILocalVariable(name: "n", arg: 3, scope: !8063, file: !7829, line: 239, type: !234)
!8070 = !DILocalVariable(name: "c1", scope: !8063, file: !7829, line: 241, type: !279)
!8071 = !DILocalVariable(name: "c2", scope: !8063, file: !7829, line: 242, type: !279)
!8072 = !DILocation(line: 0, scope: !8063)
!8073 = !DILocation(line: 244, column: 7, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8063, file: !7829, line: 244, column: 6)
!8075 = !DILocation(line: 244, column: 6, scope: !8063)
!8076 = !DILocation(line: 248, column: 10, scope: !8063)
!8077 = !DILocation(line: 248, column: 14, scope: !8063)
!8078 = !DILocation(line: 248, column: 19, scope: !8063)
!8079 = !DILocation(line: 248, column: 2, scope: !8063)
!8080 = !DILocation(line: 248, column: 23, scope: !8063)
!8081 = !DILocation(line: 248, column: 30, scope: !8063)
!8082 = !DILocation(line: 248, column: 27, scope: !8063)
!8083 = !DILocation(line: 249, column: 5, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8063, file: !7829, line: 248, column: 36)
!8085 = !DILocation(line: 250, column: 5, scope: !8084)
!8086 = distinct !{!8086, !8079, !8087}
!8087 = !DILocation(line: 251, column: 2, scope: !8063)
!8088 = !DILocation(line: 253, column: 9, scope: !8063)
!8089 = !DILocation(line: 253, column: 15, scope: !8063)
!8090 = !DILocation(line: 253, column: 13, scope: !8063)
!8091 = !DILocation(line: 253, column: 2, scope: !8063)
!8092 = !DILocation(line: 254, column: 1, scope: !8063)
!8093 = distinct !DISubprogram(name: "memmove", scope: !7829, file: !7829, line: 263, type: !8094, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !8096)
!8094 = !DISubroutineType(types: !8095)
!8095 = !{!107, !107, !13, !234}
!8096 = !{!8097, !8098, !8099, !8100, !8101}
!8097 = !DILocalVariable(name: "d", arg: 1, scope: !8093, file: !7829, line: 263, type: !107)
!8098 = !DILocalVariable(name: "s", arg: 2, scope: !8093, file: !7829, line: 263, type: !13)
!8099 = !DILocalVariable(name: "n", arg: 3, scope: !8093, file: !7829, line: 263, type: !234)
!8100 = !DILocalVariable(name: "dest", scope: !8093, file: !7829, line: 265, type: !285)
!8101 = !DILocalVariable(name: "src", scope: !8093, file: !7829, line: 266, type: !279)
!8102 = !DILocation(line: 0, scope: !8093)
!8103 = !DILocation(line: 268, column: 21, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8093, file: !7829, line: 268, column: 6)
!8105 = !DILocation(line: 268, column: 28, scope: !8104)
!8106 = !DILocation(line: 268, column: 6, scope: !8093)
!8107 = !DILocation(line: 280, column: 12, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8104, file: !7829, line: 278, column: 9)
!8109 = !DILocation(line: 280, column: 3, scope: !8108)
!8110 = !DILocation(line: 275, column: 5, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !7829, line: 274, column: 17)
!8112 = distinct !DILexicalBlock(scope: !8104, file: !7829, line: 268, column: 33)
!8113 = !DILocation(line: 276, column: 14, scope: !8111)
!8114 = !DILocation(line: 276, column: 4, scope: !8111)
!8115 = !DILocation(line: 276, column: 12, scope: !8111)
!8116 = !DILocation(line: 274, column: 12, scope: !8112)
!8117 = !DILocation(line: 274, column: 3, scope: !8112)
!8118 = distinct !{!8118, !8117, !8119}
!8119 = !DILocation(line: 277, column: 3, scope: !8112)
!8120 = !DILocation(line: 281, column: 12, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8108, file: !7829, line: 280, column: 17)
!8122 = !DILocation(line: 281, column: 10, scope: !8121)
!8123 = !DILocation(line: 282, column: 8, scope: !8121)
!8124 = !DILocation(line: 283, column: 7, scope: !8121)
!8125 = !DILocation(line: 284, column: 5, scope: !8121)
!8126 = distinct !{!8126, !8109, !8127}
!8127 = !DILocation(line: 285, column: 3, scope: !8108)
!8128 = !DILocation(line: 288, column: 2, scope: !8093)
!8129 = distinct !DISubprogram(name: "memcpy", scope: !7829, file: !7829, line: 298, type: !8130, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !8134)
!8130 = !DISubroutineType(types: !8131)
!8131 = !{!107, !8132, !8133, !234}
!8132 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8133 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8134 = !{!8135, !8136, !8137, !8138, !8139}
!8135 = !DILocalVariable(name: "d", arg: 1, scope: !8129, file: !7829, line: 298, type: !8132)
!8136 = !DILocalVariable(name: "s", arg: 2, scope: !8129, file: !7829, line: 298, type: !8133)
!8137 = !DILocalVariable(name: "n", arg: 3, scope: !8129, file: !7829, line: 298, type: !234)
!8138 = !DILocalVariable(name: "d_byte", scope: !8129, file: !7829, line: 302, type: !972)
!8139 = !DILocalVariable(name: "s_byte", scope: !8129, file: !7829, line: 303, type: !2882)
!8140 = !DILocation(line: 0, scope: !8129)
!8141 = !DILocation(line: 337, column: 11, scope: !8129)
!8142 = !DILocation(line: 337, column: 2, scope: !8129)
!8143 = !DILocation(line: 338, column: 25, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8129, file: !7829, line: 337, column: 16)
!8145 = !DILocation(line: 338, column: 17, scope: !8144)
!8146 = !DILocation(line: 338, column: 11, scope: !8144)
!8147 = !DILocation(line: 338, column: 15, scope: !8144)
!8148 = !DILocation(line: 339, column: 4, scope: !8144)
!8149 = distinct !{!8149, !8142, !8150}
!8150 = !DILocation(line: 340, column: 2, scope: !8129)
!8151 = !DILocation(line: 342, column: 2, scope: !8129)
!8152 = distinct !DISubprogram(name: "memset", scope: !7829, file: !7829, line: 352, type: !8153, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !8155)
!8153 = !DISubroutineType(types: !8154)
!8154 = !{!107, !107, !109, !234}
!8155 = !{!8156, !8157, !8158, !8159, !8160}
!8156 = !DILocalVariable(name: "buf", arg: 1, scope: !8152, file: !7829, line: 352, type: !107)
!8157 = !DILocalVariable(name: "c", arg: 2, scope: !8152, file: !7829, line: 352, type: !109)
!8158 = !DILocalVariable(name: "n", arg: 3, scope: !8152, file: !7829, line: 352, type: !234)
!8159 = !DILocalVariable(name: "d_byte", scope: !8152, file: !7829, line: 356, type: !972)
!8160 = !DILocalVariable(name: "c_byte", scope: !8152, file: !7829, line: 357, type: !181)
!8161 = !DILocation(line: 0, scope: !8152)
!8162 = !DILocation(line: 357, column: 25, scope: !8152)
!8163 = !DILocation(line: 389, column: 11, scope: !8152)
!8164 = !DILocation(line: 389, column: 2, scope: !8152)
!8165 = !DILocation(line: 390, column: 11, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8152, file: !7829, line: 389, column: 16)
!8167 = !DILocation(line: 390, column: 15, scope: !8166)
!8168 = !DILocation(line: 391, column: 4, scope: !8166)
!8169 = distinct !{!8169, !8164, !8170}
!8170 = !DILocation(line: 392, column: 2, scope: !8152)
!8171 = !DILocation(line: 394, column: 2, scope: !8152)
!8172 = distinct !DISubprogram(name: "memchr", scope: !7829, file: !7829, line: 404, type: !8173, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !8175)
!8173 = !DISubroutineType(types: !8174)
!8174 = !{!107, !13, !109, !234}
!8175 = !{!8176, !8177, !8178, !8179}
!8176 = !DILocalVariable(name: "s", arg: 1, scope: !8172, file: !7829, line: 404, type: !13)
!8177 = !DILocalVariable(name: "c", arg: 2, scope: !8172, file: !7829, line: 404, type: !109)
!8178 = !DILocalVariable(name: "n", arg: 3, scope: !8172, file: !7829, line: 404, type: !234)
!8179 = !DILocalVariable(name: "p", scope: !8180, file: !7829, line: 407, type: !2882)
!8180 = distinct !DILexicalBlock(scope: !8181, file: !7829, line: 406, column: 14)
!8181 = distinct !DILexicalBlock(scope: !8172, file: !7829, line: 406, column: 6)
!8182 = !DILocation(line: 0, scope: !8172)
!8183 = !DILocation(line: 406, column: 8, scope: !8181)
!8184 = !DILocation(line: 406, column: 6, scope: !8172)
!8185 = !DILocation(line: 409, column: 3, scope: !8180)
!8186 = !DILocation(line: 0, scope: !8180)
!8187 = !DILocation(line: 410, column: 8, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !7829, line: 410, column: 8)
!8189 = distinct !DILexicalBlock(scope: !8180, file: !7829, line: 409, column: 6)
!8190 = !DILocation(line: 410, column: 13, scope: !8188)
!8191 = !DILocation(line: 410, column: 8, scope: !8189)
!8192 = distinct !{!8192, !8185, !8193}
!8193 = !DILocation(line: 414, column: 20, scope: !8180)
!8194 = !DILocation(line: 417, column: 2, scope: !8172)
!8195 = !DILocation(line: 418, column: 1, scope: !8172)
!8196 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !573, file: !573, line: 23, type: !4334, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8197)
!8197 = !{!8198}
!8198 = !DILocalVariable(name: "hook", arg: 1, scope: !8196, file: !573, line: 23, type: !302)
!8199 = !DILocation(line: 0, scope: !8196)
!8200 = !DILocation(line: 25, column: 15, scope: !8196)
!8201 = !DILocation(line: 26, column: 1, scope: !8196)
!8202 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !573, file: !573, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8203)
!8203 = !{!8204}
!8204 = !DILocalVariable(name: "c", arg: 1, scope: !8202, file: !573, line: 14, type: !109)
!8205 = !DILocation(line: 0, scope: !8202)
!8206 = !DILocation(line: 18, column: 2, scope: !8202)
!8207 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !573, file: !573, line: 28, type: !8208, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8210)
!8208 = !DISubroutineType(types: !8209)
!8209 = !{!109, !109, !569}
!8210 = !{!8211, !8212}
!8211 = !DILocalVariable(name: "c", arg: 1, scope: !8207, file: !573, line: 28, type: !109)
!8212 = !DILocalVariable(name: "stream", arg: 2, scope: !8207, file: !573, line: 28, type: !569)
!8213 = !DILocation(line: 0, scope: !8207)
!8214 = !DILocation(line: 30, column: 27, scope: !8207)
!8215 = !DILocation(line: 30, column: 50, scope: !8207)
!8216 = !DILocation(line: 30, column: 9, scope: !8207)
!8217 = !DILocation(line: 30, column: 2, scope: !8207)
!8218 = distinct !DISubprogram(name: "fputc", scope: !573, file: !573, line: 41, type: !8208, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8219)
!8219 = !{!8220, !8221}
!8220 = !DILocalVariable(name: "c", arg: 1, scope: !8218, file: !573, line: 41, type: !109)
!8221 = !DILocalVariable(name: "stream", arg: 2, scope: !8218, file: !573, line: 41, type: !569)
!8222 = !DILocation(line: 0, scope: !8218)
!8223 = !DILocation(line: 43, column: 9, scope: !8218)
!8224 = !DILocation(line: 43, column: 2, scope: !8218)
!8225 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8226, file: !8226, line: 72, type: !8208, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8227)
!8226 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!8227 = !{!8228, !8229}
!8228 = !DILocalVariable(name: "c", arg: 1, scope: !8225, file: !8226, line: 72, type: !109)
!8229 = !DILocalVariable(name: "stream", arg: 2, scope: !8225, file: !8226, line: 72, type: !569)
!8230 = !DILocation(line: 0, scope: !8225)
!8231 = !DILocation(line: 81, column: 2, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8225, file: !8226, line: 81, column: 2)
!8233 = !{i64 2154220814}
!8234 = !DILocation(line: 82, column: 9, scope: !8225)
!8235 = !DILocation(line: 82, column: 2, scope: !8225)
!8236 = distinct !DISubprogram(name: "fputs", scope: !573, file: !573, line: 46, type: !8237, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8240)
!8237 = !DISubroutineType(types: !8238)
!8238 = !{!109, !7833, !8239}
!8239 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!8240 = !{!8241, !8242, !8243, !8244}
!8241 = !DILocalVariable(name: "s", arg: 1, scope: !8236, file: !573, line: 46, type: !7833)
!8242 = !DILocalVariable(name: "stream", arg: 2, scope: !8236, file: !573, line: 46, type: !8239)
!8243 = !DILocalVariable(name: "len", scope: !8236, file: !573, line: 48, type: !109)
!8244 = !DILocalVariable(name: "ret", scope: !8236, file: !573, line: 49, type: !109)
!8245 = !DILocation(line: 0, scope: !8236)
!8246 = !DILocation(line: 48, column: 12, scope: !8236)
!8247 = !DILocation(line: 51, column: 8, scope: !8236)
!8248 = !DILocation(line: 53, column: 13, scope: !8236)
!8249 = !DILocation(line: 53, column: 9, scope: !8236)
!8250 = !DILocation(line: 53, column: 2, scope: !8236)
!8251 = distinct !DISubprogram(name: "fwrite", scope: !573, file: !573, line: 99, type: !8252, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8254)
!8252 = !DISubroutineType(types: !8253)
!8253 = !{!234, !8133, !234, !234, !8239}
!8254 = !{!8255, !8256, !8257, !8258}
!8255 = !DILocalVariable(name: "ptr", arg: 1, scope: !8251, file: !573, line: 99, type: !8133)
!8256 = !DILocalVariable(name: "size", arg: 2, scope: !8251, file: !573, line: 99, type: !234)
!8257 = !DILocalVariable(name: "nitems", arg: 3, scope: !8251, file: !573, line: 99, type: !234)
!8258 = !DILocalVariable(name: "stream", arg: 4, scope: !8251, file: !573, line: 100, type: !8239)
!8259 = !DILocation(line: 0, scope: !8251)
!8260 = !DILocation(line: 102, column: 9, scope: !8251)
!8261 = !DILocation(line: 102, column: 2, scope: !8251)
!8262 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8226, file: !8226, line: 96, type: !8252, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8263)
!8263 = !{!8264, !8265, !8266, !8267}
!8264 = !DILocalVariable(name: "ptr", arg: 1, scope: !8262, file: !8226, line: 96, type: !8133)
!8265 = !DILocalVariable(name: "size", arg: 2, scope: !8262, file: !8226, line: 96, type: !234)
!8266 = !DILocalVariable(name: "nitems", arg: 3, scope: !8262, file: !8226, line: 96, type: !234)
!8267 = !DILocalVariable(name: "stream", arg: 4, scope: !8262, file: !8226, line: 96, type: !8239)
!8268 = !DILocation(line: 0, scope: !8262)
!8269 = !DILocation(line: 107, column: 2, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8262, file: !8226, line: 107, column: 2)
!8271 = !{i64 2154220918}
!8272 = !DILocation(line: 108, column: 9, scope: !8262)
!8273 = !DILocation(line: 108, column: 2, scope: !8262)
!8274 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !573, file: !573, line: 56, type: !8252, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8275)
!8275 = !{!8276, !8277, !8278, !8279, !8280, !8281, !8282, !8283}
!8276 = !DILocalVariable(name: "ptr", arg: 1, scope: !8274, file: !573, line: 56, type: !8133)
!8277 = !DILocalVariable(name: "size", arg: 2, scope: !8274, file: !573, line: 56, type: !234)
!8278 = !DILocalVariable(name: "nitems", arg: 3, scope: !8274, file: !573, line: 57, type: !234)
!8279 = !DILocalVariable(name: "stream", arg: 4, scope: !8274, file: !573, line: 57, type: !8239)
!8280 = !DILocalVariable(name: "i", scope: !8274, file: !573, line: 59, type: !234)
!8281 = !DILocalVariable(name: "j", scope: !8274, file: !573, line: 60, type: !234)
!8282 = !DILocalVariable(name: "p", scope: !8274, file: !573, line: 61, type: !2882)
!8283 = !DILabel(scope: !8274, name: "done", file: !573, line: 82)
!8284 = !DILocation(line: 0, scope: !8274)
!8285 = !DILocation(line: 63, column: 14, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8274, file: !573, line: 63, column: 6)
!8287 = !DILocation(line: 63, column: 24, scope: !8286)
!8288 = !DILocation(line: 72, column: 3, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8274, file: !573, line: 70, column: 5)
!8290 = !DILocation(line: 0, scope: !8289)
!8291 = !DILocation(line: 73, column: 8, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8293, file: !573, line: 73, column: 8)
!8293 = distinct !DILexicalBlock(scope: !8289, file: !573, line: 72, column: 6)
!8294 = !DILocation(line: 73, column: 29, scope: !8292)
!8295 = !DILocation(line: 73, column: 27, scope: !8292)
!8296 = !DILocation(line: 73, column: 21, scope: !8292)
!8297 = !DILocation(line: 73, column: 33, scope: !8292)
!8298 = !DILocation(line: 73, column: 8, scope: !8293)
!8299 = !DILocation(line: 76, column: 5, scope: !8293)
!8300 = !DILocation(line: 77, column: 14, scope: !8289)
!8301 = !DILocation(line: 77, column: 3, scope: !8293)
!8302 = distinct !{!8302, !8288, !8303}
!8303 = !DILocation(line: 77, column: 17, scope: !8289)
!8304 = !DILocation(line: 79, column: 4, scope: !8289)
!8305 = !DILocation(line: 80, column: 13, scope: !8274)
!8306 = !DILocation(line: 80, column: 2, scope: !8289)
!8307 = distinct !{!8307, !8308, !8309}
!8308 = !DILocation(line: 70, column: 2, scope: !8274)
!8309 = !DILocation(line: 80, column: 16, scope: !8274)
!8310 = !DILocation(line: 82, column: 1, scope: !8274)
!8311 = !DILocation(line: 83, column: 17, scope: !8274)
!8312 = !DILocation(line: 83, column: 2, scope: !8274)
!8313 = !DILocation(line: 84, column: 1, scope: !8274)
!8314 = distinct !DISubprogram(name: "puts", scope: !573, file: !573, line: 106, type: !8315, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8317)
!8315 = !DISubroutineType(types: !8316)
!8316 = !{!109, !279}
!8317 = !{!8318}
!8318 = !DILocalVariable(name: "s", arg: 1, scope: !8314, file: !573, line: 106, type: !279)
!8319 = !DILocation(line: 0, scope: !8314)
!8320 = !DILocation(line: 108, column: 6, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8314, file: !573, line: 108, column: 6)
!8322 = !DILocation(line: 108, column: 23, scope: !8321)
!8323 = !DILocation(line: 108, column: 6, scope: !8314)
!8324 = !DILocation(line: 112, column: 9, scope: !8314)
!8325 = !DILocation(line: 112, column: 29, scope: !8314)
!8326 = !DILocation(line: 112, column: 2, scope: !8314)
!8327 = !DILocation(line: 113, column: 1, scope: !8314)
!8328 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !684, file: !684, line: 368, type: !737, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8329)
!8329 = !{!8330}
!8330 = !DILocalVariable(name: "dev", arg: 1, scope: !8328, file: !684, line: 368, type: !713)
!8331 = !DILocation(line: 0, scope: !8328)
!8332 = !DILocation(line: 370, column: 2, scope: !8328)
!8333 = !DILocation(line: 371, column: 1, scope: !8328)
!8334 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !684, file: !684, line: 243, type: !8335, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8337)
!8335 = !DISubroutineType(types: !8336)
!8336 = !{null, !109, !109, !713}
!8337 = !{!8338, !8339, !8340, !8341, !8343}
!8338 = !DILocalVariable(name: "min", arg: 1, scope: !8334, file: !684, line: 243, type: !109)
!8339 = !DILocalVariable(name: "max", arg: 2, scope: !8334, file: !684, line: 243, type: !109)
!8340 = !DILocalVariable(name: "dev", arg: 3, scope: !8334, file: !684, line: 243, type: !713)
!8341 = !DILocalVariable(name: "data", scope: !8334, file: !684, line: 245, type: !8342)
!8342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!8343 = !DILocalVariable(name: "line", scope: !8334, file: !684, line: 246, type: !109)
!8344 = !DILocation(line: 0, scope: !8334)
!8345 = !DILocation(line: 245, column: 38, scope: !8334)
!8346 = !DILocation(line: 249, column: 24, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !684, line: 249, column: 2)
!8348 = distinct !DILexicalBlock(scope: !8334, file: !684, line: 249, column: 2)
!8349 = !DILocation(line: 249, column: 2, scope: !8348)
!8350 = !DILocation(line: 251, column: 7, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8352, file: !684, line: 251, column: 7)
!8352 = distinct !DILexicalBlock(scope: !8347, file: !684, line: 249, column: 39)
!8353 = !DILocation(line: 251, column: 7, scope: !8352)
!8354 = !DILocation(line: 253, column: 4, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8351, file: !684, line: 251, column: 36)
!8356 = !DILocation(line: 256, column: 24, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8355, file: !684, line: 256, column: 8)
!8358 = !DILocation(line: 256, column: 9, scope: !8357)
!8359 = !DILocation(line: 256, column: 8, scope: !8355)
!8360 = !DILocation(line: 260, column: 43, scope: !8355)
!8361 = !DILocation(line: 260, column: 4, scope: !8355)
!8362 = !DILocation(line: 261, column: 3, scope: !8355)
!8363 = !DILocation(line: 249, column: 35, scope: !8347)
!8364 = distinct !{!8364, !8349, !8365}
!8365 = !DILocation(line: 262, column: 2, scope: !8348)
!8366 = !DILocation(line: 263, column: 1, scope: !8334)
!8367 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !684, file: !684, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8368)
!8368 = !{!8369}
!8369 = !DILocalVariable(name: "line", arg: 1, scope: !8367, file: !684, line: 158, type: !109)
!8370 = !DILocation(line: 0, scope: !8367)
!8371 = !DILocation(line: 170, column: 38, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !684, line: 160, column: 17)
!8373 = distinct !DILexicalBlock(scope: !8367, file: !684, line: 160, column: 6)
!8374 = !DILocation(line: 170, column: 10, scope: !8372)
!8375 = !DILocation(line: 176, column: 1, scope: !8367)
!8376 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !684, file: !684, line: 183, type: !8377, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8379)
!8377 = !DISubroutineType(types: !8378)
!8378 = !{null, !109}
!8379 = !{!8380}
!8380 = !DILocalVariable(name: "line", arg: 1, scope: !8376, file: !684, line: 183, type: !109)
!8381 = !DILocation(line: 0, scope: !8376)
!8382 = !DILocation(line: 195, column: 28, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8384, file: !684, line: 185, column: 17)
!8384 = distinct !DILexicalBlock(scope: !8376, file: !684, line: 185, column: 6)
!8385 = !DILocation(line: 195, column: 3, scope: !8383)
!8386 = !DILocation(line: 200, column: 1, scope: !8376)
!8387 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8388, file: !8388, line: 910, type: !6534, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8389)
!8388 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8387, file: !8388, line: 910, type: !110)
!8391 = !DILocation(line: 0, scope: !8387)
!8392 = !DILocation(line: 912, column: 3, scope: !8387)
!8393 = !DILocation(line: 913, column: 1, scope: !8387)
!8394 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8388, file: !8388, line: 834, type: !7724, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8395)
!8395 = !{!8396}
!8396 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8394, file: !8388, line: 834, type: !110)
!8397 = !DILocation(line: 0, scope: !8394)
!8398 = !DILocation(line: 836, column: 11, scope: !8394)
!8399 = !DILocation(line: 836, column: 40, scope: !8394)
!8400 = !DILocation(line: 836, column: 3, scope: !8394)
!8401 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !684, file: !684, line: 304, type: !737, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8402)
!8402 = !{!8403}
!8403 = !DILocalVariable(name: "dev", arg: 1, scope: !8401, file: !684, line: 304, type: !713)
!8404 = !DILocation(line: 0, scope: !8401)
!8405 = !DILocation(line: 306, column: 2, scope: !8401)
!8406 = !DILocation(line: 307, column: 1, scope: !8401)
!8407 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !684, file: !684, line: 299, type: !737, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8408)
!8408 = !{!8409}
!8409 = !DILocalVariable(name: "dev", arg: 1, scope: !8407, file: !684, line: 299, type: !713)
!8410 = !DILocation(line: 0, scope: !8407)
!8411 = !DILocation(line: 301, column: 2, scope: !8407)
!8412 = !DILocation(line: 302, column: 1, scope: !8407)
!8413 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !684, file: !684, line: 294, type: !737, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8414)
!8414 = !{!8415}
!8415 = !DILocalVariable(name: "dev", arg: 1, scope: !8413, file: !684, line: 294, type: !713)
!8416 = !DILocation(line: 0, scope: !8413)
!8417 = !DILocation(line: 296, column: 2, scope: !8413)
!8418 = !DILocation(line: 297, column: 1, scope: !8413)
!8419 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !684, file: !684, line: 397, type: !737, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8420)
!8420 = !{!8421}
!8421 = !DILocalVariable(name: "dev", arg: 1, scope: !8419, file: !684, line: 397, type: !713)
!8422 = !DILocation(line: 0, scope: !8419)
!8423 = !DILocation(line: 399, column: 2, scope: !8419)
!8424 = !DILocation(line: 400, column: 1, scope: !8419)
!8425 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !684, file: !684, line: 392, type: !737, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8426)
!8426 = !{!8427}
!8427 = !DILocalVariable(name: "dev", arg: 1, scope: !8425, file: !684, line: 392, type: !713)
!8428 = !DILocation(line: 0, scope: !8425)
!8429 = !DILocation(line: 394, column: 2, scope: !8425)
!8430 = !DILocation(line: 395, column: 1, scope: !8425)
!8431 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !684, file: !684, line: 289, type: !737, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8432)
!8432 = !{!8433}
!8433 = !DILocalVariable(name: "dev", arg: 1, scope: !8431, file: !684, line: 289, type: !713)
!8434 = !DILocation(line: 0, scope: !8431)
!8435 = !DILocation(line: 291, column: 2, scope: !8431)
!8436 = !DILocation(line: 292, column: 1, scope: !8431)
!8437 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !684, file: !684, line: 387, type: !737, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8438)
!8438 = !{!8439}
!8439 = !DILocalVariable(name: "dev", arg: 1, scope: !8437, file: !684, line: 387, type: !713)
!8440 = !DILocation(line: 0, scope: !8437)
!8441 = !DILocation(line: 389, column: 2, scope: !8437)
!8442 = !DILocation(line: 390, column: 1, scope: !8437)
!8443 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !684, file: !684, line: 382, type: !737, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8444)
!8444 = !{!8445}
!8445 = !DILocalVariable(name: "dev", arg: 1, scope: !8443, file: !684, line: 382, type: !713)
!8446 = !DILocation(line: 0, scope: !8443)
!8447 = !DILocation(line: 384, column: 2, scope: !8443)
!8448 = !DILocation(line: 385, column: 1, scope: !8443)
!8449 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !684, file: !684, line: 373, type: !737, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8450)
!8450 = !{!8451}
!8451 = !DILocalVariable(name: "dev", arg: 1, scope: !8449, file: !684, line: 373, type: !713)
!8452 = !DILocation(line: 0, scope: !8449)
!8453 = !DILocation(line: 375, column: 2, scope: !8449)
!8454 = !DILocation(line: 376, column: 1, scope: !8449)
!8455 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !684, file: !684, line: 284, type: !737, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8456)
!8456 = !{!8457}
!8457 = !DILocalVariable(name: "dev", arg: 1, scope: !8455, file: !684, line: 284, type: !713)
!8458 = !DILocation(line: 0, scope: !8455)
!8459 = !DILocation(line: 286, column: 2, scope: !8455)
!8460 = !DILocation(line: 287, column: 1, scope: !8455)
!8461 = distinct !DISubprogram(name: "stm32_exti_init", scope: !684, file: !684, line: 416, type: !711, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8462)
!8462 = !{!8463}
!8463 = !DILocalVariable(name: "dev", arg: 1, scope: !8461, file: !684, line: 416, type: !713)
!8464 = !DILocation(line: 0, scope: !8461)
!8465 = !DILocation(line: 418, column: 2, scope: !8461)
!8466 = !DILocation(line: 420, column: 2, scope: !8461)
!8467 = !DILocation(line: 0, scope: !736)
!8468 = !DILocation(line: 493, column: 2, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !736, file: !684, line: 493, column: 2)
!8470 = !DILocation(line: 497, column: 2, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !736, file: !684, line: 497, column: 2)
!8472 = !DILocation(line: 507, column: 2, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !736, file: !684, line: 507, column: 2)
!8474 = !DILocation(line: 512, column: 2, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !736, file: !684, line: 512, column: 2)
!8476 = !DILocation(line: 516, column: 2, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !736, file: !684, line: 516, column: 2)
!8478 = !DILocation(line: 523, column: 2, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !736, file: !684, line: 523, column: 2)
!8480 = !DILocation(line: 527, column: 2, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !736, file: !684, line: 527, column: 2)
!8482 = !DILocation(line: 581, column: 2, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !736, file: !684, line: 581, column: 2)
!8484 = !DILocation(line: 586, column: 2, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !736, file: !684, line: 586, column: 2)
!8486 = !DILocation(line: 591, column: 2, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !736, file: !684, line: 591, column: 2)
!8488 = !DILocation(line: 595, column: 2, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !736, file: !684, line: 595, column: 2)
!8490 = !DILocation(line: 607, column: 1, scope: !736)
!8491 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !684, file: !684, line: 112, type: !8377, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8492)
!8492 = !{!8493, !8494}
!8493 = !DILocalVariable(name: "line", arg: 1, scope: !8491, file: !684, line: 112, type: !109)
!8494 = !DILocalVariable(name: "irqnum", scope: !8491, file: !684, line: 114, type: !109)
!8495 = !DILocation(line: 0, scope: !8491)
!8496 = !DILocation(line: 122, column: 13, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8491, file: !684, line: 122, column: 6)
!8498 = !DILocation(line: 122, column: 6, scope: !8491)
!8499 = !DILocation(line: 123, column: 3, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !684, line: 123, column: 3)
!8501 = distinct !DILexicalBlock(scope: !8502, file: !684, line: 123, column: 3)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !684, line: 123, column: 3)
!8503 = distinct !DILexicalBlock(scope: !8497, file: !684, line: 122, column: 22)
!8504 = !DILocation(line: 121, column: 11, scope: !8491)
!8505 = !DILocation(line: 130, column: 26, scope: !8491)
!8506 = !DILocation(line: 130, column: 2, scope: !8491)
!8507 = !DILocation(line: 134, column: 2, scope: !8491)
!8508 = !DILocation(line: 135, column: 1, scope: !8491)
!8509 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8388, file: !8388, line: 268, type: !6534, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8510)
!8510 = !{!8511}
!8511 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8509, file: !8388, line: 268, type: !110)
!8512 = !DILocation(line: 0, scope: !8509)
!8513 = !DILocation(line: 270, column: 3, scope: !8509)
!8514 = !DILocation(line: 271, column: 1, scope: !8509)
!8515 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !684, file: !684, line: 137, type: !8377, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8516)
!8516 = !{!8517}
!8517 = !DILocalVariable(name: "line", arg: 1, scope: !8515, file: !684, line: 137, type: !109)
!8518 = !DILocation(line: 0, scope: !8515)
!8519 = !DILocation(line: 141, column: 11, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8515, file: !684, line: 141, column: 6)
!8521 = !DILocation(line: 141, column: 6, scope: !8515)
!8522 = !DILocation(line: 145, column: 28, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8520, file: !684, line: 141, column: 17)
!8524 = !DILocation(line: 145, column: 3, scope: !8523)
!8525 = !DILocation(line: 147, column: 2, scope: !8523)
!8526 = !DILocation(line: 151, column: 1, scope: !8515)
!8527 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8388, file: !8388, line: 309, type: !6534, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8528)
!8528 = !{!8529}
!8529 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8527, file: !8388, line: 309, type: !110)
!8530 = !DILocation(line: 0, scope: !8527)
!8531 = !DILocation(line: 311, column: 3, scope: !8527)
!8532 = !DILocation(line: 312, column: 1, scope: !8527)
!8533 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !684, file: !684, line: 202, type: !8534, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8536)
!8534 = !DISubroutineType(types: !8535)
!8535 = !{null, !109, !109}
!8536 = !{!8537, !8538}
!8537 = !DILocalVariable(name: "line", arg: 1, scope: !8533, file: !684, line: 202, type: !109)
!8538 = !DILocalVariable(name: "trigger", arg: 2, scope: !8533, file: !684, line: 202, type: !109)
!8539 = !DILocation(line: 0, scope: !8533)
!8540 = !DILocation(line: 211, column: 2, scope: !8533)
!8541 = !DILocation(line: 213, column: 36, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8533, file: !684, line: 211, column: 19)
!8543 = !DILocation(line: 213, column: 3, scope: !8542)
!8544 = !DILocation(line: 214, column: 3, scope: !8542)
!8545 = !DILocation(line: 215, column: 3, scope: !8542)
!8546 = !DILocation(line: 217, column: 35, scope: !8542)
!8547 = !DILocation(line: 217, column: 3, scope: !8542)
!8548 = !DILocation(line: 218, column: 3, scope: !8542)
!8549 = !DILocation(line: 219, column: 3, scope: !8542)
!8550 = !DILocation(line: 221, column: 36, scope: !8542)
!8551 = !DILocation(line: 221, column: 3, scope: !8542)
!8552 = !DILocation(line: 222, column: 3, scope: !8542)
!8553 = !DILocation(line: 223, column: 3, scope: !8542)
!8554 = !DILocation(line: 225, column: 35, scope: !8542)
!8555 = !DILocation(line: 225, column: 3, scope: !8542)
!8556 = !DILocation(line: 226, column: 3, scope: !8542)
!8557 = !DILocation(line: 227, column: 3, scope: !8542)
!8558 = !DILocation(line: 232, column: 1, scope: !8533)
!8559 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8388, file: !8388, line: 573, type: !6534, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8560)
!8560 = !{!8561}
!8561 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8559, file: !8388, line: 573, type: !110)
!8562 = !DILocation(line: 0, scope: !8559)
!8563 = !DILocation(line: 575, column: 3, scope: !8559)
!8564 = !DILocation(line: 577, column: 1, scope: !8559)
!8565 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8388, file: !8388, line: 703, type: !6534, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8566)
!8566 = !{!8567}
!8567 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8565, file: !8388, line: 703, type: !110)
!8568 = !DILocation(line: 0, scope: !8565)
!8569 = !DILocation(line: 705, column: 3, scope: !8565)
!8570 = !DILocation(line: 706, column: 1, scope: !8565)
!8571 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8388, file: !8388, line: 529, type: !6534, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8572)
!8572 = !{!8573}
!8573 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8571, file: !8388, line: 529, type: !110)
!8574 = !DILocation(line: 0, scope: !8571)
!8575 = !DILocation(line: 531, column: 3, scope: !8571)
!8576 = !DILocation(line: 533, column: 1, scope: !8571)
!8577 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8388, file: !8388, line: 661, type: !6534, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8578)
!8578 = !{!8579}
!8579 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8577, file: !8388, line: 661, type: !110)
!8580 = !DILocation(line: 0, scope: !8577)
!8581 = !DILocation(line: 663, column: 3, scope: !8577)
!8582 = !DILocation(line: 664, column: 1, scope: !8577)
!8583 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !684, file: !684, line: 433, type: !8584, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8586)
!8584 = !DISubroutineType(types: !8585)
!8585 = !{!109, !109, !724, !107}
!8586 = !{!8587, !8588, !8589, !8590, !8592}
!8587 = !DILocalVariable(name: "line", arg: 1, scope: !8583, file: !684, line: 433, type: !109)
!8588 = !DILocalVariable(name: "cb", arg: 2, scope: !8583, file: !684, line: 433, type: !724)
!8589 = !DILocalVariable(name: "arg", arg: 3, scope: !8583, file: !684, line: 433, type: !107)
!8590 = !DILocalVariable(name: "dev", scope: !8583, file: !684, line: 435, type: !8591)
!8591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !713)
!8592 = !DILocalVariable(name: "data", scope: !8583, file: !684, line: 436, type: !8342)
!8593 = !DILocation(line: 0, scope: !8583)
!8594 = !DILocation(line: 438, column: 21, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8583, file: !684, line: 438, column: 6)
!8596 = !DILocation(line: 438, column: 6, scope: !8595)
!8597 = !DILocation(line: 438, column: 6, scope: !8583)
!8598 = !DILocation(line: 442, column: 20, scope: !8583)
!8599 = !DILocation(line: 443, column: 17, scope: !8583)
!8600 = !DILocation(line: 443, column: 22, scope: !8583)
!8601 = !DILocation(line: 445, column: 2, scope: !8583)
!8602 = !DILocation(line: 446, column: 1, scope: !8583)
!8603 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !684, file: !684, line: 448, type: !8377, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8604)
!8604 = !{!8605, !8606, !8607}
!8605 = !DILocalVariable(name: "line", arg: 1, scope: !8603, file: !684, line: 448, type: !109)
!8606 = !DILocalVariable(name: "dev", scope: !8603, file: !684, line: 450, type: !8591)
!8607 = !DILocalVariable(name: "data", scope: !8603, file: !684, line: 451, type: !8342)
!8608 = !DILocation(line: 0, scope: !8603)
!8609 = !DILocation(line: 453, column: 17, scope: !8603)
!8610 = !DILocation(line: 453, column: 20, scope: !8603)
!8611 = !DILocation(line: 454, column: 17, scope: !8603)
!8612 = !DILocation(line: 454, column: 22, scope: !8603)
!8613 = !DILocation(line: 455, column: 1, scope: !8603)
!8614 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !871, file: !871, line: 183, type: !909, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8615)
!8615 = !{!8616, !8617, !8618, !8619, !8620}
!8616 = !DILocalVariable(name: "dev", arg: 1, scope: !8614, file: !871, line: 183, type: !900)
!8617 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8614, file: !871, line: 184, type: !911)
!8618 = !DILocalVariable(name: "pclken", scope: !8614, file: !871, line: 186, type: !861)
!8619 = !DILocalVariable(name: "reg", scope: !8614, file: !871, line: 187, type: !1452)
!8620 = !DILocalVariable(name: "reg_val", scope: !8614, file: !871, line: 188, type: !110)
!8621 = !DILocation(line: 0, scope: !8614)
!8622 = !DILocation(line: 192, column: 6, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8614, file: !871, line: 192, column: 6)
!8624 = !DILocation(line: 192, column: 6, scope: !8614)
!8625 = !DILocation(line: 197, column: 52, scope: !8614)
!8626 = !DILocation(line: 197, column: 8, scope: !8614)
!8627 = !DILocation(line: 198, column: 12, scope: !8614)
!8628 = !DILocation(line: 199, column: 21, scope: !8614)
!8629 = !DILocation(line: 199, column: 10, scope: !8614)
!8630 = !DILocation(line: 200, column: 7, scope: !8614)
!8631 = !DILocation(line: 202, column: 2, scope: !8614)
!8632 = !DILocation(line: 203, column: 1, scope: !8614)
!8633 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !871, file: !871, line: 205, type: !909, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8634)
!8634 = !{!8635, !8636, !8637, !8638, !8639}
!8635 = !DILocalVariable(name: "dev", arg: 1, scope: !8633, file: !871, line: 205, type: !900)
!8636 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8633, file: !871, line: 206, type: !911)
!8637 = !DILocalVariable(name: "pclken", scope: !8633, file: !871, line: 208, type: !861)
!8638 = !DILocalVariable(name: "reg", scope: !8633, file: !871, line: 209, type: !1452)
!8639 = !DILocalVariable(name: "reg_val", scope: !8633, file: !871, line: 210, type: !110)
!8640 = !DILocation(line: 0, scope: !8633)
!8641 = !DILocation(line: 214, column: 6, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8633, file: !871, line: 214, column: 6)
!8643 = !DILocation(line: 214, column: 6, scope: !8633)
!8644 = !DILocation(line: 219, column: 52, scope: !8633)
!8645 = !DILocation(line: 219, column: 8, scope: !8633)
!8646 = !DILocation(line: 220, column: 12, scope: !8633)
!8647 = !DILocation(line: 221, column: 22, scope: !8633)
!8648 = !DILocation(line: 221, column: 13, scope: !8633)
!8649 = !DILocation(line: 221, column: 10, scope: !8633)
!8650 = !DILocation(line: 222, column: 7, scope: !8633)
!8651 = !DILocation(line: 224, column: 2, scope: !8633)
!8652 = !DILocation(line: 225, column: 1, scope: !8633)
!8653 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !871, file: !871, line: 262, type: !925, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8654)
!8654 = !{!8655, !8656, !8657, !8658, !8659, !8660, !8661, !8662}
!8655 = !DILocalVariable(name: "clock", arg: 1, scope: !8653, file: !871, line: 262, type: !900)
!8656 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8653, file: !871, line: 263, type: !911)
!8657 = !DILocalVariable(name: "rate", arg: 3, scope: !8653, file: !871, line: 264, type: !867)
!8658 = !DILocalVariable(name: "pclken", scope: !8653, file: !871, line: 266, type: !861)
!8659 = !DILocalVariable(name: "ahb_clock", scope: !8653, file: !871, line: 273, type: !110)
!8660 = !DILocalVariable(name: "apb1_clock", scope: !8653, file: !871, line: 274, type: !110)
!8661 = !DILocalVariable(name: "apb2_clock", scope: !8653, file: !871, line: 276, type: !110)
!8662 = !DILocalVariable(name: "ahb3_clock", scope: !8653, file: !871, line: 286, type: !110)
!8663 = !DILocation(line: 0, scope: !8653)
!8664 = !DILocation(line: 273, column: 23, scope: !8653)
!8665 = !DILocation(line: 299, column: 18, scope: !8653)
!8666 = !DILocation(line: 299, column: 2, scope: !8653)
!8667 = !DILocation(line: 274, column: 24, scope: !8653)
!8668 = !DILocation(line: 319, column: 3, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8653, file: !871, line: 299, column: 23)
!8670 = !DILocation(line: 276, column: 24, scope: !8653)
!8671 = !DILocation(line: 323, column: 3, scope: !8669)
!8672 = !DILocation(line: 346, column: 33, scope: !8669)
!8673 = !DILocation(line: 346, column: 11, scope: !8669)
!8674 = !DILocation(line: 350, column: 3, scope: !8669)
!8675 = !DILocation(line: 354, column: 33, scope: !8669)
!8676 = !DILocation(line: 354, column: 11, scope: !8669)
!8677 = !DILocation(line: 358, column: 3, scope: !8669)
!8678 = !DILocation(line: 374, column: 3, scope: !8669)
!8679 = !DILocation(line: 379, column: 3, scope: !8669)
!8680 = !DILocation(line: 0, scope: !8669)
!8681 = !DILocation(line: 396, column: 1, scope: !8653)
!8682 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !871, file: !871, line: 227, type: !941, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8683)
!8683 = !{!8684, !8685, !8686, !8687, !8688, !8689, !8690, !8691}
!8684 = !DILocalVariable(name: "dev", arg: 1, scope: !8682, file: !871, line: 227, type: !900)
!8685 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8682, file: !871, line: 228, type: !911)
!8686 = !DILocalVariable(name: "data", arg: 3, scope: !8682, file: !871, line: 229, type: !107)
!8687 = !DILocalVariable(name: "pclken", scope: !8682, file: !871, line: 233, type: !861)
!8688 = !DILocalVariable(name: "reg", scope: !8682, file: !871, line: 234, type: !1452)
!8689 = !DILocalVariable(name: "reg_val", scope: !8682, file: !871, line: 235, type: !110)
!8690 = !DILocalVariable(name: "dt_val", scope: !8682, file: !871, line: 235, type: !110)
!8691 = !DILocalVariable(name: "err", scope: !8682, file: !871, line: 236, type: !109)
!8692 = !DILocation(line: 0, scope: !8682)
!8693 = !DILocation(line: 241, column: 30, scope: !8682)
!8694 = !DILocation(line: 241, column: 8, scope: !8682)
!8695 = !DILocation(line: 242, column: 10, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8682, file: !871, line: 242, column: 6)
!8697 = !DILocation(line: 242, column: 6, scope: !8682)
!8698 = !DILocation(line: 247, column: 11, scope: !8682)
!8699 = !DILocation(line: 248, column: 6, scope: !8682)
!8700 = !DILocation(line: 247, column: 44, scope: !8682)
!8701 = !DILocation(line: 250, column: 6, scope: !8682)
!8702 = !DILocation(line: 249, column: 52, scope: !8682)
!8703 = !DILocation(line: 249, column: 8, scope: !8682)
!8704 = !DILocation(line: 251, column: 12, scope: !8682)
!8705 = !DILocation(line: 252, column: 10, scope: !8682)
!8706 = !DILocation(line: 253, column: 7, scope: !8682)
!8707 = !DILocation(line: 255, column: 2, scope: !8682)
!8708 = !DILocation(line: 260, column: 1, scope: !8682)
!8709 = distinct !DISubprogram(name: "enabled_clock", scope: !871, file: !871, line: 100, type: !8710, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8712)
!8710 = !DISubroutineType(types: !8711)
!8711 = !{!109, !110}
!8712 = !{!8713, !8714}
!8713 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8709, file: !871, line: 100, type: !110)
!8714 = !DILocalVariable(name: "r", scope: !8709, file: !871, line: 102, type: !109)
!8715 = !DILocation(line: 0, scope: !8709)
!8716 = !DILocation(line: 104, column: 2, scope: !8709)
!8717 = !DILocation(line: 180, column: 2, scope: !8709)
!8718 = !DILocation(line: 181, column: 1, scope: !8709)
!8719 = distinct !DISubprogram(name: "get_bus_clock", scope: !871, file: !871, line: 79, type: !8720, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8722)
!8720 = !DISubroutineType(types: !8721)
!8721 = !{!110, !110, !110}
!8722 = !{!8723, !8724}
!8723 = !DILocalVariable(name: "clock", arg: 1, scope: !8719, file: !871, line: 79, type: !110)
!8724 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8719, file: !871, line: 79, type: !110)
!8725 = !DILocation(line: 0, scope: !8719)
!8726 = !DILocation(line: 81, column: 15, scope: !8719)
!8727 = !DILocation(line: 81, column: 2, scope: !8719)
!8728 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !871, file: !871, line: 68, type: !8729, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8731)
!8729 = !DISubroutineType(types: !8730)
!8730 = !{!110, !110, !109, !109, !109}
!8731 = !{!8732, !8733, !8734, !8735}
!8732 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8728, file: !871, line: 68, type: !110)
!8733 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8728, file: !871, line: 69, type: !109)
!8734 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8728, file: !871, line: 70, type: !109)
!8735 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8728, file: !871, line: 71, type: !109)
!8736 = !DILocation(line: 0, scope: !8728)
!8737 = !DILocation(line: 75, column: 22, scope: !8728)
!8738 = !DILocation(line: 76, column: 13, scope: !8728)
!8739 = !DILocation(line: 75, column: 34, scope: !8728)
!8740 = !DILocation(line: 75, column: 2, scope: !8728)
!8741 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !871, file: !871, line: 641, type: !898, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8742)
!8742 = !{!8743, !8744, !8745}
!8743 = !DILocalVariable(name: "dev", arg: 1, scope: !8741, file: !871, line: 641, type: !900)
!8744 = !DILocalVariable(name: "old_flash_freq", scope: !8741, file: !871, line: 664, type: !110)
!8745 = !DILocalVariable(name: "new_flash_freq", scope: !8741, file: !871, line: 665, type: !110)
!8746 = !DILocation(line: 0, scope: !8741)
!8747 = !DILocation(line: 646, column: 2, scope: !8741)
!8748 = !DILocation(line: 667, column: 19, scope: !8741)
!8749 = !DILocation(line: 674, column: 21, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8741, file: !871, line: 674, column: 6)
!8751 = !DILocation(line: 674, column: 6, scope: !8741)
!8752 = !DILocation(line: 675, column: 3, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8750, file: !871, line: 674, column: 59)
!8754 = !DILocation(line: 676, column: 2, scope: !8753)
!8755 = !DILocation(line: 680, column: 2, scope: !8741)
!8756 = !DILocation(line: 683, column: 2, scope: !8741)
!8757 = !DILocation(line: 690, column: 3, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !871, line: 689, column: 9)
!8759 = distinct !DILexicalBlock(scope: !8741, file: !871, line: 685, column: 6)
!8760 = !DILocation(line: 695, column: 2, scope: !8741)
!8761 = !DILocation(line: 696, column: 2, scope: !8741)
!8762 = !DILocation(line: 696, column: 9, scope: !8741)
!8763 = !DILocation(line: 696, column: 34, scope: !8741)
!8764 = distinct !{!8764, !8761, !8765}
!8765 = !DILocation(line: 697, column: 2, scope: !8741)
!8766 = !DILocation(line: 720, column: 21, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8741, file: !871, line: 720, column: 6)
!8768 = !DILocation(line: 720, column: 6, scope: !8741)
!8769 = !DILocation(line: 721, column: 3, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8767, file: !871, line: 720, column: 60)
!8771 = !DILocation(line: 722, column: 2, scope: !8770)
!8772 = !DILocation(line: 725, column: 18, scope: !8741)
!8773 = !DILocation(line: 728, column: 2, scope: !8741)
!8774 = !DILocation(line: 730, column: 2, scope: !8741)
!8775 = !DILocation(line: 745, column: 2, scope: !8741)
!8776 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8777, file: !8777, line: 3275, type: !6524, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8777 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8778 = !DILocation(line: 3277, column: 21, scope: !8776)
!8779 = !DILocation(line: 3277, column: 3, scope: !8776)
!8780 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !871, file: !871, line: 507, type: !3116, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8781 = !DILocation(line: 516, column: 4, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8783, file: !871, line: 515, column: 10)
!8783 = distinct !DILexicalBlock(scope: !8784, file: !871, line: 513, column: 7)
!8784 = distinct !DILexicalBlock(scope: !8785, file: !871, line: 510, column: 37)
!8785 = distinct !DILexicalBlock(scope: !8780, file: !871, line: 510, column: 6)
!8786 = !DILocation(line: 526, column: 3, scope: !8784)
!8787 = !DILocation(line: 527, column: 3, scope: !8784)
!8788 = !DILocation(line: 527, column: 10, scope: !8784)
!8789 = !DILocation(line: 527, column: 31, scope: !8784)
!8790 = distinct !{!8790, !8787, !8791}
!8791 = !DILocation(line: 529, column: 3, scope: !8784)
!8792 = !DILocation(line: 583, column: 3, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8794, file: !871, line: 577, column: 37)
!8794 = distinct !DILexicalBlock(scope: !8780, file: !871, line: 577, column: 6)
!8795 = !DILocation(line: 584, column: 3, scope: !8793)
!8796 = !DILocation(line: 584, column: 10, scope: !8793)
!8797 = !DILocation(line: 584, column: 31, scope: !8793)
!8798 = distinct !{!8798, !8795, !8799}
!8799 = !DILocation(line: 585, column: 3, scope: !8793)
!8800 = !DILocation(line: 627, column: 1, scope: !8780)
!8801 = distinct !DISubprogram(name: "set_up_plls", scope: !871, file: !871, line: 448, type: !3116, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8802 = !DILocation(line: 460, column: 6, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8801, file: !871, line: 460, column: 6)
!8804 = !DILocation(line: 460, column: 31, scope: !8803)
!8805 = !DILocation(line: 460, column: 6, scope: !8801)
!8806 = !DILocation(line: 461, column: 3, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8803, file: !871, line: 460, column: 67)
!8808 = !DILocation(line: 462, column: 3, scope: !8807)
!8809 = !DILocation(line: 463, column: 2, scope: !8807)
!8810 = !DILocation(line: 464, column: 2, scope: !8801)
!8811 = !DILocation(line: 488, column: 2, scope: !8801)
!8812 = !DILocation(line: 492, column: 2, scope: !8801)
!8813 = !DILocation(line: 496, column: 2, scope: !8801)
!8814 = !DILocation(line: 499, column: 2, scope: !8801)
!8815 = !DILocation(line: 500, column: 2, scope: !8801)
!8816 = !DILocation(line: 500, column: 9, scope: !8801)
!8817 = !DILocation(line: 500, column: 30, scope: !8801)
!8818 = distinct !{!8818, !8815, !8819}
!8819 = !DILocation(line: 502, column: 2, scope: !8801)
!8820 = !DILocation(line: 505, column: 1, scope: !8801)
!8821 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8777, file: !8777, line: 3224, type: !6534, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8822)
!8822 = !{!8823}
!8823 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8821, file: !8777, line: 3224, type: !110)
!8824 = !DILocation(line: 0, scope: !8821)
!8825 = !DILocation(line: 3226, column: 3, scope: !8821)
!8826 = !DILocation(line: 3227, column: 1, scope: !8821)
!8827 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8777, file: !8777, line: 3188, type: !6534, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8828)
!8828 = !{!8829}
!8829 = !DILocalVariable(name: "Source", arg: 1, scope: !8827, file: !8777, line: 3188, type: !110)
!8830 = !DILocation(line: 0, scope: !8827)
!8831 = !DILocation(line: 3190, column: 3, scope: !8827)
!8832 = !DILocation(line: 3191, column: 1, scope: !8827)
!8833 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8777, file: !8777, line: 3204, type: !6524, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8834 = !DILocation(line: 3206, column: 21, scope: !8833)
!8835 = !DILocation(line: 3206, column: 3, scope: !8833)
!8836 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8777, file: !8777, line: 3240, type: !6534, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8837)
!8837 = !{!8838}
!8838 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8836, file: !8777, line: 3240, type: !110)
!8839 = !DILocation(line: 0, scope: !8836)
!8840 = !DILocation(line: 3242, column: 3, scope: !8836)
!8841 = !DILocation(line: 3243, column: 1, scope: !8836)
!8842 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8777, file: !8777, line: 3256, type: !6534, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !8843)
!8843 = !{!8844}
!8844 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8842, file: !8777, line: 3256, type: !110)
!8845 = !DILocation(line: 0, scope: !8842)
!8846 = !DILocation(line: 3258, column: 3, scope: !8842)
!8847 = !DILocation(line: 3259, column: 1, scope: !8842)
!8848 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !871, file: !871, line: 409, type: !3116, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8849 = !DILocation(line: 412, column: 6, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8848, file: !871, line: 412, column: 6)
!8851 = !DILocation(line: 412, column: 27, scope: !8850)
!8852 = !DILocation(line: 412, column: 6, scope: !8848)
!8853 = !DILocation(line: 414, column: 3, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8850, file: !871, line: 412, column: 33)
!8855 = !DILocation(line: 415, column: 3, scope: !8854)
!8856 = !DILocation(line: 415, column: 10, scope: !8854)
!8857 = !DILocation(line: 415, column: 31, scope: !8854)
!8858 = distinct !{!8858, !8855, !8859}
!8859 = !DILocation(line: 417, column: 3, scope: !8854)
!8860 = !DILocation(line: 421, column: 2, scope: !8848)
!8861 = !DILocation(line: 422, column: 2, scope: !8848)
!8862 = !DILocation(line: 422, column: 9, scope: !8848)
!8863 = !DILocation(line: 422, column: 34, scope: !8848)
!8864 = distinct !{!8864, !8861, !8865}
!8865 = !DILocation(line: 423, column: 2, scope: !8848)
!8866 = !DILocation(line: 424, column: 1, scope: !8848)
!8867 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8777, file: !8777, line: 4195, type: !3116, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8868 = !DILocation(line: 4197, column: 3, scope: !8867)
!8869 = !DILocation(line: 4198, column: 1, scope: !8867)
!8870 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8777, file: !8777, line: 4184, type: !3116, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8871 = !DILocation(line: 4186, column: 3, scope: !8870)
!8872 = !DILocation(line: 4187, column: 1, scope: !8870)
!8873 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8777, file: !8777, line: 4205, type: !6524, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8874 = !DILocation(line: 4207, column: 11, scope: !8873)
!8875 = !DILocation(line: 4207, column: 44, scope: !8873)
!8876 = !DILocation(line: 4207, column: 3, scope: !8873)
!8877 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8777, file: !8777, line: 3007, type: !6524, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8878 = !DILocation(line: 3009, column: 11, scope: !8877)
!8879 = !DILocation(line: 3009, column: 44, scope: !8877)
!8880 = !DILocation(line: 3009, column: 3, scope: !8877)
!8881 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8777, file: !8777, line: 2987, type: !3116, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8882 = !DILocation(line: 2989, column: 3, scope: !8881)
!8883 = !DILocation(line: 2990, column: 1, scope: !8881)
!8884 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8777, file: !8777, line: 2939, type: !3116, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8885 = !DILocation(line: 2941, column: 3, scope: !8884)
!8886 = !DILocation(line: 2942, column: 1, scope: !8884)
!8887 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8777, file: !8777, line: 2949, type: !3116, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8888 = !DILocation(line: 2951, column: 3, scope: !8887)
!8889 = !DILocation(line: 2952, column: 1, scope: !8887)
!8890 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8777, file: !8777, line: 2969, type: !6524, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8891 = !DILocation(line: 2971, column: 11, scope: !8890)
!8892 = !DILocation(line: 2971, column: 44, scope: !8890)
!8893 = !DILocation(line: 2971, column: 3, scope: !8890)
!8894 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8777, file: !8777, line: 3143, type: !3116, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8895 = !DILocation(line: 3145, column: 3, scope: !8894)
!8896 = !DILocation(line: 3146, column: 1, scope: !8894)
!8897 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8777, file: !8777, line: 3163, type: !6524, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !807, retainedNodes: !2050)
!8898 = !DILocation(line: 3165, column: 11, scope: !8897)
!8899 = !DILocation(line: 3165, column: 46, scope: !8897)
!8900 = !DILocation(line: 3165, column: 3, scope: !8897)
!8901 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8902, file: !8902, line: 40, type: !6524, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !2050)
!8902 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8903 = !DILocation(line: 45, column: 3, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !8902, line: 44, column: 44)
!8905 = distinct !DILexicalBlock(scope: !8906, file: !8902, line: 44, column: 13)
!8906 = distinct !DILexicalBlock(scope: !8901, file: !8902, line: 42, column: 6)
!8907 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8902, file: !8902, line: 56, type: !3116, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !2050)
!8908 = !DILocation(line: 58, column: 2, scope: !8907)
!8909 = !DILocation(line: 62, column: 1, scope: !8907)
!8910 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8777, file: !8777, line: 4304, type: !8911, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !8913)
!8911 = !DISubroutineType(types: !8912)
!8912 = !{null, !110, !110, !110, !110}
!8913 = !{!8914, !8915, !8916, !8917}
!8914 = !DILocalVariable(name: "Source", arg: 1, scope: !8910, file: !8777, line: 4304, type: !110)
!8915 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8910, file: !8777, line: 4304, type: !110)
!8916 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8910, file: !8777, line: 4304, type: !110)
!8917 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8910, file: !8777, line: 4304, type: !110)
!8918 = !DILocation(line: 0, scope: !8910)
!8919 = !DILocation(line: 4306, column: 3, scope: !8910)
!8920 = !DILocation(line: 4308, column: 3, scope: !8910)
!8921 = !DILocation(line: 4312, column: 1, scope: !8910)
!8922 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8902, file: !8902, line: 69, type: !3116, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !2050)
!8923 = !DILocation(line: 72, column: 2, scope: !8922)
!8924 = !DILocation(line: 73, column: 1, scope: !8922)
!8925 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8926, file: !8926, line: 1185, type: !6534, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2884, retainedNodes: !8927)
!8926 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8927 = !{!8928, !8929}
!8928 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8925, file: !8926, line: 1185, type: !110)
!8929 = !DILocalVariable(name: "tmpreg", scope: !8925, file: !8926, line: 1187, type: !316)
!8930 = !DILocation(line: 0, scope: !8925)
!8931 = !DILocation(line: 1187, column: 3, scope: !8925)
!8932 = !DILocation(line: 1187, column: 17, scope: !8925)
!8933 = !DILocation(line: 1188, column: 3, scope: !8925)
!8934 = !DILocation(line: 1190, column: 12, scope: !8925)
!8935 = !DILocation(line: 1190, column: 10, scope: !8925)
!8936 = !DILocation(line: 1191, column: 9, scope: !8925)
!8937 = !DILocation(line: 1192, column: 1, scope: !8925)
!8938 = distinct !DISubprogram(name: "uart_console_init", scope: !1002, file: !1002, line: 588, type: !979, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !8939)
!8939 = !{!8940}
!8940 = !DILocalVariable(name: "arg", arg: 1, scope: !8938, file: !1002, line: 588, type: !957)
!8941 = !DILocation(line: 0, scope: !8938)
!8942 = !DILocation(line: 593, column: 7, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8938, file: !1002, line: 593, column: 6)
!8944 = !DILocation(line: 593, column: 6, scope: !8938)
!8945 = !DILocation(line: 597, column: 2, scope: !8938)
!8946 = !DILocation(line: 599, column: 2, scope: !8938)
!8947 = !DILocation(line: 600, column: 1, scope: !8938)
!8948 = distinct !DISubprogram(name: "device_is_ready", scope: !8949, file: !8949, line: 47, type: !8950, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !8952)
!8949 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!8950 = !DISubroutineType(types: !8951)
!8951 = !{!347, !957}
!8952 = !{!8953}
!8953 = !DILocalVariable(name: "dev", arg: 1, scope: !8948, file: !8949, line: 47, type: !957)
!8954 = !DILocation(line: 0, scope: !8948)
!8955 = !DILocation(line: 55, column: 2, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8948, file: !8949, line: 55, column: 2)
!8957 = !{i64 2154376081}
!8958 = !DILocation(line: 56, column: 9, scope: !8948)
!8959 = !DILocation(line: 56, column: 2, scope: !8948)
!8960 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1002, file: !1002, line: 573, type: !3116, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !2050)
!8961 = !DILocation(line: 576, column: 2, scope: !8960)
!8962 = !DILocation(line: 579, column: 2, scope: !8960)
!8963 = !DILocation(line: 581, column: 1, scope: !8960)
!8964 = distinct !DISubprogram(name: "console_out", scope: !1002, file: !1002, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !8965)
!8965 = !{!8966}
!8966 = !DILocalVariable(name: "c", arg: 1, scope: !8964, file: !1002, line: 77, type: !109)
!8967 = !DILocation(line: 0, scope: !8964)
!8968 = !DILocation(line: 89, column: 11, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8964, file: !1002, line: 89, column: 6)
!8970 = !DILocation(line: 89, column: 6, scope: !8964)
!8971 = !DILocation(line: 90, column: 3, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8969, file: !1002, line: 89, column: 17)
!8973 = !DILocation(line: 91, column: 2, scope: !8972)
!8974 = !DILocation(line: 92, column: 34, scope: !8964)
!8975 = !DILocation(line: 92, column: 2, scope: !8964)
!8976 = !DILocation(line: 94, column: 2, scope: !8964)
!8977 = distinct !DISubprogram(name: "uart_poll_out", scope: !8978, file: !8978, line: 95, type: !975, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !8979)
!8978 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/condvar")
!8979 = !{!8980, !8981}
!8980 = !DILocalVariable(name: "dev", arg: 1, scope: !8977, file: !8978, line: 95, type: !957)
!8981 = !DILocalVariable(name: "out_char", arg: 2, scope: !8977, file: !8978, line: 95, type: !181)
!8982 = !DILocation(line: 0, scope: !8977)
!8983 = !DILocation(line: 105, column: 2, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8977, file: !8978, line: 105, column: 2)
!8985 = !{i64 2154459472}
!8986 = !DILocation(line: 106, column: 2, scope: !8977)
!8987 = !DILocation(line: 107, column: 1, scope: !8977)
!8988 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !951, file: !951, line: 574, type: !975, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !8989)
!8989 = !{!8990, !8991, !8992}
!8990 = !DILocalVariable(name: "dev", arg: 1, scope: !8988, file: !951, line: 574, type: !957)
!8991 = !DILocalVariable(name: "out_char", arg: 2, scope: !8988, file: !951, line: 575, type: !181)
!8992 = !DILocalVariable(name: "api", scope: !8988, file: !951, line: 577, type: !948)
!8993 = !DILocation(line: 0, scope: !8988)
!8994 = !DILocation(line: 578, column: 40, scope: !8988)
!8995 = !DILocation(line: 580, column: 7, scope: !8988)
!8996 = !DILocation(line: 580, column: 2, scope: !8988)
!8997 = !DILocation(line: 581, column: 1, scope: !8988)
!8998 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !8950, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !8999)
!8999 = !{!9000}
!9000 = !DILocalVariable(name: "dev", arg: 1, scope: !8998, file: !336, line: 730, type: !957)
!9001 = !DILocation(line: 0, scope: !8998)
!9002 = !DILocation(line: 732, column: 9, scope: !8998)
!9003 = !DILocation(line: 732, column: 2, scope: !8998)
!9004 = distinct !DISubprogram(name: "uart_register_input", scope: !1002, file: !1002, line: 560, type: !9005, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !945, retainedNodes: !9052)
!9005 = !DISubroutineType(types: !9006)
!9006 = !{null, !9007, !9007, !9049}
!9007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9008, size: 32)
!9008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !9009)
!9009 = !{!9010}
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9008, file: !118, line: 2209, baseType: !9011, size: 160)
!9011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !9012)
!9012 = !{!9013, !9026, !9030}
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9011, file: !118, line: 1710, baseType: !9014, size: 64)
!9014 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9015, line: 46, baseType: !9016)
!9015 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9015, line: 41, size: 64, elements: !9017)
!9017 = !{!9018, !9025}
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9016, file: !9015, line: 42, baseType: !9019, size: 32)
!9019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9020, size: 32)
!9020 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9015, line: 39, baseType: !9021)
!9021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9015, line: 35, size: 32, elements: !9022)
!9022 = !{!9023}
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9021, file: !9015, line: 36, baseType: !9024, size: 32)
!9024 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9015, line: 32, baseType: !110)
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9016, file: !9015, line: 43, baseType: !9019, size: 32, offset: 32)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9011, file: !118, line: 1711, baseType: !9027, size: 32, offset: 64)
!9027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !9028)
!9028 = !{!9029}
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9027, file: !253, line: 52, baseType: !22, size: 32)
!9030 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9011, file: !118, line: 1712, baseType: !9031, size: 64, offset: 96)
!9031 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !9032)
!9032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !9033)
!9033 = !{!9034}
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9032, file: !122, line: 232, baseType: !9035, size: 64)
!9035 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !9036)
!9036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !9037)
!9037 = !{!9038, !9044}
!9038 = !DIDerivedType(tag: DW_TAG_member, scope: !9036, file: !127, line: 38, baseType: !9039, size: 32)
!9039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9036, file: !127, line: 38, size: 32, elements: !9040)
!9040 = !{!9041, !9043}
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9039, file: !127, line: 39, baseType: !9042, size: 32)
!9042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9036, size: 32)
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9039, file: !127, line: 40, baseType: !9042, size: 32)
!9044 = !DIDerivedType(tag: DW_TAG_member, scope: !9036, file: !127, line: 42, baseType: !9045, size: 32, offset: 32)
!9045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9036, file: !127, line: 42, size: 32, elements: !9046)
!9046 = !{!9047, !9048}
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9045, file: !127, line: 43, baseType: !9042, size: 32)
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9045, file: !127, line: 44, baseType: !9042, size: 32)
!9049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9050, size: 32)
!9050 = !DISubroutineType(types: !9051)
!9051 = !{!180, !285, !180}
!9052 = !{!9053, !9054, !9055}
!9053 = !DILocalVariable(name: "avail", arg: 1, scope: !9004, file: !1002, line: 560, type: !9007)
!9054 = !DILocalVariable(name: "lines", arg: 2, scope: !9004, file: !1002, line: 560, type: !9007)
!9055 = !DILocalVariable(name: "completion", arg: 3, scope: !9004, file: !1002, line: 561, type: !9049)
!9056 = !DILocation(line: 0, scope: !9004)
!9057 = !DILocation(line: 566, column: 1, scope: !9004)
!9058 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1180, file: !1180, line: 523, type: !1038, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9059)
!9059 = !{!9060, !9061, !9062, !9063, !9064}
!9060 = !DILocalVariable(name: "dev", arg: 1, scope: !9058, file: !1180, line: 523, type: !1040)
!9061 = !DILocalVariable(name: "pin", arg: 2, scope: !9058, file: !1180, line: 524, type: !1055)
!9062 = !DILocalVariable(name: "flags", arg: 3, scope: !9058, file: !1180, line: 524, type: !1056)
!9063 = !DILocalVariable(name: "err", scope: !9058, file: !1180, line: 526, type: !109)
!9064 = !DILocalVariable(name: "pincfg", scope: !9058, file: !1180, line: 527, type: !109)
!9065 = !DILocation(line: 0, scope: !9058)
!9066 = !DILocation(line: 527, column: 2, scope: !9058)
!9067 = !DILocation(line: 532, column: 8, scope: !9058)
!9068 = !DILocation(line: 533, column: 10, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9058, file: !1180, line: 533, column: 6)
!9070 = !DILocation(line: 533, column: 6, scope: !9058)
!9071 = !DILocation(line: 543, column: 13, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9058, file: !1180, line: 543, column: 6)
!9073 = !DILocation(line: 543, column: 28, scope: !9072)
!9074 = !DILocation(line: 543, column: 6, scope: !9058)
!9075 = !DILocation(line: 544, column: 14, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !1180, line: 544, column: 7)
!9077 = distinct !DILexicalBlock(scope: !9072, file: !1180, line: 543, column: 34)
!9078 = !DILocation(line: 544, column: 39, scope: !9076)
!9079 = !DILocation(line: 544, column: 7, scope: !9077)
!9080 = !DILocation(line: 545, column: 38, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9076, file: !1180, line: 544, column: 45)
!9082 = !DILocation(line: 545, column: 4, scope: !9081)
!9083 = !DILocation(line: 546, column: 3, scope: !9081)
!9084 = !DILocation(line: 546, column: 21, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9076, file: !1180, line: 546, column: 14)
!9086 = !DILocation(line: 546, column: 45, scope: !9085)
!9087 = !DILocation(line: 546, column: 14, scope: !9076)
!9088 = !DILocation(line: 547, column: 40, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9085, file: !1180, line: 546, column: 51)
!9090 = !DILocation(line: 547, column: 4, scope: !9089)
!9091 = !DILocation(line: 548, column: 3, scope: !9089)
!9092 = !DILocation(line: 551, column: 32, scope: !9058)
!9093 = !DILocation(line: 551, column: 37, scope: !9058)
!9094 = !DILocation(line: 551, column: 2, scope: !9058)
!9095 = !DILocation(line: 554, column: 6, scope: !9058)
!9096 = !DILocation(line: 562, column: 1, scope: !9058)
!9097 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1180, file: !1180, line: 410, type: !9098, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9100)
!9098 = !DISubroutineType(types: !9099)
!9099 = !{!109, !1040, !867}
!9100 = !{!9101, !9102, !9103, !9105}
!9101 = !DILocalVariable(name: "dev", arg: 1, scope: !9097, file: !1180, line: 410, type: !1040)
!9102 = !DILocalVariable(name: "value", arg: 2, scope: !9097, file: !1180, line: 410, type: !867)
!9103 = !DILocalVariable(name: "cfg", scope: !9097, file: !1180, line: 412, type: !9104)
!9104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!9105 = !DILocalVariable(name: "gpio", scope: !9097, file: !1180, line: 413, type: !1113)
!9106 = !DILocation(line: 0, scope: !9097)
!9107 = !DILocation(line: 412, column: 45, scope: !9097)
!9108 = !DILocation(line: 413, column: 44, scope: !9097)
!9109 = !DILocation(line: 415, column: 11, scope: !9097)
!9110 = !DILocation(line: 415, column: 9, scope: !9097)
!9111 = !DILocation(line: 417, column: 2, scope: !9097)
!9112 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1180, file: !1180, line: 420, type: !1065, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9113)
!9113 = !{!9114, !9115, !9116, !9117, !9118, !9119}
!9114 = !DILocalVariable(name: "dev", arg: 1, scope: !9112, file: !1180, line: 420, type: !1040)
!9115 = !DILocalVariable(name: "mask", arg: 2, scope: !9112, file: !1180, line: 421, type: !1067)
!9116 = !DILocalVariable(name: "value", arg: 3, scope: !9112, file: !1180, line: 422, type: !1062)
!9117 = !DILocalVariable(name: "cfg", scope: !9112, file: !1180, line: 424, type: !9104)
!9118 = !DILocalVariable(name: "gpio", scope: !9112, file: !1180, line: 425, type: !1113)
!9119 = !DILocalVariable(name: "port_value", scope: !9112, file: !1180, line: 426, type: !110)
!9120 = !DILocation(line: 0, scope: !9112)
!9121 = !DILocation(line: 424, column: 45, scope: !9112)
!9122 = !DILocation(line: 425, column: 44, scope: !9112)
!9123 = !DILocation(line: 430, column: 15, scope: !9112)
!9124 = !DILocation(line: 431, column: 46, scope: !9112)
!9125 = !DILocation(line: 431, column: 44, scope: !9112)
!9126 = !DILocation(line: 431, column: 61, scope: !9112)
!9127 = !DILocation(line: 431, column: 53, scope: !9112)
!9128 = !DILocation(line: 431, column: 2, scope: !9112)
!9129 = !DILocation(line: 435, column: 2, scope: !9112)
!9130 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1180, file: !1180, line: 438, type: !1070, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9131)
!9131 = !{!9132, !9133, !9134, !9135}
!9132 = !DILocalVariable(name: "dev", arg: 1, scope: !9130, file: !1180, line: 438, type: !1040)
!9133 = !DILocalVariable(name: "pins", arg: 2, scope: !9130, file: !1180, line: 439, type: !1067)
!9134 = !DILocalVariable(name: "cfg", scope: !9130, file: !1180, line: 441, type: !9104)
!9135 = !DILocalVariable(name: "gpio", scope: !9130, file: !1180, line: 442, type: !1113)
!9136 = !DILocation(line: 0, scope: !9130)
!9137 = !DILocation(line: 441, column: 45, scope: !9130)
!9138 = !DILocation(line: 442, column: 44, scope: !9130)
!9139 = !DILocation(line: 448, column: 2, scope: !9130)
!9140 = !DILocation(line: 450, column: 2, scope: !9130)
!9141 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1180, file: !1180, line: 453, type: !1070, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9142)
!9142 = !{!9143, !9144, !9145, !9146}
!9143 = !DILocalVariable(name: "dev", arg: 1, scope: !9141, file: !1180, line: 453, type: !1040)
!9144 = !DILocalVariable(name: "pins", arg: 2, scope: !9141, file: !1180, line: 454, type: !1067)
!9145 = !DILocalVariable(name: "cfg", scope: !9141, file: !1180, line: 456, type: !9104)
!9146 = !DILocalVariable(name: "gpio", scope: !9141, file: !1180, line: 457, type: !1113)
!9147 = !DILocation(line: 0, scope: !9141)
!9148 = !DILocation(line: 456, column: 45, scope: !9141)
!9149 = !DILocation(line: 457, column: 44, scope: !9141)
!9150 = !DILocation(line: 467, column: 2, scope: !9141)
!9151 = !DILocation(line: 470, column: 2, scope: !9141)
!9152 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1180, file: !1180, line: 473, type: !1070, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9153)
!9153 = !{!9154, !9155, !9156, !9157}
!9154 = !DILocalVariable(name: "dev", arg: 1, scope: !9152, file: !1180, line: 473, type: !1040)
!9155 = !DILocalVariable(name: "pins", arg: 2, scope: !9152, file: !1180, line: 474, type: !1067)
!9156 = !DILocalVariable(name: "cfg", scope: !9152, file: !1180, line: 476, type: !9104)
!9157 = !DILocalVariable(name: "gpio", scope: !9152, file: !1180, line: 477, type: !1113)
!9158 = !DILocation(line: 0, scope: !9152)
!9159 = !DILocation(line: 476, column: 45, scope: !9152)
!9160 = !DILocation(line: 477, column: 44, scope: !9152)
!9161 = !DILocation(line: 484, column: 2, scope: !9152)
!9162 = !DILocation(line: 487, column: 2, scope: !9152)
!9163 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1180, file: !1180, line: 594, type: !1076, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9164)
!9164 = !{!9165, !9166, !9167, !9168, !9169, !9170, !9172, !9173, !9174}
!9165 = !DILocalVariable(name: "dev", arg: 1, scope: !9163, file: !1180, line: 594, type: !1040)
!9166 = !DILocalVariable(name: "pin", arg: 2, scope: !9163, file: !1180, line: 595, type: !1055)
!9167 = !DILocalVariable(name: "mode", arg: 3, scope: !9163, file: !1180, line: 596, type: !1014)
!9168 = !DILocalVariable(name: "trig", arg: 4, scope: !9163, file: !1180, line: 597, type: !1020)
!9169 = !DILocalVariable(name: "cfg", scope: !9163, file: !1180, line: 599, type: !9104)
!9170 = !DILocalVariable(name: "data", scope: !9163, file: !1180, line: 600, type: !9171)
!9171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!9172 = !DILocalVariable(name: "edge", scope: !9163, file: !1180, line: 601, type: !109)
!9173 = !DILocalVariable(name: "err", scope: !9163, file: !1180, line: 602, type: !109)
!9174 = !DILabel(scope: !9163, name: "exit", file: !1180, line: 643)
!9175 = !DILocation(line: 0, scope: !9163)
!9176 = !DILocation(line: 599, column: 45, scope: !9163)
!9177 = !DILocation(line: 604, column: 6, scope: !9163)
!9178 = !DILocation(line: 605, column: 34, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9180, file: !1180, line: 605, column: 7)
!9180 = distinct !DILexicalBlock(scope: !9181, file: !1180, line: 604, column: 38)
!9181 = distinct !DILexicalBlock(scope: !9163, file: !1180, line: 604, column: 6)
!9182 = !DILocation(line: 605, column: 7, scope: !9179)
!9183 = !DILocation(line: 605, column: 47, scope: !9179)
!9184 = !DILocation(line: 605, column: 39, scope: !9179)
!9185 = !DILocation(line: 605, column: 7, scope: !9180)
!9186 = !DILocation(line: 606, column: 4, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9179, file: !1180, line: 605, column: 53)
!9188 = !DILocation(line: 607, column: 4, scope: !9187)
!9189 = !DILocation(line: 608, column: 4, scope: !9187)
!9190 = !DILocation(line: 609, column: 3, scope: !9187)
!9191 = !DILocation(line: 600, column: 38, scope: !9163)
!9192 = !DILocation(line: 620, column: 30, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9163, file: !1180, line: 620, column: 6)
!9194 = !DILocation(line: 620, column: 6, scope: !9193)
!9195 = !DILocation(line: 620, column: 57, scope: !9193)
!9196 = !DILocation(line: 620, column: 6, scope: !9163)
!9197 = !DILocation(line: 625, column: 29, scope: !9163)
!9198 = !DILocation(line: 625, column: 2, scope: !9163)
!9199 = !DILocation(line: 627, column: 2, scope: !9163)
!9200 = !DILocation(line: 630, column: 3, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9163, file: !1180, line: 627, column: 16)
!9202 = !DILocation(line: 633, column: 3, scope: !9201)
!9203 = !DILocation(line: 636, column: 3, scope: !9201)
!9204 = !DILocation(line: 639, column: 2, scope: !9163)
!9205 = !DILocation(line: 641, column: 2, scope: !9163)
!9206 = !DILocation(line: 643, column: 1, scope: !9163)
!9207 = !DILocation(line: 644, column: 2, scope: !9163)
!9208 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1180, file: !1180, line: 647, type: !1080, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9209)
!9209 = !{!9210, !9211, !9212, !9213}
!9210 = !DILocalVariable(name: "dev", arg: 1, scope: !9208, file: !1180, line: 647, type: !1040)
!9211 = !DILocalVariable(name: "callback", arg: 2, scope: !9208, file: !1180, line: 648, type: !1082)
!9212 = !DILocalVariable(name: "set", arg: 3, scope: !9208, file: !1180, line: 649, type: !347)
!9213 = !DILocalVariable(name: "data", scope: !9208, file: !1180, line: 651, type: !9171)
!9214 = !DILocation(line: 0, scope: !9208)
!9215 = !DILocation(line: 651, column: 38, scope: !9208)
!9216 = !DILocation(line: 653, column: 37, scope: !9208)
!9217 = !DILocation(line: 653, column: 9, scope: !9208)
!9218 = !DILocation(line: 653, column: 2, scope: !9208)
!9219 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9220, file: !9220, line: 38, type: !9221, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9224)
!9220 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9221 = !DISubroutineType(types: !9222)
!9222 = !{!109, !9223, !1082, !347}
!9223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!9224 = !{!9225, !9226, !9227}
!9225 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9219, file: !9220, line: 38, type: !9223)
!9226 = !DILocalVariable(name: "callback", arg: 2, scope: !9219, file: !9220, line: 39, type: !1082)
!9227 = !DILocalVariable(name: "set", arg: 3, scope: !9219, file: !9220, line: 40, type: !347)
!9228 = !DILocation(line: 0, scope: !9219)
!9229 = !DILocation(line: 42, column: 2, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !9220, line: 42, column: 2)
!9231 = distinct !DILexicalBlock(scope: !9219, file: !9220, line: 42, column: 2)
!9232 = !DILocation(line: 42, column: 2, scope: !9231)
!9233 = !DILocation(line: 42, column: 2, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9230, file: !9220, line: 42, column: 2)
!9235 = !DILocation(line: 43, column: 2, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9237, file: !9220, line: 43, column: 2)
!9237 = distinct !DILexicalBlock(scope: !9219, file: !9220, line: 43, column: 2)
!9238 = !DILocation(line: 43, column: 2, scope: !9237)
!9239 = !DILocation(line: 43, column: 2, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9236, file: !9220, line: 43, column: 2)
!9241 = !DILocation(line: 45, column: 7, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9219, file: !9220, line: 45, column: 6)
!9243 = !DILocation(line: 45, column: 6, scope: !9219)
!9244 = !DILocation(line: 46, column: 56, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9246, file: !9220, line: 46, column: 7)
!9246 = distinct !DILexicalBlock(scope: !9242, file: !9220, line: 45, column: 38)
!9247 = !DILocation(line: 46, column: 8, scope: !9245)
!9248 = !DILocation(line: 46, column: 7, scope: !9246)
!9249 = !DILocation(line: 51, column: 13, scope: !9242)
!9250 = !DILocation(line: 56, column: 43, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !9220, line: 55, column: 11)
!9252 = distinct !DILexicalBlock(scope: !9219, file: !9220, line: 55, column: 6)
!9253 = !DILocation(line: 56, column: 3, scope: !9251)
!9254 = !DILocation(line: 57, column: 2, scope: !9251)
!9255 = !DILocation(line: 60, column: 1, scope: !9219)
!9256 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1087, file: !1087, line: 261, type: !9257, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9259)
!9257 = !DISubroutineType(types: !9258)
!9258 = !{!347, !9223}
!9259 = !{!9260}
!9260 = !DILocalVariable(name: "list", arg: 1, scope: !9256, file: !1087, line: 261, type: !9223)
!9261 = !DILocation(line: 0, scope: !9256)
!9262 = !DILocation(line: 261, column: 1, scope: !9256)
!9263 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1087, file: !1087, line: 417, type: !9264, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9266)
!9264 = !DISubroutineType(types: !9265)
!9265 = !{!347, !9223, !1256}
!9266 = !{!9267, !9268, !9269, !9270}
!9267 = !DILocalVariable(name: "list", arg: 1, scope: !9263, file: !1087, line: 417, type: !9223)
!9268 = !DILocalVariable(name: "node", arg: 2, scope: !9263, file: !1087, line: 417, type: !1256)
!9269 = !DILocalVariable(name: "prev", scope: !9263, file: !1087, line: 417, type: !1256)
!9270 = !DILocalVariable(name: "test", scope: !9263, file: !1087, line: 417, type: !1256)
!9271 = !DILocation(line: 0, scope: !9263)
!9272 = !DILocation(line: 417, column: 1, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9263, file: !1087, line: 417, column: 1)
!9274 = !DILocation(line: 417, column: 1, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9273, file: !1087, line: 417, column: 1)
!9276 = !DILocation(line: 417, column: 1, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9278, file: !1087, line: 417, column: 1)
!9278 = distinct !DILexicalBlock(scope: !9275, file: !1087, line: 417, column: 1)
!9279 = !DILocation(line: 417, column: 1, scope: !9278)
!9280 = distinct !{!9280, !9272, !9272}
!9281 = !DILocation(line: 417, column: 1, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9277, file: !1087, line: 417, column: 1)
!9283 = !DILocation(line: 417, column: 1, scope: !9263)
!9284 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1087, file: !1087, line: 298, type: !9285, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9287)
!9285 = !DISubroutineType(types: !9286)
!9286 = !{null, !9223, !1256}
!9287 = !{!9288, !9289}
!9288 = !DILocalVariable(name: "list", arg: 1, scope: !9284, file: !1087, line: 298, type: !9223)
!9289 = !DILocalVariable(name: "node", arg: 2, scope: !9284, file: !1087, line: 298, type: !1256)
!9290 = !DILocation(line: 0, scope: !9284)
!9291 = !DILocation(line: 298, column: 1, scope: !9284)
!9292 = !DILocation(line: 298, column: 1, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9284, file: !1087, line: 298, column: 1)
!9294 = !DILocation(line: 298, column: 1, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9293, file: !1087, line: 298, column: 1)
!9296 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1087, file: !1087, line: 231, type: !9297, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9299)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!1256, !9223}
!9299 = !{!9300}
!9300 = !DILocalVariable(name: "list", arg: 1, scope: !9296, file: !1087, line: 231, type: !9223)
!9301 = !DILocation(line: 0, scope: !9296)
!9302 = !DILocation(line: 233, column: 15, scope: !9296)
!9303 = !DILocation(line: 233, column: 2, scope: !9296)
!9304 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1087, file: !1087, line: 209, type: !9305, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9307)
!9305 = !DISubroutineType(types: !9306)
!9306 = !{null, !1256, !1256}
!9307 = !{!9308, !9309}
!9308 = !DILocalVariable(name: "parent", arg: 1, scope: !9304, file: !1087, line: 209, type: !1256)
!9309 = !DILocalVariable(name: "child", arg: 2, scope: !9304, file: !1087, line: 209, type: !1256)
!9310 = !DILocation(line: 0, scope: !9304)
!9311 = !DILocation(line: 211, column: 10, scope: !9304)
!9312 = !DILocation(line: 211, column: 15, scope: !9304)
!9313 = !DILocation(line: 212, column: 1, scope: !9304)
!9314 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1087, file: !1087, line: 214, type: !9285, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9315)
!9315 = !{!9316, !9317}
!9316 = !DILocalVariable(name: "list", arg: 1, scope: !9314, file: !1087, line: 214, type: !9223)
!9317 = !DILocalVariable(name: "node", arg: 2, scope: !9314, file: !1087, line: 214, type: !1256)
!9318 = !DILocation(line: 0, scope: !9314)
!9319 = !DILocation(line: 216, column: 8, scope: !9314)
!9320 = !DILocation(line: 216, column: 13, scope: !9314)
!9321 = !DILocation(line: 217, column: 1, scope: !9314)
!9322 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1087, file: !1087, line: 243, type: !9297, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9323)
!9323 = !{!9324}
!9324 = !DILocalVariable(name: "list", arg: 1, scope: !9322, file: !1087, line: 243, type: !9223)
!9325 = !DILocation(line: 0, scope: !9322)
!9326 = !DILocation(line: 245, column: 15, scope: !9322)
!9327 = !DILocation(line: 245, column: 2, scope: !9322)
!9328 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1087, file: !1087, line: 219, type: !9285, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9329)
!9329 = !{!9330, !9331}
!9330 = !DILocalVariable(name: "list", arg: 1, scope: !9328, file: !1087, line: 219, type: !9223)
!9331 = !DILocalVariable(name: "node", arg: 2, scope: !9328, file: !1087, line: 219, type: !1256)
!9332 = !DILocation(line: 0, scope: !9328)
!9333 = !DILocation(line: 221, column: 8, scope: !9328)
!9334 = !DILocation(line: 221, column: 13, scope: !9328)
!9335 = !DILocation(line: 222, column: 1, scope: !9328)
!9336 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1087, file: !1087, line: 401, type: !9337, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9339)
!9337 = !DISubroutineType(types: !9338)
!9338 = !{null, !9223, !1256, !1256}
!9339 = !{!9340, !9341, !9342}
!9340 = !DILocalVariable(name: "list", arg: 1, scope: !9336, file: !1087, line: 401, type: !9223)
!9341 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9336, file: !1087, line: 401, type: !1256)
!9342 = !DILocalVariable(name: "node", arg: 3, scope: !9336, file: !1087, line: 401, type: !1256)
!9343 = !DILocation(line: 0, scope: !9336)
!9344 = !DILocation(line: 401, column: 1, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9336, file: !1087, line: 401, column: 1)
!9346 = !DILocation(line: 0, scope: !9345)
!9347 = !DILocation(line: 401, column: 1, scope: !9336)
!9348 = !DILocation(line: 401, column: 1, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9345, file: !1087, line: 401, column: 1)
!9350 = !DILocation(line: 401, column: 1, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9349, file: !1087, line: 401, column: 1)
!9352 = !DILocation(line: 401, column: 1, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9351, file: !1087, line: 401, column: 1)
!9354 = !DILocation(line: 401, column: 1, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9345, file: !1087, line: 401, column: 1)
!9356 = !DILocation(line: 401, column: 1, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9355, file: !1087, line: 401, column: 1)
!9358 = !DILocation(line: 401, column: 1, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9357, file: !1087, line: 401, column: 1)
!9360 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1087, file: !1087, line: 285, type: !9361, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9363)
!9361 = !DISubroutineType(types: !9362)
!9362 = !{!1256, !1256}
!9363 = !{!9364}
!9364 = !DILocalVariable(name: "node", arg: 1, scope: !9360, file: !1087, line: 285, type: !1256)
!9365 = !DILocation(line: 0, scope: !9360)
!9366 = !DILocation(line: 285, column: 1, scope: !9360)
!9367 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1087, file: !1087, line: 274, type: !9361, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9368)
!9368 = !{!9369}
!9369 = !DILocalVariable(name: "node", arg: 1, scope: !9367, file: !1087, line: 274, type: !1256)
!9370 = !DILocation(line: 0, scope: !9367)
!9371 = !DILocation(line: 274, column: 1, scope: !9367)
!9372 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1087, file: !1087, line: 204, type: !9361, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9373)
!9373 = !{!9374}
!9374 = !DILocalVariable(name: "node", arg: 1, scope: !9372, file: !1087, line: 204, type: !1256)
!9375 = !DILocation(line: 0, scope: !9372)
!9376 = !DILocation(line: 206, column: 15, scope: !9372)
!9377 = !DILocation(line: 206, column: 2, scope: !9372)
!9378 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1180, file: !1180, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9379)
!9379 = !{!9380, !9381, !9382}
!9380 = !DILocalVariable(name: "pin", arg: 1, scope: !9378, file: !1180, line: 342, type: !109)
!9381 = !DILocalVariable(name: "line", scope: !9378, file: !1180, line: 344, type: !110)
!9382 = !DILocalVariable(name: "port", scope: !9378, file: !1180, line: 345, type: !109)
!9383 = !DILocation(line: 0, scope: !9378)
!9384 = !DILocation(line: 344, column: 18, scope: !9378)
!9385 = !{i32 983040, i32 0}
!9386 = !DILocation(line: 356, column: 9, scope: !9378)
!9387 = !DILocation(line: 370, column: 2, scope: !9378)
!9388 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1180, file: !1180, line: 37, type: !727, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9389)
!9389 = !{!9390, !9391, !9392}
!9390 = !DILocalVariable(name: "line", arg: 1, scope: !9388, file: !1180, line: 37, type: !109)
!9391 = !DILocalVariable(name: "arg", arg: 2, scope: !9388, file: !1180, line: 37, type: !107)
!9392 = !DILocalVariable(name: "data", scope: !9388, file: !1180, line: 39, type: !9171)
!9393 = !DILocation(line: 0, scope: !9388)
!9394 = !DILocation(line: 41, column: 29, scope: !9388)
!9395 = !DILocation(line: 41, column: 39, scope: !9388)
!9396 = !DILocation(line: 41, column: 44, scope: !9388)
!9397 = !DILocation(line: 41, column: 2, scope: !9388)
!9398 = !DILocation(line: 42, column: 1, scope: !9388)
!9399 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1180, file: !1180, line: 376, type: !9400, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9402)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!109, !109, !109}
!9402 = !{!9403, !9404, !9405, !9407, !9408}
!9403 = !DILocalVariable(name: "port", arg: 1, scope: !9399, file: !1180, line: 376, type: !109)
!9404 = !DILocalVariable(name: "pin", arg: 2, scope: !9399, file: !1180, line: 376, type: !109)
!9405 = !DILocalVariable(name: "clk", scope: !9399, file: !1180, line: 386, type: !9406)
!9406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!9407 = !DILocalVariable(name: "pclken", scope: !9399, file: !1180, line: 387, type: !1299)
!9408 = !DILocalVariable(name: "ret", scope: !9399, file: !1180, line: 396, type: !109)
!9409 = !DILocation(line: 0, scope: !9399)
!9410 = !DILocation(line: 387, column: 2, scope: !9399)
!9411 = !DILocation(line: 387, column: 22, scope: !9399)
!9412 = !DILocation(line: 399, column: 8, scope: !9399)
!9413 = !DILocation(line: 400, column: 10, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9399, file: !1180, line: 400, column: 6)
!9415 = !DILocation(line: 400, column: 6, scope: !9399)
!9416 = !DILocation(line: 405, column: 2, scope: !9399)
!9417 = !DILocation(line: 407, column: 2, scope: !9399)
!9418 = !DILocation(line: 408, column: 1, scope: !9399)
!9419 = distinct !DISubprogram(name: "clock_control_on", scope: !816, file: !816, line: 123, type: !1145, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9420)
!9420 = !{!9421, !9422, !9423}
!9421 = !DILocalVariable(name: "dev", arg: 1, scope: !9419, file: !816, line: 123, type: !1040)
!9422 = !DILocalVariable(name: "sys", arg: 2, scope: !9419, file: !816, line: 124, type: !911)
!9423 = !DILocalVariable(name: "api", scope: !9419, file: !816, line: 126, type: !1138)
!9424 = !DILocation(line: 0, scope: !9419)
!9425 = !DILocation(line: 127, column: 49, scope: !9419)
!9426 = !DILocation(line: 129, column: 14, scope: !9419)
!9427 = !DILocation(line: 129, column: 9, scope: !9419)
!9428 = !DILocation(line: 129, column: 2, scope: !9419)
!9429 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1180, file: !1180, line: 311, type: !8534, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9430)
!9430 = !{!9431, !9432, !9433}
!9431 = !DILocalVariable(name: "port", arg: 1, scope: !9429, file: !1180, line: 311, type: !109)
!9432 = !DILocalVariable(name: "pin", arg: 2, scope: !9429, file: !1180, line: 311, type: !109)
!9433 = !DILocalVariable(name: "line", scope: !9429, file: !1180, line: 313, type: !110)
!9434 = !DILocation(line: 0, scope: !9429)
!9435 = !DILocation(line: 313, column: 18, scope: !9429)
!9436 = !DILocation(line: 337, column: 2, scope: !9429)
!9437 = !DILocation(line: 340, column: 1, scope: !9429)
!9438 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1180, file: !1180, line: 295, type: !9439, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9441)
!9439 = !DISubroutineType(types: !9440)
!9440 = !{!110, !109}
!9441 = !{!9442}
!9442 = !DILocalVariable(name: "pin", arg: 1, scope: !9438, file: !1180, line: 295, type: !109)
!9443 = !DILocation(line: 0, scope: !9438)
!9444 = !DILocation(line: 307, column: 46, scope: !9438)
!9445 = !DILocation(line: 307, column: 27, scope: !9438)
!9446 = !DILocation(line: 307, column: 32, scope: !9438)
!9447 = !DILocation(line: 307, column: 14, scope: !9438)
!9448 = !DILocation(line: 307, column: 39, scope: !9438)
!9449 = !DILocation(line: 307, column: 2, scope: !9438)
!9450 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6137, file: !6137, line: 671, type: !9451, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9453)
!9451 = !DISubroutineType(types: !9452)
!9452 = !{null, !110, !110}
!9453 = !{!9454, !9455}
!9454 = !DILocalVariable(name: "Port", arg: 1, scope: !9450, file: !6137, line: 671, type: !110)
!9455 = !DILocalVariable(name: "Line", arg: 2, scope: !9450, file: !6137, line: 671, type: !110)
!9456 = !DILocation(line: 0, scope: !9450)
!9457 = !DILocation(line: 673, column: 3, scope: !9450)
!9458 = !DILocalVariable(name: "value", arg: 1, scope: !9459, file: !6437, line: 373, type: !110)
!9459 = distinct !DISubprogram(name: "__RBIT", scope: !6437, file: !6437, line: 373, type: !7724, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9460)
!9460 = !{!9458, !9461}
!9461 = !DILocalVariable(name: "result", scope: !9459, file: !6437, line: 375, type: !110)
!9462 = !DILocation(line: 0, scope: !9459, inlinedAt: !9463)
!9463 = distinct !DILocation(line: 673, column: 3, scope: !9450)
!9464 = !DILocation(line: 380, column: 4, scope: !9459, inlinedAt: !9463)
!9465 = !{i64 2921380}
!9466 = !DILocalVariable(name: "value", arg: 1, scope: !9467, file: !6437, line: 403, type: !110)
!9467 = distinct !DISubprogram(name: "__CLZ", scope: !6437, file: !6437, line: 403, type: !9468, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9470)
!9468 = !DISubroutineType(types: !9469)
!9469 = !{!180, !110}
!9470 = !{!9466}
!9471 = !DILocation(line: 0, scope: !9467, inlinedAt: !9472)
!9472 = distinct !DILocation(line: 673, column: 3, scope: !9450)
!9473 = !DILocation(line: 414, column: 7, scope: !9467, inlinedAt: !9472)
!9474 = !DILocation(line: 674, column: 1, scope: !9450)
!9475 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9220, file: !9220, line: 69, type: !9476, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9478)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{null, !9223, !1040, !110}
!9478 = !{!9479, !9480, !9481, !9482, !9483}
!9479 = !DILocalVariable(name: "list", arg: 1, scope: !9475, file: !9220, line: 69, type: !9223)
!9480 = !DILocalVariable(name: "port", arg: 2, scope: !9475, file: !9220, line: 70, type: !1040)
!9481 = !DILocalVariable(name: "pins", arg: 3, scope: !9475, file: !9220, line: 71, type: !110)
!9482 = !DILocalVariable(name: "cb", scope: !9475, file: !9220, line: 73, type: !1082)
!9483 = !DILocalVariable(name: "tmp", scope: !9475, file: !9220, line: 73, type: !1082)
!9484 = !DILocation(line: 0, scope: !9475)
!9485 = !DILocation(line: 75, column: 2, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9475, file: !9220, line: 75, column: 2)
!9487 = !DILocation(line: 0, scope: !9486)
!9488 = !DILocation(line: 76, column: 11, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9490, file: !9220, line: 76, column: 7)
!9490 = distinct !DILexicalBlock(scope: !9491, file: !9220, line: 75, column: 57)
!9491 = distinct !DILexicalBlock(scope: !9486, file: !9220, line: 75, column: 2)
!9492 = !DILocation(line: 76, column: 20, scope: !9489)
!9493 = !DILocation(line: 76, column: 7, scope: !9490)
!9494 = !DILocation(line: 77, column: 4, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9496, file: !9220, line: 77, column: 4)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !9220, line: 77, column: 4)
!9497 = distinct !DILexicalBlock(scope: !9489, file: !9220, line: 76, column: 28)
!9498 = !DILocation(line: 77, column: 4, scope: !9496)
!9499 = !DILocation(line: 77, column: 4, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9495, file: !9220, line: 77, column: 4)
!9501 = !DILocation(line: 78, column: 4, scope: !9497)
!9502 = !DILocation(line: 79, column: 3, scope: !9497)
!9503 = !DILocation(line: 75, column: 2, scope: !9491)
!9504 = !DILocation(line: 81, column: 1, scope: !9475)
!9505 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6137, file: !6137, line: 710, type: !7724, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9506)
!9506 = !{!9507}
!9507 = !DILocalVariable(name: "Line", arg: 1, scope: !9505, file: !6137, line: 710, type: !110)
!9508 = !DILocation(line: 0, scope: !9505)
!9509 = !DILocation(line: 712, column: 21, scope: !9505)
!9510 = !DILocation(line: 0, scope: !9459, inlinedAt: !9511)
!9511 = distinct !DILocation(line: 712, column: 76, scope: !9505)
!9512 = !DILocation(line: 380, column: 4, scope: !9459, inlinedAt: !9511)
!9513 = !DILocation(line: 0, scope: !9467, inlinedAt: !9514)
!9514 = distinct !DILocation(line: 712, column: 76, scope: !9505)
!9515 = !DILocation(line: 414, column: 7, scope: !9467, inlinedAt: !9514)
!9516 = !DILocation(line: 712, column: 73, scope: !9505)
!9517 = !DILocation(line: 712, column: 3, scope: !9505)
!9518 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9519, file: !9519, line: 910, type: !9520, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9522)
!9519 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9520 = !DISubroutineType(types: !9521)
!9521 = !{null, !1113, !110}
!9522 = !{!9523, !9524}
!9523 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9518, file: !9519, line: 910, type: !1113)
!9524 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9518, file: !9519, line: 910, type: !110)
!9525 = !DILocation(line: 0, scope: !9518)
!9526 = !DILocation(line: 912, column: 3, scope: !9518)
!9527 = !DILocation(line: 913, column: 1, scope: !9518)
!9528 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9519, file: !9519, line: 823, type: !9529, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9531)
!9529 = !DISubroutineType(types: !9530)
!9530 = !{!110, !1113}
!9531 = !{!9532}
!9532 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9528, file: !9519, line: 823, type: !1113)
!9533 = !DILocation(line: 0, scope: !9528)
!9534 = !DILocation(line: 825, column: 21, scope: !9528)
!9535 = !DILocation(line: 825, column: 3, scope: !9528)
!9536 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9519, file: !9519, line: 812, type: !9520, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9537)
!9537 = !{!9538, !9539}
!9538 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9536, file: !9519, line: 812, type: !1113)
!9539 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9536, file: !9519, line: 812, type: !110)
!9540 = !DILocation(line: 0, scope: !9536)
!9541 = !DILocation(line: 814, column: 3, scope: !9536)
!9542 = !DILocation(line: 815, column: 1, scope: !9536)
!9543 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9519, file: !9519, line: 771, type: !9529, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9544)
!9544 = !{!9545}
!9545 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9543, file: !9519, line: 771, type: !1113)
!9546 = !DILocation(line: 0, scope: !9543)
!9547 = !DILocation(line: 773, column: 21, scope: !9543)
!9548 = !DILocation(line: 773, column: 3, scope: !9543)
!9549 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1180, file: !1180, line: 47, type: !9550, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9552)
!9550 = !DISubroutineType(types: !9551)
!9551 = !{!109, !1056, !281}
!9552 = !{!9553, !9554}
!9553 = !DILocalVariable(name: "flags", arg: 1, scope: !9549, file: !1180, line: 47, type: !1056)
!9554 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9549, file: !1180, line: 47, type: !281)
!9555 = !DILocation(line: 0, scope: !9549)
!9556 = !DILocation(line: 50, column: 13, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9549, file: !1180, line: 50, column: 6)
!9558 = !DILocation(line: 50, column: 28, scope: !9557)
!9559 = !DILocation(line: 50, column: 6, scope: !9549)
!9560 = !DILocation(line: 53, column: 11, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9557, file: !1180, line: 50, column: 34)
!9562 = !DILocation(line: 55, column: 14, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9561, file: !1180, line: 55, column: 7)
!9564 = !DILocation(line: 55, column: 35, scope: !9563)
!9565 = !DILocation(line: 55, column: 7, scope: !9561)
!9566 = !DILocation(line: 56, column: 14, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9568, file: !1180, line: 56, column: 8)
!9568 = distinct !DILexicalBlock(scope: !9563, file: !1180, line: 55, column: 41)
!9569 = !DILocation(line: 56, column: 8, scope: !9568)
!9570 = !DILocation(line: 0, scope: !9563)
!9571 = !DILocation(line: 66, column: 14, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9561, file: !1180, line: 66, column: 7)
!9573 = !DILocation(line: 66, column: 30, scope: !9572)
!9574 = !DILocation(line: 66, column: 7, scope: !9561)
!9575 = !DILocation(line: 67, column: 12, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9572, file: !1180, line: 66, column: 36)
!9577 = !DILocation(line: 68, column: 3, scope: !9576)
!9578 = !DILocation(line: 68, column: 21, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9572, file: !1180, line: 68, column: 14)
!9580 = !DILocation(line: 68, column: 39, scope: !9579)
!9581 = !DILocation(line: 68, column: 14, scope: !9572)
!9582 = !DILocation(line: 69, column: 12, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9579, file: !1180, line: 68, column: 45)
!9584 = !DILocation(line: 70, column: 3, scope: !9583)
!9585 = !DILocation(line: 72, column: 21, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9557, file: !1180, line: 72, column: 14)
!9587 = !DILocation(line: 72, column: 35, scope: !9586)
!9588 = !DILocation(line: 72, column: 14, scope: !9557)
!9589 = !DILocation(line: 77, column: 14, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9591, file: !1180, line: 77, column: 7)
!9591 = distinct !DILexicalBlock(scope: !9586, file: !1180, line: 72, column: 41)
!9592 = !DILocation(line: 77, column: 30, scope: !9590)
!9593 = !DILocation(line: 77, column: 7, scope: !9591)
!9594 = !DILocation(line: 0, scope: !9557)
!9595 = !DILocation(line: 90, column: 1, scope: !9549)
!9596 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1180, file: !1180, line: 157, type: !9597, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9599)
!9597 = !DISubroutineType(types: !9598)
!9598 = !{null, !1040, !109, !109, !109}
!9599 = !{!9600, !9601, !9602, !9603, !9604, !9605, !9606, !9607, !9608, !9609, !9610}
!9600 = !DILocalVariable(name: "dev", arg: 1, scope: !9596, file: !1180, line: 157, type: !1040)
!9601 = !DILocalVariable(name: "pin", arg: 2, scope: !9596, file: !1180, line: 157, type: !109)
!9602 = !DILocalVariable(name: "conf", arg: 3, scope: !9596, file: !1180, line: 158, type: !109)
!9603 = !DILocalVariable(name: "func", arg: 4, scope: !9596, file: !1180, line: 158, type: !109)
!9604 = !DILocalVariable(name: "cfg", scope: !9596, file: !1180, line: 160, type: !9104)
!9605 = !DILocalVariable(name: "gpio", scope: !9596, file: !1180, line: 161, type: !1113)
!9606 = !DILocalVariable(name: "pin_ll", scope: !9596, file: !1180, line: 163, type: !109)
!9607 = !DILocalVariable(name: "mode", scope: !9596, file: !1180, line: 227, type: !32)
!9608 = !DILocalVariable(name: "otype", scope: !9596, file: !1180, line: 227, type: !32)
!9609 = !DILocalVariable(name: "ospeed", scope: !9596, file: !1180, line: 227, type: !32)
!9610 = !DILocalVariable(name: "pupd", scope: !9596, file: !1180, line: 227, type: !32)
!9611 = !DILocation(line: 0, scope: !9596)
!9612 = !DILocation(line: 160, column: 45, scope: !9596)
!9613 = !DILocation(line: 161, column: 44, scope: !9596)
!9614 = !DILocation(line: 163, column: 15, scope: !9596)
!9615 = !DILocation(line: 229, column: 14, scope: !9596)
!9616 = !DILocation(line: 246, column: 47, scope: !9596)
!9617 = !DILocation(line: 246, column: 2, scope: !9596)
!9618 = !DILocation(line: 248, column: 43, scope: !9596)
!9619 = !DILocation(line: 248, column: 2, scope: !9596)
!9620 = !DILocation(line: 250, column: 40, scope: !9596)
!9621 = !DILocation(line: 250, column: 2, scope: !9596)
!9622 = !DILocation(line: 252, column: 11, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9596, file: !1180, line: 252, column: 6)
!9624 = !DILocation(line: 252, column: 6, scope: !9596)
!9625 = !DILocation(line: 253, column: 11, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9627, file: !1180, line: 253, column: 7)
!9627 = distinct !DILexicalBlock(scope: !9623, file: !1180, line: 252, column: 36)
!9628 = !DILocation(line: 253, column: 7, scope: !9627)
!9629 = !DILocation(line: 254, column: 4, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9626, file: !1180, line: 253, column: 16)
!9631 = !DILocation(line: 255, column: 3, scope: !9630)
!9632 = !DILocation(line: 256, column: 4, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9626, file: !1180, line: 255, column: 10)
!9634 = !DILocation(line: 260, column: 40, scope: !9596)
!9635 = !DILocation(line: 260, column: 2, scope: !9596)
!9636 = !DILocation(line: 265, column: 1, scope: !9596)
!9637 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1180, file: !1180, line: 137, type: !9439, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9638)
!9638 = !{!9639, !9640}
!9639 = !DILocalVariable(name: "pin", arg: 1, scope: !9637, file: !1180, line: 137, type: !109)
!9640 = !DILocalVariable(name: "pinval", scope: !9637, file: !1180, line: 139, type: !110)
!9641 = !DILocation(line: 0, scope: !9637)
!9642 = !DILocation(line: 149, column: 13, scope: !9637)
!9643 = !DILocation(line: 151, column: 2, scope: !9637)
!9644 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9519, file: !9519, line: 342, type: !9645, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9647)
!9645 = !DISubroutineType(types: !9646)
!9646 = !{null, !1113, !110, !110}
!9647 = !{!9648, !9649, !9650}
!9648 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9644, file: !9519, line: 342, type: !1113)
!9649 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9644, file: !9519, line: 342, type: !110)
!9650 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9644, file: !9519, line: 342, type: !110)
!9651 = !DILocation(line: 0, scope: !9644)
!9652 = !DILocation(line: 344, column: 3, scope: !9644)
!9653 = !DILocation(line: 345, column: 1, scope: !9644)
!9654 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9519, file: !9519, line: 413, type: !9645, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9655)
!9655 = !{!9656, !9657, !9658}
!9656 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9654, file: !9519, line: 413, type: !1113)
!9657 = !DILocalVariable(name: "Pin", arg: 2, scope: !9654, file: !9519, line: 413, type: !110)
!9658 = !DILocalVariable(name: "Speed", arg: 3, scope: !9654, file: !9519, line: 413, type: !110)
!9659 = !DILocation(line: 0, scope: !9654)
!9660 = !DILocation(line: 415, column: 3, scope: !9654)
!9661 = !DILocation(line: 0, scope: !9459, inlinedAt: !9662)
!9662 = distinct !DILocation(line: 415, column: 3, scope: !9654)
!9663 = !DILocation(line: 380, column: 4, scope: !9459, inlinedAt: !9662)
!9664 = !DILocation(line: 0, scope: !9467, inlinedAt: !9665)
!9665 = distinct !DILocation(line: 415, column: 3, scope: !9654)
!9666 = !DILocation(line: 414, column: 7, scope: !9467, inlinedAt: !9665)
!9667 = !DILocation(line: 0, scope: !9459, inlinedAt: !9668)
!9668 = distinct !DILocation(line: 415, column: 3, scope: !9654)
!9669 = !DILocation(line: 0, scope: !9467, inlinedAt: !9670)
!9670 = distinct !DILocation(line: 415, column: 3, scope: !9654)
!9671 = !DILocation(line: 417, column: 1, scope: !9654)
!9672 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9519, file: !9519, line: 484, type: !9645, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9673)
!9673 = !{!9674, !9675, !9676}
!9674 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9672, file: !9519, line: 484, type: !1113)
!9675 = !DILocalVariable(name: "Pin", arg: 2, scope: !9672, file: !9519, line: 484, type: !110)
!9676 = !DILocalVariable(name: "Pull", arg: 3, scope: !9672, file: !9519, line: 484, type: !110)
!9677 = !DILocation(line: 0, scope: !9672)
!9678 = !DILocation(line: 486, column: 3, scope: !9672)
!9679 = !DILocation(line: 0, scope: !9459, inlinedAt: !9680)
!9680 = distinct !DILocation(line: 486, column: 3, scope: !9672)
!9681 = !DILocation(line: 380, column: 4, scope: !9459, inlinedAt: !9680)
!9682 = !DILocation(line: 0, scope: !9467, inlinedAt: !9683)
!9683 = distinct !DILocation(line: 486, column: 3, scope: !9672)
!9684 = !DILocation(line: 414, column: 7, scope: !9467, inlinedAt: !9683)
!9685 = !DILocation(line: 0, scope: !9459, inlinedAt: !9686)
!9686 = distinct !DILocation(line: 486, column: 3, scope: !9672)
!9687 = !DILocation(line: 0, scope: !9467, inlinedAt: !9688)
!9688 = distinct !DILocation(line: 486, column: 3, scope: !9672)
!9689 = !DILocation(line: 487, column: 1, scope: !9672)
!9690 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9519, file: !9519, line: 556, type: !9645, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9691)
!9691 = !{!9692, !9693, !9694}
!9692 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9690, file: !9519, line: 556, type: !1113)
!9693 = !DILocalVariable(name: "Pin", arg: 2, scope: !9690, file: !9519, line: 556, type: !110)
!9694 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9690, file: !9519, line: 556, type: !110)
!9695 = !DILocation(line: 0, scope: !9690)
!9696 = !DILocation(line: 558, column: 3, scope: !9690)
!9697 = !DILocation(line: 0, scope: !9459, inlinedAt: !9698)
!9698 = distinct !DILocation(line: 558, column: 3, scope: !9690)
!9699 = !DILocation(line: 380, column: 4, scope: !9459, inlinedAt: !9698)
!9700 = !DILocation(line: 0, scope: !9467, inlinedAt: !9701)
!9701 = distinct !DILocation(line: 558, column: 3, scope: !9690)
!9702 = !DILocation(line: 414, column: 7, scope: !9467, inlinedAt: !9701)
!9703 = !DILocation(line: 0, scope: !9459, inlinedAt: !9704)
!9704 = distinct !DILocation(line: 558, column: 3, scope: !9690)
!9705 = !DILocation(line: 0, scope: !9467, inlinedAt: !9706)
!9706 = distinct !DILocation(line: 558, column: 3, scope: !9690)
!9707 = !DILocation(line: 560, column: 1, scope: !9690)
!9708 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9519, file: !9519, line: 633, type: !9645, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9709)
!9709 = !{!9710, !9711, !9712}
!9710 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9708, file: !9519, line: 633, type: !1113)
!9711 = !DILocalVariable(name: "Pin", arg: 2, scope: !9708, file: !9519, line: 633, type: !110)
!9712 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9708, file: !9519, line: 633, type: !110)
!9713 = !DILocation(line: 0, scope: !9708)
!9714 = !DILocation(line: 635, column: 3, scope: !9708)
!9715 = !DILocation(line: 0, scope: !9459, inlinedAt: !9716)
!9716 = distinct !DILocation(line: 635, column: 3, scope: !9708)
!9717 = !DILocation(line: 380, column: 4, scope: !9459, inlinedAt: !9716)
!9718 = !DILocation(line: 0, scope: !9467, inlinedAt: !9719)
!9719 = distinct !DILocation(line: 635, column: 3, scope: !9708)
!9720 = !DILocation(line: 414, column: 7, scope: !9467, inlinedAt: !9719)
!9721 = !DILocation(line: 0, scope: !9459, inlinedAt: !9722)
!9722 = distinct !DILocation(line: 635, column: 3, scope: !9708)
!9723 = !DILocation(line: 0, scope: !9467, inlinedAt: !9724)
!9724 = distinct !DILocation(line: 635, column: 3, scope: !9708)
!9725 = !DILocation(line: 637, column: 1, scope: !9708)
!9726 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9519, file: !9519, line: 273, type: !9645, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9727)
!9727 = !{!9728, !9729, !9730}
!9728 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9726, file: !9519, line: 273, type: !1113)
!9729 = !DILocalVariable(name: "Pin", arg: 2, scope: !9726, file: !9519, line: 273, type: !110)
!9730 = !DILocalVariable(name: "Mode", arg: 3, scope: !9726, file: !9519, line: 273, type: !110)
!9731 = !DILocation(line: 0, scope: !9726)
!9732 = !DILocation(line: 275, column: 3, scope: !9726)
!9733 = !DILocation(line: 0, scope: !9459, inlinedAt: !9734)
!9734 = distinct !DILocation(line: 275, column: 3, scope: !9726)
!9735 = !DILocation(line: 380, column: 4, scope: !9459, inlinedAt: !9734)
!9736 = !DILocation(line: 0, scope: !9467, inlinedAt: !9737)
!9737 = distinct !DILocation(line: 275, column: 3, scope: !9726)
!9738 = !DILocation(line: 414, column: 7, scope: !9467, inlinedAt: !9737)
!9739 = !DILocation(line: 0, scope: !9459, inlinedAt: !9740)
!9740 = distinct !DILocation(line: 275, column: 3, scope: !9726)
!9741 = !DILocation(line: 0, scope: !9467, inlinedAt: !9742)
!9742 = distinct !DILocation(line: 275, column: 3, scope: !9726)
!9743 = !DILocation(line: 276, column: 1, scope: !9726)
!9744 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1180, file: !1180, line: 698, type: !1193, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9745)
!9745 = !{!9746, !9747, !9748}
!9746 = !DILocalVariable(name: "dev", arg: 1, scope: !9744, file: !1180, line: 698, type: !1040)
!9747 = !DILocalVariable(name: "data", scope: !9744, file: !1180, line: 700, type: !9171)
!9748 = !DILocalVariable(name: "ret", scope: !9744, file: !1180, line: 701, type: !109)
!9749 = !DILocation(line: 0, scope: !9744)
!9750 = !DILocation(line: 700, column: 38, scope: !9744)
!9751 = !DILocation(line: 703, column: 8, scope: !9744)
!9752 = !DILocation(line: 703, column: 12, scope: !9744)
!9753 = !DILocation(line: 705, column: 7, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9744, file: !1180, line: 705, column: 6)
!9755 = !DILocation(line: 705, column: 6, scope: !9744)
!9756 = !DILocation(line: 722, column: 8, scope: !9744)
!9757 = !DILocation(line: 723, column: 10, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9744, file: !1180, line: 723, column: 6)
!9759 = !DILocation(line: 723, column: 6, scope: !9744)
!9760 = !DILocation(line: 731, column: 1, scope: !9744)
!9761 = distinct !DISubprogram(name: "device_is_ready", scope: !8949, file: !8949, line: 47, type: !9762, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9764)
!9762 = !DISubroutineType(types: !9763)
!9763 = !{!347, !1040}
!9764 = !{!9765}
!9765 = !DILocalVariable(name: "dev", arg: 1, scope: !9761, file: !8949, line: 47, type: !1040)
!9766 = !DILocation(line: 0, scope: !9761)
!9767 = !DILocation(line: 55, column: 2, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9761, file: !8949, line: 55, column: 2)
!9769 = !{i64 2154367288}
!9770 = !DILocation(line: 56, column: 9, scope: !9761)
!9771 = !DILocation(line: 56, column: 2, scope: !9761)
!9772 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1180, file: !1180, line: 270, type: !9773, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9775)
!9773 = !DISubroutineType(types: !9774)
!9774 = !{!109, !1040, !347}
!9775 = !{!9776, !9777, !9778, !9779, !9780}
!9776 = !DILocalVariable(name: "dev", arg: 1, scope: !9772, file: !1180, line: 270, type: !1040)
!9777 = !DILocalVariable(name: "on", arg: 2, scope: !9772, file: !1180, line: 270, type: !347)
!9778 = !DILocalVariable(name: "cfg", scope: !9772, file: !1180, line: 272, type: !9104)
!9779 = !DILocalVariable(name: "ret", scope: !9772, file: !1180, line: 273, type: !109)
!9780 = !DILocalVariable(name: "clk", scope: !9772, file: !1180, line: 278, type: !9406)
!9781 = !DILocation(line: 0, scope: !9772)
!9782 = !DILocation(line: 272, column: 45, scope: !9772)
!9783 = !DILocation(line: 282, column: 38, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9785, file: !1180, line: 280, column: 10)
!9785 = distinct !DILexicalBlock(scope: !9772, file: !1180, line: 280, column: 6)
!9786 = !DILocation(line: 282, column: 6, scope: !9784)
!9787 = !DILocation(line: 281, column: 9, scope: !9784)
!9788 = !DILocation(line: 293, column: 1, scope: !9772)
!9789 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !9762, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9790)
!9790 = !{!9791}
!9791 = !DILocalVariable(name: "dev", arg: 1, scope: !9789, file: !336, line: 730, type: !1040)
!9792 = !DILocation(line: 0, scope: !9789)
!9793 = !DILocation(line: 732, column: 9, scope: !9789)
!9794 = !DILocation(line: 732, column: 2, scope: !9789)
!9795 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1180, file: !1180, line: 496, type: !9796, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !9798)
!9796 = !DISubroutineType(types: !9797)
!9797 = !{!109, !1040, !109, !109, !109}
!9798 = !{!9799, !9800, !9801, !9802, !9803, !9804}
!9799 = !DILocalVariable(name: "dev", arg: 1, scope: !9795, file: !1180, line: 496, type: !1040)
!9800 = !DILocalVariable(name: "pin", arg: 2, scope: !9795, file: !1180, line: 496, type: !109)
!9801 = !DILocalVariable(name: "conf", arg: 3, scope: !9795, file: !1180, line: 496, type: !109)
!9802 = !DILocalVariable(name: "func", arg: 4, scope: !9795, file: !1180, line: 496, type: !109)
!9803 = !DILocalVariable(name: "ret", scope: !9795, file: !1180, line: 498, type: !109)
!9804 = !DILocalVariable(name: "gpio_out", scope: !9805, file: !1180, line: 508, type: !110)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !1180, line: 507, column: 27)
!9806 = distinct !DILexicalBlock(scope: !9795, file: !1180, line: 507, column: 6)
!9807 = !DILocation(line: 0, scope: !9795)
!9808 = !DILocation(line: 505, column: 2, scope: !9795)
!9809 = !DILocation(line: 507, column: 11, scope: !9806)
!9810 = !DILocation(line: 507, column: 6, scope: !9795)
!9811 = !DILocation(line: 508, column: 28, scope: !9805)
!9812 = !DILocation(line: 0, scope: !9805)
!9813 = !DILocation(line: 510, column: 16, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9805, file: !1180, line: 510, column: 7)
!9815 = !DILocation(line: 0, scope: !9814)
!9816 = !DILocation(line: 510, column: 7, scope: !9805)
!9817 = !DILocation(line: 511, column: 4, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9814, file: !1180, line: 510, column: 32)
!9819 = !DILocation(line: 512, column: 3, scope: !9818)
!9820 = !DILocation(line: 513, column: 4, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9822, file: !1180, line: 512, column: 39)
!9822 = distinct !DILexicalBlock(scope: !9814, file: !1180, line: 512, column: 14)
!9823 = !DILocation(line: 514, column: 3, scope: !9821)
!9824 = !DILocation(line: 518, column: 1, scope: !9795)
!9825 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1456, file: !1456, line: 526, type: !1359, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9826)
!9826 = !{!9827, !9828, !9829}
!9827 = !DILocalVariable(name: "dev", arg: 1, scope: !9825, file: !1456, line: 526, type: !1361)
!9828 = !DILocalVariable(name: "c", arg: 2, scope: !9825, file: !1456, line: 526, type: !972)
!9829 = !DILocalVariable(name: "config", scope: !9825, file: !1456, line: 528, type: !9830)
!9830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!9831 = !DILocation(line: 0, scope: !9825)
!9832 = !DILocation(line: 528, column: 48, scope: !9825)
!9833 = !DILocation(line: 531, column: 40, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9825, file: !1456, line: 531, column: 6)
!9835 = !DILocation(line: 531, column: 6, scope: !9834)
!9836 = !DILocation(line: 531, column: 6, scope: !9825)
!9837 = !DILocation(line: 532, column: 34, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9834, file: !1456, line: 531, column: 48)
!9839 = !DILocation(line: 532, column: 3, scope: !9838)
!9840 = !DILocation(line: 533, column: 2, scope: !9838)
!9841 = !DILocation(line: 539, column: 42, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9825, file: !1456, line: 539, column: 6)
!9843 = !DILocation(line: 539, column: 7, scope: !9842)
!9844 = !DILocation(line: 539, column: 6, scope: !9825)
!9845 = !DILocation(line: 543, column: 52, scope: !9825)
!9846 = !DILocation(line: 543, column: 22, scope: !9825)
!9847 = !DILocation(line: 543, column: 5, scope: !9825)
!9848 = !DILocation(line: 545, column: 2, scope: !9825)
!9849 = !DILocation(line: 546, column: 1, scope: !9825)
!9850 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1456, file: !1456, line: 548, type: !1378, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9851)
!9851 = !{!9852, !9853, !9854, !9855}
!9852 = !DILocalVariable(name: "dev", arg: 1, scope: !9850, file: !1456, line: 548, type: !1361)
!9853 = !DILocalVariable(name: "c", arg: 2, scope: !9850, file: !1456, line: 549, type: !181)
!9854 = !DILocalVariable(name: "config", scope: !9850, file: !1456, line: 551, type: !9830)
!9855 = !DILocalVariable(name: "key", scope: !9850, file: !1456, line: 555, type: !32)
!9856 = !DILocation(line: 0, scope: !9850)
!9857 = !DILocation(line: 551, column: 48, scope: !9850)
!9858 = !DILocation(line: 562, column: 2, scope: !9850)
!9859 = !DILocation(line: 563, column: 41, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9861, file: !1456, line: 563, column: 7)
!9861 = distinct !DILexicalBlock(scope: !9850, file: !1456, line: 562, column: 12)
!9862 = !DILocation(line: 563, column: 7, scope: !9860)
!9863 = !DILocation(line: 563, column: 7, scope: !9861)
!9864 = !DILocation(line: 55, column: 2, scope: !9865, inlinedAt: !9869)
!9865 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6116, file: !6116, line: 42, type: !6117, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9866)
!9866 = !{!9867, !9868}
!9867 = !DILocalVariable(name: "key", scope: !9865, file: !6116, line: 44, type: !32)
!9868 = !DILocalVariable(name: "tmp", scope: !9865, file: !6116, line: 53, type: !32)
!9869 = distinct !DILocation(line: 564, column: 10, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9860, file: !1456, line: 563, column: 49)
!9871 = !{i64 2090089}
!9872 = !DILocation(line: 0, scope: !9865, inlinedAt: !9869)
!9873 = !DILocation(line: 565, column: 42, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9870, file: !1456, line: 565, column: 8)
!9875 = !DILocation(line: 565, column: 8, scope: !9874)
!9876 = !DILocation(line: 565, column: 8, scope: !9870)
!9877 = !DILocalVariable(name: "key", arg: 1, scope: !9878, file: !6116, line: 84, type: !32)
!9878 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6116, file: !6116, line: 84, type: !6127, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9879)
!9879 = !{!9877}
!9880 = !DILocation(line: 0, scope: !9878, inlinedAt: !9881)
!9881 = distinct !DILocation(line: 568, column: 4, scope: !9870)
!9882 = !DILocation(line: 95, column: 2, scope: !9878, inlinedAt: !9881)
!9883 = !{i64 2090906}
!9884 = !DILocation(line: 569, column: 3, scope: !9870)
!9885 = distinct !{!9885, !9858, !9886}
!9886 = !DILocation(line: 570, column: 2, scope: !9850)
!9887 = !DILocation(line: 592, column: 33, scope: !9850)
!9888 = !DILocation(line: 592, column: 2, scope: !9850)
!9889 = !DILocation(line: 0, scope: !9878, inlinedAt: !9890)
!9890 = distinct !DILocation(line: 593, column: 2, scope: !9850)
!9891 = !DILocation(line: 95, column: 2, scope: !9878, inlinedAt: !9890)
!9892 = !DILocation(line: 594, column: 1, scope: !9850)
!9893 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1456, file: !1456, line: 596, type: !1382, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9894)
!9894 = !{!9895, !9896, !9897}
!9895 = !DILocalVariable(name: "dev", arg: 1, scope: !9893, file: !1456, line: 596, type: !1361)
!9896 = !DILocalVariable(name: "config", scope: !9893, file: !1456, line: 598, type: !9830)
!9897 = !DILocalVariable(name: "err", scope: !9893, file: !1456, line: 599, type: !110)
!9898 = !DILocation(line: 0, scope: !9893)
!9899 = !DILocation(line: 598, column: 48, scope: !9893)
!9900 = !DILocation(line: 606, column: 40, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9893, file: !1456, line: 606, column: 6)
!9902 = !DILocation(line: 606, column: 6, scope: !9901)
!9903 = !DILocation(line: 606, column: 6, scope: !9893)
!9904 = !DILocation(line: 610, column: 39, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9893, file: !1456, line: 610, column: 6)
!9906 = !DILocation(line: 610, column: 6, scope: !9905)
!9907 = !DILocation(line: 610, column: 6, scope: !9893)
!9908 = !DILocation(line: 614, column: 39, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9893, file: !1456, line: 614, column: 6)
!9910 = !DILocation(line: 614, column: 6, scope: !9909)
!9911 = !DILocation(line: 614, column: 6, scope: !9893)
!9912 = !DILocation(line: 619, column: 40, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9893, file: !1456, line: 619, column: 6)
!9914 = !DILocation(line: 619, column: 6, scope: !9913)
!9915 = !DILocation(line: 619, column: 6, scope: !9893)
!9916 = !DILocation(line: 623, column: 10, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9893, file: !1456, line: 623, column: 6)
!9918 = !DILocation(line: 623, column: 6, scope: !9893)
!9919 = !DILocation(line: 624, column: 34, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9917, file: !1456, line: 623, column: 24)
!9921 = !DILocation(line: 624, column: 3, scope: !9920)
!9922 = !DILocation(line: 625, column: 2, scope: !9920)
!9923 = !DILocation(line: 632, column: 10, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9893, file: !1456, line: 632, column: 6)
!9925 = !DILocation(line: 632, column: 6, scope: !9893)
!9926 = !DILocation(line: 633, column: 34, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9924, file: !1456, line: 632, column: 32)
!9928 = !DILocation(line: 633, column: 3, scope: !9927)
!9929 = !DILocation(line: 634, column: 2, scope: !9927)
!9930 = !DILocation(line: 636, column: 10, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9893, file: !1456, line: 636, column: 6)
!9932 = !DILocation(line: 636, column: 6, scope: !9893)
!9933 = !DILocation(line: 637, column: 33, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9931, file: !1456, line: 636, column: 31)
!9935 = !DILocation(line: 637, column: 3, scope: !9934)
!9936 = !DILocation(line: 638, column: 2, scope: !9934)
!9937 = !DILocation(line: 640, column: 10, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9893, file: !1456, line: 640, column: 6)
!9939 = !DILocation(line: 640, column: 6, scope: !9893)
!9940 = !DILocation(line: 641, column: 33, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9938, file: !1456, line: 640, column: 32)
!9942 = !DILocation(line: 641, column: 3, scope: !9941)
!9943 = !DILocation(line: 642, column: 2, scope: !9941)
!9944 = !DILocation(line: 646, column: 32, scope: !9893)
!9945 = !DILocation(line: 646, column: 2, scope: !9893)
!9946 = !DILocation(line: 648, column: 2, scope: !9893)
!9947 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1456, file: !1456, line: 419, type: !1386, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !9948)
!9948 = !{!9949, !9950, !9951, !9952, !9954, !9955, !9956, !9957}
!9949 = !DILocalVariable(name: "dev", arg: 1, scope: !9947, file: !1456, line: 419, type: !1361)
!9950 = !DILocalVariable(name: "cfg", arg: 2, scope: !9947, file: !1456, line: 420, type: !1388)
!9951 = !DILocalVariable(name: "config", scope: !9947, file: !1456, line: 422, type: !9830)
!9952 = !DILocalVariable(name: "data", scope: !9947, file: !1456, line: 423, type: !9953)
!9953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!9954 = !DILocalVariable(name: "parity", scope: !9947, file: !1456, line: 424, type: !6714)
!9955 = !DILocalVariable(name: "stopbits", scope: !9947, file: !1456, line: 425, type: !6714)
!9956 = !DILocalVariable(name: "databits", scope: !9947, file: !1456, line: 426, type: !6714)
!9957 = !DILocalVariable(name: "flowctrl", scope: !9947, file: !1456, line: 428, type: !6714)
!9958 = !DILocation(line: 0, scope: !9947)
!9959 = !DILocation(line: 422, column: 48, scope: !9947)
!9960 = !DILocation(line: 423, column: 38, scope: !9947)
!9961 = !DILocation(line: 424, column: 56, scope: !9947)
!9962 = !DILocation(line: 424, column: 51, scope: !9947)
!9963 = !DILocation(line: 424, column: 26, scope: !9947)
!9964 = !DILocation(line: 425, column: 60, scope: !9947)
!9965 = !DILocation(line: 425, column: 55, scope: !9947)
!9966 = !DILocation(line: 425, column: 28, scope: !9947)
!9967 = !DILocation(line: 426, column: 60, scope: !9947)
!9968 = !DILocation(line: 426, column: 55, scope: !9947)
!9969 = !DILocation(line: 426, column: 28, scope: !9947)
!9970 = !DILocation(line: 428, column: 58, scope: !9947)
!9971 = !DILocation(line: 428, column: 53, scope: !9947)
!9972 = !DILocation(line: 428, column: 28, scope: !9947)
!9973 = !DILocation(line: 431, column: 44, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9947, file: !1456, line: 431, column: 6)
!9975 = !DILocation(line: 438, column: 22, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9947, file: !1456, line: 437, column: 6)
!9977 = !DILocation(line: 437, column: 6, scope: !9947)
!9978 = !DILocation(line: 448, column: 6, scope: !9947)
!9979 = !DILocation(line: 465, column: 47, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9947, file: !1456, line: 465, column: 6)
!9981 = !DILocation(line: 475, column: 21, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9947, file: !1456, line: 475, column: 6)
!9983 = !DILocation(line: 475, column: 6, scope: !9947)
!9984 = !DILocation(line: 476, column: 8, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9986, file: !1456, line: 476, column: 7)
!9986 = distinct !DILexicalBlock(scope: !9982, file: !1456, line: 475, column: 49)
!9987 = !DILocation(line: 477, column: 34, scope: !9985)
!9988 = !DILocation(line: 476, column: 7, scope: !9986)
!9989 = !DILocation(line: 482, column: 27, scope: !9947)
!9990 = !DILocation(line: 482, column: 2, scope: !9947)
!9991 = !DILocation(line: 484, column: 16, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9947, file: !1456, line: 484, column: 6)
!9993 = !DILocation(line: 484, column: 13, scope: !9992)
!9994 = !DILocation(line: 484, column: 6, scope: !9947)
!9995 = !DILocation(line: 485, column: 3, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9992, file: !1456, line: 484, column: 44)
!9997 = !DILocation(line: 486, column: 2, scope: !9996)
!9998 = !DILocation(line: 488, column: 18, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9947, file: !1456, line: 488, column: 6)
!10000 = !DILocation(line: 488, column: 15, scope: !9999)
!10001 = !DILocation(line: 488, column: 6, scope: !9947)
!10002 = !DILocation(line: 489, column: 3, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9999, file: !1456, line: 488, column: 48)
!10004 = !DILocation(line: 490, column: 2, scope: !10003)
!10005 = !DILocation(line: 492, column: 18, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9947, file: !1456, line: 492, column: 6)
!10007 = !DILocation(line: 492, column: 15, scope: !10006)
!10008 = !DILocation(line: 492, column: 6, scope: !9947)
!10009 = !DILocation(line: 493, column: 3, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10006, file: !1456, line: 492, column: 48)
!10011 = !DILocation(line: 494, column: 2, scope: !10010)
!10012 = !DILocation(line: 496, column: 18, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9947, file: !1456, line: 496, column: 6)
!10014 = !DILocation(line: 496, column: 15, scope: !10013)
!10015 = !DILocation(line: 496, column: 6, scope: !9947)
!10016 = !DILocation(line: 497, column: 3, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10013, file: !1456, line: 496, column: 46)
!10018 = !DILocation(line: 498, column: 2, scope: !10017)
!10019 = !DILocation(line: 500, column: 11, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9947, file: !1456, line: 500, column: 6)
!10021 = !DILocation(line: 500, column: 29, scope: !10020)
!10022 = !DILocation(line: 500, column: 20, scope: !10020)
!10023 = !DILocation(line: 500, column: 6, scope: !9947)
!10024 = !DILocation(line: 501, column: 3, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10020, file: !1456, line: 500, column: 40)
!10026 = !DILocation(line: 502, column: 26, scope: !10025)
!10027 = !DILocation(line: 502, column: 19, scope: !10025)
!10028 = !DILocation(line: 503, column: 2, scope: !10025)
!10029 = !DILocation(line: 505, column: 26, scope: !9947)
!10030 = !DILocation(line: 505, column: 2, scope: !9947)
!10031 = !DILocation(line: 506, column: 2, scope: !9947)
!10032 = !DILocation(line: 507, column: 1, scope: !9947)
!10033 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1456, file: !1456, line: 509, type: !1399, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10034)
!10034 = !{!10035, !10036, !10037}
!10035 = !DILocalVariable(name: "dev", arg: 1, scope: !10033, file: !1456, line: 509, type: !1361)
!10036 = !DILocalVariable(name: "cfg", arg: 2, scope: !10033, file: !1456, line: 510, type: !1401)
!10037 = !DILocalVariable(name: "data", scope: !10033, file: !1456, line: 512, type: !9953)
!10038 = !DILocation(line: 0, scope: !10033)
!10039 = !DILocation(line: 512, column: 38, scope: !10033)
!10040 = !DILocation(line: 514, column: 24, scope: !10033)
!10041 = !DILocation(line: 514, column: 7, scope: !10033)
!10042 = !DILocation(line: 514, column: 16, scope: !10033)
!10043 = !DILocation(line: 515, column: 41, scope: !10033)
!10044 = !{i32 0, i32 1537}
!10045 = !DILocation(line: 515, column: 16, scope: !10033)
!10046 = !DILocation(line: 515, column: 7, scope: !10033)
!10047 = !DILocation(line: 515, column: 14, scope: !10033)
!10048 = !DILocation(line: 517, column: 3, scope: !10033)
!10049 = !{i32 0, i32 12289}
!10050 = !DILocation(line: 516, column: 19, scope: !10033)
!10051 = !DILocation(line: 516, column: 7, scope: !10033)
!10052 = !DILocation(line: 516, column: 17, scope: !10033)
!10053 = !DILocation(line: 519, column: 3, scope: !10033)
!10054 = !DILocation(line: 519, column: 33, scope: !10033)
!10055 = !DILocation(line: 518, column: 19, scope: !10033)
!10056 = !DILocation(line: 518, column: 7, scope: !10033)
!10057 = !DILocation(line: 518, column: 17, scope: !10033)
!10058 = !DILocation(line: 521, column: 3, scope: !10033)
!10059 = !{i32 0, i32 769}
!10060 = !DILocation(line: 520, column: 19, scope: !10033)
!10061 = !DILocation(line: 520, column: 7, scope: !10033)
!10062 = !DILocation(line: 520, column: 17, scope: !10033)
!10063 = !DILocation(line: 522, column: 2, scope: !10033)
!10064 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1456, file: !1456, line: 205, type: !10065, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10067)
!10065 = !DISubroutineType(types: !10066)
!10066 = !{!110, !1361}
!10067 = !{!10068, !10069}
!10068 = !DILocalVariable(name: "dev", arg: 1, scope: !10064, file: !1456, line: 205, type: !1361)
!10069 = !DILocalVariable(name: "config", scope: !10064, file: !1456, line: 207, type: !9830)
!10070 = !DILocation(line: 0, scope: !10064)
!10071 = !DILocation(line: 207, column: 48, scope: !10064)
!10072 = !DILocation(line: 209, column: 36, scope: !10064)
!10073 = !DILocation(line: 209, column: 9, scope: !10064)
!10074 = !DILocation(line: 209, column: 2, scope: !10064)
!10075 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1456, file: !1456, line: 270, type: !10076, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10078)
!10076 = !DISubroutineType(types: !10077)
!10077 = !{!1327, !110}
!10078 = !{!10079}
!10079 = !DILocalVariable(name: "parity", arg: 1, scope: !10075, file: !1456, line: 270, type: !110)
!10080 = !DILocation(line: 0, scope: !10075)
!10081 = !DILocation(line: 272, column: 2, scope: !10075)
!10082 = !DILocation(line: 281, column: 1, scope: !10075)
!10083 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1456, file: !1456, line: 220, type: !10065, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10084)
!10084 = !{!10085, !10086}
!10085 = !DILocalVariable(name: "dev", arg: 1, scope: !10083, file: !1456, line: 220, type: !1361)
!10086 = !DILocalVariable(name: "config", scope: !10083, file: !1456, line: 222, type: !9830)
!10087 = !DILocation(line: 0, scope: !10083)
!10088 = !DILocation(line: 222, column: 48, scope: !10083)
!10089 = !DILocation(line: 224, column: 44, scope: !10083)
!10090 = !DILocation(line: 224, column: 9, scope: !10083)
!10091 = !DILocation(line: 224, column: 2, scope: !10083)
!10092 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1456, file: !1456, line: 304, type: !10093, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10095)
!10093 = !DISubroutineType(types: !10094)
!10094 = !{!1341, !110}
!10095 = !{!10096}
!10096 = !DILocalVariable(name: "sb", arg: 1, scope: !10092, file: !1456, line: 304, type: !110)
!10097 = !DILocation(line: 0, scope: !10092)
!10098 = !DILocation(line: 306, column: 2, scope: !10092)
!10099 = !DILocation(line: 0, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10092, file: !1456, line: 306, column: 14)
!10101 = !DILocation(line: 323, column: 1, scope: !10092)
!10102 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1456, file: !1456, line: 235, type: !10065, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10103)
!10103 = !{!10104, !10105}
!10104 = !DILocalVariable(name: "dev", arg: 1, scope: !10102, file: !1456, line: 235, type: !1361)
!10105 = !DILocalVariable(name: "config", scope: !10102, file: !1456, line: 237, type: !9830)
!10106 = !DILocation(line: 0, scope: !10102)
!10107 = !DILocation(line: 237, column: 48, scope: !10102)
!10108 = !DILocation(line: 239, column: 39, scope: !10102)
!10109 = !DILocation(line: 239, column: 9, scope: !10102)
!10110 = !DILocation(line: 239, column: 2, scope: !10102)
!10111 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1456, file: !1456, line: 355, type: !10112, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10114)
!10112 = !DISubroutineType(types: !10113)
!10113 = !{!1334, !110, !110}
!10114 = !{!10115, !10116}
!10115 = !DILocalVariable(name: "db", arg: 1, scope: !10111, file: !1456, line: 355, type: !110)
!10116 = !DILocalVariable(name: "p", arg: 2, scope: !10111, file: !1456, line: 356, type: !110)
!10117 = !DILocation(line: 0, scope: !10111)
!10118 = !DILocation(line: 358, column: 2, scope: !10111)
!10119 = !DILocation(line: 384, column: 1, scope: !10111)
!10120 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1456, file: !1456, line: 250, type: !10065, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10121)
!10121 = !{!10122, !10123}
!10122 = !DILocalVariable(name: "dev", arg: 1, scope: !10120, file: !1456, line: 250, type: !1361)
!10123 = !DILocalVariable(name: "config", scope: !10120, file: !1456, line: 252, type: !9830)
!10124 = !DILocation(line: 0, scope: !10120)
!10125 = !DILocation(line: 252, column: 48, scope: !10120)
!10126 = !DILocation(line: 254, column: 40, scope: !10120)
!10127 = !DILocation(line: 254, column: 9, scope: !10120)
!10128 = !DILocation(line: 254, column: 2, scope: !10120)
!10129 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1456, file: !1456, line: 409, type: !10130, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10132)
!10130 = !DISubroutineType(types: !10131)
!10131 = !{!1347, !110}
!10132 = !{!10133}
!10133 = !DILocalVariable(name: "fc", arg: 1, scope: !10129, file: !1456, line: 409, type: !110)
!10134 = !DILocation(line: 0, scope: !10129)
!10135 = !DILocation(line: 411, column: 9, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10129, file: !1456, line: 411, column: 6)
!10137 = !DILocation(line: 416, column: 1, scope: !10129)
!10138 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10139, file: !10139, line: 967, type: !10140, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10142)
!10139 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10140 = !DISubroutineType(types: !10141)
!10141 = !{!110, !1402}
!10142 = !{!10143}
!10143 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10138, file: !10139, line: 967, type: !1402)
!10144 = !DILocation(line: 0, scope: !10138)
!10145 = !DILocation(line: 969, column: 21, scope: !10138)
!10146 = !DILocation(line: 969, column: 3, scope: !10138)
!10147 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10139, file: !10139, line: 601, type: !10140, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10148)
!10148 = !{!10149}
!10149 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10147, file: !10139, line: 601, type: !1402)
!10150 = !DILocation(line: 0, scope: !10147)
!10151 = !DILocation(line: 603, column: 21, scope: !10147)
!10152 = !DILocation(line: 603, column: 3, scope: !10147)
!10153 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10139, file: !10139, line: 820, type: !10140, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10154)
!10154 = !{!10155}
!10155 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10153, file: !10139, line: 820, type: !1402)
!10156 = !DILocation(line: 0, scope: !10153)
!10157 = !DILocation(line: 822, column: 21, scope: !10153)
!10158 = !DILocation(line: 822, column: 3, scope: !10153)
!10159 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10139, file: !10139, line: 547, type: !10140, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10160)
!10160 = !{!10161}
!10161 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10159, file: !10139, line: 547, type: !1402)
!10162 = !DILocation(line: 0, scope: !10159)
!10163 = !DILocation(line: 549, column: 21, scope: !10159)
!10164 = !DILocation(line: 549, column: 3, scope: !10159)
!10165 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1456, file: !1456, line: 257, type: !10166, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10168)
!10166 = !DISubroutineType(types: !10167)
!10167 = !{!110, !1327}
!10168 = !{!10169}
!10169 = !DILocalVariable(name: "parity", arg: 1, scope: !10165, file: !1456, line: 257, type: !1327)
!10170 = !DILocation(line: 0, scope: !10165)
!10171 = !DILocation(line: 259, column: 2, scope: !10165)
!10172 = !DILocation(line: 268, column: 1, scope: !10165)
!10173 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1456, file: !1456, line: 283, type: !10174, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10176)
!10174 = !DISubroutineType(types: !10175)
!10175 = !{!110, !1341}
!10176 = !{!10177}
!10177 = !DILocalVariable(name: "sb", arg: 1, scope: !10173, file: !1456, line: 283, type: !1341)
!10178 = !DILocation(line: 0, scope: !10173)
!10179 = !DILocation(line: 285, column: 2, scope: !10173)
!10180 = !DILocation(line: 0, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10173, file: !1456, line: 285, column: 14)
!10182 = !DILocation(line: 302, column: 1, scope: !10173)
!10183 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1456, file: !1456, line: 325, type: !10184, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10186)
!10184 = !DISubroutineType(types: !10185)
!10185 = !{!110, !1334, !1327}
!10186 = !{!10187, !10188}
!10187 = !DILocalVariable(name: "db", arg: 1, scope: !10183, file: !1456, line: 325, type: !1334)
!10188 = !DILocalVariable(name: "p", arg: 2, scope: !10183, file: !1456, line: 326, type: !1327)
!10189 = !DILocation(line: 0, scope: !10183)
!10190 = !DILocation(line: 328, column: 2, scope: !10183)
!10191 = !DILocation(line: 353, column: 1, scope: !10183)
!10192 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1456, file: !1456, line: 393, type: !10193, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10195)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{!110, !1347}
!10195 = !{!10196}
!10196 = !DILocalVariable(name: "fc", arg: 1, scope: !10192, file: !1456, line: 393, type: !1347)
!10197 = !DILocation(line: 0, scope: !10192)
!10198 = !DILocation(line: 395, column: 9, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10192, file: !1456, line: 395, column: 6)
!10200 = !DILocation(line: 400, column: 1, scope: !10192)
!10201 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10139, file: !10139, line: 424, type: !10202, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10204)
!10202 = !DISubroutineType(types: !10203)
!10203 = !{null, !1402}
!10204 = !{!10205}
!10205 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10201, file: !10139, line: 424, type: !1402)
!10206 = !DILocation(line: 0, scope: !10201)
!10207 = !DILocation(line: 426, column: 3, scope: !10201)
!10208 = !DILocation(line: 427, column: 1, scope: !10201)
!10209 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1456, file: !1456, line: 197, type: !10210, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10212)
!10210 = !DISubroutineType(types: !10211)
!10211 = !{null, !1361, !110}
!10212 = !{!10213, !10214, !10215}
!10213 = !DILocalVariable(name: "dev", arg: 1, scope: !10209, file: !1456, line: 197, type: !1361)
!10214 = !DILocalVariable(name: "parity", arg: 2, scope: !10209, file: !1456, line: 198, type: !110)
!10215 = !DILocalVariable(name: "config", scope: !10209, file: !1456, line: 200, type: !9830)
!10216 = !DILocation(line: 0, scope: !10209)
!10217 = !DILocation(line: 200, column: 48, scope: !10209)
!10218 = !DILocation(line: 202, column: 29, scope: !10209)
!10219 = !DILocation(line: 202, column: 2, scope: !10209)
!10220 = !DILocation(line: 203, column: 1, scope: !10209)
!10221 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1456, file: !1456, line: 212, type: !10210, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10222)
!10222 = !{!10223, !10224, !10225}
!10223 = !DILocalVariable(name: "dev", arg: 1, scope: !10221, file: !1456, line: 212, type: !1361)
!10224 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10221, file: !1456, line: 213, type: !110)
!10225 = !DILocalVariable(name: "config", scope: !10221, file: !1456, line: 215, type: !9830)
!10226 = !DILocation(line: 0, scope: !10221)
!10227 = !DILocation(line: 215, column: 48, scope: !10221)
!10228 = !DILocation(line: 217, column: 37, scope: !10221)
!10229 = !DILocation(line: 217, column: 2, scope: !10221)
!10230 = !DILocation(line: 218, column: 1, scope: !10221)
!10231 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1456, file: !1456, line: 227, type: !10210, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10232)
!10232 = !{!10233, !10234, !10235}
!10233 = !DILocalVariable(name: "dev", arg: 1, scope: !10231, file: !1456, line: 227, type: !1361)
!10234 = !DILocalVariable(name: "databits", arg: 2, scope: !10231, file: !1456, line: 228, type: !110)
!10235 = !DILocalVariable(name: "config", scope: !10231, file: !1456, line: 230, type: !9830)
!10236 = !DILocation(line: 0, scope: !10231)
!10237 = !DILocation(line: 230, column: 48, scope: !10231)
!10238 = !DILocation(line: 232, column: 32, scope: !10231)
!10239 = !DILocation(line: 232, column: 2, scope: !10231)
!10240 = !DILocation(line: 233, column: 1, scope: !10231)
!10241 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1456, file: !1456, line: 242, type: !10210, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10242)
!10242 = !{!10243, !10244, !10245}
!10243 = !DILocalVariable(name: "dev", arg: 1, scope: !10241, file: !1456, line: 242, type: !1361)
!10244 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10241, file: !1456, line: 243, type: !110)
!10245 = !DILocalVariable(name: "config", scope: !10241, file: !1456, line: 245, type: !9830)
!10246 = !DILocation(line: 0, scope: !10241)
!10247 = !DILocation(line: 245, column: 48, scope: !10241)
!10248 = !DILocation(line: 247, column: 33, scope: !10241)
!10249 = !DILocation(line: 247, column: 2, scope: !10241)
!10250 = !DILocation(line: 248, column: 1, scope: !10241)
!10251 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1456, file: !1456, line: 107, type: !10210, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10252)
!10252 = !{!10253, !10254, !10255, !10256, !10257}
!10253 = !DILocalVariable(name: "dev", arg: 1, scope: !10251, file: !1456, line: 107, type: !1361)
!10254 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10251, file: !1456, line: 107, type: !110)
!10255 = !DILocalVariable(name: "config", scope: !10251, file: !1456, line: 109, type: !9830)
!10256 = !DILocalVariable(name: "data", scope: !10251, file: !1456, line: 110, type: !9953)
!10257 = !DILocalVariable(name: "clock_rate", scope: !10251, file: !1456, line: 112, type: !110)
!10258 = !DILocation(line: 0, scope: !10251)
!10259 = !DILocation(line: 109, column: 48, scope: !10251)
!10260 = !DILocation(line: 110, column: 38, scope: !10251)
!10261 = !DILocation(line: 112, column: 2, scope: !10251)
!10262 = !DILocation(line: 123, column: 36, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10264, file: !1456, line: 123, column: 7)
!10264 = distinct !DILexicalBlock(scope: !10265, file: !1456, line: 122, column: 9)
!10265 = distinct !DILexicalBlock(scope: !10251, file: !1456, line: 115, column: 6)
!10266 = !DILocation(line: 124, column: 42, scope: !10263)
!10267 = !DILocation(line: 123, column: 7, scope: !10263)
!10268 = !DILocation(line: 125, column: 22, scope: !10263)
!10269 = !DILocation(line: 123, column: 7, scope: !10264)
!10270 = !DILocation(line: 126, column: 4, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10272, file: !1456, line: 126, column: 4)
!10272 = distinct !DILexicalBlock(scope: !10273, file: !1456, line: 126, column: 4)
!10273 = distinct !DILexicalBlock(scope: !10274, file: !1456, line: 126, column: 4)
!10274 = distinct !DILexicalBlock(scope: !10275, file: !1456, line: 126, column: 4)
!10275 = distinct !DILexicalBlock(scope: !10263, file: !1456, line: 125, column: 27)
!10276 = !DILocation(line: 127, column: 4, scope: !10275)
!10277 = !DILocation(line: 176, column: 36, scope: !10251)
!10278 = !DILocation(line: 176, column: 3, scope: !10251)
!10279 = !DILocation(line: 179, column: 32, scope: !10251)
!10280 = !DILocation(line: 180, column: 10, scope: !10251)
!10281 = !DILocation(line: 179, column: 3, scope: !10251)
!10282 = !DILocation(line: 189, column: 3, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10284, file: !1456, line: 189, column: 3)
!10284 = distinct !DILexicalBlock(scope: !10251, file: !1456, line: 189, column: 3)
!10285 = !DILocation(line: 189, column: 3, scope: !10284)
!10286 = !DILocation(line: 189, column: 3, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10283, file: !1456, line: 189, column: 3)
!10288 = !DILocation(line: 195, column: 1, scope: !10251)
!10289 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10139, file: !10139, line: 410, type: !10202, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10290)
!10290 = !{!10291}
!10291 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10289, file: !10139, line: 410, type: !1402)
!10292 = !DILocation(line: 0, scope: !10289)
!10293 = !DILocation(line: 412, column: 3, scope: !10289)
!10294 = !DILocation(line: 413, column: 1, scope: !10289)
!10295 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !816, file: !816, line: 216, type: !1435, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10296)
!10296 = !{!10297, !10298, !10299, !10300}
!10297 = !DILocalVariable(name: "dev", arg: 1, scope: !10295, file: !816, line: 216, type: !1361)
!10298 = !DILocalVariable(name: "sys", arg: 2, scope: !10295, file: !816, line: 217, type: !911)
!10299 = !DILocalVariable(name: "rate", arg: 3, scope: !10295, file: !816, line: 218, type: !867)
!10300 = !DILocalVariable(name: "api", scope: !10295, file: !816, line: 220, type: !1413)
!10301 = !DILocation(line: 0, scope: !10295)
!10302 = !DILocation(line: 221, column: 49, scope: !10295)
!10303 = !DILocation(line: 223, column: 11, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10295, file: !816, line: 223, column: 6)
!10305 = !DILocation(line: 223, column: 20, scope: !10304)
!10306 = !DILocation(line: 223, column: 6, scope: !10295)
!10307 = !DILocation(line: 227, column: 9, scope: !10295)
!10308 = !DILocation(line: 227, column: 2, scope: !10295)
!10309 = !DILocation(line: 228, column: 1, scope: !10295)
!10310 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6194, file: !6194, line: 175, type: !6195, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10311)
!10311 = !{!10312}
!10312 = !DILocalVariable(name: "level", arg: 1, scope: !10310, file: !6194, line: 175, type: !109)
!10313 = !DILocation(line: 0, scope: !10310)
!10314 = !DILocation(line: 177, column: 2, scope: !10310)
!10315 = !DILocation(line: 189, column: 1, scope: !10310)
!10316 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10139, file: !10139, line: 615, type: !10317, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10319)
!10317 = !DISubroutineType(types: !10318)
!10318 = !{null, !1402, !110}
!10319 = !{!10320, !10321}
!10320 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10316, file: !10139, line: 615, type: !1402)
!10321 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10316, file: !10139, line: 615, type: !110)
!10322 = !DILocation(line: 0, scope: !10316)
!10323 = !DILocation(line: 617, column: 3, scope: !10316)
!10324 = !DILocation(line: 618, column: 1, scope: !10316)
!10325 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10139, file: !10139, line: 1020, type: !10326, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10328)
!10326 = !DISubroutineType(types: !10327)
!10327 = !{null, !1402, !110, !110, !110}
!10328 = !{!10329, !10330, !10331, !10332}
!10329 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10325, file: !10139, line: 1020, type: !1402)
!10330 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10325, file: !10139, line: 1020, type: !110)
!10331 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10325, file: !10139, line: 1020, type: !110)
!10332 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10325, file: !10139, line: 1021, type: !110)
!10333 = !DILocation(line: 0, scope: !10325)
!10334 = !DILocation(line: 1029, column: 30, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10336, file: !10139, line: 1028, column: 3)
!10336 = distinct !DILexicalBlock(scope: !10325, file: !10139, line: 1023, column: 7)
!10337 = !DILocation(line: 1029, column: 19, scope: !10335)
!10338 = !DILocation(line: 1029, column: 13, scope: !10335)
!10339 = !DILocation(line: 1029, column: 17, scope: !10335)
!10340 = !DILocation(line: 1031, column: 1, scope: !10325)
!10341 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10139, file: !10139, line: 949, type: !10317, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10342)
!10342 = !{!10343, !10344}
!10343 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10341, file: !10139, line: 949, type: !1402)
!10344 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10341, file: !10139, line: 949, type: !110)
!10345 = !DILocation(line: 0, scope: !10341)
!10346 = !DILocation(line: 951, column: 3, scope: !10341)
!10347 = !DILocation(line: 952, column: 1, scope: !10341)
!10348 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10139, file: !10139, line: 588, type: !10317, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10349)
!10349 = !{!10350, !10351}
!10350 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10348, file: !10139, line: 588, type: !1402)
!10351 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10348, file: !10139, line: 588, type: !110)
!10352 = !DILocation(line: 0, scope: !10348)
!10353 = !DILocation(line: 590, column: 3, scope: !10348)
!10354 = !DILocation(line: 591, column: 1, scope: !10348)
!10355 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10139, file: !10139, line: 805, type: !10317, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10356)
!10356 = !{!10357, !10358}
!10357 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10355, file: !10139, line: 805, type: !1402)
!10358 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10355, file: !10139, line: 805, type: !110)
!10359 = !DILocation(line: 0, scope: !10355)
!10360 = !DILocation(line: 807, column: 3, scope: !10355)
!10361 = !DILocation(line: 808, column: 1, scope: !10355)
!10362 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10139, file: !10139, line: 532, type: !10317, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10363)
!10363 = !{!10364, !10365}
!10364 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10362, file: !10139, line: 532, type: !1402)
!10365 = !DILocalVariable(name: "Parity", arg: 2, scope: !10362, file: !10139, line: 532, type: !110)
!10366 = !DILocation(line: 0, scope: !10362)
!10367 = !DILocation(line: 534, column: 3, scope: !10362)
!10368 = !DILocation(line: 535, column: 1, scope: !10362)
!10369 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10139, file: !10139, line: 1770, type: !10140, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10370)
!10370 = !{!10371}
!10371 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10369, file: !10139, line: 1770, type: !1402)
!10372 = !DILocation(line: 0, scope: !10369)
!10373 = !DILocation(line: 1772, column: 11, scope: !10369)
!10374 = !DILocation(line: 1772, column: 46, scope: !10369)
!10375 = !DILocation(line: 1772, column: 3, scope: !10369)
!10376 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10139, file: !10139, line: 1737, type: !10140, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10377)
!10377 = !{!10378}
!10378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10376, file: !10139, line: 1737, type: !1402)
!10379 = !DILocation(line: 0, scope: !10376)
!10380 = !DILocation(line: 1739, column: 11, scope: !10376)
!10381 = !DILocation(line: 1739, column: 3, scope: !10376)
!10382 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10139, file: !10139, line: 1748, type: !10140, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10383)
!10383 = !{!10384}
!10384 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10382, file: !10139, line: 1748, type: !1402)
!10385 = !DILocation(line: 0, scope: !10382)
!10386 = !DILocation(line: 1750, column: 11, scope: !10382)
!10387 = !DILocation(line: 1750, column: 45, scope: !10382)
!10388 = !DILocation(line: 1750, column: 3, scope: !10382)
!10389 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10139, file: !10139, line: 1827, type: !10140, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10390)
!10390 = !{!10391}
!10391 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10389, file: !10139, line: 1827, type: !1402)
!10392 = !DILocation(line: 0, scope: !10389)
!10393 = !DILocation(line: 1829, column: 11, scope: !10389)
!10394 = !DILocation(line: 1829, column: 46, scope: !10389)
!10395 = !DILocation(line: 1829, column: 3, scope: !10389)
!10396 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10139, file: !10139, line: 1992, type: !10202, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10397)
!10397 = !{!10398}
!10398 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10396, file: !10139, line: 1992, type: !1402)
!10399 = !DILocation(line: 0, scope: !10396)
!10400 = !DILocation(line: 1994, column: 3, scope: !10396)
!10401 = !DILocation(line: 1995, column: 1, scope: !10396)
!10402 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10139, file: !10139, line: 1934, type: !10202, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10403)
!10403 = !{!10404, !10405}
!10404 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10402, file: !10139, line: 1934, type: !1402)
!10405 = !DILocalVariable(name: "tmpreg", scope: !10402, file: !10139, line: 1936, type: !316)
!10406 = !DILocation(line: 0, scope: !10402)
!10407 = !DILocation(line: 1936, column: 3, scope: !10402)
!10408 = !DILocation(line: 1936, column: 17, scope: !10402)
!10409 = !DILocation(line: 1937, column: 20, scope: !10402)
!10410 = !DILocation(line: 1937, column: 10, scope: !10402)
!10411 = !DILocation(line: 1938, column: 10, scope: !10402)
!10412 = !DILocation(line: 1939, column: 20, scope: !10402)
!10413 = !DILocation(line: 1939, column: 10, scope: !10402)
!10414 = !DILocation(line: 1940, column: 10, scope: !10402)
!10415 = !DILocation(line: 1941, column: 1, scope: !10402)
!10416 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10139, file: !10139, line: 1877, type: !10202, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10417)
!10417 = !{!10418, !10419}
!10418 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10416, file: !10139, line: 1877, type: !1402)
!10419 = !DILocalVariable(name: "tmpreg", scope: !10416, file: !10139, line: 1879, type: !316)
!10420 = !DILocation(line: 0, scope: !10416)
!10421 = !DILocation(line: 1879, column: 3, scope: !10416)
!10422 = !DILocation(line: 1879, column: 17, scope: !10416)
!10423 = !DILocation(line: 1880, column: 20, scope: !10416)
!10424 = !DILocation(line: 1880, column: 10, scope: !10416)
!10425 = !DILocation(line: 1881, column: 10, scope: !10416)
!10426 = !DILocation(line: 1882, column: 20, scope: !10416)
!10427 = !DILocation(line: 1882, column: 10, scope: !10416)
!10428 = !DILocation(line: 1883, column: 10, scope: !10416)
!10429 = !DILocation(line: 1884, column: 1, scope: !10416)
!10430 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10139, file: !10139, line: 1896, type: !10202, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10431)
!10431 = !{!10432, !10433}
!10432 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10430, file: !10139, line: 1896, type: !1402)
!10433 = !DILocalVariable(name: "tmpreg", scope: !10430, file: !10139, line: 1898, type: !316)
!10434 = !DILocation(line: 0, scope: !10430)
!10435 = !DILocation(line: 1898, column: 3, scope: !10430)
!10436 = !DILocation(line: 1898, column: 17, scope: !10430)
!10437 = !DILocation(line: 1899, column: 20, scope: !10430)
!10438 = !DILocation(line: 1899, column: 10, scope: !10430)
!10439 = !DILocation(line: 1900, column: 10, scope: !10430)
!10440 = !DILocation(line: 1901, column: 20, scope: !10430)
!10441 = !DILocation(line: 1901, column: 10, scope: !10430)
!10442 = !DILocation(line: 1902, column: 10, scope: !10430)
!10443 = !DILocation(line: 1903, column: 1, scope: !10430)
!10444 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10139, file: !10139, line: 1915, type: !10202, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10445)
!10445 = !{!10446, !10447}
!10446 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10444, file: !10139, line: 1915, type: !1402)
!10447 = !DILocalVariable(name: "tmpreg", scope: !10444, file: !10139, line: 1917, type: !316)
!10448 = !DILocation(line: 0, scope: !10444)
!10449 = !DILocation(line: 1917, column: 3, scope: !10444)
!10450 = !DILocation(line: 1917, column: 17, scope: !10444)
!10451 = !DILocation(line: 1918, column: 20, scope: !10444)
!10452 = !DILocation(line: 1918, column: 10, scope: !10444)
!10453 = !DILocation(line: 1919, column: 10, scope: !10444)
!10454 = !DILocation(line: 1920, column: 20, scope: !10444)
!10455 = !DILocation(line: 1920, column: 10, scope: !10444)
!10456 = !DILocation(line: 1921, column: 10, scope: !10444)
!10457 = !DILocation(line: 1922, column: 1, scope: !10444)
!10458 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10139, file: !10139, line: 1814, type: !10140, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10459)
!10459 = !{!10460}
!10460 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10458, file: !10139, line: 1814, type: !1402)
!10461 = !DILocation(line: 0, scope: !10458)
!10462 = !DILocation(line: 1816, column: 11, scope: !10458)
!10463 = !DILocation(line: 1816, column: 46, scope: !10458)
!10464 = !DILocation(line: 1816, column: 3, scope: !10458)
!10465 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10139, file: !10139, line: 2426, type: !10466, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10468)
!10466 = !DISubroutineType(types: !10467)
!10467 = !{null, !1402, !180}
!10468 = !{!10469, !10470}
!10469 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10465, file: !10139, line: 2426, type: !1402)
!10470 = !DILocalVariable(name: "Value", arg: 2, scope: !10465, file: !10139, line: 2426, type: !180)
!10471 = !DILocation(line: 0, scope: !10465)
!10472 = !DILocation(line: 2428, column: 16, scope: !10465)
!10473 = !DILocation(line: 2428, column: 11, scope: !10465)
!10474 = !DILocation(line: 2428, column: 14, scope: !10465)
!10475 = !DILocation(line: 2429, column: 1, scope: !10465)
!10476 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10139, file: !10139, line: 1792, type: !10140, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10477)
!10477 = !{!10478}
!10478 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10476, file: !10139, line: 1792, type: !1402)
!10479 = !DILocation(line: 0, scope: !10476)
!10480 = !DILocation(line: 1794, column: 11, scope: !10476)
!10481 = !DILocation(line: 1794, column: 47, scope: !10476)
!10482 = !DILocation(line: 1794, column: 3, scope: !10476)
!10483 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10139, file: !10139, line: 2403, type: !10484, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10486)
!10484 = !DISubroutineType(types: !10485)
!10485 = !{!180, !1402}
!10486 = !{!10487}
!10487 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10483, file: !10139, line: 2403, type: !1402)
!10488 = !DILocation(line: 0, scope: !10483)
!10489 = !DILocation(line: 2405, column: 20, scope: !10483)
!10490 = !DILocation(line: 2405, column: 10, scope: !10483)
!10491 = !DILocation(line: 2405, column: 3, scope: !10483)
!10492 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1456, file: !1456, line: 1583, type: !1382, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10493)
!10493 = !{!10494, !10495, !10496, !10497, !10498, !10499}
!10494 = !DILocalVariable(name: "dev", arg: 1, scope: !10492, file: !1456, line: 1583, type: !1361)
!10495 = !DILocalVariable(name: "config", scope: !10492, file: !1456, line: 1585, type: !9830)
!10496 = !DILocalVariable(name: "data", scope: !10492, file: !1456, line: 1586, type: !9953)
!10497 = !DILocalVariable(name: "ll_parity", scope: !10492, file: !1456, line: 1587, type: !110)
!10498 = !DILocalVariable(name: "ll_datawidth", scope: !10492, file: !1456, line: 1588, type: !110)
!10499 = !DILocalVariable(name: "err", scope: !10492, file: !1456, line: 1589, type: !109)
!10500 = !DILocation(line: 0, scope: !10492)
!10501 = !DILocation(line: 1585, column: 48, scope: !10492)
!10502 = !DILocation(line: 1586, column: 38, scope: !10492)
!10503 = !DILocation(line: 1591, column: 2, scope: !10492)
!10504 = !DILocation(line: 1593, column: 29, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10492, file: !1456, line: 1593, column: 6)
!10506 = !DILocation(line: 1593, column: 7, scope: !10505)
!10507 = !DILocation(line: 1593, column: 6, scope: !10492)
!10508 = !DILocation(line: 1594, column: 3, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !1456, line: 1594, column: 3)
!10510 = distinct !DILexicalBlock(scope: !10511, file: !1456, line: 1594, column: 3)
!10511 = distinct !DILexicalBlock(scope: !10512, file: !1456, line: 1594, column: 3)
!10512 = distinct !DILexicalBlock(scope: !10513, file: !1456, line: 1594, column: 3)
!10513 = distinct !DILexicalBlock(scope: !10505, file: !1456, line: 1593, column: 37)
!10514 = !DILocation(line: 1595, column: 3, scope: !10513)
!10515 = !DILocation(line: 1599, column: 31, scope: !10492)
!10516 = !DILocation(line: 1599, column: 71, scope: !10492)
!10517 = !DILocation(line: 1599, column: 8, scope: !10492)
!10518 = !DILocation(line: 1600, column: 10, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10492, file: !1456, line: 1600, column: 6)
!10520 = !DILocation(line: 1600, column: 6, scope: !10492)
!10521 = !DILocation(line: 1601, column: 3, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10523, file: !1456, line: 1601, column: 3)
!10523 = distinct !DILexicalBlock(scope: !10524, file: !1456, line: 1601, column: 3)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !1456, line: 1601, column: 3)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !1456, line: 1601, column: 3)
!10526 = distinct !DILexicalBlock(scope: !10519, file: !1456, line: 1600, column: 16)
!10527 = !DILocation(line: 1602, column: 3, scope: !10526)
!10528 = !DILocation(line: 1616, column: 36, scope: !10492)
!10529 = !DILocation(line: 1616, column: 8, scope: !10492)
!10530 = !DILocation(line: 1617, column: 10, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10492, file: !1456, line: 1617, column: 6)
!10532 = !DILocation(line: 1617, column: 6, scope: !10492)
!10533 = !DILocation(line: 1621, column: 27, scope: !10492)
!10534 = !DILocation(line: 1621, column: 2, scope: !10492)
!10535 = !DILocation(line: 1624, column: 40, scope: !10492)
!10536 = !DILocation(line: 1624, column: 2, scope: !10492)
!10537 = !DILocation(line: 1630, column: 14, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10492, file: !1456, line: 1630, column: 6)
!10539 = !DILocation(line: 1630, column: 6, scope: !10492)
!10540 = !DILocation(line: 1640, column: 4, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10542, file: !1456, line: 1640, column: 4)
!10542 = distinct !DILexicalBlock(scope: !10543, file: !1456, line: 1640, column: 4)
!10543 = distinct !DILexicalBlock(scope: !10544, file: !1456, line: 1640, column: 4)
!10544 = distinct !DILexicalBlock(scope: !10545, file: !1456, line: 1640, column: 4)
!10545 = distinct !DILexicalBlock(scope: !10546, file: !1456, line: 1639, column: 28)
!10546 = distinct !DILexicalBlock(scope: !10547, file: !1456, line: 1639, column: 7)
!10547 = distinct !DILexicalBlock(scope: !10548, file: !1456, line: 1638, column: 9)
!10548 = distinct !DILexicalBlock(scope: !10538, file: !1456, line: 1634, column: 13)
!10549 = !DILocation(line: 0, scope: !10538)
!10550 = !DILocation(line: 1649, column: 35, scope: !10492)
!10551 = !DILocation(line: 1649, column: 2, scope: !10492)
!10552 = !DILocation(line: 1654, column: 14, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10492, file: !1456, line: 1654, column: 6)
!10554 = !DILocation(line: 1654, column: 6, scope: !10492)
!10555 = !DILocation(line: 1655, column: 3, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10553, file: !1456, line: 1654, column: 31)
!10557 = !DILocation(line: 1656, column: 2, scope: !10556)
!10558 = !DILocation(line: 1659, column: 37, scope: !10492)
!10559 = !DILocation(line: 1659, column: 2, scope: !10492)
!10560 = !DILocation(line: 1662, column: 14, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10492, file: !1456, line: 1662, column: 6)
!10562 = !DILocation(line: 1662, column: 6, scope: !10492)
!10563 = !DILocation(line: 1663, column: 37, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10561, file: !1456, line: 1662, column: 27)
!10565 = !DILocation(line: 1663, column: 3, scope: !10564)
!10566 = !DILocation(line: 1664, column: 2, scope: !10564)
!10567 = !DILocation(line: 1684, column: 26, scope: !10492)
!10568 = !DILocation(line: 1684, column: 2, scope: !10492)
!10569 = !DILocation(line: 1722, column: 2, scope: !10492)
!10570 = !DILocation(line: 1724, column: 1, scope: !10492)
!10571 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1456, file: !1456, line: 651, type: !10572, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10574)
!10572 = !DISubroutineType(types: !10573)
!10573 = !{null, !1361}
!10574 = !{!10575, !10576, !10577}
!10575 = !DILocalVariable(name: "dev", arg: 1, scope: !10571, file: !1456, line: 651, type: !1361)
!10576 = !DILocalVariable(name: "data", scope: !10571, file: !1456, line: 653, type: !9953)
!10577 = !DILocalVariable(name: "clk", scope: !10571, file: !1456, line: 654, type: !10578)
!10578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!10579 = !DILocation(line: 0, scope: !10571)
!10580 = !DILocation(line: 653, column: 38, scope: !10571)
!10581 = !DILocation(line: 656, column: 8, scope: !10571)
!10582 = !DILocation(line: 656, column: 14, scope: !10571)
!10583 = !DILocation(line: 657, column: 1, scope: !10571)
!10584 = distinct !DISubprogram(name: "device_is_ready", scope: !8949, file: !8949, line: 47, type: !10585, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10587)
!10585 = !DISubroutineType(types: !10586)
!10586 = !{!347, !1361}
!10587 = !{!10588}
!10588 = !DILocalVariable(name: "dev", arg: 1, scope: !10584, file: !8949, line: 47, type: !1361)
!10589 = !DILocation(line: 0, scope: !10584)
!10590 = !DILocation(line: 55, column: 2, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10584, file: !8949, line: 55, column: 2)
!10592 = !{i64 2154458451}
!10593 = !DILocation(line: 56, column: 9, scope: !10584)
!10594 = !DILocation(line: 56, column: 2, scope: !10584)
!10595 = distinct !DISubprogram(name: "clock_control_on", scope: !816, file: !816, line: 123, type: !1420, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10596)
!10596 = !{!10597, !10598, !10599}
!10597 = !DILocalVariable(name: "dev", arg: 1, scope: !10595, file: !816, line: 123, type: !1361)
!10598 = !DILocalVariable(name: "sys", arg: 2, scope: !10595, file: !816, line: 124, type: !911)
!10599 = !DILocalVariable(name: "api", scope: !10595, file: !816, line: 126, type: !1413)
!10600 = !DILocation(line: 0, scope: !10595)
!10601 = !DILocation(line: 127, column: 49, scope: !10595)
!10602 = !DILocation(line: 129, column: 14, scope: !10595)
!10603 = !DILocation(line: 129, column: 9, scope: !10595)
!10604 = !DILocation(line: 129, column: 2, scope: !10595)
!10605 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1512, file: !1512, line: 342, type: !10606, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10608)
!10606 = !DISubroutineType(types: !10607)
!10607 = !{!109, !1509, !180}
!10608 = !{!10609, !10610, !10611, !10612}
!10609 = !DILocalVariable(name: "config", arg: 1, scope: !10605, file: !1512, line: 342, type: !1509)
!10610 = !DILocalVariable(name: "id", arg: 2, scope: !10605, file: !1512, line: 343, type: !180)
!10611 = !DILocalVariable(name: "ret", scope: !10605, file: !1512, line: 345, type: !109)
!10612 = !DILocalVariable(name: "state", scope: !10605, file: !1512, line: 346, type: !1515)
!10613 = !DILocation(line: 0, scope: !10605)
!10614 = !DILocation(line: 346, column: 2, scope: !10605)
!10615 = !DILocation(line: 348, column: 8, scope: !10605)
!10616 = !DILocation(line: 349, column: 10, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10605, file: !1512, line: 349, column: 6)
!10618 = !DILocation(line: 349, column: 6, scope: !10605)
!10619 = !DILocation(line: 353, column: 44, scope: !10605)
!10620 = !DILocation(line: 353, column: 9, scope: !10605)
!10621 = !DILocation(line: 353, column: 2, scope: !10605)
!10622 = !DILocation(line: 354, column: 1, scope: !10605)
!10623 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10139, file: !10139, line: 497, type: !10317, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10624)
!10624 = !{!10625, !10626, !10627}
!10625 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10623, file: !10139, line: 497, type: !1402)
!10626 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10623, file: !10139, line: 497, type: !110)
!10627 = !DILocalVariable(name: "val", scope: !10628, file: !10139, line: 499, type: !110)
!10628 = distinct !DILexicalBlock(scope: !10623, file: !10139, line: 499, column: 3)
!10629 = !DILocation(line: 0, scope: !10623)
!10630 = !DILocation(line: 499, column: 3, scope: !10628)
!10631 = !DILocalVariable(name: "addr", arg: 1, scope: !10632, file: !6437, line: 476, type: !1452)
!10632 = distinct !DISubprogram(name: "__LDREXW", scope: !6437, file: !6437, line: 476, type: !10633, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10635)
!10633 = !DISubroutineType(types: !10634)
!10634 = !{!110, !1452}
!10635 = !{!10631, !10636}
!10636 = !DILocalVariable(name: "result", scope: !10632, file: !6437, line: 478, type: !110)
!10637 = !DILocation(line: 0, scope: !10632, inlinedAt: !10638)
!10638 = distinct !DILocation(line: 499, column: 3, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10628, file: !10139, line: 499, column: 3)
!10640 = !DILocation(line: 480, column: 4, scope: !10632, inlinedAt: !10638)
!10641 = !{i64 2948987}
!10642 = !DILocation(line: 499, column: 3, scope: !10639)
!10643 = !DILocation(line: 0, scope: !10628)
!10644 = !DILocalVariable(name: "value", arg: 1, scope: !10645, file: !6437, line: 527, type: !110)
!10645 = distinct !DISubprogram(name: "__STREXW", scope: !6437, file: !6437, line: 527, type: !10646, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10648)
!10646 = !DISubroutineType(types: !10647)
!10647 = !{!110, !110, !1452}
!10648 = !{!10644, !10649, !10650}
!10649 = !DILocalVariable(name: "addr", arg: 2, scope: !10645, file: !6437, line: 527, type: !1452)
!10650 = !DILocalVariable(name: "result", scope: !10645, file: !6437, line: 529, type: !110)
!10651 = !DILocation(line: 0, scope: !10645, inlinedAt: !10652)
!10652 = distinct !DILocation(line: 499, column: 3, scope: !10628)
!10653 = !DILocation(line: 531, column: 4, scope: !10645, inlinedAt: !10652)
!10654 = !{i64 2950423}
!10655 = distinct !{!10655, !10630, !10630}
!10656 = !DILocation(line: 500, column: 1, scope: !10623)
!10657 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10139, file: !10139, line: 850, type: !10326, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10658)
!10658 = !{!10659, !10660, !10661, !10662}
!10659 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10657, file: !10139, line: 850, type: !1402)
!10660 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10657, file: !10139, line: 850, type: !110)
!10661 = !DILocalVariable(name: "Parity", arg: 3, scope: !10657, file: !10139, line: 850, type: !110)
!10662 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10657, file: !10139, line: 851, type: !110)
!10663 = !DILocation(line: 0, scope: !10657)
!10664 = !DILocation(line: 853, column: 3, scope: !10657)
!10665 = !DILocation(line: 854, column: 3, scope: !10657)
!10666 = !DILocation(line: 855, column: 1, scope: !10657)
!10667 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10139, file: !10139, line: 1337, type: !10202, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10668)
!10668 = !{!10669}
!10669 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10667, file: !10139, line: 1337, type: !1402)
!10670 = !DILocation(line: 0, scope: !10667)
!10671 = !DILocation(line: 1339, column: 3, scope: !10667)
!10672 = !DILocation(line: 1340, column: 1, scope: !10667)
!10673 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1512, file: !1512, line: 316, type: !10674, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10676)
!10674 = !DISubroutineType(types: !10675)
!10675 = !{!109, !1509, !1515}
!10676 = !{!10677, !10678, !10679}
!10677 = !DILocalVariable(name: "config", arg: 1, scope: !10673, file: !1512, line: 317, type: !1509)
!10678 = !DILocalVariable(name: "state", arg: 2, scope: !10673, file: !1512, line: 318, type: !1515)
!10679 = !DILocalVariable(name: "reg", scope: !10673, file: !1512, line: 320, type: !22)
!10680 = !DILocation(line: 0, scope: !10673)
!10681 = !DILocation(line: 329, column: 39, scope: !10673)
!10682 = !DILocation(line: 329, column: 52, scope: !10673)
!10683 = !DILocation(line: 329, column: 9, scope: !10673)
!10684 = !DILocation(line: 329, column: 2, scope: !10673)
!10685 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10585, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1317, retainedNodes: !10686)
!10686 = !{!10687}
!10687 = !DILocalVariable(name: "dev", arg: 1, scope: !10685, file: !336, line: 730, type: !1361)
!10688 = !DILocation(line: 0, scope: !10685)
!10689 = !DILocation(line: 732, column: 9, scope: !10685)
!10690 = !DILocation(line: 732, column: 2, scope: !10685)
!10691 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1659, file: !1659, line: 270, type: !1665, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10692)
!10692 = !{!10693}
!10693 = !DILocalVariable(name: "dev", arg: 1, scope: !10691, file: !1659, line: 270, type: !1667)
!10694 = !DILocation(line: 0, scope: !10691)
!10695 = !DILocation(line: 274, column: 2, scope: !10691)
!10696 = !DILocation(line: 275, column: 12, scope: !10691)
!10697 = !DILocation(line: 276, column: 15, scope: !10691)
!10698 = !DILocation(line: 277, column: 16, scope: !10691)
!10699 = !DILocation(line: 278, column: 15, scope: !10691)
!10700 = !DILocation(line: 279, column: 16, scope: !10691)
!10701 = !DILocation(line: 282, column: 2, scope: !10691)
!10702 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6477, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10703)
!10703 = !{!10704, !10705}
!10704 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10702, file: !535, line: 1814, type: !770)
!10705 = !DILocalVariable(name: "priority", arg: 2, scope: !10702, file: !535, line: 1814, type: !110)
!10706 = !DILocation(line: 0, scope: !10702)
!10707 = !DILocation(line: 1822, column: 46, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10709, file: !535, line: 1821, column: 3)
!10709 = distinct !DILexicalBlock(scope: !10702, file: !535, line: 1816, column: 7)
!10710 = !DILocation(line: 1824, column: 1, scope: !10702)
!10711 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1659, file: !1659, line: 118, type: !6374, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10712)
!10712 = !{!10713, !10714}
!10713 = !DILocalVariable(name: "arg", arg: 1, scope: !10711, file: !1659, line: 118, type: !107)
!10714 = !DILocalVariable(name: "dticks", scope: !10711, file: !1659, line: 121, type: !110)
!10715 = !DILocation(line: 0, scope: !10711)
!10716 = !DILocation(line: 124, column: 2, scope: !10711)
!10717 = !DILocation(line: 129, column: 17, scope: !10711)
!10718 = !DILocation(line: 129, column: 14, scope: !10711)
!10719 = !DILocation(line: 130, column: 15, scope: !10711)
!10720 = !DILocation(line: 145, column: 27, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10722, file: !1659, line: 132, column: 16)
!10722 = distinct !DILexicalBlock(scope: !10711, file: !1659, line: 132, column: 6)
!10723 = !DILocation(line: 145, column: 25, scope: !10721)
!10724 = !DILocation(line: 145, column: 45, scope: !10721)
!10725 = !DILocation(line: 146, column: 30, scope: !10721)
!10726 = !DILocation(line: 146, column: 20, scope: !10721)
!10727 = !DILocation(line: 147, column: 3, scope: !10721)
!10728 = !DILocation(line: 151, column: 2, scope: !10711)
!10729 = !DILocation(line: 152, column: 1, scope: !10711)
!10730 = distinct !DISubprogram(name: "elapsed", scope: !1659, file: !1659, line: 85, type: !6524, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10731)
!10731 = !{!10732, !10733, !10734}
!10732 = !DILocalVariable(name: "val1", scope: !10730, file: !1659, line: 87, type: !110)
!10733 = !DILocalVariable(name: "ctrl", scope: !10730, file: !1659, line: 88, type: !110)
!10734 = !DILocalVariable(name: "val2", scope: !10730, file: !1659, line: 89, type: !110)
!10735 = !DILocation(line: 87, column: 27, scope: !10730)
!10736 = !DILocation(line: 0, scope: !10730)
!10737 = !DILocation(line: 88, column: 27, scope: !10730)
!10738 = !DILocation(line: 89, column: 27, scope: !10730)
!10739 = !DILocation(line: 105, column: 12, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10730, file: !1659, line: 105, column: 6)
!10741 = !DILocation(line: 106, column: 6, scope: !10740)
!10742 = !DILocation(line: 107, column: 16, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10740, file: !1659, line: 106, column: 24)
!10744 = !DILocation(line: 111, column: 18, scope: !10743)
!10745 = !DILocation(line: 112, column: 2, scope: !10743)
!10746 = !DILocation(line: 114, column: 20, scope: !10730)
!10747 = !DILocation(line: 114, column: 30, scope: !10730)
!10748 = !DILocation(line: 114, column: 28, scope: !10730)
!10749 = !DILocation(line: 114, column: 2, scope: !10730)
!10750 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1659, file: !1659, line: 154, type: !10751, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10753)
!10751 = !DISubroutineType(types: !10752)
!10752 = !{null, !744, !347}
!10753 = !{!10754, !10755, !10756, !10757, !10758, !10759, !10760, !10765, !10766}
!10754 = !DILocalVariable(name: "ticks", arg: 1, scope: !10750, file: !1659, line: 154, type: !744)
!10755 = !DILocalVariable(name: "idle", arg: 2, scope: !10750, file: !1659, line: 154, type: !347)
!10756 = !DILocalVariable(name: "delay", scope: !10750, file: !1659, line: 169, type: !110)
!10757 = !DILocalVariable(name: "val1", scope: !10750, file: !1659, line: 170, type: !110)
!10758 = !DILocalVariable(name: "val2", scope: !10750, file: !1659, line: 170, type: !110)
!10759 = !DILocalVariable(name: "last_load_", scope: !10750, file: !1659, line: 171, type: !110)
!10760 = !DILocalVariable(name: "key", scope: !10750, file: !1659, line: 176, type: !10761)
!10761 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !10762)
!10762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !10763)
!10763 = !{!10764}
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10762, file: !253, line: 33, baseType: !109, size: 32)
!10765 = !DILocalVariable(name: "pending", scope: !10750, file: !1659, line: 178, type: !110)
!10766 = !DILocalVariable(name: "unannounced", scope: !10750, file: !1659, line: 185, type: !110)
!10767 = !DILocation(line: 0, scope: !10750)
!10768 = !DILocation(line: 162, column: 49, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10750, file: !1659, line: 162, column: 6)
!10770 = !DILocation(line: 163, column: 17, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10769, file: !1659, line: 162, column: 78)
!10772 = !DILocation(line: 164, column: 13, scope: !10771)
!10773 = !DILocation(line: 165, column: 3, scope: !10771)
!10774 = !DILocation(line: 171, column: 24, scope: !10750)
!10775 = !DILocation(line: 173, column: 10, scope: !10750)
!10776 = !DILocation(line: 174, column: 10, scope: !10750)
!10777 = !DILocalVariable(name: "l", arg: 1, scope: !10778, file: !253, line: 136, type: !10781)
!10778 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !10779, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10782)
!10779 = !DISubroutineType(types: !10780)
!10780 = !{!10761, !10781}
!10781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!10782 = !{!10777, !10783}
!10783 = !DILocalVariable(name: "k", scope: !10778, file: !253, line: 139, type: !10761)
!10784 = !DILocation(line: 0, scope: !10778, inlinedAt: !10785)
!10785 = distinct !DILocation(line: 176, column: 25, scope: !10750)
!10786 = !DILocation(line: 55, column: 2, scope: !10787, inlinedAt: !10791)
!10787 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6116, file: !6116, line: 42, type: !6117, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10788)
!10788 = !{!10789, !10790}
!10789 = !DILocalVariable(name: "key", scope: !10787, file: !6116, line: 44, type: !32)
!10790 = !DILocalVariable(name: "tmp", scope: !10787, file: !6116, line: 53, type: !32)
!10791 = distinct !DILocation(line: 145, column: 10, scope: !10778, inlinedAt: !10785)
!10792 = !{i64 2031630}
!10793 = !DILocation(line: 0, scope: !10787, inlinedAt: !10791)
!10794 = !DILocation(line: 148, column: 2, scope: !10795, inlinedAt: !10785)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !253, line: 148, column: 2)
!10796 = distinct !DILexicalBlock(scope: !10778, file: !253, line: 148, column: 2)
!10797 = !DILocation(line: 148, column: 2, scope: !10796, inlinedAt: !10785)
!10798 = !DILocation(line: 148, column: 2, scope: !10799, inlinedAt: !10785)
!10799 = distinct !DILexicalBlock(scope: !10795, file: !253, line: 148, column: 2)
!10800 = !DILocation(line: 160, column: 2, scope: !10778, inlinedAt: !10785)
!10801 = !DILocation(line: 178, column: 21, scope: !10750)
!10802 = !DILocation(line: 180, column: 18, scope: !10750)
!10803 = !DILocation(line: 182, column: 14, scope: !10750)
!10804 = !DILocation(line: 183, column: 15, scope: !10750)
!10805 = !DILocation(line: 185, column: 39, scope: !10750)
!10806 = !DILocation(line: 185, column: 37, scope: !10750)
!10807 = !DILocation(line: 187, column: 27, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10750, file: !1659, line: 187, column: 6)
!10809 = !DILocation(line: 187, column: 6, scope: !10750)
!10810 = !DILocation(line: 202, column: 27, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10808, file: !1659, line: 195, column: 9)
!10812 = !DILocation(line: 202, column: 48, scope: !10811)
!10813 = !DILocation(line: 203, column: 9, scope: !10811)
!10814 = !DILocation(line: 204, column: 11, scope: !10811)
!10815 = !DILocation(line: 205, column: 13, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10811, file: !1659, line: 205, column: 7)
!10817 = !DILocation(line: 205, column: 7, scope: !10811)
!10818 = !DILocation(line: 0, scope: !10808)
!10819 = !DILocation(line: 212, column: 18, scope: !10750)
!10820 = !DILocation(line: 214, column: 28, scope: !10750)
!10821 = !DILocation(line: 214, column: 16, scope: !10750)
!10822 = !DILocation(line: 215, column: 15, scope: !10750)
!10823 = !DILocation(line: 227, column: 11, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10750, file: !1659, line: 227, column: 6)
!10825 = !DILocation(line: 227, column: 6, scope: !10750)
!10826 = !DILocation(line: 228, column: 15, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10824, file: !1659, line: 227, column: 19)
!10828 = !DILocation(line: 228, column: 38, scope: !10827)
!10829 = !DILocation(line: 228, column: 24, scope: !10827)
!10830 = !DILocation(line: 229, column: 2, scope: !10827)
!10831 = !DILocation(line: 230, column: 24, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10824, file: !1659, line: 229, column: 9)
!10833 = !DILocation(line: 230, column: 15, scope: !10832)
!10834 = !DILocation(line: 0, scope: !10824)
!10835 = !DILocalVariable(name: "key", arg: 2, scope: !10836, file: !253, line: 190, type: !10761)
!10836 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !10837, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10839)
!10837 = !DISubroutineType(types: !10838)
!10838 = !{null, !10781, !10761}
!10839 = !{!10840, !10835}
!10840 = !DILocalVariable(name: "l", arg: 1, scope: !10836, file: !253, line: 189, type: !10781)
!10841 = !DILocation(line: 0, scope: !10836, inlinedAt: !10842)
!10842 = distinct !DILocation(line: 232, column: 2, scope: !10750)
!10843 = !DILocation(line: 194, column: 2, scope: !10844, inlinedAt: !10842)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !253, line: 194, column: 2)
!10845 = distinct !DILexicalBlock(scope: !10836, file: !253, line: 194, column: 2)
!10846 = !DILocation(line: 194, column: 2, scope: !10845, inlinedAt: !10842)
!10847 = !DILocation(line: 194, column: 2, scope: !10848, inlinedAt: !10842)
!10848 = distinct !DILexicalBlock(scope: !10844, file: !253, line: 194, column: 2)
!10849 = !DILocalVariable(name: "key", arg: 1, scope: !10850, file: !6116, line: 84, type: !32)
!10850 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6116, file: !6116, line: 84, type: !6127, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10851)
!10851 = !{!10849}
!10852 = !DILocation(line: 0, scope: !10850, inlinedAt: !10853)
!10853 = distinct !DILocation(line: 215, column: 2, scope: !10836, inlinedAt: !10842)
!10854 = !DILocation(line: 95, column: 2, scope: !10850, inlinedAt: !10853)
!10855 = !{i64 2032447}
!10856 = !DILocation(line: 234, column: 1, scope: !10750)
!10857 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1659, file: !1659, line: 236, type: !6524, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10858)
!10858 = !{!10859, !10860}
!10859 = !DILocalVariable(name: "key", scope: !10857, file: !1659, line: 242, type: !10761)
!10860 = !DILocalVariable(name: "cyc", scope: !10857, file: !1659, line: 243, type: !110)
!10861 = !DILocation(line: 0, scope: !10778, inlinedAt: !10862)
!10862 = distinct !DILocation(line: 242, column: 25, scope: !10857)
!10863 = !DILocation(line: 55, column: 2, scope: !10787, inlinedAt: !10864)
!10864 = distinct !DILocation(line: 145, column: 10, scope: !10778, inlinedAt: !10862)
!10865 = !DILocation(line: 0, scope: !10787, inlinedAt: !10864)
!10866 = !DILocation(line: 148, column: 2, scope: !10795, inlinedAt: !10862)
!10867 = !DILocation(line: 148, column: 2, scope: !10796, inlinedAt: !10862)
!10868 = !DILocation(line: 148, column: 2, scope: !10799, inlinedAt: !10862)
!10869 = !DILocation(line: 160, column: 2, scope: !10778, inlinedAt: !10862)
!10870 = !DILocation(line: 0, scope: !10857)
!10871 = !DILocation(line: 243, column: 17, scope: !10857)
!10872 = !DILocation(line: 243, column: 29, scope: !10857)
!10873 = !DILocation(line: 243, column: 43, scope: !10857)
!10874 = !DILocation(line: 0, scope: !10836, inlinedAt: !10875)
!10875 = distinct !DILocation(line: 245, column: 2, scope: !10857)
!10876 = !DILocation(line: 194, column: 2, scope: !10844, inlinedAt: !10875)
!10877 = !DILocation(line: 194, column: 2, scope: !10845, inlinedAt: !10875)
!10878 = !DILocation(line: 194, column: 2, scope: !10848, inlinedAt: !10875)
!10879 = !DILocation(line: 243, column: 27, scope: !10857)
!10880 = !DILocation(line: 243, column: 41, scope: !10857)
!10881 = !DILocation(line: 0, scope: !10850, inlinedAt: !10882)
!10882 = distinct !DILocation(line: 215, column: 2, scope: !10836, inlinedAt: !10875)
!10883 = !DILocation(line: 95, column: 2, scope: !10850, inlinedAt: !10882)
!10884 = !DILocation(line: 246, column: 13, scope: !10857)
!10885 = !DILocation(line: 246, column: 2, scope: !10857)
!10886 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1659, file: !1659, line: 249, type: !6524, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !10887)
!10887 = !{!10888, !10889}
!10888 = !DILocalVariable(name: "key", scope: !10886, file: !1659, line: 251, type: !10761)
!10889 = !DILocalVariable(name: "ret", scope: !10886, file: !1659, line: 252, type: !110)
!10890 = !DILocation(line: 0, scope: !10778, inlinedAt: !10891)
!10891 = distinct !DILocation(line: 251, column: 25, scope: !10886)
!10892 = !DILocation(line: 55, column: 2, scope: !10787, inlinedAt: !10893)
!10893 = distinct !DILocation(line: 145, column: 10, scope: !10778, inlinedAt: !10891)
!10894 = !DILocation(line: 0, scope: !10787, inlinedAt: !10893)
!10895 = !DILocation(line: 148, column: 2, scope: !10795, inlinedAt: !10891)
!10896 = !DILocation(line: 148, column: 2, scope: !10796, inlinedAt: !10891)
!10897 = !DILocation(line: 148, column: 2, scope: !10799, inlinedAt: !10891)
!10898 = !DILocation(line: 160, column: 2, scope: !10778, inlinedAt: !10891)
!10899 = !DILocation(line: 0, scope: !10886)
!10900 = !DILocation(line: 252, column: 17, scope: !10886)
!10901 = !DILocation(line: 252, column: 29, scope: !10886)
!10902 = !DILocation(line: 0, scope: !10836, inlinedAt: !10903)
!10903 = distinct !DILocation(line: 254, column: 2, scope: !10886)
!10904 = !DILocation(line: 194, column: 2, scope: !10844, inlinedAt: !10903)
!10905 = !DILocation(line: 194, column: 2, scope: !10845, inlinedAt: !10903)
!10906 = !DILocation(line: 194, column: 2, scope: !10848, inlinedAt: !10903)
!10907 = !DILocation(line: 252, column: 27, scope: !10886)
!10908 = !DILocation(line: 0, scope: !10850, inlinedAt: !10909)
!10909 = distinct !DILocation(line: 215, column: 2, scope: !10836, inlinedAt: !10903)
!10910 = !DILocation(line: 95, column: 2, scope: !10850, inlinedAt: !10909)
!10911 = !DILocation(line: 255, column: 2, scope: !10886)
!10912 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1659, file: !1659, line: 258, type: !3116, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !2050)
!10913 = !DILocation(line: 260, column: 6, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10912, file: !1659, line: 260, column: 6)
!10915 = !DILocation(line: 260, column: 16, scope: !10914)
!10916 = !DILocation(line: 260, column: 6, scope: !10912)
!10917 = !DILocation(line: 261, column: 17, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10914, file: !1659, line: 260, column: 34)
!10919 = !DILocation(line: 262, column: 2, scope: !10918)
!10920 = !DILocation(line: 263, column: 1, scope: !10912)
!10921 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1659, file: !1659, line: 265, type: !3116, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !2050)
!10922 = !DILocation(line: 267, column: 16, scope: !10921)
!10923 = !DILocation(line: 268, column: 1, scope: !10921)
!10924 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10925, file: !10925, line: 9, type: !10926, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !10949)
!10925 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10926 = !DISubroutineType(types: !10927)
!10927 = !{!109, !10928, !180, !10948}
!10928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10929, size: 32)
!10929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10930)
!10930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1512, line: 60, size: 64, elements: !10931)
!10931 = !{!10932, !10947}
!10932 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10930, file: !1512, line: 69, baseType: !10933, size: 32)
!10933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10934, size: 32)
!10934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10935)
!10935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1512, line: 50, size: 64, elements: !10936)
!10936 = !{!10937, !10945, !10946}
!10937 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10935, file: !1512, line: 52, baseType: !10938, size: 32)
!10938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10939, size: 32)
!10939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10940)
!10940 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1523, line: 37, baseType: !10941)
!10941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1523, line: 32, size: 64, elements: !10942)
!10942 = !{!10943, !10944}
!10943 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10941, file: !1523, line: 34, baseType: !110, size: 32)
!10944 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10941, file: !1523, line: 36, baseType: !110, size: 32, offset: 32)
!10945 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10935, file: !1512, line: 54, baseType: !180, size: 8, offset: 32)
!10946 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10935, file: !1512, line: 56, baseType: !180, size: 8, offset: 40)
!10947 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10930, file: !1512, line: 71, baseType: !180, size: 8, offset: 32)
!10948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10933, size: 32)
!10949 = !{!10950, !10951, !10952}
!10950 = !DILocalVariable(name: "config", arg: 1, scope: !10924, file: !10925, line: 9, type: !10928)
!10951 = !DILocalVariable(name: "id", arg: 2, scope: !10924, file: !10925, line: 9, type: !180)
!10952 = !DILocalVariable(name: "state", arg: 3, scope: !10924, file: !10925, line: 10, type: !10948)
!10953 = !DILocation(line: 0, scope: !10924)
!10954 = !DILocation(line: 12, column: 20, scope: !10924)
!10955 = !DILocation(line: 13, column: 27, scope: !10924)
!10956 = !DILocation(line: 13, column: 42, scope: !10924)
!10957 = !DILocation(line: 13, column: 19, scope: !10924)
!10958 = !DILocation(line: 13, column: 16, scope: !10924)
!10959 = !DILocation(line: 13, column: 2, scope: !10924)
!10960 = distinct !{!10960, !10959, !10961}
!10961 = !DILocation(line: 19, column: 2, scope: !10924)
!10962 = !DILocation(line: 14, column: 23, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !10925, line: 14, column: 7)
!10964 = distinct !DILexicalBlock(scope: !10924, file: !10925, line: 13, column: 54)
!10965 = !DILocation(line: 14, column: 10, scope: !10963)
!10966 = !DILocation(line: 18, column: 11, scope: !10964)
!10967 = !DILocation(line: 14, column: 7, scope: !10964)
!10968 = !DILocation(line: 22, column: 1, scope: !10924)
!10969 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1778, file: !1778, line: 193, type: !10970, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !10979)
!10970 = !DISubroutineType(types: !10971)
!10971 = !{!109, !10972, !180, !22}
!10972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10973, size: 32)
!10973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10974)
!10974 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1523, line: 37, baseType: !10975)
!10975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1523, line: 32, size: 64, elements: !10976)
!10976 = !{!10977, !10978}
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10975, file: !1523, line: 34, baseType: !110, size: 32)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10975, file: !1523, line: 36, baseType: !110, size: 32, offset: 32)
!10979 = !{!10980, !10981, !10982, !10983, !10984, !10985, !10986, !10987, !10989}
!10980 = !DILocalVariable(name: "pins", arg: 1, scope: !10969, file: !1778, line: 193, type: !10972)
!10981 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10969, file: !1778, line: 193, type: !180)
!10982 = !DILocalVariable(name: "reg", arg: 3, scope: !10969, file: !1778, line: 194, type: !22)
!10983 = !DILocalVariable(name: "pin", scope: !10969, file: !1778, line: 196, type: !110)
!10984 = !DILocalVariable(name: "mux", scope: !10969, file: !1778, line: 196, type: !110)
!10985 = !DILocalVariable(name: "pin_cgf", scope: !10969, file: !1778, line: 197, type: !110)
!10986 = !DILocalVariable(name: "ret", scope: !10969, file: !1778, line: 198, type: !109)
!10987 = !DILocalVariable(name: "i", scope: !10988, file: !1778, line: 209, type: !180)
!10988 = distinct !DILexicalBlock(scope: !10969, file: !1778, line: 209, column: 2)
!10989 = !DILocalVariable(name: "gpio_out", scope: !10990, file: !1778, line: 239, type: !110)
!10990 = distinct !DILexicalBlock(scope: !10991, file: !1778, line: 238, column: 55)
!10991 = distinct !DILexicalBlock(scope: !10992, file: !1778, line: 238, column: 14)
!10992 = distinct !DILexicalBlock(scope: !10993, file: !1778, line: 236, column: 14)
!10993 = distinct !DILexicalBlock(scope: !10994, file: !1778, line: 234, column: 7)
!10994 = distinct !DILexicalBlock(scope: !10995, file: !1778, line: 209, column: 41)
!10995 = distinct !DILexicalBlock(scope: !10988, file: !1778, line: 209, column: 2)
!10996 = !DILocation(line: 0, scope: !10969)
!10997 = !DILocation(line: 0, scope: !10988)
!10998 = !DILocation(line: 209, column: 25, scope: !10995)
!10999 = !DILocation(line: 209, column: 2, scope: !10988)
!11000 = distinct !{!11000, !10999, !11001}
!11001 = !DILocation(line: 259, column: 2, scope: !10988)
!11002 = !DILocation(line: 210, column: 17, scope: !10994)
!11003 = !DILocation(line: 234, column: 7, scope: !10993)
!11004 = !DILocation(line: 234, column: 33, scope: !10993)
!11005 = !DILocation(line: 234, column: 7, scope: !10994)
!11006 = !DILocation(line: 235, column: 22, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10993, file: !1778, line: 234, column: 49)
!11008 = !DILocation(line: 235, column: 29, scope: !11007)
!11009 = !DILocation(line: 236, column: 3, scope: !11007)
!11010 = !DILocation(line: 236, column: 14, scope: !10993)
!11011 = !DILocation(line: 239, column: 32, scope: !10990)
!11012 = !DILocation(line: 0, scope: !10990)
!11013 = !DILocation(line: 241, column: 8, scope: !10990)
!11014 = !DILocation(line: 246, column: 3, scope: !10990)
!11015 = !DILocation(line: 252, column: 9, scope: !10994)
!11016 = !DILocation(line: 255, column: 9, scope: !10994)
!11017 = !DILocation(line: 256, column: 11, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !10994, file: !1778, line: 256, column: 7)
!11019 = !DILocation(line: 209, column: 37, scope: !10995)
!11020 = !DILocation(line: 256, column: 7, scope: !10994)
!11021 = !DILocation(line: 262, column: 1, scope: !10969)
!11022 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1778, file: !1778, line: 176, type: !11023, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11025)
!11023 = !DISubroutineType(types: !11024)
!11024 = !{!109, !110, !110, !110}
!11025 = !{!11026, !11027, !11028, !11029}
!11026 = !DILocalVariable(name: "pin", arg: 1, scope: !11022, file: !1778, line: 176, type: !110)
!11027 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11022, file: !1778, line: 176, type: !110)
!11028 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11022, file: !1778, line: 176, type: !110)
!11029 = !DILocalVariable(name: "port_device", scope: !11022, file: !1778, line: 178, type: !1708)
!11030 = !DILocation(line: 0, scope: !11022)
!11031 = !DILocation(line: 180, column: 22, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11022, file: !1778, line: 180, column: 6)
!11033 = !DILocation(line: 180, column: 6, scope: !11022)
!11034 = !DILocation(line: 180, column: 6, scope: !11032)
!11035 = !DILocation(line: 184, column: 16, scope: !11022)
!11036 = !DILocation(line: 186, column: 19, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11022, file: !1778, line: 186, column: 6)
!11038 = !DILocation(line: 186, column: 28, scope: !11037)
!11039 = !DILocation(line: 186, column: 33, scope: !11037)
!11040 = !DILocation(line: 186, column: 6, scope: !11022)
!11041 = !DILocation(line: 190, column: 43, scope: !11022)
!11042 = !DILocation(line: 190, column: 9, scope: !11022)
!11043 = !DILocation(line: 190, column: 2, scope: !11022)
!11044 = !DILocation(line: 191, column: 1, scope: !11022)
!11045 = distinct !DISubprogram(name: "device_is_ready", scope: !8949, file: !8949, line: 47, type: !11046, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11048)
!11046 = !DISubroutineType(types: !11047)
!11047 = !{!347, !1708}
!11048 = !{!11049}
!11049 = !DILocalVariable(name: "dev", arg: 1, scope: !11045, file: !8949, line: 47, type: !1708)
!11050 = !DILocation(line: 0, scope: !11045)
!11051 = !DILocation(line: 55, column: 2, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11045, file: !8949, line: 55, column: 2)
!11053 = !{i64 2149265639}
!11054 = !DILocation(line: 56, column: 9, scope: !11045)
!11055 = !DILocation(line: 56, column: 2, scope: !11045)
!11056 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !11046, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11057)
!11057 = !{!11058}
!11058 = !DILocalVariable(name: "dev", arg: 1, scope: !11056, file: !336, line: 730, type: !1708)
!11059 = !DILocation(line: 0, scope: !11056)
!11060 = !DILocation(line: 732, column: 9, scope: !11056)
!11061 = !DILocation(line: 732, column: 2, scope: !11056)
!11062 = distinct !DISubprogram(name: "SystemInit", scope: !1828, file: !1828, line: 167, type: !3116, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !2050)
!11063 = !DILocation(line: 182, column: 1, scope: !11062)
!11064 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1828, file: !1828, line: 220, type: !3116, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11065)
!11065 = !{!11066, !11067, !11068, !11069, !11070}
!11066 = !DILocalVariable(name: "tmp", scope: !11064, file: !1828, line: 222, type: !110)
!11067 = !DILocalVariable(name: "pllvco", scope: !11064, file: !1828, line: 222, type: !110)
!11068 = !DILocalVariable(name: "pllp", scope: !11064, file: !1828, line: 222, type: !110)
!11069 = !DILocalVariable(name: "pllsource", scope: !11064, file: !1828, line: 222, type: !110)
!11070 = !DILocalVariable(name: "pllm", scope: !11064, file: !1828, line: 222, type: !110)
!11071 = !DILocation(line: 0, scope: !11064)
!11072 = !DILocation(line: 225, column: 14, scope: !11064)
!11073 = !DILocation(line: 225, column: 19, scope: !11064)
!11074 = !DILocation(line: 227, column: 3, scope: !11064)
!11075 = !DILocation(line: 240, column: 25, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11064, file: !1828, line: 228, column: 3)
!11077 = !DILocation(line: 241, column: 19, scope: !11076)
!11078 = !DILocation(line: 241, column: 27, scope: !11076)
!11079 = !DILocation(line: 0, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11076, file: !1828, line: 243, column: 11)
!11081 = !DILocation(line: 254, column: 22, scope: !11076)
!11082 = !DILocation(line: 254, column: 62, scope: !11076)
!11083 = !DILocation(line: 255, column: 31, scope: !11076)
!11084 = !DILocation(line: 256, column: 7, scope: !11076)
!11085 = !DILocation(line: 0, scope: !11076)
!11086 = !DILocation(line: 263, column: 30, scope: !11064)
!11087 = !DILocation(line: 263, column: 52, scope: !11064)
!11088 = !DILocation(line: 263, column: 9, scope: !11064)
!11089 = !DILocation(line: 265, column: 19, scope: !11064)
!11090 = !DILocation(line: 266, column: 1, scope: !11064)
!11091 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11092, file: !11092, line: 200, type: !11093, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2050)
!11092 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11093 = !DISubroutineType(types: !11094)
!11094 = !{!11095}
!11095 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2929, line: 44, baseType: !2928)
!11096 = !DILocation(line: 202, column: 3, scope: !11091)
!11097 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11092, file: !11092, line: 219, type: !11098, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !11122)
!11098 = !DISubroutineType(types: !11099)
!11099 = !{!11095, !11100}
!11100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11101, size: 32)
!11101 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11102, line: 70, baseType: !11103)
!11102 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11102, line: 49, size: 384, elements: !11104)
!11104 = !{!11105, !11106, !11107, !11108, !11109, !11110, !11111}
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11103, file: !11102, line: 51, baseType: !110, size: 32)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11103, file: !11102, line: 54, baseType: !110, size: 32, offset: 32)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11103, file: !11102, line: 57, baseType: !110, size: 32, offset: 64)
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11103, file: !11102, line: 60, baseType: !110, size: 32, offset: 96)
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11103, file: !11102, line: 63, baseType: !110, size: 32, offset: 128)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11103, file: !11102, line: 66, baseType: !110, size: 32, offset: 160)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11103, file: !11102, line: 69, baseType: !11112, size: 192, offset: 192)
!11112 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11113, line: 73, baseType: !11114)
!11113 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11113, line: 45, size: 192, elements: !11115)
!11115 = !{!11116, !11117, !11118, !11119, !11120, !11121}
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11114, file: !11113, line: 47, baseType: !110, size: 32)
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11114, file: !11113, line: 50, baseType: !110, size: 32, offset: 32)
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11114, file: !11113, line: 53, baseType: !110, size: 32, offset: 64)
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11114, file: !11113, line: 56, baseType: !110, size: 32, offset: 96)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11114, file: !11113, line: 60, baseType: !110, size: 32, offset: 128)
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11114, file: !11113, line: 63, baseType: !110, size: 32, offset: 160)
!11122 = !{!11123, !11124, !11125, !11126, !11130}
!11123 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11097, file: !11092, line: 219, type: !11100)
!11124 = !DILocalVariable(name: "tickstart", scope: !11097, file: !11092, line: 221, type: !110)
!11125 = !DILocalVariable(name: "pll_config", scope: !11097, file: !11092, line: 221, type: !110)
!11126 = !DILocalVariable(name: "pwrclkchanged", scope: !11127, file: !11092, line: 391, type: !11129)
!11127 = distinct !DILexicalBlock(scope: !11128, file: !11092, line: 390, column: 3)
!11128 = distinct !DILexicalBlock(scope: !11097, file: !11092, line: 389, column: 6)
!11129 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !811, line: 188, baseType: !2935)
!11130 = !DILocalVariable(name: "tmpreg", scope: !11131, file: !11092, line: 400, type: !316)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !11092, line: 400, column: 7)
!11132 = distinct !DILexicalBlock(scope: !11133, file: !11092, line: 399, column: 5)
!11133 = distinct !DILexicalBlock(scope: !11127, file: !11092, line: 398, column: 8)
!11134 = !DILocation(line: 0, scope: !11097)
!11135 = !DILocation(line: 224, column: 24, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11097, file: !11092, line: 224, column: 6)
!11137 = !DILocation(line: 224, column: 6, scope: !11097)
!11138 = !DILocation(line: 232, column: 27, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11097, file: !11092, line: 232, column: 6)
!11140 = !DILocation(line: 232, column: 43, scope: !11139)
!11141 = !DILocation(line: 232, column: 69, scope: !11139)
!11142 = !DILocation(line: 232, column: 6, scope: !11097)
!11143 = !DILocation(line: 237, column: 9, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11145, file: !11092, line: 237, column: 8)
!11145 = distinct !DILexicalBlock(scope: !11139, file: !11092, line: 233, column: 3)
!11146 = !DILocation(line: 237, column: 39, scope: !11144)
!11147 = !DILocation(line: 237, column: 60, scope: !11144)
!11148 = !DILocation(line: 238, column: 9, scope: !11144)
!11149 = !DILocation(line: 238, column: 39, scope: !11144)
!11150 = !DILocation(line: 238, column: 60, scope: !11144)
!11151 = !DILocation(line: 238, column: 70, scope: !11144)
!11152 = !DILocation(line: 238, column: 78, scope: !11144)
!11153 = !DILocation(line: 238, column: 100, scope: !11144)
!11154 = !DILocation(line: 237, column: 8, scope: !11145)
!11155 = !DILocation(line: 240, column: 11, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11157, file: !11092, line: 240, column: 10)
!11157 = distinct !DILexicalBlock(scope: !11144, file: !11092, line: 239, column: 5)
!11158 = !DILocation(line: 240, column: 57, scope: !11156)
!11159 = !DILocation(line: 240, column: 80, scope: !11156)
!11160 = !DILocation(line: 240, column: 89, scope: !11156)
!11161 = !DILocation(line: 240, column: 10, scope: !11157)
!11162 = !DILocation(line: 248, column: 7, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !11092, line: 248, column: 7)
!11164 = distinct !DILexicalBlock(scope: !11165, file: !11092, line: 248, column: 7)
!11165 = distinct !DILexicalBlock(scope: !11144, file: !11092, line: 246, column: 5)
!11166 = !DILocation(line: 248, column: 7, scope: !11164)
!11167 = !DILocation(line: 248, column: 7, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11163, file: !11092, line: 248, column: 7)
!11169 = !DILocation(line: 248, column: 7, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11171, file: !11092, line: 248, column: 7)
!11171 = distinct !DILexicalBlock(scope: !11163, file: !11092, line: 248, column: 7)
!11172 = !DILocation(line: 248, column: 7, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11171, file: !11092, line: 248, column: 7)
!11174 = !DILocation(line: 0, scope: !11163)
!11175 = !DILocation(line: 251, column: 30, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11165, file: !11092, line: 251, column: 10)
!11177 = !DILocation(line: 251, column: 40, scope: !11176)
!11178 = !DILocation(line: 0, scope: !11176)
!11179 = !DILocation(line: 251, column: 10, scope: !11165)
!11180 = !DILocation(line: 257, column: 15, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11176, file: !11092, line: 252, column: 7)
!11182 = !DILocation(line: 257, column: 51, scope: !11181)
!11183 = !DILocation(line: 257, column: 9, scope: !11181)
!11184 = !DILocation(line: 259, column: 15, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11186, file: !11092, line: 259, column: 14)
!11186 = distinct !DILexicalBlock(scope: !11181, file: !11092, line: 258, column: 9)
!11187 = !DILocation(line: 259, column: 29, scope: !11185)
!11188 = !DILocation(line: 259, column: 43, scope: !11185)
!11189 = !DILocation(line: 259, column: 14, scope: !11186)
!11190 = distinct !{!11190, !11183, !11191}
!11191 = !DILocation(line: 263, column: 9, scope: !11181)
!11192 = !DILocation(line: 271, column: 15, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11176, file: !11092, line: 266, column: 7)
!11194 = !DILocation(line: 271, column: 9, scope: !11193)
!11195 = !DILocation(line: 273, column: 15, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11197, file: !11092, line: 273, column: 14)
!11197 = distinct !DILexicalBlock(scope: !11193, file: !11092, line: 272, column: 9)
!11198 = !DILocation(line: 273, column: 29, scope: !11196)
!11199 = !DILocation(line: 273, column: 43, scope: !11196)
!11200 = !DILocation(line: 273, column: 14, scope: !11197)
!11201 = distinct !{!11201, !11194, !11202}
!11202 = !DILocation(line: 277, column: 9, scope: !11193)
!11203 = !DILocation(line: 282, column: 27, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11097, file: !11092, line: 282, column: 6)
!11205 = !DILocation(line: 282, column: 43, scope: !11204)
!11206 = !DILocation(line: 282, column: 69, scope: !11204)
!11207 = !DILocation(line: 282, column: 6, scope: !11097)
!11208 = !DILocation(line: 289, column: 9, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11210, file: !11092, line: 289, column: 8)
!11210 = distinct !DILexicalBlock(scope: !11204, file: !11092, line: 283, column: 3)
!11211 = !DILocation(line: 289, column: 39, scope: !11209)
!11212 = !DILocation(line: 289, column: 60, scope: !11209)
!11213 = !DILocation(line: 290, column: 9, scope: !11209)
!11214 = !DILocation(line: 290, column: 39, scope: !11209)
!11215 = !DILocation(line: 290, column: 60, scope: !11209)
!11216 = !DILocation(line: 290, column: 70, scope: !11209)
!11217 = !DILocation(line: 290, column: 78, scope: !11209)
!11218 = !DILocation(line: 290, column: 100, scope: !11209)
!11219 = !DILocation(line: 289, column: 8, scope: !11210)
!11220 = !DILocation(line: 293, column: 11, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11222, file: !11092, line: 293, column: 10)
!11222 = distinct !DILexicalBlock(scope: !11209, file: !11092, line: 291, column: 5)
!11223 = !DILocation(line: 293, column: 57, scope: !11221)
!11224 = !DILocation(line: 293, column: 80, scope: !11221)
!11225 = !DILocation(line: 293, column: 89, scope: !11221)
!11226 = !DILocation(line: 293, column: 10, scope: !11222)
!11227 = !DILocation(line: 307, column: 30, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11229, file: !11092, line: 307, column: 10)
!11229 = distinct !DILexicalBlock(scope: !11209, file: !11092, line: 305, column: 5)
!11230 = !DILocation(line: 307, column: 39, scope: !11228)
!11231 = !DILocation(line: 307, column: 10, scope: !11229)
!11232 = !DILocation(line: 310, column: 9, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11228, file: !11092, line: 308, column: 7)
!11234 = !DILocation(line: 313, column: 21, scope: !11233)
!11235 = !DILocation(line: 316, column: 9, scope: !11233)
!11236 = !DILocation(line: 316, column: 15, scope: !11233)
!11237 = !DILocation(line: 316, column: 51, scope: !11233)
!11238 = !DILocation(line: 318, column: 15, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11240, file: !11092, line: 318, column: 14)
!11240 = distinct !DILexicalBlock(scope: !11233, file: !11092, line: 317, column: 9)
!11241 = !DILocation(line: 318, column: 29, scope: !11239)
!11242 = !DILocation(line: 318, column: 43, scope: !11239)
!11243 = !DILocation(line: 318, column: 14, scope: !11240)
!11244 = distinct !{!11244, !11235, !11245}
!11245 = !DILocation(line: 322, column: 9, scope: !11233)
!11246 = !DILocation(line: 330, column: 9, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11228, file: !11092, line: 328, column: 7)
!11248 = !DILocation(line: 333, column: 21, scope: !11247)
!11249 = !DILocation(line: 336, column: 9, scope: !11247)
!11250 = !DILocation(line: 336, column: 15, scope: !11247)
!11251 = !DILocation(line: 338, column: 15, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11253, file: !11092, line: 338, column: 14)
!11253 = distinct !DILexicalBlock(scope: !11247, file: !11092, line: 337, column: 9)
!11254 = !DILocation(line: 338, column: 29, scope: !11252)
!11255 = !DILocation(line: 338, column: 43, scope: !11252)
!11256 = !DILocation(line: 338, column: 14, scope: !11253)
!11257 = distinct !{!11257, !11249, !11258}
!11258 = !DILocation(line: 342, column: 9, scope: !11247)
!11259 = !DILocation(line: 0, scope: !11209)
!11260 = !DILocation(line: 347, column: 27, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11097, file: !11092, line: 347, column: 6)
!11262 = !DILocation(line: 347, column: 43, scope: !11261)
!11263 = !DILocation(line: 347, column: 69, scope: !11261)
!11264 = !DILocation(line: 347, column: 6, scope: !11097)
!11265 = !DILocation(line: 353, column: 28, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11267, file: !11092, line: 353, column: 8)
!11267 = distinct !DILexicalBlock(scope: !11261, file: !11092, line: 348, column: 3)
!11268 = !DILocation(line: 353, column: 37, scope: !11266)
!11269 = !DILocation(line: 353, column: 8, scope: !11267)
!11270 = !DILocation(line: 356, column: 7, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11266, file: !11092, line: 354, column: 5)
!11272 = !DILocation(line: 359, column: 19, scope: !11271)
!11273 = !DILocation(line: 362, column: 7, scope: !11271)
!11274 = !DILocation(line: 362, column: 13, scope: !11271)
!11275 = !DILocation(line: 362, column: 49, scope: !11271)
!11276 = !DILocation(line: 364, column: 13, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11278, file: !11092, line: 364, column: 12)
!11278 = distinct !DILexicalBlock(scope: !11271, file: !11092, line: 363, column: 7)
!11279 = !DILocation(line: 364, column: 27, scope: !11277)
!11280 = !DILocation(line: 364, column: 41, scope: !11277)
!11281 = !DILocation(line: 364, column: 12, scope: !11278)
!11282 = distinct !{!11282, !11273, !11283}
!11283 = !DILocation(line: 368, column: 7, scope: !11271)
!11284 = !DILocation(line: 373, column: 7, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11266, file: !11092, line: 371, column: 5)
!11286 = !DILocation(line: 376, column: 19, scope: !11285)
!11287 = !DILocation(line: 379, column: 7, scope: !11285)
!11288 = !DILocation(line: 379, column: 13, scope: !11285)
!11289 = !DILocation(line: 381, column: 13, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !11092, line: 381, column: 12)
!11291 = distinct !DILexicalBlock(scope: !11285, file: !11092, line: 380, column: 7)
!11292 = !DILocation(line: 381, column: 27, scope: !11290)
!11293 = !DILocation(line: 381, column: 41, scope: !11290)
!11294 = !DILocation(line: 381, column: 12, scope: !11291)
!11295 = distinct !{!11295, !11287, !11296}
!11296 = !DILocation(line: 385, column: 7, scope: !11285)
!11297 = !DILocation(line: 389, column: 27, scope: !11128)
!11298 = !DILocation(line: 389, column: 43, scope: !11128)
!11299 = !DILocation(line: 389, column: 69, scope: !11128)
!11300 = !DILocation(line: 389, column: 6, scope: !11097)
!11301 = !DILocation(line: 0, scope: !11127)
!11302 = !DILocation(line: 398, column: 8, scope: !11133)
!11303 = !DILocation(line: 398, column: 8, scope: !11127)
!11304 = !DILocation(line: 400, column: 7, scope: !11131)
!11305 = !DILocation(line: 400, column: 7, scope: !11132)
!11306 = !DILocation(line: 402, column: 5, scope: !11132)
!11307 = !DILocation(line: 404, column: 8, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11127, file: !11092, line: 404, column: 8)
!11309 = !DILocation(line: 404, column: 8, scope: !11127)
!11310 = !DILocation(line: 407, column: 7, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11308, file: !11092, line: 405, column: 5)
!11312 = !DILocation(line: 410, column: 19, scope: !11311)
!11313 = !DILocation(line: 412, column: 7, scope: !11311)
!11314 = !DILocation(line: 412, column: 13, scope: !11311)
!11315 = !DILocation(line: 414, column: 13, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !11092, line: 414, column: 12)
!11317 = distinct !DILexicalBlock(scope: !11311, file: !11092, line: 413, column: 7)
!11318 = !DILocation(line: 414, column: 27, scope: !11316)
!11319 = !DILocation(line: 414, column: 40, scope: !11316)
!11320 = !DILocation(line: 414, column: 12, scope: !11317)
!11321 = distinct !{!11321, !11313, !11322}
!11322 = !DILocation(line: 418, column: 7, scope: !11311)
!11323 = !DILocation(line: 422, column: 5, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !11092, line: 422, column: 5)
!11325 = distinct !DILexicalBlock(scope: !11127, file: !11092, line: 422, column: 5)
!11326 = !DILocation(line: 422, column: 5, scope: !11325)
!11327 = !DILocation(line: 422, column: 5, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11324, file: !11092, line: 422, column: 5)
!11329 = !DILocation(line: 422, column: 5, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11331, file: !11092, line: 422, column: 5)
!11331 = distinct !DILexicalBlock(scope: !11324, file: !11092, line: 422, column: 5)
!11332 = !DILocation(line: 422, column: 5, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11331, file: !11092, line: 422, column: 5)
!11334 = !DILocation(line: 0, scope: !11324)
!11335 = !DILocation(line: 424, column: 28, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11127, file: !11092, line: 424, column: 8)
!11337 = !DILocation(line: 424, column: 38, scope: !11336)
!11338 = !DILocation(line: 0, scope: !11336)
!11339 = !DILocation(line: 424, column: 8, scope: !11127)
!11340 = !DILocation(line: 430, column: 13, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11336, file: !11092, line: 425, column: 5)
!11342 = !DILocation(line: 430, column: 49, scope: !11341)
!11343 = !DILocation(line: 430, column: 7, scope: !11341)
!11344 = !DILocation(line: 432, column: 13, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11346, file: !11092, line: 432, column: 12)
!11346 = distinct !DILexicalBlock(scope: !11341, file: !11092, line: 431, column: 7)
!11347 = !DILocation(line: 432, column: 27, scope: !11345)
!11348 = !DILocation(line: 432, column: 41, scope: !11345)
!11349 = !DILocation(line: 432, column: 12, scope: !11346)
!11350 = distinct !{!11350, !11343, !11351}
!11351 = !DILocation(line: 436, column: 7, scope: !11341)
!11352 = !DILocation(line: 444, column: 13, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11336, file: !11092, line: 439, column: 5)
!11354 = !DILocation(line: 444, column: 7, scope: !11353)
!11355 = !DILocation(line: 446, column: 13, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !11092, line: 446, column: 12)
!11357 = distinct !DILexicalBlock(scope: !11353, file: !11092, line: 445, column: 7)
!11358 = !DILocation(line: 446, column: 27, scope: !11356)
!11359 = !DILocation(line: 446, column: 41, scope: !11356)
!11360 = !DILocation(line: 446, column: 12, scope: !11357)
!11361 = distinct !{!11361, !11354, !11362}
!11362 = !DILocation(line: 450, column: 7, scope: !11353)
!11363 = !DILocation(line: 454, column: 8, scope: !11127)
!11364 = !DILocation(line: 456, column: 7, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11366, file: !11092, line: 455, column: 5)
!11366 = distinct !DILexicalBlock(scope: !11127, file: !11092, line: 454, column: 8)
!11367 = !DILocation(line: 457, column: 5, scope: !11365)
!11368 = !DILocation(line: 462, column: 31, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11097, file: !11092, line: 462, column: 7)
!11370 = !DILocation(line: 462, column: 41, scope: !11369)
!11371 = !DILocation(line: 462, column: 7, scope: !11097)
!11372 = !DILocation(line: 465, column: 8, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11374, file: !11092, line: 465, column: 8)
!11374 = distinct !DILexicalBlock(scope: !11369, file: !11092, line: 463, column: 3)
!11375 = !DILocation(line: 465, column: 38, scope: !11373)
!11376 = !DILocation(line: 465, column: 8, scope: !11374)
!11377 = !DILocation(line: 467, column: 44, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !11092, line: 467, column: 10)
!11379 = distinct !DILexicalBlock(scope: !11373, file: !11092, line: 466, column: 5)
!11380 = !DILocation(line: 0, scope: !11378)
!11381 = !DILocation(line: 467, column: 10, scope: !11379)
!11382 = !DILocation(line: 483, column: 15, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11378, file: !11092, line: 468, column: 7)
!11384 = !DILocation(line: 483, column: 9, scope: !11383)
!11385 = !DILocation(line: 485, column: 15, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11387, file: !11092, line: 485, column: 14)
!11387 = distinct !DILexicalBlock(scope: !11383, file: !11092, line: 484, column: 9)
!11388 = !DILocation(line: 485, column: 29, scope: !11386)
!11389 = !DILocation(line: 485, column: 43, scope: !11386)
!11390 = !DILocation(line: 485, column: 14, scope: !11387)
!11391 = distinct !{!11391, !11384, !11392}
!11392 = !DILocation(line: 489, column: 9, scope: !11383)
!11393 = !DILocation(line: 492, column: 9, scope: !11383)
!11394 = !DILocation(line: 498, column: 9, scope: !11383)
!11395 = !DILocation(line: 501, column: 21, scope: !11383)
!11396 = !DILocation(line: 504, column: 9, scope: !11383)
!11397 = !DILocation(line: 504, column: 15, scope: !11383)
!11398 = !DILocation(line: 504, column: 51, scope: !11383)
!11399 = !DILocation(line: 506, column: 15, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !11092, line: 506, column: 14)
!11401 = distinct !DILexicalBlock(scope: !11383, file: !11092, line: 505, column: 9)
!11402 = !DILocation(line: 506, column: 29, scope: !11400)
!11403 = !DILocation(line: 506, column: 43, scope: !11400)
!11404 = !DILocation(line: 506, column: 14, scope: !11401)
!11405 = distinct !{!11405, !11396, !11406}
!11406 = !DILocation(line: 510, column: 9, scope: !11383)
!11407 = !DILocation(line: 521, column: 15, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11378, file: !11092, line: 513, column: 7)
!11409 = !DILocation(line: 521, column: 9, scope: !11408)
!11410 = !DILocation(line: 523, column: 15, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11412, file: !11092, line: 523, column: 14)
!11412 = distinct !DILexicalBlock(scope: !11408, file: !11092, line: 522, column: 9)
!11413 = !DILocation(line: 523, column: 29, scope: !11411)
!11414 = !DILocation(line: 523, column: 43, scope: !11411)
!11415 = !DILocation(line: 523, column: 14, scope: !11412)
!11416 = distinct !{!11416, !11409, !11417}
!11417 = !DILocation(line: 527, column: 9, scope: !11408)
!11418 = !DILocation(line: 533, column: 44, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11420, file: !11092, line: 533, column: 10)
!11420 = distinct !DILexicalBlock(scope: !11373, file: !11092, line: 531, column: 5)
!11421 = !DILocation(line: 533, column: 10, scope: !11420)
!11422 = !DILocation(line: 540, column: 27, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11419, file: !11092, line: 538, column: 7)
!11424 = !DILocation(line: 551, column: 14, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11423, file: !11092, line: 550, column: 13)
!11426 = !DILocation(line: 551, column: 81, scope: !11425)
!11427 = !DILocation(line: 551, column: 55, scope: !11425)
!11428 = !DILocation(line: 551, column: 92, scope: !11425)
!11429 = !DILocation(line: 552, column: 14, scope: !11425)
!11430 = !DILocation(line: 552, column: 80, scope: !11425)
!11431 = !DILocation(line: 552, column: 53, scope: !11425)
!11432 = !DILocation(line: 552, column: 111, scope: !11425)
!11433 = !DILocation(line: 553, column: 14, scope: !11425)
!11434 = !DILocation(line: 553, column: 80, scope: !11425)
!11435 = !DILocation(line: 553, column: 86, scope: !11425)
!11436 = !DILocation(line: 553, column: 53, scope: !11425)
!11437 = !DILocation(line: 553, column: 111, scope: !11425)
!11438 = !DILocation(line: 554, column: 14, scope: !11425)
!11439 = !DILocation(line: 554, column: 82, scope: !11425)
!11440 = !DILocation(line: 554, column: 101, scope: !11425)
!11441 = !DILocation(line: 554, column: 53, scope: !11425)
!11442 = !DILocation(line: 554, column: 126, scope: !11425)
!11443 = !DILocation(line: 555, column: 14, scope: !11425)
!11444 = !DILocation(line: 555, column: 80, scope: !11425)
!11445 = !DILocation(line: 555, column: 85, scope: !11425)
!11446 = !DILocation(line: 555, column: 53, scope: !11425)
!11447 = !DILocation(line: 550, column: 13, scope: !11423)
!11448 = !DILocation(line: 563, column: 3, scope: !11097)
!11449 = !DILocation(line: 564, column: 1, scope: !11097)
!11450 = !DISubprogram(name: "HAL_GetTick", scope: !11451, file: !11451, line: 234, type: !6524, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!11451 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11452 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11092, file: !11092, line: 591, type: !11453, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !11464)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!11095, !11455, !110}
!11455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11456, size: 32)
!11456 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11102, line: 92, baseType: !11457)
!11457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11102, line: 75, size: 160, elements: !11458)
!11458 = !{!11459, !11460, !11461, !11462, !11463}
!11459 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11457, file: !11102, line: 77, baseType: !110, size: 32)
!11460 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11457, file: !11102, line: 80, baseType: !110, size: 32, offset: 32)
!11461 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11457, file: !11102, line: 83, baseType: !110, size: 32, offset: 64)
!11462 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11457, file: !11102, line: 86, baseType: !110, size: 32, offset: 96)
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11457, file: !11102, line: 89, baseType: !110, size: 32, offset: 128)
!11464 = !{!11465, !11466, !11467}
!11465 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11452, file: !11092, line: 591, type: !11455)
!11466 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11452, file: !11092, line: 591, type: !110)
!11467 = !DILocalVariable(name: "tickstart", scope: !11452, file: !11092, line: 593, type: !110)
!11468 = !DILocation(line: 0, scope: !11452)
!11469 = !DILocation(line: 596, column: 24, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11452, file: !11092, line: 596, column: 6)
!11471 = !DILocation(line: 596, column: 6, scope: !11452)
!11472 = !DILocation(line: 610, column: 17, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11452, file: !11092, line: 610, column: 6)
!11474 = !DILocation(line: 610, column: 15, scope: !11473)
!11475 = !DILocation(line: 610, column: 6, scope: !11452)
!11476 = !DILocation(line: 613, column: 5, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11473, file: !11092, line: 611, column: 3)
!11478 = !DILocation(line: 617, column: 8, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11477, file: !11092, line: 617, column: 8)
!11480 = !DILocation(line: 617, column: 34, scope: !11479)
!11481 = !DILocation(line: 617, column: 8, scope: !11477)
!11482 = !DILocation(line: 624, column: 27, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11452, file: !11092, line: 624, column: 6)
!11484 = !DILocation(line: 624, column: 38, scope: !11483)
!11485 = !DILocation(line: 624, column: 60, scope: !11483)
!11486 = !DILocation(line: 624, column: 6, scope: !11452)
!11487 = !DILocation(line: 628, column: 40, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11489, file: !11092, line: 628, column: 8)
!11489 = distinct !DILexicalBlock(scope: !11483, file: !11092, line: 625, column: 3)
!11490 = !DILocation(line: 628, column: 63, scope: !11488)
!11491 = !DILocation(line: 628, column: 8, scope: !11489)
!11492 = !DILocation(line: 630, column: 7, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11488, file: !11092, line: 629, column: 5)
!11494 = !DILocation(line: 633, column: 29, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11489, file: !11092, line: 633, column: 8)
!11496 = !DILocation(line: 631, column: 5, scope: !11493)
!11497 = !DILocation(line: 633, column: 40, scope: !11495)
!11498 = !DILocation(line: 633, column: 63, scope: !11495)
!11499 = !DILocation(line: 633, column: 8, scope: !11489)
!11500 = !DILocation(line: 635, column: 7, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11495, file: !11092, line: 634, column: 5)
!11502 = !DILocation(line: 636, column: 5, scope: !11501)
!11503 = !DILocation(line: 639, column: 5, scope: !11489)
!11504 = !DILocation(line: 643, column: 27, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11452, file: !11092, line: 643, column: 6)
!11506 = !DILocation(line: 640, column: 3, scope: !11489)
!11507 = !DILocation(line: 643, column: 38, scope: !11505)
!11508 = !DILocation(line: 643, column: 62, scope: !11505)
!11509 = !DILocation(line: 643, column: 6, scope: !11452)
!11510 = !DILocation(line: 648, column: 27, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !11092, line: 648, column: 8)
!11512 = distinct !DILexicalBlock(scope: !11505, file: !11092, line: 644, column: 3)
!11513 = !DILocation(line: 648, column: 8, scope: !11512)
!11514 = !DILocation(line: 651, column: 10, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11516, file: !11092, line: 651, column: 10)
!11516 = distinct !DILexicalBlock(scope: !11511, file: !11092, line: 649, column: 5)
!11517 = !DILocation(line: 651, column: 46, scope: !11515)
!11518 = !DILocation(line: 651, column: 10, scope: !11516)
!11519 = !DILocation(line: 661, column: 10, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11521, file: !11092, line: 661, column: 10)
!11521 = distinct !DILexicalBlock(scope: !11522, file: !11092, line: 659, column: 5)
!11522 = distinct !DILexicalBlock(scope: !11511, file: !11092, line: 657, column: 13)
!11523 = !DILocation(line: 661, column: 46, scope: !11520)
!11524 = !DILocation(line: 661, column: 10, scope: !11521)
!11525 = !DILocation(line: 670, column: 10, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11527, file: !11092, line: 670, column: 10)
!11527 = distinct !DILexicalBlock(scope: !11522, file: !11092, line: 668, column: 5)
!11528 = !DILocation(line: 670, column: 46, scope: !11526)
!11529 = !DILocation(line: 670, column: 10, scope: !11527)
!11530 = !DILocation(line: 676, column: 5, scope: !11512)
!11531 = !DILocation(line: 679, column: 17, scope: !11512)
!11532 = !DILocation(line: 681, column: 5, scope: !11512)
!11533 = !DILocation(line: 681, column: 12, scope: !11512)
!11534 = !DILocation(line: 681, column: 65, scope: !11512)
!11535 = !DILocation(line: 681, column: 78, scope: !11512)
!11536 = !DILocation(line: 681, column: 42, scope: !11512)
!11537 = !DILocation(line: 683, column: 12, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11539, file: !11092, line: 683, column: 11)
!11539 = distinct !DILexicalBlock(scope: !11512, file: !11092, line: 682, column: 5)
!11540 = !DILocation(line: 683, column: 26, scope: !11538)
!11541 = !DILocation(line: 683, column: 39, scope: !11538)
!11542 = !DILocation(line: 683, column: 11, scope: !11539)
!11543 = distinct !{!11543, !11532, !11544}
!11544 = !DILocation(line: 687, column: 5, scope: !11512)
!11545 = !DILocation(line: 691, column: 17, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11452, file: !11092, line: 691, column: 6)
!11547 = !DILocation(line: 691, column: 15, scope: !11546)
!11548 = !DILocation(line: 691, column: 6, scope: !11452)
!11549 = !DILocation(line: 694, column: 5, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11546, file: !11092, line: 692, column: 3)
!11551 = !DILocation(line: 698, column: 8, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11550, file: !11092, line: 698, column: 8)
!11553 = !DILocation(line: 698, column: 34, scope: !11552)
!11554 = !DILocation(line: 698, column: 8, scope: !11550)
!11555 = !DILocation(line: 705, column: 27, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11452, file: !11092, line: 705, column: 6)
!11557 = !DILocation(line: 705, column: 38, scope: !11556)
!11558 = !DILocation(line: 705, column: 61, scope: !11556)
!11559 = !DILocation(line: 705, column: 6, scope: !11452)
!11560 = !DILocation(line: 708, column: 5, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11556, file: !11092, line: 706, column: 3)
!11562 = !DILocation(line: 712, column: 27, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11452, file: !11092, line: 712, column: 6)
!11564 = !DILocation(line: 709, column: 3, scope: !11561)
!11565 = !DILocation(line: 712, column: 38, scope: !11563)
!11566 = !DILocation(line: 712, column: 61, scope: !11563)
!11567 = !DILocation(line: 712, column: 6, scope: !11452)
!11568 = !DILocation(line: 715, column: 5, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11563, file: !11092, line: 713, column: 3)
!11570 = !DILocation(line: 716, column: 3, scope: !11569)
!11571 = !DILocation(line: 719, column: 21, scope: !11452)
!11572 = !DILocation(line: 719, column: 70, scope: !11452)
!11573 = !DILocation(line: 719, column: 91, scope: !11452)
!11574 = !DILocation(line: 719, column: 50, scope: !11452)
!11575 = !DILocation(line: 719, column: 47, scope: !11452)
!11576 = !DILocation(line: 719, column: 19, scope: !11452)
!11577 = !DILocation(line: 722, column: 17, scope: !11452)
!11578 = !DILocation(line: 722, column: 3, scope: !11452)
!11579 = !DILocation(line: 724, column: 3, scope: !11452)
!11580 = !DILocation(line: 725, column: 1, scope: !11452)
!11581 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11092, file: !11092, line: 885, type: !6524, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !11582)
!11582 = !{!11583, !11584, !11585, !11586}
!11583 = !DILocalVariable(name: "pllm", scope: !11581, file: !11092, line: 887, type: !110)
!11584 = !DILocalVariable(name: "pllvco", scope: !11581, file: !11092, line: 887, type: !110)
!11585 = !DILocalVariable(name: "pllp", scope: !11581, file: !11092, line: 887, type: !110)
!11586 = !DILocalVariable(name: "sysclockfreq", scope: !11581, file: !11092, line: 888, type: !110)
!11587 = !DILocation(line: 0, scope: !11581)
!11588 = !DILocation(line: 891, column: 16, scope: !11581)
!11589 = !DILocation(line: 891, column: 21, scope: !11581)
!11590 = !DILocation(line: 891, column: 3, scope: !11581)
!11591 = !DILocation(line: 907, column: 19, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11593, file: !11092, line: 904, column: 5)
!11593 = distinct !DILexicalBlock(scope: !11581, file: !11092, line: 892, column: 3)
!11594 = !DILocation(line: 907, column: 27, scope: !11592)
!11595 = !DILocation(line: 908, column: 10, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11592, file: !11092, line: 908, column: 10)
!11597 = !DILocation(line: 0, scope: !11596)
!11598 = !DILocation(line: 918, column: 23, scope: !11592)
!11599 = !DILocation(line: 918, column: 82, scope: !11592)
!11600 = !DILocation(line: 920, column: 28, scope: !11592)
!11601 = !DILocation(line: 921, column: 7, scope: !11592)
!11602 = !DILocation(line: 0, scope: !11593)
!11603 = !DILocation(line: 929, column: 3, scope: !11581)
!11604 = !DISubprogram(name: "HAL_InitTick", scope: !11451, file: !11451, line: 223, type: !11605, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!11605 = !DISubroutineType(types: !11606)
!11606 = !{!11095, !110}
!11607 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11092, file: !11092, line: 775, type: !11608, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !11610)
!11608 = !DISubroutineType(types: !11609)
!11609 = !{null, !110, !110, !110}
!11610 = !{!11611, !11612, !11613, !11614, !11624, !11628}
!11611 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11607, file: !11092, line: 775, type: !110)
!11612 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11607, file: !11092, line: 775, type: !110)
!11613 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11607, file: !11092, line: 775, type: !110)
!11614 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11607, file: !11092, line: 777, type: !11615)
!11615 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11616, line: 62, baseType: !11617)
!11616 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11616, line: 46, size: 160, elements: !11618)
!11618 = !{!11619, !11620, !11621, !11622, !11623}
!11619 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11617, file: !11616, line: 48, baseType: !110, size: 32)
!11620 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11617, file: !11616, line: 51, baseType: !110, size: 32, offset: 32)
!11621 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11617, file: !11616, line: 54, baseType: !110, size: 32, offset: 64)
!11622 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11617, file: !11616, line: 57, baseType: !110, size: 32, offset: 96)
!11623 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11617, file: !11616, line: 60, baseType: !110, size: 32, offset: 128)
!11624 = !DILocalVariable(name: "tmpreg", scope: !11625, file: !11092, line: 787, type: !316)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !11092, line: 787, column: 5)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !11092, line: 783, column: 3)
!11627 = distinct !DILexicalBlock(scope: !11607, file: !11092, line: 782, column: 6)
!11628 = !DILocalVariable(name: "tmpreg", scope: !11629, file: !11092, line: 811, type: !316)
!11629 = distinct !DILexicalBlock(scope: !11630, file: !11092, line: 811, column: 5)
!11630 = distinct !DILexicalBlock(scope: !11627, file: !11092, line: 807, column: 3)
!11631 = !DILocation(line: 0, scope: !11607)
!11632 = !DILocation(line: 777, column: 3, scope: !11607)
!11633 = !DILocation(line: 777, column: 20, scope: !11607)
!11634 = !DILocation(line: 782, column: 15, scope: !11627)
!11635 = !DILocation(line: 782, column: 6, scope: !11607)
!11636 = !DILocation(line: 787, column: 5, scope: !11625)
!11637 = !DILocation(line: 787, column: 5, scope: !11626)
!11638 = !DILocation(line: 790, column: 21, scope: !11626)
!11639 = !DILocation(line: 790, column: 25, scope: !11626)
!11640 = !DILocation(line: 791, column: 21, scope: !11626)
!11641 = !DILocation(line: 791, column: 26, scope: !11626)
!11642 = !DILocation(line: 792, column: 21, scope: !11626)
!11643 = !DILocation(line: 792, column: 27, scope: !11626)
!11644 = !DILocation(line: 793, column: 21, scope: !11626)
!11645 = !DILocation(line: 793, column: 26, scope: !11626)
!11646 = !DILocation(line: 794, column: 21, scope: !11626)
!11647 = !DILocation(line: 794, column: 31, scope: !11626)
!11648 = !DILocation(line: 795, column: 5, scope: !11626)
!11649 = !DILocation(line: 798, column: 5, scope: !11626)
!11650 = !DILocation(line: 804, column: 3, scope: !11626)
!11651 = !DILocation(line: 811, column: 5, scope: !11629)
!11652 = !DILocation(line: 811, column: 5, scope: !11630)
!11653 = !DILocation(line: 814, column: 21, scope: !11630)
!11654 = !DILocation(line: 814, column: 25, scope: !11630)
!11655 = !DILocation(line: 815, column: 21, scope: !11630)
!11656 = !DILocation(line: 815, column: 26, scope: !11630)
!11657 = !DILocation(line: 816, column: 21, scope: !11630)
!11658 = !DILocation(line: 816, column: 27, scope: !11630)
!11659 = !DILocation(line: 817, column: 21, scope: !11630)
!11660 = !DILocation(line: 817, column: 26, scope: !11630)
!11661 = !DILocation(line: 818, column: 21, scope: !11630)
!11662 = !DILocation(line: 818, column: 31, scope: !11630)
!11663 = !DILocation(line: 819, column: 5, scope: !11630)
!11664 = !DILocation(line: 822, column: 5, scope: !11630)
!11665 = !DILocation(line: 0, scope: !11627)
!11666 = !DILocation(line: 830, column: 1, scope: !11607)
!11667 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11616, file: !11616, line: 224, type: !11668, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!11668 = !DISubroutineType(types: !11669)
!11669 = !{null, !2998, !11670}
!11670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11615, size: 32)
!11671 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11092, file: !11092, line: 841, type: !3116, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2050)
!11672 = !DILocation(line: 843, column: 38, scope: !11671)
!11673 = !DILocation(line: 844, column: 1, scope: !11671)
!11674 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11092, file: !11092, line: 850, type: !3116, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2050)
!11675 = !DILocation(line: 852, column: 38, scope: !11674)
!11676 = !DILocation(line: 853, column: 1, scope: !11674)
!11677 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11092, file: !11092, line: 941, type: !6524, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2050)
!11678 = !DILocation(line: 943, column: 10, scope: !11677)
!11679 = !DILocation(line: 943, column: 3, scope: !11677)
!11680 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11092, file: !11092, line: 952, type: !6524, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2050)
!11681 = !DILocation(line: 955, column: 11, scope: !11680)
!11682 = !DILocation(line: 955, column: 56, scope: !11680)
!11683 = !DILocation(line: 955, column: 78, scope: !11680)
!11684 = !DILocation(line: 955, column: 36, scope: !11680)
!11685 = !DILocation(line: 955, column: 33, scope: !11680)
!11686 = !DILocation(line: 955, column: 3, scope: !11680)
!11687 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11092, file: !11092, line: 964, type: !6524, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2050)
!11688 = !DILocation(line: 967, column: 11, scope: !11687)
!11689 = !DILocation(line: 967, column: 55, scope: !11687)
!11690 = !DILocation(line: 967, column: 77, scope: !11687)
!11691 = !DILocation(line: 967, column: 35, scope: !11687)
!11692 = !DILocation(line: 967, column: 32, scope: !11687)
!11693 = !DILocation(line: 967, column: 3, scope: !11687)
!11694 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11092, file: !11092, line: 977, type: !11695, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !11697)
!11695 = !DISubroutineType(types: !11696)
!11696 = !{null, !11100}
!11697 = !{!11698}
!11698 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11694, file: !11092, line: 977, type: !11100)
!11699 = !DILocation(line: 0, scope: !11694)
!11700 = !DILocation(line: 980, column: 22, scope: !11694)
!11701 = !DILocation(line: 980, column: 37, scope: !11694)
!11702 = !DILocation(line: 983, column: 12, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11694, file: !11092, line: 983, column: 6)
!11704 = !DILocation(line: 983, column: 15, scope: !11703)
!11705 = !DILocation(line: 983, column: 31, scope: !11703)
!11706 = !DILocation(line: 983, column: 6, scope: !11694)
!11707 = !DILocation(line: 985, column: 24, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11703, file: !11092, line: 984, column: 3)
!11709 = !DILocation(line: 985, column: 33, scope: !11708)
!11710 = !DILocation(line: 986, column: 3, scope: !11708)
!11711 = !DILocation(line: 987, column: 17, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11703, file: !11092, line: 987, column: 11)
!11713 = !DILocation(line: 987, column: 20, scope: !11712)
!11714 = !DILocation(line: 987, column: 35, scope: !11712)
!11715 = !DILocation(line: 0, scope: !11712)
!11716 = !DILocation(line: 987, column: 11, scope: !11703)
!11717 = !DILocation(line: 989, column: 33, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11712, file: !11092, line: 988, column: 3)
!11719 = !DILocation(line: 990, column: 3, scope: !11718)
!11720 = !DILocation(line: 993, column: 33, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11712, file: !11092, line: 992, column: 3)
!11722 = !DILocation(line: 997, column: 12, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11694, file: !11092, line: 997, column: 6)
!11724 = !DILocation(line: 997, column: 15, scope: !11723)
!11725 = !DILocation(line: 1003, column: 24, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11723, file: !11092, line: 1002, column: 3)
!11727 = !DILocation(line: 1003, column: 33, scope: !11726)
!11728 = !DILocation(line: 1006, column: 61, scope: !11694)
!11729 = !DILocation(line: 1006, column: 81, scope: !11694)
!11730 = !DILocation(line: 1006, column: 22, scope: !11694)
!11731 = !DILocation(line: 1006, column: 42, scope: !11694)
!11732 = !DILocation(line: 1009, column: 12, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11694, file: !11092, line: 1009, column: 6)
!11734 = !DILocation(line: 1009, column: 17, scope: !11733)
!11735 = !DILocation(line: 1009, column: 35, scope: !11733)
!11736 = !DILocation(line: 1009, column: 6, scope: !11694)
!11737 = !DILocation(line: 1011, column: 24, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11733, file: !11092, line: 1010, column: 3)
!11739 = !DILocation(line: 1011, column: 33, scope: !11738)
!11740 = !DILocation(line: 1012, column: 3, scope: !11738)
!11741 = !DILocation(line: 1013, column: 17, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11733, file: !11092, line: 1013, column: 11)
!11743 = !DILocation(line: 1013, column: 22, scope: !11742)
!11744 = !DILocation(line: 1013, column: 39, scope: !11742)
!11745 = !DILocation(line: 0, scope: !11742)
!11746 = !DILocation(line: 1013, column: 11, scope: !11733)
!11747 = !DILocation(line: 1015, column: 33, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11742, file: !11092, line: 1014, column: 3)
!11749 = !DILocation(line: 1016, column: 3, scope: !11748)
!11750 = !DILocation(line: 1019, column: 33, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11742, file: !11092, line: 1018, column: 3)
!11752 = !DILocation(line: 1023, column: 12, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11694, file: !11092, line: 1023, column: 6)
!11754 = !DILocation(line: 1023, column: 16, scope: !11753)
!11755 = !DILocation(line: 1029, column: 24, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11753, file: !11092, line: 1028, column: 3)
!11757 = !DILocation(line: 1029, column: 33, scope: !11756)
!11758 = !DILocation(line: 1033, column: 12, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11694, file: !11092, line: 1033, column: 6)
!11760 = !DILocation(line: 1033, column: 15, scope: !11759)
!11761 = !DILocation(line: 1033, column: 30, scope: !11759)
!11762 = !DILocation(line: 1033, column: 6, scope: !11694)
!11763 = !DILocation(line: 1039, column: 28, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11759, file: !11092, line: 1038, column: 3)
!11765 = !DILocation(line: 1039, column: 37, scope: !11764)
!11766 = !DILocation(line: 1041, column: 54, scope: !11694)
!11767 = !DILocation(line: 1041, column: 62, scope: !11694)
!11768 = !DILocation(line: 1041, column: 26, scope: !11694)
!11769 = !DILocation(line: 1041, column: 36, scope: !11694)
!11770 = !DILocation(line: 1042, column: 49, scope: !11694)
!11771 = !DILocation(line: 1042, column: 57, scope: !11694)
!11772 = !DILocation(line: 1042, column: 26, scope: !11694)
!11773 = !DILocation(line: 1042, column: 31, scope: !11694)
!11774 = !DILocation(line: 1043, column: 50, scope: !11694)
!11775 = !DILocation(line: 1043, column: 78, scope: !11694)
!11776 = !DILocation(line: 1043, column: 26, scope: !11694)
!11777 = !DILocation(line: 1043, column: 31, scope: !11694)
!11778 = !DILocation(line: 1044, column: 52, scope: !11694)
!11779 = !DILocation(line: 1044, column: 102, scope: !11694)
!11780 = !DILocation(line: 1044, column: 109, scope: !11694)
!11781 = !DILocation(line: 1044, column: 26, scope: !11694)
!11782 = !DILocation(line: 1044, column: 31, scope: !11694)
!11783 = !DILocation(line: 1045, column: 50, scope: !11694)
!11784 = !DILocation(line: 1045, column: 78, scope: !11694)
!11785 = !DILocation(line: 1045, column: 26, scope: !11694)
!11786 = !DILocation(line: 1045, column: 31, scope: !11694)
!11787 = !DILocation(line: 1046, column: 1, scope: !11694)
!11788 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11092, file: !11092, line: 1056, type: !11789, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !11791)
!11789 = !DISubroutineType(types: !11790)
!11790 = !{null, !11455, !867}
!11791 = !{!11792, !11793}
!11792 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11788, file: !11092, line: 1056, type: !11455)
!11793 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11788, file: !11092, line: 1056, type: !867)
!11794 = !DILocation(line: 0, scope: !11788)
!11795 = !DILocation(line: 1059, column: 22, scope: !11788)
!11796 = !DILocation(line: 1059, column: 32, scope: !11788)
!11797 = !DILocation(line: 1062, column: 53, scope: !11788)
!11798 = !DILocation(line: 1062, column: 58, scope: !11788)
!11799 = !DILocation(line: 1062, column: 22, scope: !11788)
!11800 = !DILocation(line: 1062, column: 35, scope: !11788)
!11801 = !DILocation(line: 1065, column: 54, scope: !11788)
!11802 = !DILocation(line: 1065, column: 59, scope: !11788)
!11803 = !DILocation(line: 1065, column: 22, scope: !11788)
!11804 = !DILocation(line: 1065, column: 36, scope: !11788)
!11805 = !DILocation(line: 1068, column: 55, scope: !11788)
!11806 = !DILocation(line: 1068, column: 60, scope: !11788)
!11807 = !DILocation(line: 1068, column: 22, scope: !11788)
!11808 = !DILocation(line: 1068, column: 37, scope: !11788)
!11809 = !DILocation(line: 1071, column: 56, scope: !11788)
!11810 = !DILocation(line: 1071, column: 79, scope: !11788)
!11811 = !DILocation(line: 1071, column: 22, scope: !11788)
!11812 = !DILocation(line: 1071, column: 37, scope: !11788)
!11813 = !DILocation(line: 1074, column: 34, scope: !11788)
!11814 = !DILocation(line: 1074, column: 38, scope: !11788)
!11815 = !DILocation(line: 1074, column: 14, scope: !11788)
!11816 = !DILocation(line: 1075, column: 1, scope: !11788)
!11817 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11092, file: !11092, line: 1082, type: !3116, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2050)
!11818 = !DILocation(line: 1085, column: 6, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11817, file: !11092, line: 1085, column: 6)
!11820 = !DILocation(line: 1085, column: 6, scope: !11817)
!11821 = !DILocation(line: 1088, column: 5, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11819, file: !11092, line: 1086, column: 3)
!11823 = !DILocation(line: 1091, column: 5, scope: !11822)
!11824 = !DILocation(line: 1092, column: 3, scope: !11822)
!11825 = !DILocation(line: 1093, column: 1, scope: !11817)
!11826 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11092, file: !11092, line: 1099, type: !3116, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2050)
!11827 = !DILocation(line: 1104, column: 1, scope: !11826)
!11828 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11829, file: !11829, line: 257, type: !6534, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !11830)
!11829 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11830 = !{!11831}
!11831 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11828, file: !11829, line: 257, type: !110)
!11832 = !DILocation(line: 0, scope: !11828)
!11833 = !DILocation(line: 260, column: 3, scope: !11828)
!11834 = !DILocation(line: 261, column: 1, scope: !11828)
!11835 = distinct !DISubprogram(name: "LL_InitTick", scope: !11836, file: !11836, line: 260, type: !9451, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !11837)
!11836 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11837 = !{!11838, !11839}
!11838 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11835, file: !11836, line: 260, type: !110)
!11839 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11835, file: !11836, line: 260, type: !110)
!11840 = !DILocation(line: 0, scope: !11835)
!11841 = !DILocation(line: 263, column: 46, scope: !11835)
!11842 = !DILocation(line: 263, column: 55, scope: !11835)
!11843 = !DILocation(line: 263, column: 18, scope: !11835)
!11844 = !DILocation(line: 264, column: 18, scope: !11835)
!11845 = !DILocation(line: 265, column: 18, scope: !11835)
!11846 = !DILocation(line: 267, column: 1, scope: !11835)
!11847 = distinct !DISubprogram(name: "LL_mDelay", scope: !11829, file: !11829, line: 273, type: !6534, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !11848)
!11848 = !{!11849, !11850}
!11849 = !DILocalVariable(name: "Delay", arg: 1, scope: !11847, file: !11829, line: 273, type: !110)
!11850 = !DILocalVariable(name: "tmp", scope: !11847, file: !11829, line: 275, type: !316)
!11851 = !DILocation(line: 0, scope: !11847)
!11852 = !DILocation(line: 275, column: 3, scope: !11847)
!11853 = !DILocation(line: 275, column: 18, scope: !11847)
!11854 = !DILocation(line: 275, column: 33, scope: !11847)
!11855 = !DILocation(line: 277, column: 10, scope: !11847)
!11856 = !DILocation(line: 280, column: 12, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11847, file: !11829, line: 280, column: 6)
!11858 = !DILocation(line: 285, column: 3, scope: !11847)
!11859 = !DILocation(line: 287, column: 18, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11861, file: !11829, line: 287, column: 8)
!11861 = distinct !DILexicalBlock(scope: !11847, file: !11829, line: 286, column: 3)
!11862 = !DILocation(line: 292, column: 1, scope: !11847)
!11863 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11829, file: !11829, line: 323, type: !6534, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !11864)
!11864 = !{!11865}
!11865 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11863, file: !11829, line: 323, type: !110)
!11866 = !DILocation(line: 0, scope: !11863)
!11867 = !DILocation(line: 326, column: 19, scope: !11863)
!11868 = !DILocation(line: 327, column: 1, scope: !11863)
!11869 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11829, file: !11829, line: 338, type: !11870, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !11873)
!11870 = !DISubroutineType(types: !11871)
!11871 = !{!11872, !110}
!11872 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !811, line: 201, baseType: !810)
!11873 = !{!11874, !11875, !11876, !11877, !11878}
!11874 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11869, file: !11829, line: 338, type: !110)
!11875 = !DILocalVariable(name: "timeout", scope: !11869, file: !11829, line: 340, type: !110)
!11876 = !DILocalVariable(name: "getlatency", scope: !11869, file: !11829, line: 341, type: !110)
!11877 = !DILocalVariable(name: "latency", scope: !11869, file: !11829, line: 342, type: !110)
!11878 = !DILocalVariable(name: "status", scope: !11869, file: !11829, line: 343, type: !11872)
!11879 = !DILocation(line: 0, scope: !11869)
!11880 = !DILocation(line: 347, column: 21, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11869, file: !11829, line: 347, column: 6)
!11882 = !DILocation(line: 347, column: 6, scope: !11869)
!11883 = !DILocation(line: 353, column: 8, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !11829, line: 353, column: 8)
!11885 = distinct !DILexicalBlock(scope: !11881, file: !11829, line: 352, column: 3)
!11886 = !DILocation(line: 387, column: 8, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11885, file: !11829, line: 387, column: 8)
!11888 = !DILocation(line: 387, column: 40, scope: !11887)
!11889 = !DILocation(line: 387, column: 8, scope: !11885)
!11890 = !DILocation(line: 407, column: 26, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11892, file: !11829, line: 407, column: 10)
!11892 = distinct !DILexicalBlock(scope: !11887, file: !11829, line: 388, column: 5)
!11893 = !DILocation(line: 407, column: 55, scope: !11891)
!11894 = !DILocation(line: 413, column: 28, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11896, file: !11829, line: 413, column: 12)
!11896 = distinct !DILexicalBlock(scope: !11891, file: !11829, line: 412, column: 7)
!11897 = !DILocation(line: 413, column: 57, scope: !11895)
!11898 = !DILocation(line: 420, column: 8, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11885, file: !11829, line: 420, column: 8)
!11900 = !DILocation(line: 420, column: 40, scope: !11899)
!11901 = !DILocation(line: 420, column: 8, scope: !11885)
!11902 = !DILocation(line: 429, column: 26, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11904, file: !11829, line: 429, column: 10)
!11904 = distinct !DILexicalBlock(scope: !11899, file: !11829, line: 421, column: 5)
!11905 = !DILocation(line: 429, column: 55, scope: !11903)
!11906 = !DILocation(line: 435, column: 28, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !11829, line: 435, column: 12)
!11908 = distinct !DILexicalBlock(scope: !11903, file: !11829, line: 434, column: 7)
!11909 = !DILocation(line: 435, column: 57, scope: !11907)
!11910 = !DILocation(line: 0, scope: !11885)
!11911 = !DILocation(line: 444, column: 5, scope: !11885)
!11912 = !DILocation(line: 448, column: 5, scope: !11885)
!11913 = !DILocation(line: 451, column: 18, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11885, file: !11829, line: 449, column: 5)
!11915 = !DILocation(line: 452, column: 12, scope: !11914)
!11916 = !DILocation(line: 453, column: 26, scope: !11885)
!11917 = !DILocation(line: 453, column: 38, scope: !11885)
!11918 = !DILocation(line: 453, column: 5, scope: !11914)
!11919 = distinct !{!11919, !11912, !11920}
!11920 = !DILocation(line: 453, column: 54, scope: !11885)
!11921 = !DILocation(line: 0, scope: !11881)
!11922 = !DILocation(line: 464, column: 3, scope: !11869)
!11923 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11924, file: !11924, line: 519, type: !6524, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!11924 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11925 = !DILocation(line: 521, column: 21, scope: !11923)
!11926 = !DILocation(line: 521, column: 3, scope: !11923)
!11927 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6137, file: !6137, line: 1543, type: !6534, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !11928)
!11928 = !{!11929}
!11929 = !DILocalVariable(name: "Latency", arg: 1, scope: !11927, file: !6137, line: 1543, type: !110)
!11930 = !DILocation(line: 0, scope: !11927)
!11931 = !DILocation(line: 1545, column: 3, scope: !11927)
!11932 = !DILocation(line: 1546, column: 1, scope: !11927)
!11933 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6137, file: !6137, line: 1569, type: !6524, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!11934 = !DILocation(line: 1571, column: 21, scope: !11933)
!11935 = !DILocation(line: 1571, column: 3, scope: !11933)
!11936 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11829, file: !11829, line: 483, type: !11937, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !11953)
!11937 = !DISubroutineType(types: !11938)
!11938 = !{!11872, !11939, !11946}
!11939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11940, size: 32)
!11940 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11836, line: 114, baseType: !11941)
!11941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11836, line: 94, size: 96, elements: !11942)
!11942 = !{!11943, !11944, !11945}
!11943 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11941, file: !11836, line: 96, baseType: !110, size: 32)
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11941, file: !11836, line: 102, baseType: !110, size: 32, offset: 32)
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11941, file: !11836, line: 109, baseType: !110, size: 32, offset: 64)
!11946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11947, size: 32)
!11947 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11836, line: 139, baseType: !11948)
!11948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11836, line: 119, size: 96, elements: !11949)
!11949 = !{!11950, !11951, !11952}
!11950 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11948, file: !11836, line: 121, baseType: !110, size: 32)
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11948, file: !11836, line: 127, baseType: !110, size: 32, offset: 32)
!11952 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11948, file: !11836, line: 133, baseType: !110, size: 32, offset: 64)
!11953 = !{!11954, !11955, !11956, !11957}
!11954 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11936, file: !11829, line: 483, type: !11939)
!11955 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11936, file: !11829, line: 484, type: !11946)
!11956 = !DILocalVariable(name: "status", scope: !11936, file: !11829, line: 486, type: !11872)
!11957 = !DILocalVariable(name: "pllfreq", scope: !11936, file: !11829, line: 487, type: !110)
!11958 = !DILocation(line: 0, scope: !11936)
!11959 = !DILocation(line: 490, column: 6, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11936, file: !11829, line: 490, column: 6)
!11961 = !DILocation(line: 490, column: 25, scope: !11960)
!11962 = !DILocation(line: 490, column: 6, scope: !11936)
!11963 = !DILocation(line: 493, column: 15, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11960, file: !11829, line: 491, column: 3)
!11965 = !DILocation(line: 496, column: 8, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11964, file: !11829, line: 496, column: 8)
!11967 = !DILocation(line: 496, column: 29, scope: !11966)
!11968 = !DILocation(line: 496, column: 8, scope: !11964)
!11969 = !DILocation(line: 498, column: 7, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11966, file: !11829, line: 497, column: 5)
!11971 = !DILocation(line: 499, column: 7, scope: !11970)
!11972 = !DILocation(line: 499, column: 14, scope: !11970)
!11973 = !DILocation(line: 499, column: 35, scope: !11970)
!11974 = distinct !{!11974, !11971, !11975}
!11975 = !DILocation(line: 502, column: 7, scope: !11970)
!11976 = !DILocation(line: 506, column: 76, scope: !11964)
!11977 = !DILocation(line: 506, column: 103, scope: !11964)
!11978 = !DILocation(line: 507, column: 54, scope: !11964)
!11979 = !DILocation(line: 506, column: 5, scope: !11964)
!11980 = !DILocation(line: 510, column: 14, scope: !11964)
!11981 = !DILocation(line: 511, column: 3, scope: !11964)
!11982 = !DILocation(line: 0, scope: !11960)
!11983 = !DILocation(line: 518, column: 3, scope: !11936)
!11984 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11829, file: !11829, line: 642, type: !11985, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !11987)
!11985 = !DISubroutineType(types: !11986)
!11986 = !{!11872}
!11987 = !{!11988}
!11988 = !DILocalVariable(name: "status", scope: !11984, file: !11829, line: 644, type: !11872)
!11989 = !DILocation(line: 0, scope: !11984)
!11990 = !DILocation(line: 647, column: 6, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11984, file: !11829, line: 647, column: 6)
!11992 = !DILocation(line: 647, column: 27, scope: !11991)
!11993 = !DILocation(line: 663, column: 6, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11984, file: !11829, line: 663, column: 6)
!11995 = !DILocation(line: 663, column: 30, scope: !11994)
!11996 = !DILocation(line: 663, column: 6, scope: !11984)
!11997 = !DILocation(line: 669, column: 3, scope: !11984)
!11998 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11829, file: !11829, line: 611, type: !11999, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !12001)
!11999 = !DISubroutineType(types: !12000)
!12000 = !{!110, !110, !11939}
!12001 = !{!12002, !12003, !12004}
!12002 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11998, file: !11829, line: 611, type: !110)
!12003 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11998, file: !11829, line: 611, type: !11939)
!12004 = !DILocalVariable(name: "pllfreq", scope: !11998, file: !11829, line: 613, type: !110)
!12005 = !DILocation(line: 0, scope: !11998)
!12006 = !DILocation(line: 622, column: 56, scope: !11998)
!12007 = !DILocation(line: 622, column: 61, scope: !11998)
!12008 = !DILocation(line: 622, column: 32, scope: !11998)
!12009 = !DILocation(line: 626, column: 45, scope: !11998)
!12010 = !DILocation(line: 626, column: 50, scope: !11998)
!12011 = !DILocation(line: 626, column: 21, scope: !11998)
!12012 = !DILocation(line: 630, column: 47, scope: !11998)
!12013 = !DILocation(line: 630, column: 82, scope: !11998)
!12014 = !DILocation(line: 630, column: 21, scope: !11998)
!12015 = !DILocation(line: 633, column: 3, scope: !11998)
!12016 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8777, file: !8777, line: 3007, type: !6524, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!12017 = !DILocation(line: 3009, column: 11, scope: !12016)
!12018 = !DILocation(line: 3009, column: 44, scope: !12016)
!12019 = !DILocation(line: 3009, column: 3, scope: !12016)
!12020 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8777, file: !8777, line: 2987, type: !3116, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!12021 = !DILocation(line: 2989, column: 3, scope: !12020)
!12022 = !DILocation(line: 2990, column: 1, scope: !12020)
!12023 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8777, file: !8777, line: 4304, type: !8911, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !12024)
!12024 = !{!12025, !12026, !12027, !12028}
!12025 = !DILocalVariable(name: "Source", arg: 1, scope: !12023, file: !8777, line: 4304, type: !110)
!12026 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12023, file: !8777, line: 4304, type: !110)
!12027 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12023, file: !8777, line: 4304, type: !110)
!12028 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12023, file: !8777, line: 4304, type: !110)
!12029 = !DILocation(line: 0, scope: !12023)
!12030 = !DILocation(line: 4306, column: 3, scope: !12023)
!12031 = !DILocation(line: 4308, column: 3, scope: !12023)
!12032 = !DILocation(line: 4312, column: 1, scope: !12023)
!12033 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11829, file: !11829, line: 681, type: !12034, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !12036)
!12034 = !DISubroutineType(types: !12035)
!12035 = !{!11872, !110, !11946}
!12036 = !{!12037, !12038, !12039, !12040}
!12037 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12033, file: !11829, line: 681, type: !110)
!12038 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12033, file: !11829, line: 681, type: !11946)
!12039 = !DILocalVariable(name: "status", scope: !12033, file: !11829, line: 683, type: !11872)
!12040 = !DILocalVariable(name: "hclk_frequency", scope: !12033, file: !11829, line: 684, type: !110)
!12041 = !DILocation(line: 0, scope: !12033)
!12042 = !DILocation(line: 691, column: 20, scope: !12033)
!12043 = !DILocation(line: 694, column: 6, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12033, file: !11829, line: 694, column: 6)
!12045 = !DILocation(line: 694, column: 22, scope: !12044)
!12046 = !DILocation(line: 694, column: 6, scope: !12033)
!12047 = !DILocation(line: 697, column: 14, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12044, file: !11829, line: 695, column: 3)
!12049 = !DILocation(line: 701, column: 13, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12033, file: !11829, line: 701, column: 6)
!12051 = !DILocation(line: 701, column: 6, scope: !12033)
!12052 = !DILocation(line: 704, column: 5, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12050, file: !11829, line: 702, column: 3)
!12054 = !DILocation(line: 705, column: 5, scope: !12053)
!12055 = !DILocation(line: 705, column: 12, scope: !12053)
!12056 = !DILocation(line: 705, column: 33, scope: !12053)
!12057 = distinct !{!12057, !12054, !12058}
!12058 = !DILocation(line: 708, column: 5, scope: !12053)
!12059 = !DILocation(line: 711, column: 49, scope: !12053)
!12060 = !DILocation(line: 711, column: 5, scope: !12053)
!12061 = !DILocation(line: 712, column: 5, scope: !12053)
!12062 = !DILocation(line: 713, column: 5, scope: !12053)
!12063 = !DILocation(line: 713, column: 12, scope: !12053)
!12064 = !DILocation(line: 713, column: 37, scope: !12053)
!12065 = distinct !{!12065, !12062, !12066}
!12066 = !DILocation(line: 716, column: 5, scope: !12053)
!12067 = !DILocation(line: 719, column: 50, scope: !12053)
!12068 = !DILocation(line: 719, column: 5, scope: !12053)
!12069 = !DILocation(line: 720, column: 50, scope: !12053)
!12070 = !DILocation(line: 720, column: 5, scope: !12053)
!12071 = !DILocation(line: 721, column: 3, scope: !12053)
!12072 = !DILocation(line: 724, column: 6, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12033, file: !11829, line: 724, column: 6)
!12074 = !DILocation(line: 724, column: 22, scope: !12073)
!12075 = !DILocation(line: 724, column: 6, scope: !12033)
!12076 = !DILocation(line: 727, column: 14, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12073, file: !11829, line: 725, column: 3)
!12078 = !DILocation(line: 728, column: 3, scope: !12077)
!12079 = !DILocation(line: 731, column: 13, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12033, file: !11829, line: 731, column: 6)
!12081 = !DILocation(line: 731, column: 6, scope: !12033)
!12082 = !DILocation(line: 733, column: 5, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12080, file: !11829, line: 732, column: 3)
!12084 = !DILocation(line: 734, column: 3, scope: !12083)
!12085 = !DILocation(line: 736, column: 3, scope: !12033)
!12086 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8777, file: !8777, line: 4184, type: !3116, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!12087 = !DILocation(line: 4186, column: 3, scope: !12086)
!12088 = !DILocation(line: 4187, column: 1, scope: !12086)
!12089 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8777, file: !8777, line: 4205, type: !6524, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!12090 = !DILocation(line: 4207, column: 11, scope: !12089)
!12091 = !DILocation(line: 4207, column: 44, scope: !12089)
!12092 = !DILocation(line: 4207, column: 3, scope: !12089)
!12093 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8777, file: !8777, line: 3224, type: !6534, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !12094)
!12094 = !{!12095}
!12095 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12093, file: !8777, line: 3224, type: !110)
!12096 = !DILocation(line: 0, scope: !12093)
!12097 = !DILocation(line: 3226, column: 3, scope: !12093)
!12098 = !DILocation(line: 3227, column: 1, scope: !12093)
!12099 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8777, file: !8777, line: 3188, type: !6534, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !12100)
!12100 = !{!12101}
!12101 = !DILocalVariable(name: "Source", arg: 1, scope: !12099, file: !8777, line: 3188, type: !110)
!12102 = !DILocation(line: 0, scope: !12099)
!12103 = !DILocation(line: 3190, column: 3, scope: !12099)
!12104 = !DILocation(line: 3191, column: 1, scope: !12099)
!12105 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8777, file: !8777, line: 3204, type: !6524, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!12106 = !DILocation(line: 3206, column: 21, scope: !12105)
!12107 = !DILocation(line: 3206, column: 3, scope: !12105)
!12108 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8777, file: !8777, line: 3240, type: !6534, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !12109)
!12109 = !{!12110}
!12110 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12108, file: !8777, line: 3240, type: !110)
!12111 = !DILocation(line: 0, scope: !12108)
!12112 = !DILocation(line: 3242, column: 3, scope: !12108)
!12113 = !DILocation(line: 3243, column: 1, scope: !12108)
!12114 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8777, file: !8777, line: 3256, type: !6534, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !12115)
!12115 = !{!12116}
!12116 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12114, file: !8777, line: 3256, type: !110)
!12117 = !DILocation(line: 0, scope: !12114)
!12118 = !DILocation(line: 3258, column: 3, scope: !12114)
!12119 = !DILocation(line: 3259, column: 1, scope: !12114)
!12120 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8777, file: !8777, line: 5153, type: !6524, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!12121 = !DILocation(line: 5155, column: 11, scope: !12120)
!12122 = !DILocation(line: 5155, column: 47, scope: !12120)
!12123 = !DILocation(line: 5155, column: 3, scope: !12120)
!12124 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11829, file: !11829, line: 540, type: !12125, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !12127)
!12125 = !DISubroutineType(types: !12126)
!12126 = !{!11872, !110, !110, !11939, !11946}
!12127 = !{!12128, !12129, !12130, !12131, !12132, !12133}
!12128 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12124, file: !11829, line: 540, type: !110)
!12129 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12124, file: !11829, line: 540, type: !110)
!12130 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12124, file: !11829, line: 541, type: !11939)
!12131 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12124, file: !11829, line: 541, type: !11946)
!12132 = !DILocalVariable(name: "status", scope: !12124, file: !11829, line: 543, type: !11872)
!12133 = !DILocalVariable(name: "pllfreq", scope: !12124, file: !11829, line: 544, type: !110)
!12134 = !DILocation(line: 0, scope: !12124)
!12135 = !DILocation(line: 551, column: 6, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12124, file: !11829, line: 551, column: 6)
!12137 = !DILocation(line: 551, column: 25, scope: !12136)
!12138 = !DILocation(line: 551, column: 6, scope: !12124)
!12139 = !DILocation(line: 554, column: 15, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12136, file: !11829, line: 552, column: 3)
!12141 = !DILocation(line: 557, column: 8, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12140, file: !11829, line: 557, column: 8)
!12143 = !DILocation(line: 557, column: 29, scope: !12142)
!12144 = !DILocation(line: 557, column: 8, scope: !12140)
!12145 = !DILocation(line: 560, column: 20, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12147, file: !11829, line: 560, column: 10)
!12147 = distinct !DILexicalBlock(scope: !12142, file: !11829, line: 558, column: 5)
!12148 = !DILocation(line: 560, column: 10, scope: !12147)
!12149 = !DILocation(line: 562, column: 9, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12146, file: !11829, line: 561, column: 7)
!12151 = !DILocation(line: 563, column: 7, scope: !12150)
!12152 = !DILocation(line: 566, column: 9, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12146, file: !11829, line: 565, column: 7)
!12154 = !DILocation(line: 570, column: 7, scope: !12147)
!12155 = !DILocation(line: 571, column: 7, scope: !12147)
!12156 = !DILocation(line: 571, column: 14, scope: !12147)
!12157 = !DILocation(line: 571, column: 35, scope: !12147)
!12158 = distinct !{!12158, !12155, !12159}
!12159 = !DILocation(line: 574, column: 7, scope: !12147)
!12160 = !DILocation(line: 578, column: 76, scope: !12140)
!12161 = !DILocation(line: 578, column: 103, scope: !12140)
!12162 = !DILocation(line: 579, column: 54, scope: !12140)
!12163 = !DILocation(line: 578, column: 5, scope: !12140)
!12164 = !DILocation(line: 582, column: 14, scope: !12140)
!12165 = !DILocation(line: 583, column: 3, scope: !12140)
!12166 = !DILocation(line: 0, scope: !12136)
!12167 = !DILocation(line: 590, column: 3, scope: !12124)
!12168 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8777, file: !8777, line: 2969, type: !6524, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!12169 = !DILocation(line: 2971, column: 11, scope: !12168)
!12170 = !DILocation(line: 2971, column: 44, scope: !12168)
!12171 = !DILocation(line: 2971, column: 3, scope: !12168)
!12172 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8777, file: !8777, line: 2929, type: !3116, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!12173 = !DILocation(line: 2931, column: 3, scope: !12172)
!12174 = !DILocation(line: 2932, column: 1, scope: !12172)
!12175 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8777, file: !8777, line: 2939, type: !3116, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!12176 = !DILocation(line: 2941, column: 3, scope: !12175)
!12177 = !DILocation(line: 2942, column: 1, scope: !12175)
!12178 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8777, file: !8777, line: 2949, type: !3116, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !2050)
!12179 = !DILocation(line: 2951, column: 3, scope: !12178)
!12180 = !DILocation(line: 2952, column: 1, scope: !12178)
!12181 = distinct !DISubprogram(name: "z_device_state_init", scope: !12182, file: !12182, line: 23, type: !3116, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !12183)
!12182 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12183 = !{!12184}
!12184 = !DILocalVariable(name: "dev", scope: !12181, file: !12182, line: 25, type: !12185)
!12185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12186, size: 32)
!12186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12187)
!12187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !12188)
!12188 = !{!12189, !12190, !12191, !12192, !12198, !12199}
!12189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12187, file: !336, line: 380, baseType: !279, size: 32)
!12190 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12187, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!12191 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12187, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!12192 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12187, file: !336, line: 386, baseType: !12193, size: 32, offset: 96)
!12193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12194, size: 32)
!12194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !12195)
!12195 = !{!12196, !12197}
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12194, file: !336, line: 359, baseType: !180, size: 8)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12194, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12187, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12187, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!12200 = !DILocation(line: 0, scope: !12181)
!12201 = !DILocation(line: 31, column: 1, scope: !12181)
!12202 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12182, file: !12182, line: 33, type: !12203, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !12205)
!12203 = !DISubroutineType(types: !12204)
!12204 = !{!12185, !279}
!12205 = !{!12206, !12207}
!12206 = !DILocalVariable(name: "name", arg: 1, scope: !12202, file: !12182, line: 33, type: !279)
!12207 = !DILocalVariable(name: "dev", scope: !12202, file: !12182, line: 35, type: !12185)
!12208 = !DILocation(line: 0, scope: !12202)
!12209 = !DILocation(line: 40, column: 12, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12202, file: !12182, line: 40, column: 6)
!12211 = !DILocation(line: 40, column: 21, scope: !12210)
!12212 = !DILocation(line: 40, column: 25, scope: !12210)
!12213 = !DILocation(line: 40, column: 33, scope: !12210)
!12214 = !DILocation(line: 40, column: 6, scope: !12202)
!12215 = !DILocation(line: 55, column: 2, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12202, file: !12182, line: 55, column: 2)
!12217 = !DILocation(line: 50, column: 7, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12219, file: !12182, line: 50, column: 7)
!12219 = distinct !DILexicalBlock(scope: !12220, file: !12182, line: 49, column: 57)
!12220 = distinct !DILexicalBlock(scope: !12221, file: !12182, line: 49, column: 2)
!12221 = distinct !DILexicalBlock(scope: !12202, file: !12182, line: 49, column: 2)
!12222 = !DILocation(line: 50, column: 30, scope: !12218)
!12223 = !DILocation(line: 50, column: 39, scope: !12218)
!12224 = !DILocation(line: 50, column: 44, scope: !12218)
!12225 = !DILocation(line: 50, column: 7, scope: !12219)
!12226 = !DILocation(line: 49, column: 53, scope: !12220)
!12227 = !DILocation(line: 49, column: 33, scope: !12220)
!12228 = !DILocation(line: 49, column: 2, scope: !12221)
!12229 = distinct !{!12229, !12228, !12230}
!12230 = !DILocation(line: 53, column: 2, scope: !12221)
!12231 = !DILocation(line: 56, column: 7, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !12182, line: 56, column: 7)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !12182, line: 55, column: 57)
!12234 = distinct !DILexicalBlock(scope: !12216, file: !12182, line: 55, column: 2)
!12235 = !DILocation(line: 56, column: 30, scope: !12232)
!12236 = !DILocation(line: 56, column: 52, scope: !12232)
!12237 = !DILocation(line: 56, column: 34, scope: !12232)
!12238 = !DILocation(line: 56, column: 58, scope: !12232)
!12239 = !DILocation(line: 56, column: 7, scope: !12233)
!12240 = !DILocation(line: 55, column: 53, scope: !12234)
!12241 = !DILocation(line: 55, column: 33, scope: !12234)
!12242 = distinct !{!12242, !12215, !12243}
!12243 = !DILocation(line: 59, column: 2, scope: !12216)
!12244 = !DILocation(line: 62, column: 1, scope: !12202)
!12245 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12182, file: !12182, line: 93, type: !12246, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !12248)
!12246 = !DISubroutineType(types: !12247)
!12247 = !{!347, !12185}
!12248 = !{!12249}
!12249 = !DILocalVariable(name: "dev", arg: 1, scope: !12245, file: !12182, line: 93, type: !12185)
!12250 = !DILocation(line: 0, scope: !12245)
!12251 = !DILocation(line: 99, column: 10, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12245, file: !12182, line: 99, column: 6)
!12253 = !DILocation(line: 99, column: 6, scope: !12245)
!12254 = !DILocation(line: 103, column: 14, scope: !12245)
!12255 = !DILocation(line: 103, column: 21, scope: !12245)
!12256 = !DILocation(line: 103, column: 33, scope: !12245)
!12257 = !DILocation(line: 103, column: 49, scope: !12245)
!12258 = !DILocation(line: 103, column: 58, scope: !12245)
!12259 = !DILocation(line: 104, column: 1, scope: !12245)
!12260 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12182, file: !12182, line: 87, type: !12261, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !12264)
!12261 = !DISubroutineType(types: !12262)
!12262 = !{!234, !12263}
!12263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12185, size: 32)
!12264 = !{!12265}
!12265 = !DILocalVariable(name: "devices", arg: 1, scope: !12260, file: !12182, line: 87, type: !12263)
!12266 = !DILocation(line: 0, scope: !12260)
!12267 = !DILocation(line: 89, column: 11, scope: !12260)
!12268 = !DILocation(line: 90, column: 2, scope: !12260)
!12269 = distinct !DISubprogram(name: "device_required_foreach", scope: !12182, file: !12182, line: 125, type: !12270, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !12276)
!12270 = !DISubroutineType(types: !12271)
!12271 = !{!109, !12185, !12272, !107}
!12272 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !336, line: 471, baseType: !12273)
!12273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12274, size: 32)
!12274 = !DISubroutineType(types: !12275)
!12275 = !{!109, !12185, !107}
!12276 = !{!12277, !12278, !12279, !12280, !12281}
!12277 = !DILocalVariable(name: "dev", arg: 1, scope: !12269, file: !12182, line: 125, type: !12185)
!12278 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12269, file: !12182, line: 126, type: !12272)
!12279 = !DILocalVariable(name: "context", arg: 3, scope: !12269, file: !12182, line: 127, type: !107)
!12280 = !DILocalVariable(name: "handle_count", scope: !12269, file: !12182, line: 129, type: !234)
!12281 = !DILocalVariable(name: "handles", scope: !12269, file: !12182, line: 130, type: !350)
!12282 = !DILocation(line: 0, scope: !12269)
!12283 = !DILocation(line: 129, column: 2, scope: !12269)
!12284 = !DILocation(line: 129, column: 9, scope: !12269)
!12285 = !DILocation(line: 130, column: 35, scope: !12269)
!12286 = !DILocation(line: 132, column: 33, scope: !12269)
!12287 = !DILocation(line: 132, column: 9, scope: !12269)
!12288 = !DILocation(line: 133, column: 1, scope: !12269)
!12289 = !DILocation(line: 132, column: 2, scope: !12269)
!12290 = distinct !DISubprogram(name: "device_required_handles_get", scope: !336, file: !336, line: 493, type: !12291, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !12293)
!12291 = !DISubroutineType(types: !12292)
!12292 = !{!350, !12185, !2566}
!12293 = !{!12294, !12295, !12296, !12297}
!12294 = !DILocalVariable(name: "dev", arg: 1, scope: !12290, file: !336, line: 493, type: !12185)
!12295 = !DILocalVariable(name: "count", arg: 2, scope: !12290, file: !336, line: 493, type: !2566)
!12296 = !DILocalVariable(name: "rv", scope: !12290, file: !336, line: 495, type: !350)
!12297 = !DILocalVariable(name: "i", scope: !12298, file: !336, line: 498, type: !234)
!12298 = distinct !DILexicalBlock(scope: !12299, file: !336, line: 497, column: 18)
!12299 = distinct !DILexicalBlock(scope: !12290, file: !336, line: 497, column: 6)
!12300 = !DILocation(line: 0, scope: !12290)
!12301 = !DILocation(line: 495, column: 35, scope: !12290)
!12302 = !DILocation(line: 497, column: 9, scope: !12299)
!12303 = !DILocation(line: 497, column: 6, scope: !12290)
!12304 = !DILocation(line: 0, scope: !12298)
!12305 = !DILocation(line: 500, column: 11, scope: !12298)
!12306 = !DILocation(line: 500, column: 40, scope: !12298)
!12307 = !DILocation(line: 502, column: 4, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12298, file: !336, line: 501, column: 40)
!12309 = distinct !{!12309, !12310, !12311}
!12310 = !DILocation(line: 500, column: 3, scope: !12298)
!12311 = !DILocation(line: 503, column: 3, scope: !12298)
!12312 = !DILocation(line: 504, column: 10, scope: !12298)
!12313 = !DILocation(line: 505, column: 2, scope: !12298)
!12314 = !DILocation(line: 507, column: 2, scope: !12290)
!12315 = distinct !DISubprogram(name: "device_visitor", scope: !12182, file: !12182, line: 106, type: !12316, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !12318)
!12316 = !DISubroutineType(types: !12317)
!12317 = !{!109, !350, !234, !12272, !107}
!12318 = !{!12319, !12320, !12321, !12322, !12323, !12325, !12328, !12329}
!12319 = !DILocalVariable(name: "handles", arg: 1, scope: !12315, file: !12182, line: 106, type: !350)
!12320 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12315, file: !12182, line: 107, type: !234)
!12321 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12315, file: !12182, line: 108, type: !12272)
!12322 = !DILocalVariable(name: "context", arg: 4, scope: !12315, file: !12182, line: 109, type: !107)
!12323 = !DILocalVariable(name: "i", scope: !12324, file: !12182, line: 112, type: !234)
!12324 = distinct !DILexicalBlock(scope: !12315, file: !12182, line: 112, column: 2)
!12325 = !DILocalVariable(name: "dh", scope: !12326, file: !12182, line: 113, type: !352)
!12326 = distinct !DILexicalBlock(scope: !12327, file: !12182, line: 112, column: 44)
!12327 = distinct !DILexicalBlock(scope: !12324, file: !12182, line: 112, column: 2)
!12328 = !DILocalVariable(name: "rdev", scope: !12326, file: !12182, line: 114, type: !12185)
!12329 = !DILocalVariable(name: "rc", scope: !12326, file: !12182, line: 115, type: !109)
!12330 = !DILocation(line: 0, scope: !12315)
!12331 = !DILocation(line: 0, scope: !12324)
!12332 = !DILocation(line: 112, column: 23, scope: !12327)
!12333 = !DILocation(line: 112, column: 2, scope: !12324)
!12334 = distinct !{!12334, !12333, !12335}
!12335 = !DILocation(line: 120, column: 2, scope: !12324)
!12336 = !DILocation(line: 113, column: 24, scope: !12326)
!12337 = !DILocation(line: 0, scope: !12326)
!12338 = !DILocation(line: 114, column: 31, scope: !12326)
!12339 = !DILocation(line: 115, column: 12, scope: !12326)
!12340 = !DILocation(line: 117, column: 10, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12326, file: !12182, line: 117, column: 7)
!12342 = !DILocation(line: 112, column: 39, scope: !12327)
!12343 = !DILocation(line: 123, column: 1, scope: !12315)
!12344 = distinct !DISubprogram(name: "device_from_handle", scope: !336, file: !336, line: 439, type: !12345, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !12347)
!12345 = !DISubroutineType(types: !12346)
!12346 = !{!12185, !352}
!12347 = !{!12348, !12349, !12350}
!12348 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12344, file: !336, line: 439, type: !352)
!12349 = !DILocalVariable(name: "dev", scope: !12344, file: !336, line: 443, type: !12185)
!12350 = !DILocalVariable(name: "numdev", scope: !12344, file: !336, line: 444, type: !234)
!12351 = !DILocation(line: 0, scope: !12344)
!12352 = !DILocation(line: 446, column: 7, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12344, file: !336, line: 446, column: 6)
!12354 = !DILocation(line: 446, column: 18, scope: !12353)
!12355 = !DILocation(line: 446, column: 23, scope: !12353)
!12356 = !DILocation(line: 450, column: 2, scope: !12344)
!12357 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12182, file: !12182, line: 135, type: !12270, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !12358)
!12358 = !{!12359, !12360, !12361, !12362, !12363}
!12359 = !DILocalVariable(name: "dev", arg: 1, scope: !12357, file: !12182, line: 135, type: !12185)
!12360 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12357, file: !12182, line: 136, type: !12272)
!12361 = !DILocalVariable(name: "context", arg: 3, scope: !12357, file: !12182, line: 137, type: !107)
!12362 = !DILocalVariable(name: "handle_count", scope: !12357, file: !12182, line: 139, type: !234)
!12363 = !DILocalVariable(name: "handles", scope: !12357, file: !12182, line: 140, type: !350)
!12364 = !DILocation(line: 0, scope: !12357)
!12365 = !DILocation(line: 139, column: 2, scope: !12357)
!12366 = !DILocation(line: 139, column: 9, scope: !12357)
!12367 = !DILocation(line: 140, column: 35, scope: !12357)
!12368 = !DILocation(line: 142, column: 33, scope: !12357)
!12369 = !DILocation(line: 142, column: 9, scope: !12357)
!12370 = !DILocation(line: 143, column: 1, scope: !12357)
!12371 = !DILocation(line: 142, column: 2, scope: !12357)
!12372 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !336, file: !336, line: 573, type: !12291, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !12373)
!12373 = !{!12374, !12375, !12376, !12377, !12378}
!12374 = !DILocalVariable(name: "dev", arg: 1, scope: !12372, file: !336, line: 573, type: !12185)
!12375 = !DILocalVariable(name: "count", arg: 2, scope: !12372, file: !336, line: 573, type: !2566)
!12376 = !DILocalVariable(name: "rv", scope: !12372, file: !336, line: 575, type: !350)
!12377 = !DILocalVariable(name: "region", scope: !12372, file: !336, line: 576, type: !234)
!12378 = !DILocalVariable(name: "i", scope: !12372, file: !336, line: 577, type: !234)
!12379 = !DILocation(line: 0, scope: !12372)
!12380 = !DILocation(line: 575, column: 35, scope: !12372)
!12381 = !DILocation(line: 579, column: 9, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12372, file: !336, line: 579, column: 6)
!12383 = !DILocation(line: 579, column: 6, scope: !12372)
!12384 = !DILocation(line: 582, column: 8, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12386, file: !336, line: 582, column: 8)
!12386 = distinct !DILexicalBlock(scope: !12387, file: !336, line: 581, column: 23)
!12387 = distinct !DILexicalBlock(scope: !12382, file: !336, line: 579, column: 18)
!12388 = !DILocation(line: 582, column: 12, scope: !12385)
!12389 = !DILocation(line: 585, column: 6, scope: !12386)
!12390 = !DILocation(line: 0, scope: !12387)
!12391 = !DILocation(line: 581, column: 17, scope: !12387)
!12392 = !DILocation(line: 581, column: 3, scope: !12387)
!12393 = !DILocation(line: 588, column: 10, scope: !12387)
!12394 = !DILocation(line: 588, column: 16, scope: !12387)
!12395 = !DILocation(line: 589, column: 4, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12387, file: !336, line: 588, column: 39)
!12397 = !DILocation(line: 588, column: 3, scope: !12387)
!12398 = distinct !{!12398, !12397, !12399}
!12399 = !DILocation(line: 590, column: 3, scope: !12387)
!12400 = !DILocation(line: 591, column: 10, scope: !12387)
!12401 = !DILocation(line: 592, column: 2, scope: !12387)
!12402 = !DILocation(line: 575, column: 25, scope: !12372)
!12403 = !DILocation(line: 594, column: 2, scope: !12372)
!12404 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1841, file: !1841, line: 49, type: !12405, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !2050)
!12405 = !DISubroutineType(types: !12406)
!12406 = !{!281}
!12407 = !DILocation(line: 51, column: 10, scope: !12404)
!12408 = !DILocation(line: 51, column: 20, scope: !12404)
!12409 = !DILocation(line: 51, column: 2, scope: !12404)
!12410 = distinct !DISubprogram(name: "coredump", scope: !3083, file: !3083, line: 209, type: !12411, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12560)
!12411 = !DISubroutineType(types: !12412)
!12412 = !{null, !32, !12413, !12457}
!12413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12414, size: 32)
!12414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12415)
!12415 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2696, line: 141, baseType: !12416)
!12416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2696, line: 97, size: 256, elements: !12417)
!12417 = !{!12418}
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12416, file: !2696, line: 107, baseType: !12419, size: 256)
!12419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2696, line: 98, size: 256, elements: !12420)
!12420 = !{!12421, !12426, !12431, !12436, !12441, !12446, !12451, !12456}
!12421 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2696, line: 99, baseType: !12422, size: 32)
!12422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2696, line: 99, size: 32, elements: !12423)
!12423 = !{!12424, !12425}
!12424 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12422, file: !2696, line: 99, baseType: !110, size: 32)
!12425 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12422, file: !2696, line: 99, baseType: !110, size: 32)
!12426 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2696, line: 100, baseType: !12427, size: 32, offset: 32)
!12427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2696, line: 100, size: 32, elements: !12428)
!12428 = !{!12429, !12430}
!12429 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12427, file: !2696, line: 100, baseType: !110, size: 32)
!12430 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12427, file: !2696, line: 100, baseType: !110, size: 32)
!12431 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2696, line: 101, baseType: !12432, size: 32, offset: 64)
!12432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2696, line: 101, size: 32, elements: !12433)
!12433 = !{!12434, !12435}
!12434 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12432, file: !2696, line: 101, baseType: !110, size: 32)
!12435 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12432, file: !2696, line: 101, baseType: !110, size: 32)
!12436 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2696, line: 102, baseType: !12437, size: 32, offset: 96)
!12437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2696, line: 102, size: 32, elements: !12438)
!12438 = !{!12439, !12440}
!12439 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12437, file: !2696, line: 102, baseType: !110, size: 32)
!12440 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12437, file: !2696, line: 102, baseType: !110, size: 32)
!12441 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2696, line: 103, baseType: !12442, size: 32, offset: 128)
!12442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2696, line: 103, size: 32, elements: !12443)
!12443 = !{!12444, !12445}
!12444 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12442, file: !2696, line: 103, baseType: !110, size: 32)
!12445 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12442, file: !2696, line: 103, baseType: !110, size: 32)
!12446 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2696, line: 104, baseType: !12447, size: 32, offset: 160)
!12447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2696, line: 104, size: 32, elements: !12448)
!12448 = !{!12449, !12450}
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12447, file: !2696, line: 104, baseType: !110, size: 32)
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12447, file: !2696, line: 104, baseType: !110, size: 32)
!12451 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2696, line: 105, baseType: !12452, size: 32, offset: 192)
!12452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2696, line: 105, size: 32, elements: !12453)
!12453 = !{!12454, !12455}
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12452, file: !2696, line: 105, baseType: !110, size: 32)
!12455 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12452, file: !2696, line: 105, baseType: !110, size: 32)
!12456 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12419, file: !2696, line: 106, baseType: !110, size: 32, offset: 224)
!12457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12458, size: 32)
!12458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !12459)
!12459 = !{!12460, !12518, !12530, !12531, !12532, !12533, !12534, !12540, !12555}
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12458, file: !158, line: 247, baseType: !12461, size: 384)
!12461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !12462)
!12462 = !{!12463, !12487, !12494, !12495, !12496, !12505, !12506, !12507}
!12463 = !DIDerivedType(tag: DW_TAG_member, scope: !12461, file: !158, line: 60, baseType: !12464, size: 64)
!12464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12461, file: !158, line: 60, size: 64, elements: !12465)
!12465 = !{!12466, !12481}
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12464, file: !158, line: 61, baseType: !12467, size: 64)
!12467 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !12468)
!12468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !12469)
!12469 = !{!12470, !12476}
!12470 = !DIDerivedType(tag: DW_TAG_member, scope: !12468, file: !127, line: 38, baseType: !12471, size: 32)
!12471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12468, file: !127, line: 38, size: 32, elements: !12472)
!12472 = !{!12473, !12475}
!12473 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12471, file: !127, line: 39, baseType: !12474, size: 32)
!12474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12468, size: 32)
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12471, file: !127, line: 40, baseType: !12474, size: 32)
!12476 = !DIDerivedType(tag: DW_TAG_member, scope: !12468, file: !127, line: 42, baseType: !12477, size: 32, offset: 32)
!12477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12468, file: !127, line: 42, size: 32, elements: !12478)
!12478 = !{!12479, !12480}
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12477, file: !127, line: 43, baseType: !12474, size: 32)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12477, file: !127, line: 44, baseType: !12474, size: 32)
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12464, file: !158, line: 62, baseType: !12482, size: 64)
!12482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !12483)
!12483 = !{!12484}
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12482, file: !170, line: 50, baseType: !12485, size: 64)
!12485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12486, size: 64, elements: !175)
!12486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12482, size: 32)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12461, file: !158, line: 68, baseType: !12488, size: 32, offset: 64)
!12488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12489, size: 32)
!12489 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !12490)
!12490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !12491)
!12491 = !{!12492}
!12492 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12490, file: !122, line: 232, baseType: !12493, size: 64)
!12493 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !12468)
!12494 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12461, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!12495 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12461, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!12496 = !DIDerivedType(tag: DW_TAG_member, scope: !12461, file: !158, line: 90, baseType: !12497, size: 16, offset: 112)
!12497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12461, file: !158, line: 90, size: 16, elements: !12498)
!12498 = !{!12499, !12504}
!12499 = !DIDerivedType(tag: DW_TAG_member, scope: !12497, file: !158, line: 91, baseType: !12500, size: 16)
!12500 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12497, file: !158, line: 91, size: 16, elements: !12501)
!12501 = !{!12502, !12503}
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12500, file: !158, line: 96, baseType: !190, size: 8)
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12500, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12497, file: !158, line: 100, baseType: !194, size: 16)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12461, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12461, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12461, file: !158, line: 131, baseType: !12508, size: 192, offset: 192)
!12508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !12509)
!12509 = !{!12510, !12511, !12517}
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12508, file: !122, line: 245, baseType: !12467, size: 64)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12508, file: !122, line: 246, baseType: !12512, size: 32, offset: 64)
!12512 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !12513)
!12513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12514, size: 32)
!12514 = !DISubroutineType(types: !12515)
!12515 = !{null, !12516}
!12516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12508, size: 32)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12508, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12458, file: !158, line: 250, baseType: !12519, size: 288, offset: 384)
!12519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !12520)
!12520 = !{!12521, !12522, !12523, !12524, !12525, !12526, !12527, !12528, !12529}
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12519, file: !211, line: 26, baseType: !110, size: 32)
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12519, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12519, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12519, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12519, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12519, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12519, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12519, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12519, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12458, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12458, file: !158, line: 256, baseType: !12489, size: 64, offset: 704)
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12458, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12458, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12458, file: !158, line: 300, baseType: !12535, size: 96, offset: 1056)
!12535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !12536)
!12536 = !{!12537, !12538, !12539}
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12535, file: !158, line: 153, baseType: !22, size: 32)
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12535, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12535, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12458, file: !158, line: 325, baseType: !12541, size: 32, offset: 1152)
!12541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12542, size: 32)
!12542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !12543)
!12543 = !{!12544, !12550, !12551}
!12544 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12542, file: !118, line: 5074, baseType: !12545, size: 96)
!12545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !12546)
!12546 = !{!12547, !12548, !12549}
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12545, file: !243, line: 57, baseType: !246, size: 32)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12545, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!12549 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12545, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12542, file: !118, line: 5075, baseType: !12489, size: 64, offset: 96)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12542, file: !118, line: 5076, baseType: !12552, size: 32, offset: 160)
!12552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !12553)
!12553 = !{!12554}
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12552, file: !253, line: 52, baseType: !22, size: 32)
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12458, file: !158, line: 343, baseType: !12556, size: 64, offset: 1184)
!12556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !12557)
!12557 = !{!12558, !12559}
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12556, file: !211, line: 63, baseType: !110, size: 32)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12556, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!12560 = !{!12561, !12562, !12563}
!12561 = !DILocalVariable(name: "reason", arg: 1, scope: !12410, file: !3083, line: 209, type: !32)
!12562 = !DILocalVariable(name: "esf", arg: 2, scope: !12410, file: !3083, line: 209, type: !12413)
!12563 = !DILocalVariable(name: "thread", arg: 3, scope: !12410, file: !3083, line: 210, type: !12457)
!12564 = !DILocation(line: 0, scope: !12410)
!12565 = !DILocation(line: 212, column: 1, scope: !12410)
!12566 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3083, file: !3083, line: 214, type: !12567, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12569)
!12567 = !DISubroutineType(types: !12568)
!12568 = !{null, !22, !22}
!12569 = !{!12570, !12571}
!12570 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12566, file: !3083, line: 214, type: !22)
!12571 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12566, file: !3083, line: 214, type: !22)
!12572 = !DILocation(line: 0, scope: !12566)
!12573 = !DILocation(line: 216, column: 1, scope: !12566)
!12574 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3083, file: !3083, line: 218, type: !12575, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12577)
!12575 = !DISubroutineType(types: !12576)
!12576 = !{null, !286, !234}
!12577 = !{!12578, !12579}
!12578 = !DILocalVariable(name: "buf", arg: 1, scope: !12574, file: !3083, line: 218, type: !286)
!12579 = !DILocalVariable(name: "buflen", arg: 2, scope: !12574, file: !3083, line: 218, type: !234)
!12580 = !DILocation(line: 0, scope: !12574)
!12581 = !DILocation(line: 220, column: 1, scope: !12574)
!12582 = distinct !DISubprogram(name: "coredump_query", scope: !3083, file: !3083, line: 222, type: !12583, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12585)
!12583 = !DISubroutineType(types: !12584)
!12584 = !{!109, !3082, !107}
!12585 = !{!12586, !12587}
!12586 = !DILocalVariable(name: "query_id", arg: 1, scope: !12582, file: !3083, line: 222, type: !3082)
!12587 = !DILocalVariable(name: "arg", arg: 2, scope: !12582, file: !3083, line: 222, type: !107)
!12588 = !DILocation(line: 0, scope: !12582)
!12589 = !DILocation(line: 224, column: 2, scope: !12582)
!12590 = distinct !DISubprogram(name: "coredump_cmd", scope: !3083, file: !3083, line: 227, type: !12591, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12593)
!12591 = !DISubroutineType(types: !12592)
!12592 = !{!109, !3089, !107}
!12593 = !{!12594, !12595}
!12594 = !DILocalVariable(name: "query_id", arg: 1, scope: !12590, file: !3083, line: 227, type: !3089)
!12595 = !DILocalVariable(name: "arg", arg: 2, scope: !12590, file: !3083, line: 227, type: !107)
!12596 = !DILocation(line: 0, scope: !12590)
!12597 = !DILocation(line: 229, column: 2, scope: !12590)
!12598 = distinct !DISubprogram(name: "arch_system_halt", scope: !12599, file: !12599, line: 23, type: !6127, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12600)
!12599 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12600 = !{!12601}
!12601 = !DILocalVariable(name: "reason", arg: 1, scope: !12598, file: !12599, line: 23, type: !32)
!12602 = !DILocation(line: 0, scope: !12598)
!12603 = !DILocation(line: 55, column: 2, scope: !12604, inlinedAt: !12608)
!12604 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6116, file: !6116, line: 42, type: !6117, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12605)
!12605 = !{!12606, !12607}
!12606 = !DILocalVariable(name: "key", scope: !12604, file: !6116, line: 44, type: !32)
!12607 = !DILocalVariable(name: "tmp", scope: !12604, file: !6116, line: 53, type: !32)
!12608 = distinct !DILocation(line: 31, column: 8, scope: !12598)
!12609 = !{i64 2042649}
!12610 = !DILocation(line: 0, scope: !12604, inlinedAt: !12608)
!12611 = !DILocation(line: 32, column: 2, scope: !12598)
!12612 = !DILocation(line: 32, column: 2, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12614, file: !12599, line: 32, column: 2)
!12614 = distinct !DILexicalBlock(scope: !12598, file: !12599, line: 32, column: 2)
!12615 = distinct !{!12615, !12616, !12617}
!12616 = !DILocation(line: 32, column: 2, scope: !12614)
!12617 = !DILocation(line: 34, column: 2, scope: !12614)
!12618 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12599, file: !12599, line: 39, type: !12619, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12621)
!12619 = !DISubroutineType(types: !12620)
!12620 = !{null, !32, !12413}
!12621 = !{!12622, !12623}
!12622 = !DILocalVariable(name: "reason", arg: 1, scope: !12618, file: !12599, line: 39, type: !32)
!12623 = !DILocalVariable(name: "esf", arg: 2, scope: !12618, file: !12599, line: 40, type: !12413)
!12624 = !DILocation(line: 0, scope: !12618)
!12625 = !DILocation(line: 45, column: 2, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12599, line: 45, column: 2)
!12627 = distinct !DILexicalBlock(scope: !12628, file: !12599, line: 45, column: 2)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !12599, line: 45, column: 2)
!12629 = distinct !DILexicalBlock(scope: !12618, file: !12599, line: 45, column: 2)
!12630 = !DILocation(line: 46, column: 2, scope: !12618)
!12631 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12599, file: !12599, line: 81, type: !6127, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12632)
!12632 = !{!12633}
!12633 = !DILocalVariable(name: "reason", arg: 1, scope: !12631, file: !12599, line: 81, type: !32)
!12634 = !DILocation(line: 0, scope: !12631)
!12635 = !DILocation(line: 83, column: 2, scope: !12631)
!12636 = distinct !DISubprogram(name: "z_fatal_error", scope: !12599, file: !12599, line: 96, type: !12619, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12637)
!12637 = !{!12638, !12639, !12640, !12641}
!12638 = !DILocalVariable(name: "reason", arg: 1, scope: !12636, file: !12599, line: 96, type: !32)
!12639 = !DILocalVariable(name: "esf", arg: 2, scope: !12636, file: !12599, line: 96, type: !12413)
!12640 = !DILocalVariable(name: "key", scope: !12636, file: !12599, line: 102, type: !32)
!12641 = !DILocalVariable(name: "thread", scope: !12636, file: !12599, line: 103, type: !12457)
!12642 = !DILocation(line: 0, scope: !12636)
!12643 = !DILocation(line: 55, column: 2, scope: !12604, inlinedAt: !12644)
!12644 = distinct !DILocation(line: 102, column: 21, scope: !12636)
!12645 = !DILocation(line: 0, scope: !12604, inlinedAt: !12644)
!12646 = !DILocation(line: 104, column: 4, scope: !12636)
!12647 = !DILocation(line: 109, column: 2, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12649, file: !12599, line: 109, column: 2)
!12649 = distinct !DILexicalBlock(scope: !12650, file: !12599, line: 109, column: 2)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12599, line: 109, column: 2)
!12651 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 109, column: 2)
!12652 = !DILocation(line: 119, column: 11, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 119, column: 6)
!12654 = !DILocation(line: 119, column: 20, scope: !12653)
!12655 = !DILocalVariable(name: "esf", arg: 1, scope: !12656, file: !7489, line: 71, type: !12413)
!12656 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7489, file: !7489, line: 71, type: !12657, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12659)
!12657 = !DISubroutineType(types: !12658)
!12658 = !{!347, !12413}
!12659 = !{!12655}
!12660 = !DILocation(line: 0, scope: !12656, inlinedAt: !12661)
!12661 = distinct !DILocation(line: 119, column: 23, scope: !12653)
!12662 = !DILocation(line: 73, column: 21, scope: !12656, inlinedAt: !12661)
!12663 = !DILocation(line: 73, column: 26, scope: !12656, inlinedAt: !12661)
!12664 = !DILocation(line: 73, column: 9, scope: !12656, inlinedAt: !12661)
!12665 = !DILocation(line: 119, column: 6, scope: !12636)
!12666 = !DILocation(line: 120, column: 3, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !12599, line: 120, column: 3)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !12599, line: 120, column: 3)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !12599, line: 120, column: 3)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !12599, line: 120, column: 3)
!12671 = distinct !DILexicalBlock(scope: !12653, file: !12599, line: 119, column: 57)
!12672 = !DILocation(line: 121, column: 2, scope: !12671)
!12673 = !DILocation(line: 124, column: 2, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12675, file: !12599, line: 124, column: 2)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !12599, line: 124, column: 2)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !12599, line: 124, column: 2)
!12677 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 124, column: 2)
!12678 = !DILocation(line: 131, column: 2, scope: !12636)
!12679 = !DILocation(line: 0, scope: !12656, inlinedAt: !12680)
!12680 = distinct !DILocation(line: 163, column: 24, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12682, file: !12599, line: 163, column: 7)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !12599, line: 160, column: 9)
!12683 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 146, column: 6)
!12684 = !DILocation(line: 73, column: 21, scope: !12656, inlinedAt: !12680)
!12685 = !DILocation(line: 73, column: 26, scope: !12656, inlinedAt: !12680)
!12686 = !DILocation(line: 73, column: 9, scope: !12656, inlinedAt: !12680)
!12687 = !DILocation(line: 163, column: 7, scope: !12682)
!12688 = !DILocalVariable(name: "key", arg: 1, scope: !12689, file: !6116, line: 84, type: !32)
!12689 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6116, file: !6116, line: 84, type: !6127, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12690)
!12690 = !{!12688}
!12691 = !DILocation(line: 0, scope: !12689, inlinedAt: !12692)
!12692 = distinct !DILocation(line: 171, column: 4, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12681, file: !12599, line: 163, column: 58)
!12694 = !DILocation(line: 95, column: 2, scope: !12689, inlinedAt: !12692)
!12695 = !{i64 2043466}
!12696 = !DILocation(line: 172, column: 4, scope: !12693)
!12697 = !DILocation(line: 163, column: 21, scope: !12681)
!12698 = !DILocation(line: 178, column: 15, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12700, file: !12599, line: 178, column: 8)
!12700 = distinct !DILexicalBlock(scope: !12681, file: !12599, line: 174, column: 10)
!12701 = !DILocation(line: 0, scope: !12689, inlinedAt: !12702)
!12702 = distinct !DILocation(line: 179, column: 5, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12699, file: !12599, line: 178, column: 38)
!12704 = !DILocation(line: 0, scope: !12689, inlinedAt: !12705)
!12705 = distinct !DILocation(line: 186, column: 2, scope: !12636)
!12706 = !DILocation(line: 178, column: 8, scope: !12700)
!12707 = !DILocation(line: 189, column: 3, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12709, file: !12599, line: 188, column: 41)
!12709 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 188, column: 6)
!12710 = !DILocation(line: 191, column: 1, scope: !12636)
!12711 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !12712, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !2050)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{!12714}
!12714 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !12457)
!12715 = !DILocation(line: 535, column: 9, scope: !12711)
!12716 = !DILocation(line: 535, column: 2, scope: !12711)
!12717 = distinct !DISubprogram(name: "reason_to_str", scope: !12599, file: !12599, line: 62, type: !12718, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12720)
!12718 = !DISubroutineType(types: !12719)
!12719 = !{!279, !32}
!12720 = !{!12721}
!12721 = !DILocalVariable(name: "reason", arg: 1, scope: !12717, file: !12599, line: 62, type: !32)
!12722 = !DILocation(line: 0, scope: !12717)
!12723 = !DILocation(line: 64, column: 2, scope: !12717)
!12724 = !DILocation(line: 0, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12717, file: !12599, line: 64, column: 18)
!12726 = !DILocation(line: 78, column: 1, scope: !12717)
!12727 = distinct !DISubprogram(name: "thread_name_get", scope: !12599, file: !12599, line: 51, type: !12728, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12730)
!12728 = !DISubroutineType(types: !12729)
!12729 = !{!279, !12457}
!12730 = !{!12731, !12732}
!12731 = !DILocalVariable(name: "thread", arg: 1, scope: !12727, file: !12599, line: 51, type: !12457)
!12732 = !DILocalVariable(name: "thread_name", scope: !12727, file: !12599, line: 53, type: !279)
!12733 = !DILocation(line: 0, scope: !12727)
!12734 = !DILocation(line: 53, column: 36, scope: !12727)
!12735 = !DILocation(line: 53, column: 28, scope: !12727)
!12736 = !DILocation(line: 53, column: 47, scope: !12727)
!12737 = !DILocation(line: 55, column: 19, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12727, file: !12599, line: 55, column: 6)
!12739 = !DILocation(line: 55, column: 28, scope: !12738)
!12740 = !DILocation(line: 55, column: 32, scope: !12738)
!12741 = !DILocation(line: 55, column: 47, scope: !12738)
!12742 = !DILocation(line: 55, column: 6, scope: !12727)
!12743 = !DILocation(line: 57, column: 2, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12738, file: !12599, line: 55, column: 57)
!12745 = !DILocation(line: 59, column: 2, scope: !12727)
!12746 = distinct !DISubprogram(name: "k_thread_abort", scope: !3262, file: !3262, line: 188, type: !12747, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !12749)
!12747 = !DISubroutineType(types: !12748)
!12748 = !{null, !12714}
!12749 = !{!12750}
!12750 = !DILocalVariable(name: "thread", arg: 1, scope: !12746, file: !3262, line: 188, type: !12714)
!12751 = !DILocation(line: 0, scope: !12746)
!12752 = !DILocation(line: 197, column: 2, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12746, file: !3262, line: 197, column: 2)
!12754 = !{i64 2154158970}
!12755 = !DILocation(line: 198, column: 2, scope: !12746)
!12756 = !DILocation(line: 199, column: 1, scope: !12746)
!12757 = distinct !DISubprogram(name: "z_current_get", scope: !3262, file: !3262, line: 173, type: !12712, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !2050)
!12758 = !DILocation(line: 180, column: 2, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12757, file: !3262, line: 180, column: 2)
!12760 = !{i64 2154158902}
!12761 = !DILocation(line: 181, column: 9, scope: !12757)
!12762 = !DILocation(line: 181, column: 2, scope: !12757)
!12763 = distinct !DISubprogram(name: "z_early_memset", scope: !1849, file: !1849, line: 108, type: !12764, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12766)
!12764 = !DISubroutineType(types: !12765)
!12765 = !{null, !107, !109, !234}
!12766 = !{!12767, !12768, !12769}
!12767 = !DILocalVariable(name: "dst", arg: 1, scope: !12763, file: !1849, line: 108, type: !107)
!12768 = !DILocalVariable(name: "c", arg: 2, scope: !12763, file: !1849, line: 108, type: !109)
!12769 = !DILocalVariable(name: "n", arg: 3, scope: !12763, file: !1849, line: 108, type: !234)
!12770 = !DILocation(line: 0, scope: !12763)
!12771 = !DILocation(line: 110, column: 9, scope: !12763)
!12772 = !DILocation(line: 111, column: 1, scope: !12763)
!12773 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1849, file: !1849, line: 121, type: !12774, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12776)
!12774 = !DISubroutineType(types: !12775)
!12775 = !{null, !107, !13, !234}
!12776 = !{!12777, !12778, !12779}
!12777 = !DILocalVariable(name: "dst", arg: 1, scope: !12773, file: !1849, line: 121, type: !107)
!12778 = !DILocalVariable(name: "src", arg: 2, scope: !12773, file: !1849, line: 121, type: !13)
!12779 = !DILocalVariable(name: "n", arg: 3, scope: !12773, file: !1849, line: 121, type: !234)
!12780 = !DILocation(line: 0, scope: !12773)
!12781 = !DILocation(line: 123, column: 9, scope: !12773)
!12782 = !DILocation(line: 124, column: 1, scope: !12773)
!12783 = distinct !DISubprogram(name: "z_bss_zero", scope: !1849, file: !1849, line: 132, type: !3116, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !2050)
!12784 = !DILocation(line: 143, column: 2, scope: !12783)
!12785 = !DILocation(line: 168, column: 1, scope: !12783)
!12786 = distinct !DISubprogram(name: "z_init_cpu", scope: !1849, file: !1849, line: 372, type: !8377, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12787)
!12787 = !{!12788}
!12788 = !DILocalVariable(name: "id", arg: 1, scope: !12786, file: !1849, line: 372, type: !109)
!12789 = !DILocation(line: 0, scope: !12786)
!12790 = !DILocation(line: 374, column: 2, scope: !12786)
!12791 = !DILocation(line: 375, column: 34, scope: !12786)
!12792 = !DILocation(line: 375, column: 19, scope: !12786)
!12793 = !DILocation(line: 375, column: 31, scope: !12786)
!12794 = !DILocation(line: 376, column: 24, scope: !12786)
!12795 = !DILocation(line: 376, column: 19, scope: !12786)
!12796 = !DILocation(line: 376, column: 22, scope: !12786)
!12797 = !DILocation(line: 378, column: 26, scope: !12786)
!12798 = !DILocation(line: 378, column: 4, scope: !12786)
!12799 = !DILocation(line: 378, column: 50, scope: !12786)
!12800 = !DILocation(line: 377, column: 19, scope: !12786)
!12801 = !DILocation(line: 377, column: 29, scope: !12786)
!12802 = !DILocation(line: 384, column: 1, scope: !12786)
!12803 = distinct !DISubprogram(name: "init_idle_thread", scope: !1849, file: !1849, line: 343, type: !8377, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12804)
!12804 = !{!12805, !12806, !12807, !12810}
!12805 = !DILocalVariable(name: "i", arg: 1, scope: !12803, file: !1849, line: 343, type: !109)
!12806 = !DILocalVariable(name: "thread", scope: !12803, file: !1849, line: 345, type: !1941)
!12807 = !DILocalVariable(name: "stack", scope: !12803, file: !1849, line: 346, type: !12808)
!12808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12809, size: 32)
!12809 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3382, line: 44, baseType: !2059)
!12810 = !DILocalVariable(name: "tname", scope: !12803, file: !1849, line: 354, type: !285)
!12811 = !DILocation(line: 0, scope: !12803)
!12812 = !DILocation(line: 345, column: 29, scope: !12803)
!12813 = !DILocation(line: 346, column: 28, scope: !12803)
!12814 = !DILocation(line: 362, column: 37, scope: !12803)
!12815 = !DILocation(line: 362, column: 36, scope: !12803)
!12816 = !DILocation(line: 361, column: 2, scope: !12803)
!12817 = !DILocation(line: 365, column: 2, scope: !12803)
!12818 = !DILocation(line: 370, column: 1, scope: !12803)
!12819 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !12820, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12822)
!12820 = !DISubroutineType(types: !12821)
!12821 = !{!285, !12808}
!12822 = !{!12823}
!12823 = !DILocalVariable(name: "sym", arg: 1, scope: !12819, file: !147, line: 331, type: !12808)
!12824 = !DILocation(line: 0, scope: !12819)
!12825 = !DILocation(line: 333, column: 21, scope: !12819)
!12826 = !DILocation(line: 333, column: 2, scope: !12819)
!12827 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12828, file: !12828, line: 155, type: !12829, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12831)
!12828 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12829 = !DISubroutineType(types: !12830)
!12830 = !{null, !1941}
!12831 = !{!12832}
!12832 = !DILocalVariable(name: "thread", arg: 1, scope: !12827, file: !12828, line: 155, type: !1941)
!12833 = !DILocation(line: 0, scope: !12827)
!12834 = !DILocation(line: 157, column: 15, scope: !12827)
!12835 = !DILocation(line: 157, column: 28, scope: !12827)
!12836 = !DILocation(line: 158, column: 1, scope: !12827)
!12837 = distinct !DISubprogram(name: "z_cstart", scope: !1849, file: !1849, line: 501, type: !3116, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12838)
!12838 = !{!12839}
!12839 = !DILocalVariable(name: "dummy_thread", scope: !12837, file: !1849, line: 518, type: !1942)
!12840 = !DILocation(line: 507, column: 2, scope: !12837)
!12841 = !DILocation(line: 43, column: 14, scope: !12842, inlinedAt: !12846)
!12842 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12843, file: !12843, line: 40, type: !3116, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12844)
!12843 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12844 = !{!12845}
!12845 = !DILocalVariable(name: "msp", scope: !12842, file: !12843, line: 42, type: !110)
!12846 = distinct !DILocation(line: 44, column: 2, scope: !12847, inlinedAt: !12849)
!12847 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12848, file: !12848, line: 42, type: !3116, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !2050)
!12848 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12849 = distinct !DILocation(line: 510, column: 2, scope: !12837)
!12850 = !DILocation(line: 43, column: 3, scope: !12842, inlinedAt: !12846)
!12851 = !DILocation(line: 43, column: 60, scope: !12842, inlinedAt: !12846)
!12852 = !DILocation(line: 0, scope: !12842, inlinedAt: !12846)
!12853 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12854, file: !6437, line: 1153, type: !110)
!12854 = distinct !DISubprogram(name: "__set_MSP", scope: !6437, file: !6437, line: 1153, type: !6534, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12855)
!12855 = !{!12853}
!12856 = !DILocation(line: 0, scope: !12854, inlinedAt: !12857)
!12857 = distinct !DILocation(line: 46, column: 2, scope: !12842, inlinedAt: !12846)
!12858 = !DILocation(line: 1155, column: 3, scope: !12854, inlinedAt: !12857)
!12859 = !{i64 2936729}
!12860 = !DILocation(line: 62, column: 11, scope: !12842, inlinedAt: !12846)
!12861 = !DILocation(line: 102, column: 2, scope: !12862, inlinedAt: !12863)
!12862 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7489, file: !7489, line: 97, type: !3116, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !2050)
!12863 = distinct !DILocation(line: 45, column: 2, scope: !12847, inlinedAt: !12849)
!12864 = !DILocation(line: 108, column: 2, scope: !12862, inlinedAt: !12863)
!12865 = !DILocation(line: 112, column: 2, scope: !12862, inlinedAt: !12863)
!12866 = !DILocation(line: 113, column: 2, scope: !12862, inlinedAt: !12863)
!12867 = !DILocation(line: 114, column: 2, scope: !12862, inlinedAt: !12863)
!12868 = !DILocation(line: 116, column: 2, scope: !12862, inlinedAt: !12863)
!12869 = !DILocation(line: 123, column: 13, scope: !12862, inlinedAt: !12863)
!12870 = !DILocation(line: 46, column: 2, scope: !12847, inlinedAt: !12849)
!12871 = !DILocation(line: 47, column: 2, scope: !12847, inlinedAt: !12849)
!12872 = !DILocation(line: 174, column: 12, scope: !12873, inlinedAt: !12874)
!12873 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7489, file: !7489, line: 169, type: !3116, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !2050)
!12874 = distinct !DILocation(line: 48, column: 2, scope: !12847, inlinedAt: !12849)
!12875 = !DILocation(line: 179, column: 12, scope: !12873, inlinedAt: !12874)
!12876 = !DILocation(line: 50, column: 2, scope: !12847, inlinedAt: !12849)
!12877 = !DILocation(line: 57, column: 2, scope: !12847, inlinedAt: !12849)
!12878 = !DILocation(line: 518, column: 2, scope: !12837)
!12879 = !DILocation(line: 518, column: 18, scope: !12837)
!12880 = !DILocation(line: 520, column: 2, scope: !12837)
!12881 = !DILocation(line: 523, column: 2, scope: !12837)
!12882 = !DILocation(line: 526, column: 2, scope: !12837)
!12883 = !DILocation(line: 527, column: 2, scope: !12837)
!12884 = !DILocation(line: 543, column: 24, scope: !12837)
!12885 = !DILocation(line: 543, column: 2, scope: !12837)
!12886 = !DILocation(line: 0, scope: !2082)
!12887 = !DILocation(line: 246, column: 15, scope: !2100)
!12888 = !DILocation(line: 246, column: 36, scope: !2099)
!12889 = !DILocation(line: 246, column: 2, scope: !2100)
!12890 = !DILocation(line: 247, column: 37, scope: !2098)
!12891 = !DILocation(line: 0, scope: !2098)
!12892 = !DILocation(line: 248, column: 19, scope: !2098)
!12893 = !DILocation(line: 248, column: 12, scope: !2098)
!12894 = !DILocation(line: 250, column: 11, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !2098, file: !1849, line: 250, column: 7)
!12896 = !DILocation(line: 250, column: 7, scope: !2098)
!12897 = !DILocation(line: 254, column: 11, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12899, file: !1849, line: 254, column: 8)
!12899 = distinct !DILexicalBlock(scope: !12895, file: !1849, line: 250, column: 20)
!12900 = !DILocation(line: 254, column: 8, scope: !12899)
!12901 = !DILocation(line: 255, column: 9, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12898, file: !1849, line: 254, column: 17)
!12903 = !DILocation(line: 258, column: 9, scope: !12902)
!12904 = !DILocation(line: 261, column: 28, scope: !12902)
!12905 = !DILocation(line: 261, column: 10, scope: !12902)
!12906 = !DILocation(line: 261, column: 17, scope: !12902)
!12907 = !DILocation(line: 261, column: 26, scope: !12902)
!12908 = !DILocation(line: 262, column: 4, scope: !12902)
!12909 = !DILocation(line: 263, column: 9, scope: !12899)
!12910 = !DILocation(line: 263, column: 16, scope: !12899)
!12911 = !DILocation(line: 263, column: 28, scope: !12899)
!12912 = !DILocation(line: 264, column: 3, scope: !12899)
!12913 = !DILocation(line: 246, column: 60, scope: !2099)
!12914 = distinct !{!12914, !12889, !12915}
!12915 = !DILocation(line: 265, column: 2, scope: !2100)
!12916 = !DILocation(line: 266, column: 1, scope: !2082)
!12917 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6477, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12918)
!12918 = !{!12919, !12920}
!12919 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12917, file: !535, line: 1814, type: !770)
!12920 = !DILocalVariable(name: "priority", arg: 2, scope: !12917, file: !535, line: 1814, type: !110)
!12921 = !DILocation(line: 0, scope: !12917)
!12922 = !DILocation(line: 1822, column: 48, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12924, file: !535, line: 1821, column: 3)
!12924 = distinct !DILexicalBlock(scope: !12917, file: !535, line: 1816, column: 7)
!12925 = !DILocation(line: 1822, column: 32, scope: !12923)
!12926 = !DILocation(line: 1822, column: 40, scope: !12923)
!12927 = !DILocation(line: 1822, column: 5, scope: !12923)
!12928 = !DILocation(line: 1822, column: 46, scope: !12923)
!12929 = !DILocation(line: 1824, column: 1, scope: !12917)
!12930 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12848, file: !12848, line: 32, type: !3116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!12931 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12932, file: !12932, line: 215, type: !12829, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12933)
!12932 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12933 = !{!12934}
!12934 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12931, file: !12932, line: 215, type: !1941)
!12935 = !DILocation(line: 0, scope: !12931)
!12936 = !DILocation(line: 217, column: 21, scope: !12931)
!12937 = !DILocation(line: 217, column: 34, scope: !12931)
!12938 = !DILocation(line: 221, column: 21, scope: !12931)
!12939 = !DILocation(line: 221, column: 34, scope: !12931)
!12940 = !DILocation(line: 223, column: 27, scope: !12931)
!12941 = !DILocation(line: 223, column: 33, scope: !12931)
!12942 = !DILocation(line: 224, column: 27, scope: !12931)
!12943 = !DILocation(line: 224, column: 32, scope: !12931)
!12944 = !DILocation(line: 232, column: 16, scope: !12931)
!12945 = !DILocation(line: 232, column: 30, scope: !12931)
!12946 = !DILocation(line: 239, column: 24, scope: !12931)
!12947 = !DILocation(line: 240, column: 1, scope: !12931)
!12948 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1849, file: !1849, line: 399, type: !12949, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12951)
!12949 = !DISubroutineType(types: !12950)
!12950 = !{!285}
!12951 = !{!12952}
!12952 = !DILocalVariable(name: "stack_ptr", scope: !12948, file: !1849, line: 401, type: !285)
!12953 = !DILocation(line: 404, column: 2, scope: !12948)
!12954 = !DILocation(line: 416, column: 24, scope: !12948)
!12955 = !DILocation(line: 418, column: 14, scope: !12948)
!12956 = !DILocation(line: 0, scope: !12948)
!12957 = !DILocation(line: 423, column: 2, scope: !12948)
!12958 = !DILocation(line: 424, column: 2, scope: !12948)
!12959 = !DILocation(line: 426, column: 2, scope: !12948)
!12960 = !DILocation(line: 428, column: 2, scope: !12948)
!12961 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1849, file: !1849, line: 432, type: !12962, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12964)
!12962 = !DISubroutineType(types: !12963)
!12963 = !{null, !285}
!12964 = !{!12965}
!12965 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12961, file: !1849, line: 432, type: !285)
!12966 = !DILocation(line: 0, scope: !12961)
!12967 = !DILocation(line: 435, column: 2, scope: !12961)
!12968 = !DILocation(line: 445, column: 2, scope: !12961)
!12969 = distinct !DISubprogram(name: "bg_thread_main", scope: !1849, file: !1849, line: 277, type: !3228, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !12970)
!12970 = !{!12971, !12972, !12973}
!12971 = !DILocalVariable(name: "unused1", arg: 1, scope: !12969, file: !1849, line: 277, type: !107)
!12972 = !DILocalVariable(name: "unused2", arg: 2, scope: !12969, file: !1849, line: 277, type: !107)
!12973 = !DILocalVariable(name: "unused3", arg: 3, scope: !12969, file: !1849, line: 277, type: !107)
!12974 = !DILocation(line: 0, scope: !12969)
!12975 = !DILocation(line: 291, column: 20, scope: !12969)
!12976 = !DILocation(line: 293, column: 2, scope: !12969)
!12977 = !DILocation(line: 297, column: 2, scope: !12969)
!12978 = !DILocation(line: 305, column: 2, scope: !12969)
!12979 = !DILocation(line: 307, column: 2, scope: !12969)
!12980 = !DILocation(line: 330, column: 8, scope: !12969)
!12981 = !DILocation(line: 333, column: 34, scope: !12969)
!12982 = !DILocation(line: 339, column: 1, scope: !12969)
!12983 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2111, file: !2111, line: 45, type: !12984, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12992)
!12984 = !DISubroutineType(types: !12985)
!12985 = !{null, !12986, !107}
!12986 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !12987)
!12987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12988, size: 32)
!12988 = !DISubroutineType(types: !12989)
!12989 = !{null, !12990, !107}
!12990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12991, size: 32)
!12991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2116)
!12992 = !{!12993, !12994}
!12993 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12983, file: !2111, line: 45, type: !12986)
!12994 = !DILocalVariable(name: "user_data", arg: 2, scope: !12983, file: !2111, line: 45, type: !107)
!12995 = !DILocation(line: 0, scope: !12983)
!12996 = !DILocation(line: 71, column: 1, scope: !12983)
!12997 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2111, file: !2111, line: 73, type: !12984, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12998)
!12998 = !{!12999, !13000}
!12999 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12997, file: !2111, line: 73, type: !12986)
!13000 = !DILocalVariable(name: "user_data", arg: 2, scope: !12997, file: !2111, line: 73, type: !107)
!13001 = !DILocation(line: 0, scope: !12997)
!13002 = !DILocation(line: 95, column: 1, scope: !12997)
!13003 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2111, file: !2111, line: 97, type: !7490, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !2050)
!13004 = !DILocation(line: 1031, column: 3, scope: !13005, inlinedAt: !13008)
!13005 = distinct !DISubprogram(name: "__get_IPSR", scope: !6437, file: !6437, line: 1027, type: !6524, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13006)
!13006 = !{!13007}
!13007 = !DILocalVariable(name: "result", scope: !13005, file: !6437, line: 1029, type: !110)
!13008 = distinct !DILocation(line: 48, column: 10, scope: !13009, inlinedAt: !13010)
!13009 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7489, file: !7489, line: 46, type: !7490, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !2050)
!13010 = distinct !DILocation(line: 99, column: 9, scope: !13003)
!13011 = !{i64 2942380}
!13012 = !DILocation(line: 0, scope: !13005, inlinedAt: !13008)
!13013 = !DILocation(line: 48, column: 9, scope: !13009, inlinedAt: !13010)
!13014 = !DILocation(line: 99, column: 2, scope: !13003)
!13015 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2111, file: !2111, line: 106, type: !3116, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !2050)
!13016 = !DILocation(line: 108, column: 2, scope: !13015)
!13017 = !DILocation(line: 108, column: 17, scope: !13015)
!13018 = !DILocation(line: 108, column: 30, scope: !13015)
!13019 = !DILocation(line: 109, column: 1, scope: !13015)
!13020 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2111, file: !2111, line: 116, type: !3116, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !2050)
!13021 = !DILocation(line: 118, column: 2, scope: !13020)
!13022 = !DILocation(line: 118, column: 17, scope: !13020)
!13023 = !DILocation(line: 118, column: 30, scope: !13020)
!13024 = !DILocation(line: 119, column: 1, scope: !13020)
!13025 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2111, file: !2111, line: 126, type: !7490, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !2050)
!13026 = !DILocation(line: 128, column: 10, scope: !13025)
!13027 = !DILocation(line: 128, column: 25, scope: !13025)
!13028 = !DILocation(line: 128, column: 38, scope: !13025)
!13029 = !DILocation(line: 128, column: 53, scope: !13025)
!13030 = !DILocation(line: 128, column: 2, scope: !13025)
!13031 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2111, file: !2111, line: 187, type: !13032, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13034)
!13032 = !DISubroutineType(types: !13033)
!13033 = !{!109, !2115, !279}
!13034 = !{!13035, !13036}
!13035 = !DILocalVariable(name: "thread", arg: 1, scope: !13031, file: !2111, line: 187, type: !2115)
!13036 = !DILocalVariable(name: "value", arg: 2, scope: !13031, file: !2111, line: 187, type: !279)
!13037 = !DILocation(line: 0, scope: !13031)
!13038 = !DILocation(line: 190, column: 13, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13031, file: !2111, line: 190, column: 6)
!13040 = !DILocation(line: 190, column: 6, scope: !13031)
!13041 = !DILocation(line: 194, column: 10, scope: !13031)
!13042 = !DILocation(line: 194, column: 2, scope: !13031)
!13043 = !DILocation(line: 195, column: 2, scope: !13031)
!13044 = !DILocation(line: 195, column: 47, scope: !13031)
!13045 = !DILocation(line: 199, column: 2, scope: !13031)
!13046 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2111, file: !2111, line: 238, type: !13047, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13049)
!13047 = !DISubroutineType(types: !13048)
!13048 = !{!279, !2115}
!13049 = !{!13050}
!13050 = !DILocalVariable(name: "thread", arg: 1, scope: !13046, file: !2111, line: 238, type: !2115)
!13051 = !DILocation(line: 0, scope: !13046)
!13052 = !DILocation(line: 241, column: 23, scope: !13046)
!13053 = !DILocation(line: 241, column: 2, scope: !13046)
!13054 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2111, file: !2111, line: 248, type: !13055, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13057)
!13055 = !DISubroutineType(types: !13056)
!13056 = !{!109, !2114, !285, !234}
!13057 = !{!13058, !13059, !13060}
!13058 = !DILocalVariable(name: "thread", arg: 1, scope: !13054, file: !2111, line: 248, type: !2114)
!13059 = !DILocalVariable(name: "buf", arg: 2, scope: !13054, file: !2111, line: 248, type: !285)
!13060 = !DILocalVariable(name: "size", arg: 3, scope: !13054, file: !2111, line: 248, type: !234)
!13061 = !DILocation(line: 0, scope: !13054)
!13062 = !DILocation(line: 251, column: 15, scope: !13054)
!13063 = !DILocation(line: 251, column: 2, scope: !13054)
!13064 = !DILocation(line: 252, column: 2, scope: !13054)
!13065 = !DILocation(line: 0, scope: !2110)
!13066 = !DILocation(line: 281, column: 11, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !2110, file: !2111, line: 281, column: 6)
!13068 = !DILocation(line: 281, column: 20, scope: !13067)
!13069 = !DILocation(line: 275, column: 45, scope: !2110)
!13070 = !DILocation(line: 285, column: 10, scope: !2110)
!13071 = !DILocation(line: 0, scope: !2234)
!13072 = !DILocation(line: 293, column: 39, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !2234, file: !2111, line: 293, column: 2)
!13074 = !DILocation(line: 293, column: 2, scope: !2234)
!13075 = !DILocation(line: 273, column: 14, scope: !2110)
!13076 = !DILocation(line: 309, column: 2, scope: !2110)
!13077 = !DILocation(line: 309, column: 11, scope: !2110)
!13078 = !DILocation(line: 311, column: 2, scope: !2110)
!13079 = !DILocation(line: 293, column: 26, scope: !13073)
!13080 = !DILocation(line: 294, column: 9, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13073, file: !2111, line: 293, column: 54)
!13082 = !DILocation(line: 295, column: 21, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13081, file: !2111, line: 295, column: 7)
!13084 = !DILocation(line: 295, column: 28, scope: !13083)
!13085 = !DILocation(line: 295, column: 7, scope: !13081)
!13086 = !DILocation(line: 299, column: 25, scope: !13081)
!13087 = !DILocation(line: 299, column: 41, scope: !13081)
!13088 = !DILocation(line: 300, column: 7, scope: !13081)
!13089 = !DILocation(line: 300, column: 26, scope: !13081)
!13090 = !DILocation(line: 299, column: 10, scope: !13081)
!13091 = !DILocation(line: 299, column: 7, scope: !13081)
!13092 = !DILocation(line: 302, column: 16, scope: !13081)
!13093 = !DILocation(line: 304, column: 20, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13081, file: !2111, line: 304, column: 7)
!13095 = !DILocation(line: 304, column: 7, scope: !13081)
!13096 = !DILocation(line: 305, column: 26, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13094, file: !2111, line: 304, column: 26)
!13098 = !DILocation(line: 305, column: 42, scope: !13097)
!13099 = !DILocation(line: 305, column: 11, scope: !13097)
!13100 = !DILocation(line: 305, column: 8, scope: !13097)
!13101 = !DILocation(line: 306, column: 3, scope: !13097)
!13102 = !DILocation(line: 293, column: 50, scope: !13073)
!13103 = !DILocation(line: 312, column: 1, scope: !2110)
!13104 = distinct !DISubprogram(name: "copy_bytes", scope: !2111, file: !2111, line: 261, type: !13105, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13107)
!13105 = !DISubroutineType(types: !13106)
!13106 = !{!234, !285, !234, !279, !234}
!13107 = !{!13108, !13109, !13110, !13111, !13112}
!13108 = !DILocalVariable(name: "dest", arg: 1, scope: !13104, file: !2111, line: 261, type: !285)
!13109 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13104, file: !2111, line: 261, type: !234)
!13110 = !DILocalVariable(name: "src", arg: 3, scope: !13104, file: !2111, line: 261, type: !279)
!13111 = !DILocalVariable(name: "src_size", arg: 4, scope: !13104, file: !2111, line: 261, type: !234)
!13112 = !DILocalVariable(name: "bytes_to_copy", scope: !13104, file: !2111, line: 263, type: !234)
!13113 = !DILocation(line: 0, scope: !13104)
!13114 = !DILocation(line: 265, column: 18, scope: !13104)
!13115 = !DILocation(line: 266, column: 2, scope: !13104)
!13116 = !DILocation(line: 268, column: 2, scope: !13104)
!13117 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2111, file: !2111, line: 383, type: !13118, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13120)
!13118 = !DISubroutineType(types: !13119)
!13119 = !{null, !2115}
!13120 = !{!13121}
!13121 = !DILocalVariable(name: "thread", arg: 1, scope: !13117, file: !2111, line: 383, type: !2115)
!13122 = !DILocation(line: 0, scope: !13117)
!13123 = !DILocation(line: 387, column: 2, scope: !13117)
!13124 = !DILocation(line: 388, column: 1, scope: !13117)
!13125 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2111, file: !2111, line: 528, type: !13126, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13133)
!13126 = !DISubroutineType(types: !13127)
!13127 = !{!285, !2115, !13128, !234, !3383, !107, !107, !107, !109, !110, !279}
!13128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13129, size: 32)
!13129 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3382, line: 44, baseType: !13130)
!13130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !13131)
!13131 = !{!13132}
!13132 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13130, file: !147, line: 48, baseType: !150, size: 8)
!13133 = !{!13134, !13135, !13136, !13137, !13138, !13139, !13140, !13141, !13142, !13143, !13144}
!13134 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13125, file: !2111, line: 528, type: !2115)
!13135 = !DILocalVariable(name: "stack", arg: 2, scope: !13125, file: !2111, line: 529, type: !13128)
!13136 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13125, file: !2111, line: 529, type: !234)
!13137 = !DILocalVariable(name: "entry", arg: 4, scope: !13125, file: !2111, line: 530, type: !3383)
!13138 = !DILocalVariable(name: "p1", arg: 5, scope: !13125, file: !2111, line: 531, type: !107)
!13139 = !DILocalVariable(name: "p2", arg: 6, scope: !13125, file: !2111, line: 531, type: !107)
!13140 = !DILocalVariable(name: "p3", arg: 7, scope: !13125, file: !2111, line: 531, type: !107)
!13141 = !DILocalVariable(name: "prio", arg: 8, scope: !13125, file: !2111, line: 532, type: !109)
!13142 = !DILocalVariable(name: "options", arg: 9, scope: !13125, file: !2111, line: 532, type: !110)
!13143 = !DILocalVariable(name: "name", arg: 10, scope: !13125, file: !2111, line: 532, type: !279)
!13144 = !DILocalVariable(name: "stack_ptr", scope: !13125, file: !2111, line: 534, type: !285)
!13145 = !DILocation(line: 0, scope: !13125)
!13146 = !DILocation(line: 536, column: 2, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13148, file: !2111, line: 536, column: 2)
!13148 = distinct !DILexicalBlock(scope: !13149, file: !2111, line: 536, column: 2)
!13149 = distinct !DILexicalBlock(scope: !13125, file: !2111, line: 536, column: 2)
!13150 = !DILocation(line: 536, column: 2, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13147, file: !2111, line: 536, column: 2)
!13152 = !DILocation(line: 550, column: 28, scope: !13125)
!13153 = !DILocation(line: 550, column: 2, scope: !13125)
!13154 = !DILocation(line: 553, column: 34, scope: !13125)
!13155 = !DILocation(line: 553, column: 2, scope: !13125)
!13156 = !DILocation(line: 554, column: 14, scope: !13125)
!13157 = !DILocation(line: 564, column: 2, scope: !13125)
!13158 = !DILocation(line: 567, column: 14, scope: !13125)
!13159 = !DILocation(line: 567, column: 24, scope: !13125)
!13160 = !DILocation(line: 594, column: 11, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13125, file: !2111, line: 594, column: 6)
!13162 = !DILocation(line: 0, scope: !13161)
!13163 = !DILocation(line: 594, column: 6, scope: !13125)
!13164 = !DILocation(line: 595, column: 3, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13161, file: !2111, line: 594, column: 20)
!13166 = !DILocation(line: 598, column: 3, scope: !13165)
!13167 = !DILocation(line: 598, column: 52, scope: !13165)
!13168 = !DILocation(line: 599, column: 2, scope: !13165)
!13169 = !DILocation(line: 600, column: 23, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13161, file: !2111, line: 599, column: 9)
!13171 = !DILocation(line: 612, column: 7, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13125, file: !2111, line: 612, column: 6)
!13173 = !DILocation(line: 612, column: 6, scope: !13125)
!13174 = !DILocation(line: 627, column: 40, scope: !13125)
!13175 = !DILocation(line: 637, column: 2, scope: !13125)
!13176 = !DILocation(line: 613, column: 15, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13172, file: !2111, line: 612, column: 17)
!13178 = !DILocation(line: 613, column: 29, scope: !13177)
!13179 = !DILocation(line: 638, column: 1, scope: !13125)
!13180 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12828, file: !12828, line: 78, type: !13181, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13183)
!13181 = !DISubroutineType(types: !13182)
!13182 = !{!347, !107}
!13183 = !{!13184}
!13184 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13180, file: !12828, line: 78, type: !107)
!13185 = !DILocation(line: 0, scope: !13180)
!13186 = !DILocation(line: 80, column: 21, scope: !13180)
!13187 = !DILocation(line: 80, column: 2, scope: !13180)
!13188 = distinct !DISubprogram(name: "z_waitq_init", scope: !13189, file: !13189, line: 47, type: !13190, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13192)
!13189 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13190 = !DISubroutineType(types: !13191)
!13191 = !{null, !2146}
!13192 = !{!13193}
!13193 = !DILocalVariable(name: "w", arg: 1, scope: !13188, file: !13189, line: 47, type: !2146)
!13194 = !DILocation(line: 0, scope: !13188)
!13195 = !DILocation(line: 49, column: 21, scope: !13188)
!13196 = !DILocation(line: 49, column: 2, scope: !13188)
!13197 = !DILocation(line: 50, column: 1, scope: !13188)
!13198 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2111, file: !2111, line: 791, type: !13199, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13202)
!13199 = !DISubroutineType(types: !13200)
!13200 = !{null, !13201, !109, !110, !32}
!13201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!13202 = !{!13203, !13204, !13205, !13206}
!13203 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13198, file: !2111, line: 791, type: !13201)
!13204 = !DILocalVariable(name: "priority", arg: 2, scope: !13198, file: !2111, line: 791, type: !109)
!13205 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13198, file: !2111, line: 792, type: !110)
!13206 = !DILocalVariable(name: "options", arg: 4, scope: !13198, file: !2111, line: 792, type: !32)
!13207 = !DILocation(line: 0, scope: !13198)
!13208 = !DILocation(line: 795, column: 15, scope: !13198)
!13209 = !DILocation(line: 795, column: 25, scope: !13198)
!13210 = !DILocation(line: 796, column: 30, scope: !13198)
!13211 = !DILocation(line: 796, column: 15, scope: !13198)
!13212 = !DILocation(line: 796, column: 28, scope: !13198)
!13213 = !DILocation(line: 797, column: 30, scope: !13198)
!13214 = !DILocation(line: 797, column: 15, scope: !13198)
!13215 = !DILocation(line: 797, column: 28, scope: !13198)
!13216 = !DILocation(line: 799, column: 22, scope: !13198)
!13217 = !DILocation(line: 799, column: 15, scope: !13198)
!13218 = !DILocation(line: 799, column: 20, scope: !13198)
!13219 = !DILocation(line: 801, column: 15, scope: !13198)
!13220 = !DILocation(line: 801, column: 28, scope: !13198)
!13221 = !DILocation(line: 814, column: 2, scope: !13198)
!13222 = !DILocation(line: 815, column: 1, scope: !13198)
!13223 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2111, file: !2111, line: 449, type: !13224, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13226)
!13224 = !DISubroutineType(types: !13225)
!13225 = !{!285, !2115, !13128, !234}
!13226 = !{!13227, !13228, !13229, !13230, !13231, !13232, !13233, !13234}
!13227 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13223, file: !2111, line: 449, type: !2115)
!13228 = !DILocalVariable(name: "stack", arg: 2, scope: !13223, file: !2111, line: 450, type: !13128)
!13229 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13223, file: !2111, line: 450, type: !234)
!13230 = !DILocalVariable(name: "stack_obj_size", scope: !13223, file: !2111, line: 452, type: !234)
!13231 = !DILocalVariable(name: "stack_buf_size", scope: !13223, file: !2111, line: 452, type: !234)
!13232 = !DILocalVariable(name: "stack_ptr", scope: !13223, file: !2111, line: 453, type: !285)
!13233 = !DILocalVariable(name: "stack_buf_start", scope: !13223, file: !2111, line: 453, type: !285)
!13234 = !DILocalVariable(name: "delta", scope: !13223, file: !2111, line: 454, type: !234)
!13235 = !DILocation(line: 0, scope: !13223)
!13236 = !DILocation(line: 465, column: 20, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13223, file: !2111, line: 463, column: 2)
!13238 = !DILocation(line: 466, column: 21, scope: !13237)
!13239 = !DILocation(line: 473, column: 28, scope: !13223)
!13240 = !DILocation(line: 514, column: 33, scope: !13223)
!13241 = !DILocation(line: 514, column: 25, scope: !13223)
!13242 = !DILocation(line: 514, column: 31, scope: !13223)
!13243 = !DILocation(line: 515, column: 25, scope: !13223)
!13244 = !DILocation(line: 515, column: 30, scope: !13223)
!13245 = !DILocation(line: 516, column: 25, scope: !13223)
!13246 = !DILocation(line: 516, column: 31, scope: !13223)
!13247 = !DILocation(line: 520, column: 2, scope: !13223)
!13248 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !13249, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13251)
!13249 = !DISubroutineType(types: !13250)
!13250 = !{!285, !13128}
!13251 = !{!13252}
!13252 = !DILocalVariable(name: "sym", arg: 1, scope: !13248, file: !147, line: 331, type: !13128)
!13253 = !DILocation(line: 0, scope: !13248)
!13254 = !DILocation(line: 333, column: 21, scope: !13248)
!13255 = !DILocation(line: 333, column: 2, scope: !13248)
!13256 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13257, file: !13257, line: 40, type: !13258, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13260)
!13257 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13258 = !DISubroutineType(types: !13259)
!13259 = !{null, !13201}
!13260 = !{!13261}
!13261 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13256, file: !13257, line: 40, type: !13201)
!13262 = !DILocation(line: 0, scope: !13256)
!13263 = !DILocation(line: 42, column: 31, scope: !13256)
!13264 = !DILocation(line: 42, column: 2, scope: !13256)
!13265 = !DILocation(line: 43, column: 1, scope: !13256)
!13266 = distinct !DISubprogram(name: "z_init_timeout", scope: !13257, file: !13257, line: 25, type: !2172, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13267)
!13267 = !{!13268}
!13268 = !DILocalVariable(name: "to", arg: 1, scope: !13266, file: !13257, line: 25, type: !2174)
!13269 = !DILocation(line: 0, scope: !13266)
!13270 = !DILocation(line: 27, column: 22, scope: !13266)
!13271 = !DILocation(line: 27, column: 2, scope: !13266)
!13272 = !DILocation(line: 28, column: 1, scope: !13266)
!13273 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13274, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13276)
!13274 = !DISubroutineType(types: !13275)
!13275 = !{null, !2221}
!13276 = !{!13277}
!13277 = !DILocalVariable(name: "node", arg: 1, scope: !13273, file: !127, line: 211, type: !2221)
!13278 = !DILocation(line: 0, scope: !13273)
!13279 = !DILocation(line: 213, column: 8, scope: !13273)
!13280 = !DILocation(line: 213, column: 13, scope: !13273)
!13281 = !DILocation(line: 214, column: 8, scope: !13273)
!13282 = !DILocation(line: 214, column: 13, scope: !13273)
!13283 = !DILocation(line: 215, column: 1, scope: !13273)
!13284 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13285, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13288)
!13285 = !DISubroutineType(types: !13286)
!13286 = !{null, !13287}
!13287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!13288 = !{!13289}
!13289 = !DILocalVariable(name: "list", arg: 1, scope: !13284, file: !127, line: 197, type: !13287)
!13290 = !DILocation(line: 0, scope: !13284)
!13291 = !DILocation(line: 199, column: 8, scope: !13284)
!13292 = !DILocation(line: 199, column: 13, scope: !13284)
!13293 = !DILocation(line: 200, column: 8, scope: !13284)
!13294 = !DILocation(line: 200, column: 13, scope: !13284)
!13295 = !DILocation(line: 201, column: 1, scope: !13284)
!13296 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2111, file: !2111, line: 641, type: !13297, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13303)
!13297 = !DISubroutineType(types: !13298)
!13298 = !{!2114, !2115, !13128, !234, !3383, !107, !107, !107, !109, !110, !13299}
!13299 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13300)
!13300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13301)
!13301 = !{!13302}
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13300, file: !104, line: 66, baseType: !103, size: 64)
!13303 = !{!13304, !13305, !13306, !13307, !13308, !13309, !13310, !13311, !13312, !13313}
!13304 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13296, file: !2111, line: 641, type: !2115)
!13305 = !DILocalVariable(name: "stack", arg: 2, scope: !13296, file: !2111, line: 642, type: !13128)
!13306 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13296, file: !2111, line: 643, type: !234)
!13307 = !DILocalVariable(name: "entry", arg: 4, scope: !13296, file: !2111, line: 643, type: !3383)
!13308 = !DILocalVariable(name: "p1", arg: 5, scope: !13296, file: !2111, line: 644, type: !107)
!13309 = !DILocalVariable(name: "p2", arg: 6, scope: !13296, file: !2111, line: 644, type: !107)
!13310 = !DILocalVariable(name: "p3", arg: 7, scope: !13296, file: !2111, line: 644, type: !107)
!13311 = !DILocalVariable(name: "prio", arg: 8, scope: !13296, file: !2111, line: 645, type: !109)
!13312 = !DILocalVariable(name: "options", arg: 9, scope: !13296, file: !2111, line: 645, type: !110)
!13313 = !DILocalVariable(name: "delay", arg: 10, scope: !13296, file: !2111, line: 645, type: !13299)
!13314 = !DILocation(line: 0, scope: !13296)
!13315 = !DILocation(line: 1031, column: 3, scope: !13005, inlinedAt: !13316)
!13316 = distinct !DILocation(line: 48, column: 10, scope: !13009, inlinedAt: !13317)
!13317 = distinct !DILocation(line: 647, column: 2, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13319, file: !2111, line: 647, column: 2)
!13319 = distinct !DILexicalBlock(scope: !13296, file: !2111, line: 647, column: 2)
!13320 = !DILocation(line: 0, scope: !13005, inlinedAt: !13316)
!13321 = !DILocation(line: 48, column: 9, scope: !13009, inlinedAt: !13317)
!13322 = !DILocation(line: 647, column: 2, scope: !13319)
!13323 = !DILocation(line: 647, column: 2, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13318, file: !2111, line: 647, column: 2)
!13325 = !DILocation(line: 649, column: 2, scope: !13296)
!13326 = !DILocation(line: 652, column: 7, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13296, file: !2111, line: 652, column: 6)
!13328 = !DILocation(line: 652, column: 6, scope: !13296)
!13329 = !DILocation(line: 653, column: 3, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13327, file: !2111, line: 652, column: 39)
!13331 = !DILocation(line: 654, column: 2, scope: !13330)
!13332 = !DILocation(line: 656, column: 2, scope: !13296)
!13333 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2111, file: !2111, line: 401, type: !13334, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13336)
!13334 = !DISubroutineType(types: !13335)
!13335 = !{null, !2115, !13299}
!13336 = !{!13337, !13338}
!13337 = !DILocalVariable(name: "thread", arg: 1, scope: !13333, file: !2111, line: 401, type: !2115)
!13338 = !DILocalVariable(name: "delay", arg: 2, scope: !13333, file: !2111, line: 401, type: !13299)
!13339 = !DILocation(line: 0, scope: !13333)
!13340 = !DILocation(line: 404, column: 6, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13333, file: !2111, line: 404, column: 6)
!13342 = !DILocation(line: 404, column: 6, scope: !13333)
!13343 = !DILocation(line: 405, column: 3, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13341, file: !2111, line: 404, column: 38)
!13345 = !DILocation(line: 406, column: 2, scope: !13344)
!13346 = !DILocation(line: 407, column: 3, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13341, file: !2111, line: 406, column: 9)
!13348 = !DILocation(line: 413, column: 1, scope: !13333)
!13349 = distinct !DISubprogram(name: "k_thread_start", scope: !3262, file: !3262, line: 205, type: !13350, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13352)
!13350 = !DISubroutineType(types: !13351)
!13351 = !{null, !2114}
!13352 = !{!13353}
!13353 = !DILocalVariable(name: "thread", arg: 1, scope: !13349, file: !3262, line: 205, type: !2114)
!13354 = !DILocation(line: 0, scope: !13349)
!13355 = !DILocation(line: 214, column: 2, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13349, file: !3262, line: 214, column: 2)
!13357 = !{i64 2154184194}
!13358 = !DILocation(line: 215, column: 2, scope: !13349)
!13359 = !DILocation(line: 216, column: 1, scope: !13349)
!13360 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13257, file: !13257, line: 47, type: !13334, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13361)
!13361 = !{!13362, !13363}
!13362 = !DILocalVariable(name: "thread", arg: 1, scope: !13360, file: !13257, line: 47, type: !2115)
!13363 = !DILocalVariable(name: "ticks", arg: 2, scope: !13360, file: !13257, line: 47, type: !13299)
!13364 = !DILocation(line: 0, scope: !13360)
!13365 = !DILocation(line: 49, column: 30, scope: !13360)
!13366 = !DILocation(line: 49, column: 2, scope: !13360)
!13367 = !DILocation(line: 50, column: 1, scope: !13360)
!13368 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2111, file: !2111, line: 748, type: !3116, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13369)
!13369 = !{!13370, !13388}
!13370 = !DILocalVariable(name: "thread_data", scope: !13371, file: !2111, line: 750, type: !13372)
!13371 = distinct !DILexicalBlock(scope: !13368, file: !2111, line: 750, column: 2)
!13372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13373, size: 32)
!13373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !13374)
!13374 = !{!13375, !13376, !13377, !13378, !13379, !13380, !13381, !13382, !13383, !13384, !13385, !13387}
!13375 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13373, file: !118, line: 621, baseType: !2115, size: 32)
!13376 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13373, file: !118, line: 622, baseType: !13128, size: 32, offset: 32)
!13377 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13373, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!13378 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13373, file: !118, line: 624, baseType: !3383, size: 32, offset: 96)
!13379 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13373, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!13380 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13373, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!13381 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13373, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!13382 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13373, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!13383 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13373, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13373, file: !118, line: 630, baseType: !744, size: 32, offset: 288)
!13385 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13373, file: !118, line: 631, baseType: !13386, size: 32, offset: 320)
!13386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 32)
!13387 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13373, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!13388 = !DILocalVariable(name: "thread_data", scope: !13389, file: !2111, line: 781, type: !13372)
!13389 = distinct !DILexicalBlock(scope: !13368, file: !2111, line: 781, column: 2)
!13390 = !DILocation(line: 0, scope: !13371)
!13391 = !DILocation(line: 750, column: 2, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13393, file: !2111, line: 750, column: 2)
!13393 = distinct !DILexicalBlock(scope: !13394, file: !2111, line: 750, column: 2)
!13394 = distinct !DILexicalBlock(scope: !13371, file: !2111, line: 750, column: 2)
!13395 = !DILocation(line: 750, column: 2, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13397, file: !2111, line: 750, column: 2)
!13397 = distinct !DILexicalBlock(scope: !13392, file: !2111, line: 750, column: 2)
!13398 = !DILocation(line: 750, column: 2, scope: !13393)
!13399 = !DILocation(line: 750, column: 2, scope: !13371)
!13400 = !DILocation(line: 780, column: 2, scope: !13368)
!13401 = !DILocation(line: 0, scope: !13389)
!13402 = !DILocation(line: 781, column: 2, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13404, file: !2111, line: 781, column: 2)
!13404 = distinct !DILexicalBlock(scope: !13405, file: !2111, line: 781, column: 2)
!13405 = distinct !DILexicalBlock(scope: !13389, file: !2111, line: 781, column: 2)
!13406 = !DILocation(line: 752, column: 17, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13394, file: !2111, line: 750, column: 38)
!13408 = !DILocation(line: 753, column: 17, scope: !13407)
!13409 = !DILocation(line: 754, column: 17, scope: !13407)
!13410 = !DILocation(line: 755, column: 17, scope: !13407)
!13411 = !DILocation(line: 756, column: 17, scope: !13407)
!13412 = !DILocation(line: 757, column: 17, scope: !13407)
!13413 = !DILocation(line: 758, column: 17, scope: !13407)
!13414 = !DILocation(line: 759, column: 17, scope: !13407)
!13415 = !DILocation(line: 760, column: 17, scope: !13407)
!13416 = !DILocation(line: 761, column: 17, scope: !13407)
!13417 = !DILocation(line: 751, column: 3, scope: !13407)
!13418 = !DILocation(line: 763, column: 16, scope: !13407)
!13419 = !DILocation(line: 763, column: 29, scope: !13407)
!13420 = !DILocation(line: 763, column: 39, scope: !13407)
!13421 = !DILocation(line: 750, column: 2, scope: !13394)
!13422 = !DILocation(line: 750, column: 2, scope: !13397)
!13423 = distinct !{!13423, !13399, !13424}
!13424 = !DILocation(line: 764, column: 2, scope: !13371)
!13425 = !DILocation(line: 781, column: 2, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13427, file: !2111, line: 781, column: 2)
!13427 = distinct !DILexicalBlock(scope: !13403, file: !2111, line: 781, column: 2)
!13428 = !DILocation(line: 781, column: 2, scope: !13404)
!13429 = !DILocation(line: 781, column: 2, scope: !13389)
!13430 = !DILocation(line: 787, column: 2, scope: !13368)
!13431 = !DILocation(line: 788, column: 1, scope: !13368)
!13432 = !DILocation(line: 782, column: 20, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !2111, line: 782, column: 7)
!13434 = distinct !DILexicalBlock(scope: !13405, file: !2111, line: 781, column: 38)
!13435 = !DILocation(line: 782, column: 31, scope: !13433)
!13436 = !DILocation(line: 782, column: 7, scope: !13434)
!13437 = !DILocation(line: 783, column: 37, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13433, file: !2111, line: 782, column: 51)
!13439 = !DILocation(line: 784, column: 10, scope: !13438)
!13440 = !DILocation(line: 783, column: 4, scope: !13438)
!13441 = !DILocation(line: 785, column: 3, scope: !13438)
!13442 = !DILocation(line: 781, column: 2, scope: !13405)
!13443 = !DILocation(line: 781, column: 2, scope: !13427)
!13444 = distinct !{!13444, !13429, !13445}
!13445 = !DILocation(line: 786, column: 2, scope: !13389)
!13446 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13447, file: !13447, line: 403, type: !13448, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13450)
!13447 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13448 = !DISubroutineType(types: !13449)
!13449 = !{!111, !111}
!13450 = !{!13451}
!13451 = !DILocalVariable(name: "t", arg: 1, scope: !13446, file: !13447, line: 403, type: !111)
!13452 = !DILocation(line: 0, scope: !13446)
!13453 = !DILocalVariable(name: "t", arg: 1, scope: !13454, file: !13447, line: 102, type: !111)
!13454 = distinct !DISubprogram(name: "z_tmcvt", scope: !13447, file: !13447, line: 102, type: !13455, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13457)
!13455 = !DISubroutineType(types: !13456)
!13456 = !{!111, !111, !110, !110, !347, !347, !347, !347}
!13457 = !{!13453, !13458, !13459, !13460, !13461, !13462, !13463, !13464, !13465, !13466, !13467}
!13458 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13454, file: !13447, line: 102, type: !110)
!13459 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13454, file: !13447, line: 103, type: !110)
!13460 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13454, file: !13447, line: 103, type: !347)
!13461 = !DILocalVariable(name: "result32", arg: 5, scope: !13454, file: !13447, line: 104, type: !347)
!13462 = !DILocalVariable(name: "round_up", arg: 6, scope: !13454, file: !13447, line: 104, type: !347)
!13463 = !DILocalVariable(name: "round_off", arg: 7, scope: !13454, file: !13447, line: 105, type: !347)
!13464 = !DILocalVariable(name: "mul_ratio", scope: !13454, file: !13447, line: 107, type: !347)
!13465 = !DILocalVariable(name: "div_ratio", scope: !13454, file: !13447, line: 109, type: !347)
!13466 = !DILocalVariable(name: "off", scope: !13454, file: !13447, line: 116, type: !111)
!13467 = !DILocalVariable(name: "rdivisor", scope: !13468, file: !13447, line: 119, type: !110)
!13468 = distinct !DILexicalBlock(scope: !13469, file: !13447, line: 118, column: 18)
!13469 = distinct !DILexicalBlock(scope: !13454, file: !13447, line: 118, column: 6)
!13470 = !DILocation(line: 0, scope: !13454, inlinedAt: !13471)
!13471 = distinct !DILocation(line: 406, column: 9, scope: !13446)
!13472 = !DILocation(line: 145, column: 13, scope: !13473, inlinedAt: !13471)
!13473 = distinct !DILexicalBlock(scope: !13474, file: !13447, line: 144, column: 10)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !13447, line: 142, column: 7)
!13475 = distinct !DILexicalBlock(scope: !13476, file: !13447, line: 141, column: 24)
!13476 = distinct !DILexicalBlock(scope: !13477, file: !13447, line: 141, column: 13)
!13477 = distinct !DILexicalBlock(scope: !13454, file: !13447, line: 134, column: 6)
!13478 = !DILocation(line: 406, column: 2, scope: !13446)
!13479 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2111, file: !2111, line: 817, type: !4508, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13480)
!13480 = !{!13481, !13482, !13483, !13484}
!13481 = !DILocalVariable(name: "entry", arg: 1, scope: !13479, file: !2111, line: 817, type: !3383)
!13482 = !DILocalVariable(name: "p1", arg: 2, scope: !13479, file: !2111, line: 818, type: !107)
!13483 = !DILocalVariable(name: "p2", arg: 3, scope: !13479, file: !2111, line: 818, type: !107)
!13484 = !DILocalVariable(name: "p3", arg: 4, scope: !13479, file: !2111, line: 818, type: !107)
!13485 = !DILocation(line: 0, scope: !13479)
!13486 = !DILocation(line: 822, column: 2, scope: !13479)
!13487 = !DILocation(line: 822, column: 17, scope: !13479)
!13488 = !DILocation(line: 822, column: 30, scope: !13479)
!13489 = !DILocation(line: 823, column: 2, scope: !13479)
!13490 = !DILocation(line: 845, column: 2, scope: !13479)
!13491 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2111, file: !2111, line: 853, type: !13492, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13495)
!13492 = !DISubroutineType(types: !13493)
!13493 = !{!347, !13494}
!13494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!13495 = !{!13496, !13497}
!13496 = !DILocalVariable(name: "l", arg: 1, scope: !13491, file: !2111, line: 853, type: !13494)
!13497 = !DILocalVariable(name: "thread_cpu", scope: !13491, file: !2111, line: 855, type: !22)
!13498 = !DILocation(line: 0, scope: !13491)
!13499 = !DILocation(line: 855, column: 28, scope: !13491)
!13500 = !DILocation(line: 857, column: 17, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13491, file: !2111, line: 857, column: 6)
!13502 = !DILocation(line: 857, column: 6, scope: !13491)
!13503 = !DILocation(line: 858, column: 19, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13505, file: !2111, line: 858, column: 7)
!13505 = distinct !DILexicalBlock(scope: !13501, file: !2111, line: 857, column: 24)
!13506 = !DILocation(line: 858, column: 42, scope: !13504)
!13507 = !DILocation(line: 858, column: 28, scope: !13504)
!13508 = !DILocation(line: 858, column: 25, scope: !13504)
!13509 = !DILocation(line: 858, column: 7, scope: !13505)
!13510 = !DILocation(line: 862, column: 2, scope: !13491)
!13511 = !DILocation(line: 863, column: 1, scope: !13491)
!13512 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2111, file: !2111, line: 865, type: !13492, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13513)
!13513 = !{!13514}
!13514 = !DILocalVariable(name: "l", arg: 1, scope: !13512, file: !2111, line: 865, type: !13494)
!13515 = !DILocation(line: 0, scope: !13512)
!13516 = !DILocation(line: 867, column: 9, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13512, file: !2111, line: 867, column: 6)
!13518 = !DILocation(line: 867, column: 38, scope: !13517)
!13519 = !DILocation(line: 867, column: 24, scope: !13517)
!13520 = !DILocation(line: 867, column: 54, scope: !13517)
!13521 = !DILocation(line: 867, column: 43, scope: !13517)
!13522 = !DILocation(line: 867, column: 41, scope: !13517)
!13523 = !DILocation(line: 867, column: 20, scope: !13517)
!13524 = !DILocation(line: 867, column: 6, scope: !13512)
!13525 = !DILocation(line: 870, column: 16, scope: !13512)
!13526 = !DILocation(line: 871, column: 2, scope: !13512)
!13527 = !DILocation(line: 872, column: 1, scope: !13512)
!13528 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2111, file: !2111, line: 874, type: !13529, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13531)
!13529 = !DISubroutineType(types: !13530)
!13530 = !{null, !13494}
!13531 = !{!13532}
!13532 = !DILocalVariable(name: "l", arg: 1, scope: !13528, file: !2111, line: 874, type: !13494)
!13533 = !DILocation(line: 0, scope: !13528)
!13534 = !DILocation(line: 876, column: 32, scope: !13528)
!13535 = !DILocation(line: 876, column: 18, scope: !13528)
!13536 = !DILocation(line: 876, column: 48, scope: !13528)
!13537 = !DILocation(line: 876, column: 37, scope: !13528)
!13538 = !DILocation(line: 876, column: 35, scope: !13528)
!13539 = !DILocation(line: 876, column: 5, scope: !13528)
!13540 = !DILocation(line: 876, column: 16, scope: !13528)
!13541 = !DILocation(line: 877, column: 1, scope: !13528)
!13542 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2111, file: !2111, line: 888, type: !13543, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13545)
!13543 = !DISubroutineType(types: !13544)
!13544 = !{!109, !2115}
!13545 = !{!13546}
!13546 = !DILocalVariable(name: "thread", arg: 1, scope: !13542, file: !2111, line: 888, type: !2115)
!13547 = !DILocation(line: 0, scope: !13542)
!13548 = !DILocation(line: 893, column: 2, scope: !13542)
!13549 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2111, file: !2111, line: 897, type: !13550, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13552)
!13550 = !DISubroutineType(types: !13551)
!13551 = !{!109, !2115, !32}
!13552 = !{!13553, !13554}
!13553 = !DILocalVariable(name: "thread", arg: 1, scope: !13549, file: !2111, line: 897, type: !2115)
!13554 = !DILocalVariable(name: "options", arg: 2, scope: !13549, file: !2111, line: 897, type: !32)
!13555 = !DILocation(line: 0, scope: !13549)
!13556 = !DILocation(line: 902, column: 2, scope: !13549)
!13557 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2111, file: !2111, line: 1072, type: !13558, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13563)
!13558 = !DISubroutineType(types: !13559)
!13559 = !{!109, !2114, !13560}
!13560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13561, size: 32)
!13561 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !158, line: 234, baseType: !13562)
!13562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !158, line: 192, elements: !2050)
!13563 = !{!13564, !13565}
!13564 = !DILocalVariable(name: "thread", arg: 1, scope: !13557, file: !2111, line: 1072, type: !2114)
!13565 = !DILocalVariable(name: "stats", arg: 2, scope: !13557, file: !2111, line: 1073, type: !13560)
!13566 = !DILocation(line: 0, scope: !13557)
!13567 = !DILocation(line: 1075, column: 14, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13557, file: !2111, line: 1075, column: 6)
!13569 = !DILocation(line: 1075, column: 23, scope: !13568)
!13570 = !DILocation(line: 1086, column: 1, scope: !13557)
!13571 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2111, file: !2111, line: 1088, type: !13572, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13574)
!13572 = !DISubroutineType(types: !13573)
!13573 = !{!109, !13560}
!13574 = !{!13575}
!13575 = !DILocalVariable(name: "stats", arg: 1, scope: !13571, file: !2111, line: 1088, type: !13560)
!13576 = !DILocation(line: 0, scope: !13571)
!13577 = !DILocation(line: 1094, column: 12, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13571, file: !2111, line: 1094, column: 6)
!13579 = !DILocation(line: 1120, column: 1, scope: !13571)
!13580 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13581, file: !13581, line: 20, type: !3116, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !2050)
!13581 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13582 = !DILocation(line: 30, column: 2, scope: !13580)
!13583 = !DILocation(line: 31, column: 1, scope: !13580)
!13584 = distinct !DISubprogram(name: "idle", scope: !13581, file: !13581, line: 33, type: !3228, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13585)
!13585 = !{!13586, !13587, !13588}
!13586 = !DILocalVariable(name: "unused1", arg: 1, scope: !13584, file: !13581, line: 33, type: !107)
!13587 = !DILocalVariable(name: "unused2", arg: 2, scope: !13584, file: !13581, line: 33, type: !107)
!13588 = !DILocalVariable(name: "unused3", arg: 3, scope: !13584, file: !13581, line: 33, type: !107)
!13589 = !DILocation(line: 0, scope: !13584)
!13590 = !DILocation(line: 39, column: 2, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13592, file: !13581, line: 39, column: 2)
!13592 = distinct !DILexicalBlock(scope: !13584, file: !13581, line: 39, column: 2)
!13593 = !DILocation(line: 39, column: 2, scope: !13592)
!13594 = !DILocation(line: 39, column: 2, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13591, file: !13581, line: 39, column: 2)
!13596 = !DILocation(line: 55, column: 2, scope: !13597, inlinedAt: !13601)
!13597 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6116, file: !6116, line: 42, type: !6117, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !13598)
!13598 = !{!13599, !13600}
!13599 = !DILocalVariable(name: "key", scope: !13597, file: !6116, line: 44, type: !32)
!13600 = !DILocalVariable(name: "tmp", scope: !13597, file: !6116, line: 53, type: !32)
!13601 = distinct !DILocation(line: 62, column: 10, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13584, file: !13581, line: 41, column: 15)
!13603 = !{i64 2040991}
!13604 = !DILocation(line: 0, scope: !13597, inlinedAt: !13601)
!13605 = !DILocation(line: 86, column: 3, scope: !13602)
!13606 = !DILocation(line: 41, column: 2, scope: !13584)
!13607 = distinct !{!13607, !13606, !13608}
!13608 = !DILocation(line: 105, column: 2, scope: !13584)
!13609 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3116, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3097, retainedNodes: !2050)
!13610 = !DILocation(line: 5629, column: 2, scope: !13609)
!13611 = !DILocation(line: 5630, column: 1, scope: !13609)
!13612 = !DISubprogram(name: "arch_cpu_idle", scope: !3382, file: !3382, line: 167, type: !3116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!13613 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2346, file: !2346, line: 49, type: !13614, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13623)
!13614 = !DISubroutineType(types: !13615)
!13615 = !{!109, !13616}
!13616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13617, size: 32)
!13617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !13618)
!13618 = !{!13619, !13620, !13621, !13622}
!13619 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13617, file: !118, line: 2722, baseType: !2274, size: 64)
!13620 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13617, file: !118, line: 2724, baseType: !2256, size: 32, offset: 64)
!13621 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13617, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!13622 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13617, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!13623 = !{!13624}
!13624 = !DILocalVariable(name: "mutex", arg: 1, scope: !13613, file: !2346, line: 49, type: !13616)
!13625 = !DILocation(line: 0, scope: !13613)
!13626 = !DILocation(line: 51, column: 9, scope: !13613)
!13627 = !DILocation(line: 51, column: 15, scope: !13613)
!13628 = !DILocation(line: 52, column: 9, scope: !13613)
!13629 = !DILocation(line: 52, column: 20, scope: !13613)
!13630 = !DILocation(line: 54, column: 23, scope: !13613)
!13631 = !DILocation(line: 54, column: 2, scope: !13613)
!13632 = !DILocation(line: 60, column: 2, scope: !13613)
!13633 = distinct !DISubprogram(name: "z_waitq_init", scope: !13189, file: !13189, line: 47, type: !13634, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13636)
!13634 = !DISubroutineType(types: !13635)
!13635 = !{null, !2273}
!13636 = !{!13637}
!13637 = !DILocalVariable(name: "w", arg: 1, scope: !13633, file: !13189, line: 47, type: !2273)
!13638 = !DILocation(line: 0, scope: !13633)
!13639 = !DILocation(line: 49, column: 21, scope: !13633)
!13640 = !DILocation(line: 49, column: 2, scope: !13633)
!13641 = !DILocation(line: 50, column: 1, scope: !13633)
!13642 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13643, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13646)
!13643 = !DISubroutineType(types: !13644)
!13644 = !{null, !13645}
!13645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!13646 = !{!13647}
!13647 = !DILocalVariable(name: "list", arg: 1, scope: !13642, file: !127, line: 197, type: !13645)
!13648 = !DILocation(line: 0, scope: !13642)
!13649 = !DILocation(line: 199, column: 8, scope: !13642)
!13650 = !DILocation(line: 199, column: 13, scope: !13642)
!13651 = !DILocation(line: 200, column: 8, scope: !13642)
!13652 = !DILocation(line: 200, column: 13, scope: !13642)
!13653 = !DILocation(line: 201, column: 1, scope: !13642)
!13654 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2346, file: !2346, line: 95, type: !13655, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13661)
!13655 = !DISubroutineType(types: !13656)
!13656 = !{!109, !13616, !13657}
!13657 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13658)
!13658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13659)
!13659 = !{!13660}
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13658, file: !104, line: 66, baseType: !103, size: 64)
!13661 = !{!13662, !13663, !13664, !13665, !13670, !13671, !13672}
!13662 = !DILocalVariable(name: "mutex", arg: 1, scope: !13654, file: !2346, line: 95, type: !13616)
!13663 = !DILocalVariable(name: "timeout", arg: 2, scope: !13654, file: !2346, line: 95, type: !13657)
!13664 = !DILocalVariable(name: "new_prio", scope: !13654, file: !2346, line: 97, type: !109)
!13665 = !DILocalVariable(name: "key", scope: !13654, file: !2346, line: 98, type: !13666)
!13666 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !13667)
!13667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !13668)
!13668 = !{!13669}
!13669 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13667, file: !253, line: 33, baseType: !109, size: 32)
!13670 = !DILocalVariable(name: "resched", scope: !13654, file: !2346, line: 99, type: !347)
!13671 = !DILocalVariable(name: "got_mutex", scope: !13654, file: !2346, line: 146, type: !109)
!13672 = !DILocalVariable(name: "waiter", scope: !13673, file: !2346, line: 169, type: !2256)
!13673 = distinct !DILexicalBlock(scope: !13674, file: !2346, line: 168, column: 36)
!13674 = distinct !DILexicalBlock(scope: !13654, file: !2346, line: 168, column: 6)
!13675 = !DILocation(line: 0, scope: !13654)
!13676 = !DILocation(line: 1031, column: 3, scope: !13677, inlinedAt: !13680)
!13677 = distinct !DISubprogram(name: "__get_IPSR", scope: !6437, file: !6437, line: 1027, type: !6524, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13678)
!13678 = !{!13679}
!13679 = !DILocalVariable(name: "result", scope: !13677, file: !6437, line: 1029, type: !110)
!13680 = distinct !DILocation(line: 48, column: 10, scope: !13681, inlinedAt: !13682)
!13681 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7489, file: !7489, line: 46, type: !7490, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !2050)
!13682 = distinct !DILocation(line: 101, column: 2, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13684, file: !2346, line: 101, column: 2)
!13684 = distinct !DILexicalBlock(scope: !13654, file: !2346, line: 101, column: 2)
!13685 = !{i64 2919974}
!13686 = !DILocation(line: 0, scope: !13677, inlinedAt: !13680)
!13687 = !DILocation(line: 48, column: 9, scope: !13681, inlinedAt: !13682)
!13688 = !DILocation(line: 101, column: 2, scope: !13684)
!13689 = !DILocation(line: 101, column: 2, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13683, file: !2346, line: 101, column: 2)
!13691 = !DILocalVariable(name: "l", arg: 1, scope: !13692, file: !253, line: 136, type: !13695)
!13692 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !13693, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13696)
!13693 = !DISubroutineType(types: !13694)
!13694 = !{!13666, !13695}
!13695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!13696 = !{!13691, !13697}
!13697 = !DILocalVariable(name: "k", scope: !13692, file: !253, line: 139, type: !13666)
!13698 = !DILocation(line: 0, scope: !13692, inlinedAt: !13699)
!13699 = distinct !DILocation(line: 105, column: 8, scope: !13654)
!13700 = !DILocation(line: 55, column: 2, scope: !13701, inlinedAt: !13705)
!13701 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6116, file: !6116, line: 42, type: !6117, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13702)
!13702 = !{!13703, !13704}
!13703 = !DILocalVariable(name: "key", scope: !13701, file: !6116, line: 44, type: !32)
!13704 = !DILocalVariable(name: "tmp", scope: !13701, file: !6116, line: 53, type: !32)
!13705 = distinct !DILocation(line: 145, column: 10, scope: !13692, inlinedAt: !13699)
!13706 = !{i64 2045399}
!13707 = !DILocation(line: 0, scope: !13701, inlinedAt: !13705)
!13708 = !DILocation(line: 148, column: 2, scope: !13709, inlinedAt: !13699)
!13709 = distinct !DILexicalBlock(scope: !13710, file: !253, line: 148, column: 2)
!13710 = distinct !DILexicalBlock(scope: !13692, file: !253, line: 148, column: 2)
!13711 = !DILocation(line: 148, column: 2, scope: !13710, inlinedAt: !13699)
!13712 = !DILocation(line: 148, column: 2, scope: !13713, inlinedAt: !13699)
!13713 = distinct !DILexicalBlock(scope: !13709, file: !253, line: 148, column: 2)
!13714 = !DILocation(line: 160, column: 2, scope: !13692, inlinedAt: !13699)
!13715 = !DILocation(line: 107, column: 6, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13654, file: !2346, line: 107, column: 6)
!13717 = !DILocation(line: 107, column: 6, scope: !13654)
!13718 = !{!"branch_weights", i32 2000, i32 1}
!13719 = !DILocation(line: 110, column: 6, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13716, file: !2346, line: 107, column: 71)
!13721 = !DILocation(line: 110, column: 21, scope: !13720)
!13722 = !DILocation(line: 109, column: 28, scope: !13720)
!13723 = !DILocation(line: 111, column: 13, scope: !13720)
!13724 = !DILocation(line: 114, column: 18, scope: !13720)
!13725 = !DILocation(line: 109, column: 10, scope: !13720)
!13726 = !DILocation(line: 109, column: 26, scope: !13720)
!13727 = !DILocation(line: 113, column: 20, scope: !13720)
!13728 = !DILocation(line: 114, column: 10, scope: !13720)
!13729 = !DILocation(line: 114, column: 16, scope: !13720)
!13730 = !DILocalVariable(name: "key", arg: 2, scope: !13731, file: !253, line: 190, type: !13666)
!13731 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !13732, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13734)
!13732 = !DISubroutineType(types: !13733)
!13733 = !{null, !13695, !13666}
!13734 = !{!13735, !13730}
!13735 = !DILocalVariable(name: "l", arg: 1, scope: !13731, file: !253, line: 189, type: !13695)
!13736 = !DILocation(line: 0, scope: !13731, inlinedAt: !13737)
!13737 = distinct !DILocation(line: 120, column: 3, scope: !13720)
!13738 = !DILocation(line: 194, column: 2, scope: !13739, inlinedAt: !13737)
!13739 = distinct !DILexicalBlock(scope: !13740, file: !253, line: 194, column: 2)
!13740 = distinct !DILexicalBlock(scope: !13731, file: !253, line: 194, column: 2)
!13741 = !DILocation(line: 194, column: 2, scope: !13740, inlinedAt: !13737)
!13742 = !DILocation(line: 194, column: 2, scope: !13743, inlinedAt: !13737)
!13743 = distinct !DILexicalBlock(scope: !13739, file: !253, line: 194, column: 2)
!13744 = !DILocalVariable(name: "key", arg: 1, scope: !13745, file: !6116, line: 84, type: !32)
!13745 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6116, file: !6116, line: 84, type: !6127, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13746)
!13746 = !{!13744}
!13747 = !DILocation(line: 0, scope: !13745, inlinedAt: !13748)
!13748 = distinct !DILocation(line: 215, column: 2, scope: !13731, inlinedAt: !13737)
!13749 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !13748)
!13750 = !{i64 2046216}
!13751 = !DILocation(line: 124, column: 3, scope: !13720)
!13752 = !DILocation(line: 127, column: 6, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13654, file: !2346, line: 127, column: 6)
!13754 = !DILocation(line: 127, column: 6, scope: !13654)
!13755 = !{!"branch_weights", i32 1, i32 2000}
!13756 = !DILocation(line: 0, scope: !13731, inlinedAt: !13757)
!13757 = distinct !DILocation(line: 128, column: 3, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13753, file: !2346, line: 127, column: 50)
!13759 = !DILocation(line: 194, column: 2, scope: !13739, inlinedAt: !13757)
!13760 = !DILocation(line: 194, column: 2, scope: !13740, inlinedAt: !13757)
!13761 = !DILocation(line: 194, column: 2, scope: !13743, inlinedAt: !13757)
!13762 = !DILocation(line: 0, scope: !13745, inlinedAt: !13763)
!13763 = distinct !DILocation(line: 215, column: 2, scope: !13731, inlinedAt: !13757)
!13764 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !13763)
!13765 = !DILocation(line: 132, column: 3, scope: !13758)
!13766 = !DILocation(line: 137, column: 53, scope: !13654)
!13767 = !DILocation(line: 137, column: 38, scope: !13654)
!13768 = !DILocation(line: 138, column: 29, scope: !13654)
!13769 = !DILocation(line: 138, column: 10, scope: !13654)
!13770 = !DILocation(line: 137, column: 13, scope: !13654)
!13771 = !DILocation(line: 142, column: 6, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13654, file: !2346, line: 142, column: 6)
!13773 = !DILocation(line: 142, column: 6, scope: !13654)
!13774 = !DILocation(line: 143, column: 13, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13772, file: !2346, line: 142, column: 59)
!13776 = !DILocation(line: 144, column: 2, scope: !13775)
!13777 = !DILocation(line: 146, column: 50, scope: !13654)
!13778 = !DILocation(line: 146, column: 18, scope: !13654)
!13779 = !DILocation(line: 153, column: 16, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13654, file: !2346, line: 153, column: 6)
!13781 = !DILocation(line: 153, column: 6, scope: !13654)
!13782 = !DILocation(line: 0, scope: !13692, inlinedAt: !13783)
!13783 = distinct !DILocation(line: 162, column: 8, scope: !13654)
!13784 = !DILocation(line: 55, column: 2, scope: !13701, inlinedAt: !13785)
!13785 = distinct !DILocation(line: 145, column: 10, scope: !13692, inlinedAt: !13783)
!13786 = !DILocation(line: 0, scope: !13701, inlinedAt: !13785)
!13787 = !DILocation(line: 148, column: 2, scope: !13709, inlinedAt: !13783)
!13788 = !DILocation(line: 148, column: 2, scope: !13710, inlinedAt: !13783)
!13789 = !DILocation(line: 148, column: 2, scope: !13713, inlinedAt: !13783)
!13790 = !DILocation(line: 160, column: 2, scope: !13692, inlinedAt: !13783)
!13791 = !DILocation(line: 168, column: 6, scope: !13674)
!13792 = !DILocation(line: 168, column: 6, scope: !13654)
!13793 = !DILocation(line: 169, column: 29, scope: !13673)
!13794 = !DILocation(line: 0, scope: !13673)
!13795 = !DILocation(line: 171, column: 22, scope: !13673)
!13796 = !DILocation(line: 171, column: 14, scope: !13673)
!13797 = !DILocation(line: 172, column: 42, scope: !13673)
!13798 = !DILocation(line: 172, column: 29, scope: !13673)
!13799 = !DILocation(line: 172, column: 55, scope: !13673)
!13800 = !DILocation(line: 172, column: 4, scope: !13673)
!13801 = !DILocation(line: 173, column: 11, scope: !13673)
!13802 = !DILocation(line: 177, column: 13, scope: !13673)
!13803 = !DILocation(line: 177, column: 48, scope: !13673)
!13804 = !DILocation(line: 180, column: 6, scope: !13654)
!13805 = !DILocation(line: 181, column: 3, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13807, file: !2346, line: 180, column: 15)
!13807 = distinct !DILexicalBlock(scope: !13654, file: !2346, line: 180, column: 6)
!13808 = !DILocation(line: 182, column: 2, scope: !13806)
!13809 = !DILocation(line: 0, scope: !13731, inlinedAt: !13810)
!13810 = distinct !DILocation(line: 183, column: 3, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13807, file: !2346, line: 182, column: 9)
!13812 = !DILocation(line: 194, column: 2, scope: !13739, inlinedAt: !13810)
!13813 = !DILocation(line: 194, column: 2, scope: !13740, inlinedAt: !13810)
!13814 = !DILocation(line: 194, column: 2, scope: !13743, inlinedAt: !13810)
!13815 = !DILocation(line: 0, scope: !13745, inlinedAt: !13816)
!13816 = distinct !DILocation(line: 215, column: 2, scope: !13731, inlinedAt: !13810)
!13817 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !13816)
!13818 = !DILocation(line: 189, column: 1, scope: !13654)
!13819 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2346, file: !2346, line: 72, type: !13820, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13822)
!13820 = !DISubroutineType(types: !13821)
!13821 = !{!744, !744, !744}
!13822 = !{!13823, !13824, !13825}
!13823 = !DILocalVariable(name: "target", arg: 1, scope: !13819, file: !2346, line: 72, type: !744)
!13824 = !DILocalVariable(name: "limit", arg: 2, scope: !13819, file: !2346, line: 72, type: !744)
!13825 = !DILocalVariable(name: "new_prio", scope: !13819, file: !2346, line: 74, type: !109)
!13826 = !DILocation(line: 0, scope: !13819)
!13827 = !DILocation(line: 74, column: 17, scope: !13819)
!13828 = !DILocation(line: 76, column: 13, scope: !13819)
!13829 = !DILocation(line: 78, column: 2, scope: !13819)
!13830 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12828, file: !12828, line: 211, type: !13831, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13833)
!13831 = !DISubroutineType(types: !13832)
!13832 = !{!347, !109, !109}
!13833 = !{!13834, !13835}
!13834 = !DILocalVariable(name: "prio", arg: 1, scope: !13830, file: !12828, line: 211, type: !109)
!13835 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13830, file: !12828, line: 211, type: !109)
!13836 = !DILocation(line: 0, scope: !13830)
!13837 = !DILocation(line: 213, column: 9, scope: !13830)
!13838 = !DILocation(line: 213, column: 2, scope: !13830)
!13839 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2346, file: !2346, line: 81, type: !13840, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13842)
!13840 = !DISubroutineType(types: !13841)
!13841 = !{!347, !13616, !744}
!13842 = !{!13843, !13844}
!13843 = !DILocalVariable(name: "mutex", arg: 1, scope: !13839, file: !2346, line: 81, type: !13616)
!13844 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13839, file: !2346, line: 81, type: !744)
!13845 = !DILocation(line: 0, scope: !13839)
!13846 = !DILocation(line: 83, column: 13, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13839, file: !2346, line: 83, column: 6)
!13848 = !DILocation(line: 83, column: 25, scope: !13847)
!13849 = !DILocation(line: 83, column: 6, scope: !13847)
!13850 = !DILocation(line: 83, column: 30, scope: !13847)
!13851 = !DILocation(line: 83, column: 6, scope: !13839)
!13852 = !DILocation(line: 90, column: 10, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13847, file: !2346, line: 83, column: 43)
!13854 = !DILocation(line: 90, column: 3, scope: !13853)
!13855 = !DILocation(line: 93, column: 1, scope: !13839)
!13856 = distinct !DISubprogram(name: "z_waitq_head", scope: !13189, file: !13189, line: 52, type: !13857, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13859)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{!2256, !2273}
!13859 = !{!13860}
!13860 = !DILocalVariable(name: "w", arg: 1, scope: !13856, file: !13189, line: 52, type: !2273)
!13861 = !DILocation(line: 0, scope: !13856)
!13862 = !DILocation(line: 54, column: 52, scope: !13856)
!13863 = !DILocation(line: 54, column: 28, scope: !13856)
!13864 = !DILocation(line: 54, column: 9, scope: !13856)
!13865 = !DILocation(line: 54, column: 2, scope: !13856)
!13866 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !13867, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13869)
!13867 = !DISubroutineType(types: !13868)
!13868 = !{!2241, !13645}
!13869 = !{!13870}
!13870 = !DILocalVariable(name: "list", arg: 1, scope: !13866, file: !127, line: 294, type: !13645)
!13871 = !DILocation(line: 0, scope: !13866)
!13872 = !DILocation(line: 296, column: 9, scope: !13866)
!13873 = !DILocation(line: 296, column: 49, scope: !13866)
!13874 = !DILocation(line: 296, column: 2, scope: !13866)
!13875 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !13876, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13878)
!13876 = !DISubroutineType(types: !13877)
!13877 = !{!347, !13645}
!13878 = !{!13879}
!13879 = !DILocalVariable(name: "list", arg: 1, scope: !13875, file: !127, line: 266, type: !13645)
!13880 = !DILocation(line: 0, scope: !13875)
!13881 = !DILocation(line: 268, column: 15, scope: !13875)
!13882 = !DILocation(line: 268, column: 20, scope: !13875)
!13883 = !DILocation(line: 268, column: 2, scope: !13875)
!13884 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12828, file: !12828, line: 206, type: !13831, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13885)
!13885 = !{!13886, !13887}
!13886 = !DILocalVariable(name: "prio1", arg: 1, scope: !13884, file: !12828, line: 206, type: !109)
!13887 = !DILocalVariable(name: "prio2", arg: 2, scope: !13884, file: !12828, line: 206, type: !109)
!13888 = !DILocation(line: 0, scope: !13884)
!13889 = !DILocation(line: 208, column: 15, scope: !13884)
!13890 = !DILocation(line: 208, column: 2, scope: !13884)
!13891 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12828, file: !12828, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13892)
!13892 = !{!13893}
!13893 = !DILocalVariable(name: "prio", arg: 1, scope: !13891, file: !12828, line: 186, type: !109)
!13894 = !DILocation(line: 0, scope: !13891)
!13895 = !DILocation(line: 188, column: 9, scope: !13891)
!13896 = !DILocation(line: 188, column: 2, scope: !13891)
!13897 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12828, file: !12828, line: 181, type: !13898, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13900)
!13898 = !DISubroutineType(types: !13899)
!13899 = !{!347, !109}
!13900 = !{!13901}
!13901 = !DILocalVariable(name: "prio", arg: 1, scope: !13897, file: !12828, line: 181, type: !109)
!13902 = !DILocation(line: 0, scope: !13897)
!13903 = !DILocation(line: 183, column: 14, scope: !13897)
!13904 = !DILocation(line: 183, column: 2, scope: !13897)
!13905 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2346, file: !2346, line: 201, type: !13614, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13906)
!13906 = !{!13907, !13908, !13909, !13910}
!13907 = !DILocalVariable(name: "mutex", arg: 1, scope: !13905, file: !2346, line: 201, type: !13616)
!13908 = !DILocalVariable(name: "new_owner", scope: !13905, file: !2346, line: 203, type: !2256)
!13909 = !DILocalVariable(name: "key", scope: !13905, file: !2346, line: 242, type: !13666)
!13910 = !DILabel(scope: !13905, name: "k_mutex_unlock_return", file: !2346, line: 270)
!13911 = !DILocation(line: 0, scope: !13905)
!13912 = !DILocation(line: 1031, column: 3, scope: !13677, inlinedAt: !13913)
!13913 = distinct !DILocation(line: 48, column: 10, scope: !13681, inlinedAt: !13914)
!13914 = distinct !DILocation(line: 205, column: 2, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13916, file: !2346, line: 205, column: 2)
!13916 = distinct !DILexicalBlock(scope: !13905, file: !2346, line: 205, column: 2)
!13917 = !DILocation(line: 0, scope: !13677, inlinedAt: !13913)
!13918 = !DILocation(line: 48, column: 9, scope: !13681, inlinedAt: !13914)
!13919 = !DILocation(line: 205, column: 2, scope: !13916)
!13920 = !DILocation(line: 205, column: 2, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13915, file: !2346, line: 205, column: 2)
!13922 = !DILocation(line: 209, column: 2, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13905, file: !2346, line: 209, column: 2)
!13924 = !DILocation(line: 209, column: 2, scope: !13905)
!13925 = !DILocation(line: 217, column: 2, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13905, file: !2346, line: 217, column: 2)
!13927 = !DILocation(line: 217, column: 2, scope: !13905)
!13928 = !DILocation(line: 229, column: 2, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13930, file: !2346, line: 229, column: 2)
!13930 = distinct !DILexicalBlock(scope: !13905, file: !2346, line: 229, column: 2)
!13931 = !DILocation(line: 229, column: 2, scope: !13930)
!13932 = !DILocation(line: 229, column: 2, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13929, file: !2346, line: 229, column: 2)
!13934 = !DILocation(line: 238, column: 20, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13936, file: !2346, line: 237, column: 30)
!13936 = distinct !DILexicalBlock(scope: !13905, file: !2346, line: 237, column: 6)
!13937 = !DILocation(line: 239, column: 3, scope: !13935)
!13938 = !DILocation(line: 0, scope: !13692, inlinedAt: !13939)
!13939 = distinct !DILocation(line: 242, column: 25, scope: !13905)
!13940 = !DILocation(line: 55, column: 2, scope: !13701, inlinedAt: !13941)
!13941 = distinct !DILocation(line: 145, column: 10, scope: !13692, inlinedAt: !13939)
!13942 = !DILocation(line: 0, scope: !13701, inlinedAt: !13941)
!13943 = !DILocation(line: 148, column: 2, scope: !13709, inlinedAt: !13939)
!13944 = !DILocation(line: 148, column: 2, scope: !13710, inlinedAt: !13939)
!13945 = !DILocation(line: 148, column: 2, scope: !13713, inlinedAt: !13939)
!13946 = !DILocation(line: 160, column: 2, scope: !13692, inlinedAt: !13939)
!13947 = !DILocation(line: 244, column: 34, scope: !13905)
!13948 = !DILocation(line: 244, column: 2, scope: !13905)
!13949 = !DILocation(line: 247, column: 44, scope: !13905)
!13950 = !DILocation(line: 247, column: 14, scope: !13905)
!13951 = !DILocation(line: 249, column: 15, scope: !13905)
!13952 = !DILocation(line: 254, column: 16, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13905, file: !2346, line: 254, column: 6)
!13954 = !DILocation(line: 254, column: 6, scope: !13905)
!13955 = !DILocation(line: 260, column: 44, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13953, file: !2346, line: 254, column: 25)
!13957 = !DILocation(line: 260, column: 28, scope: !13956)
!13958 = !DILocation(line: 260, column: 26, scope: !13956)
!13959 = !DILocalVariable(name: "thread", arg: 1, scope: !13960, file: !12848, line: 65, type: !2256)
!13960 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12848, file: !12848, line: 65, type: !13961, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !13963)
!13961 = !DISubroutineType(types: !13962)
!13962 = !{null, !2256, !32}
!13963 = !{!13959, !13964}
!13964 = !DILocalVariable(name: "value", arg: 2, scope: !13960, file: !12848, line: 65, type: !32)
!13965 = !DILocation(line: 0, scope: !13960, inlinedAt: !13966)
!13966 = distinct !DILocation(line: 261, column: 3, scope: !13956)
!13967 = !DILocation(line: 67, column: 15, scope: !13960, inlinedAt: !13966)
!13968 = !DILocation(line: 67, column: 33, scope: !13960, inlinedAt: !13966)
!13969 = !DILocation(line: 262, column: 3, scope: !13956)
!13970 = !DILocation(line: 263, column: 3, scope: !13956)
!13971 = !DILocation(line: 264, column: 2, scope: !13956)
!13972 = !DILocation(line: 265, column: 21, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13953, file: !2346, line: 264, column: 9)
!13974 = !DILocation(line: 0, scope: !13731, inlinedAt: !13975)
!13975 = distinct !DILocation(line: 266, column: 3, scope: !13973)
!13976 = !DILocation(line: 194, column: 2, scope: !13739, inlinedAt: !13975)
!13977 = !DILocation(line: 194, column: 2, scope: !13740, inlinedAt: !13975)
!13978 = !DILocation(line: 194, column: 2, scope: !13743, inlinedAt: !13975)
!13979 = !DILocation(line: 0, scope: !13745, inlinedAt: !13980)
!13980 = distinct !DILocation(line: 215, column: 2, scope: !13731, inlinedAt: !13975)
!13981 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !13980)
!13982 = !DILocation(line: 274, column: 1, scope: !13905)
!13983 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2460, file: !2460, line: 93, type: !13984, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !13986)
!13984 = !DISubroutineType(types: !13985)
!13985 = !{!744, !2352, !2352}
!13986 = !{!13987, !13988, !13989, !13990}
!13987 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13983, file: !2460, line: 93, type: !2352)
!13988 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13983, file: !2460, line: 94, type: !2352)
!13989 = !DILocalVariable(name: "b1", scope: !13983, file: !2460, line: 97, type: !744)
!13990 = !DILocalVariable(name: "b2", scope: !13983, file: !2460, line: 98, type: !744)
!13991 = !DILocation(line: 0, scope: !13983)
!13992 = !DILocation(line: 97, column: 30, scope: !13983)
!13993 = !DILocation(line: 98, column: 30, scope: !13983)
!13994 = !DILocation(line: 100, column: 9, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13983, file: !2460, line: 100, column: 6)
!13996 = !DILocation(line: 100, column: 6, scope: !13983)
!13997 = !DILocation(line: 125, column: 1, scope: !13983)
!13998 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2460, file: !2460, line: 428, type: !13999, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14001)
!13999 = !DISubroutineType(types: !14000)
!14000 = !{null, !2352}
!14001 = !{!14002}
!14002 = !DILocalVariable(name: "curr", arg: 1, scope: !13998, file: !2460, line: 428, type: !2352)
!14003 = !DILocation(line: 0, scope: !13998)
!14004 = !DILocation(line: 434, column: 6, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !13998, file: !2460, line: 434, column: 6)
!14006 = !DILocation(line: 434, column: 23, scope: !14005)
!14007 = !DILocation(line: 434, column: 6, scope: !13998)
!14008 = !DILocation(line: 435, column: 50, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14005, file: !2460, line: 434, column: 29)
!14010 = !DILocation(line: 435, column: 48, scope: !14009)
!14011 = !DILocation(line: 435, column: 29, scope: !14009)
!14012 = !DILocation(line: 436, column: 24, scope: !14009)
!14013 = !DILocation(line: 436, column: 3, scope: !14009)
!14014 = !DILocation(line: 437, column: 2, scope: !14009)
!14015 = !DILocation(line: 438, column: 1, scope: !13998)
!14016 = distinct !DISubprogram(name: "slice_time", scope: !2460, file: !2460, line: 407, type: !14017, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14019)
!14017 = !DISubroutineType(types: !14018)
!14018 = !{!109, !2352}
!14019 = !{!14020, !14021}
!14020 = !DILocalVariable(name: "curr", arg: 1, scope: !14016, file: !2460, line: 407, type: !2352)
!14021 = !DILocalVariable(name: "ret", scope: !14016, file: !2460, line: 409, type: !109)
!14022 = !DILocation(line: 0, scope: !14016)
!14023 = !DILocation(line: 409, column: 12, scope: !14016)
!14024 = !DILocation(line: 416, column: 2, scope: !14016)
!14025 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2460, file: !2460, line: 440, type: !14026, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14028)
!14026 = !DISubroutineType(types: !14027)
!14027 = !{null, !744, !109}
!14028 = !{!14029, !14030, !14031, !14037}
!14029 = !DILocalVariable(name: "slice", arg: 1, scope: !14025, file: !2460, line: 440, type: !744)
!14030 = !DILocalVariable(name: "prio", arg: 2, scope: !14025, file: !2460, line: 440, type: !109)
!14031 = !DILocalVariable(name: "__i", scope: !14032, file: !2460, line: 442, type: !14033)
!14032 = distinct !DILexicalBlock(scope: !14025, file: !2460, line: 442, column: 2)
!14033 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !14034)
!14034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !14035)
!14035 = !{!14036}
!14036 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14034, file: !253, line: 33, baseType: !109, size: 32)
!14037 = !DILocalVariable(name: "__key", scope: !14032, file: !2460, line: 442, type: !14033)
!14038 = !DILocation(line: 0, scope: !14025)
!14039 = !DILocation(line: 0, scope: !14032)
!14040 = !DILocalVariable(name: "l", arg: 1, scope: !14041, file: !253, line: 136, type: !14044)
!14041 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !14042, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14045)
!14042 = !DISubroutineType(types: !14043)
!14043 = !{!14033, !14044}
!14044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!14045 = !{!14040, !14046}
!14046 = !DILocalVariable(name: "k", scope: !14041, file: !253, line: 139, type: !14033)
!14047 = !DILocation(line: 0, scope: !14041, inlinedAt: !14048)
!14048 = distinct !DILocation(line: 442, column: 2, scope: !14032)
!14049 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !14054)
!14050 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6116, file: !6116, line: 42, type: !6117, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14051)
!14051 = !{!14052, !14053}
!14052 = !DILocalVariable(name: "key", scope: !14050, file: !6116, line: 44, type: !32)
!14053 = !DILocalVariable(name: "tmp", scope: !14050, file: !6116, line: 53, type: !32)
!14054 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !14048)
!14055 = !{i64 2084962}
!14056 = !DILocation(line: 0, scope: !14050, inlinedAt: !14054)
!14057 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14048)
!14058 = distinct !DILexicalBlock(scope: !14059, file: !253, line: 148, column: 2)
!14059 = distinct !DILexicalBlock(scope: !14041, file: !253, line: 148, column: 2)
!14060 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14048)
!14061 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !14048)
!14062 = distinct !DILexicalBlock(scope: !14058, file: !253, line: 148, column: 2)
!14063 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !14048)
!14064 = !DILocation(line: 443, column: 29, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14066, file: !2460, line: 442, column: 26)
!14066 = distinct !DILexicalBlock(scope: !14032, file: !2460, line: 442, column: 2)
!14067 = !DILocation(line: 444, column: 17, scope: !14065)
!14068 = !DILocation(line: 445, column: 51, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14065, file: !2460, line: 445, column: 7)
!14070 = !DILocation(line: 445, column: 7, scope: !14065)
!14071 = !DILocation(line: 0, scope: !14065)
!14072 = !DILocation(line: 451, column: 18, scope: !14065)
!14073 = !DILocation(line: 452, column: 3, scope: !14065)
!14074 = !DILocalVariable(name: "key", arg: 2, scope: !14075, file: !253, line: 190, type: !14033)
!14075 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !14076, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14078)
!14076 = !DISubroutineType(types: !14077)
!14077 = !{null, !14044, !14033}
!14078 = !{!14079, !14074}
!14079 = !DILocalVariable(name: "l", arg: 1, scope: !14075, file: !253, line: 189, type: !14044)
!14080 = !DILocation(line: 0, scope: !14075, inlinedAt: !14081)
!14081 = distinct !DILocation(line: 442, column: 2, scope: !14066)
!14082 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14081)
!14083 = distinct !DILexicalBlock(scope: !14084, file: !253, line: 194, column: 2)
!14084 = distinct !DILexicalBlock(scope: !14075, file: !253, line: 194, column: 2)
!14085 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14081)
!14086 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !14081)
!14087 = distinct !DILexicalBlock(scope: !14083, file: !253, line: 194, column: 2)
!14088 = !DILocalVariable(name: "key", arg: 1, scope: !14089, file: !6116, line: 84, type: !32)
!14089 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6116, file: !6116, line: 84, type: !6127, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14090)
!14090 = !{!14088}
!14091 = !DILocation(line: 0, scope: !14089, inlinedAt: !14092)
!14092 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !14081)
!14093 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14092)
!14094 = !{i64 2085779}
!14095 = !DILocation(line: 454, column: 1, scope: !14025)
!14096 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13447, file: !13447, line: 389, type: !7724, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14097)
!14097 = !{!14098}
!14098 = !DILocalVariable(name: "t", arg: 1, scope: !14096, file: !13447, line: 389, type: !110)
!14099 = !DILocation(line: 0, scope: !14096)
!14100 = !DILocalVariable(name: "t", arg: 1, scope: !14101, file: !13447, line: 102, type: !111)
!14101 = distinct !DISubprogram(name: "z_tmcvt", scope: !13447, file: !13447, line: 102, type: !13455, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14102)
!14102 = !{!14100, !14103, !14104, !14105, !14106, !14107, !14108, !14109, !14110, !14111, !14112}
!14103 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14101, file: !13447, line: 102, type: !110)
!14104 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14101, file: !13447, line: 103, type: !110)
!14105 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14101, file: !13447, line: 103, type: !347)
!14106 = !DILocalVariable(name: "result32", arg: 5, scope: !14101, file: !13447, line: 104, type: !347)
!14107 = !DILocalVariable(name: "round_up", arg: 6, scope: !14101, file: !13447, line: 104, type: !347)
!14108 = !DILocalVariable(name: "round_off", arg: 7, scope: !14101, file: !13447, line: 105, type: !347)
!14109 = !DILocalVariable(name: "mul_ratio", scope: !14101, file: !13447, line: 107, type: !347)
!14110 = !DILocalVariable(name: "div_ratio", scope: !14101, file: !13447, line: 109, type: !347)
!14111 = !DILocalVariable(name: "off", scope: !14101, file: !13447, line: 116, type: !111)
!14112 = !DILocalVariable(name: "rdivisor", scope: !14113, file: !13447, line: 119, type: !110)
!14113 = distinct !DILexicalBlock(scope: !14114, file: !13447, line: 118, column: 18)
!14114 = distinct !DILexicalBlock(scope: !14101, file: !13447, line: 118, column: 6)
!14115 = !DILocation(line: 0, scope: !14101, inlinedAt: !14116)
!14116 = distinct !DILocation(line: 392, column: 9, scope: !14096)
!14117 = !DILocation(line: 143, column: 25, scope: !14118, inlinedAt: !14116)
!14118 = distinct !DILexicalBlock(scope: !14119, file: !13447, line: 142, column: 17)
!14119 = distinct !DILexicalBlock(scope: !14120, file: !13447, line: 142, column: 7)
!14120 = distinct !DILexicalBlock(scope: !14121, file: !13447, line: 141, column: 24)
!14121 = distinct !DILexicalBlock(scope: !14122, file: !13447, line: 141, column: 13)
!14122 = distinct !DILexicalBlock(scope: !14101, file: !13447, line: 134, column: 6)
!14123 = !DILocation(line: 392, column: 2, scope: !14096)
!14124 = distinct !DISubprogram(name: "z_time_slice", scope: !2460, file: !2460, line: 502, type: !8377, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14125)
!14125 = !{!14126, !14127}
!14126 = !DILocalVariable(name: "ticks", arg: 1, scope: !14124, file: !2460, line: 502, type: !109)
!14127 = !DILocalVariable(name: "key", scope: !14124, file: !2460, line: 511, type: !14033)
!14128 = !DILocation(line: 0, scope: !14124)
!14129 = !DILocation(line: 0, scope: !14041, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 511, column: 25, scope: !14124)
!14131 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !14132)
!14132 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !14130)
!14133 = !DILocation(line: 0, scope: !14050, inlinedAt: !14132)
!14134 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14130)
!14135 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14130)
!14136 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !14130)
!14137 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !14130)
!14138 = !DILocation(line: 514, column: 6, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14124, file: !2460, line: 514, column: 6)
!14140 = !DILocation(line: 514, column: 25, scope: !14139)
!14141 = !DILocation(line: 514, column: 22, scope: !14139)
!14142 = !DILocation(line: 514, column: 6, scope: !14124)
!14143 = !DILocation(line: 515, column: 3, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14139, file: !2460, line: 514, column: 35)
!14145 = !DILocation(line: 0, scope: !14075, inlinedAt: !14146)
!14146 = distinct !DILocation(line: 516, column: 3, scope: !14144)
!14147 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14146)
!14148 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14146)
!14149 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !14146)
!14150 = !DILocation(line: 0, scope: !14089, inlinedAt: !14151)
!14151 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !14146)
!14152 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14151)
!14153 = !DILocation(line: 517, column: 3, scope: !14144)
!14154 = !DILocation(line: 519, column: 18, scope: !14124)
!14155 = !DILocation(line: 522, column: 6, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14124, file: !2460, line: 522, column: 6)
!14157 = !DILocation(line: 522, column: 27, scope: !14156)
!14158 = !DILocation(line: 522, column: 30, scope: !14156)
!14159 = !DILocation(line: 522, column: 6, scope: !14124)
!14160 = !DILocation(line: 523, column: 30, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14162, file: !2460, line: 523, column: 7)
!14162 = distinct !DILexicalBlock(scope: !14156, file: !2460, line: 522, column: 51)
!14163 = !DILocation(line: 523, column: 13, scope: !14161)
!14164 = !DILocation(line: 523, column: 7, scope: !14162)
!14165 = !DILocation(line: 530, column: 10, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14161, file: !2460, line: 523, column: 43)
!14167 = !DILocation(line: 531, column: 3, scope: !14166)
!14168 = !DILocation(line: 532, column: 30, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14161, file: !2460, line: 531, column: 10)
!14170 = !DILocation(line: 535, column: 29, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14156, file: !2460, line: 534, column: 9)
!14172 = !DILocation(line: 0, scope: !14075, inlinedAt: !14173)
!14173 = distinct !DILocation(line: 537, column: 2, scope: !14124)
!14174 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14173)
!14175 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14173)
!14176 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !14173)
!14177 = !DILocation(line: 0, scope: !14089, inlinedAt: !14178)
!14178 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !14173)
!14179 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14178)
!14180 = !DILocation(line: 538, column: 1, scope: !14124)
!14181 = distinct !DISubprogram(name: "sliceable", scope: !2460, file: !2460, line: 468, type: !14182, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14184)
!14182 = !DISubroutineType(types: !14183)
!14183 = !{!347, !2352}
!14184 = !{!14185, !14186}
!14185 = !DILocalVariable(name: "thread", arg: 1, scope: !14181, file: !2460, line: 468, type: !2352)
!14186 = !DILocalVariable(name: "ret", scope: !14181, file: !2460, line: 470, type: !347)
!14187 = !DILocation(line: 0, scope: !14181)
!14188 = !DILocation(line: 470, column: 13, scope: !14181)
!14189 = !DILocation(line: 471, column: 3, scope: !14181)
!14190 = !DILocation(line: 471, column: 7, scope: !14181)
!14191 = !DILocation(line: 472, column: 3, scope: !14181)
!14192 = !DILocation(line: 472, column: 37, scope: !14181)
!14193 = !DILocation(line: 472, column: 24, scope: !14181)
!14194 = !DILocation(line: 472, column: 43, scope: !14181)
!14195 = !DILocation(line: 472, column: 7, scope: !14181)
!14196 = !DILocation(line: 473, column: 3, scope: !14181)
!14197 = !DILocation(line: 473, column: 7, scope: !14181)
!14198 = !DILocation(line: 473, column: 6, scope: !14181)
!14199 = !DILocation(line: 479, column: 2, scope: !14181)
!14200 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2460, file: !2460, line: 482, type: !14201, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14203)
!14201 = !DISubroutineType(types: !14202)
!14202 = !{!14033, !14033}
!14203 = !{!14204, !14205}
!14204 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14200, file: !2460, line: 482, type: !14033)
!14205 = !DILocalVariable(name: "curr", scope: !14200, file: !2460, line: 484, type: !2352)
!14206 = !DILocation(line: 0, scope: !14200)
!14207 = !DILocation(line: 484, column: 26, scope: !14200)
!14208 = !DILocation(line: 493, column: 7, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14200, file: !2460, line: 493, column: 6)
!14210 = !DILocation(line: 493, column: 6, scope: !14200)
!14211 = !DILocation(line: 494, column: 3, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14209, file: !2460, line: 493, column: 49)
!14213 = !DILocation(line: 495, column: 2, scope: !14212)
!14214 = !DILocation(line: 496, column: 2, scope: !14200)
!14215 = !DILocation(line: 499, column: 1, scope: !14200)
!14216 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12828, file: !12828, line: 106, type: !14182, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14217)
!14217 = !{!14218, !14219}
!14218 = !DILocalVariable(name: "thread", arg: 1, scope: !14216, file: !12828, line: 106, type: !2352)
!14219 = !DILocalVariable(name: "state", scope: !14216, file: !12828, line: 108, type: !180)
!14220 = !DILocation(line: 0, scope: !14216)
!14221 = !DILocation(line: 108, column: 31, scope: !14216)
!14222 = !DILocation(line: 110, column: 16, scope: !14216)
!14223 = !DILocation(line: 111, column: 41, scope: !14216)
!14224 = !DILocation(line: 110, column: 2, scope: !14216)
!14225 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2460, file: !2460, line: 393, type: !13999, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14226)
!14226 = !{!14227}
!14227 = !DILocalVariable(name: "thread", arg: 1, scope: !14225, file: !2460, line: 393, type: !2352)
!14228 = !DILocation(line: 0, scope: !14225)
!14229 = !DILocation(line: 395, column: 6, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14225, file: !2460, line: 395, column: 6)
!14231 = !DILocation(line: 395, column: 6, scope: !14225)
!14232 = !DILocalVariable(name: "thread", arg: 1, scope: !14233, file: !2460, line: 264, type: !2352)
!14233 = distinct !DISubprogram(name: "dequeue_thread", scope: !2460, file: !2460, line: 264, type: !13999, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14234)
!14234 = !{!14232}
!14235 = !DILocation(line: 0, scope: !14233, inlinedAt: !14236)
!14236 = distinct !DILocation(line: 396, column: 3, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14230, file: !2460, line: 395, column: 34)
!14238 = !DILocation(line: 266, column: 15, scope: !14233, inlinedAt: !14236)
!14239 = !DILocation(line: 266, column: 28, scope: !14233, inlinedAt: !14236)
!14240 = !DILocalVariable(name: "thread", arg: 1, scope: !14241, file: !2460, line: 232, type: !2352)
!14241 = distinct !DISubprogram(name: "runq_remove", scope: !2460, file: !2460, line: 232, type: !13999, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14242)
!14242 = !{!14240}
!14243 = !DILocation(line: 0, scope: !14241, inlinedAt: !14244)
!14244 = distinct !DILocation(line: 268, column: 3, scope: !14245, inlinedAt: !14236)
!14245 = distinct !DILexicalBlock(scope: !14246, file: !2460, line: 267, column: 35)
!14246 = distinct !DILexicalBlock(scope: !14233, file: !2460, line: 267, column: 6)
!14247 = !DILocation(line: 234, column: 2, scope: !14241, inlinedAt: !14244)
!14248 = !DILocation(line: 397, column: 2, scope: !14237)
!14249 = !DILocalVariable(name: "thread", arg: 1, scope: !14250, file: !2460, line: 250, type: !2352)
!14250 = distinct !DISubprogram(name: "queue_thread", scope: !2460, file: !2460, line: 250, type: !13999, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14251)
!14251 = !{!14249}
!14252 = !DILocation(line: 0, scope: !14250, inlinedAt: !14253)
!14253 = distinct !DILocation(line: 398, column: 2, scope: !14225)
!14254 = !DILocation(line: 252, column: 15, scope: !14250, inlinedAt: !14253)
!14255 = !DILocation(line: 252, column: 28, scope: !14250, inlinedAt: !14253)
!14256 = !DILocalVariable(name: "thread", arg: 1, scope: !14257, file: !2460, line: 227, type: !2352)
!14257 = distinct !DISubprogram(name: "runq_add", scope: !2460, file: !2460, line: 227, type: !13999, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14258)
!14258 = !{!14256}
!14259 = !DILocation(line: 0, scope: !14257, inlinedAt: !14260)
!14260 = distinct !DILocation(line: 254, column: 3, scope: !14261, inlinedAt: !14253)
!14261 = distinct !DILexicalBlock(scope: !14262, file: !2460, line: 253, column: 35)
!14262 = distinct !DILexicalBlock(scope: !14250, file: !2460, line: 253, column: 6)
!14263 = !DILocalVariable(name: "pq", arg: 1, scope: !14264, file: !2460, line: 181, type: !14267)
!14264 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2460, file: !2460, line: 181, type: !14265, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14268)
!14265 = !DISubroutineType(types: !14266)
!14266 = !{null, !14267, !2352}
!14267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!14268 = !{!14263, !14269, !14270}
!14269 = !DILocalVariable(name: "thread", arg: 2, scope: !14264, file: !2460, line: 182, type: !2352)
!14270 = !DILocalVariable(name: "t", scope: !14264, file: !2460, line: 184, type: !2352)
!14271 = !DILocation(line: 0, scope: !14264, inlinedAt: !14272)
!14272 = distinct !DILocation(line: 229, column: 2, scope: !14257, inlinedAt: !14260)
!14273 = !DILocation(line: 186, column: 2, scope: !14274, inlinedAt: !14272)
!14274 = distinct !DILexicalBlock(scope: !14275, file: !2460, line: 186, column: 2)
!14275 = distinct !DILexicalBlock(scope: !14264, file: !2460, line: 186, column: 2)
!14276 = !DILocation(line: 186, column: 2, scope: !14275, inlinedAt: !14272)
!14277 = !DILocation(line: 186, column: 2, scope: !14278, inlinedAt: !14272)
!14278 = distinct !DILexicalBlock(scope: !14274, file: !2460, line: 186, column: 2)
!14279 = !DILocation(line: 188, column: 2, scope: !14280, inlinedAt: !14272)
!14280 = distinct !DILexicalBlock(scope: !14264, file: !2460, line: 188, column: 2)
!14281 = !DILocation(line: 188, column: 2, scope: !14282, inlinedAt: !14272)
!14282 = distinct !DILexicalBlock(scope: !14280, file: !2460, line: 188, column: 2)
!14283 = !DILocation(line: 0, scope: !14280, inlinedAt: !14272)
!14284 = !DILocation(line: 189, column: 7, scope: !14285, inlinedAt: !14272)
!14285 = distinct !DILexicalBlock(scope: !14286, file: !2460, line: 189, column: 7)
!14286 = distinct !DILexicalBlock(scope: !14282, file: !2460, line: 188, column: 56)
!14287 = !DILocation(line: 189, column: 35, scope: !14285, inlinedAt: !14272)
!14288 = !DILocation(line: 189, column: 7, scope: !14286, inlinedAt: !14272)
!14289 = !DILocation(line: 191, column: 21, scope: !14290, inlinedAt: !14272)
!14290 = distinct !DILexicalBlock(scope: !14285, file: !2460, line: 189, column: 40)
!14291 = !DILocation(line: 190, column: 4, scope: !14290, inlinedAt: !14272)
!14292 = !DILocation(line: 192, column: 4, scope: !14290, inlinedAt: !14272)
!14293 = distinct !{!14293, !14279, !14294}
!14294 = !DILocation(line: 194, column: 2, scope: !14280, inlinedAt: !14272)
!14295 = !DILocation(line: 196, column: 37, scope: !14264, inlinedAt: !14272)
!14296 = !DILocation(line: 196, column: 2, scope: !14264, inlinedAt: !14272)
!14297 = !DILocation(line: 197, column: 1, scope: !14264, inlinedAt: !14272)
!14298 = !DILocation(line: 399, column: 25, scope: !14225)
!14299 = !DILocation(line: 399, column: 22, scope: !14225)
!14300 = !DILocation(line: 399, column: 2, scope: !14225)
!14301 = !DILocation(line: 400, column: 1, scope: !14225)
!14302 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12828, file: !12828, line: 136, type: !14182, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14303)
!14303 = !{!14304}
!14304 = !DILocalVariable(name: "thread", arg: 1, scope: !14302, file: !12828, line: 136, type: !2352)
!14305 = !DILocation(line: 0, scope: !14302)
!14306 = !DILocation(line: 138, column: 9, scope: !14302)
!14307 = !DILocation(line: 138, column: 2, scope: !14302)
!14308 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2460, file: !2460, line: 1137, type: !14265, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14309)
!14309 = !{!14310, !14311}
!14310 = !DILocalVariable(name: "pq", arg: 1, scope: !14308, file: !2460, line: 1137, type: !14267)
!14311 = !DILocalVariable(name: "thread", arg: 2, scope: !14308, file: !2460, line: 1137, type: !2352)
!14312 = !DILocation(line: 0, scope: !14308)
!14313 = !DILocation(line: 1139, column: 2, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14315, file: !2460, line: 1139, column: 2)
!14315 = distinct !DILexicalBlock(scope: !14308, file: !2460, line: 1139, column: 2)
!14316 = !DILocation(line: 1139, column: 2, scope: !14315)
!14317 = !DILocation(line: 1139, column: 2, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14314, file: !2460, line: 1139, column: 2)
!14319 = !DILocation(line: 1141, column: 33, scope: !14308)
!14320 = !DILocation(line: 1141, column: 2, scope: !14308)
!14321 = !DILocation(line: 1142, column: 1, scope: !14308)
!14322 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12828, file: !12828, line: 83, type: !14182, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14323)
!14323 = !{!14324}
!14324 = !DILocalVariable(name: "thread", arg: 1, scope: !14322, file: !12828, line: 83, type: !2352)
!14325 = !DILocation(line: 0, scope: !14322)
!14326 = !DILocation(line: 89, column: 16, scope: !14322)
!14327 = !DILocation(line: 89, column: 2, scope: !14322)
!14328 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14329, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14331)
!14329 = !DISubroutineType(types: !14330)
!14330 = !{!2456, !14267}
!14331 = !{!14332}
!14332 = !DILocalVariable(name: "list", arg: 1, scope: !14328, file: !127, line: 294, type: !14267)
!14333 = !DILocation(line: 0, scope: !14328)
!14334 = !DILocation(line: 296, column: 9, scope: !14328)
!14335 = !DILocation(line: 296, column: 49, scope: !14328)
!14336 = !DILocation(line: 296, column: 2, scope: !14328)
!14337 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14338, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14340)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{null, !2456, !2456}
!14340 = !{!14341, !14342, !14343}
!14341 = !DILocalVariable(name: "successor", arg: 1, scope: !14337, file: !127, line: 443, type: !2456)
!14342 = !DILocalVariable(name: "node", arg: 2, scope: !14337, file: !127, line: 443, type: !2456)
!14343 = !DILocalVariable(name: "prev", scope: !14337, file: !127, line: 445, type: !14344)
!14344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2456)
!14345 = !DILocation(line: 0, scope: !14337)
!14346 = !DILocation(line: 445, column: 39, scope: !14337)
!14347 = !DILocation(line: 447, column: 8, scope: !14337)
!14348 = !DILocation(line: 447, column: 13, scope: !14337)
!14349 = !DILocation(line: 448, column: 8, scope: !14337)
!14350 = !DILocation(line: 448, column: 13, scope: !14337)
!14351 = !DILocation(line: 449, column: 8, scope: !14337)
!14352 = !DILocation(line: 449, column: 13, scope: !14337)
!14353 = !DILocation(line: 450, column: 18, scope: !14337)
!14354 = !DILocation(line: 451, column: 1, scope: !14337)
!14355 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !14356, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14358)
!14356 = !DISubroutineType(types: !14357)
!14357 = !{!2456, !14267, !2456}
!14358 = !{!14359, !14360}
!14359 = !DILocalVariable(name: "list", arg: 1, scope: !14355, file: !127, line: 341, type: !14267)
!14360 = !DILocalVariable(name: "node", arg: 2, scope: !14355, file: !127, line: 342, type: !2456)
!14361 = !DILocation(line: 0, scope: !14355)
!14362 = !DILocation(line: 344, column: 15, scope: !14355)
!14363 = !DILocation(line: 344, column: 9, scope: !14355)
!14364 = !DILocation(line: 344, column: 26, scope: !14355)
!14365 = !DILocation(line: 344, column: 2, scope: !14355)
!14366 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !14367, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14369)
!14367 = !DISubroutineType(types: !14368)
!14368 = !{null, !14267, !2456}
!14369 = !{!14370, !14371, !14372}
!14370 = !DILocalVariable(name: "list", arg: 1, scope: !14366, file: !127, line: 404, type: !14267)
!14371 = !DILocalVariable(name: "node", arg: 2, scope: !14366, file: !127, line: 404, type: !2456)
!14372 = !DILocalVariable(name: "tail", scope: !14366, file: !127, line: 406, type: !14344)
!14373 = !DILocation(line: 0, scope: !14366)
!14374 = !DILocation(line: 406, column: 34, scope: !14366)
!14375 = !DILocation(line: 408, column: 8, scope: !14366)
!14376 = !DILocation(line: 408, column: 13, scope: !14366)
!14377 = !DILocation(line: 409, column: 8, scope: !14366)
!14378 = !DILocation(line: 409, column: 13, scope: !14366)
!14379 = !DILocation(line: 411, column: 8, scope: !14366)
!14380 = !DILocation(line: 411, column: 13, scope: !14366)
!14381 = !DILocation(line: 412, column: 13, scope: !14366)
!14382 = !DILocation(line: 413, column: 1, scope: !14366)
!14383 = distinct !DISubprogram(name: "update_cache", scope: !2460, file: !2460, line: 559, type: !8377, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14384)
!14384 = !{!14385, !14386}
!14385 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14383, file: !2460, line: 559, type: !109)
!14386 = !DILocalVariable(name: "thread", scope: !14383, file: !2460, line: 562, type: !2352)
!14387 = !DILocation(line: 0, scope: !14383)
!14388 = !DILocation(line: 239, column: 9, scope: !14389, inlinedAt: !14392)
!14389 = distinct !DISubprogram(name: "runq_best", scope: !2460, file: !2460, line: 237, type: !14390, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2050)
!14390 = !DISubroutineType(types: !14391)
!14391 = !{!2352}
!14392 = distinct !DILocation(line: 314, column: 28, scope: !14393, inlinedAt: !14396)
!14393 = distinct !DISubprogram(name: "next_up", scope: !2460, file: !2460, line: 312, type: !14390, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14394)
!14394 = !{!14395}
!14395 = !DILocalVariable(name: "thread", scope: !14393, file: !2460, line: 314, type: !2352)
!14396 = distinct !DILocation(line: 562, column: 28, scope: !14383)
!14397 = !DILocation(line: 0, scope: !14393, inlinedAt: !14396)
!14398 = !DILocation(line: 340, column: 17, scope: !14393, inlinedAt: !14396)
!14399 = !DILocation(line: 340, column: 9, scope: !14393, inlinedAt: !14396)
!14400 = !DILocalVariable(name: "thread", arg: 1, scope: !14401, file: !2460, line: 127, type: !2352)
!14401 = distinct !DISubprogram(name: "should_preempt", scope: !2460, file: !2460, line: 127, type: !14402, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14404)
!14402 = !DISubroutineType(types: !14403)
!14403 = !{!347, !2352, !109}
!14404 = !{!14400, !14405}
!14405 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14401, file: !2460, line: 128, type: !109)
!14406 = !DILocation(line: 0, scope: !14401, inlinedAt: !14407)
!14407 = distinct !DILocation(line: 564, column: 6, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14383, file: !2460, line: 564, column: 6)
!14409 = !DILocation(line: 133, column: 17, scope: !14410, inlinedAt: !14407)
!14410 = distinct !DILexicalBlock(scope: !14401, file: !2460, line: 133, column: 6)
!14411 = !DILocation(line: 0, scope: !14408)
!14412 = !DILocation(line: 133, column: 6, scope: !14401, inlinedAt: !14407)
!14413 = !DILocation(line: 137, column: 2, scope: !14414, inlinedAt: !14407)
!14414 = distinct !DILexicalBlock(scope: !14415, file: !2460, line: 137, column: 2)
!14415 = distinct !DILexicalBlock(scope: !14401, file: !2460, line: 137, column: 2)
!14416 = !DILocation(line: 137, column: 2, scope: !14415, inlinedAt: !14407)
!14417 = !DILocation(line: 137, column: 2, scope: !14418, inlinedAt: !14407)
!14418 = distinct !DILexicalBlock(scope: !14414, file: !2460, line: 137, column: 2)
!14419 = !DILocation(line: 140, column: 6, scope: !14420, inlinedAt: !14407)
!14420 = distinct !DILexicalBlock(scope: !14401, file: !2460, line: 140, column: 6)
!14421 = !DILocation(line: 140, column: 6, scope: !14401, inlinedAt: !14407)
!14422 = !DILocation(line: 150, column: 9, scope: !14423, inlinedAt: !14407)
!14423 = distinct !DILexicalBlock(scope: !14401, file: !2460, line: 149, column: 6)
!14424 = !DILocation(line: 149, column: 6, scope: !14401, inlinedAt: !14407)
!14425 = !DILocation(line: 157, column: 6, scope: !14426, inlinedAt: !14407)
!14426 = distinct !DILexicalBlock(scope: !14401, file: !2460, line: 157, column: 6)
!14427 = !DILocation(line: 564, column: 6, scope: !14383)
!14428 = !DILocation(line: 566, column: 14, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !2460, line: 566, column: 7)
!14430 = distinct !DILexicalBlock(scope: !14408, file: !2460, line: 564, column: 42)
!14431 = !DILocation(line: 566, column: 7, scope: !14430)
!14432 = !DILocation(line: 567, column: 4, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14429, file: !2460, line: 566, column: 27)
!14434 = !DILocation(line: 568, column: 3, scope: !14433)
!14435 = !DILocation(line: 585, column: 1, scope: !14383)
!14436 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2460, file: !2460, line: 1144, type: !14437, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14439)
!14437 = !DISubroutineType(types: !14438)
!14438 = !{!2352, !14267}
!14439 = !{!14440, !14441, !14442}
!14440 = !DILocalVariable(name: "pq", arg: 1, scope: !14436, file: !2460, line: 1144, type: !14267)
!14441 = !DILocalVariable(name: "thread", scope: !14436, file: !2460, line: 1146, type: !2352)
!14442 = !DILocalVariable(name: "n", scope: !14436, file: !2460, line: 1147, type: !2456)
!14443 = !DILocation(line: 0, scope: !14436)
!14444 = !DILocation(line: 1147, column: 19, scope: !14436)
!14445 = !DILocation(line: 1152, column: 2, scope: !14436)
!14446 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12828, file: !12828, line: 115, type: !14182, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14447)
!14447 = !{!14448}
!14448 = !DILocalVariable(name: "thread", arg: 1, scope: !14446, file: !12828, line: 115, type: !2352)
!14449 = !DILocation(line: 0, scope: !14446)
!14450 = !DILocation(line: 117, column: 46, scope: !14446)
!14451 = !DILocation(line: 117, column: 10, scope: !14446)
!14452 = !DILocation(line: 117, column: 9, scope: !14446)
!14453 = !DILocation(line: 117, column: 2, scope: !14446)
!14454 = distinct !DISubprogram(name: "is_preempt", scope: !2460, file: !2460, line: 62, type: !14017, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14455)
!14455 = !{!14456}
!14456 = !DILocalVariable(name: "thread", arg: 1, scope: !14454, file: !2460, line: 62, type: !2352)
!14457 = !DILocation(line: 0, scope: !14454)
!14458 = !DILocation(line: 65, column: 22, scope: !14454)
!14459 = !DILocation(line: 65, column: 30, scope: !14454)
!14460 = !DILocation(line: 65, column: 2, scope: !14454)
!14461 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13257, file: !13257, line: 35, type: !14462, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14466)
!14462 = !DISubroutineType(types: !14463)
!14463 = !{!347, !14464}
!14464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14465, size: 32)
!14465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2403)
!14466 = !{!14467}
!14467 = !DILocalVariable(name: "to", arg: 1, scope: !14461, file: !13257, line: 35, type: !14464)
!14468 = !DILocation(line: 0, scope: !14461)
!14469 = !DILocation(line: 37, column: 35, scope: !14461)
!14470 = !DILocation(line: 37, column: 10, scope: !14461)
!14471 = !DILocation(line: 37, column: 9, scope: !14461)
!14472 = !DILocation(line: 37, column: 2, scope: !14461)
!14473 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !14474, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14478)
!14474 = !DISubroutineType(types: !14475)
!14475 = !{!347, !14476}
!14476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14477, size: 32)
!14477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2362)
!14478 = !{!14479}
!14479 = !DILocalVariable(name: "node", arg: 1, scope: !14473, file: !127, line: 225, type: !14476)
!14480 = !DILocation(line: 0, scope: !14473)
!14481 = !DILocation(line: 227, column: 15, scope: !14473)
!14482 = !DILocation(line: 227, column: 20, scope: !14473)
!14483 = !DILocation(line: 227, column: 2, scope: !14473)
!14484 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !14356, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14485)
!14485 = !{!14486, !14487}
!14486 = !DILocalVariable(name: "list", arg: 1, scope: !14484, file: !127, line: 325, type: !14267)
!14487 = !DILocalVariable(name: "node", arg: 2, scope: !14484, file: !127, line: 326, type: !2456)
!14488 = !DILocation(line: 0, scope: !14484)
!14489 = !DILocation(line: 328, column: 24, scope: !14484)
!14490 = !DILocation(line: 328, column: 15, scope: !14484)
!14491 = !DILocation(line: 328, column: 9, scope: !14484)
!14492 = !DILocation(line: 328, column: 45, scope: !14484)
!14493 = !DILocation(line: 328, column: 2, scope: !14484)
!14494 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14495, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14497)
!14495 = !DISubroutineType(types: !14496)
!14496 = !{!347, !14267}
!14497 = !{!14498}
!14498 = !DILocalVariable(name: "list", arg: 1, scope: !14494, file: !127, line: 266, type: !14267)
!14499 = !DILocation(line: 0, scope: !14494)
!14500 = !DILocation(line: 268, column: 15, scope: !14494)
!14501 = !DILocation(line: 268, column: 20, scope: !14494)
!14502 = !DILocation(line: 268, column: 2, scope: !14494)
!14503 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !14504, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14506)
!14504 = !DISubroutineType(types: !14505)
!14505 = !{null, !2456}
!14506 = !{!14507, !14508, !14509}
!14507 = !DILocalVariable(name: "node", arg: 1, scope: !14503, file: !127, line: 496, type: !2456)
!14508 = !DILocalVariable(name: "prev", scope: !14503, file: !127, line: 498, type: !14344)
!14509 = !DILocalVariable(name: "next", scope: !14503, file: !127, line: 499, type: !14344)
!14510 = !DILocation(line: 0, scope: !14503)
!14511 = !DILocation(line: 498, column: 34, scope: !14503)
!14512 = !DILocation(line: 499, column: 34, scope: !14503)
!14513 = !DILocation(line: 501, column: 8, scope: !14503)
!14514 = !DILocation(line: 501, column: 13, scope: !14503)
!14515 = !DILocation(line: 502, column: 8, scope: !14503)
!14516 = !DILocation(line: 502, column: 13, scope: !14503)
!14517 = !DILocation(line: 503, column: 2, scope: !14503)
!14518 = !DILocation(line: 504, column: 1, scope: !14503)
!14519 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !14504, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14520)
!14520 = !{!14521}
!14521 = !DILocalVariable(name: "node", arg: 1, scope: !14519, file: !127, line: 211, type: !2456)
!14522 = !DILocation(line: 0, scope: !14519)
!14523 = !DILocation(line: 213, column: 8, scope: !14519)
!14524 = !DILocation(line: 213, column: 13, scope: !14519)
!14525 = !DILocation(line: 214, column: 8, scope: !14519)
!14526 = !DILocation(line: 214, column: 13, scope: !14519)
!14527 = !DILocation(line: 215, column: 1, scope: !14519)
!14528 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12828, file: !12828, line: 131, type: !14529, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14531)
!14529 = !DISubroutineType(types: !14530)
!14530 = !{!347, !2352, !110}
!14531 = !{!14532, !14533}
!14532 = !DILocalVariable(name: "thread", arg: 1, scope: !14528, file: !12828, line: 131, type: !2352)
!14533 = !DILocalVariable(name: "state", arg: 2, scope: !14528, file: !12828, line: 131, type: !110)
!14534 = !DILocation(line: 0, scope: !14528)
!14535 = !DILocation(line: 133, column: 23, scope: !14528)
!14536 = !DILocation(line: 133, column: 10, scope: !14528)
!14537 = !DILocation(line: 133, column: 36, scope: !14528)
!14538 = !DILocation(line: 133, column: 45, scope: !14528)
!14539 = !DILocation(line: 133, column: 2, scope: !14528)
!14540 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12828, file: !12828, line: 211, type: !13831, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14541)
!14541 = !{!14542, !14543}
!14542 = !DILocalVariable(name: "prio", arg: 1, scope: !14540, file: !12828, line: 211, type: !109)
!14543 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14540, file: !12828, line: 211, type: !109)
!14544 = !DILocation(line: 0, scope: !14540)
!14545 = !DILocation(line: 213, column: 9, scope: !14540)
!14546 = !DILocation(line: 213, column: 2, scope: !14540)
!14547 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12828, file: !12828, line: 206, type: !13831, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14548)
!14548 = !{!14549, !14550}
!14549 = !DILocalVariable(name: "prio1", arg: 1, scope: !14547, file: !12828, line: 206, type: !109)
!14550 = !DILocalVariable(name: "prio2", arg: 2, scope: !14547, file: !12828, line: 206, type: !109)
!14551 = !DILocation(line: 0, scope: !14547)
!14552 = !DILocation(line: 208, column: 15, scope: !14547)
!14553 = !DILocation(line: 208, column: 2, scope: !14547)
!14554 = distinct !DISubprogram(name: "z_ready_thread", scope: !2460, file: !2460, line: 635, type: !13999, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14555)
!14555 = !{!14556, !14557, !14559}
!14556 = !DILocalVariable(name: "thread", arg: 1, scope: !14554, file: !2460, line: 635, type: !2352)
!14557 = !DILocalVariable(name: "__i", scope: !14558, file: !2460, line: 637, type: !14033)
!14558 = distinct !DILexicalBlock(scope: !14554, file: !2460, line: 637, column: 2)
!14559 = !DILocalVariable(name: "__key", scope: !14558, file: !2460, line: 637, type: !14033)
!14560 = !DILocation(line: 0, scope: !14554)
!14561 = !DILocation(line: 0, scope: !14558)
!14562 = !DILocation(line: 0, scope: !14041, inlinedAt: !14563)
!14563 = distinct !DILocation(line: 637, column: 2, scope: !14558)
!14564 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !14565)
!14565 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !14563)
!14566 = !DILocation(line: 0, scope: !14050, inlinedAt: !14565)
!14567 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14563)
!14568 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14563)
!14569 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !14563)
!14570 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !14563)
!14571 = !DILocation(line: 639, column: 4, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14573, file: !2460, line: 638, column: 41)
!14573 = distinct !DILexicalBlock(scope: !14574, file: !2460, line: 638, column: 7)
!14574 = distinct !DILexicalBlock(scope: !14575, file: !2460, line: 637, column: 26)
!14575 = distinct !DILexicalBlock(scope: !14558, file: !2460, line: 637, column: 2)
!14576 = !DILocation(line: 0, scope: !14075, inlinedAt: !14577)
!14577 = distinct !DILocation(line: 637, column: 2, scope: !14575)
!14578 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14577)
!14579 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14577)
!14580 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !14577)
!14581 = !DILocation(line: 0, scope: !14089, inlinedAt: !14582)
!14582 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !14577)
!14583 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14582)
!14584 = !DILocation(line: 642, column: 1, scope: !14554)
!14585 = distinct !DISubprogram(name: "ready_thread", scope: !2460, file: !2460, line: 617, type: !13999, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14586)
!14586 = !{!14587}
!14587 = !DILocalVariable(name: "thread", arg: 1, scope: !14585, file: !2460, line: 617, type: !2352)
!14588 = !DILocation(line: 0, scope: !14585)
!14589 = !DILocation(line: 626, column: 7, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14585, file: !2460, line: 626, column: 6)
!14591 = !DILocation(line: 626, column: 34, scope: !14590)
!14592 = !DILocation(line: 626, column: 37, scope: !14590)
!14593 = !DILocation(line: 626, column: 6, scope: !14585)
!14594 = !DILocation(line: 0, scope: !14250, inlinedAt: !14595)
!14595 = distinct !DILocation(line: 629, column: 3, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14590, file: !2460, line: 626, column: 64)
!14597 = !DILocation(line: 252, column: 15, scope: !14250, inlinedAt: !14595)
!14598 = !DILocation(line: 252, column: 28, scope: !14250, inlinedAt: !14595)
!14599 = !DILocation(line: 0, scope: !14257, inlinedAt: !14600)
!14600 = distinct !DILocation(line: 254, column: 3, scope: !14261, inlinedAt: !14595)
!14601 = !DILocation(line: 0, scope: !14264, inlinedAt: !14602)
!14602 = distinct !DILocation(line: 229, column: 2, scope: !14257, inlinedAt: !14600)
!14603 = !DILocation(line: 186, column: 2, scope: !14274, inlinedAt: !14602)
!14604 = !DILocation(line: 186, column: 2, scope: !14275, inlinedAt: !14602)
!14605 = !DILocation(line: 186, column: 2, scope: !14278, inlinedAt: !14602)
!14606 = !DILocation(line: 188, column: 2, scope: !14280, inlinedAt: !14602)
!14607 = !DILocation(line: 188, column: 2, scope: !14282, inlinedAt: !14602)
!14608 = !DILocation(line: 0, scope: !14280, inlinedAt: !14602)
!14609 = !DILocation(line: 189, column: 7, scope: !14285, inlinedAt: !14602)
!14610 = !DILocation(line: 189, column: 35, scope: !14285, inlinedAt: !14602)
!14611 = !DILocation(line: 189, column: 7, scope: !14286, inlinedAt: !14602)
!14612 = !DILocation(line: 191, column: 21, scope: !14290, inlinedAt: !14602)
!14613 = !DILocation(line: 190, column: 4, scope: !14290, inlinedAt: !14602)
!14614 = !DILocation(line: 192, column: 4, scope: !14290, inlinedAt: !14602)
!14615 = distinct !{!14615, !14606, !14616}
!14616 = !DILocation(line: 194, column: 2, scope: !14280, inlinedAt: !14602)
!14617 = !DILocation(line: 196, column: 37, scope: !14264, inlinedAt: !14602)
!14618 = !DILocation(line: 196, column: 2, scope: !14264, inlinedAt: !14602)
!14619 = !DILocation(line: 197, column: 1, scope: !14264, inlinedAt: !14602)
!14620 = !DILocation(line: 630, column: 3, scope: !14596)
!14621 = !DILocation(line: 632, column: 2, scope: !14596)
!14622 = !DILocation(line: 633, column: 1, scope: !14585)
!14623 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12828, file: !12828, line: 120, type: !14182, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14624)
!14624 = !{!14625}
!14625 = !DILocalVariable(name: "thread", arg: 1, scope: !14623, file: !12828, line: 120, type: !2352)
!14626 = !DILocation(line: 0, scope: !14623)
!14627 = !DILocation(line: 122, column: 12, scope: !14623)
!14628 = !DILocation(line: 122, column: 62, scope: !14623)
!14629 = !DILocation(line: 123, column: 4, scope: !14623)
!14630 = !DILocation(line: 122, column: 2, scope: !14623)
!14631 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2460, file: !2460, line: 644, type: !13999, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14632)
!14632 = !{!14633, !14634, !14636}
!14633 = !DILocalVariable(name: "thread", arg: 1, scope: !14631, file: !2460, line: 644, type: !2352)
!14634 = !DILocalVariable(name: "__i", scope: !14635, file: !2460, line: 646, type: !14033)
!14635 = distinct !DILexicalBlock(scope: !14631, file: !2460, line: 646, column: 2)
!14636 = !DILocalVariable(name: "__key", scope: !14635, file: !2460, line: 646, type: !14033)
!14637 = !DILocation(line: 0, scope: !14631)
!14638 = !DILocation(line: 0, scope: !14635)
!14639 = !DILocation(line: 0, scope: !14041, inlinedAt: !14640)
!14640 = distinct !DILocation(line: 646, column: 2, scope: !14635)
!14641 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !14642)
!14642 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !14640)
!14643 = !DILocation(line: 0, scope: !14050, inlinedAt: !14642)
!14644 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14640)
!14645 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14640)
!14646 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !14640)
!14647 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !14640)
!14648 = !DILocation(line: 647, column: 3, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14650, file: !2460, line: 646, column: 26)
!14650 = distinct !DILexicalBlock(scope: !14635, file: !2460, line: 646, column: 2)
!14651 = !DILocation(line: 0, scope: !14075, inlinedAt: !14652)
!14652 = distinct !DILocation(line: 646, column: 2, scope: !14650)
!14653 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14652)
!14654 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14652)
!14655 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !14652)
!14656 = !DILocation(line: 0, scope: !14089, inlinedAt: !14657)
!14657 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !14652)
!14658 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14657)
!14659 = !DILocation(line: 649, column: 1, scope: !14631)
!14660 = distinct !DISubprogram(name: "z_sched_start", scope: !2460, file: !2460, line: 651, type: !13999, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14661)
!14661 = !{!14662, !14663}
!14662 = !DILocalVariable(name: "thread", arg: 1, scope: !14660, file: !2460, line: 651, type: !2352)
!14663 = !DILocalVariable(name: "key", scope: !14660, file: !2460, line: 653, type: !14033)
!14664 = !DILocation(line: 0, scope: !14660)
!14665 = !DILocation(line: 0, scope: !14041, inlinedAt: !14666)
!14666 = distinct !DILocation(line: 653, column: 25, scope: !14660)
!14667 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !14668)
!14668 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !14666)
!14669 = !DILocation(line: 0, scope: !14050, inlinedAt: !14668)
!14670 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14666)
!14671 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14666)
!14672 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !14666)
!14673 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !14666)
!14674 = !DILocation(line: 655, column: 6, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14660, file: !2460, line: 655, column: 6)
!14676 = !DILocation(line: 655, column: 6, scope: !14660)
!14677 = !DILocation(line: 0, scope: !14075, inlinedAt: !14678)
!14678 = distinct !DILocation(line: 656, column: 3, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14675, file: !2460, line: 655, column: 36)
!14680 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14678)
!14681 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14678)
!14682 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !14678)
!14683 = !DILocation(line: 0, scope: !14089, inlinedAt: !14684)
!14684 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !14678)
!14685 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14684)
!14686 = !DILocation(line: 657, column: 3, scope: !14679)
!14687 = !DILocation(line: 660, column: 2, scope: !14660)
!14688 = !DILocation(line: 661, column: 2, scope: !14660)
!14689 = !DILocation(line: 662, column: 2, scope: !14660)
!14690 = !DILocation(line: 663, column: 1, scope: !14660)
!14691 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12828, file: !12828, line: 126, type: !14182, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14692)
!14692 = !{!14693}
!14693 = !DILocalVariable(name: "thread", arg: 1, scope: !14691, file: !12828, line: 126, type: !2352)
!14694 = !DILocation(line: 0, scope: !14691)
!14695 = !DILocation(line: 128, column: 23, scope: !14691)
!14696 = !DILocation(line: 128, column: 36, scope: !14691)
!14697 = !DILocation(line: 128, column: 56, scope: !14691)
!14698 = !DILocation(line: 128, column: 2, scope: !14691)
!14699 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12828, file: !12828, line: 155, type: !13999, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14700)
!14700 = !{!14701}
!14701 = !DILocalVariable(name: "thread", arg: 1, scope: !14699, file: !12828, line: 155, type: !2352)
!14702 = !DILocation(line: 0, scope: !14699)
!14703 = !DILocation(line: 157, column: 15, scope: !14699)
!14704 = !DILocation(line: 157, column: 28, scope: !14699)
!14705 = !DILocation(line: 158, column: 1, scope: !14699)
!14706 = distinct !DISubprogram(name: "z_reschedule", scope: !2460, file: !2460, line: 967, type: !14076, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14707)
!14707 = !{!14708, !14709}
!14708 = !DILocalVariable(name: "lock", arg: 1, scope: !14706, file: !2460, line: 967, type: !14044)
!14709 = !DILocalVariable(name: "key", arg: 2, scope: !14706, file: !2460, line: 967, type: !14033)
!14710 = !DILocation(line: 0, scope: !14706)
!14711 = !DILocation(line: 969, column: 6, scope: !14712)
!14712 = distinct !DILexicalBlock(scope: !14706, file: !2460, line: 969, column: 6)
!14713 = !DILocation(line: 969, column: 23, scope: !14712)
!14714 = !DILocation(line: 969, column: 26, scope: !14712)
!14715 = !DILocation(line: 969, column: 6, scope: !14706)
!14716 = !DILocalVariable(name: "key", arg: 2, scope: !14717, file: !12932, line: 193, type: !14033)
!14717 = distinct !DISubprogram(name: "z_swap", scope: !12932, file: !12932, line: 193, type: !14718, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14720)
!14718 = !DISubroutineType(types: !14719)
!14719 = !{!109, !14044, !14033}
!14720 = !{!14721, !14716}
!14721 = !DILocalVariable(name: "lock", arg: 1, scope: !14717, file: !12932, line: 193, type: !14044)
!14722 = !DILocation(line: 0, scope: !14717, inlinedAt: !14723)
!14723 = distinct !DILocation(line: 970, column: 3, scope: !14724)
!14724 = distinct !DILexicalBlock(scope: !14712, file: !2460, line: 969, column: 39)
!14725 = !DILocalVariable(name: "l", arg: 1, scope: !14726, file: !253, line: 221, type: !14044)
!14726 = distinct !DISubprogram(name: "k_spin_release", scope: !253, file: !253, line: 221, type: !14727, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14729)
!14727 = !DISubroutineType(types: !14728)
!14728 = !{null, !14044}
!14729 = !{!14725}
!14730 = !DILocation(line: 0, scope: !14726, inlinedAt: !14731)
!14731 = distinct !DILocation(line: 195, column: 2, scope: !14717, inlinedAt: !14723)
!14732 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !14731)
!14733 = distinct !DILexicalBlock(scope: !14734, file: !253, line: 225, column: 2)
!14734 = distinct !DILexicalBlock(scope: !14726, file: !253, line: 225, column: 2)
!14735 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !14731)
!14736 = !DILocation(line: 225, column: 2, scope: !14737, inlinedAt: !14731)
!14737 = distinct !DILexicalBlock(scope: !14733, file: !253, line: 225, column: 2)
!14738 = !DILocation(line: 196, column: 9, scope: !14717, inlinedAt: !14723)
!14739 = !DILocation(line: 971, column: 2, scope: !14724)
!14740 = !DILocation(line: 0, scope: !14075, inlinedAt: !14741)
!14741 = distinct !DILocation(line: 972, column: 3, scope: !14742)
!14742 = distinct !DILexicalBlock(scope: !14712, file: !2460, line: 971, column: 9)
!14743 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14741)
!14744 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14741)
!14745 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !14741)
!14746 = !DILocation(line: 0, scope: !14089, inlinedAt: !14747)
!14747 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !14741)
!14748 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14747)
!14749 = !DILocation(line: 975, column: 1, scope: !14706)
!14750 = distinct !DISubprogram(name: "resched", scope: !2460, file: !2460, line: 940, type: !14751, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14753)
!14751 = !DISubroutineType(types: !14752)
!14752 = !{!347, !110}
!14753 = !{!14754}
!14754 = !DILocalVariable(name: "key", arg: 1, scope: !14750, file: !2460, line: 940, type: !110)
!14755 = !DILocation(line: 0, scope: !14750)
!14756 = !DILocalVariable(name: "key", arg: 1, scope: !14757, file: !6116, line: 112, type: !32)
!14757 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6116, file: !6116, line: 112, type: !14758, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14760)
!14758 = !DISubroutineType(types: !14759)
!14759 = !{!347, !32}
!14760 = !{!14756}
!14761 = !DILocation(line: 0, scope: !14757, inlinedAt: !14762)
!14762 = distinct !DILocation(line: 946, column: 9, scope: !14750)
!14763 = !DILocation(line: 115, column: 13, scope: !14757, inlinedAt: !14762)
!14764 = !DILocation(line: 946, column: 32, scope: !14750)
!14765 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !14769)
!14766 = distinct !DISubprogram(name: "__get_IPSR", scope: !6437, file: !6437, line: 1027, type: !6524, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14767)
!14767 = !{!14768}
!14768 = !DILocalVariable(name: "result", scope: !14766, file: !6437, line: 1029, type: !110)
!14769 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !14771)
!14770 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7489, file: !7489, line: 46, type: !7490, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2050)
!14771 = distinct !DILocation(line: 946, column: 36, scope: !14750)
!14772 = !{i64 2959537}
!14773 = !DILocation(line: 0, scope: !14766, inlinedAt: !14769)
!14774 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !14771)
!14775 = !DILocation(line: 946, column: 2, scope: !14750)
!14776 = distinct !DISubprogram(name: "need_swap", scope: !2460, file: !2460, line: 953, type: !7490, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14777)
!14777 = !{!14778}
!14778 = !DILocalVariable(name: "new_thread", scope: !14776, file: !2460, line: 959, type: !2352)
!14779 = !DILocation(line: 962, column: 31, scope: !14776)
!14780 = !DILocation(line: 0, scope: !14776)
!14781 = !DILocation(line: 963, column: 23, scope: !14776)
!14782 = !DILocation(line: 963, column: 20, scope: !14776)
!14783 = !DILocation(line: 963, column: 2, scope: !14776)
!14784 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12932, file: !12932, line: 181, type: !6447, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14785)
!14785 = !{!14786, !14787}
!14786 = !DILocalVariable(name: "key", arg: 1, scope: !14784, file: !12932, line: 181, type: !32)
!14787 = !DILocalVariable(name: "ret", scope: !14784, file: !12932, line: 183, type: !109)
!14788 = !DILocation(line: 0, scope: !14784)
!14789 = !DILocation(line: 185, column: 8, scope: !14784)
!14790 = !DILocation(line: 186, column: 2, scope: !14784)
!14791 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2460, file: !2460, line: 665, type: !13999, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14792)
!14792 = !{!14793, !14794, !14796}
!14793 = !DILocalVariable(name: "thread", arg: 1, scope: !14791, file: !2460, line: 665, type: !2352)
!14794 = !DILocalVariable(name: "__i", scope: !14795, file: !2460, line: 671, type: !14033)
!14795 = distinct !DILexicalBlock(scope: !14791, file: !2460, line: 671, column: 2)
!14796 = !DILocalVariable(name: "__key", scope: !14795, file: !2460, line: 671, type: !14033)
!14797 = !DILocation(line: 0, scope: !14791)
!14798 = !DILocation(line: 669, column: 8, scope: !14791)
!14799 = !DILocation(line: 0, scope: !14795)
!14800 = !DILocation(line: 0, scope: !14041, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 671, column: 2, scope: !14795)
!14802 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !14803)
!14803 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !14801)
!14804 = !DILocation(line: 0, scope: !14050, inlinedAt: !14803)
!14805 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14801)
!14806 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14801)
!14807 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !14801)
!14808 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !14801)
!14809 = !DILocation(line: 672, column: 7, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14811, file: !2460, line: 672, column: 7)
!14811 = distinct !DILexicalBlock(scope: !14812, file: !2460, line: 671, column: 26)
!14812 = distinct !DILexicalBlock(scope: !14795, file: !2460, line: 671, column: 2)
!14813 = !DILocation(line: 672, column: 7, scope: !14811)
!14814 = !DILocation(line: 0, scope: !14233, inlinedAt: !14815)
!14815 = distinct !DILocation(line: 673, column: 4, scope: !14816)
!14816 = distinct !DILexicalBlock(scope: !14810, file: !2460, line: 672, column: 35)
!14817 = !DILocation(line: 266, column: 15, scope: !14233, inlinedAt: !14815)
!14818 = !DILocation(line: 266, column: 28, scope: !14233, inlinedAt: !14815)
!14819 = !DILocation(line: 0, scope: !14241, inlinedAt: !14820)
!14820 = distinct !DILocation(line: 268, column: 3, scope: !14245, inlinedAt: !14815)
!14821 = !DILocation(line: 234, column: 2, scope: !14241, inlinedAt: !14820)
!14822 = !DILocation(line: 674, column: 3, scope: !14816)
!14823 = !DILocation(line: 675, column: 3, scope: !14811)
!14824 = !DILocation(line: 676, column: 26, scope: !14811)
!14825 = !DILocation(line: 676, column: 23, scope: !14811)
!14826 = !DILocation(line: 676, column: 3, scope: !14811)
!14827 = !DILocation(line: 0, scope: !14075, inlinedAt: !14828)
!14828 = distinct !DILocation(line: 671, column: 2, scope: !14812)
!14829 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14828)
!14830 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14828)
!14831 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !14828)
!14832 = !DILocation(line: 0, scope: !14089, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !14828)
!14834 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14833)
!14835 = !DILocation(line: 679, column: 16, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14791, file: !2460, line: 679, column: 6)
!14837 = !DILocation(line: 679, column: 13, scope: !14836)
!14838 = !DILocation(line: 679, column: 6, scope: !14791)
!14839 = !DILocation(line: 680, column: 3, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14836, file: !2460, line: 679, column: 26)
!14841 = !DILocation(line: 681, column: 2, scope: !14840)
!14842 = !DILocation(line: 684, column: 1, scope: !14791)
!14843 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13257, file: !13257, line: 52, type: !14017, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14844)
!14844 = !{!14845}
!14845 = !DILocalVariable(name: "thread", arg: 1, scope: !14843, file: !13257, line: 52, type: !2352)
!14846 = !DILocation(line: 0, scope: !14843)
!14847 = !DILocation(line: 54, column: 39, scope: !14843)
!14848 = !DILocation(line: 54, column: 9, scope: !14843)
!14849 = !DILocation(line: 54, column: 2, scope: !14843)
!14850 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12828, file: !12828, line: 141, type: !13999, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14851)
!14851 = !{!14852}
!14852 = !DILocalVariable(name: "thread", arg: 1, scope: !14850, file: !12828, line: 141, type: !2352)
!14853 = !DILocation(line: 0, scope: !14850)
!14854 = !DILocation(line: 143, column: 15, scope: !14850)
!14855 = !DILocation(line: 143, column: 28, scope: !14850)
!14856 = !DILocation(line: 146, column: 1, scope: !14850)
!14857 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12828, file: !12828, line: 73, type: !3116, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2050)
!14858 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !14859)
!14859 = distinct !DILocation(line: 75, column: 30, scope: !14857)
!14860 = !DILocation(line: 0, scope: !14050, inlinedAt: !14859)
!14861 = !DILocation(line: 75, column: 9, scope: !14857)
!14862 = !DILocation(line: 76, column: 1, scope: !14857)
!14863 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2460, file: !2460, line: 977, type: !6534, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14864)
!14864 = !{!14865}
!14865 = !DILocalVariable(name: "key", arg: 1, scope: !14863, file: !2460, line: 977, type: !110)
!14866 = !DILocation(line: 0, scope: !14863)
!14867 = !DILocation(line: 979, column: 6, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14863, file: !2460, line: 979, column: 6)
!14869 = !DILocation(line: 979, column: 6, scope: !14863)
!14870 = !DILocation(line: 980, column: 3, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14868, file: !2460, line: 979, column: 20)
!14872 = !DILocation(line: 981, column: 2, scope: !14871)
!14873 = !DILocation(line: 0, scope: !14089, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 982, column: 3, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14868, file: !2460, line: 981, column: 9)
!14876 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14874)
!14877 = !DILocation(line: 985, column: 1, scope: !14863)
!14878 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2460, file: !2460, line: 695, type: !13999, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14879)
!14879 = !{!14880, !14881}
!14880 = !DILocalVariable(name: "thread", arg: 1, scope: !14878, file: !2460, line: 695, type: !2352)
!14881 = !DILocalVariable(name: "key", scope: !14878, file: !2460, line: 699, type: !14033)
!14882 = !DILocation(line: 0, scope: !14878)
!14883 = !DILocation(line: 0, scope: !14041, inlinedAt: !14884)
!14884 = distinct !DILocation(line: 699, column: 25, scope: !14878)
!14885 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !14886)
!14886 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !14884)
!14887 = !DILocation(line: 0, scope: !14050, inlinedAt: !14886)
!14888 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14884)
!14889 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14884)
!14890 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !14884)
!14891 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !14884)
!14892 = !DILocation(line: 702, column: 7, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14878, file: !2460, line: 702, column: 6)
!14894 = !DILocation(line: 702, column: 6, scope: !14878)
!14895 = !DILocation(line: 0, scope: !14075, inlinedAt: !14896)
!14896 = distinct !DILocation(line: 703, column: 3, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14893, file: !2460, line: 702, column: 38)
!14898 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14896)
!14899 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14896)
!14900 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !14896)
!14901 = !DILocation(line: 0, scope: !14089, inlinedAt: !14902)
!14902 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !14896)
!14903 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14902)
!14904 = !DILocation(line: 704, column: 3, scope: !14897)
!14905 = !DILocation(line: 707, column: 2, scope: !14878)
!14906 = !DILocation(line: 708, column: 2, scope: !14878)
!14907 = !DILocation(line: 710, column: 2, scope: !14878)
!14908 = !DILocation(line: 713, column: 1, scope: !14878)
!14909 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12828, file: !12828, line: 96, type: !14182, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14910)
!14910 = !{!14911}
!14911 = !DILocalVariable(name: "thread", arg: 1, scope: !14909, file: !12828, line: 96, type: !2352)
!14912 = !DILocation(line: 0, scope: !14909)
!14913 = !DILocation(line: 98, column: 23, scope: !14909)
!14914 = !DILocation(line: 98, column: 36, scope: !14909)
!14915 = !DILocation(line: 98, column: 57, scope: !14909)
!14916 = !DILocation(line: 98, column: 2, scope: !14909)
!14917 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12828, file: !12828, line: 148, type: !13999, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14918)
!14918 = !{!14919}
!14919 = !DILocalVariable(name: "thread", arg: 1, scope: !14917, file: !12828, line: 148, type: !2352)
!14920 = !DILocation(line: 0, scope: !14917)
!14921 = !DILocation(line: 150, column: 15, scope: !14917)
!14922 = !DILocation(line: 150, column: 28, scope: !14917)
!14923 = !DILocation(line: 153, column: 1, scope: !14917)
!14924 = distinct !DISubprogram(name: "z_pend_thread", scope: !2460, file: !2460, line: 770, type: !14925, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14931)
!14925 = !DISubroutineType(types: !14926)
!14926 = !{null, !2352, !2383, !14927}
!14927 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14928)
!14928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14929)
!14929 = !{!14930}
!14930 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14928, file: !104, line: 66, baseType: !103, size: 64)
!14931 = !{!14932, !14933, !14934, !14935, !14937}
!14932 = !DILocalVariable(name: "thread", arg: 1, scope: !14924, file: !2460, line: 770, type: !2352)
!14933 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14924, file: !2460, line: 770, type: !2383)
!14934 = !DILocalVariable(name: "timeout", arg: 3, scope: !14924, file: !2460, line: 771, type: !14927)
!14935 = !DILocalVariable(name: "__i", scope: !14936, file: !2460, line: 774, type: !14033)
!14936 = distinct !DILexicalBlock(scope: !14924, file: !2460, line: 774, column: 2)
!14937 = !DILocalVariable(name: "__key", scope: !14936, file: !2460, line: 774, type: !14033)
!14938 = !DILocation(line: 0, scope: !14924)
!14939 = !DILocation(line: 773, column: 2, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14941, file: !2460, line: 773, column: 2)
!14941 = distinct !DILexicalBlock(scope: !14924, file: !2460, line: 773, column: 2)
!14942 = !DILocation(line: 773, column: 2, scope: !14941)
!14943 = !DILocation(line: 773, column: 2, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14940, file: !2460, line: 773, column: 2)
!14945 = !DILocation(line: 0, scope: !14936)
!14946 = !DILocation(line: 0, scope: !14041, inlinedAt: !14947)
!14947 = distinct !DILocation(line: 774, column: 2, scope: !14936)
!14948 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !14949)
!14949 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !14947)
!14950 = !DILocation(line: 0, scope: !14050, inlinedAt: !14949)
!14951 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14947)
!14952 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !14947)
!14953 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !14947)
!14954 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !14947)
!14955 = !DILocation(line: 775, column: 3, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !14957, file: !2460, line: 774, column: 26)
!14957 = distinct !DILexicalBlock(scope: !14936, file: !2460, line: 774, column: 2)
!14958 = !DILocation(line: 0, scope: !14075, inlinedAt: !14959)
!14959 = distinct !DILocation(line: 774, column: 2, scope: !14957)
!14960 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14959)
!14961 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !14959)
!14962 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !14959)
!14963 = !DILocation(line: 0, scope: !14089, inlinedAt: !14964)
!14964 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !14959)
!14965 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !14964)
!14966 = !DILocation(line: 777, column: 1, scope: !14924)
!14967 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2460, file: !2460, line: 79, type: !14182, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14968)
!14968 = !{!14969}
!14969 = !DILocalVariable(name: "thread", arg: 1, scope: !14967, file: !2460, line: 79, type: !2352)
!14970 = !DILocation(line: 0, scope: !14967)
!14971 = !DILocation(line: 81, column: 23, scope: !14967)
!14972 = !DILocation(line: 81, column: 36, scope: !14967)
!14973 = !DILocation(line: 81, column: 53, scope: !14967)
!14974 = !DILocation(line: 81, column: 2, scope: !14967)
!14975 = distinct !DISubprogram(name: "pend_locked", scope: !2460, file: !2460, line: 760, type: !14925, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14976)
!14976 = !{!14977, !14978, !14979}
!14977 = !DILocalVariable(name: "thread", arg: 1, scope: !14975, file: !2460, line: 760, type: !2352)
!14978 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14975, file: !2460, line: 760, type: !2383)
!14979 = !DILocalVariable(name: "timeout", arg: 3, scope: !14975, file: !2460, line: 761, type: !14927)
!14980 = !DILocation(line: 0, scope: !14975)
!14981 = !DILocation(line: 766, column: 2, scope: !14975)
!14982 = !DILocation(line: 767, column: 2, scope: !14975)
!14983 = !DILocation(line: 768, column: 1, scope: !14975)
!14984 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2460, file: !2460, line: 740, type: !14985, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !14987)
!14985 = !DISubroutineType(types: !14986)
!14986 = !{null, !2352, !2383}
!14987 = !{!14988, !14989}
!14988 = !DILocalVariable(name: "thread", arg: 1, scope: !14984, file: !2460, line: 740, type: !2352)
!14989 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14984, file: !2460, line: 740, type: !2383)
!14990 = !DILocation(line: 0, scope: !14984)
!14991 = !DILocation(line: 742, column: 2, scope: !14984)
!14992 = !DILocation(line: 743, column: 2, scope: !14984)
!14993 = !DILocation(line: 747, column: 13, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14984, file: !2460, line: 747, column: 6)
!14995 = !DILocation(line: 747, column: 6, scope: !14984)
!14996 = !DILocation(line: 748, column: 16, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14994, file: !2460, line: 747, column: 22)
!14998 = !DILocation(line: 748, column: 26, scope: !14997)
!14999 = !DILocation(line: 749, column: 28, scope: !14997)
!15000 = !DILocation(line: 0, scope: !14264, inlinedAt: !15001)
!15001 = distinct !DILocation(line: 749, column: 3, scope: !14997)
!15002 = !DILocation(line: 186, column: 2, scope: !14274, inlinedAt: !15001)
!15003 = !DILocation(line: 186, column: 2, scope: !14275, inlinedAt: !15001)
!15004 = !DILocation(line: 186, column: 2, scope: !14278, inlinedAt: !15001)
!15005 = !DILocation(line: 188, column: 2, scope: !14280, inlinedAt: !15001)
!15006 = !DILocation(line: 188, column: 2, scope: !14282, inlinedAt: !15001)
!15007 = !DILocation(line: 0, scope: !14280, inlinedAt: !15001)
!15008 = !DILocation(line: 189, column: 7, scope: !14285, inlinedAt: !15001)
!15009 = !DILocation(line: 189, column: 35, scope: !14285, inlinedAt: !15001)
!15010 = !DILocation(line: 189, column: 7, scope: !14286, inlinedAt: !15001)
!15011 = !DILocation(line: 191, column: 21, scope: !14290, inlinedAt: !15001)
!15012 = !DILocation(line: 190, column: 4, scope: !14290, inlinedAt: !15001)
!15013 = !DILocation(line: 192, column: 4, scope: !14290, inlinedAt: !15001)
!15014 = distinct !{!15014, !15005, !15015}
!15015 = !DILocation(line: 194, column: 2, scope: !14280, inlinedAt: !15001)
!15016 = !DILocation(line: 196, column: 37, scope: !14264, inlinedAt: !15001)
!15017 = !DILocation(line: 196, column: 2, scope: !14264, inlinedAt: !15001)
!15018 = !DILocation(line: 197, column: 1, scope: !14264, inlinedAt: !15001)
!15019 = !DILocation(line: 751, column: 1, scope: !14984)
!15020 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2460, file: !2460, line: 753, type: !15021, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15023)
!15021 = !DISubroutineType(types: !15022)
!15022 = !{null, !2352, !14927}
!15023 = !{!15024, !15025}
!15024 = !DILocalVariable(name: "thread", arg: 1, scope: !15020, file: !2460, line: 753, type: !2352)
!15025 = !DILocalVariable(name: "timeout", arg: 2, scope: !15020, file: !2460, line: 753, type: !14927)
!15026 = !DILocation(line: 0, scope: !15020)
!15027 = !DILocation(line: 755, column: 7, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15020, file: !2460, line: 755, column: 6)
!15029 = !DILocation(line: 755, column: 6, scope: !15020)
!15030 = !DILocation(line: 756, column: 3, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15028, file: !2460, line: 755, column: 41)
!15032 = !DILocation(line: 757, column: 2, scope: !15031)
!15033 = !DILocation(line: 758, column: 1, scope: !15020)
!15034 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13257, file: !13257, line: 47, type: !15021, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15035)
!15035 = !{!15036, !15037}
!15036 = !DILocalVariable(name: "thread", arg: 1, scope: !15034, file: !13257, line: 47, type: !2352)
!15037 = !DILocalVariable(name: "ticks", arg: 2, scope: !15034, file: !13257, line: 47, type: !14927)
!15038 = !DILocation(line: 0, scope: !15034)
!15039 = !DILocation(line: 49, column: 30, scope: !15034)
!15040 = !DILocation(line: 49, column: 2, scope: !15034)
!15041 = !DILocation(line: 50, column: 1, scope: !15034)
!15042 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2460, file: !2460, line: 795, type: !2409, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15043)
!15043 = !{!15044, !15045, !15046, !15048, !15049}
!15044 = !DILocalVariable(name: "timeout", arg: 1, scope: !15042, file: !2460, line: 795, type: !2411)
!15045 = !DILocalVariable(name: "thread", scope: !15042, file: !2460, line: 797, type: !2352)
!15046 = !DILocalVariable(name: "__i", scope: !15047, file: !2460, line: 800, type: !14033)
!15047 = distinct !DILexicalBlock(scope: !15042, file: !2460, line: 800, column: 2)
!15048 = !DILocalVariable(name: "__key", scope: !15047, file: !2460, line: 800, type: !14033)
!15049 = !DILocalVariable(name: "killed", scope: !15050, file: !2460, line: 801, type: !347)
!15050 = distinct !DILexicalBlock(scope: !15051, file: !2460, line: 800, column: 26)
!15051 = distinct !DILexicalBlock(scope: !15047, file: !2460, line: 800, column: 2)
!15052 = !DILocation(line: 0, scope: !15042)
!15053 = !DILocation(line: 797, column: 28, scope: !15042)
!15054 = !DILocation(line: 0, scope: !15047)
!15055 = !DILocation(line: 0, scope: !14041, inlinedAt: !15056)
!15056 = distinct !DILocation(line: 800, column: 2, scope: !15047)
!15057 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15058)
!15058 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15056)
!15059 = !DILocation(line: 0, scope: !14050, inlinedAt: !15058)
!15060 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15056)
!15061 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15056)
!15062 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15056)
!15063 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15056)
!15064 = !DILocation(line: 801, column: 27, scope: !15050)
!15065 = !DILocation(line: 801, column: 32, scope: !15050)
!15066 = !DILocation(line: 801, column: 61, scope: !15050)
!15067 = !DILocation(line: 0, scope: !15050)
!15068 = !DILocation(line: 804, column: 7, scope: !15050)
!15069 = !DILocation(line: 805, column: 21, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15071, file: !2460, line: 805, column: 8)
!15071 = distinct !DILexicalBlock(scope: !15072, file: !2460, line: 804, column: 16)
!15072 = distinct !DILexicalBlock(scope: !15050, file: !2460, line: 804, column: 7)
!15073 = !DILocation(line: 805, column: 31, scope: !15070)
!15074 = !DILocation(line: 805, column: 8, scope: !15071)
!15075 = !DILocation(line: 806, column: 5, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15070, file: !2460, line: 805, column: 40)
!15077 = !DILocation(line: 807, column: 4, scope: !15076)
!15078 = !DILocation(line: 808, column: 4, scope: !15071)
!15079 = !DILocation(line: 809, column: 4, scope: !15071)
!15080 = !DILocation(line: 810, column: 4, scope: !15071)
!15081 = !DILocation(line: 811, column: 3, scope: !15071)
!15082 = !DILocation(line: 0, scope: !14075, inlinedAt: !15083)
!15083 = distinct !DILocation(line: 800, column: 2, scope: !15051)
!15084 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15083)
!15085 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15083)
!15086 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !15083)
!15087 = !DILocation(line: 0, scope: !14089, inlinedAt: !15088)
!15088 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !15083)
!15089 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !15088)
!15090 = !DILocation(line: 813, column: 1, scope: !15042)
!15091 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2460, file: !2460, line: 779, type: !13999, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15092)
!15092 = !{!15093}
!15093 = !DILocalVariable(name: "thread", arg: 1, scope: !15091, file: !2460, line: 779, type: !2352)
!15094 = !DILocation(line: 0, scope: !15091)
!15095 = !DILocation(line: 781, column: 21, scope: !15091)
!15096 = !DILocation(line: 781, column: 2, scope: !15091)
!15097 = !DILocation(line: 782, column: 2, scope: !15091)
!15098 = !DILocation(line: 783, column: 15, scope: !15091)
!15099 = !DILocation(line: 783, column: 25, scope: !15091)
!15100 = !DILocation(line: 784, column: 1, scope: !15091)
!15101 = distinct !DISubprogram(name: "pended_on_thread", scope: !2460, file: !2460, line: 724, type: !15102, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15104)
!15102 = !DISubroutineType(types: !15103)
!15103 = !{!2383, !2352}
!15104 = !{!15105}
!15105 = !DILocalVariable(name: "thread", arg: 1, scope: !15101, file: !2460, line: 724, type: !2352)
!15106 = !DILocation(line: 0, scope: !15101)
!15107 = !DILocation(line: 726, column: 2, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15109, file: !2460, line: 726, column: 2)
!15109 = distinct !DILexicalBlock(scope: !15101, file: !2460, line: 726, column: 2)
!15110 = !DILocation(line: 726, column: 2, scope: !15109)
!15111 = !DILocation(line: 726, column: 2, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15108, file: !2460, line: 726, column: 2)
!15113 = !DILocation(line: 728, column: 2, scope: !15101)
!15114 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12828, file: !12828, line: 165, type: !13999, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15115)
!15115 = !{!15116}
!15116 = !DILocalVariable(name: "thread", arg: 1, scope: !15114, file: !12828, line: 165, type: !2352)
!15117 = !DILocation(line: 0, scope: !15114)
!15118 = !DILocation(line: 167, column: 15, scope: !15114)
!15119 = !DILocation(line: 167, column: 28, scope: !15114)
!15120 = !DILocation(line: 168, column: 1, scope: !15114)
!15121 = distinct !DISubprogram(name: "unready_thread", scope: !2460, file: !2460, line: 731, type: !13999, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15122)
!15122 = !{!15123}
!15123 = !DILocalVariable(name: "thread", arg: 1, scope: !15121, file: !2460, line: 731, type: !2352)
!15124 = !DILocation(line: 0, scope: !15121)
!15125 = !DILocation(line: 733, column: 6, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !15121, file: !2460, line: 733, column: 6)
!15127 = !DILocation(line: 733, column: 6, scope: !15121)
!15128 = !DILocation(line: 0, scope: !14233, inlinedAt: !15129)
!15129 = distinct !DILocation(line: 734, column: 3, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15126, file: !2460, line: 733, column: 34)
!15131 = !DILocation(line: 266, column: 15, scope: !14233, inlinedAt: !15129)
!15132 = !DILocation(line: 266, column: 28, scope: !14233, inlinedAt: !15129)
!15133 = !DILocation(line: 0, scope: !14241, inlinedAt: !15134)
!15134 = distinct !DILocation(line: 268, column: 3, scope: !14245, inlinedAt: !15129)
!15135 = !DILocation(line: 234, column: 2, scope: !14241, inlinedAt: !15134)
!15136 = !DILocation(line: 735, column: 2, scope: !15130)
!15137 = !DILocation(line: 736, column: 25, scope: !15121)
!15138 = !DILocation(line: 736, column: 22, scope: !15121)
!15139 = !DILocation(line: 736, column: 2, scope: !15121)
!15140 = !DILocation(line: 737, column: 1, scope: !15121)
!15141 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12828, file: !12828, line: 160, type: !13999, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15142)
!15142 = !{!15143}
!15143 = !DILocalVariable(name: "thread", arg: 1, scope: !15141, file: !12828, line: 160, type: !2352)
!15144 = !DILocation(line: 0, scope: !15141)
!15145 = !DILocation(line: 162, column: 15, scope: !15141)
!15146 = !DILocation(line: 162, column: 28, scope: !15141)
!15147 = !DILocation(line: 163, column: 1, scope: !15141)
!15148 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2460, file: !2460, line: 786, type: !13999, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15149)
!15149 = !{!15150, !15151, !15153}
!15150 = !DILocalVariable(name: "thread", arg: 1, scope: !15148, file: !2460, line: 786, type: !2352)
!15151 = !DILocalVariable(name: "__i", scope: !15152, file: !2460, line: 788, type: !14033)
!15152 = distinct !DILexicalBlock(scope: !15148, file: !2460, line: 788, column: 2)
!15153 = !DILocalVariable(name: "__key", scope: !15152, file: !2460, line: 788, type: !14033)
!15154 = !DILocation(line: 0, scope: !15148)
!15155 = !DILocation(line: 0, scope: !15152)
!15156 = !DILocation(line: 0, scope: !14041, inlinedAt: !15157)
!15157 = distinct !DILocation(line: 788, column: 2, scope: !15152)
!15158 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15159)
!15159 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15157)
!15160 = !DILocation(line: 0, scope: !14050, inlinedAt: !15159)
!15161 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15157)
!15162 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15157)
!15163 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15157)
!15164 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15157)
!15165 = !DILocation(line: 789, column: 3, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15167, file: !2460, line: 788, column: 26)
!15167 = distinct !DILexicalBlock(scope: !15152, file: !2460, line: 788, column: 2)
!15168 = !DILocation(line: 0, scope: !14075, inlinedAt: !15169)
!15169 = distinct !DILocation(line: 788, column: 2, scope: !15167)
!15170 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15169)
!15171 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15169)
!15172 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !15169)
!15173 = !DILocation(line: 0, scope: !14089, inlinedAt: !15174)
!15174 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !15169)
!15175 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !15174)
!15176 = !DILocation(line: 791, column: 1, scope: !15148)
!15177 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2460, file: !2460, line: 816, type: !15178, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15180)
!15178 = !DISubroutineType(types: !15179)
!15179 = !{!109, !110, !2383, !14927}
!15180 = !{!15181, !15182, !15183, !15184, !15185, !15187}
!15181 = !DILocalVariable(name: "key", arg: 1, scope: !15177, file: !2460, line: 816, type: !110)
!15182 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15177, file: !2460, line: 816, type: !2383)
!15183 = !DILocalVariable(name: "timeout", arg: 3, scope: !15177, file: !2460, line: 816, type: !14927)
!15184 = !DILocalVariable(name: "ret", scope: !15177, file: !2460, line: 828, type: !109)
!15185 = !DILocalVariable(name: "__i", scope: !15186, file: !2460, line: 829, type: !14033)
!15186 = distinct !DILexicalBlock(scope: !15177, file: !2460, line: 829, column: 2)
!15187 = !DILocalVariable(name: "__key", scope: !15186, file: !2460, line: 829, type: !14033)
!15188 = !DILocation(line: 0, scope: !15177)
!15189 = !DILocation(line: 823, column: 14, scope: !15177)
!15190 = !DILocation(line: 823, column: 2, scope: !15177)
!15191 = !DILocation(line: 826, column: 20, scope: !15177)
!15192 = !DILocation(line: 826, column: 18, scope: !15177)
!15193 = !DILocation(line: 828, column: 12, scope: !15177)
!15194 = !DILocation(line: 0, scope: !15186)
!15195 = !DILocation(line: 0, scope: !14041, inlinedAt: !15196)
!15196 = distinct !DILocation(line: 829, column: 2, scope: !15186)
!15197 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15198)
!15198 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15196)
!15199 = !DILocation(line: 0, scope: !14050, inlinedAt: !15198)
!15200 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15196)
!15201 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15196)
!15202 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15196)
!15203 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15196)
!15204 = !DILocation(line: 830, column: 7, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !2460, line: 830, column: 7)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !2460, line: 829, column: 26)
!15207 = distinct !DILexicalBlock(scope: !15186, file: !2460, line: 829, column: 2)
!15208 = !DILocation(line: 830, column: 26, scope: !15205)
!15209 = !DILocation(line: 830, column: 23, scope: !15205)
!15210 = !DILocation(line: 830, column: 7, scope: !15206)
!15211 = !DILocation(line: 831, column: 20, scope: !15212)
!15212 = distinct !DILexicalBlock(scope: !15205, file: !2460, line: 830, column: 36)
!15213 = !DILocation(line: 832, column: 3, scope: !15212)
!15214 = !DILocation(line: 0, scope: !14075, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 829, column: 2, scope: !15207)
!15216 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15215)
!15217 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15215)
!15218 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !15215)
!15219 = !DILocation(line: 0, scope: !14089, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !15215)
!15221 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !15220)
!15222 = !DILocation(line: 834, column: 2, scope: !15177)
!15223 = distinct !DISubprogram(name: "z_pend_curr", scope: !2460, file: !2460, line: 840, type: !15224, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15226)
!15224 = !DISubroutineType(types: !15225)
!15225 = !{!109, !14044, !14033, !2383, !14927}
!15226 = !{!15227, !15228, !15229, !15230}
!15227 = !DILocalVariable(name: "lock", arg: 1, scope: !15223, file: !2460, line: 840, type: !14044)
!15228 = !DILocalVariable(name: "key", arg: 2, scope: !15223, file: !2460, line: 840, type: !14033)
!15229 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15223, file: !2460, line: 841, type: !2383)
!15230 = !DILocalVariable(name: "timeout", arg: 4, scope: !15223, file: !2460, line: 841, type: !14927)
!15231 = !DILocation(line: 0, scope: !15223)
!15232 = !DILocation(line: 844, column: 20, scope: !15223)
!15233 = !DILocation(line: 844, column: 18, scope: !15223)
!15234 = !DILocation(line: 846, column: 2, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15236, file: !2460, line: 846, column: 2)
!15236 = distinct !DILexicalBlock(scope: !15223, file: !2460, line: 846, column: 2)
!15237 = !DILocation(line: 846, column: 2, scope: !15236)
!15238 = !DILocation(line: 846, column: 2, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15235, file: !2460, line: 846, column: 2)
!15240 = !DILocation(line: 0, scope: !14041, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 856, column: 9, scope: !15223)
!15242 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15243)
!15243 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15241)
!15244 = !DILocation(line: 0, scope: !14050, inlinedAt: !15243)
!15245 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15241)
!15246 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15241)
!15247 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15241)
!15248 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15241)
!15249 = !DILocation(line: 857, column: 14, scope: !15223)
!15250 = !DILocation(line: 857, column: 2, scope: !15223)
!15251 = !DILocation(line: 0, scope: !14726, inlinedAt: !15252)
!15252 = distinct !DILocation(line: 858, column: 2, scope: !15223)
!15253 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !15252)
!15254 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !15252)
!15255 = !DILocation(line: 225, column: 2, scope: !14737, inlinedAt: !15252)
!15256 = !DILocation(line: 0, scope: !14717, inlinedAt: !15257)
!15257 = distinct !DILocation(line: 859, column: 9, scope: !15223)
!15258 = !DILocation(line: 0, scope: !14726, inlinedAt: !15259)
!15259 = distinct !DILocation(line: 195, column: 2, scope: !14717, inlinedAt: !15257)
!15260 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !15259)
!15261 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !15259)
!15262 = !DILocation(line: 225, column: 2, scope: !14737, inlinedAt: !15259)
!15263 = !DILocation(line: 196, column: 9, scope: !14717, inlinedAt: !15257)
!15264 = !DILocation(line: 859, column: 2, scope: !15223)
!15265 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2460, file: !2460, line: 862, type: !15266, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15268)
!15266 = !DISubroutineType(types: !15267)
!15267 = !{!2352, !2383}
!15268 = !{!15269, !15270, !15271, !15273}
!15269 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15265, file: !2460, line: 862, type: !2383)
!15270 = !DILocalVariable(name: "thread", scope: !15265, file: !2460, line: 864, type: !2352)
!15271 = !DILocalVariable(name: "__i", scope: !15272, file: !2460, line: 866, type: !14033)
!15272 = distinct !DILexicalBlock(scope: !15265, file: !2460, line: 866, column: 2)
!15273 = !DILocalVariable(name: "__key", scope: !15272, file: !2460, line: 866, type: !14033)
!15274 = !DILocation(line: 0, scope: !15265)
!15275 = !DILocation(line: 0, scope: !15272)
!15276 = !DILocation(line: 0, scope: !14041, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 866, column: 2, scope: !15272)
!15278 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15279)
!15279 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15277)
!15280 = !DILocation(line: 0, scope: !14050, inlinedAt: !15279)
!15281 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15277)
!15282 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15277)
!15283 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15277)
!15284 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15277)
!15285 = !DILocation(line: 867, column: 12, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15287, file: !2460, line: 866, column: 26)
!15287 = distinct !DILexicalBlock(scope: !15272, file: !2460, line: 866, column: 2)
!15288 = !DILocation(line: 869, column: 14, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15286, file: !2460, line: 869, column: 7)
!15290 = !DILocation(line: 869, column: 7, scope: !15286)
!15291 = !DILocation(line: 870, column: 4, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15289, file: !2460, line: 869, column: 23)
!15293 = !DILocation(line: 871, column: 3, scope: !15292)
!15294 = !DILocation(line: 0, scope: !14075, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 866, column: 2, scope: !15287)
!15296 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15295)
!15297 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15295)
!15298 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !15295)
!15299 = !DILocation(line: 0, scope: !14089, inlinedAt: !15300)
!15300 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !15295)
!15301 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !15300)
!15302 = !DILocation(line: 874, column: 2, scope: !15265)
!15303 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2460, file: !2460, line: 877, type: !15266, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15304)
!15304 = !{!15305, !15306, !15307, !15309}
!15305 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15303, file: !2460, line: 877, type: !2383)
!15306 = !DILocalVariable(name: "thread", scope: !15303, file: !2460, line: 879, type: !2352)
!15307 = !DILocalVariable(name: "__i", scope: !15308, file: !2460, line: 881, type: !14033)
!15308 = distinct !DILexicalBlock(scope: !15303, file: !2460, line: 881, column: 2)
!15309 = !DILocalVariable(name: "__key", scope: !15308, file: !2460, line: 881, type: !14033)
!15310 = !DILocation(line: 0, scope: !15303)
!15311 = !DILocation(line: 0, scope: !15308)
!15312 = !DILocation(line: 0, scope: !14041, inlinedAt: !15313)
!15313 = distinct !DILocation(line: 881, column: 2, scope: !15308)
!15314 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15315)
!15315 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15313)
!15316 = !DILocation(line: 0, scope: !14050, inlinedAt: !15315)
!15317 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15313)
!15318 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15313)
!15319 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15313)
!15320 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15313)
!15321 = !DILocation(line: 882, column: 12, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15323, file: !2460, line: 881, column: 26)
!15323 = distinct !DILexicalBlock(scope: !15308, file: !2460, line: 881, column: 2)
!15324 = !DILocation(line: 884, column: 14, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15322, file: !2460, line: 884, column: 7)
!15326 = !DILocation(line: 884, column: 7, scope: !15322)
!15327 = !DILocation(line: 885, column: 4, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15325, file: !2460, line: 884, column: 23)
!15329 = !DILocation(line: 886, column: 10, scope: !15328)
!15330 = !DILocation(line: 887, column: 3, scope: !15328)
!15331 = !DILocation(line: 0, scope: !14075, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 881, column: 2, scope: !15323)
!15333 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15332)
!15334 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15332)
!15335 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !15332)
!15336 = !DILocation(line: 0, scope: !14089, inlinedAt: !15337)
!15337 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !15332)
!15338 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !15337)
!15339 = !DILocation(line: 890, column: 2, scope: !15303)
!15340 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2460, file: !2460, line: 893, type: !13999, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15341)
!15341 = !{!15342}
!15342 = !DILocalVariable(name: "thread", arg: 1, scope: !15340, file: !2460, line: 893, type: !2352)
!15343 = !DILocation(line: 0, scope: !15340)
!15344 = !DILocation(line: 0, scope: !15148, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 895, column: 2, scope: !15340)
!15346 = !DILocation(line: 0, scope: !15152, inlinedAt: !15345)
!15347 = !DILocation(line: 0, scope: !14041, inlinedAt: !15348)
!15348 = distinct !DILocation(line: 788, column: 2, scope: !15152, inlinedAt: !15345)
!15349 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15350)
!15350 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15348)
!15351 = !DILocation(line: 0, scope: !14050, inlinedAt: !15350)
!15352 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15348)
!15353 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15348)
!15354 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15348)
!15355 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15348)
!15356 = !DILocation(line: 789, column: 3, scope: !15166, inlinedAt: !15345)
!15357 = !DILocation(line: 0, scope: !14075, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 788, column: 2, scope: !15167, inlinedAt: !15345)
!15359 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15358)
!15360 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15358)
!15361 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !15358)
!15362 = !DILocation(line: 0, scope: !14089, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !15358)
!15364 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !15363)
!15365 = !DILocation(line: 896, column: 8, scope: !15340)
!15366 = !DILocation(line: 897, column: 1, scope: !15340)
!15367 = distinct !DISubprogram(name: "z_set_prio", scope: !2460, file: !2460, line: 902, type: !14402, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15368)
!15368 = !{!15369, !15370, !15371, !15372, !15374}
!15369 = !DILocalVariable(name: "thread", arg: 1, scope: !15367, file: !2460, line: 902, type: !2352)
!15370 = !DILocalVariable(name: "prio", arg: 2, scope: !15367, file: !2460, line: 902, type: !109)
!15371 = !DILocalVariable(name: "need_sched", scope: !15367, file: !2460, line: 904, type: !347)
!15372 = !DILocalVariable(name: "__i", scope: !15373, file: !2460, line: 906, type: !14033)
!15373 = distinct !DILexicalBlock(scope: !15367, file: !2460, line: 906, column: 2)
!15374 = !DILocalVariable(name: "__key", scope: !15373, file: !2460, line: 906, type: !14033)
!15375 = !DILocation(line: 0, scope: !15367)
!15376 = !DILocation(line: 0, scope: !15373)
!15377 = !DILocation(line: 0, scope: !14041, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 906, column: 2, scope: !15373)
!15379 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15380)
!15380 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15378)
!15381 = !DILocation(line: 0, scope: !14050, inlinedAt: !15380)
!15382 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15378)
!15383 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15378)
!15384 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15378)
!15385 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15378)
!15386 = !DILocation(line: 907, column: 16, scope: !15387)
!15387 = distinct !DILexicalBlock(scope: !15388, file: !2460, line: 906, column: 26)
!15388 = distinct !DILexicalBlock(scope: !15373, file: !2460, line: 906, column: 2)
!15389 = !DILocation(line: 909, column: 7, scope: !15387)
!15390 = !DILocation(line: 0, scope: !14233, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 912, column: 5, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15393, file: !2460, line: 911, column: 63)
!15393 = distinct !DILexicalBlock(scope: !15394, file: !2460, line: 911, column: 8)
!15394 = distinct !DILexicalBlock(scope: !15395, file: !2460, line: 909, column: 19)
!15395 = distinct !DILexicalBlock(scope: !15387, file: !2460, line: 909, column: 7)
!15396 = !DILocation(line: 266, column: 28, scope: !14233, inlinedAt: !15391)
!15397 = !DILocation(line: 0, scope: !14241, inlinedAt: !15398)
!15398 = distinct !DILocation(line: 268, column: 3, scope: !14245, inlinedAt: !15391)
!15399 = !DILocation(line: 234, column: 2, scope: !14241, inlinedAt: !15398)
!15400 = !DILocation(line: 913, column: 23, scope: !15392)
!15401 = !DILocation(line: 0, scope: !14250, inlinedAt: !15402)
!15402 = distinct !DILocation(line: 914, column: 5, scope: !15392)
!15403 = !DILocation(line: 252, column: 28, scope: !14250, inlinedAt: !15402)
!15404 = !DILocation(line: 0, scope: !14257, inlinedAt: !15405)
!15405 = distinct !DILocation(line: 254, column: 3, scope: !14261, inlinedAt: !15402)
!15406 = !DILocation(line: 0, scope: !14264, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 229, column: 2, scope: !14257, inlinedAt: !15405)
!15408 = !DILocation(line: 186, column: 2, scope: !14274, inlinedAt: !15407)
!15409 = !DILocation(line: 186, column: 2, scope: !14275, inlinedAt: !15407)
!15410 = !DILocation(line: 186, column: 2, scope: !14278, inlinedAt: !15407)
!15411 = !DILocation(line: 188, column: 2, scope: !14280, inlinedAt: !15407)
!15412 = !DILocation(line: 188, column: 2, scope: !14282, inlinedAt: !15407)
!15413 = !DILocation(line: 0, scope: !14280, inlinedAt: !15407)
!15414 = !DILocation(line: 189, column: 7, scope: !14285, inlinedAt: !15407)
!15415 = !DILocation(line: 189, column: 35, scope: !14285, inlinedAt: !15407)
!15416 = !DILocation(line: 189, column: 7, scope: !14286, inlinedAt: !15407)
!15417 = !DILocation(line: 190, column: 4, scope: !14290, inlinedAt: !15407)
!15418 = !DILocation(line: 192, column: 4, scope: !14290, inlinedAt: !15407)
!15419 = distinct !{!15419, !15411, !15420}
!15420 = !DILocation(line: 194, column: 2, scope: !14280, inlinedAt: !15407)
!15421 = !DILocation(line: 196, column: 2, scope: !14264, inlinedAt: !15407)
!15422 = !DILocation(line: 197, column: 1, scope: !14264, inlinedAt: !15407)
!15423 = !DILocation(line: 918, column: 4, scope: !15394)
!15424 = !DILocation(line: 919, column: 3, scope: !15394)
!15425 = !DILocation(line: 920, column: 22, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15395, file: !2460, line: 919, column: 10)
!15427 = !DILocation(line: 0, scope: !14075, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 906, column: 2, scope: !15388)
!15429 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15428)
!15430 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15428)
!15431 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !15428)
!15432 = !DILocation(line: 0, scope: !14089, inlinedAt: !15433)
!15433 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !15428)
!15434 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !15433)
!15435 = !DILocation(line: 926, column: 2, scope: !15367)
!15436 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2460, file: !2460, line: 929, type: !15437, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15439)
!15437 = !DISubroutineType(types: !15438)
!15438 = !{null, !2352, !109}
!15439 = !{!15440, !15441, !15442}
!15440 = !DILocalVariable(name: "thread", arg: 1, scope: !15436, file: !2460, line: 929, type: !2352)
!15441 = !DILocalVariable(name: "prio", arg: 2, scope: !15436, file: !2460, line: 929, type: !109)
!15442 = !DILocalVariable(name: "need_sched", scope: !15436, file: !2460, line: 931, type: !347)
!15443 = !DILocation(line: 0, scope: !15436)
!15444 = !DILocation(line: 931, column: 20, scope: !15436)
!15445 = !DILocation(line: 935, column: 17, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15436, file: !2460, line: 935, column: 6)
!15447 = !DILocation(line: 935, column: 20, scope: !15446)
!15448 = !DILocation(line: 935, column: 35, scope: !15446)
!15449 = !DILocation(line: 935, column: 48, scope: !15446)
!15450 = !DILocation(line: 935, column: 6, scope: !15436)
!15451 = !DILocation(line: 936, column: 3, scope: !15452)
!15452 = distinct !DILexicalBlock(scope: !15446, file: !2460, line: 935, column: 55)
!15453 = !DILocation(line: 937, column: 2, scope: !15452)
!15454 = !DILocation(line: 938, column: 1, scope: !15436)
!15455 = distinct !DISubprogram(name: "k_sched_lock", scope: !2460, file: !2460, line: 987, type: !3116, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15456)
!15456 = !{!15457, !15459}
!15457 = !DILocalVariable(name: "__i", scope: !15458, file: !2460, line: 989, type: !14033)
!15458 = distinct !DILexicalBlock(scope: !15455, file: !2460, line: 989, column: 2)
!15459 = !DILocalVariable(name: "__key", scope: !15458, file: !2460, line: 989, type: !14033)
!15460 = !DILocation(line: 0, scope: !15458)
!15461 = !DILocation(line: 0, scope: !14041, inlinedAt: !15462)
!15462 = distinct !DILocation(line: 989, column: 2, scope: !15458)
!15463 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15464)
!15464 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15462)
!15465 = !DILocation(line: 0, scope: !14050, inlinedAt: !15464)
!15466 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15462)
!15467 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15462)
!15468 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15462)
!15469 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15462)
!15470 = !DILocation(line: 992, column: 3, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15472, file: !2460, line: 989, column: 26)
!15472 = distinct !DILexicalBlock(scope: !15458, file: !2460, line: 989, column: 2)
!15473 = !DILocation(line: 0, scope: !14075, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 989, column: 2, scope: !15472)
!15475 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15474)
!15476 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15474)
!15477 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !15474)
!15478 = !DILocation(line: 0, scope: !14089, inlinedAt: !15479)
!15479 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !15474)
!15480 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !15479)
!15481 = !DILocation(line: 994, column: 1, scope: !15455)
!15482 = distinct !DISubprogram(name: "z_sched_lock", scope: !12828, file: !12828, line: 251, type: !3116, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2050)
!15483 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !15485)
!15485 = distinct !DILocation(line: 253, column: 2, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15487, file: !12828, line: 253, column: 2)
!15487 = distinct !DILexicalBlock(scope: !15482, file: !12828, line: 253, column: 2)
!15488 = !DILocation(line: 0, scope: !14766, inlinedAt: !15484)
!15489 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !15485)
!15490 = !DILocation(line: 253, column: 2, scope: !15487)
!15491 = !DILocation(line: 253, column: 2, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15486, file: !12828, line: 253, column: 2)
!15493 = !DILocation(line: 254, column: 2, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15495, file: !12828, line: 254, column: 2)
!15495 = distinct !DILexicalBlock(scope: !15482, file: !12828, line: 254, column: 2)
!15496 = !DILocation(line: 254, column: 2, scope: !15495)
!15497 = !DILocation(line: 254, column: 2, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15494, file: !12828, line: 254, column: 2)
!15499 = !DILocation(line: 256, column: 2, scope: !15482)
!15500 = !DILocation(line: 258, column: 2, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15482, file: !12828, line: 258, column: 2)
!15502 = !{i64 2154285601}
!15503 = !DILocation(line: 259, column: 1, scope: !15482)
!15504 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2460, file: !2460, line: 996, type: !3116, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15505)
!15505 = !{!15506, !15508}
!15506 = !DILocalVariable(name: "__i", scope: !15507, file: !2460, line: 998, type: !14033)
!15507 = distinct !DILexicalBlock(scope: !15504, file: !2460, line: 998, column: 2)
!15508 = !DILocalVariable(name: "__key", scope: !15507, file: !2460, line: 998, type: !14033)
!15509 = !DILocation(line: 0, scope: !15507)
!15510 = !DILocation(line: 0, scope: !14041, inlinedAt: !15511)
!15511 = distinct !DILocation(line: 998, column: 2, scope: !15507)
!15512 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15513)
!15513 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15511)
!15514 = !DILocation(line: 0, scope: !14050, inlinedAt: !15513)
!15515 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15511)
!15516 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15511)
!15517 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15511)
!15518 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15511)
!15519 = !DILocation(line: 999, column: 3, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15521, file: !2460, line: 999, column: 3)
!15521 = distinct !DILexicalBlock(scope: !15522, file: !2460, line: 999, column: 3)
!15522 = distinct !DILexicalBlock(scope: !15523, file: !2460, line: 998, column: 26)
!15523 = distinct !DILexicalBlock(scope: !15507, file: !2460, line: 998, column: 2)
!15524 = !DILocation(line: 999, column: 3, scope: !15521)
!15525 = !DILocation(line: 999, column: 3, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15520, file: !2460, line: 999, column: 3)
!15527 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !15528)
!15528 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !15529)
!15529 = distinct !DILocation(line: 1000, column: 3, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15531, file: !2460, line: 1000, column: 3)
!15531 = distinct !DILexicalBlock(scope: !15522, file: !2460, line: 1000, column: 3)
!15532 = !DILocation(line: 0, scope: !14766, inlinedAt: !15528)
!15533 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !15529)
!15534 = !DILocation(line: 1000, column: 3, scope: !15531)
!15535 = !DILocation(line: 1000, column: 3, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15530, file: !2460, line: 1000, column: 3)
!15537 = !DILocation(line: 1002, column: 5, scope: !15522)
!15538 = !DILocation(line: 1002, column: 20, scope: !15522)
!15539 = !DILocation(line: 1002, column: 3, scope: !15522)
!15540 = !DILocation(line: 1003, column: 3, scope: !15522)
!15541 = !DILocation(line: 0, scope: !14075, inlinedAt: !15542)
!15542 = distinct !DILocation(line: 998, column: 2, scope: !15523)
!15543 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15542)
!15544 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !15542)
!15545 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !15542)
!15546 = !DILocation(line: 0, scope: !14089, inlinedAt: !15547)
!15547 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !15542)
!15548 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !15547)
!15549 = !DILocation(line: 1011, column: 2, scope: !15504)
!15550 = !DILocation(line: 1012, column: 1, scope: !15504)
!15551 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2460, file: !2460, line: 1014, type: !14390, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2050)
!15552 = !DILocation(line: 1028, column: 25, scope: !15551)
!15553 = !DILocation(line: 1028, column: 2, scope: !15551)
!15554 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2460, file: !2460, line: 1155, type: !15555, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15557)
!15555 = !DISubroutineType(types: !15556)
!15556 = !{!347, !2381, !2381}
!15557 = !{!15558, !15559, !15560, !15561, !15562}
!15558 = !DILocalVariable(name: "a", arg: 1, scope: !15554, file: !2460, line: 1155, type: !2381)
!15559 = !DILocalVariable(name: "b", arg: 2, scope: !15554, file: !2460, line: 1155, type: !2381)
!15560 = !DILocalVariable(name: "thread_a", scope: !15554, file: !2460, line: 1157, type: !2352)
!15561 = !DILocalVariable(name: "thread_b", scope: !15554, file: !2460, line: 1157, type: !2352)
!15562 = !DILocalVariable(name: "cmp", scope: !15554, file: !2460, line: 1158, type: !744)
!15563 = !DILocation(line: 0, scope: !15554)
!15564 = !DILocation(line: 1160, column: 13, scope: !15554)
!15565 = !DILocation(line: 1161, column: 13, scope: !15554)
!15566 = !DILocation(line: 1163, column: 8, scope: !15554)
!15567 = !DILocation(line: 1165, column: 10, scope: !15568)
!15568 = distinct !DILexicalBlock(scope: !15554, file: !2460, line: 1165, column: 6)
!15569 = !DILocation(line: 1165, column: 6, scope: !15554)
!15570 = !DILocation(line: 1167, column: 17, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !15568, file: !2460, line: 1167, column: 13)
!15572 = !DILocation(line: 1167, column: 13, scope: !15568)
!15573 = !DILocation(line: 1170, column: 25, scope: !15574)
!15574 = distinct !DILexicalBlock(scope: !15571, file: !2460, line: 1169, column: 9)
!15575 = !DILocation(line: 1170, column: 52, scope: !15574)
!15576 = !DILocation(line: 1170, column: 35, scope: !15574)
!15577 = !DILocation(line: 1170, column: 3, scope: !15574)
!15578 = !DILocation(line: 0, scope: !15568)
!15579 = !DILocation(line: 1173, column: 1, scope: !15554)
!15580 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2460, file: !2460, line: 1175, type: !15581, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15596)
!15581 = !DISubroutineType(types: !15582)
!15582 = !{null, !15583, !2352}
!15583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15584, size: 32)
!15584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15585, line: 37, size: 128, elements: !15586)
!15585 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15586 = !{!15587, !15595}
!15587 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15584, file: !15585, line: 38, baseType: !15588, size: 96)
!15588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !170, line: 83, size: 96, elements: !15589)
!15589 = !{!15590, !15591, !15594}
!15590 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15588, file: !170, line: 84, baseType: !2381, size: 32)
!15591 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15588, file: !170, line: 85, baseType: !15592, size: 32, offset: 32)
!15592 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !170, line: 81, baseType: !15593)
!15593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15555, size: 32)
!15594 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15588, file: !170, line: 86, baseType: !109, size: 32, offset: 64)
!15595 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15584, file: !15585, line: 39, baseType: !109, size: 32, offset: 96)
!15596 = !{!15597, !15598, !15599, !15600, !15609}
!15597 = !DILocalVariable(name: "pq", arg: 1, scope: !15580, file: !2460, line: 1175, type: !15583)
!15598 = !DILocalVariable(name: "thread", arg: 2, scope: !15580, file: !2460, line: 1175, type: !2352)
!15599 = !DILocalVariable(name: "t", scope: !15580, file: !2460, line: 1177, type: !2352)
!15600 = !DILocalVariable(name: "__f", scope: !15601, file: !2460, line: 1190, type: !15604)
!15601 = distinct !DILexicalBlock(scope: !15602, file: !2460, line: 1190, column: 3)
!15602 = distinct !DILexicalBlock(scope: !15603, file: !2460, line: 1189, column: 27)
!15603 = distinct !DILexicalBlock(scope: !15580, file: !2460, line: 1189, column: 6)
!15604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !170, line: 155, size: 96, elements: !15605)
!15605 = !{!15606, !15607, !15608}
!15606 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15604, file: !170, line: 156, baseType: !2455, size: 32)
!15607 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15604, file: !170, line: 157, baseType: !286, size: 32, offset: 32)
!15608 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15604, file: !170, line: 158, baseType: !744, size: 32, offset: 64)
!15609 = !DILocalVariable(name: "n", scope: !15610, file: !2460, line: 1190, type: !2381)
!15610 = distinct !DILexicalBlock(scope: !15611, file: !2460, line: 1190, column: 3)
!15611 = distinct !DILexicalBlock(scope: !15601, file: !2460, line: 1190, column: 3)
!15612 = !DILocation(line: 0, scope: !15580)
!15613 = !DILocation(line: 1179, column: 2, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15615, file: !2460, line: 1179, column: 2)
!15615 = distinct !DILexicalBlock(scope: !15580, file: !2460, line: 1179, column: 2)
!15616 = !DILocation(line: 1179, column: 2, scope: !15615)
!15617 = !DILocation(line: 1179, column: 2, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15614, file: !2460, line: 1179, column: 2)
!15619 = !DILocation(line: 1181, column: 31, scope: !15580)
!15620 = !DILocation(line: 1181, column: 45, scope: !15580)
!15621 = !DILocation(line: 1181, column: 15, scope: !15580)
!15622 = !DILocation(line: 1181, column: 25, scope: !15580)
!15623 = !DILocation(line: 1189, column: 11, scope: !15603)
!15624 = !DILocation(line: 1189, column: 7, scope: !15603)
!15625 = !DILocation(line: 1189, column: 6, scope: !15580)
!15626 = !DILocation(line: 1190, column: 3, scope: !15601)
!15627 = !DILocation(line: 1190, column: 3, scope: !15610)
!15628 = !DILocation(line: 0, scope: !15610)
!15629 = !DILocation(line: 1190, column: 3, scope: !15611)
!15630 = !DILocation(line: 1193, column: 2, scope: !15602)
!15631 = !DILocation(line: 1191, column: 42, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15611, file: !2460, line: 1190, column: 54)
!15633 = !DILocation(line: 1191, column: 12, scope: !15632)
!15634 = !DILocation(line: 1191, column: 22, scope: !15632)
!15635 = distinct !{!15635, !15626, !15636}
!15636 = !DILocation(line: 1192, column: 3, scope: !15601)
!15637 = !DILocation(line: 1195, column: 17, scope: !15580)
!15638 = !DILocation(line: 1195, column: 37, scope: !15580)
!15639 = !DILocation(line: 1195, column: 2, scope: !15580)
!15640 = !DILocation(line: 1196, column: 1, scope: !15580)
!15641 = !DISubprogram(name: "z_rb_foreach_next", scope: !170, file: !170, line: 176, type: !15642, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!15642 = !DISubroutineType(types: !15643)
!15643 = !{!2381, !15644, !15645}
!15644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15588, size: 32)
!15645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15604, size: 32)
!15646 = !DISubprogram(name: "rb_insert", scope: !170, file: !170, line: 105, type: !15647, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!15647 = !DISubroutineType(types: !15648)
!15648 = !{null, !15644, !2381}
!15649 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2460, file: !2460, line: 1198, type: !15581, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15650)
!15650 = !{!15651, !15652}
!15651 = !DILocalVariable(name: "pq", arg: 1, scope: !15649, file: !2460, line: 1198, type: !15583)
!15652 = !DILocalVariable(name: "thread", arg: 2, scope: !15649, file: !2460, line: 1198, type: !2352)
!15653 = !DILocation(line: 0, scope: !15649)
!15654 = !DILocation(line: 1200, column: 2, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15656, file: !2460, line: 1200, column: 2)
!15656 = distinct !DILexicalBlock(scope: !15649, file: !2460, line: 1200, column: 2)
!15657 = !DILocation(line: 1200, column: 2, scope: !15656)
!15658 = !DILocation(line: 1200, column: 2, scope: !15659)
!15659 = distinct !DILexicalBlock(scope: !15655, file: !2460, line: 1200, column: 2)
!15660 = !DILocation(line: 1202, column: 17, scope: !15649)
!15661 = !DILocation(line: 1202, column: 37, scope: !15649)
!15662 = !DILocation(line: 1202, column: 2, scope: !15649)
!15663 = !DILocation(line: 1204, column: 16, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15649, file: !2460, line: 1204, column: 6)
!15665 = !DILocation(line: 1204, column: 7, scope: !15664)
!15666 = !DILocation(line: 1204, column: 6, scope: !15649)
!15667 = !DILocation(line: 1205, column: 7, scope: !15668)
!15668 = distinct !DILexicalBlock(scope: !15664, file: !2460, line: 1204, column: 22)
!15669 = !DILocation(line: 1205, column: 22, scope: !15668)
!15670 = !DILocation(line: 1206, column: 2, scope: !15668)
!15671 = !DILocation(line: 1207, column: 1, scope: !15649)
!15672 = !DISubprogram(name: "rb_remove", scope: !170, file: !170, line: 110, type: !15647, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!15673 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2460, file: !2460, line: 1209, type: !15674, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15676)
!15674 = !DISubroutineType(types: !15675)
!15675 = !{!2352, !15583}
!15676 = !{!15677, !15678, !15679}
!15677 = !DILocalVariable(name: "pq", arg: 1, scope: !15673, file: !2460, line: 1209, type: !15583)
!15678 = !DILocalVariable(name: "thread", scope: !15673, file: !2460, line: 1211, type: !2352)
!15679 = !DILocalVariable(name: "n", scope: !15673, file: !2460, line: 1212, type: !2381)
!15680 = !DILocation(line: 0, scope: !15673)
!15681 = !DILocation(line: 1212, column: 37, scope: !15673)
!15682 = !DILocation(line: 1212, column: 21, scope: !15673)
!15683 = !DILocation(line: 1217, column: 2, scope: !15673)
!15684 = distinct !DISubprogram(name: "rb_get_min", scope: !170, file: !170, line: 115, type: !15685, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15687)
!15685 = !DISubroutineType(types: !15686)
!15686 = !{!2381, !15644}
!15687 = !{!15688}
!15688 = !DILocalVariable(name: "tree", arg: 1, scope: !15684, file: !170, line: 115, type: !15644)
!15689 = !DILocation(line: 0, scope: !15684)
!15690 = !DILocation(line: 117, column: 9, scope: !15684)
!15691 = !DILocation(line: 117, column: 2, scope: !15684)
!15692 = !DISubprogram(name: "z_rb_get_minmax", scope: !170, file: !170, line: 100, type: !15693, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2050)
!15693 = !DISubroutineType(types: !15694)
!15694 = !{!2381, !15644, !180}
!15695 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2460, file: !2460, line: 1246, type: !15696, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15704)
!15696 = !DISubroutineType(types: !15697)
!15697 = !{!2352, !15698}
!15698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15699, size: 32)
!15699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15585, line: 53, size: 2080, elements: !15700)
!15700 = !{!15701, !15703}
!15701 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15699, file: !15585, line: 54, baseType: !15702, size: 2048)
!15702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2388, size: 2048, elements: !226)
!15703 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15699, file: !15585, line: 55, baseType: !32, size: 32, offset: 2048)
!15704 = !{!15705, !15706, !15707, !15708}
!15705 = !DILocalVariable(name: "pq", arg: 1, scope: !15695, file: !2460, line: 1246, type: !15698)
!15706 = !DILocalVariable(name: "thread", scope: !15695, file: !2460, line: 1252, type: !2352)
!15707 = !DILocalVariable(name: "l", scope: !15695, file: !2460, line: 1253, type: !14267)
!15708 = !DILocalVariable(name: "n", scope: !15695, file: !2460, line: 1254, type: !2456)
!15709 = !DILocation(line: 0, scope: !15695)
!15710 = !DILocation(line: 1248, column: 11, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15695, file: !2460, line: 1248, column: 6)
!15712 = !DILocation(line: 1248, column: 7, scope: !15711)
!15713 = !DILocation(line: 1248, column: 6, scope: !15695)
!15714 = !DILocation(line: 1253, column: 31, scope: !15695)
!15715 = !DILocation(line: 1253, column: 20, scope: !15695)
!15716 = !DILocation(line: 1254, column: 19, scope: !15695)
!15717 = !DILocation(line: 1260, column: 1, scope: !15695)
!15718 = distinct !DISubprogram(name: "z_unpend_all", scope: !2460, file: !2460, line: 1262, type: !15719, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15721)
!15719 = !DISubroutineType(types: !15720)
!15720 = !{!109, !2383}
!15721 = !{!15722, !15723, !15724}
!15722 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15718, file: !2460, line: 1262, type: !2383)
!15723 = !DILocalVariable(name: "need_sched", scope: !15718, file: !2460, line: 1264, type: !109)
!15724 = !DILocalVariable(name: "thread", scope: !15718, file: !2460, line: 1265, type: !2352)
!15725 = !DILocation(line: 0, scope: !15718)
!15726 = !DILocation(line: 1267, column: 19, scope: !15718)
!15727 = !DILocation(line: 1267, column: 41, scope: !15718)
!15728 = !DILocation(line: 1267, column: 2, scope: !15718)
!15729 = !DILocation(line: 1268, column: 3, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15718, file: !2460, line: 1267, column: 50)
!15731 = !DILocation(line: 1269, column: 3, scope: !15730)
!15732 = distinct !{!15732, !15728, !15733}
!15733 = !DILocation(line: 1271, column: 2, scope: !15718)
!15734 = !DILocation(line: 1273, column: 2, scope: !15718)
!15735 = distinct !DISubprogram(name: "z_waitq_head", scope: !13189, file: !13189, line: 52, type: !15266, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15736)
!15736 = !{!15737}
!15737 = !DILocalVariable(name: "w", arg: 1, scope: !15735, file: !13189, line: 52, type: !2383)
!15738 = !DILocation(line: 0, scope: !15735)
!15739 = !DILocation(line: 54, column: 52, scope: !15735)
!15740 = !DILocation(line: 54, column: 28, scope: !15735)
!15741 = !DILocation(line: 54, column: 9, scope: !15735)
!15742 = !DILocation(line: 54, column: 2, scope: !15735)
!15743 = distinct !DISubprogram(name: "init_ready_q", scope: !2460, file: !2460, line: 1276, type: !15744, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15751)
!15744 = !DISubroutineType(types: !15745)
!15745 = !{null, !15746}
!15746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15747, size: 32)
!15747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !15748)
!15748 = !{!15749, !15750}
!15749 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15747, file: !122, line: 86, baseType: !2352, size: 32)
!15750 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15747, file: !122, line: 90, baseType: !2388, size: 64, offset: 32)
!15751 = !{!15752}
!15752 = !DILocalVariable(name: "rq", arg: 1, scope: !15743, file: !2460, line: 1276, type: !15746)
!15753 = !DILocation(line: 0, scope: !15743)
!15754 = !DILocation(line: 1289, column: 22, scope: !15743)
!15755 = !DILocation(line: 1289, column: 2, scope: !15743)
!15756 = !DILocation(line: 1291, column: 1, scope: !15743)
!15757 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !15758, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15760)
!15758 = !DISubroutineType(types: !15759)
!15759 = !{null, !14267}
!15760 = !{!15761}
!15761 = !DILocalVariable(name: "list", arg: 1, scope: !15757, file: !127, line: 197, type: !14267)
!15762 = !DILocation(line: 0, scope: !15757)
!15763 = !DILocation(line: 199, column: 8, scope: !15757)
!15764 = !DILocation(line: 199, column: 13, scope: !15757)
!15765 = !DILocation(line: 200, column: 8, scope: !15757)
!15766 = !DILocation(line: 200, column: 13, scope: !15757)
!15767 = !DILocation(line: 201, column: 1, scope: !15757)
!15768 = distinct !DISubprogram(name: "z_sched_init", scope: !2460, file: !2460, line: 1293, type: !3116, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2050)
!15769 = !DILocation(line: 1302, column: 2, scope: !15768)
!15770 = !DILocation(line: 1306, column: 2, scope: !15768)
!15771 = !DILocation(line: 1309, column: 1, scope: !15768)
!15772 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2460, file: !2460, line: 1311, type: !15773, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15776)
!15773 = !DISubroutineType(types: !15774)
!15774 = !{!109, !15775}
!15775 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2352)
!15776 = !{!15777}
!15777 = !DILocalVariable(name: "thread", arg: 1, scope: !15772, file: !2460, line: 1311, type: !15775)
!15778 = !DILocation(line: 0, scope: !15772)
!15779 = !DILocation(line: 1313, column: 22, scope: !15772)
!15780 = !DILocation(line: 1313, column: 9, scope: !15772)
!15781 = !DILocation(line: 1313, column: 2, scope: !15772)
!15782 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2460, file: !2460, line: 1325, type: !15783, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15785)
!15783 = !DISubroutineType(types: !15784)
!15784 = !{null, !15775, !109}
!15785 = !{!15786, !15787, !15788}
!15786 = !DILocalVariable(name: "thread", arg: 1, scope: !15782, file: !2460, line: 1325, type: !15775)
!15787 = !DILocalVariable(name: "prio", arg: 2, scope: !15782, file: !2460, line: 1325, type: !109)
!15788 = !DILocalVariable(name: "th", scope: !15782, file: !2460, line: 1334, type: !2352)
!15789 = !DILocation(line: 0, scope: !15782)
!15790 = !DILocation(line: 1331, column: 2, scope: !15791)
!15791 = distinct !DILexicalBlock(scope: !15792, file: !2460, line: 1331, column: 2)
!15792 = distinct !DILexicalBlock(scope: !15793, file: !2460, line: 1331, column: 2)
!15793 = distinct !DILexicalBlock(scope: !15782, file: !2460, line: 1331, column: 2)
!15794 = !DILocation(line: 1331, column: 2, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15791, file: !2460, line: 1331, column: 2)
!15796 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !15797)
!15797 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !15798)
!15798 = distinct !DILocation(line: 1332, column: 2, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15800, file: !2460, line: 1332, column: 2)
!15800 = distinct !DILexicalBlock(scope: !15782, file: !2460, line: 1332, column: 2)
!15801 = !DILocation(line: 0, scope: !14766, inlinedAt: !15797)
!15802 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !15798)
!15803 = !DILocation(line: 1332, column: 2, scope: !15800)
!15804 = !DILocation(line: 1332, column: 2, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15799, file: !2460, line: 1332, column: 2)
!15806 = !DILocation(line: 1336, column: 2, scope: !15782)
!15807 = !DILocation(line: 1337, column: 1, scope: !15782)
!15808 = distinct !DISubprogram(name: "k_can_yield", scope: !2460, file: !2460, line: 1384, type: !7490, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2050)
!15809 = !DILocation(line: 1386, column: 11, scope: !15808)
!15810 = !DILocation(line: 1386, column: 29, scope: !15808)
!15811 = !DILocation(line: 1386, column: 32, scope: !15808)
!15812 = !DILocation(line: 1386, column: 46, scope: !15808)
!15813 = !DILocation(line: 1387, column: 28, scope: !15808)
!15814 = !DILocation(line: 1387, column: 4, scope: !15808)
!15815 = !DILocation(line: 1386, column: 2, scope: !15808)
!15816 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7490, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2050)
!15817 = !DILocation(line: 993, column: 10, scope: !15816)
!15818 = !DILocation(line: 993, column: 2, scope: !15816)
!15819 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2460, file: !2460, line: 1390, type: !3116, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15820)
!15820 = !{!15821}
!15821 = !DILocalVariable(name: "key", scope: !15819, file: !2460, line: 1396, type: !14033)
!15822 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !15823)
!15823 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !15824)
!15824 = distinct !DILocation(line: 1392, column: 2, scope: !15825)
!15825 = distinct !DILexicalBlock(scope: !15826, file: !2460, line: 1392, column: 2)
!15826 = distinct !DILexicalBlock(scope: !15819, file: !2460, line: 1392, column: 2)
!15827 = !DILocation(line: 0, scope: !14766, inlinedAt: !15823)
!15828 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !15824)
!15829 = !DILocation(line: 1392, column: 2, scope: !15826)
!15830 = !DILocation(line: 1392, column: 2, scope: !15831)
!15831 = distinct !DILexicalBlock(scope: !15825, file: !2460, line: 1392, column: 2)
!15832 = !DILocation(line: 0, scope: !14041, inlinedAt: !15833)
!15833 = distinct !DILocation(line: 1396, column: 25, scope: !15819)
!15834 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15835)
!15835 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15833)
!15836 = !DILocation(line: 0, scope: !14050, inlinedAt: !15835)
!15837 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15833)
!15838 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15833)
!15839 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15833)
!15840 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15833)
!15841 = !DILocation(line: 0, scope: !15819)
!15842 = !DILocation(line: 1400, column: 18, scope: !15843)
!15843 = distinct !DILexicalBlock(scope: !15844, file: !2460, line: 1399, column: 36)
!15844 = distinct !DILexicalBlock(scope: !15819, file: !2460, line: 1398, column: 6)
!15845 = !DILocation(line: 0, scope: !14233, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 1400, column: 3, scope: !15843)
!15847 = !DILocation(line: 266, column: 15, scope: !14233, inlinedAt: !15846)
!15848 = !DILocation(line: 266, column: 28, scope: !14233, inlinedAt: !15846)
!15849 = !DILocation(line: 0, scope: !14241, inlinedAt: !15850)
!15850 = distinct !DILocation(line: 268, column: 3, scope: !14245, inlinedAt: !15846)
!15851 = !DILocation(line: 234, column: 2, scope: !14241, inlinedAt: !15850)
!15852 = !DILocation(line: 1402, column: 15, scope: !15819)
!15853 = !DILocation(line: 0, scope: !14250, inlinedAt: !15854)
!15854 = distinct !DILocation(line: 1402, column: 2, scope: !15819)
!15855 = !DILocation(line: 252, column: 15, scope: !14250, inlinedAt: !15854)
!15856 = !DILocation(line: 252, column: 28, scope: !14250, inlinedAt: !15854)
!15857 = !DILocation(line: 0, scope: !14257, inlinedAt: !15858)
!15858 = distinct !DILocation(line: 254, column: 3, scope: !14261, inlinedAt: !15854)
!15859 = !DILocation(line: 0, scope: !14264, inlinedAt: !15860)
!15860 = distinct !DILocation(line: 229, column: 2, scope: !14257, inlinedAt: !15858)
!15861 = !DILocation(line: 186, column: 2, scope: !14274, inlinedAt: !15860)
!15862 = !DILocation(line: 186, column: 2, scope: !14275, inlinedAt: !15860)
!15863 = !DILocation(line: 186, column: 2, scope: !14278, inlinedAt: !15860)
!15864 = !DILocation(line: 188, column: 2, scope: !14280, inlinedAt: !15860)
!15865 = !DILocation(line: 188, column: 2, scope: !14282, inlinedAt: !15860)
!15866 = !DILocation(line: 0, scope: !14280, inlinedAt: !15860)
!15867 = !DILocation(line: 189, column: 7, scope: !14285, inlinedAt: !15860)
!15868 = !DILocation(line: 189, column: 35, scope: !14285, inlinedAt: !15860)
!15869 = !DILocation(line: 189, column: 7, scope: !14286, inlinedAt: !15860)
!15870 = !DILocation(line: 191, column: 21, scope: !14290, inlinedAt: !15860)
!15871 = !DILocation(line: 190, column: 4, scope: !14290, inlinedAt: !15860)
!15872 = !DILocation(line: 192, column: 4, scope: !14290, inlinedAt: !15860)
!15873 = distinct !{!15873, !15864, !15874}
!15874 = !DILocation(line: 194, column: 2, scope: !14280, inlinedAt: !15860)
!15875 = !DILocation(line: 196, column: 37, scope: !14264, inlinedAt: !15860)
!15876 = !DILocation(line: 196, column: 2, scope: !14264, inlinedAt: !15860)
!15877 = !DILocation(line: 197, column: 1, scope: !14264, inlinedAt: !15860)
!15878 = !DILocation(line: 1403, column: 2, scope: !15819)
!15879 = !DILocation(line: 0, scope: !14717, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 1404, column: 2, scope: !15819)
!15881 = !DILocation(line: 0, scope: !14726, inlinedAt: !15882)
!15882 = distinct !DILocation(line: 195, column: 2, scope: !14717, inlinedAt: !15880)
!15883 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !15882)
!15884 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !15882)
!15885 = !DILocation(line: 225, column: 2, scope: !14737, inlinedAt: !15882)
!15886 = !DILocation(line: 196, column: 9, scope: !14717, inlinedAt: !15880)
!15887 = !DILocation(line: 1405, column: 1, scope: !15819)
!15888 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2460, file: !2460, line: 1459, type: !15889, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15891)
!15889 = !DISubroutineType(types: !15890)
!15890 = !{!744, !14927}
!15891 = !{!15892, !15893, !15894}
!15892 = !DILocalVariable(name: "timeout", arg: 1, scope: !15888, file: !2460, line: 1459, type: !14927)
!15893 = !DILocalVariable(name: "ticks", scope: !15888, file: !2460, line: 1461, type: !103)
!15894 = !DILocalVariable(name: "ret", scope: !15888, file: !2460, line: 1480, type: !744)
!15895 = !DILocation(line: 0, scope: !15888)
!15896 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !15897)
!15897 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !15898)
!15898 = distinct !DILocation(line: 1463, column: 2, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15900, file: !2460, line: 1463, column: 2)
!15900 = distinct !DILexicalBlock(scope: !15888, file: !2460, line: 1463, column: 2)
!15901 = !DILocation(line: 0, scope: !14766, inlinedAt: !15897)
!15902 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !15898)
!15903 = !DILocation(line: 1463, column: 2, scope: !15900)
!15904 = !DILocation(line: 1463, column: 2, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15899, file: !2460, line: 1463, column: 2)
!15906 = !DILocation(line: 1468, column: 6, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15888, file: !2460, line: 1468, column: 6)
!15908 = !DILocation(line: 1468, column: 6, scope: !15888)
!15909 = !DILocation(line: 1469, column: 20, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15907, file: !2460, line: 1468, column: 40)
!15911 = !DILocation(line: 1469, column: 3, scope: !15910)
!15912 = !DILocation(line: 1473, column: 3, scope: !15910)
!15913 = !DILocation(line: 1478, column: 10, scope: !15888)
!15914 = !DILocation(line: 1480, column: 16, scope: !15888)
!15915 = !DILocation(line: 1485, column: 1, scope: !15888)
!15916 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3262, file: !3262, line: 310, type: !15917, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15919)
!15917 = !DISubroutineType(types: !15918)
!15918 = !{null, !15775}
!15919 = !{!15920}
!15920 = !DILocalVariable(name: "thread", arg: 1, scope: !15916, file: !3262, line: 310, type: !15775)
!15921 = !DILocation(line: 0, scope: !15916)
!15922 = !DILocation(line: 319, column: 2, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15916, file: !3262, line: 319, column: 2)
!15924 = !{i64 2154201759}
!15925 = !DILocation(line: 320, column: 2, scope: !15916)
!15926 = !DILocation(line: 321, column: 1, scope: !15916)
!15927 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2460, file: !2460, line: 1415, type: !15928, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15930)
!15928 = !DISubroutineType(types: !15929)
!15929 = !{!744, !103}
!15930 = !{!15931, !15932, !15933, !15934}
!15931 = !DILocalVariable(name: "ticks", arg: 1, scope: !15927, file: !2460, line: 1415, type: !103)
!15932 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15927, file: !2460, line: 1418, type: !110)
!15933 = !DILocalVariable(name: "timeout", scope: !15927, file: !2460, line: 1430, type: !14927)
!15934 = !DILocalVariable(name: "key", scope: !15927, file: !2460, line: 1437, type: !14033)
!15935 = !DILocation(line: 0, scope: !15927)
!15936 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !15937)
!15937 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !15938)
!15938 = distinct !DILocation(line: 1420, column: 2, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15940, file: !2460, line: 1420, column: 2)
!15940 = distinct !DILexicalBlock(scope: !15927, file: !2460, line: 1420, column: 2)
!15941 = !DILocation(line: 0, scope: !14766, inlinedAt: !15937)
!15942 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !15938)
!15943 = !DILocation(line: 1420, column: 2, scope: !15940)
!15944 = !DILocation(line: 1420, column: 2, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15939, file: !2460, line: 1420, column: 2)
!15946 = !DILocation(line: 1425, column: 12, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15927, file: !2460, line: 1425, column: 6)
!15948 = !DILocation(line: 1425, column: 6, scope: !15927)
!15949 = !DILocation(line: 1426, column: 3, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15947, file: !2460, line: 1425, column: 18)
!15951 = !DILocation(line: 1427, column: 3, scope: !15950)
!15952 = !DILocation(line: 1431, column: 24, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15927, file: !2460, line: 1431, column: 6)
!15954 = !DILocation(line: 1431, column: 6, scope: !15927)
!15955 = !DILocation(line: 1432, column: 35, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15953, file: !2460, line: 1431, column: 30)
!15957 = !DILocation(line: 1432, column: 27, scope: !15956)
!15958 = !DILocation(line: 1433, column: 2, scope: !15956)
!15959 = !DILocation(line: 1434, column: 27, scope: !15960)
!15960 = distinct !DILexicalBlock(scope: !15953, file: !2460, line: 1433, column: 9)
!15961 = !DILocation(line: 0, scope: !15953)
!15962 = !DILocation(line: 0, scope: !14041, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 1437, column: 25, scope: !15927)
!15964 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !15963)
!15966 = !DILocation(line: 0, scope: !14050, inlinedAt: !15965)
!15967 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15963)
!15968 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !15963)
!15969 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !15963)
!15970 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !15963)
!15971 = !DILocation(line: 1440, column: 20, scope: !15927)
!15972 = !DILocation(line: 1440, column: 18, scope: !15927)
!15973 = !DILocation(line: 1442, column: 2, scope: !15927)
!15974 = !DILocation(line: 1443, column: 23, scope: !15927)
!15975 = !DILocation(line: 1443, column: 2, scope: !15927)
!15976 = !DILocation(line: 1444, column: 29, scope: !15927)
!15977 = !DILocation(line: 1444, column: 2, scope: !15927)
!15978 = !DILocation(line: 0, scope: !14717, inlinedAt: !15979)
!15979 = distinct !DILocation(line: 1446, column: 8, scope: !15927)
!15980 = !DILocation(line: 0, scope: !14726, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 195, column: 2, scope: !14717, inlinedAt: !15979)
!15982 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !15981)
!15983 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !15981)
!15984 = !DILocation(line: 225, column: 2, scope: !14737, inlinedAt: !15981)
!15985 = !DILocation(line: 196, column: 9, scope: !14717, inlinedAt: !15979)
!15986 = !DILocation(line: 1448, column: 2, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15988, file: !2460, line: 1448, column: 2)
!15988 = distinct !DILexicalBlock(scope: !15927, file: !2460, line: 1448, column: 2)
!15989 = !DILocation(line: 1448, column: 2, scope: !15988)
!15990 = !DILocation(line: 1448, column: 2, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15987, file: !2460, line: 1448, column: 2)
!15992 = !DILocation(line: 1450, column: 10, scope: !15927)
!15993 = !DILocation(line: 1450, column: 45, scope: !15927)
!15994 = !DILocation(line: 1450, column: 43, scope: !15927)
!15995 = !DILocation(line: 1451, column: 6, scope: !15927)
!15996 = !DILocation(line: 1457, column: 1, scope: !15927)
!15997 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13447, file: !13447, line: 1103, type: !13448, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !15998)
!15998 = !{!15999}
!15999 = !DILocalVariable(name: "t", arg: 1, scope: !15997, file: !13447, line: 1103, type: !111)
!16000 = !DILocation(line: 0, scope: !15997)
!16001 = !DILocation(line: 0, scope: !14101, inlinedAt: !16002)
!16002 = distinct !DILocation(line: 1106, column: 9, scope: !15997)
!16003 = !DILocation(line: 139, column: 13, scope: !16004, inlinedAt: !16002)
!16004 = distinct !DILexicalBlock(scope: !16005, file: !13447, line: 138, column: 10)
!16005 = distinct !DILexicalBlock(scope: !16006, file: !13447, line: 136, column: 7)
!16006 = distinct !DILexicalBlock(scope: !14122, file: !13447, line: 134, column: 17)
!16007 = !DILocation(line: 1106, column: 2, scope: !15997)
!16008 = distinct !DISubprogram(name: "k_yield", scope: !3262, file: !3262, line: 140, type: !3116, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2050)
!16009 = !DILocation(line: 148, column: 2, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16008, file: !3262, line: 148, column: 2)
!16011 = !{i64 2154201079}
!16012 = !DILocation(line: 149, column: 2, scope: !16008)
!16013 = !DILocation(line: 150, column: 1, scope: !16008)
!16014 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2460, file: !2460, line: 1495, type: !16015, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16017)
!16015 = !DISubroutineType(types: !16016)
!16016 = !{!744, !109}
!16017 = !{!16018, !16019}
!16018 = !DILocalVariable(name: "us", arg: 1, scope: !16014, file: !2460, line: 1495, type: !109)
!16019 = !DILocalVariable(name: "ticks", scope: !16014, file: !2460, line: 1497, type: !744)
!16020 = !DILocation(line: 0, scope: !16014)
!16021 = !DILocation(line: 1501, column: 31, scope: !16014)
!16022 = !DILocation(line: 1501, column: 10, scope: !16014)
!16023 = !DILocation(line: 1502, column: 23, scope: !16014)
!16024 = !DILocation(line: 1502, column: 10, scope: !16014)
!16025 = !DILocation(line: 1506, column: 31, scope: !16014)
!16026 = !DILocation(line: 1506, column: 9, scope: !16014)
!16027 = !DILocation(line: 1506, column: 2, scope: !16014)
!16028 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13447, file: !13447, line: 571, type: !13448, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16029)
!16029 = !{!16030}
!16030 = !DILocalVariable(name: "t", arg: 1, scope: !16028, file: !13447, line: 571, type: !111)
!16031 = !DILocation(line: 0, scope: !16028)
!16032 = !DILocation(line: 0, scope: !14101, inlinedAt: !16033)
!16033 = distinct !DILocation(line: 574, column: 9, scope: !16028)
!16034 = !DILocation(line: 135, column: 5, scope: !16006, inlinedAt: !16033)
!16035 = !DILocation(line: 139, column: 13, scope: !16004, inlinedAt: !16033)
!16036 = !DILocation(line: 574, column: 2, scope: !16028)
!16037 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13447, file: !13447, line: 1187, type: !13448, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16038)
!16038 = !{!16039}
!16039 = !DILocalVariable(name: "t", arg: 1, scope: !16037, file: !13447, line: 1187, type: !111)
!16040 = !DILocation(line: 0, scope: !16037)
!16041 = !DILocation(line: 0, scope: !14101, inlinedAt: !16042)
!16042 = distinct !DILocation(line: 1190, column: 9, scope: !16037)
!16043 = !DILocation(line: 145, column: 13, scope: !16044, inlinedAt: !16042)
!16044 = distinct !DILexicalBlock(scope: !14119, file: !13447, line: 144, column: 10)
!16045 = !DILocation(line: 1190, column: 2, scope: !16037)
!16046 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2460, file: !2460, line: 1517, type: !15917, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16047)
!16047 = !{!16048}
!16048 = !DILocalVariable(name: "thread", arg: 1, scope: !16046, file: !2460, line: 1517, type: !15775)
!16049 = !DILocation(line: 0, scope: !16046)
!16050 = !DILocation(line: 1521, column: 6, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16046, file: !2460, line: 1521, column: 6)
!16052 = !DILocation(line: 1521, column: 6, scope: !16046)
!16053 = !DILocation(line: 1525, column: 6, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16046, file: !2460, line: 1525, column: 6)
!16055 = !DILocation(line: 1525, column: 37, scope: !16054)
!16056 = !DILocation(line: 1525, column: 6, scope: !16046)
!16057 = !DILocation(line: 1527, column: 20, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !16059, file: !2460, line: 1527, column: 7)
!16059 = distinct !DILexicalBlock(scope: !16054, file: !2460, line: 1525, column: 42)
!16060 = !DILocation(line: 1527, column: 33, scope: !16058)
!16061 = !DILocation(line: 1527, column: 7, scope: !16059)
!16062 = !DILocation(line: 1532, column: 2, scope: !16046)
!16063 = !DILocation(line: 1533, column: 2, scope: !16046)
!16064 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !16065)
!16065 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !16066)
!16066 = distinct !DILocation(line: 1537, column: 7, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !16046, file: !2460, line: 1537, column: 6)
!16068 = !DILocation(line: 0, scope: !14766, inlinedAt: !16065)
!16069 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !16066)
!16070 = !DILocation(line: 1537, column: 6, scope: !16046)
!16071 = !DILocation(line: 1538, column: 3, scope: !16072)
!16072 = distinct !DILexicalBlock(scope: !16067, file: !2460, line: 1537, column: 25)
!16073 = !DILocation(line: 1539, column: 2, scope: !16072)
!16074 = !DILocation(line: 1540, column: 1, scope: !16046)
!16075 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12828, file: !12828, line: 101, type: !14182, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16076)
!16076 = !{!16077}
!16077 = !DILocalVariable(name: "thread", arg: 1, scope: !16075, file: !12828, line: 101, type: !2352)
!16078 = !DILocation(line: 0, scope: !16075)
!16079 = !DILocation(line: 103, column: 23, scope: !16075)
!16080 = !DILocation(line: 103, column: 36, scope: !16075)
!16081 = !DILocation(line: 103, column: 55, scope: !16075)
!16082 = !DILocation(line: 103, column: 2, scope: !16075)
!16083 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2460, file: !2460, line: 1567, type: !16084, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16086)
!16084 = !DISubroutineType(types: !16085)
!16085 = !{!15775}
!16086 = !{!16087}
!16087 = !DILocalVariable(name: "ret", scope: !16083, file: !2460, line: 1577, type: !15775)
!16088 = !DILocation(line: 1577, column: 30, scope: !16083)
!16089 = !DILocation(line: 0, scope: !16083)
!16090 = !DILocation(line: 1582, column: 2, scope: !16083)
!16091 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2460, file: !2460, line: 1593, type: !7793, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !2050)
!16092 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !16093)
!16093 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !16094)
!16094 = distinct !DILocation(line: 1595, column: 10, scope: !16091)
!16095 = !DILocation(line: 0, scope: !14766, inlinedAt: !16093)
!16096 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !16094)
!16097 = !DILocation(line: 1595, column: 27, scope: !16091)
!16098 = !DILocation(line: 1595, column: 41, scope: !16091)
!16099 = !DILocation(line: 1595, column: 30, scope: !16091)
!16100 = !DILocation(line: 1595, column: 2, scope: !16091)
!16101 = distinct !DISubprogram(name: "z_thread_abort", scope: !2460, file: !2460, line: 1725, type: !13999, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16102)
!16102 = !{!16103, !16104}
!16103 = !DILocalVariable(name: "thread", arg: 1, scope: !16101, file: !2460, line: 1725, type: !2352)
!16104 = !DILocalVariable(name: "key", scope: !16101, file: !2460, line: 1727, type: !14033)
!16105 = !DILocation(line: 0, scope: !16101)
!16106 = !DILocation(line: 0, scope: !14041, inlinedAt: !16107)
!16107 = distinct !DILocation(line: 1727, column: 25, scope: !16101)
!16108 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !16109)
!16109 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !16107)
!16110 = !DILocation(line: 0, scope: !14050, inlinedAt: !16109)
!16111 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !16107)
!16112 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !16107)
!16113 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !16107)
!16114 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !16107)
!16115 = !DILocation(line: 1729, column: 20, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16101, file: !2460, line: 1729, column: 6)
!16117 = !DILocation(line: 1729, column: 33, scope: !16116)
!16118 = !DILocation(line: 1729, column: 48, scope: !16116)
!16119 = !DILocation(line: 1729, column: 6, scope: !16101)
!16120 = !DILocation(line: 0, scope: !14075, inlinedAt: !16121)
!16121 = distinct !DILocation(line: 1730, column: 3, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16116, file: !2460, line: 1729, column: 54)
!16123 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !16121)
!16124 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !16121)
!16125 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !16121)
!16126 = !DILocation(line: 0, scope: !14089, inlinedAt: !16127)
!16127 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !16121)
!16128 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !16127)
!16129 = !DILocation(line: 1731, column: 3, scope: !16130)
!16130 = distinct !DILexicalBlock(scope: !16131, file: !2460, line: 1731, column: 3)
!16131 = distinct !DILexicalBlock(scope: !16132, file: !2460, line: 1731, column: 3)
!16132 = distinct !DILexicalBlock(scope: !16122, file: !2460, line: 1731, column: 3)
!16133 = !DILocation(line: 1736, column: 20, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16101, file: !2460, line: 1736, column: 6)
!16135 = !DILocation(line: 1736, column: 33, scope: !16134)
!16136 = !DILocation(line: 1736, column: 49, scope: !16134)
!16137 = !DILocation(line: 1736, column: 6, scope: !16101)
!16138 = !DILocation(line: 0, scope: !14075, inlinedAt: !16139)
!16139 = distinct !DILocation(line: 1737, column: 3, scope: !16140)
!16140 = distinct !DILexicalBlock(scope: !16134, file: !2460, line: 1736, column: 56)
!16141 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !16139)
!16142 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !16139)
!16143 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !16139)
!16144 = !DILocation(line: 0, scope: !14089, inlinedAt: !16145)
!16145 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !16139)
!16146 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !16145)
!16147 = !DILocation(line: 1738, column: 3, scope: !16140)
!16148 = !DILocation(line: 1775, column: 2, scope: !16101)
!16149 = !DILocation(line: 1776, column: 16, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16101, file: !2460, line: 1776, column: 6)
!16151 = !DILocation(line: 1776, column: 13, scope: !16150)
!16152 = !DILocation(line: 1776, column: 25, scope: !16150)
!16153 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !16154)
!16154 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !16155)
!16155 = distinct !DILocation(line: 1776, column: 29, scope: !16150)
!16156 = !DILocation(line: 0, scope: !14766, inlinedAt: !16154)
!16157 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !16155)
!16158 = !DILocation(line: 1776, column: 6, scope: !16101)
!16159 = !DILocation(line: 0, scope: !14717, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 1777, column: 3, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16150, file: !2460, line: 1776, column: 47)
!16162 = !DILocation(line: 0, scope: !14726, inlinedAt: !16163)
!16163 = distinct !DILocation(line: 195, column: 2, scope: !14717, inlinedAt: !16160)
!16164 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !16163)
!16165 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !16163)
!16166 = !DILocation(line: 225, column: 2, scope: !14737, inlinedAt: !16163)
!16167 = !DILocation(line: 196, column: 9, scope: !14717, inlinedAt: !16160)
!16168 = !DILocation(line: 1778, column: 3, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16170, file: !2460, line: 1778, column: 3)
!16170 = distinct !DILexicalBlock(scope: !16171, file: !2460, line: 1778, column: 3)
!16171 = distinct !DILexicalBlock(scope: !16161, file: !2460, line: 1778, column: 3)
!16172 = !DILocation(line: 0, scope: !14075, inlinedAt: !16173)
!16173 = distinct !DILocation(line: 1780, column: 2, scope: !16101)
!16174 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !16173)
!16175 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !16173)
!16176 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !16173)
!16177 = !DILocation(line: 0, scope: !14089, inlinedAt: !16178)
!16178 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !16173)
!16179 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !16178)
!16180 = !DILocation(line: 1781, column: 1, scope: !16101)
!16181 = distinct !DISubprogram(name: "end_thread", scope: !2460, file: !2460, line: 1690, type: !13999, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16182)
!16182 = !{!16183}
!16183 = !DILocalVariable(name: "thread", arg: 1, scope: !16181, file: !2460, line: 1690, type: !2352)
!16184 = !DILocation(line: 0, scope: !16181)
!16185 = !DILocation(line: 1695, column: 20, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16181, file: !2460, line: 1695, column: 6)
!16187 = !DILocation(line: 1695, column: 33, scope: !16186)
!16188 = !DILocation(line: 1695, column: 49, scope: !16186)
!16189 = !DILocation(line: 1695, column: 6, scope: !16181)
!16190 = !DILocation(line: 1697, column: 29, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16186, file: !2460, line: 1695, column: 56)
!16192 = !DILocation(line: 1698, column: 7, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !16191, file: !2460, line: 1698, column: 7)
!16194 = !DILocation(line: 1698, column: 7, scope: !16191)
!16195 = !DILocation(line: 0, scope: !14233, inlinedAt: !16196)
!16196 = distinct !DILocation(line: 1699, column: 4, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !16193, file: !2460, line: 1698, column: 35)
!16198 = !DILocation(line: 266, column: 28, scope: !14233, inlinedAt: !16196)
!16199 = !DILocation(line: 0, scope: !14241, inlinedAt: !16200)
!16200 = distinct !DILocation(line: 268, column: 3, scope: !14245, inlinedAt: !16196)
!16201 = !DILocation(line: 234, column: 2, scope: !14241, inlinedAt: !16200)
!16202 = !DILocation(line: 1700, column: 3, scope: !16197)
!16203 = !DILocation(line: 1701, column: 20, scope: !16204)
!16204 = distinct !DILexicalBlock(scope: !16191, file: !2460, line: 1701, column: 7)
!16205 = !DILocation(line: 1701, column: 30, scope: !16204)
!16206 = !DILocation(line: 1701, column: 7, scope: !16191)
!16207 = !DILocation(line: 1702, column: 4, scope: !16208)
!16208 = distinct !DILexicalBlock(scope: !16204, file: !2460, line: 1701, column: 39)
!16209 = !DILocation(line: 1703, column: 3, scope: !16208)
!16210 = !DILocation(line: 1704, column: 9, scope: !16191)
!16211 = !DILocation(line: 1705, column: 23, scope: !16191)
!16212 = !DILocation(line: 1705, column: 3, scope: !16191)
!16213 = !DILocation(line: 1706, column: 3, scope: !16191)
!16214 = !DILocation(line: 1722, column: 2, scope: !16191)
!16215 = !DILocation(line: 1723, column: 1, scope: !16181)
!16216 = distinct !DISubprogram(name: "unpend_all", scope: !2460, file: !2460, line: 1674, type: !16217, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16219)
!16217 = !DISubroutineType(types: !16218)
!16218 = !{null, !2383}
!16219 = !{!16220, !16221}
!16220 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16216, file: !2460, line: 1674, type: !2383)
!16221 = !DILocalVariable(name: "thread", scope: !16216, file: !2460, line: 1676, type: !2352)
!16222 = !DILocation(line: 0, scope: !16216)
!16223 = !DILocation(line: 1678, column: 19, scope: !16216)
!16224 = !DILocation(line: 1678, column: 41, scope: !16216)
!16225 = !DILocation(line: 1678, column: 2, scope: !16216)
!16226 = !DILocation(line: 1679, column: 3, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16216, file: !2460, line: 1678, column: 50)
!16228 = !DILocation(line: 1680, column: 9, scope: !16227)
!16229 = !DILocalVariable(name: "thread", arg: 1, scope: !16230, file: !12848, line: 65, type: !2352)
!16230 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12848, file: !12848, line: 65, type: !16231, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16233)
!16231 = !DISubroutineType(types: !16232)
!16232 = !{null, !2352, !32}
!16233 = !{!16229, !16234}
!16234 = !DILocalVariable(name: "value", arg: 2, scope: !16230, file: !12848, line: 65, type: !32)
!16235 = !DILocation(line: 0, scope: !16230, inlinedAt: !16236)
!16236 = distinct !DILocation(line: 1681, column: 3, scope: !16227)
!16237 = !DILocation(line: 67, column: 15, scope: !16230, inlinedAt: !16236)
!16238 = !DILocation(line: 67, column: 33, scope: !16230, inlinedAt: !16236)
!16239 = !DILocation(line: 1682, column: 3, scope: !16227)
!16240 = distinct !{!16240, !16225, !16241}
!16241 = !DILocation(line: 1683, column: 2, scope: !16216)
!16242 = !DILocation(line: 1684, column: 1, scope: !16216)
!16243 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2460, file: !2460, line: 1794, type: !16244, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16246)
!16244 = !DISubroutineType(types: !16245)
!16245 = !{!109, !2352, !14927}
!16246 = !{!16247, !16248, !16249, !16250}
!16247 = !DILocalVariable(name: "thread", arg: 1, scope: !16243, file: !2460, line: 1794, type: !2352)
!16248 = !DILocalVariable(name: "timeout", arg: 2, scope: !16243, file: !2460, line: 1794, type: !14927)
!16249 = !DILocalVariable(name: "key", scope: !16243, file: !2460, line: 1796, type: !14033)
!16250 = !DILocalVariable(name: "ret", scope: !16243, file: !2460, line: 1797, type: !109)
!16251 = !DILocation(line: 0, scope: !16243)
!16252 = !DILocation(line: 0, scope: !14041, inlinedAt: !16253)
!16253 = distinct !DILocation(line: 1796, column: 25, scope: !16243)
!16254 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !16253)
!16256 = !DILocation(line: 0, scope: !14050, inlinedAt: !16255)
!16257 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !16253)
!16258 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !16253)
!16259 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !16253)
!16260 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !16253)
!16261 = !DILocation(line: 1801, column: 20, scope: !16262)
!16262 = distinct !DILexicalBlock(scope: !16243, file: !2460, line: 1801, column: 6)
!16263 = !DILocation(line: 1801, column: 33, scope: !16262)
!16264 = !DILocation(line: 1801, column: 49, scope: !16262)
!16265 = !DILocation(line: 1801, column: 6, scope: !16243)
!16266 = !DILocation(line: 1803, column: 13, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16262, file: !2460, line: 1803, column: 13)
!16268 = !DILocation(line: 1803, column: 13, scope: !16262)
!16269 = !DILocation(line: 1805, column: 24, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16267, file: !2460, line: 1805, column: 13)
!16271 = !DILocation(line: 1805, column: 21, scope: !16270)
!16272 = !DILocation(line: 1805, column: 34, scope: !16270)
!16273 = !DILocation(line: 1806, column: 20, scope: !16270)
!16274 = !DILocation(line: 1806, column: 44, scope: !16270)
!16275 = !DILocation(line: 1806, column: 30, scope: !16270)
!16276 = !DILocation(line: 1805, column: 13, scope: !16267)
!16277 = !DILocation(line: 1031, column: 3, scope: !14766, inlinedAt: !16278)
!16278 = distinct !DILocation(line: 48, column: 10, scope: !14770, inlinedAt: !16279)
!16279 = distinct !DILocation(line: 1809, column: 3, scope: !16280)
!16280 = distinct !DILexicalBlock(scope: !16281, file: !2460, line: 1809, column: 3)
!16281 = distinct !DILexicalBlock(scope: !16282, file: !2460, line: 1809, column: 3)
!16282 = distinct !DILexicalBlock(scope: !16270, file: !2460, line: 1808, column: 9)
!16283 = !DILocation(line: 0, scope: !14766, inlinedAt: !16278)
!16284 = !DILocation(line: 48, column: 9, scope: !14770, inlinedAt: !16279)
!16285 = !DILocation(line: 1809, column: 3, scope: !16281)
!16286 = !DILocation(line: 1809, column: 3, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16280, file: !2460, line: 1809, column: 3)
!16288 = !DILocation(line: 1810, column: 23, scope: !16282)
!16289 = !DILocation(line: 1810, column: 42, scope: !16282)
!16290 = !DILocation(line: 1810, column: 3, scope: !16282)
!16291 = !DILocation(line: 1811, column: 22, scope: !16282)
!16292 = !DILocation(line: 1811, column: 3, scope: !16282)
!16293 = !DILocation(line: 0, scope: !14717, inlinedAt: !16294)
!16294 = distinct !DILocation(line: 1814, column: 9, scope: !16282)
!16295 = !DILocation(line: 0, scope: !14726, inlinedAt: !16296)
!16296 = distinct !DILocation(line: 195, column: 2, scope: !14717, inlinedAt: !16294)
!16297 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !16296)
!16298 = !DILocation(line: 225, column: 2, scope: !14734, inlinedAt: !16296)
!16299 = !DILocation(line: 225, column: 2, scope: !14737, inlinedAt: !16296)
!16300 = !DILocation(line: 196, column: 9, scope: !14717, inlinedAt: !16294)
!16301 = !DILocation(line: 1817, column: 3, scope: !16282)
!16302 = !DILocation(line: 0, scope: !16262)
!16303 = !DILocation(line: 0, scope: !14075, inlinedAt: !16304)
!16304 = distinct !DILocation(line: 1822, column: 2, scope: !16243)
!16305 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !16304)
!16306 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !16304)
!16307 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !16304)
!16308 = !DILocation(line: 0, scope: !14089, inlinedAt: !16309)
!16309 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !16304)
!16310 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !16309)
!16311 = !DILocation(line: 1823, column: 2, scope: !16243)
!16312 = !DILocation(line: 1824, column: 1, scope: !16243)
!16313 = distinct !DISubprogram(name: "z_sched_wake", scope: !2460, file: !2460, line: 1882, type: !16314, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16316)
!16314 = !DISubroutineType(types: !16315)
!16315 = !{!347, !2383, !109, !107}
!16316 = !{!16317, !16318, !16319, !16320, !16321, !16322, !16324}
!16317 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16313, file: !2460, line: 1882, type: !2383)
!16318 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16313, file: !2460, line: 1882, type: !109)
!16319 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16313, file: !2460, line: 1882, type: !107)
!16320 = !DILocalVariable(name: "thread", scope: !16313, file: !2460, line: 1884, type: !2352)
!16321 = !DILocalVariable(name: "ret", scope: !16313, file: !2460, line: 1885, type: !347)
!16322 = !DILocalVariable(name: "__i", scope: !16323, file: !2460, line: 1887, type: !14033)
!16323 = distinct !DILexicalBlock(scope: !16313, file: !2460, line: 1887, column: 2)
!16324 = !DILocalVariable(name: "__key", scope: !16323, file: !2460, line: 1887, type: !14033)
!16325 = !DILocation(line: 0, scope: !16313)
!16326 = !DILocation(line: 0, scope: !16323)
!16327 = !DILocation(line: 0, scope: !14041, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 1887, column: 2, scope: !16323)
!16329 = !DILocation(line: 55, column: 2, scope: !14050, inlinedAt: !16330)
!16330 = distinct !DILocation(line: 145, column: 10, scope: !14041, inlinedAt: !16328)
!16331 = !DILocation(line: 0, scope: !14050, inlinedAt: !16330)
!16332 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !16328)
!16333 = !DILocation(line: 148, column: 2, scope: !14059, inlinedAt: !16328)
!16334 = !DILocation(line: 148, column: 2, scope: !14062, inlinedAt: !16328)
!16335 = !DILocation(line: 160, column: 2, scope: !14041, inlinedAt: !16328)
!16336 = !DILocation(line: 1888, column: 12, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16338, file: !2460, line: 1887, column: 26)
!16338 = distinct !DILexicalBlock(scope: !16323, file: !2460, line: 1887, column: 2)
!16339 = !DILocation(line: 1890, column: 14, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16337, file: !2460, line: 1890, column: 7)
!16341 = !DILocation(line: 1890, column: 7, scope: !16337)
!16342 = !DILocalVariable(name: "thread", arg: 1, scope: !16343, file: !16344, line: 134, type: !2352)
!16343 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16344, file: !16344, line: 134, type: !16345, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16347)
!16344 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16345 = !DISubroutineType(types: !16346)
!16346 = !{null, !2352, !32, !107}
!16347 = !{!16342, !16348, !16349}
!16348 = !DILocalVariable(name: "value", arg: 2, scope: !16343, file: !16344, line: 135, type: !32)
!16349 = !DILocalVariable(name: "data", arg: 3, scope: !16343, file: !16344, line: 136, type: !107)
!16350 = !DILocation(line: 0, scope: !16343, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 1891, column: 4, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16340, file: !2460, line: 1890, column: 23)
!16353 = !DILocation(line: 0, scope: !16230, inlinedAt: !16354)
!16354 = distinct !DILocation(line: 138, column: 2, scope: !16343, inlinedAt: !16351)
!16355 = !DILocation(line: 67, column: 15, scope: !16230, inlinedAt: !16354)
!16356 = !DILocation(line: 67, column: 33, scope: !16230, inlinedAt: !16354)
!16357 = !DILocation(line: 139, column: 15, scope: !16343, inlinedAt: !16351)
!16358 = !DILocation(line: 139, column: 25, scope: !16343, inlinedAt: !16351)
!16359 = !DILocation(line: 1894, column: 4, scope: !16352)
!16360 = !DILocation(line: 1895, column: 10, scope: !16352)
!16361 = !DILocation(line: 1896, column: 4, scope: !16352)
!16362 = !DILocation(line: 1898, column: 3, scope: !16352)
!16363 = !DILocation(line: 0, scope: !14075, inlinedAt: !16364)
!16364 = distinct !DILocation(line: 1887, column: 2, scope: !16338)
!16365 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !16364)
!16366 = !DILocation(line: 194, column: 2, scope: !14084, inlinedAt: !16364)
!16367 = !DILocation(line: 194, column: 2, scope: !14087, inlinedAt: !16364)
!16368 = !DILocation(line: 0, scope: !14089, inlinedAt: !16369)
!16369 = distinct !DILocation(line: 215, column: 2, scope: !14075, inlinedAt: !16364)
!16370 = !DILocation(line: 95, column: 2, scope: !14089, inlinedAt: !16369)
!16371 = !DILocation(line: 1901, column: 2, scope: !16313)
!16372 = distinct !DISubprogram(name: "z_sched_wait", scope: !2460, file: !2460, line: 1904, type: !16373, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !16376)
!16373 = !DISubroutineType(types: !16374)
!16374 = !{!109, !14044, !14033, !2383, !14927, !16375}
!16375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!16376 = !{!16377, !16378, !16379, !16380, !16381, !16382}
!16377 = !DILocalVariable(name: "lock", arg: 1, scope: !16372, file: !2460, line: 1904, type: !14044)
!16378 = !DILocalVariable(name: "key", arg: 2, scope: !16372, file: !2460, line: 1904, type: !14033)
!16379 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16372, file: !2460, line: 1905, type: !2383)
!16380 = !DILocalVariable(name: "timeout", arg: 4, scope: !16372, file: !2460, line: 1905, type: !14927)
!16381 = !DILocalVariable(name: "data", arg: 5, scope: !16372, file: !2460, line: 1905, type: !16375)
!16382 = !DILocalVariable(name: "ret", scope: !16372, file: !2460, line: 1907, type: !109)
!16383 = !DILocation(line: 0, scope: !16372)
!16384 = !DILocation(line: 1907, column: 12, scope: !16372)
!16385 = !DILocation(line: 1909, column: 11, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16372, file: !2460, line: 1909, column: 6)
!16387 = !DILocation(line: 1909, column: 6, scope: !16372)
!16388 = !DILocation(line: 1910, column: 11, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16386, file: !2460, line: 1909, column: 20)
!16390 = !DILocation(line: 1910, column: 26, scope: !16389)
!16391 = !DILocation(line: 1910, column: 9, scope: !16389)
!16392 = !DILocation(line: 1911, column: 2, scope: !16389)
!16393 = !DILocation(line: 1912, column: 2, scope: !16372)
!16394 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2486, file: !2486, line: 16, type: !16395, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16406)
!16395 = !DISubroutineType(types: !16396)
!16396 = !{!109, !16397}
!16397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16398, size: 32)
!16398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !16399)
!16399 = !{!16400}
!16400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16398, file: !118, line: 2829, baseType: !16401, size: 64)
!16401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !16402)
!16402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !16403)
!16403 = !{!16404}
!16404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16402, file: !122, line: 232, baseType: !16405, size: 64)
!16405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2472)
!16406 = !{!16407}
!16407 = !DILocalVariable(name: "condvar", arg: 1, scope: !16394, file: !2486, line: 16, type: !16397)
!16408 = !DILocation(line: 0, scope: !16394)
!16409 = !DILocation(line: 18, column: 25, scope: !16394)
!16410 = !DILocation(line: 18, column: 2, scope: !16394)
!16411 = !DILocation(line: 23, column: 2, scope: !16394)
!16412 = distinct !DISubprogram(name: "z_waitq_init", scope: !13189, file: !13189, line: 47, type: !16413, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16416)
!16413 = !DISubroutineType(types: !16414)
!16414 = !{null, !16415}
!16415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16401, size: 32)
!16416 = !{!16417}
!16417 = !DILocalVariable(name: "w", arg: 1, scope: !16412, file: !13189, line: 47, type: !16415)
!16418 = !DILocation(line: 0, scope: !16412)
!16419 = !DILocation(line: 49, column: 21, scope: !16412)
!16420 = !DILocation(line: 49, column: 2, scope: !16412)
!16421 = !DILocation(line: 50, column: 1, scope: !16412)
!16422 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16423, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16426)
!16423 = !DISubroutineType(types: !16424)
!16424 = !{null, !16425}
!16425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16405, size: 32)
!16426 = !{!16427}
!16427 = !DILocalVariable(name: "list", arg: 1, scope: !16422, file: !127, line: 197, type: !16425)
!16428 = !DILocation(line: 0, scope: !16422)
!16429 = !DILocation(line: 199, column: 8, scope: !16422)
!16430 = !DILocation(line: 199, column: 13, scope: !16422)
!16431 = !DILocation(line: 200, column: 8, scope: !16422)
!16432 = !DILocation(line: 200, column: 13, scope: !16422)
!16433 = !DILocation(line: 201, column: 1, scope: !16422)
!16434 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2486, file: !2486, line: 35, type: !16395, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16435)
!16435 = !{!16436, !16437, !16442}
!16436 = !DILocalVariable(name: "condvar", arg: 1, scope: !16434, file: !2486, line: 35, type: !16397)
!16437 = !DILocalVariable(name: "key", scope: !16434, file: !2486, line: 37, type: !16438)
!16438 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !16439)
!16439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !16440)
!16440 = !{!16441}
!16441 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16439, file: !253, line: 33, baseType: !109, size: 32)
!16442 = !DILocalVariable(name: "thread", scope: !16434, file: !2486, line: 41, type: !16443)
!16443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16444, size: 32)
!16444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !16445)
!16445 = !{!16446, !16484, !16496, !16497, !16498, !16499, !16500, !16506, !16518}
!16446 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16444, file: !158, line: 247, baseType: !16447, size: 384)
!16447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !16448)
!16448 = !{!16449, !16459, !16460, !16461, !16462, !16471, !16472, !16473}
!16449 = !DIDerivedType(tag: DW_TAG_member, scope: !16447, file: !158, line: 60, baseType: !16450, size: 64)
!16450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16447, file: !158, line: 60, size: 64, elements: !16451)
!16451 = !{!16452, !16453}
!16452 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16450, file: !158, line: 61, baseType: !2471, size: 64)
!16453 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16450, file: !158, line: 62, baseType: !16454, size: 64)
!16454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !16455)
!16455 = !{!16456}
!16456 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16454, file: !170, line: 50, baseType: !16457, size: 64)
!16457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16458, size: 64, elements: !175)
!16458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16454, size: 32)
!16459 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16447, file: !158, line: 68, baseType: !16415, size: 32, offset: 64)
!16460 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16447, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!16461 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16447, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!16462 = !DIDerivedType(tag: DW_TAG_member, scope: !16447, file: !158, line: 90, baseType: !16463, size: 16, offset: 112)
!16463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16447, file: !158, line: 90, size: 16, elements: !16464)
!16464 = !{!16465, !16470}
!16465 = !DIDerivedType(tag: DW_TAG_member, scope: !16463, file: !158, line: 91, baseType: !16466, size: 16)
!16466 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16463, file: !158, line: 91, size: 16, elements: !16467)
!16467 = !{!16468, !16469}
!16468 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16466, file: !158, line: 96, baseType: !190, size: 8)
!16469 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16466, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!16470 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16463, file: !158, line: 100, baseType: !194, size: 16)
!16471 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16447, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!16472 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16447, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!16473 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16447, file: !158, line: 131, baseType: !16474, size: 192, offset: 192)
!16474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !16475)
!16475 = !{!16476, !16477, !16483}
!16476 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16474, file: !122, line: 245, baseType: !2471, size: 64)
!16477 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16474, file: !122, line: 246, baseType: !16478, size: 32, offset: 64)
!16478 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !16479)
!16479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16480, size: 32)
!16480 = !DISubroutineType(types: !16481)
!16481 = !{null, !16482}
!16482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16474, size: 32)
!16483 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16474, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!16484 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16444, file: !158, line: 250, baseType: !16485, size: 288, offset: 384)
!16485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !16486)
!16486 = !{!16487, !16488, !16489, !16490, !16491, !16492, !16493, !16494, !16495}
!16487 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16485, file: !211, line: 26, baseType: !110, size: 32)
!16488 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16485, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!16489 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16485, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!16490 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16485, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!16491 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16485, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!16492 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16485, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!16493 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16485, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!16494 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16485, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!16495 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16485, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!16496 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16444, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!16497 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16444, file: !158, line: 256, baseType: !16401, size: 64, offset: 704)
!16498 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16444, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!16499 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16444, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!16500 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16444, file: !158, line: 300, baseType: !16501, size: 96, offset: 1056)
!16501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !16502)
!16502 = !{!16503, !16504, !16505}
!16503 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16501, file: !158, line: 153, baseType: !22, size: 32)
!16504 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16501, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!16505 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16501, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!16506 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16444, file: !158, line: 325, baseType: !16507, size: 32, offset: 1152)
!16507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16508, size: 32)
!16508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !16509)
!16509 = !{!16510, !16516, !16517}
!16510 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16508, file: !118, line: 5074, baseType: !16511, size: 96)
!16511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !16512)
!16512 = !{!16513, !16514, !16515}
!16513 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16511, file: !243, line: 57, baseType: !246, size: 32)
!16514 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16511, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!16515 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16511, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!16516 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16508, file: !118, line: 5075, baseType: !16401, size: 64, offset: 96)
!16517 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16508, file: !118, line: 5076, baseType: !2487, size: 32, offset: 160)
!16518 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16444, file: !158, line: 343, baseType: !16519, size: 64, offset: 1184)
!16519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !16520)
!16520 = !{!16521, !16522}
!16521 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16519, file: !211, line: 63, baseType: !110, size: 32)
!16522 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16519, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!16523 = !DILocation(line: 0, scope: !16434)
!16524 = !DILocalVariable(name: "l", arg: 1, scope: !16525, file: !253, line: 136, type: !16528)
!16525 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !16526, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16529)
!16526 = !DISubroutineType(types: !16527)
!16527 = !{!16438, !16528}
!16528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!16529 = !{!16524, !16530}
!16530 = !DILocalVariable(name: "k", scope: !16525, file: !253, line: 139, type: !16438)
!16531 = !DILocation(line: 0, scope: !16525, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 37, column: 25, scope: !16434)
!16533 = !DILocation(line: 55, column: 2, scope: !16534, inlinedAt: !16538)
!16534 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6116, file: !6116, line: 42, type: !6117, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16535)
!16535 = !{!16536, !16537}
!16536 = !DILocalVariable(name: "key", scope: !16534, file: !6116, line: 44, type: !32)
!16537 = !DILocalVariable(name: "tmp", scope: !16534, file: !6116, line: 53, type: !32)
!16538 = distinct !DILocation(line: 145, column: 10, scope: !16525, inlinedAt: !16532)
!16539 = !{i64 2040898}
!16540 = !DILocation(line: 0, scope: !16534, inlinedAt: !16538)
!16541 = !DILocation(line: 148, column: 2, scope: !16542, inlinedAt: !16532)
!16542 = distinct !DILexicalBlock(scope: !16543, file: !253, line: 148, column: 2)
!16543 = distinct !DILexicalBlock(scope: !16525, file: !253, line: 148, column: 2)
!16544 = !DILocation(line: 148, column: 2, scope: !16543, inlinedAt: !16532)
!16545 = !DILocation(line: 148, column: 2, scope: !16546, inlinedAt: !16532)
!16546 = distinct !DILexicalBlock(scope: !16542, file: !253, line: 148, column: 2)
!16547 = !DILocation(line: 160, column: 2, scope: !16525, inlinedAt: !16532)
!16548 = !DILocation(line: 41, column: 60, scope: !16434)
!16549 = !DILocation(line: 41, column: 28, scope: !16434)
!16550 = !DILocation(line: 43, column: 13, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16434, file: !2486, line: 43, column: 6)
!16552 = !DILocation(line: 43, column: 6, scope: !16434)
!16553 = !DILocalVariable(name: "thread", arg: 1, scope: !16554, file: !12848, line: 65, type: !16443)
!16554 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12848, file: !12848, line: 65, type: !16555, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16557)
!16555 = !DISubroutineType(types: !16556)
!16556 = !{null, !16443, !32}
!16557 = !{!16553, !16558}
!16558 = !DILocalVariable(name: "value", arg: 2, scope: !16554, file: !12848, line: 65, type: !32)
!16559 = !DILocation(line: 0, scope: !16554, inlinedAt: !16560)
!16560 = distinct !DILocation(line: 46, column: 3, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16551, file: !2486, line: 43, column: 22)
!16562 = !DILocation(line: 67, column: 15, scope: !16554, inlinedAt: !16560)
!16563 = !DILocation(line: 67, column: 33, scope: !16554, inlinedAt: !16560)
!16564 = !DILocation(line: 47, column: 3, scope: !16561)
!16565 = !DILocation(line: 48, column: 3, scope: !16561)
!16566 = !DILocation(line: 49, column: 2, scope: !16561)
!16567 = !DILocalVariable(name: "key", arg: 2, scope: !16568, file: !253, line: 190, type: !16438)
!16568 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !16569, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16571)
!16569 = !DISubroutineType(types: !16570)
!16570 = !{null, !16528, !16438}
!16571 = !{!16572, !16567}
!16572 = !DILocalVariable(name: "l", arg: 1, scope: !16568, file: !253, line: 189, type: !16528)
!16573 = !DILocation(line: 0, scope: !16568, inlinedAt: !16574)
!16574 = distinct !DILocation(line: 50, column: 3, scope: !16575)
!16575 = distinct !DILexicalBlock(scope: !16551, file: !2486, line: 49, column: 9)
!16576 = !DILocation(line: 194, column: 2, scope: !16577, inlinedAt: !16574)
!16577 = distinct !DILexicalBlock(scope: !16578, file: !253, line: 194, column: 2)
!16578 = distinct !DILexicalBlock(scope: !16568, file: !253, line: 194, column: 2)
!16579 = !DILocation(line: 194, column: 2, scope: !16578, inlinedAt: !16574)
!16580 = !DILocation(line: 194, column: 2, scope: !16581, inlinedAt: !16574)
!16581 = distinct !DILexicalBlock(scope: !16577, file: !253, line: 194, column: 2)
!16582 = !DILocalVariable(name: "key", arg: 1, scope: !16583, file: !6116, line: 84, type: !32)
!16583 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6116, file: !6116, line: 84, type: !6127, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16584)
!16584 = !{!16582}
!16585 = !DILocation(line: 0, scope: !16583, inlinedAt: !16586)
!16586 = distinct !DILocation(line: 215, column: 2, scope: !16568, inlinedAt: !16574)
!16587 = !DILocation(line: 95, column: 2, scope: !16583, inlinedAt: !16586)
!16588 = !{i64 2041715}
!16589 = !DILocation(line: 55, column: 2, scope: !16434)
!16590 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2486, file: !2486, line: 67, type: !16395, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16591)
!16591 = !{!16592, !16593, !16594, !16595}
!16592 = !DILocalVariable(name: "condvar", arg: 1, scope: !16590, file: !2486, line: 67, type: !16397)
!16593 = !DILocalVariable(name: "pending_thread", scope: !16590, file: !2486, line: 69, type: !16443)
!16594 = !DILocalVariable(name: "key", scope: !16590, file: !2486, line: 70, type: !16438)
!16595 = !DILocalVariable(name: "woken", scope: !16590, file: !2486, line: 71, type: !109)
!16596 = !DILocation(line: 0, scope: !16590)
!16597 = !DILocation(line: 0, scope: !16525, inlinedAt: !16598)
!16598 = distinct !DILocation(line: 73, column: 8, scope: !16590)
!16599 = !DILocation(line: 55, column: 2, scope: !16534, inlinedAt: !16600)
!16600 = distinct !DILocation(line: 145, column: 10, scope: !16525, inlinedAt: !16598)
!16601 = !DILocation(line: 0, scope: !16534, inlinedAt: !16600)
!16602 = !DILocation(line: 148, column: 2, scope: !16542, inlinedAt: !16598)
!16603 = !DILocation(line: 148, column: 2, scope: !16543, inlinedAt: !16598)
!16604 = !DILocation(line: 148, column: 2, scope: !16546, inlinedAt: !16598)
!16605 = !DILocation(line: 160, column: 2, scope: !16525, inlinedAt: !16598)
!16606 = !DILocation(line: 78, column: 27, scope: !16590)
!16607 = !DILocation(line: 78, column: 68, scope: !16590)
!16608 = !DILocation(line: 78, column: 2, scope: !16590)
!16609 = !DILocation(line: 80, column: 8, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16590, file: !2486, line: 79, column: 15)
!16611 = !DILocation(line: 0, scope: !16554, inlinedAt: !16612)
!16612 = distinct !DILocation(line: 81, column: 3, scope: !16610)
!16613 = !DILocation(line: 67, column: 15, scope: !16554, inlinedAt: !16612)
!16614 = !DILocation(line: 67, column: 33, scope: !16554, inlinedAt: !16612)
!16615 = !DILocation(line: 82, column: 3, scope: !16610)
!16616 = distinct !{!16616, !16608, !16617}
!16617 = !DILocation(line: 83, column: 2, scope: !16590)
!16618 = !DILocation(line: 87, column: 2, scope: !16590)
!16619 = !DILocation(line: 89, column: 2, scope: !16590)
!16620 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2486, file: !2486, line: 100, type: !16621, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16634)
!16621 = !DISubroutineType(types: !16622)
!16622 = !{!109, !16397, !16623, !16630}
!16623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16624, size: 32)
!16624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !16625)
!16625 = !{!16626, !16627, !16628, !16629}
!16626 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16624, file: !118, line: 2722, baseType: !16401, size: 64)
!16627 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16624, file: !118, line: 2724, baseType: !16443, size: 32, offset: 64)
!16628 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16624, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!16629 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16624, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!16630 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16631)
!16631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16632)
!16632 = !{!16633}
!16633 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16631, file: !104, line: 66, baseType: !103, size: 64)
!16634 = !{!16635, !16636, !16637, !16638, !16639}
!16635 = !DILocalVariable(name: "condvar", arg: 1, scope: !16620, file: !2486, line: 100, type: !16397)
!16636 = !DILocalVariable(name: "mutex", arg: 2, scope: !16620, file: !2486, line: 100, type: !16623)
!16637 = !DILocalVariable(name: "timeout", arg: 3, scope: !16620, file: !2486, line: 101, type: !16630)
!16638 = !DILocalVariable(name: "key", scope: !16620, file: !2486, line: 103, type: !16438)
!16639 = !DILocalVariable(name: "ret", scope: !16620, file: !2486, line: 104, type: !109)
!16640 = !DILocation(line: 0, scope: !16620)
!16641 = !DILocation(line: 0, scope: !16525, inlinedAt: !16642)
!16642 = distinct !DILocation(line: 108, column: 8, scope: !16620)
!16643 = !DILocation(line: 55, column: 2, scope: !16534, inlinedAt: !16644)
!16644 = distinct !DILocation(line: 145, column: 10, scope: !16525, inlinedAt: !16642)
!16645 = !DILocation(line: 0, scope: !16534, inlinedAt: !16644)
!16646 = !DILocation(line: 148, column: 2, scope: !16542, inlinedAt: !16642)
!16647 = !DILocation(line: 148, column: 2, scope: !16543, inlinedAt: !16642)
!16648 = !DILocation(line: 148, column: 2, scope: !16546, inlinedAt: !16642)
!16649 = !DILocation(line: 160, column: 2, scope: !16525, inlinedAt: !16642)
!16650 = !DILocation(line: 109, column: 2, scope: !16620)
!16651 = !DILocation(line: 111, column: 42, scope: !16620)
!16652 = !DILocation(line: 111, column: 8, scope: !16620)
!16653 = !DILocation(line: 112, column: 2, scope: !16620)
!16654 = !DILocation(line: 116, column: 2, scope: !16620)
!16655 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3262, file: !3262, line: 944, type: !16656, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16658)
!16656 = !DISubroutineType(types: !16657)
!16657 = !{!109, !16623}
!16658 = !{!16659}
!16659 = !DILocalVariable(name: "mutex", arg: 1, scope: !16655, file: !3262, line: 944, type: !16623)
!16660 = !DILocation(line: 0, scope: !16655)
!16661 = !DILocation(line: 952, column: 2, scope: !16662)
!16662 = distinct !DILexicalBlock(scope: !16655, file: !3262, line: 952, column: 2)
!16663 = !{i64 2154160247}
!16664 = !DILocation(line: 953, column: 9, scope: !16655)
!16665 = !DILocation(line: 953, column: 2, scope: !16655)
!16666 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3262, file: !3262, line: 927, type: !16667, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !16669)
!16667 = !DISubroutineType(types: !16668)
!16668 = !{!109, !16623, !16630}
!16669 = !{!16670, !16671}
!16670 = !DILocalVariable(name: "mutex", arg: 1, scope: !16666, file: !3262, line: 927, type: !16623)
!16671 = !DILocalVariable(name: "timeout", arg: 2, scope: !16666, file: !3262, line: 927, type: !16630)
!16672 = !DILocation(line: 0, scope: !16666)
!16673 = !DILocation(line: 936, column: 2, scope: !16674)
!16674 = distinct !DILexicalBlock(scope: !16666, file: !3262, line: 936, column: 2)
!16675 = !{i64 2154160179}
!16676 = !DILocation(line: 937, column: 9, scope: !16666)
!16677 = !DILocation(line: 937, column: 2, scope: !16666)
!16678 = distinct !DISubprogram(name: "z_data_copy", scope: !16679, file: !16679, line: 22, type: !3116, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3099, retainedNodes: !2050)
!16679 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16680 = !DILocation(line: 24, column: 2, scope: !16678)
!16681 = !DILocation(line: 27, column: 2, scope: !16678)
!16682 = !DILocation(line: 71, column: 1, scope: !16678)
!16683 = distinct !DISubprogram(name: "z_add_timeout", scope: !2522, file: !2522, line: 88, type: !16684, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16690)
!16684 = !DISubroutineType(types: !16685)
!16685 = !{null, !2495, !2514, !16686}
!16686 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16687)
!16687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16688)
!16688 = !{!16689}
!16689 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16687, file: !104, line: 66, baseType: !103, size: 64)
!16690 = !{!16691, !16692, !16693, !16694, !16700, !16701, !16704, !16707}
!16691 = !DILocalVariable(name: "to", arg: 1, scope: !16683, file: !2522, line: 88, type: !2495)
!16692 = !DILocalVariable(name: "fn", arg: 2, scope: !16683, file: !2522, line: 88, type: !2514)
!16693 = !DILocalVariable(name: "timeout", arg: 3, scope: !16683, file: !2522, line: 89, type: !16686)
!16694 = !DILocalVariable(name: "__i", scope: !16695, file: !2522, line: 102, type: !16696)
!16695 = distinct !DILexicalBlock(scope: !16683, file: !2522, line: 102, column: 2)
!16696 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !16697)
!16697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !16698)
!16698 = !{!16699}
!16699 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16697, file: !253, line: 33, baseType: !109, size: 32)
!16700 = !DILocalVariable(name: "__key", scope: !16695, file: !2522, line: 102, type: !16696)
!16701 = !DILocalVariable(name: "t", scope: !16702, file: !2522, line: 103, type: !2495)
!16702 = distinct !DILexicalBlock(scope: !16703, file: !2522, line: 102, column: 24)
!16703 = distinct !DILexicalBlock(scope: !16695, file: !2522, line: 102, column: 2)
!16704 = !DILocalVariable(name: "ticks", scope: !16705, file: !2522, line: 107, type: !103)
!16705 = distinct !DILexicalBlock(scope: !16706, file: !2522, line: 106, column: 39)
!16706 = distinct !DILexicalBlock(scope: !16702, file: !2522, line: 105, column: 7)
!16707 = !DILocalVariable(name: "next_time", scope: !16708, file: !2522, line: 137, type: !744)
!16708 = distinct !DILexicalBlock(scope: !16709, file: !2522, line: 127, column: 22)
!16709 = distinct !DILexicalBlock(scope: !16702, file: !2522, line: 127, column: 7)
!16710 = !DILocation(line: 0, scope: !16683)
!16711 = !DILocation(line: 91, column: 6, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16683, file: !2522, line: 91, column: 6)
!16713 = !DILocation(line: 91, column: 6, scope: !16683)
!16714 = !DILocation(line: 99, column: 2, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16716, file: !2522, line: 99, column: 2)
!16716 = distinct !DILexicalBlock(scope: !16683, file: !2522, line: 99, column: 2)
!16717 = !DILocation(line: 99, column: 2, scope: !16716)
!16718 = !DILocation(line: 99, column: 2, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16715, file: !2522, line: 99, column: 2)
!16720 = !DILocation(line: 100, column: 6, scope: !16683)
!16721 = !DILocation(line: 100, column: 9, scope: !16683)
!16722 = !DILocation(line: 0, scope: !16695)
!16723 = !DILocalVariable(name: "l", arg: 1, scope: !16724, file: !253, line: 136, type: !16727)
!16724 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !16725, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16728)
!16725 = !DISubroutineType(types: !16726)
!16726 = !{!16696, !16727}
!16727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!16728 = !{!16723, !16729}
!16729 = !DILocalVariable(name: "k", scope: !16724, file: !253, line: 139, type: !16696)
!16730 = !DILocation(line: 0, scope: !16724, inlinedAt: !16731)
!16731 = distinct !DILocation(line: 102, column: 2, scope: !16695)
!16732 = !DILocation(line: 55, column: 2, scope: !16733, inlinedAt: !16737)
!16733 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6116, file: !6116, line: 42, type: !6117, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16734)
!16734 = !{!16735, !16736}
!16735 = !DILocalVariable(name: "key", scope: !16733, file: !6116, line: 44, type: !32)
!16736 = !DILocalVariable(name: "tmp", scope: !16733, file: !6116, line: 53, type: !32)
!16737 = distinct !DILocation(line: 145, column: 10, scope: !16724, inlinedAt: !16731)
!16738 = !{i64 2046504}
!16739 = !DILocation(line: 0, scope: !16733, inlinedAt: !16737)
!16740 = !DILocation(line: 148, column: 2, scope: !16741, inlinedAt: !16731)
!16741 = distinct !DILexicalBlock(scope: !16742, file: !253, line: 148, column: 2)
!16742 = distinct !DILexicalBlock(scope: !16724, file: !253, line: 148, column: 2)
!16743 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !16731)
!16744 = !DILocation(line: 148, column: 2, scope: !16745, inlinedAt: !16731)
!16745 = distinct !DILexicalBlock(scope: !16741, file: !253, line: 148, column: 2)
!16746 = !DILocation(line: 160, column: 2, scope: !16724, inlinedAt: !16731)
!16747 = !DILocation(line: 106, column: 33, scope: !16706)
!16748 = !DILocation(line: 105, column: 7, scope: !16702)
!16749 = !DILocation(line: 107, column: 50, scope: !16705)
!16750 = !DILocation(line: 107, column: 48, scope: !16705)
!16751 = !DILocation(line: 0, scope: !16705)
!16752 = !DILocation(line: 109, column: 17, scope: !16705)
!16753 = !DILocation(line: 110, column: 3, scope: !16705)
!16754 = !DILocation(line: 111, column: 31, scope: !16755)
!16755 = distinct !DILexicalBlock(scope: !16706, file: !2522, line: 110, column: 10)
!16756 = !DILocation(line: 111, column: 37, scope: !16755)
!16757 = !DILocation(line: 111, column: 35, scope: !16755)
!16758 = !DILocation(line: 0, scope: !16706)
!16759 = !DILocation(line: 109, column: 8, scope: !16705)
!16760 = !DILocation(line: 109, column: 15, scope: !16705)
!16761 = !DILocation(line: 114, column: 12, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16702, file: !2522, line: 114, column: 3)
!16763 = !DILocation(line: 0, scope: !16702)
!16764 = !DILocation(line: 114, column: 3, scope: !16762)
!16765 = !DILocation(line: 115, column: 24, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16767, file: !2522, line: 115, column: 8)
!16767 = distinct !DILexicalBlock(scope: !16768, file: !2522, line: 114, column: 45)
!16768 = distinct !DILexicalBlock(scope: !16762, file: !2522, line: 114, column: 3)
!16769 = !DILocation(line: 115, column: 11, scope: !16766)
!16770 = !DILocation(line: 115, column: 18, scope: !16766)
!16771 = !DILocation(line: 115, column: 8, scope: !16767)
!16772 = !DILocation(line: 116, column: 15, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16766, file: !2522, line: 115, column: 32)
!16774 = !DILocation(line: 117, column: 26, scope: !16773)
!16775 = !DILocation(line: 117, column: 5, scope: !16773)
!16776 = !DILocation(line: 123, column: 7, scope: !16702)
!16777 = !DILocation(line: 120, column: 15, scope: !16767)
!16778 = !DILocation(line: 114, column: 36, scope: !16768)
!16779 = distinct !{!16779, !16764, !16780}
!16780 = !DILocation(line: 121, column: 3, scope: !16762)
!16781 = !DILocation(line: 124, column: 4, scope: !16782)
!16782 = distinct !DILexicalBlock(scope: !16783, file: !2522, line: 123, column: 18)
!16783 = distinct !DILexicalBlock(scope: !16702, file: !2522, line: 123, column: 7)
!16784 = !DILocation(line: 125, column: 3, scope: !16782)
!16785 = !DILocation(line: 127, column: 13, scope: !16709)
!16786 = !DILocation(line: 127, column: 10, scope: !16709)
!16787 = !DILocation(line: 127, column: 7, scope: !16702)
!16788 = !DILocation(line: 137, column: 24, scope: !16708)
!16789 = !DILocation(line: 0, scope: !16708)
!16790 = !DILocation(line: 139, column: 18, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16708, file: !2522, line: 139, column: 8)
!16792 = !DILocation(line: 139, column: 23, scope: !16791)
!16793 = !DILocation(line: 141, column: 5, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16791, file: !2522, line: 140, column: 48)
!16795 = !DILocation(line: 142, column: 4, scope: !16794)
!16796 = !DILocalVariable(name: "key", arg: 2, scope: !16797, file: !253, line: 190, type: !16696)
!16797 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !16798, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16800)
!16798 = !DISubroutineType(types: !16799)
!16799 = !{null, !16727, !16696}
!16800 = !{!16801, !16796}
!16801 = !DILocalVariable(name: "l", arg: 1, scope: !16797, file: !253, line: 189, type: !16727)
!16802 = !DILocation(line: 0, scope: !16797, inlinedAt: !16803)
!16803 = distinct !DILocation(line: 102, column: 2, scope: !16703)
!16804 = !DILocation(line: 194, column: 2, scope: !16805, inlinedAt: !16803)
!16805 = distinct !DILexicalBlock(scope: !16806, file: !253, line: 194, column: 2)
!16806 = distinct !DILexicalBlock(scope: !16797, file: !253, line: 194, column: 2)
!16807 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !16803)
!16808 = !DILocation(line: 194, column: 2, scope: !16809, inlinedAt: !16803)
!16809 = distinct !DILexicalBlock(scope: !16805, file: !253, line: 194, column: 2)
!16810 = !DILocalVariable(name: "key", arg: 1, scope: !16811, file: !6116, line: 84, type: !32)
!16811 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6116, file: !6116, line: 84, type: !6127, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16812)
!16812 = !{!16810}
!16813 = !DILocation(line: 0, scope: !16811, inlinedAt: !16814)
!16814 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !16803)
!16815 = !DILocation(line: 95, column: 2, scope: !16811, inlinedAt: !16814)
!16816 = !{i64 2047321}
!16817 = !DILocation(line: 148, column: 1, scope: !16683)
!16818 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !16819, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16823)
!16819 = !DISubroutineType(types: !16820)
!16820 = !{!347, !16821}
!16821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16822, size: 32)
!16822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2499)
!16823 = !{!16824}
!16824 = !DILocalVariable(name: "node", arg: 1, scope: !16818, file: !127, line: 225, type: !16821)
!16825 = !DILocation(line: 0, scope: !16818)
!16826 = !DILocation(line: 227, column: 15, scope: !16818)
!16827 = !DILocation(line: 227, column: 20, scope: !16818)
!16828 = !DILocation(line: 227, column: 2, scope: !16818)
!16829 = distinct !DISubprogram(name: "elapsed", scope: !2522, file: !2522, line: 62, type: !16830, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !2050)
!16830 = !DISubroutineType(types: !16831)
!16831 = !{!744}
!16832 = !DILocation(line: 64, column: 9, scope: !16829)
!16833 = !DILocation(line: 64, column: 28, scope: !16829)
!16834 = !DILocation(line: 64, column: 35, scope: !16829)
!16835 = !DILocation(line: 64, column: 2, scope: !16829)
!16836 = distinct !DISubprogram(name: "first", scope: !2522, file: !2522, line: 39, type: !16837, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16839)
!16837 = !DISubroutineType(types: !16838)
!16838 = !{!2495}
!16839 = !{!16840}
!16840 = !DILocalVariable(name: "t", scope: !16836, file: !2522, line: 41, type: !16841)
!16841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 32)
!16842 = !DILocation(line: 41, column: 19, scope: !16836)
!16843 = !DILocation(line: 0, scope: !16836)
!16844 = !DILocation(line: 43, column: 9, scope: !16836)
!16845 = !DILocation(line: 43, column: 2, scope: !16836)
!16846 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !16847, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16849)
!16847 = !DISubroutineType(types: !16848)
!16848 = !{null, !16841, !16841}
!16849 = !{!16850, !16851, !16852}
!16850 = !DILocalVariable(name: "successor", arg: 1, scope: !16846, file: !127, line: 443, type: !16841)
!16851 = !DILocalVariable(name: "node", arg: 2, scope: !16846, file: !127, line: 443, type: !16841)
!16852 = !DILocalVariable(name: "prev", scope: !16846, file: !127, line: 445, type: !16853)
!16853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16841)
!16854 = !DILocation(line: 0, scope: !16846)
!16855 = !DILocation(line: 445, column: 39, scope: !16846)
!16856 = !DILocation(line: 447, column: 8, scope: !16846)
!16857 = !DILocation(line: 447, column: 13, scope: !16846)
!16858 = !DILocation(line: 448, column: 8, scope: !16846)
!16859 = !DILocation(line: 448, column: 13, scope: !16846)
!16860 = !DILocation(line: 449, column: 8, scope: !16846)
!16861 = !DILocation(line: 449, column: 13, scope: !16846)
!16862 = !DILocation(line: 450, column: 18, scope: !16846)
!16863 = !DILocation(line: 451, column: 1, scope: !16846)
!16864 = distinct !DISubprogram(name: "next", scope: !2522, file: !2522, line: 46, type: !16865, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16867)
!16865 = !DISubroutineType(types: !16866)
!16866 = !{!2495, !2495}
!16867 = !{!16868, !16869}
!16868 = !DILocalVariable(name: "t", arg: 1, scope: !16864, file: !2522, line: 46, type: !2495)
!16869 = !DILocalVariable(name: "n", scope: !16864, file: !2522, line: 48, type: !16841)
!16870 = !DILocation(line: 0, scope: !16864)
!16871 = !DILocation(line: 48, column: 58, scope: !16864)
!16872 = !DILocation(line: 48, column: 19, scope: !16864)
!16873 = !DILocation(line: 50, column: 9, scope: !16864)
!16874 = !DILocation(line: 50, column: 2, scope: !16864)
!16875 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !16876, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16879)
!16876 = !DISubroutineType(types: !16877)
!16877 = !{null, !16878, !16841}
!16878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!16879 = !{!16880, !16881, !16882}
!16880 = !DILocalVariable(name: "list", arg: 1, scope: !16875, file: !127, line: 404, type: !16878)
!16881 = !DILocalVariable(name: "node", arg: 2, scope: !16875, file: !127, line: 404, type: !16841)
!16882 = !DILocalVariable(name: "tail", scope: !16875, file: !127, line: 406, type: !16853)
!16883 = !DILocation(line: 0, scope: !16875)
!16884 = !DILocation(line: 406, column: 34, scope: !16875)
!16885 = !DILocation(line: 408, column: 8, scope: !16875)
!16886 = !DILocation(line: 408, column: 13, scope: !16875)
!16887 = !DILocation(line: 409, column: 8, scope: !16875)
!16888 = !DILocation(line: 409, column: 13, scope: !16875)
!16889 = !DILocation(line: 411, column: 8, scope: !16875)
!16890 = !DILocation(line: 411, column: 13, scope: !16875)
!16891 = !DILocation(line: 412, column: 13, scope: !16875)
!16892 = !DILocation(line: 413, column: 1, scope: !16875)
!16893 = distinct !DISubprogram(name: "next_timeout", scope: !2522, file: !2522, line: 67, type: !16830, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16894)
!16894 = !{!16895, !16896, !16897}
!16895 = !DILocalVariable(name: "to", scope: !16893, file: !2522, line: 69, type: !2495)
!16896 = !DILocalVariable(name: "ticks_elapsed", scope: !16893, file: !2522, line: 70, type: !744)
!16897 = !DILocalVariable(name: "ret", scope: !16893, file: !2522, line: 71, type: !744)
!16898 = !DILocation(line: 69, column: 24, scope: !16893)
!16899 = !DILocation(line: 0, scope: !16893)
!16900 = !DILocation(line: 70, column: 26, scope: !16893)
!16901 = !DILocation(line: 73, column: 10, scope: !16902)
!16902 = distinct !DILexicalBlock(scope: !16893, file: !2522, line: 73, column: 6)
!16903 = !DILocation(line: 73, column: 19, scope: !16902)
!16904 = !DILocation(line: 74, column: 21, scope: !16902)
!16905 = !DILocation(line: 74, column: 30, scope: !16902)
!16906 = !DILocation(line: 74, column: 28, scope: !16902)
!16907 = !DILocation(line: 74, column: 45, scope: !16902)
!16908 = !DILocation(line: 73, column: 6, scope: !16893)
!16909 = !DILocation(line: 77, column: 9, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16902, file: !2522, line: 76, column: 9)
!16911 = !DILocation(line: 0, scope: !16902)
!16912 = !DILocation(line: 81, column: 20, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16893, file: !2522, line: 81, column: 6)
!16914 = !DILocation(line: 81, column: 6, scope: !16913)
!16915 = !DILocation(line: 81, column: 32, scope: !16913)
!16916 = !DILocation(line: 85, column: 2, scope: !16893)
!16917 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !16918, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16920)
!16918 = !DISubroutineType(types: !16919)
!16919 = !{!16841, !16878, !16841}
!16920 = !{!16921, !16922}
!16921 = !DILocalVariable(name: "list", arg: 1, scope: !16917, file: !127, line: 341, type: !16878)
!16922 = !DILocalVariable(name: "node", arg: 2, scope: !16917, file: !127, line: 342, type: !16841)
!16923 = !DILocation(line: 0, scope: !16917)
!16924 = !DILocation(line: 344, column: 15, scope: !16917)
!16925 = !DILocation(line: 344, column: 9, scope: !16917)
!16926 = !DILocation(line: 344, column: 26, scope: !16917)
!16927 = !DILocation(line: 344, column: 2, scope: !16917)
!16928 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !16918, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16929)
!16929 = !{!16930, !16931}
!16930 = !DILocalVariable(name: "list", arg: 1, scope: !16928, file: !127, line: 325, type: !16878)
!16931 = !DILocalVariable(name: "node", arg: 2, scope: !16928, file: !127, line: 326, type: !16841)
!16932 = !DILocation(line: 0, scope: !16928)
!16933 = !DILocation(line: 328, column: 24, scope: !16928)
!16934 = !DILocation(line: 328, column: 15, scope: !16928)
!16935 = !DILocation(line: 328, column: 9, scope: !16928)
!16936 = !DILocation(line: 328, column: 45, scope: !16928)
!16937 = !DILocation(line: 328, column: 2, scope: !16928)
!16938 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !16939, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16941)
!16939 = !DISubroutineType(types: !16940)
!16940 = !{!16841, !16878}
!16941 = !{!16942}
!16942 = !DILocalVariable(name: "list", arg: 1, scope: !16938, file: !127, line: 294, type: !16878)
!16943 = !DILocation(line: 0, scope: !16938)
!16944 = !DILocation(line: 296, column: 9, scope: !16938)
!16945 = !DILocation(line: 296, column: 2, scope: !16938)
!16946 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !16947, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16949)
!16947 = !DISubroutineType(types: !16948)
!16948 = !{!347, !16878}
!16949 = !{!16950}
!16950 = !DILocalVariable(name: "list", arg: 1, scope: !16946, file: !127, line: 266, type: !16878)
!16951 = !DILocation(line: 0, scope: !16946)
!16952 = !DILocation(line: 268, column: 15, scope: !16946)
!16953 = !DILocation(line: 268, column: 20, scope: !16946)
!16954 = !DILocation(line: 268, column: 2, scope: !16946)
!16955 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2522, file: !2522, line: 150, type: !16956, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16958)
!16956 = !DISubroutineType(types: !16957)
!16957 = !{!109, !2495}
!16958 = !{!16959, !16960, !16961, !16963}
!16959 = !DILocalVariable(name: "to", arg: 1, scope: !16955, file: !2522, line: 150, type: !2495)
!16960 = !DILocalVariable(name: "ret", scope: !16955, file: !2522, line: 152, type: !109)
!16961 = !DILocalVariable(name: "__i", scope: !16962, file: !2522, line: 154, type: !16696)
!16962 = distinct !DILexicalBlock(scope: !16955, file: !2522, line: 154, column: 2)
!16963 = !DILocalVariable(name: "__key", scope: !16962, file: !2522, line: 154, type: !16696)
!16964 = !DILocation(line: 0, scope: !16955)
!16965 = !DILocation(line: 0, scope: !16962)
!16966 = !DILocation(line: 0, scope: !16724, inlinedAt: !16967)
!16967 = distinct !DILocation(line: 154, column: 2, scope: !16962)
!16968 = !DILocation(line: 55, column: 2, scope: !16733, inlinedAt: !16969)
!16969 = distinct !DILocation(line: 145, column: 10, scope: !16724, inlinedAt: !16967)
!16970 = !DILocation(line: 0, scope: !16733, inlinedAt: !16969)
!16971 = !DILocation(line: 148, column: 2, scope: !16741, inlinedAt: !16967)
!16972 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !16967)
!16973 = !DILocation(line: 148, column: 2, scope: !16745, inlinedAt: !16967)
!16974 = !DILocation(line: 160, column: 2, scope: !16724, inlinedAt: !16967)
!16975 = !DILocation(line: 155, column: 7, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16977, file: !2522, line: 155, column: 7)
!16977 = distinct !DILexicalBlock(scope: !16978, file: !2522, line: 154, column: 24)
!16978 = distinct !DILexicalBlock(scope: !16962, file: !2522, line: 154, column: 2)
!16979 = !DILocation(line: 155, column: 7, scope: !16977)
!16980 = !DILocation(line: 156, column: 4, scope: !16981)
!16981 = distinct !DILexicalBlock(scope: !16976, file: !2522, line: 155, column: 39)
!16982 = !DILocation(line: 158, column: 3, scope: !16981)
!16983 = !DILocation(line: 0, scope: !16797, inlinedAt: !16984)
!16984 = distinct !DILocation(line: 154, column: 2, scope: !16978)
!16985 = !DILocation(line: 194, column: 2, scope: !16805, inlinedAt: !16984)
!16986 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !16984)
!16987 = !DILocation(line: 194, column: 2, scope: !16809, inlinedAt: !16984)
!16988 = !DILocation(line: 0, scope: !16811, inlinedAt: !16989)
!16989 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !16984)
!16990 = !DILocation(line: 95, column: 2, scope: !16811, inlinedAt: !16989)
!16991 = !DILocation(line: 161, column: 2, scope: !16955)
!16992 = distinct !DISubprogram(name: "remove_timeout", scope: !2522, file: !2522, line: 53, type: !2516, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16993)
!16993 = !{!16994}
!16994 = !DILocalVariable(name: "t", arg: 1, scope: !16992, file: !2522, line: 53, type: !2495)
!16995 = !DILocation(line: 0, scope: !16992)
!16996 = !DILocation(line: 55, column: 6, scope: !16997)
!16997 = distinct !DILexicalBlock(scope: !16992, file: !2522, line: 55, column: 6)
!16998 = !DILocation(line: 55, column: 14, scope: !16997)
!16999 = !DILocation(line: 55, column: 6, scope: !16992)
!17000 = !DILocation(line: 56, column: 25, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16997, file: !2522, line: 55, column: 23)
!17002 = !DILocation(line: 56, column: 12, scope: !17001)
!17003 = !DILocation(line: 56, column: 19, scope: !17001)
!17004 = !DILocation(line: 57, column: 2, scope: !17001)
!17005 = !DILocation(line: 59, column: 23, scope: !16992)
!17006 = !DILocation(line: 59, column: 2, scope: !16992)
!17007 = !DILocation(line: 60, column: 1, scope: !16992)
!17008 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !17009, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17011)
!17009 = !DISubroutineType(types: !17010)
!17010 = !{null, !16841}
!17011 = !{!17012, !17013, !17014}
!17012 = !DILocalVariable(name: "node", arg: 1, scope: !17008, file: !127, line: 496, type: !16841)
!17013 = !DILocalVariable(name: "prev", scope: !17008, file: !127, line: 498, type: !16853)
!17014 = !DILocalVariable(name: "next", scope: !17008, file: !127, line: 499, type: !16853)
!17015 = !DILocation(line: 0, scope: !17008)
!17016 = !DILocation(line: 498, column: 34, scope: !17008)
!17017 = !DILocation(line: 499, column: 34, scope: !17008)
!17018 = !DILocation(line: 501, column: 8, scope: !17008)
!17019 = !DILocation(line: 501, column: 13, scope: !17008)
!17020 = !DILocation(line: 502, column: 8, scope: !17008)
!17021 = !DILocation(line: 502, column: 13, scope: !17008)
!17022 = !DILocation(line: 503, column: 2, scope: !17008)
!17023 = !DILocation(line: 504, column: 1, scope: !17008)
!17024 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !17009, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17025)
!17025 = !{!17026}
!17026 = !DILocalVariable(name: "node", arg: 1, scope: !17024, file: !127, line: 211, type: !16841)
!17027 = !DILocation(line: 0, scope: !17024)
!17028 = !DILocation(line: 213, column: 8, scope: !17024)
!17029 = !DILocation(line: 213, column: 13, scope: !17024)
!17030 = !DILocation(line: 214, column: 8, scope: !17024)
!17031 = !DILocation(line: 214, column: 13, scope: !17024)
!17032 = !DILocation(line: 215, column: 1, scope: !17024)
!17033 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2522, file: !2522, line: 183, type: !17034, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17038)
!17034 = !DISubroutineType(types: !17035)
!17035 = !{!103, !17036}
!17036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17037, size: 32)
!17037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2496)
!17038 = !{!17039, !17040, !17041, !17043}
!17039 = !DILocalVariable(name: "timeout", arg: 1, scope: !17033, file: !2522, line: 183, type: !17036)
!17040 = !DILocalVariable(name: "ticks", scope: !17033, file: !2522, line: 185, type: !103)
!17041 = !DILocalVariable(name: "__i", scope: !17042, file: !2522, line: 187, type: !16696)
!17042 = distinct !DILexicalBlock(scope: !17033, file: !2522, line: 187, column: 2)
!17043 = !DILocalVariable(name: "__key", scope: !17042, file: !2522, line: 187, type: !16696)
!17044 = !DILocation(line: 0, scope: !17033)
!17045 = !DILocation(line: 0, scope: !17042)
!17046 = !DILocation(line: 0, scope: !16724, inlinedAt: !17047)
!17047 = distinct !DILocation(line: 187, column: 2, scope: !17042)
!17048 = !DILocation(line: 55, column: 2, scope: !16733, inlinedAt: !17049)
!17049 = distinct !DILocation(line: 145, column: 10, scope: !16724, inlinedAt: !17047)
!17050 = !DILocation(line: 0, scope: !16733, inlinedAt: !17049)
!17051 = !DILocation(line: 148, column: 2, scope: !16741, inlinedAt: !17047)
!17052 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17047)
!17053 = !DILocation(line: 148, column: 2, scope: !16745, inlinedAt: !17047)
!17054 = !DILocation(line: 160, column: 2, scope: !16724, inlinedAt: !17047)
!17055 = !DILocation(line: 188, column: 11, scope: !17056)
!17056 = distinct !DILexicalBlock(scope: !17057, file: !2522, line: 187, column: 24)
!17057 = distinct !DILexicalBlock(scope: !17042, file: !2522, line: 187, column: 2)
!17058 = !DILocation(line: 0, scope: !16797, inlinedAt: !17059)
!17059 = distinct !DILocation(line: 187, column: 2, scope: !17057)
!17060 = !DILocation(line: 194, column: 2, scope: !16805, inlinedAt: !17059)
!17061 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17059)
!17062 = !DILocation(line: 194, column: 2, scope: !16809, inlinedAt: !17059)
!17063 = !DILocation(line: 0, scope: !16811, inlinedAt: !17064)
!17064 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17059)
!17065 = !DILocation(line: 95, column: 2, scope: !16811, inlinedAt: !17064)
!17066 = !DILocation(line: 191, column: 2, scope: !17033)
!17067 = distinct !DISubprogram(name: "timeout_rem", scope: !2522, file: !2522, line: 165, type: !17034, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17068)
!17068 = !{!17069, !17070, !17071}
!17069 = !DILocalVariable(name: "timeout", arg: 1, scope: !17067, file: !2522, line: 165, type: !17036)
!17070 = !DILocalVariable(name: "ticks", scope: !17067, file: !2522, line: 167, type: !103)
!17071 = !DILocalVariable(name: "t", scope: !17072, file: !2522, line: 173, type: !2495)
!17072 = distinct !DILexicalBlock(scope: !17067, file: !2522, line: 173, column: 2)
!17073 = !DILocation(line: 0, scope: !17067)
!17074 = !DILocation(line: 169, column: 6, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17067, file: !2522, line: 169, column: 6)
!17076 = !DILocation(line: 169, column: 6, scope: !17067)
!17077 = !DILocation(line: 173, column: 28, scope: !17072)
!17078 = !DILocation(line: 0, scope: !17072)
!17079 = !DILocation(line: 173, column: 39, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !17072, file: !2522, line: 173, column: 2)
!17081 = !DILocation(line: 173, column: 2, scope: !17072)
!17082 = !DILocation(line: 174, column: 15, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17080, file: !2522, line: 173, column: 61)
!17084 = !DILocation(line: 174, column: 9, scope: !17083)
!17085 = !DILocation(line: 175, column: 15, scope: !17086)
!17086 = distinct !DILexicalBlock(scope: !17083, file: !2522, line: 175, column: 7)
!17087 = !DILocation(line: 175, column: 7, scope: !17083)
!17088 = !DILocation(line: 173, column: 52, scope: !17080)
!17089 = distinct !{!17089, !17081, !17090}
!17090 = !DILocation(line: 178, column: 2, scope: !17072)
!17091 = !DILocation(line: 180, column: 17, scope: !17067)
!17092 = !DILocation(line: 180, column: 15, scope: !17067)
!17093 = !DILocation(line: 180, column: 2, scope: !17067)
!17094 = !DILocation(line: 181, column: 1, scope: !17067)
!17095 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13257, file: !13257, line: 35, type: !17096, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17098)
!17096 = !DISubroutineType(types: !17097)
!17097 = !{!347, !17036}
!17098 = !{!17099}
!17099 = !DILocalVariable(name: "to", arg: 1, scope: !17095, file: !13257, line: 35, type: !17036)
!17100 = !DILocation(line: 0, scope: !17095)
!17101 = !DILocation(line: 37, column: 35, scope: !17095)
!17102 = !DILocation(line: 37, column: 10, scope: !17095)
!17103 = !DILocation(line: 37, column: 9, scope: !17095)
!17104 = !DILocation(line: 37, column: 2, scope: !17095)
!17105 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2522, file: !2522, line: 194, type: !17034, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17106)
!17106 = !{!17107, !17108, !17109, !17111}
!17107 = !DILocalVariable(name: "timeout", arg: 1, scope: !17105, file: !2522, line: 194, type: !17036)
!17108 = !DILocalVariable(name: "ticks", scope: !17105, file: !2522, line: 196, type: !103)
!17109 = !DILocalVariable(name: "__i", scope: !17110, file: !2522, line: 198, type: !16696)
!17110 = distinct !DILexicalBlock(scope: !17105, file: !2522, line: 198, column: 2)
!17111 = !DILocalVariable(name: "__key", scope: !17110, file: !2522, line: 198, type: !16696)
!17112 = !DILocation(line: 0, scope: !17105)
!17113 = !DILocation(line: 0, scope: !17110)
!17114 = !DILocation(line: 0, scope: !16724, inlinedAt: !17115)
!17115 = distinct !DILocation(line: 198, column: 2, scope: !17110)
!17116 = !DILocation(line: 55, column: 2, scope: !16733, inlinedAt: !17117)
!17117 = distinct !DILocation(line: 145, column: 10, scope: !16724, inlinedAt: !17115)
!17118 = !DILocation(line: 0, scope: !16733, inlinedAt: !17117)
!17119 = !DILocation(line: 148, column: 2, scope: !16741, inlinedAt: !17115)
!17120 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17115)
!17121 = !DILocation(line: 148, column: 2, scope: !16745, inlinedAt: !17115)
!17122 = !DILocation(line: 160, column: 2, scope: !16724, inlinedAt: !17115)
!17123 = !DILocation(line: 199, column: 11, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17125, file: !2522, line: 198, column: 24)
!17125 = distinct !DILexicalBlock(scope: !17110, file: !2522, line: 198, column: 2)
!17126 = !DILocation(line: 199, column: 23, scope: !17124)
!17127 = !DILocation(line: 0, scope: !16797, inlinedAt: !17128)
!17128 = distinct !DILocation(line: 198, column: 2, scope: !17125)
!17129 = !DILocation(line: 194, column: 2, scope: !16805, inlinedAt: !17128)
!17130 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17128)
!17131 = !DILocation(line: 194, column: 2, scope: !16809, inlinedAt: !17128)
!17132 = !DILocation(line: 0, scope: !16811, inlinedAt: !17133)
!17133 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17128)
!17134 = !DILocation(line: 95, column: 2, scope: !16811, inlinedAt: !17133)
!17135 = !DILocation(line: 199, column: 21, scope: !17124)
!17136 = !DILocation(line: 202, column: 2, scope: !17105)
!17137 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2522, file: !2522, line: 205, type: !16830, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17138)
!17138 = !{!17139, !17140, !17142}
!17139 = !DILocalVariable(name: "ret", scope: !17137, file: !2522, line: 207, type: !744)
!17140 = !DILocalVariable(name: "__i", scope: !17141, file: !2522, line: 209, type: !16696)
!17141 = distinct !DILexicalBlock(scope: !17137, file: !2522, line: 209, column: 2)
!17142 = !DILocalVariable(name: "__key", scope: !17141, file: !2522, line: 209, type: !16696)
!17143 = !DILocation(line: 0, scope: !17137)
!17144 = !DILocation(line: 0, scope: !17141)
!17145 = !DILocation(line: 0, scope: !16724, inlinedAt: !17146)
!17146 = distinct !DILocation(line: 209, column: 2, scope: !17141)
!17147 = !DILocation(line: 55, column: 2, scope: !16733, inlinedAt: !17148)
!17148 = distinct !DILocation(line: 145, column: 10, scope: !16724, inlinedAt: !17146)
!17149 = !DILocation(line: 0, scope: !16733, inlinedAt: !17148)
!17150 = !DILocation(line: 148, column: 2, scope: !16741, inlinedAt: !17146)
!17151 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17146)
!17152 = !DILocation(line: 148, column: 2, scope: !16745, inlinedAt: !17146)
!17153 = !DILocation(line: 160, column: 2, scope: !16724, inlinedAt: !17146)
!17154 = !DILocation(line: 210, column: 9, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17156, file: !2522, line: 209, column: 24)
!17156 = distinct !DILexicalBlock(scope: !17141, file: !2522, line: 209, column: 2)
!17157 = !DILocation(line: 0, scope: !16797, inlinedAt: !17158)
!17158 = distinct !DILocation(line: 209, column: 2, scope: !17156)
!17159 = !DILocation(line: 194, column: 2, scope: !16805, inlinedAt: !17158)
!17160 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17158)
!17161 = !DILocation(line: 194, column: 2, scope: !16809, inlinedAt: !17158)
!17162 = !DILocation(line: 0, scope: !16811, inlinedAt: !17163)
!17163 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17158)
!17164 = !DILocation(line: 95, column: 2, scope: !16811, inlinedAt: !17163)
!17165 = !DILocation(line: 212, column: 2, scope: !17137)
!17166 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2522, file: !2522, line: 215, type: !10751, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17167)
!17167 = !{!17168, !17169, !17170, !17172, !17173, !17176, !17177}
!17168 = !DILocalVariable(name: "ticks", arg: 1, scope: !17166, file: !2522, line: 215, type: !744)
!17169 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17166, file: !2522, line: 215, type: !347)
!17170 = !DILocalVariable(name: "__i", scope: !17171, file: !2522, line: 217, type: !16696)
!17171 = distinct !DILexicalBlock(scope: !17166, file: !2522, line: 217, column: 2)
!17172 = !DILocalVariable(name: "__key", scope: !17171, file: !2522, line: 217, type: !16696)
!17173 = !DILocalVariable(name: "next_to", scope: !17174, file: !2522, line: 218, type: !109)
!17174 = distinct !DILexicalBlock(scope: !17175, file: !2522, line: 217, column: 24)
!17175 = distinct !DILexicalBlock(scope: !17171, file: !2522, line: 217, column: 2)
!17176 = !DILocalVariable(name: "sooner", scope: !17174, file: !2522, line: 219, type: !347)
!17177 = !DILocalVariable(name: "imminent", scope: !17174, file: !2522, line: 221, type: !347)
!17178 = !DILocation(line: 0, scope: !17166)
!17179 = !DILocation(line: 0, scope: !17171)
!17180 = !DILocation(line: 0, scope: !16724, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 217, column: 2, scope: !17171)
!17182 = !DILocation(line: 55, column: 2, scope: !16733, inlinedAt: !17183)
!17183 = distinct !DILocation(line: 145, column: 10, scope: !16724, inlinedAt: !17181)
!17184 = !DILocation(line: 0, scope: !16733, inlinedAt: !17183)
!17185 = !DILocation(line: 148, column: 2, scope: !16741, inlinedAt: !17181)
!17186 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17181)
!17187 = !DILocation(line: 148, column: 2, scope: !16745, inlinedAt: !17181)
!17188 = !DILocation(line: 160, column: 2, scope: !16724, inlinedAt: !17181)
!17189 = !DILocation(line: 218, column: 17, scope: !17174)
!17190 = !DILocation(line: 0, scope: !17174)
!17191 = !DILocation(line: 221, column: 27, scope: !17174)
!17192 = !DILocation(line: 233, column: 17, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17174, file: !2522, line: 233, column: 7)
!17194 = !DILocation(line: 234, column: 26, scope: !17195)
!17195 = distinct !DILexicalBlock(scope: !17193, file: !2522, line: 233, column: 56)
!17196 = !DILocation(line: 234, column: 4, scope: !17195)
!17197 = !DILocation(line: 235, column: 3, scope: !17195)
!17198 = !DILocation(line: 0, scope: !16797, inlinedAt: !17199)
!17199 = distinct !DILocation(line: 217, column: 2, scope: !17175)
!17200 = !DILocation(line: 194, column: 2, scope: !16805, inlinedAt: !17199)
!17201 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17199)
!17202 = !DILocation(line: 194, column: 2, scope: !16809, inlinedAt: !17199)
!17203 = !DILocation(line: 0, scope: !16811, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17199)
!17205 = !DILocation(line: 95, column: 2, scope: !16811, inlinedAt: !17204)
!17206 = !DILocation(line: 237, column: 1, scope: !17166)
!17207 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2522, file: !2522, line: 239, type: !17208, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17210)
!17208 = !DISubroutineType(types: !17209)
!17209 = !{null, !744}
!17210 = !{!17211, !17212, !17213, !17215}
!17211 = !DILocalVariable(name: "ticks", arg: 1, scope: !17207, file: !2522, line: 239, type: !744)
!17212 = !DILocalVariable(name: "key", scope: !17207, file: !2522, line: 245, type: !16696)
!17213 = !DILocalVariable(name: "t", scope: !17214, file: !2522, line: 262, type: !2495)
!17214 = distinct !DILexicalBlock(scope: !17207, file: !2522, line: 261, column: 67)
!17215 = !DILocalVariable(name: "dt", scope: !17214, file: !2522, line: 263, type: !109)
!17216 = !DILocation(line: 0, scope: !17207)
!17217 = !DILocation(line: 242, column: 2, scope: !17207)
!17218 = !DILocation(line: 0, scope: !16724, inlinedAt: !17219)
!17219 = distinct !DILocation(line: 245, column: 25, scope: !17207)
!17220 = !DILocation(line: 55, column: 2, scope: !16733, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 145, column: 10, scope: !16724, inlinedAt: !17219)
!17222 = !DILocation(line: 0, scope: !16733, inlinedAt: !17221)
!17223 = !DILocation(line: 148, column: 2, scope: !16741, inlinedAt: !17219)
!17224 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17219)
!17225 = !DILocation(line: 148, column: 2, scope: !16745, inlinedAt: !17219)
!17226 = !DILocation(line: 160, column: 2, scope: !16724, inlinedAt: !17219)
!17227 = !DILocation(line: 261, column: 9, scope: !17207)
!17228 = !DILocation(line: 261, column: 17, scope: !17207)
!17229 = !DILocation(line: 261, column: 25, scope: !17207)
!17230 = !DILocation(line: 261, column: 37, scope: !17207)
!17231 = !DILocation(line: 261, column: 47, scope: !17207)
!17232 = !DILocation(line: 261, column: 44, scope: !17207)
!17233 = !DILocation(line: 261, column: 2, scope: !17207)
!17234 = !DILocation(line: 0, scope: !17214)
!17235 = !DILocation(line: 263, column: 12, scope: !17214)
!17236 = !DILocation(line: 265, column: 16, scope: !17214)
!17237 = !DILocation(line: 265, column: 13, scope: !17214)
!17238 = !DILocation(line: 266, column: 13, scope: !17214)
!17239 = !DILocation(line: 267, column: 3, scope: !17214)
!17240 = !DILocation(line: 0, scope: !16797, inlinedAt: !17241)
!17241 = distinct !DILocation(line: 269, column: 3, scope: !17214)
!17242 = !DILocation(line: 194, column: 2, scope: !16805, inlinedAt: !17241)
!17243 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17241)
!17244 = !DILocation(line: 194, column: 2, scope: !16809, inlinedAt: !17241)
!17245 = !DILocation(line: 0, scope: !16811, inlinedAt: !17246)
!17246 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17241)
!17247 = !DILocation(line: 95, column: 2, scope: !16811, inlinedAt: !17246)
!17248 = !DILocation(line: 270, column: 6, scope: !17214)
!17249 = !DILocation(line: 270, column: 3, scope: !17214)
!17250 = !DILocation(line: 0, scope: !16724, inlinedAt: !17251)
!17251 = distinct !DILocation(line: 271, column: 9, scope: !17214)
!17252 = !DILocation(line: 55, column: 2, scope: !16733, inlinedAt: !17253)
!17253 = distinct !DILocation(line: 145, column: 10, scope: !16724, inlinedAt: !17251)
!17254 = !DILocation(line: 0, scope: !16733, inlinedAt: !17253)
!17255 = !DILocation(line: 148, column: 2, scope: !16741, inlinedAt: !17251)
!17256 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17251)
!17257 = !DILocation(line: 148, column: 2, scope: !16745, inlinedAt: !17251)
!17258 = !DILocation(line: 160, column: 2, scope: !16724, inlinedAt: !17251)
!17259 = !DILocation(line: 272, column: 22, scope: !17214)
!17260 = distinct !{!17260, !17233, !17261}
!17261 = !DILocation(line: 273, column: 2, scope: !17207)
!17262 = !DILocation(line: 276, column: 19, scope: !17263)
!17263 = distinct !DILexicalBlock(scope: !17264, file: !2522, line: 275, column: 23)
!17264 = distinct !DILexicalBlock(scope: !17207, file: !2522, line: 275, column: 6)
!17265 = !DILocation(line: 277, column: 2, scope: !17263)
!17266 = !DILocation(line: 279, column: 15, scope: !17207)
!17267 = !DILocation(line: 279, column: 12, scope: !17207)
!17268 = !DILocation(line: 280, column: 21, scope: !17207)
!17269 = !DILocation(line: 282, column: 24, scope: !17207)
!17270 = !DILocation(line: 282, column: 2, scope: !17207)
!17271 = !DILocation(line: 0, scope: !16797, inlinedAt: !17272)
!17272 = distinct !DILocation(line: 284, column: 2, scope: !17207)
!17273 = !DILocation(line: 194, column: 2, scope: !16805, inlinedAt: !17272)
!17274 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17272)
!17275 = !DILocation(line: 194, column: 2, scope: !16809, inlinedAt: !17272)
!17276 = !DILocation(line: 0, scope: !16811, inlinedAt: !17277)
!17277 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17272)
!17278 = !DILocation(line: 95, column: 2, scope: !16811, inlinedAt: !17277)
!17279 = !DILocation(line: 285, column: 1, scope: !17207)
!17280 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2522, file: !2522, line: 287, type: !17281, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17283)
!17281 = !DISubroutineType(types: !17282)
!17282 = !{!105}
!17283 = !{!17284, !17285, !17287}
!17284 = !DILocalVariable(name: "t", scope: !17280, file: !2522, line: 289, type: !111)
!17285 = !DILocalVariable(name: "__i", scope: !17286, file: !2522, line: 291, type: !16696)
!17286 = distinct !DILexicalBlock(scope: !17280, file: !2522, line: 291, column: 2)
!17287 = !DILocalVariable(name: "__key", scope: !17286, file: !2522, line: 291, type: !16696)
!17288 = !DILocation(line: 0, scope: !17280)
!17289 = !DILocation(line: 0, scope: !17286)
!17290 = !DILocation(line: 0, scope: !16724, inlinedAt: !17291)
!17291 = distinct !DILocation(line: 291, column: 2, scope: !17286)
!17292 = !DILocation(line: 55, column: 2, scope: !16733, inlinedAt: !17293)
!17293 = distinct !DILocation(line: 145, column: 10, scope: !16724, inlinedAt: !17291)
!17294 = !DILocation(line: 0, scope: !16733, inlinedAt: !17293)
!17295 = !DILocation(line: 148, column: 2, scope: !16741, inlinedAt: !17291)
!17296 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17291)
!17297 = !DILocation(line: 148, column: 2, scope: !16745, inlinedAt: !17291)
!17298 = !DILocation(line: 160, column: 2, scope: !16724, inlinedAt: !17291)
!17299 = !DILocation(line: 292, column: 7, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17301, file: !2522, line: 291, column: 24)
!17301 = distinct !DILexicalBlock(scope: !17286, file: !2522, line: 291, column: 2)
!17302 = !DILocation(line: 292, column: 19, scope: !17300)
!17303 = !DILocation(line: 0, scope: !16797, inlinedAt: !17304)
!17304 = distinct !DILocation(line: 291, column: 2, scope: !17301)
!17305 = !DILocation(line: 194, column: 2, scope: !16805, inlinedAt: !17304)
!17306 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17304)
!17307 = !DILocation(line: 194, column: 2, scope: !16809, inlinedAt: !17304)
!17308 = !DILocation(line: 0, scope: !16811, inlinedAt: !17309)
!17309 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17304)
!17310 = !DILocation(line: 95, column: 2, scope: !16811, inlinedAt: !17309)
!17311 = !DILocation(line: 292, column: 17, scope: !17300)
!17312 = !DILocation(line: 294, column: 2, scope: !17280)
!17313 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2522, file: !2522, line: 297, type: !6524, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !2050)
!17314 = !DILocation(line: 300, column: 19, scope: !17313)
!17315 = !DILocation(line: 300, column: 9, scope: !17313)
!17316 = !DILocation(line: 300, column: 2, scope: !17313)
!17317 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2522, file: !2522, line: 306, type: !17281, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !2050)
!17318 = !DILocation(line: 308, column: 9, scope: !17317)
!17319 = !DILocation(line: 308, column: 2, scope: !17317)
!17320 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2522, file: !2522, line: 319, type: !6534, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17321)
!17321 = !{!17322, !17323, !17324, !17325}
!17322 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17320, file: !2522, line: 319, type: !110)
!17323 = !DILocalVariable(name: "start_cycles", scope: !17320, file: !2522, line: 328, type: !110)
!17324 = !DILocalVariable(name: "cycles_to_wait", scope: !17320, file: !2522, line: 331, type: !110)
!17325 = !DILocalVariable(name: "current_cycles", scope: !17326, file: !2522, line: 338, type: !110)
!17326 = distinct !DILexicalBlock(scope: !17327, file: !2522, line: 337, column: 11)
!17327 = distinct !DILexicalBlock(scope: !17328, file: !2522, line: 337, column: 2)
!17328 = distinct !DILexicalBlock(scope: !17320, file: !2522, line: 337, column: 2)
!17329 = !DILocation(line: 0, scope: !17320)
!17330 = !DILocation(line: 322, column: 19, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17320, file: !2522, line: 322, column: 6)
!17332 = !DILocation(line: 322, column: 6, scope: !17320)
!17333 = !DILocation(line: 328, column: 26, scope: !17320)
!17334 = !DILocation(line: 333, column: 43, scope: !17320)
!17335 = !DILocation(line: 337, column: 2, scope: !17320)
!17336 = !DILocation(line: 338, column: 29, scope: !17326)
!17337 = !DILocation(line: 0, scope: !17326)
!17338 = !DILocation(line: 341, column: 23, scope: !17339)
!17339 = distinct !DILexicalBlock(scope: !17326, file: !2522, line: 341, column: 7)
!17340 = !DILocation(line: 341, column: 39, scope: !17339)
!17341 = !DILocation(line: 349, column: 1, scope: !17320)
!17342 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !6524, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !2050)
!17343 = !DILocation(line: 1677, column: 9, scope: !17342)
!17344 = !DILocation(line: 1677, column: 2, scope: !17342)
!17345 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17346, file: !17346, line: 24, type: !6524, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !2050)
!17346 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17347 = !DILocation(line: 26, column: 9, scope: !17345)
!17348 = !DILocation(line: 26, column: 2, scope: !17345)
!17349 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2522, file: !2522, line: 364, type: !17350, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17352)
!17350 = !DISubroutineType(types: !17351)
!17351 = !{!111, !16686}
!17352 = !{!17353, !17354}
!17353 = !DILocalVariable(name: "timeout", arg: 1, scope: !17349, file: !2522, line: 364, type: !16686)
!17354 = !DILocalVariable(name: "dt", scope: !17349, file: !2522, line: 366, type: !103)
!17355 = !DILocation(line: 0, scope: !17349)
!17356 = !DILocation(line: 368, column: 6, scope: !17349)
!17357 = !DILocation(line: 371, column: 10, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17359, file: !2522, line: 370, column: 47)
!17359 = distinct !DILexicalBlock(scope: !17360, file: !2522, line: 370, column: 13)
!17360 = distinct !DILexicalBlock(scope: !17349, file: !2522, line: 368, column: 6)
!17361 = !DILocation(line: 371, column: 3, scope: !17358)
!17362 = !DILocation(line: 376, column: 58, scope: !17363)
!17363 = distinct !DILexicalBlock(scope: !17364, file: !2522, line: 376, column: 7)
!17364 = distinct !DILexicalBlock(scope: !17359, file: !2522, line: 372, column: 9)
!17365 = !DILocation(line: 376, column: 7, scope: !17364)
!17366 = !DILocation(line: 376, column: 43, scope: !17363)
!17367 = !DILocation(line: 377, column: 4, scope: !17368)
!17368 = distinct !DILexicalBlock(scope: !17363, file: !2522, line: 376, column: 64)
!17369 = !DILocation(line: 379, column: 10, scope: !17364)
!17370 = !DILocation(line: 379, column: 33, scope: !17364)
!17371 = !DILocation(line: 379, column: 31, scope: !17364)
!17372 = !DILocation(line: 379, column: 3, scope: !17364)
!17373 = !DILocation(line: 0, scope: !17360)
!17374 = !DILocation(line: 381, column: 1, scope: !17349)
!17375 = distinct !DISubprogram(name: "boot_banner", scope: !17376, file: !17376, line: 26, type: !3116, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3102, retainedNodes: !2050)
!17376 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17377 = !DILocation(line: 34, column: 2, scope: !17375)
!17378 = !DILocation(line: 36, column: 1, scope: !17375)
