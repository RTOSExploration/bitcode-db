; ModuleID = 'build/96b_carbon/crypto/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.mode_test = type { i8*, void (%struct.device*)* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.ctr_params }
%struct.ctr_params = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.ctr_params }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.crypto_driver_api = type { i32 (%struct.device*)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)*, i32 (%struct.device*, %struct.hash_ctx*, i32)*, i32 (%struct.device*, %struct.hash_ctx*)*, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* }
%struct.cipher_ctx = type { %struct.cipher_ops, %union.anon.4, %struct.device*, i8*, i8*, %union.anon.5, i16, i16 }
%struct.cipher_ops = type { i32, %union.anon.3 }
%union.anon.3 = type { i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)* }
%struct.cipher_pkt = type { i8*, i32, i8*, i32, i32, %struct.cipher_ctx* }
%union.anon.4 = type { i8* }
%union.anon.5 = type { %struct.ctr_params }
%struct.hash_ctx = type { %struct.device*, i8*, i32 (%struct.hash_ctx*, %struct.hash_pkt*, i1)*, i8, i16 }
%struct.hash_pkt = type { i8*, i32, i8*, %struct.hash_ctx* }
%struct.tc_shim_drv_state = type { i32, %struct.tc_aes_key_sched_struct }
%struct.tc_aes_key_sched_struct = type { [44 x i32] }
%struct.gpio_stm32_config = type { %struct.ctr_params, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.ctr_params, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.cipher_aead_pkt = type { %struct.cipher_pkt*, i8*, i32, i8* }
%struct.ccm_params = type { i16, i16 }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.ctr_params, %struct.ctr_params }
%struct.tc_ccm_mode_struct = type { %struct.tc_aes_key_sched_struct*, i8*, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.ctr_params*, %struct.ctr_params* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235097 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235077 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235067 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235167 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235157 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235147 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235137 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235127 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235117 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235107 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236852 to i8*), void (i8*)* inttoptr (i32 134235087 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [49 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_crypto_tinycrypt to i8*), i8* bitcast (%struct.init_entry* @__init___device_crypto_tinycrypt to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_tinycrypt to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Please provision the key separately as the module doesnt support a raw key\0A\00", align 1
@.str.2 = private unnamed_addr constant [90 x i8] c"%c: The app assumes sync semantics. Please rewrite the app accordingly before proceeding\0A\00", align 1
@.str.3 = private unnamed_addr constant [95 x i8] c"%c: The app assumes distinct IO buffers. Please rewrite the app accordingly before proceeding\0A\00", align 1
@cap_flags = dso_local local_unnamed_addr global i32 0, align 4, !dbg !314
@__const.ecb_mode.ecb_key = private unnamed_addr constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1
@__const.ecb_mode.ecb_plaintext = private unnamed_addr constant [16 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", align 1
@__const.ecb_mode.ecb_ciphertext = private unnamed_addr constant [16 x i8] c"i\C4\E0\D8j{\040\D8\CD\B7\80p\B4\C5Z", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%c: ECB mode ENCRYPT - Failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"%c: Output length (encryption): %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"%c: ECB mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"%c: ECB mode ENCRYPT - Match\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"%c: ECB mode DECRYPT - Failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"%c: Output length (decryption): %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [77 x i8] c"%c: ECB mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"%c: ECB mode DECRYPT - Match\0A\00", align 1
@key = internal global [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", align 1, !dbg !316
@plaintext = internal global [64 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF\F6\9F$E\DFO\9B\17\AD+A{\E6l7\10", align 1, !dbg !318
@cbc_mode.iv = internal global [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !291
@.str.12 = private unnamed_addr constant [31 x i8] c"%c: CBC mode ENCRYPT - Failed\0A\00", align 1
@cbc_ciphertext = internal constant [80 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0FvI\AB\AC\81\19\B2F\CE\E9\8E\9B\12\E9\19}P\86\CB\9BPr\19\EE\95\DB\11:\91vx\B2s\BE\D6\B8\E3\C1t;q\16\E6\9E\22\22\95\16?\F1\CA\A1h\1F\AC\09\12\0E\CA0u\86\E1\A7", align 1, !dbg !320
@.str.13 = private unnamed_addr constant [75 x i8] c"%c: CBC mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c: CBC mode ENCRYPT - Match\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"%c: CBC mode DECRYPT - Failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [77 x i8] c"%c: CBC mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%c: CBC mode DECRYPT - Match\0A\00", align 1
@__const.ctr_mode.iv = private unnamed_addr constant [12 x i8] c"\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"%c: CTR mode ENCRYPT - Failed\0A\00", align 1
@ctr_ciphertext = internal constant [64 x i8] c"\22\E5/\B1w\D8e\B2\F7\C6\B5\12i-\11M\EDl\1Cr%\DA\F6\A2\AA\D9\D3\DA-\BA!h5\C0\AFko@\C3\C6\EF\C5\85\D0\90,\C2c\12+\C5\8Er\DE\\\A2\A3\\\85:\B9,\06\BB", align 1, !dbg !324
@.str.19 = private unnamed_addr constant [75 x i8] c"%c: CTR mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"%c: CTR mode ENCRYPT - Match\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c: CTR mode DECRYPT - Failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [77 x i8] c"%c: CTR mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c: CTR mode DECRYPT - Match\0A\00", align 1
@ccm_key = internal global [16 x i8] c"\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF", align 1, !dbg !327
@ccm_data = internal global [23 x i8] c"\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E", align 1, !dbg !329
@ccm_hdr = internal global [8 x i8] c"\00\01\02\03\04\05\06\07", align 1, !dbg !334
@ccm_nonce = internal global [13 x i8] c"\00\00\00\03\02\01\00\A0\A1\A2\A3\A4\A5", align 1, !dbg !339
@.str.24 = private unnamed_addr constant [31 x i8] c"%c: CCM mode ENCRYPT - Failed\0A\00", align 1
@ccm_expected = internal constant [31 x i8] c"X\8C\97\9Aa\C6c\D2\F0f\D0\C2\C0\F9\89\80m_ka\DA\C3\84\17\E8\D1,\FD\F9&\E0", align 1, !dbg !344
@.str.25 = private unnamed_addr constant [75 x i8] c"%c: CCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"%c: CCM mode ENCRYPT - Match\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"%c: CCM mode DECRYPT - Failed\0A\00", align 1
@.str.28 = private unnamed_addr constant [77 x i8] c"%c: CCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%c: CCM mode DECRYPT - Match\0A\00", align 1
@gcm_key = internal global [16 x i8] c"\07\1B\11;\0C\A7C\FE\CC\CF=\05\1Fss\82", align 1, !dbg !349
@gcm_data = internal global [42 x i8] c"\08\00\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./01234\00\04", align 1, !dbg !351
@gcm_hdr = internal global [20 x i8] c"\E2\01\06\D7\CD\0D\F0v\1E\8D\CD=\88\E5L*v\D4W\ED", align 1, !dbg !356
@gcm_nonce = internal global [12 x i8] c"\F0v\1E\8D\CD=\00\01v\D4W\ED", align 1, !dbg !361
@.str.30 = private unnamed_addr constant [31 x i8] c"%c: GCM mode ENCRYPT - Failed\0A\00", align 1
@gcm_expected = internal constant [58 x i8] c"\13\B4\C7+8\9D\C5\01\8Er\A1q\DD\85\A5\D3u\22t\D3\A0\19\FB\CA\ED\09\A4%\CD\9B.\1C\9Br\EE\E7\C9\DE}R\B3\F3\D6\A5(OJm?\E2*]l+\96\04\94\C3", align 1, !dbg !366
@.str.31 = private unnamed_addr constant [75 x i8] c"%c: GCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"%c: GCM mode ENCRYPT - Match\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c: GCM mode DECRYPT - Failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [77 x i8] c"%c: GCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"%c: GCM mode DECRYPT - Match\0A\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%c: %s pseudo device not found\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ECB Mode\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"CBC Mode\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"CTR Mode\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"CCM Mode\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"GCM Mode\00", align 1
@__const.main.modes = private unnamed_addr constant [6 x %struct.mode_test] [%struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), void (%struct.device*)* @ecb_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), void (%struct.device*)* @cbc_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), void (%struct.device*)* @ctr_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), void (%struct.device*)* @ccm_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), void (%struct.device*)* @gcm_mode }, %struct.mode_test zeroinitializer], align 4
@.str.43 = private unnamed_addr constant [22 x i8] c"%c: Incompatible h/w\0A\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%c: Cipher Sample\0A\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"Was waiting for: \0A\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"0x%02x \00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"\0A But got:\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !377
@.str.1.52 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !401
@.str.57 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !412
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !456
@.str.63 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.65 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.66 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.64 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.68 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.69 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.67 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@inv_sbox = internal unnamed_addr constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\\\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 1, !dbg !485
@__const.tc_aes128_set_encrypt_key.rconst = private unnamed_addr constant [11 x i32] [i32 0, i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 4
@sbox = internal unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\\\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 1, !dbg !505
@.str.74 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.75 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.76 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.77 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.109 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.104 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.105 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.106 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.107 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.108 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.99 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.100 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.93 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.101 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.102 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.103 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.98 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.94 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.95 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.96 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.97 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.84 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.85 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.86 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22.87 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.88 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24.89 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26.83 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27.82 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.80 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29.81 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !517
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.ctr_params { i32 101384192 } }], align 4, !dbg !664
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !523
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !673
@.str.121 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !709
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), %struct.ctr_params { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i32 0, i32 0), %struct.ctr_params { i32 285933600 } }], align 4, !dbg !719
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !724
@.str.137 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !744
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !914
@.str.139 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !875
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !860
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.139, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !833
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !849
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !877
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !891
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !893
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !895
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !897
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !899
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !901
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !903
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !905
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !907
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !909
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !919
@.str.141 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !952
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1049
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1038
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1090
@.str.150 = private unnamed_addr constant [10 x i8] c"tinycrypt\00", align 1
@log_const_tinycrypt = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150, i32 0, i32 0), i8 4 }, section ".log_const_tinycrypt", align 4, !dbg !1156
@__devicehdl_crypto_tinycrypt = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !947
@.str.1.152 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@crypto_enc_funcs = internal global %struct.crypto_driver_api { i32 (%struct.device*)* @tc_query_caps, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)* @tc_session_setup, i32 (%struct.device*, %struct.cipher_ctx*)* @tc_session_free, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)* null, i32 (%struct.device*, %struct.hash_ctx*, i32)* null, i32 (%struct.device*, %struct.hash_ctx*)* null, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* null }, align 4, !dbg !1194
@__devstate_crypto_tinycrypt = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1192
@__device_crypto_tinycrypt = internal constant %struct.device { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.152, i32 0, i32 0), i8* null, i8* bitcast (%struct.crypto_driver_api* @crypto_enc_funcs to i8*), %struct.device_state* @__devstate_crypto_tinycrypt, i8* null, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_crypto_tinycrypt, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !1165
@__init___device_crypto_tinycrypt = internal constant %struct.init_entry { i32 (%struct.device*)* @tc_shim_init, %struct.device* @__device_crypto_tinycrypt }, section ".z_init_POST_KERNEL90_", align 4, !dbg !1181
@.str.2.153 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported algo\0A\00", align 1
@.str.3.154 = private unnamed_addr constant [40 x i8] c"%c: Async not supported by this driver\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [34 x i8] c"%c: TC Shim Unsupported key size\0A\00", align 1
@.str.5.156 = private unnamed_addr constant [44 x i8] c"%c: Tinycrypt supports only 32 bit counter\0A\00", align 1
@.str.6.157 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported mode\0A\00", align 1
@.str.7.158 = private unnamed_addr constant [30 x i8] c"%c: Max sessions in progress\0A\00", align 1
@tc_driver_state = internal global [2 x %struct.tc_shim_drv_state] zeroinitializer, align 4, !dbg !1322
@.str.8.159 = private unnamed_addr constant [38 x i8] c"%c: TC internal error in setting key\0A\00", align 1
@.str.9.168 = private unnamed_addr constant [45 x i8] c"%c: TC internal error during CBC encryption\0A\00", align 1
@.str.10.167 = private unnamed_addr constant [37 x i8] c"%c: TC internal error during CTR OP\0A\00", align 1
@.str.11.165 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM encryption config\0A\00", align 1
@.str.12.166 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM Encryption OP\0A\00", align 1
@.str.13.163 = private unnamed_addr constant [43 x i8] c"%c: TC needs contiguous iv and ciphertext\0A\00", align 1
@.str.14.164 = private unnamed_addr constant [50 x i8] c"%c: Func TC internal error during CBC decryption\0A\00", align 1
@.str.15.160 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM decryption config\0A\00", align 1
@.str.16.161 = private unnamed_addr constant [51 x i8] c"%c: TC needs contiguous hash  at the end of inbuf\0A\00", align 1
@.str.17.162 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM decryption OP\0A\00", align 1
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !939
@.str.169 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1338
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1617
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1587
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1573
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1515
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !937
@.str.1.170 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1619
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1591
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1589
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1529
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !935
@.str.2.171 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1632
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1595
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1593
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1538
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !933
@.str.3.172 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1634
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1599
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1597
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1547
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !931
@.str.4.173 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1636
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1603
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1601
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1553
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !929
@.str.5.174 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1638
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1607
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1605
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1559
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !927
@.str.6.175 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1640
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1611
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1609
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1565
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !925
@.str.7.176 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1642
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1615
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1613
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1571
@.str.180 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.180, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1644
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !945
@.str.1.183 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47 }, align 4, !dbg !1816
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1871
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1810
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1873
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.183, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1789
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1791
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !943
@.str.2.186 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1879
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1812
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1889
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.186, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1800
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1802
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !941
@.str.3.187 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50 }, align 4, !dbg !1891
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1814
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1901
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.187, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1806
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1808
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1860
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1863
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1865
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1868
@.str.4.185 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.5.190 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.6.192 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.7.193 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.141, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1022
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1881
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1883
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1885
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1887
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1893
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1895
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1897
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1899
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.8 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1908
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2017
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2019
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2015
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1986
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2021
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.169, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1513
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.170, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1527
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.171, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1536
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.172, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1545
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.173, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1551
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.174, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1557
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.175, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1563
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.176, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1569
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2111
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2153
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2156
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2160
@.str.230 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.234 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.235 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.236 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.240 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.241 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.242 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.243 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.244 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.239 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.238 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.240, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.241, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.242, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.243, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.244, i32 0, i32 0)], align 4
@.str.246 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2167
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2390
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2376
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2385
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2397
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2402
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.255 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.262, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.263, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.264, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.265, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.266, i32 0, i32 0)], align 4, !dbg !2430
@.str.260 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.261 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.262 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.263 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.264 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.265 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.259 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.266 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2542
@.str.8.258 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2555
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2663
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2666
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2668
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2395
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2387
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2670
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2706
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2254
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2704
@.str.319 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3324 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3382, !srcloc !3385
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3386, !srcloc !3387
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3392, !srcloc !3393
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3394, !srcloc !3395
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3396, !srcloc !3397
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3398, !srcloc !3399
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3400, !srcloc !3401
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3402, !srcloc !3403
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3404, !srcloc !3405
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3406, !srcloc !3407
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3408, !srcloc !3409
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3410, !srcloc !3411
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3412, !srcloc !3413
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3414, !srcloc !3415
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3416, !srcloc !3417
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3418, !srcloc !3419
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3420, !srcloc !3421
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3422, !srcloc !3423
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3424, !srcloc !3425
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3426, !srcloc !3427
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3428, !srcloc !3429
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3430, !srcloc !3431
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3432, !srcloc !3433
  ret void, !dbg !3434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @validate_hw_compatibility(%struct.device* noundef %0) local_unnamed_addr #1 !dbg !3437 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3439, metadata !DIExpression()), !dbg !3441
  call void @llvm.dbg.value(metadata i32 0, metadata !3440, metadata !DIExpression()), !dbg !3441
  %2 = tail call fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) #26, !dbg !3442
  call void @llvm.dbg.value(metadata i32 %2, metadata !3440, metadata !DIExpression()), !dbg !3441
  %3 = and i32 %2, 2, !dbg !3443
  %4 = icmp eq i32 %3, 0, !dbg !3445
  br i1 %4, label %5, label %8, !dbg !3446

5:                                                ; preds = %1
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3447
  %7 = zext i8 %6 to i32, !dbg !3447
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7) #27, !dbg !3447
  br label %21, !dbg !3453

8:                                                ; preds = %1
  %9 = and i32 %2, 32, !dbg !3454
  %10 = icmp eq i32 %9, 0, !dbg !3456
  br i1 %10, label %11, label %14, !dbg !3457

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3458
  %13 = zext i8 %12 to i32, !dbg !3458
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.2, i32 0, i32 0), i32 noundef %13) #27, !dbg !3458
  br label %21, !dbg !3464

14:                                               ; preds = %8
  %15 = and i32 %2, 16, !dbg !3465
  %16 = icmp eq i32 %15, 0, !dbg !3467
  br i1 %16, label %17, label %20, !dbg !3468

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3469
  %19 = zext i8 %18 to i32, !dbg !3469
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.3, i32 0, i32 0), i32 noundef %19) #27, !dbg !3469
  br label %21, !dbg !3475

20:                                               ; preds = %14
  store i32 50, i32* @cap_flags, align 4, !dbg !3476
  br label %21, !dbg !3477

21:                                               ; preds = %20, %17, %11, %5
  %22 = phi i32 [ -1, %5 ], [ -1, %11 ], [ -1, %17 ], [ 0, %20 ], !dbg !3441
  ret i32 %22, !dbg !3478
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) unnamed_addr #1 !dbg !3479 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3481, metadata !DIExpression()), !dbg !3484
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3485
  %3 = bitcast i8** %2 to %struct.crypto_driver_api**, !dbg !3485
  %4 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %3, align 4, !dbg !3485
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %4, metadata !3482, metadata !DIExpression()), !dbg !3484
  %5 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %4, i32 0, i32 0, !dbg !3486
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !3486
  %7 = tail call i32 %6(%struct.device* noundef %0) #27, !dbg !3487
  call void @llvm.dbg.value(metadata i32 %7, metadata !3483, metadata !DIExpression()), !dbg !3484
  ret i32 %7, !dbg !3488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !3489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3494, metadata !DIExpression()), !dbg !3495
  %2 = add i32 %0, -1, !dbg !3496
  %3 = icmp ult i32 %2, 3, !dbg !3496
  %4 = trunc i32 %2 to i24, !dbg !3496
  %5 = shl i24 %4, 3, !dbg !3496
  %6 = lshr i24 4806469, %5, !dbg !3496
  %7 = trunc i24 %6 to i8, !dbg !3496
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3496
  ret i8 %8, !dbg !3497
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ecb_mode(%struct.device* noundef %0) #1 !dbg !3498 {
  %2 = alloca [16 x i8], align 1
  %3 = alloca [16 x i8], align 1
  %4 = alloca [16 x i8], align 1
  %5 = alloca [16 x i8], align 1
  %6 = alloca [16 x i8], align 1
  %7 = alloca %struct.cipher_ctx, align 4
  %8 = alloca %struct.cipher_pkt, align 4
  %9 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3500, metadata !DIExpression()), !dbg !3510
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !3511
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3511
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !3501, metadata !DIExpression()), !dbg !3512
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %10, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_key, i32 0, i32 0), i32 16, i1 false), !dbg !3512
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0, !dbg !3513
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3513
  call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !3502, metadata !DIExpression()), !dbg !3514
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %11, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_plaintext, i32 0, i32 0), i32 16, i1 false), !dbg !3514
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !3515
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3515
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !3503, metadata !DIExpression()), !dbg !3516
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %12, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_ciphertext, i32 0, i32 0), i32 16, i1 false), !dbg !3516
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0, !dbg !3517
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3517
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !3504, metadata !DIExpression()), !dbg !3518
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %13, i8 0, i32 16, i1 false), !dbg !3518
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3519
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3519
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3505, metadata !DIExpression()), !dbg !3520
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %14, i8 0, i32 16, i1 false), !dbg !3520
  %15 = bitcast %struct.cipher_ctx* %7 to i8*, !dbg !3521
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3521
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %7, metadata !3506, metadata !DIExpression()), !dbg !3522
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %15, i8 0, i64 28, i1 false), !dbg !3522
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 1, i32 0, !dbg !3523
  store i8* %10, i8** %16, align 4, !dbg !3523
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 6, !dbg !3524
  store i16 16, i16* %17, align 4, !dbg !3524
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 7, !dbg !3524
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3525
  %20 = trunc i32 %19 to i16, !dbg !3525
  store i16 %20, i16* %18, align 2, !dbg !3524
  %21 = bitcast %struct.cipher_pkt* %8 to i8*, !dbg !3526
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3526
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %8, metadata !3507, metadata !DIExpression()), !dbg !3527
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 0, !dbg !3528
  store i8* %11, i8** %22, align 4, !dbg !3528
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 1, !dbg !3528
  store i32 16, i32* %23, align 4, !dbg !3528
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 2, !dbg !3528
  store i8* %13, i8** %24, align 4, !dbg !3528
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 3, !dbg !3528
  store i32 16, i32* %25, align 4, !dbg !3528
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 4, !dbg !3528
  store i32 0, i32* %26, align 4, !dbg !3528
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 5, !dbg !3528
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3528
  %28 = bitcast %struct.cipher_pkt* %9 to i8*, !dbg !3529
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3529
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %9, metadata !3508, metadata !DIExpression()), !dbg !3530
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 0, !dbg !3531
  store i8* %13, i8** %29, align 4, !dbg !3531
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 1, !dbg !3531
  store i32 16, i32* %30, align 4, !dbg !3531
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 2, !dbg !3531
  store i8* %14, i8** %31, align 4, !dbg !3531
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 3, !dbg !3531
  store i32 16, i32* %32, align 4, !dbg !3531
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 4, !dbg !3531
  store i32 0, i32* %33, align 4, !dbg !3531
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 5, !dbg !3531
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3531
  %35 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 1) #26, !dbg !3532
  %36 = icmp eq i32 %35, 0, !dbg !3532
  br i1 %36, label %37, label %74, !dbg !3534

37:                                               ; preds = %1
  %38 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %8) #26, !dbg !3535
  %39 = icmp eq i32 %38, 0, !dbg !3535
  br i1 %39, label %43, label %40, !dbg !3537

40:                                               ; preds = %37
  %41 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3538
  %42 = zext i8 %41 to i32, !dbg !3538
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 noundef %42) #27, !dbg !3538
  br label %73, !dbg !3544

43:                                               ; preds = %37
  %44 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3545
  %45 = zext i8 %44 to i32, !dbg !3545
  %46 = load i32, i32* %26, align 4, !dbg !3545
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %45, i32 noundef %46) #27, !dbg !3545
  %47 = load i8*, i8** %24, align 4, !dbg !3550
  %48 = call i32 @memcmp(i8* noundef %47, i8* noundef nonnull %12, i32 noundef 16) #27, !dbg !3552
  %49 = icmp eq i32 %48, 0, !dbg !3552
  br i1 %49, label %54, label %50, !dbg !3553

50:                                               ; preds = %43
  %51 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3554
  %52 = zext i8 %51 to i32, !dbg !3554
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i32 0, i32 0), i32 noundef %52) #27, !dbg !3554
  %53 = load i8*, i8** %24, align 4, !dbg !3560
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %12, i8* noundef %53, i32 noundef 16) #26, !dbg !3561
  br label %73, !dbg !3562

54:                                               ; preds = %43
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 noundef %45) #27, !dbg !3563
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3568
  %55 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 0) #26, !dbg !3569
  %56 = icmp eq i32 %55, 0, !dbg !3569
  br i1 %56, label %57, label %74, !dbg !3571

57:                                               ; preds = %54
  %58 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %9) #26, !dbg !3572
  %59 = icmp eq i32 %58, 0, !dbg !3572
  br i1 %59, label %63, label %60, !dbg !3574

60:                                               ; preds = %57
  %61 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3575
  %62 = zext i8 %61 to i32, !dbg !3575
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i32 noundef %62) #27, !dbg !3575
  br label %73, !dbg !3581

63:                                               ; preds = %57
  %64 = load i32, i32* %33, align 4, !dbg !3582
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %45, i32 noundef %64) #27, !dbg !3582
  %65 = load i8*, i8** %31, align 4, !dbg !3587
  %66 = call i32 @memcmp(i8* noundef %65, i8* noundef nonnull %11, i32 noundef 16) #27, !dbg !3589
  %67 = icmp eq i32 %66, 0, !dbg !3589
  br i1 %67, label %72, label %68, !dbg !3590

68:                                               ; preds = %63
  %69 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3591
  %70 = zext i8 %69 to i32, !dbg !3591
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.10, i32 0, i32 0), i32 noundef %70) #27, !dbg !3591
  %71 = load i8*, i8** %31, align 4, !dbg !3597
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %11, i8* noundef %71, i32 noundef 16) #26, !dbg !3598
  br label %73, !dbg !3599

72:                                               ; preds = %63
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 noundef %45) #27, !dbg !3600
  br label %73, !dbg !3605

73:                                               ; preds = %72, %68, %60, %50, %40
  call void @llvm.dbg.label(metadata !3509), !dbg !3606
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3607
  br label %74, !dbg !3608

74:                                               ; preds = %54, %1, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3608
  ret void, !dbg !3608
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3609 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3611, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3612, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i32 1, metadata !3613, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i32 %2, metadata !3614, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i32 %3, metadata !3615, metadata !DIExpression()), !dbg !3618
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3619
  %6 = bitcast i8** %5 to %struct.crypto_driver_api**, !dbg !3619
  %7 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %6, align 4, !dbg !3619
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %7, metadata !3616, metadata !DIExpression()), !dbg !3618
  %8 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 2, !dbg !3620
  store %struct.device* %0, %struct.device** %8, align 4, !dbg !3621
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !3622
  store i32 %2, i32* %9, align 4, !dbg !3623
  call void @llvm.dbg.value(metadata i16 undef, metadata !3617, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !3618
  call void @llvm.dbg.value(metadata i16 undef, metadata !3617, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_and, DW_OP_stack_value)), !dbg !3618
  call void @llvm.dbg.value(metadata i16 undef, metadata !3617, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 96, DW_OP_and, DW_OP_stack_value)), !dbg !3618
  %10 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %7, i32 0, i32 1, !dbg !3624
  %11 = load i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)** %10, align 4, !dbg !3624
  %12 = tail call i32 %11(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef 1, i32 noundef %2, i32 noundef %3) #27, !dbg !3625
  ret i32 %12, !dbg !3626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) unnamed_addr #1 !dbg !3627 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3629, metadata !DIExpression()), !dbg !3631
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3630, metadata !DIExpression()), !dbg !3631
  %3 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3632
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %3, align 4, !dbg !3633
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, i32 0, !dbg !3634
  %5 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)** %4, align 4, !dbg !3634
  %6 = tail call i32 %5(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) #27, !dbg !3635
  ret i32 %6, !dbg !3636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_buffer_comparison(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #1 !dbg !3637 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3641, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i8* %1, metadata !3642, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i32 %2, metadata !3643, metadata !DIExpression()), !dbg !3646
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0)) #27, !dbg !3647
  call void @llvm.dbg.value(metadata i32 0, metadata !3644, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i32 1, metadata !3645, metadata !DIExpression()), !dbg !3646
  %4 = icmp eq i32 %2, 0, !dbg !3648
  br i1 %4, label %5, label %6, !dbg !3651

5:                                                ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3652
  call void @llvm.dbg.value(metadata i32 0, metadata !3644, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i32 1, metadata !3645, metadata !DIExpression()), !dbg !3646
  br label %33, !dbg !3653

6:                                                ; preds = %3, %14
  %7 = phi i32 [ %17, %14 ], [ 1, %3 ]
  %8 = phi i32 [ %16, %14 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3645, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i32 %8, metadata !3644, metadata !DIExpression()), !dbg !3646
  %9 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !3655
  %10 = load i8, i8* %9, align 1, !dbg !3655
  %11 = zext i8 %10 to i32, !dbg !3655
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %11) #27, !dbg !3657
  %12 = icmp eq i32 %7, 10, !dbg !3658
  br i1 %12, label %13, label %14, !dbg !3660

13:                                               ; preds = %6
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3661
  call void @llvm.dbg.value(metadata i32 0, metadata !3645, metadata !DIExpression()), !dbg !3646
  br label %14, !dbg !3663

14:                                               ; preds = %6, %13
  %15 = phi i32 [ 0, %13 ], [ %7, %6 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %15, metadata !3645, metadata !DIExpression()), !dbg !3646
  %16 = add nuw i32 %8, 1, !dbg !3665
  call void @llvm.dbg.value(metadata i32 %16, metadata !3644, metadata !DIExpression()), !dbg !3646
  %17 = add nsw i32 %15, 1, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %17, metadata !3645, metadata !DIExpression()), !dbg !3646
  %18 = icmp eq i32 %16, %2, !dbg !3648
  br i1 %18, label %19, label %6, !dbg !3651, !llvm.loop !3667

19:                                               ; preds = %14
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3652
  call void @llvm.dbg.value(metadata i32 0, metadata !3644, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i32 1, metadata !3645, metadata !DIExpression()), !dbg !3646
  br i1 %4, label %33, label %20, !dbg !3653

20:                                               ; preds = %19, %28
  %21 = phi i32 [ %31, %28 ], [ 1, %19 ]
  %22 = phi i32 [ %30, %28 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3645, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i32 %22, metadata !3644, metadata !DIExpression()), !dbg !3646
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !3669
  %24 = load i8, i8* %23, align 1, !dbg !3669
  %25 = zext i8 %24 to i32, !dbg !3669
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %25) #27, !dbg !3672
  %26 = icmp eq i32 %21, 10, !dbg !3673
  br i1 %26, label %27, label %28, !dbg !3675

27:                                               ; preds = %20
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3676
  call void @llvm.dbg.value(metadata i32 0, metadata !3645, metadata !DIExpression()), !dbg !3646
  br label %28, !dbg !3678

28:                                               ; preds = %20, %27
  %29 = phi i32 [ 0, %27 ], [ %21, %20 ], !dbg !3679
  call void @llvm.dbg.value(metadata i32 %29, metadata !3645, metadata !DIExpression()), !dbg !3646
  %30 = add nuw i32 %22, 1, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %30, metadata !3644, metadata !DIExpression()), !dbg !3646
  %31 = add nsw i32 %29, 1, !dbg !3681
  call void @llvm.dbg.value(metadata i32 %31, metadata !3645, metadata !DIExpression()), !dbg !3646
  %32 = icmp eq i32 %30, %2, !dbg !3682
  br i1 %32, label %33, label %20, !dbg !3653, !llvm.loop !3683

33:                                               ; preds = %28, %5, %19
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3685
  ret void, !dbg !3686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) unnamed_addr #1 !dbg !3687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3689, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3690, metadata !DIExpression()), !dbg !3692
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3693
  %4 = bitcast i8** %3 to %struct.crypto_driver_api**, !dbg !3693
  %5 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %4, align 4, !dbg !3693
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %5, metadata !3691, metadata !DIExpression()), !dbg !3692
  %6 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %5, i32 0, i32 2, !dbg !3694
  %7 = load i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, %struct.cipher_ctx*)** %6, align 4, !dbg !3694
  %8 = tail call i32 %7(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) #27, !dbg !3695
  ret void, !dbg !3696
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @cbc_mode(%struct.device* noundef %0) #1 !dbg !293 {
  %2 = alloca [80 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 4
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !298, metadata !DIExpression()), !dbg !3697
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0, !dbg !3698
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3698
  call void @llvm.dbg.declare(metadata [80 x i8]* %2, metadata !299, metadata !DIExpression()), !dbg !3699
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(80) %7, i8 0, i32 80, i1 false), !dbg !3699
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3700
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3700
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !303, metadata !DIExpression()), !dbg !3701
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3701
  %9 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3702
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3702
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !307, metadata !DIExpression()), !dbg !3703
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %9, i8 0, i64 28, i1 false), !dbg !3703
  %10 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3704
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %10, align 4, !dbg !3704
  %11 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3705
  store i16 16, i16* %11, align 4, !dbg !3705
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3705
  %13 = load i32, i32* @cap_flags, align 4, !dbg !3706
  %14 = trunc i32 %13 to i16, !dbg !3706
  store i16 %14, i16* %12, align 2, !dbg !3705
  %15 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3707
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3707
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !308, metadata !DIExpression()), !dbg !3708
  %16 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3709
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %16, align 4, !dbg !3709
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3709
  store i32 64, i32* %17, align 4, !dbg !3709
  %18 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3709
  store i8* %7, i8** %18, align 4, !dbg !3709
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3709
  store i32 80, i32* %19, align 4, !dbg !3709
  %20 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3709
  store i32 0, i32* %20, align 4, !dbg !3709
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3709
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %21, align 4, !dbg !3709
  %22 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3710
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3710
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !309, metadata !DIExpression()), !dbg !3711
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3712
  store i8* %7, i8** %23, align 4, !dbg !3712
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3712
  store i32 80, i32* %24, align 4, !dbg !3712
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3712
  store i8* %8, i8** %25, align 4, !dbg !3712
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3712
  store i32 64, i32* %26, align 4, !dbg !3712
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3712
  store i32 0, i32* %27, align 4, !dbg !3712
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3712
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %28, align 4, !dbg !3712
  %29 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 1) #26, !dbg !3713
  %30 = icmp eq i32 %29, 0, !dbg !3713
  br i1 %30, label %31, label %68, !dbg !3715

31:                                               ; preds = %1
  %32 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_mode.iv, i32 0, i32 0)) #26, !dbg !3716
  %33 = icmp eq i32 %32, 0, !dbg !3716
  br i1 %33, label %37, label %34, !dbg !3718

34:                                               ; preds = %31
  %35 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3719
  %36 = zext i8 %35 to i32, !dbg !3719
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i32 noundef %36) #27, !dbg !3719
  br label %67, !dbg !3725

37:                                               ; preds = %31
  %38 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3726
  %39 = zext i8 %38 to i32, !dbg !3726
  %40 = load i32, i32* %20, align 4, !dbg !3726
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %39, i32 noundef %40) #27, !dbg !3726
  %41 = load i8*, i8** %18, align 4, !dbg !3731
  %42 = call i32 @memcmp(i8* noundef %41, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i32 noundef 80) #27, !dbg !3733
  %43 = icmp eq i32 %42, 0, !dbg !3733
  br i1 %43, label %48, label %44, !dbg !3734

44:                                               ; preds = %37
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3735
  %46 = zext i8 %45 to i32, !dbg !3735
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i32 0, i32 0), i32 noundef %46) #27, !dbg !3735
  %47 = load i8*, i8** %18, align 4, !dbg !3741
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i8* noundef %47, i32 noundef 80) #26, !dbg !3742
  br label %67, !dbg !3743

48:                                               ; preds = %37
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef %39) #27, !dbg !3744
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3749
  %49 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 0) #26, !dbg !3750
  %50 = icmp eq i32 %49, 0, !dbg !3750
  br i1 %50, label %51, label %68, !dbg !3752

51:                                               ; preds = %48
  %52 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !3753
  %53 = icmp eq i32 %52, 0, !dbg !3753
  br i1 %53, label %57, label %54, !dbg !3755

54:                                               ; preds = %51
  %55 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3756
  %56 = zext i8 %55 to i32, !dbg !3756
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %56) #27, !dbg !3756
  br label %67, !dbg !3762

57:                                               ; preds = %51
  %58 = load i32, i32* %27, align 4, !dbg !3763
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %39, i32 noundef %58) #27, !dbg !3763
  %59 = load i8*, i8** %25, align 4, !dbg !3768
  %60 = call i32 @memcmp(i8* noundef %59, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3770
  %61 = icmp eq i32 %60, 0, !dbg !3770
  br i1 %61, label %66, label %62, !dbg !3771

62:                                               ; preds = %57
  %63 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3772
  %64 = zext i8 %63 to i32, !dbg !3772
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.16, i32 0, i32 0), i32 noundef %64) #27, !dbg !3772
  %65 = load i8*, i8** %25, align 4, !dbg !3778
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %65, i32 noundef 64) #26, !dbg !3779
  br label %67, !dbg !3780

66:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), i32 noundef %39) #27, !dbg !3781
  br label %67, !dbg !3786

67:                                               ; preds = %66, %62, %54, %44, %34
  call void @llvm.dbg.label(metadata !310), !dbg !3787
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3788
  br label %68, !dbg !3789

68:                                               ; preds = %48, %1, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3789
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3789
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3789
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3789
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3789
  ret void, !dbg !3789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3790 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3792, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3793, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i8* %2, metadata !3794, metadata !DIExpression()), !dbg !3795
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3796
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3797
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3798
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3798
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3798
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3799
  ret i32 %8, !dbg !3800
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ctr_mode(%struct.device* noundef %0) #1 !dbg !3801 {
  %2 = alloca [64 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  %7 = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3803, metadata !DIExpression()), !dbg !3811
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0, !dbg !3812
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3812
  call void @llvm.dbg.declare(metadata [64 x i8]* %2, metadata !3804, metadata !DIExpression()), !dbg !3813
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3813
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3814
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3814
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !3805, metadata !DIExpression()), !dbg !3815
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %9, i8 0, i32 64, i1 false), !dbg !3815
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3816
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3816
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3806, metadata !DIExpression()), !dbg !3817
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3818
  store i64 0, i64* %11, align 8, !dbg !3818
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3819
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %12, align 8, !dbg !3819
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3818
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3818
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3818
  store i8* null, i8** %14, align 8, !dbg !3818
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3818
  store i8* null, i8** %15, align 4, !dbg !3818
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, i32 0, i32 0, !dbg !3820
  store i32 32, i32* %16, align 8, !dbg !3820
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3818
  store i16 16, i16* %17, align 4, !dbg !3818
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3818
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3821
  %20 = trunc i32 %19 to i16, !dbg !3821
  store i16 %20, i16* %18, align 2, !dbg !3818
  %21 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3822
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3822
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3807, metadata !DIExpression()), !dbg !3823
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3824
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %22, align 4, !dbg !3824
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3824
  store i32 64, i32* %23, align 4, !dbg !3824
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3824
  store i8* %8, i8** %24, align 4, !dbg !3824
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3824
  store i32 64, i32* %25, align 4, !dbg !3824
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3824
  store i32 0, i32* %26, align 4, !dbg !3824
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3824
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3824
  %28 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3825
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3825
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !3808, metadata !DIExpression()), !dbg !3826
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3827
  store i8* %8, i8** %29, align 4, !dbg !3827
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3827
  store i32 64, i32* %30, align 4, !dbg !3827
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3827
  store i8* %9, i8** %31, align 4, !dbg !3827
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3827
  store i32 64, i32* %32, align 4, !dbg !3827
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3827
  store i32 0, i32* %33, align 4, !dbg !3827
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3827
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3827
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i32 0, i32 0, !dbg !3828
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3828
  call void @llvm.dbg.declare(metadata [12 x i8]* %7, metadata !3809, metadata !DIExpression()), !dbg !3829
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(12) %35, i8* noundef nonnull align 1 dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @__const.ctr_mode.iv, i32 0, i32 0), i32 12, i1 false), !dbg !3829
  %36 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 1) #26, !dbg !3830
  %37 = icmp eq i32 %36, 0, !dbg !3830
  br i1 %37, label %38, label %75, !dbg !3832

38:                                               ; preds = %1
  %39 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef nonnull %35) #26, !dbg !3833
  %40 = icmp eq i32 %39, 0, !dbg !3833
  br i1 %40, label %44, label %41, !dbg !3835

41:                                               ; preds = %38
  %42 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3836
  %43 = zext i8 %42 to i32, !dbg !3836
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), i32 noundef %43) #27, !dbg !3836
  br label %74, !dbg !3842

44:                                               ; preds = %38
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3843
  %46 = zext i8 %45 to i32, !dbg !3843
  %47 = load i32, i32* %26, align 4, !dbg !3843
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %46, i32 noundef %47) #27, !dbg !3843
  %48 = load i8*, i8** %24, align 4, !dbg !3848
  %49 = call i32 @memcmp(i8* noundef %48, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3850
  %50 = icmp eq i32 %49, 0, !dbg !3850
  br i1 %50, label %55, label %51, !dbg !3851

51:                                               ; preds = %44
  %52 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3852
  %53 = zext i8 %52 to i32, !dbg !3852
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i32 0, i32 0), i32 noundef %53) #27, !dbg !3852
  %54 = load i8*, i8** %24, align 4, !dbg !3858
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i8* noundef %54, i32 noundef 64) #26, !dbg !3859
  br label %74, !dbg !3860

55:                                               ; preds = %44
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i32 0, i32 0), i32 noundef %46) #27, !dbg !3861
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3866
  %56 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 0) #26, !dbg !3867
  %57 = icmp eq i32 %56, 0, !dbg !3867
  br i1 %57, label %58, label %75, !dbg !3869

58:                                               ; preds = %55
  %59 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %35) #26, !dbg !3870
  %60 = icmp eq i32 %59, 0, !dbg !3870
  br i1 %60, label %64, label %61, !dbg !3872

61:                                               ; preds = %58
  %62 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3873
  %63 = zext i8 %62 to i32, !dbg !3873
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef %63) #27, !dbg !3873
  br label %74, !dbg !3879

64:                                               ; preds = %58
  %65 = load i32, i32* %33, align 4, !dbg !3880
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %46, i32 noundef %65) #27, !dbg !3880
  %66 = load i8*, i8** %31, align 4, !dbg !3885
  %67 = call i32 @memcmp(i8* noundef %66, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3887
  %68 = icmp eq i32 %67, 0, !dbg !3887
  br i1 %68, label %73, label %69, !dbg !3888

69:                                               ; preds = %64
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3889
  %71 = zext i8 %70 to i32, !dbg !3889
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.22, i32 0, i32 0), i32 noundef %71) #27, !dbg !3889
  %72 = load i8*, i8** %31, align 4, !dbg !3895
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %72, i32 noundef 64) #26, !dbg !3896
  br label %74, !dbg !3897

73:                                               ; preds = %64
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef %46) #27, !dbg !3898
  br label %74, !dbg !3903

74:                                               ; preds = %73, %69, %61, %51, %41
  call void @llvm.dbg.label(metadata !3810), !dbg !3904
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3905
  br label %75, !dbg !3906

75:                                               ; preds = %55, %1, %74
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3906
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3906
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3906
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3906
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3906
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3906
  ret void, !dbg !3906
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3907 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3909, metadata !DIExpression()), !dbg !3912
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3910, metadata !DIExpression()), !dbg !3912
  call void @llvm.dbg.value(metadata i8* %2, metadata !3911, metadata !DIExpression()), !dbg !3912
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3913
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3914
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3915
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3915
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3915
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3916
  ret i32 %8, !dbg !3917
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ccm_mode(%struct.device* noundef %0) #1 !dbg !3918 {
  %2 = alloca [50 x i8], align 1
  %3 = alloca [25 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3920, metadata !DIExpression()), !dbg !3934
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 0, !dbg !3935
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %8) #25, !dbg !3935
  call void @llvm.dbg.declare(metadata [50 x i8]* %2, metadata !3921, metadata !DIExpression()), !dbg !3936
  %9 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i32 0, i32 0, !dbg !3937
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %9) #25, !dbg !3937
  call void @llvm.dbg.declare(metadata [25 x i8]* %3, metadata !3925, metadata !DIExpression()), !dbg !3938
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3939
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3939
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3929, metadata !DIExpression()), !dbg !3940
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3941
  store i64 0, i64* %11, align 8, !dbg !3941
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3942
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ccm_key, i32 0, i32 0), i8** %12, align 8, !dbg !3942
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3941
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3941
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3941
  store i8* null, i8** %14, align 8, !dbg !3941
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3941
  store i8* null, i8** %15, align 4, !dbg !3941
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !3941
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !3943
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !3944
  store i16 8, i16* %18, align 8, !dbg !3944
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !3944
  store i16 13, i16* %19, align 2, !dbg !3944
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3941
  store i16 16, i16* %20, align 4, !dbg !3941
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3941
  %22 = load i32, i32* @cap_flags, align 4, !dbg !3945
  %23 = trunc i32 %22 to i16, !dbg !3945
  store i16 %23, i16* %21, align 2, !dbg !3941
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3946
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !3946
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3930, metadata !DIExpression()), !dbg !3947
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3948
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8** %25, align 4, !dbg !3948
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3948
  store i32 23, i32* %26, align 4, !dbg !3948
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3948
  store i8* %8, i8** %27, align 4, !dbg !3948
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3948
  store i32 50, i32* %28, align 4, !dbg !3948
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3948
  store i32 0, i32* %29, align 4, !dbg !3948
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3948
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !3948
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !3949
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !3949
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !3931, metadata !DIExpression()), !dbg !3950
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !3951
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !3951
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ccm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !3951
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !3951
  store i32 8, i32* %34, align 4, !dbg !3951
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !3951
  %36 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 23, !dbg !3952
  store i8* %36, i8** %35, align 4, !dbg !3951
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !3953
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !3953
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !3932, metadata !DIExpression()), !dbg !3954
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !3955
  store i8* %8, i8** %38, align 4, !dbg !3955
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !3955
  store i32 23, i32* %39, align 4, !dbg !3955
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !3955
  store i8* %9, i8** %40, align 4, !dbg !3955
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !3955
  store i32 25, i32* %41, align 4, !dbg !3955
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !3955
  store i32 0, i32* %42, align 4, !dbg !3955
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !3955
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !3955
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 1) #26, !dbg !3956
  %45 = icmp eq i32 %44, 0, !dbg !3956
  br i1 %45, label %46, label %83, !dbg !3958

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !3959
  %47 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3960
  %48 = icmp eq i32 %47, 0, !dbg !3960
  br i1 %48, label %52, label %49, !dbg !3962

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3963
  %51 = zext i8 %50 to i32, !dbg !3963
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef %51) #27, !dbg !3963
  br label %82, !dbg !3969

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3970
  %54 = zext i8 %53 to i32, !dbg !3970
  %55 = load i32, i32* %29, align 4, !dbg !3970
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !3970
  %56 = load i8*, i8** %27, align 4, !dbg !3975
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i32 noundef 31) #27, !dbg !3977
  %58 = icmp eq i32 %57, 0, !dbg !3977
  br i1 %58, label %63, label %59, !dbg !3978

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3979
  %61 = zext i8 %60 to i32, !dbg !3979
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.25, i32 0, i32 0), i32 noundef %61) #27, !dbg !3979
  %62 = load i8*, i8** %27, align 4, !dbg !3985
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 31) #26, !dbg !3986
  br label %82, !dbg !3987

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i32 noundef %54) #27, !dbg !3988
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3993
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 0) #26, !dbg !3994
  %65 = icmp eq i32 %64, 0, !dbg !3994
  br i1 %65, label %66, label %83, !dbg !3996

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !3997
  %67 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3998
  %68 = icmp eq i32 %67, 0, !dbg !3998
  br i1 %68, label %72, label %69, !dbg !4000

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4001
  %71 = zext i8 %70 to i32, !dbg !4001
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 noundef %71) #27, !dbg !4001
  br label %82, !dbg !4007

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4008
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !4008
  %74 = load i8*, i8** %40, align 4, !dbg !4013
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i32 noundef 23) #27, !dbg !4015
  %76 = icmp eq i32 %75, 0, !dbg !4015
  br i1 %76, label %81, label %77, !dbg !4016

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4017
  %79 = zext i8 %78 to i32, !dbg !4017
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.28, i32 0, i32 0), i32 noundef %79) #27, !dbg !4017
  %80 = load i8*, i8** %40, align 4, !dbg !4023
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 23) #26, !dbg !4024
  br label %82, !dbg !4025

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i32 noundef %54) #27, !dbg !4026
  br label %82, !dbg !4031

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !3933), !dbg !4032
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4033
  br label %83, !dbg !4034

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4034
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4034
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4034
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4034
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %9) #25, !dbg !4034
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %8) #25, !dbg !4034
  ret void, !dbg !4034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4035 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4037, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4038, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0), metadata !4039, metadata !DIExpression()), !dbg !4040
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4041
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4041
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4042
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4043
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4044
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4044
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4044
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0)) #27, !dbg !4045
  ret i32 %9, !dbg !4046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gcm_mode(%struct.device* noundef %0) #1 !dbg !4047 {
  %2 = alloca [60 x i8], align 1
  %3 = alloca [44 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4049, metadata !DIExpression()), !dbg !4061
  %8 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 0, !dbg !4062
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4062
  call void @llvm.dbg.declare(metadata [60 x i8]* %2, metadata !4050, metadata !DIExpression()), !dbg !4063
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(60) %8, i8 0, i32 60, i1 false), !dbg !4063
  %9 = getelementptr inbounds [44 x i8], [44 x i8]* %3, i32 0, i32 0, !dbg !4064
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4064
  call void @llvm.dbg.declare(metadata [44 x i8]* %3, metadata !4054, metadata !DIExpression()), !dbg !4065
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(44) %9, i8 0, i32 44, i1 false), !dbg !4065
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4066
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4066
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4056, metadata !DIExpression()), !dbg !4067
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4068
  store i64 0, i64* %11, align 8, !dbg !4068
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4069
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @gcm_key, i32 0, i32 0), i8** %12, align 8, !dbg !4069
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4068
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4068
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4068
  store i8* null, i8** %14, align 8, !dbg !4068
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4068
  store i8* null, i8** %15, align 4, !dbg !4068
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !4068
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !4070
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !4071
  store i16 16, i16* %18, align 8, !dbg !4071
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !4071
  store i16 12, i16* %19, align 2, !dbg !4071
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4068
  store i16 16, i16* %20, align 4, !dbg !4068
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4068
  %22 = load i32, i32* @cap_flags, align 4, !dbg !4072
  %23 = trunc i32 %22 to i16, !dbg !4072
  store i16 %23, i16* %21, align 2, !dbg !4068
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4073
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4073
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4057, metadata !DIExpression()), !dbg !4074
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4075
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8** %25, align 4, !dbg !4075
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4075
  store i32 42, i32* %26, align 4, !dbg !4075
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4075
  store i8* %8, i8** %27, align 4, !dbg !4075
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4075
  store i32 60, i32* %28, align 4, !dbg !4075
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4075
  store i32 0, i32* %29, align 4, !dbg !4075
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4075
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !4075
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !4076
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4076
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !4058, metadata !DIExpression()), !dbg !4077
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !4078
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !4078
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @gcm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !4078
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !4078
  store i32 20, i32* %34, align 4, !dbg !4078
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !4078
  %36 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 42, !dbg !4079
  store i8* %36, i8** %35, align 4, !dbg !4078
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !4080
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4080
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !4059, metadata !DIExpression()), !dbg !4081
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !4082
  store i8* %8, i8** %38, align 4, !dbg !4082
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !4082
  store i32 42, i32* %39, align 4, !dbg !4082
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !4082
  store i8* %9, i8** %40, align 4, !dbg !4082
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !4082
  store i32 44, i32* %41, align 4, !dbg !4082
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !4082
  store i32 0, i32* %42, align 4, !dbg !4082
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !4082
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !4082
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 1) #26, !dbg !4083
  %45 = icmp eq i32 %44, 0, !dbg !4083
  br i1 %45, label %46, label %83, !dbg !4085

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !4086
  %47 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4087
  %48 = icmp eq i32 %47, 0, !dbg !4087
  br i1 %48, label %52, label %49, !dbg !4089

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4090
  %51 = zext i8 %50 to i32, !dbg !4090
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef %51) #27, !dbg !4090
  br label %82, !dbg !4096

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4097
  %54 = zext i8 %53 to i32, !dbg !4097
  %55 = load i32, i32* %29, align 4, !dbg !4097
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !4097
  %56 = load i8*, i8** %27, align 4, !dbg !4102
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i32 noundef 58) #27, !dbg !4104
  %58 = icmp eq i32 %57, 0, !dbg !4104
  br i1 %58, label %63, label %59, !dbg !4105

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4106
  %61 = zext i8 %60 to i32, !dbg !4106
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.31, i32 0, i32 0), i32 noundef %61) #27, !dbg !4106
  %62 = load i8*, i8** %27, align 4, !dbg !4112
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 58) #26, !dbg !4113
  br label %82, !dbg !4114

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i32 noundef %54) #27, !dbg !4115
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4120
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 0) #26, !dbg !4121
  %65 = icmp eq i32 %64, 0, !dbg !4121
  br i1 %65, label %66, label %83, !dbg !4123

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4124
  %67 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4125
  %68 = icmp eq i32 %67, 0, !dbg !4125
  br i1 %68, label %72, label %69, !dbg !4127

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4128
  %71 = zext i8 %70 to i32, !dbg !4128
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef %71) #27, !dbg !4128
  br label %82, !dbg !4134

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4135
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !4135
  %74 = load i8*, i8** %40, align 4, !dbg !4140
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i32 noundef 42) #27, !dbg !4142
  %76 = icmp eq i32 %75, 0, !dbg !4142
  br i1 %76, label %81, label %77, !dbg !4143

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4144
  %79 = zext i8 %78 to i32, !dbg !4144
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.34, i32 0, i32 0), i32 noundef %79) #27, !dbg !4144
  %80 = load i8*, i8** %40, align 4, !dbg !4150
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 42) #26, !dbg !4151
  br label %82, !dbg !4152

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i32 noundef %54) #27, !dbg !4153
  br label %82, !dbg !4158

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !4060), !dbg !4159
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4160
  br label %83, !dbg !4161

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4161
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4161
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4161
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4161
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4161
  ret void, !dbg !4161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4162 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4164, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4165, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0), metadata !4166, metadata !DIExpression()), !dbg !4167
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4168
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4168
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4169
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4170
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4171
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4171
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4171
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0)) #27, !dbg !4172
  ret i32 %9, !dbg !4173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !4174 {
  %1 = tail call fastcc %struct.device* @device_get_binding() #26, !dbg !4186
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !4176, metadata !DIExpression()), !dbg !4187
  %2 = icmp eq %struct.device* %1, null, !dbg !4188
  br i1 %2, label %3, label %6, !dbg !4190

3:                                                ; preds = %0
  %4 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4191
  %5 = zext i8 %4 to i32, !dbg !4191
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), i32 noundef %5, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4191
  br label %23, !dbg !4197

6:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata [6 x %struct.mode_test]* @__const.main.modes, metadata !4177, metadata !DIExpression()), !dbg !4198
  %7 = tail call i32 @validate_hw_compatibility(%struct.device* noundef nonnull %1) #26, !dbg !4199
  %8 = icmp eq i32 %7, 0, !dbg !4199
  br i1 %8, label %12, label %9, !dbg !4201

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4202
  %11 = zext i8 %10 to i32, !dbg !4202
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i32 noundef %11) #27, !dbg !4202
  br label %23, !dbg !4208

12:                                               ; preds = %6
  %13 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4209
  %14 = zext i8 %13 to i32, !dbg !4209
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i32 noundef %14) #27, !dbg !4209
  call void @llvm.dbg.value(metadata i32 0, metadata !4185, metadata !DIExpression()), !dbg !4187
  br label %15, !dbg !4214

15:                                               ; preds = %12, %15
  %16 = phi i32 [ 0, %12 ], [ %21, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4185, metadata !DIExpression()), !dbg !4187
  %17 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 0, !dbg !4216
  %18 = load i8*, i8** %17, align 4, !dbg !4218
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 noundef %14, i8* noundef %18) #27, !dbg !4218
  %19 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 1, !dbg !4224
  %20 = load void (%struct.device*)*, void (%struct.device*)** %19, align 4, !dbg !4224
  tail call void %20(%struct.device* noundef nonnull %1) #27, !dbg !4225
  %21 = add nuw nsw i32 %16, 1, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %21, metadata !4185, metadata !DIExpression()), !dbg !4187
  %22 = icmp eq i32 %21, 5, !dbg !4214
  br i1 %22, label %23, label %15, !dbg !4214, !llvm.loop !4227

23:                                               ; preds = %15, %9, %3
  ret void, !dbg !4229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !4230 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), metadata !4235, metadata !DIExpression()), !dbg !4236
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4237, !srcloc !4239
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4240
  ret %struct.device* %1, !dbg !4241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4242 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4257, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %0, metadata !4253, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %1, metadata !4254, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %2, metadata !4255, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %3, metadata !4256, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %0, metadata !4258, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %0, metadata !4259, metadata !DIExpression()), !dbg !4319
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4320
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4320
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4262, metadata !DIExpression()), !dbg !4321
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4322
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4322
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4263, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.value(metadata i32 0, metadata !4264, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 0, metadata !4265, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 0, metadata !4266, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 -1, metadata !4267, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 0, metadata !4270, metadata !DIExpression()), !dbg !4319
  %12 = and i32 %2, 4, !dbg !4324
  %13 = icmp eq i32 %12, 0, !dbg !4325
  call void @llvm.dbg.value(metadata i1 %13, metadata !4271, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4319
  %14 = lshr i32 %2, 3, !dbg !4326
  %15 = and i32 %14, 7, !dbg !4326
  %16 = add nuw nsw i32 %15, 1, !dbg !4327
  call void @llvm.dbg.value(metadata i32 %16, metadata !4272, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 0, metadata !4273, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %0, metadata !4274, metadata !DIExpression()), !dbg !4319
  %17 = ptrtoint i8* %0 to i32, !dbg !4328
  %18 = and i32 %17, 3, !dbg !4330
  %19 = icmp eq i32 %18, 0, !dbg !4330
  br i1 %19, label %20, label %316, !dbg !4331

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4332
  call void @llvm.dbg.value(metadata i8* %21, metadata !4259, metadata !DIExpression()), !dbg !4319
  %22 = icmp eq i8* %0, null, !dbg !4333
  %23 = and i32 %1, 7, !dbg !4335
  %24 = sub nuw nsw i32 8, %23, !dbg !4335
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4335
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4335
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4335
  call void @llvm.dbg.value(metadata i32 %27, metadata !4254, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %26, metadata !4259, metadata !DIExpression()), !dbg !4319
  br i1 %22, label %33, label %28, !dbg !4336

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4338
  %30 = sub i32 4, %17, !dbg !4338
  %31 = add i32 %30, %29, !dbg !4339
  %32 = icmp ugt i32 %31, %27, !dbg !4340
  br i1 %32, label %316, label %33, !dbg !4341

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4342
  call void @llvm.dbg.value(metadata i8* %34, metadata !4256, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %3, metadata !4269, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 4, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 4, metadata !4260, metadata !DIExpression()), !dbg !4319
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4343

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4257, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %42, metadata !4256, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %43, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %44, metadata !4260, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %45, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %72, metadata !4267, metadata !DIExpression()), !dbg !4319
  br i1 %46, label %73, label %47, !dbg !4344

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4345
  %49 = zext i1 %48 to i32, !dbg !4349
  %50 = add nsw i32 %72, %49, !dbg !4349
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4349
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %52, metadata !4260, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %51, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 poison, metadata !4270, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %50, metadata !4267, metadata !DIExpression()), !dbg !4319
  br label %53, !dbg !4350

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4257, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %40, metadata !4256, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %58, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %57, metadata !4260, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %56, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 poison, metadata !4270, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %54, metadata !4267, metadata !DIExpression()), !dbg !4319
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %60, metadata !4256, metadata !DIExpression()), !dbg !4319
  %61 = load i8, i8* %60, align 1, !dbg !4353
  %62 = icmp eq i8 %61, 0, !dbg !4354
  br i1 %62, label %223, label %63, !dbg !4355, !llvm.loop !4356

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4344

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4359

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4270, metadata !DIExpression()), !dbg !4319
  %75 = add nsw i32 %72, -1, !dbg !4360
  call void @llvm.dbg.value(metadata i32 %75, metadata !4267, metadata !DIExpression()), !dbg !4319
  br label %53, !dbg !4361

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4362

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 4, metadata !4260, metadata !DIExpression()), !dbg !4319
  br label %53, !dbg !4363

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 4, metadata !4260, metadata !DIExpression()), !dbg !4319
  br label %53, !dbg !4364

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4365
  %81 = icmp eq i8 %80, 108, !dbg !4367
  br i1 %81, label %82, label %109, !dbg !4368

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4369
  %84 = load i8, i8* %83, align 1, !dbg !4369
  %85 = icmp eq i8 %84, 108, !dbg !4372
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4373
  %89 = add i32 %88, 7, !dbg !4373
  %90 = and i32 %89, -8, !dbg !4373
  %91 = inttoptr i32 %90 to i8*, !dbg !4373
  %92 = inttoptr i32 %90 to double*, !dbg !4373
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4373
  %94 = load double, double* %92, align 8, !dbg !4373
  call void @llvm.dbg.value(metadata i8* %93, metadata !4257, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 8, metadata !4260, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 8, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata double %94, metadata !4287, metadata !DIExpression()), !dbg !4375
  %95 = ptrtoint i8* %43 to i32, !dbg !4376
  %96 = add i32 %95, 7, !dbg !4376
  %97 = and i32 %96, -8, !dbg !4376
  %98 = inttoptr i32 %97 to i8*, !dbg !4377
  call void @llvm.dbg.value(metadata i8* %98, metadata !4259, metadata !DIExpression()), !dbg !4319
  br i1 %22, label %104, label %99, !dbg !4378

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4379
  %101 = icmp ugt i32 %100, %194, !dbg !4383
  br i1 %101, label %316, label %102, !dbg !4384

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4385
  store double %94, double* %103, align 8, !dbg !4385
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4388
  call void @llvm.dbg.value(metadata i8* %105, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 poison, metadata !4270, metadata !DIExpression()), !dbg !4319
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4270, metadata !DIExpression()), !dbg !4319
  br label %53, !dbg !4389

107:                                              ; preds = %73, %73
  br label %109, !dbg !4390

108:                                              ; preds = %73
  br label %109, !dbg !4390

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4319
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4319
  call void @llvm.dbg.value(metadata i32 %113, metadata !4260, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %112, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 poison, metadata !4273, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 poison, metadata !4270, metadata !DIExpression()), !dbg !4319
  %114 = ptrtoint i8* %43 to i32, !dbg !4390
  %115 = add i32 %114, -1, !dbg !4390
  %116 = add i32 %115, %112, !dbg !4390
  %117 = sub i32 0, %112, !dbg !4390
  %118 = and i32 %116, %117, !dbg !4390
  %119 = inttoptr i32 %118 to i8*, !dbg !4391
  call void @llvm.dbg.value(metadata i8* %119, metadata !4259, metadata !DIExpression()), !dbg !4319
  br i1 %22, label %124, label %120, !dbg !4392

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4394
  %122 = add i32 %121, %118, !dbg !4395
  %123 = icmp ugt i32 %122, %194, !dbg !4396
  br i1 %123, label %316, label %124, !dbg !4397

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4398

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4391
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4399
  call void @llvm.dbg.value(metadata i8* %127, metadata !4257, metadata !DIExpression()), !dbg !4319
  %128 = bitcast i8* %41 to i8**, !dbg !4399
  %129 = load i8*, i8** %128, align 4, !dbg !4399
  call void @llvm.dbg.value(metadata i8* %129, metadata !4269, metadata !DIExpression()), !dbg !4319
  br label %130, !dbg !4400

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4401
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4402
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4319
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4403
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4319
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4404
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4319
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4319
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4319
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4319
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4405
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4257, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %142, metadata !4254, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %141, metadata !4256, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %140, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %139, metadata !4260, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %138, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %137, metadata !4264, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %136, metadata !4272, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %135, metadata !4265, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 poison, metadata !4270, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %133, metadata !4269, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %132, metadata !4267, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %131, metadata !4266, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.label(metadata !4318), !dbg !4407
  br i1 %22, label %146, label %144, !dbg !4408

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4409
  store i8* %133, i8** %145, align 4, !dbg !4412
  br label %146, !dbg !4413

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4414
  call void @llvm.dbg.value(metadata i32 %147, metadata !4272, metadata !DIExpression()), !dbg !4319
  %148 = icmp sgt i32 %136, 0, !dbg !4415
  br i1 %148, label %152, label %149, !dbg !4416

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !4417
  %151 = zext i1 %150 to i32, !dbg !4417
  br label %152, !dbg !4416

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4416
  %154 = icmp eq i32 %153, 0, !dbg !4416
  call void @llvm.dbg.value(metadata i1 %154, metadata !4296, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4418
  call void @llvm.dbg.value(metadata i1 %36, metadata !4299, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4418
  %155 = or i1 %36, %154, !dbg !4419
  br i1 %155, label %156, label %190, !dbg !4419

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4420
  %158 = sub i32 %157, %17, !dbg !4420
  %159 = lshr i32 %158, 2, !dbg !4421
  call void @llvm.dbg.value(metadata i32 %159, metadata !4300, metadata !DIExpression()), !dbg !4422
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4423
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4423
  br i1 %163, label %316, label %164, !dbg !4423

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4425

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4426
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4429
  store i8 %166, i8* %167, align 1, !dbg !4430
  %168 = trunc i32 %132 to i8, !dbg !4431
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4432
  store i8 %168, i8* %169, align 1, !dbg !4433
  br i1 %154, label %173, label %170, !dbg !4434

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4435
  store i8 %171, i8* %167, align 1, !dbg !4435
  %172 = add i32 %131, 1, !dbg !4438
  call void @llvm.dbg.value(metadata i32 %172, metadata !4266, metadata !DIExpression()), !dbg !4319
  br label %185, !dbg !4439

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %174, metadata !4265, metadata !DIExpression()), !dbg !4319
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4442

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4443
  call void @llvm.dbg.value(metadata i32 %177, metadata !4254, metadata !DIExpression()), !dbg !4319
  br label %185, !dbg !4446

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4447

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4448
  call void @llvm.dbg.value(metadata i32 %180, metadata !4254, metadata !DIExpression()), !dbg !4319
  br label %185, !dbg !4451

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4452
  %183 = add i32 %142, 2, !dbg !4454
  %184 = add i32 %183, %182, !dbg !4455
  call void @llvm.dbg.value(metadata i32 %184, metadata !4254, metadata !DIExpression()), !dbg !4319
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4319
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4319
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4319
  call void @llvm.dbg.value(metadata i32 %188, metadata !4254, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %187, metadata !4265, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %186, metadata !4266, metadata !DIExpression()), !dbg !4319
  %189 = add nuw nsw i32 %137, 1, !dbg !4456
  call void @llvm.dbg.value(metadata i32 undef, metadata !4254, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 undef, metadata !4264, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 undef, metadata !4265, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 undef, metadata !4266, metadata !DIExpression()), !dbg !4319
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4401
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4403
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4404
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4405
  call void @llvm.dbg.value(metadata i32 %194, metadata !4254, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %193, metadata !4264, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %192, metadata !4265, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %191, metadata !4266, metadata !DIExpression()), !dbg !4319
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4457
  call void @llvm.dbg.value(metadata i8* %195, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %143, metadata !4257, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %141, metadata !4256, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %139, metadata !4260, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %138, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 poison, metadata !4273, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 poison, metadata !4270, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %132, metadata !4267, metadata !DIExpression()), !dbg !4319
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %196, metadata !4256, metadata !DIExpression()), !dbg !4319
  %197 = load i8, i8* %196, align 1, !dbg !4353
  %198 = icmp eq i8 %197, 0, !dbg !4354
  br i1 %198, label %223, label %63, !dbg !4355

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4458

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4459
  call void @llvm.dbg.value(metadata i8* %201, metadata !4257, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 undef, metadata !4303, metadata !DIExpression()), !dbg !4460
  br i1 %22, label %216, label %202, !dbg !4461

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4459
  %204 = load i32, i32* %203, align 4, !dbg !4459
  call void @llvm.dbg.value(metadata i32 %204, metadata !4303, metadata !DIExpression()), !dbg !4460
  %205 = inttoptr i32 %118 to i32*, !dbg !4462
  store i32 %204, i32* %205, align 4, !dbg !4465
  br label %216, !dbg !4466

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4467
  %208 = add i32 %207, 7, !dbg !4467
  %209 = and i32 %208, -8, !dbg !4467
  %210 = inttoptr i32 %209 to i8*, !dbg !4467
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4467
  call void @llvm.dbg.value(metadata i8* %211, metadata !4257, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i64 undef, metadata !4309, metadata !DIExpression()), !dbg !4468
  br i1 %22, label %216, label %212, !dbg !4469

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4467
  %214 = load i64, i64* %213, align 8, !dbg !4467
  call void @llvm.dbg.value(metadata i64 %214, metadata !4309, metadata !DIExpression()), !dbg !4468
  %215 = inttoptr i32 %118 to i64*, !dbg !4470
  store i64 %214, i64* %215, align 8, !dbg !4475
  br label %216, !dbg !4476

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4477
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4477
  call void @llvm.dbg.value(metadata i8* %218, metadata !4257, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %40, metadata !4256, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %219, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %113, metadata !4260, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %112, metadata !4261, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 poison, metadata !4273, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8 poison, metadata !4270, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %72, metadata !4267, metadata !DIExpression()), !dbg !4319
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %220, metadata !4256, metadata !DIExpression()), !dbg !4319
  %221 = load i8, i8* %220, align 1, !dbg !4353
  %222 = icmp eq i8 %221, 0, !dbg !4354
  br i1 %222, label %223, label %38, !dbg !4355

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4478
  %225 = ptrtoint i8* %224 to i32, !dbg !4479
  %226 = sub i32 %225, %17, !dbg !4479
  %227 = lshr i32 %226, 2, !dbg !4481
  %228 = icmp ugt i32 %226, 1023, !dbg !4482
  br i1 %228, label %316, label %229, !dbg !4483

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4484

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4485
  %232 = add i32 %231, %226, !dbg !4488
  br label %316, !dbg !4489

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4490
  store i8 %234, i8* %0, align 1, !dbg !4491
  %235 = trunc i32 %192 to i8, !dbg !4492
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4494
  store i8 %236, i8* %238, align 1, !dbg !4496
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4497
  store i8 %237, i8* %239, align 1, !dbg !4498
  %240 = trunc i32 %191 to i8, !dbg !4499
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4500
  store i8 %240, i8* %241, align 1, !dbg !4501
  %242 = icmp eq i32 %191, 0, !dbg !4502
  %243 = xor i1 %242, true, !dbg !4503
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4503
  call void @llvm.dbg.value(metadata i8* %224, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 0, metadata !4268, metadata !DIExpression()), !dbg !4319
  br i1 %245, label %246, label %265, !dbg !4503

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4504

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %250, metadata !4268, metadata !DIExpression()), !dbg !4319
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4505
  %252 = load i8, i8* %251, align 1, !dbg !4505
  %253 = icmp sgt i8 %252, -1, !dbg !4507
  br i1 %253, label %261, label %254, !dbg !4508

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4312, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4509
  %255 = ptrtoint i8* %249 to i32, !dbg !4510
  %256 = add i32 %247, %255, !dbg !4512
  %257 = icmp ugt i32 %256, %194, !dbg !4513
  br i1 %257, label %316, label %258, !dbg !4514

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4515
  call void @llvm.dbg.value(metadata i8 %259, metadata !4312, metadata !DIExpression()), !dbg !4509
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4516
  call void @llvm.dbg.value(metadata i8* %260, metadata !4259, metadata !DIExpression()), !dbg !4319
  store i8 %259, i8* %249, align 1, !dbg !4517
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4457
  call void @llvm.dbg.value(metadata i8* %262, metadata !4259, metadata !DIExpression()), !dbg !4319
  %263 = add nuw i32 %250, 1, !dbg !4518
  call void @llvm.dbg.value(metadata i32 %263, metadata !4268, metadata !DIExpression()), !dbg !4319
  %264 = icmp eq i32 %263, %193, !dbg !4519
  br i1 %264, label %265, label %248, !dbg !4504, !llvm.loop !4520

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4457
  call void @llvm.dbg.value(metadata i8* %266, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 0, metadata !4268, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %133, metadata !4269, metadata !DIExpression()), !dbg !4319
  %267 = icmp eq i32 %193, 0, !dbg !4522
  br i1 %267, label %312, label %268, !dbg !4525

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4525

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %272, metadata !4269, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %273, metadata !4268, metadata !DIExpression()), !dbg !4319
  br i1 %242, label %278, label %274, !dbg !4526

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4529
  %276 = load i8, i8* %275, align 1, !dbg !4529
  %277 = icmp sgt i8 %276, -1, !dbg !4530
  br i1 %277, label %278, label %307, !dbg !4531

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4532

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4260, metadata !DIExpression()), !dbg !4319
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4533
  %281 = load i8, i8* %280, align 1, !dbg !4533
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4536
  call void @llvm.dbg.value(metadata i8* %282, metadata !4259, metadata !DIExpression()), !dbg !4319
  store i8 %281, i8* %271, align 1, !dbg !4537
  br label %293, !dbg !4538

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4539
  %285 = load i8, i8* %284, align 1, !dbg !4539
  %286 = zext i8 %285 to i32, !dbg !4539
  %287 = shl nuw nsw i32 %286, 2, !dbg !4541
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4542
  %289 = bitcast i8* %288 to i8**, !dbg !4543
  %290 = load i8*, i8** %289, align 4, !dbg !4543
  call void @llvm.dbg.value(metadata i8* %290, metadata !4269, metadata !DIExpression()), !dbg !4319
  store i8* null, i8** %289, align 4, !dbg !4544
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !4545
  %292 = add i32 %291, 1, !dbg !4546
  call void @llvm.dbg.value(metadata i32 %292, metadata !4260, metadata !DIExpression()), !dbg !4319
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4319
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4547
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4319
  call void @llvm.dbg.value(metadata i8* %296, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i32 %295, metadata !4260, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %294, metadata !4269, metadata !DIExpression()), !dbg !4319
  %297 = ptrtoint i8* %296 to i32, !dbg !4548
  %298 = add i32 %269, %295, !dbg !4550
  %299 = add i32 %298, %297, !dbg !4551
  %300 = icmp ugt i32 %299, %194, !dbg !4552
  br i1 %300, label %316, label %301, !dbg !4553

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4554
  %303 = load i8, i8* %302, align 1, !dbg !4554
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4555
  call void @llvm.dbg.value(metadata i8* %304, metadata !4259, metadata !DIExpression()), !dbg !4319
  store i8 %303, i8* %296, align 1, !dbg !4556
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !4557
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4558
  call void @llvm.dbg.value(metadata i8* %306, metadata !4259, metadata !DIExpression()), !dbg !4319
  br label %307, !dbg !4559

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4560
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4319
  call void @llvm.dbg.value(metadata i8* %309, metadata !4259, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.value(metadata i8* %308, metadata !4269, metadata !DIExpression()), !dbg !4319
  %310 = add nuw i32 %273, 1, !dbg !4561
  call void @llvm.dbg.value(metadata i32 %310, metadata !4268, metadata !DIExpression()), !dbg !4319
  %311 = icmp eq i32 %310, %193, !dbg !4522
  br i1 %311, label %312, label %270, !dbg !4525, !llvm.loop !4562

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4457
  %314 = ptrtoint i8* %313 to i32, !dbg !4564
  %315 = sub i32 %314, %17, !dbg !4564
  br label %316, !dbg !4565

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4566
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4566
  ret i32 %317, !dbg !4566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4567 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4571, metadata !DIExpression()), !dbg !4572
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !4573
  ret i1 %2, !dbg !4574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4575 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4580, metadata !DIExpression()), !dbg !4581
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4582
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4583
  %4 = and i1 %2, %3, !dbg !4583
  ret i1 %4, !dbg !4584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4585 {
  %5 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4589, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %1, metadata !4590, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %2, metadata !4591, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %3, metadata !4592, metadata !DIExpression()), !dbg !4595
  %6 = bitcast %union.anon.4* %5 to i8*, !dbg !4596
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4596
  call void @llvm.dbg.declare(metadata %union.anon.4* %5, metadata !4593, metadata !DIExpression()), !dbg !4597
  call void @llvm.va_start(i8* nonnull %6), !dbg !4598
  %7 = bitcast %union.anon.4* %5 to i32*, !dbg !4599
  %8 = load i32, i32* %7, align 4, !dbg !4599
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4599
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4599
  call void @llvm.dbg.value(metadata i32 %10, metadata !4594, metadata !DIExpression()), !dbg !4595
  call void @llvm.va_end(i8* nonnull %6), !dbg !4600
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4601
  ret i32 %10, !dbg !4602
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4603 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4615, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4616, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i8* %2, metadata !4617, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i8* %3, metadata !4618, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i8* %3, metadata !4619, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i8* %3, metadata !4620, metadata !DIExpression()), !dbg !4634
  %5 = icmp eq i8* %3, null, !dbg !4635
  br i1 %5, label %45, label %6, !dbg !4637

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4629, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4634
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4638
  %8 = load i8, i8* %7, align 1, !dbg !4638
  %9 = zext i8 %8 to i32, !dbg !4639
  call void @llvm.dbg.value(metadata i32 %9, metadata !4630, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i8 undef, metadata !4631, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4634
  call void @llvm.dbg.value(metadata i8 undef, metadata !4632, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4634
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  call void @llvm.dbg.value(metadata i32 0, metadata !4628, metadata !DIExpression()), !dbg !4634
  %10 = icmp eq i8 %8, 0, !dbg !4640
  br i1 %10, label %39, label %11, !dbg !4643

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4644
  call void @llvm.dbg.value(metadata i8 %12, metadata !4629, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4634
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  %13 = zext i8 %12 to i32, !dbg !4645
  call void @llvm.dbg.value(metadata i32 %13, metadata !4629, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4634
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  %14 = shl nuw nsw i32 %13, 2, !dbg !4646
  call void @llvm.dbg.value(metadata i32 %14, metadata !4629, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4647
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4648
  %17 = load i8, i8* %16, align 1, !dbg !4648
  call void @llvm.dbg.value(metadata i8 %17, metadata !4631, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4634
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  %18 = zext i8 %17 to i32, !dbg !4649
  call void @llvm.dbg.value(metadata i32 %18, metadata !4631, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4650
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4651
  %21 = load i8, i8* %20, align 1, !dbg !4651
  call void @llvm.dbg.value(metadata i8 %21, metadata !4632, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4634
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  %22 = zext i8 %21 to i32, !dbg !4652
  call void @llvm.dbg.value(metadata i32 %22, metadata !4632, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  %23 = shl nuw nsw i32 %22, 1, !dbg !4653
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4626, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4634
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4654
  call void @llvm.dbg.value(metadata i8* %24, metadata !4626, metadata !DIExpression()), !dbg !4634
  br label %25, !dbg !4643

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4626, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i32 %27, metadata !4628, metadata !DIExpression()), !dbg !4634
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4655
  call void @llvm.dbg.value(metadata i8* %28, metadata !4626, metadata !DIExpression()), !dbg !4634
  %29 = load i8, i8* %26, align 1, !dbg !4657
  %30 = zext i8 %29 to i32, !dbg !4657
  call void @llvm.dbg.value(metadata i32 %30, metadata !4633, metadata !DIExpression()), !dbg !4634
  %31 = shl nuw nsw i32 %30, 2, !dbg !4658
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4659
  %33 = bitcast i8* %32 to i8**, !dbg !4660
  call void @llvm.dbg.value(metadata i8** %33, metadata !4627, metadata !DIExpression()), !dbg !4634
  store i8* %28, i8** %33, align 4, !dbg !4661
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4662
  %35 = add i32 %34, 1, !dbg !4663
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4664
  call void @llvm.dbg.value(metadata i8* %36, metadata !4626, metadata !DIExpression()), !dbg !4634
  %37 = add nuw nsw i32 %27, 1, !dbg !4665
  call void @llvm.dbg.value(metadata i32 %37, metadata !4628, metadata !DIExpression()), !dbg !4634
  %38 = icmp eq i32 %37, %9, !dbg !4640
  br i1 %38, label %39, label %25, !dbg !4643, !llvm.loop !4666

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4668
  call void @llvm.dbg.value(metadata i8* %40, metadata !4619, metadata !DIExpression()), !dbg !4634
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4669
  %42 = bitcast i8* %41 to i8**, !dbg !4669
  %43 = load i8*, i8** %42, align 1, !dbg !4669
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4670
  br label %45, !dbg !4671

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4634
  ret i32 %46, !dbg !4672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4673 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4677, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4678, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i8* %2, metadata !4679, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i8* %3, metadata !4680, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i8* %4, metadata !4681, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i8* %4, metadata !4682, metadata !DIExpression()), !dbg !4687
  %6 = ptrtoint i8* %4 to i32, !dbg !4688
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4688
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4688
  ret i32 %8, !dbg !4689
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4690 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4694, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i32 %1, metadata !4695, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i8 0, metadata !4697, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i32 0, metadata !4698, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i8 poison, metadata !4697, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i8* %0, metadata !4694, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4699
  %3 = load i8, i8* %0, align 1, !dbg !4700
  call void @llvm.dbg.value(metadata i8 %3, metadata !4696, metadata !DIExpression()), !dbg !4699
  %4 = icmp eq i8 %3, 0, !dbg !4701
  br i1 %4, label %29, label %5, !dbg !4702

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4703
  call void @llvm.dbg.value(metadata i32 %8, metadata !4698, metadata !DIExpression()), !dbg !4699
  br i1 %9, label %11, label %22, !dbg !4704

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4706
  br i1 %12, label %13, label %17, !dbg !4710

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4711
  br i1 %14, label %29, label %15, !dbg !4714

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4715
  br i1 %16, label %29, label %22, !dbg !4717

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4718
  %19 = xor i1 %18, true, !dbg !4720
  %20 = zext i1 %18 to i32, !dbg !4720
  %21 = add nsw i32 %8, %20, !dbg !4720
  br label %22, !dbg !4720

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4699
  call void @llvm.dbg.value(metadata i32 %24, metadata !4698, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i8 poison, metadata !4697, metadata !DIExpression()), !dbg !4699
  %25 = icmp eq i8 %6, 37, !dbg !4721
  %26 = xor i1 %25, %23, !dbg !4723
  call void @llvm.dbg.value(metadata i8* %10, metadata !4694, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i8* %10, metadata !4694, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4699
  %27 = load i8, i8* %10, align 1, !dbg !4700
  call void @llvm.dbg.value(metadata i8 %27, metadata !4696, metadata !DIExpression()), !dbg !4699
  %28 = icmp eq i8 %27, 0, !dbg !4701
  br i1 %28, label %29, label %5, !dbg !4702, !llvm.loop !4724

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4699
  ret i1 %30, !dbg !4726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !4727 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4731, metadata !DIExpression()), !dbg !4732
  %2 = add i8 %0, -64, !dbg !4733
  %3 = icmp ult i8 %2, 59, !dbg !4733
  ret i1 %3, !dbg !4734
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4735 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4743, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %1, metadata !4744, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4745, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8* %3, metadata !4746, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %4, metadata !4747, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i16* %5, metadata !4748, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %6, metadata !4749, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8* %0, metadata !4750, metadata !DIExpression()), !dbg !4812
  %11 = bitcast i8* %0 to i32*, !dbg !4813
  call void @llvm.dbg.value(metadata i32* %11, metadata !4751, metadata !DIExpression()), !dbg !4812
  %12 = and i32 %4, 8, !dbg !4814
  %13 = icmp eq i32 %12, 0, !dbg !4815
  call void @llvm.dbg.value(metadata i1 %13, metadata !4755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4812
  call void @llvm.dbg.value(metadata i8* %0, metadata !4758, metadata !DIExpression()), !dbg !4812
  %14 = icmp eq i32 %1, 0, !dbg !4816
  br i1 %14, label %15, label %17, !dbg !4817

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4818
  br label %17, !dbg !4817

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4817
  call void @llvm.dbg.value(metadata i32 %18, metadata !4744, metadata !DIExpression()), !dbg !4812
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4819
  %20 = load i8, i8* %19, align 1, !dbg !4819
  %21 = zext i8 %20 to i32, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %21, metadata !4753, metadata !DIExpression()), !dbg !4812
  %22 = icmp ne i8 %20, 0, !dbg !4821
  %23 = and i32 %4, 1, !dbg !4822
  %24 = icmp ne i32 %23, 0, !dbg !4822
  %25 = and i1 %24, %22, !dbg !4822
  call void @llvm.dbg.value(metadata i1 %25, metadata !4757, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4812
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4823
  %27 = load i8, i8* %26, align 1, !dbg !4823
  %28 = zext i8 %27 to i32, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %28, metadata !4754, metadata !DIExpression()), !dbg !4812
  %29 = icmp ne i8 %27, 0, !dbg !4825
  %30 = and i32 %4, 2, !dbg !4826
  %31 = icmp ne i32 %30, 0, !dbg !4826
  %32 = and i1 %31, %29, !dbg !4826
  call void @llvm.dbg.value(metadata i1 %32, metadata !4756, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4812
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4827
  br i1 %33, label %38, label %34, !dbg !4827

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4829
  br i1 %35, label %267, label %36, !dbg !4832

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4833
  br label %267, !dbg !4835

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4836
  %40 = zext i8 %39 to i32, !dbg !4837
  %41 = shl nuw nsw i32 %40, 2, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %41, metadata !4752, metadata !DIExpression()), !dbg !4812
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4839
  %43 = bitcast i8* %42 to i8**, !dbg !4840
  %44 = load i8*, i8** %43, align 4, !dbg !4840
  call void @llvm.dbg.value(metadata i8* %44, metadata !4761, metadata !DIExpression()), !dbg !4812
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4841
  call void @llvm.dbg.value(metadata i8* %45, metadata !4762, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 0, metadata !4763, metadata !DIExpression()), !dbg !4812
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4842
  br i1 %46, label %47, label %132, !dbg !4843

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4760, metadata !DIExpression()), !dbg !4812
  br i1 %25, label %48, label %73, !dbg !4844

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4760, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8* %45, metadata !4762, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 0, metadata !4763, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 0, metadata !4764, metadata !DIExpression()), !dbg !4845
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4846

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4760, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8* %52, metadata !4762, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %53, metadata !4763, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %54, metadata !4764, metadata !DIExpression()), !dbg !4845
  %55 = load i8, i8* %52, align 1, !dbg !4847
  %56 = zext i8 %55 to i32, !dbg !4848
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4848
  %58 = bitcast i32* %57 to i8**, !dbg !4849
  %59 = load i8*, i8** %58, align 4, !dbg !4849
  call void @llvm.dbg.value(metadata i8* %59, metadata !4770, metadata !DIExpression()), !dbg !4850
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4851
  call void @llvm.dbg.value(metadata i32 %60, metadata !4773, metadata !DIExpression()), !dbg !4850
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4852
  br i1 %62, label %63, label %67, !dbg !4852

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4854
  %65 = add nuw i32 %53, 1, !dbg !4856
  call void @llvm.dbg.value(metadata i32 %65, metadata !4763, metadata !DIExpression()), !dbg !4812
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4857
  store i16 %64, i16* %66, align 2, !dbg !4858
  br label %67, !dbg !4859

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4812
  call void @llvm.dbg.value(metadata i32 %68, metadata !4763, metadata !DIExpression()), !dbg !4812
  %69 = add nsw i32 %60, %51, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %69, metadata !4760, metadata !DIExpression()), !dbg !4812
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4861
  call void @llvm.dbg.value(metadata i8* %70, metadata !4762, metadata !DIExpression()), !dbg !4812
  %71 = add nuw nsw i32 %54, 1, !dbg !4862
  call void @llvm.dbg.value(metadata i32 %71, metadata !4764, metadata !DIExpression()), !dbg !4845
  %72 = icmp eq i32 %71, %21, !dbg !4863
  br i1 %72, label %79, label %50, !dbg !4846, !llvm.loop !4864

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4866
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4866
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4866
  br label %79, !dbg !4866

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4869
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4812
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4870
  call void @llvm.dbg.value(metadata i1 undef, metadata !4774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4871
  call void @llvm.dbg.value(metadata i32 0, metadata !4775, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.value(metadata i32 %82, metadata !4760, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8* %81, metadata !4762, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %80, metadata !4763, metadata !DIExpression()), !dbg !4812
  %83 = icmp eq i8 %27, 0, !dbg !4873
  br i1 %83, label %267, label %84, !dbg !4874

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4875
  %86 = icmp eq i32 %85, 0, !dbg !4876
  call void @llvm.dbg.value(metadata i1 %86, metadata !4774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4871
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4874

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4760, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8* %93, metadata !4762, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %94, metadata !4763, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %95, metadata !4775, metadata !DIExpression()), !dbg !4872
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4877
  call void @llvm.dbg.value(metadata i8* %96, metadata !4762, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 undef, metadata !4777, metadata !DIExpression()), !dbg !4878
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4879
  call void @llvm.dbg.value(metadata i8* %97, metadata !4762, metadata !DIExpression()), !dbg !4812
  %98 = load i8, i8* %96, align 1, !dbg !4880
  call void @llvm.dbg.value(metadata i8 %98, metadata !4780, metadata !DIExpression()), !dbg !4878
  %99 = zext i8 %98 to i32, !dbg !4881
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4881
  %101 = bitcast i32* %100 to i8**, !dbg !4882
  %102 = load i8*, i8** %101, align 4, !dbg !4882
  call void @llvm.dbg.value(metadata i8* %102, metadata !4781, metadata !DIExpression()), !dbg !4878
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4883
  call void @llvm.dbg.value(metadata i1 %103, metadata !4782, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4878
  br i1 %13, label %110, label %104, !dbg !4884

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4886
  call void @llvm.dbg.value(metadata i8 %105, metadata !4777, metadata !DIExpression()), !dbg !4878
  %106 = zext i8 %105 to i32, !dbg !4887
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4888
  br i1 %107, label %108, label %110, !dbg !4889

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4890
  %109 = add nsw i32 %92, -2, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %109, metadata !4760, metadata !DIExpression()), !dbg !4812
  br label %127, !dbg !4897

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4898

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4899

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %113, metadata !4760, metadata !DIExpression()), !dbg !4812
  br label %127, !dbg !4904

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4905

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4808), !dbg !4906
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4907
  call void @llvm.dbg.value(metadata i32 %116, metadata !4783, metadata !DIExpression()), !dbg !4878
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4908
  br i1 %118, label %119, label %123, !dbg !4908

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4910
  %121 = add nuw i32 %94, 1, !dbg !4912
  call void @llvm.dbg.value(metadata i32 %121, metadata !4763, metadata !DIExpression()), !dbg !4812
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4913
  store i16 %120, i16* %122, align 2, !dbg !4914
  br label %123, !dbg !4915

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4812
  call void @llvm.dbg.value(metadata i32 %124, metadata !4763, metadata !DIExpression()), !dbg !4812
  %125 = add i32 %92, -1, !dbg !4916
  %126 = add i32 %125, %116, !dbg !4917
  call void @llvm.dbg.value(metadata i32 %126, metadata !4760, metadata !DIExpression()), !dbg !4812
  br label %127, !dbg !4918

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4812
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4878
  call void @llvm.dbg.value(metadata i32 %129, metadata !4760, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %128, metadata !4763, metadata !DIExpression()), !dbg !4812
  %130 = add nuw nsw i32 %95, 1, !dbg !4919
  call void @llvm.dbg.value(metadata i8* %97, metadata !4762, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %130, metadata !4775, metadata !DIExpression()), !dbg !4872
  %131 = icmp eq i32 %130, %28, !dbg !4873
  br i1 %131, label %267, label %91, !dbg !4874, !llvm.loop !4920

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4785, metadata !DIExpression()), !dbg !4922
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4786, metadata !DIExpression()), !dbg !4923
  br i1 %25, label %133, label %135, !dbg !4924

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4787, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 0, metadata !4788, metadata !DIExpression()), !dbg !4812
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4925
  call void @llvm.dbg.value(metadata i8* %134, metadata !4789, metadata !DIExpression()), !dbg !4812
  br label %140, !dbg !4928

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4929
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4929

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4789, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 undef, metadata !4788, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 0, metadata !4787, metadata !DIExpression()), !dbg !4812
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4931
  br label %145, !dbg !4934

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4935
  call void @llvm.dbg.value(metadata i8* %148, metadata !4762, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 0, metadata !4791, metadata !DIExpression()), !dbg !4936
  call void @llvm.dbg.value(metadata i8 %146, metadata !4788, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 %147, metadata !4787, metadata !DIExpression()), !dbg !4812
  %149 = icmp eq i8 %27, 0, !dbg !4937
  br i1 %149, label %150, label %152, !dbg !4938

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4939
  br label %157, !dbg !4938

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4938

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4939
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4940
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4941
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4812
  call void @llvm.dbg.value(metadata i8 undef, metadata !4784, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4812
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4942
  %163 = load i8, i8* %162, align 1, !dbg !4942
  %164 = zext i8 %159 to i32, !dbg !4943
  %165 = add i8 %163, %159, !dbg !4944
  call void @llvm.dbg.value(metadata i8 %165, metadata !4784, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4812
  %166 = icmp eq i32 %30, 0, !dbg !4945
  %167 = lshr i8 %160, 1, !dbg !4946
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4946
  call void @llvm.dbg.value(metadata i8 %168, metadata !4784, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4812
  %169 = icmp eq i32 %23, 0, !dbg !4947
  %170 = icmp eq i32 %158, 0, !dbg !4939
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4939
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4939
  call void @llvm.dbg.value(metadata i8 %172, metadata !4784, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4812
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4799, metadata !DIExpression()), !dbg !4948
  %173 = load i32, i32* %11, align 1, !dbg !4949
  store i8 %165, i8* %162, align 1, !dbg !4950
  store i8 %172, i8* %19, align 1, !dbg !4950
  store i8 %168, i8* %26, align 1, !dbg !4950
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %174, metadata !4790, metadata !DIExpression()), !dbg !4812
  %175 = icmp slt i32 %174, 0, !dbg !4952
  br i1 %175, label %267, label %220, !dbg !4954

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4762, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %178, metadata !4791, metadata !DIExpression()), !dbg !4936
  call void @llvm.dbg.value(metadata i8 %179, metadata !4788, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 %180, metadata !4787, metadata !DIExpression()), !dbg !4812
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4955
  call void @llvm.dbg.value(metadata i8* %181, metadata !4762, metadata !DIExpression()), !dbg !4812
  %182 = load i8, i8* %177, align 1, !dbg !4956
  call void @llvm.dbg.value(metadata i8 %182, metadata !4793, metadata !DIExpression()), !dbg !4957
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4958
  call void @llvm.dbg.value(metadata i8* %183, metadata !4762, metadata !DIExpression()), !dbg !4812
  %184 = load i8, i8* %181, align 1, !dbg !4959
  call void @llvm.dbg.value(metadata i8 %184, metadata !4796, metadata !DIExpression()), !dbg !4957
  %185 = zext i8 %184 to i32, !dbg !4960
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4960
  %187 = bitcast i32* %186 to i8**, !dbg !4961
  %188 = load i8*, i8** %187, align 4, !dbg !4961
  call void @llvm.dbg.value(metadata i8* %188, metadata !4797, metadata !DIExpression()), !dbg !4957
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4962
  call void @llvm.dbg.value(metadata i1 %189, metadata !4798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4957
  br i1 %13, label %193, label %190, !dbg !4963

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4965
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4966
  br i1 %192, label %215, label %193, !dbg !4967

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4968

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4969

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4972
  call void @llvm.dbg.value(metadata i8 %196, metadata !4787, metadata !DIExpression()), !dbg !4812
  br label %208, !dbg !4975

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4976

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4977
  call void @llvm.dbg.value(metadata i8 %199, metadata !4788, metadata !DIExpression()), !dbg !4812
  br label %208, !dbg !4980

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4981

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4983
  call void @llvm.dbg.value(metadata i8 %202, metadata !4787, metadata !DIExpression()), !dbg !4812
  br label %208, !dbg !4986

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4987
  call void @llvm.dbg.value(metadata i8 %204, metadata !4788, metadata !DIExpression()), !dbg !4812
  %205 = zext i8 %179 to i32, !dbg !4989
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4989
  store i8 %182, i8* %206, align 1, !dbg !4990
  %207 = add i8 %179, 2, !dbg !4991
  call void @llvm.dbg.value(metadata i8 %207, metadata !4788, metadata !DIExpression()), !dbg !4812
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4992
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4992
  store i8 %184, i8* %214, align 1, !dbg !4992
  br label %215, !dbg !4993

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4812
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4941
  call void @llvm.dbg.value(metadata i8 %217, metadata !4788, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 %216, metadata !4787, metadata !DIExpression()), !dbg !4812
  %218 = add nuw nsw i32 %178, 1, !dbg !4993
  call void @llvm.dbg.value(metadata i8* %183, metadata !4762, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %218, metadata !4791, metadata !DIExpression()), !dbg !4936
  %219 = icmp eq i32 %218, %28, !dbg !4937
  br i1 %219, label %157, label %176, !dbg !4938, !llvm.loop !4994

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4946
  call void @llvm.dbg.value(metadata i32 %174, metadata !4760, metadata !DIExpression()), !dbg !4812
  store i32 %173, i32* %11, align 1, !dbg !4996
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4997
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4998
  call void @llvm.dbg.value(metadata i32 %223, metadata !4790, metadata !DIExpression()), !dbg !4812
  %224 = icmp slt i32 %223, 0, !dbg !4999
  br i1 %224, label %267, label %225, !dbg !5001

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4760, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !5002
  %228 = add nuw nsw i32 %41, %21, !dbg !5002
  %229 = sub i32 %227, %228, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %229, metadata !4800, metadata !DIExpression()), !dbg !4812
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !5003
  call void @llvm.dbg.value(metadata i32 %230, metadata !4790, metadata !DIExpression()), !dbg !4812
  %231 = icmp slt i32 %230, 0, !dbg !5004
  br i1 %231, label %267, label %232, !dbg !5006

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !5007
  call void @llvm.dbg.value(metadata i32 %233, metadata !4760, metadata !DIExpression()), !dbg !4812
  %234 = add nuw nsw i32 %233, %230, !dbg !5008
  call void @llvm.dbg.value(metadata i32 %234, metadata !4760, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 0, metadata !4801, metadata !DIExpression()), !dbg !5009
  %235 = icmp eq i8 %159, 0, !dbg !5010
  br i1 %235, label %264, label %236, !dbg !5011

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !5011

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4801, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i32 %240, metadata !4760, metadata !DIExpression()), !dbg !4812
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5012
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !5013
  %242 = load i8, i8* %241, align 1, !dbg !5013
  call void @llvm.dbg.value(metadata i8 %242, metadata !4803, metadata !DIExpression()), !dbg !5014
  store i8 %242, i8* %10, align 1, !dbg !5015
  %243 = zext i8 %242 to i32, !dbg !5016
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !5016
  %245 = bitcast i32* %244 to i8**, !dbg !5017
  %246 = load i8*, i8** %245, align 4, !dbg !5017
  call void @llvm.dbg.value(metadata i8* %246, metadata !4806, metadata !DIExpression()), !dbg !5014
  br i1 %237, label %250, label %247, !dbg !5018

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !5019
  %249 = load i16, i16* %248, align 2, !dbg !5019
  br label %250, !dbg !5018

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !5018
  call void @llvm.dbg.value(metadata i32 undef, metadata !4807, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5014
  call void @llvm.dbg.value(metadata i8* %10, metadata !4803, metadata !DIExpression(DW_OP_deref)), !dbg !5014
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !5020
  call void @llvm.dbg.value(metadata i32 %252, metadata !4790, metadata !DIExpression()), !dbg !4812
  %253 = icmp slt i32 %252, 0, !dbg !5021
  br i1 %253, label %257, label %254, !dbg !5023

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4807, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4760, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !5024
  call void @llvm.dbg.value(metadata i32 %255, metadata !4790, metadata !DIExpression()), !dbg !4812
  %256 = icmp slt i32 %255, 0, !dbg !5025
  br i1 %256, label %257, label %259, !dbg !5027

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4760, metadata !DIExpression()), !dbg !4812
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5028
  call void @llvm.dbg.value(metadata i32 undef, metadata !4760, metadata !DIExpression()), !dbg !4812
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %260, metadata !4760, metadata !DIExpression()), !dbg !4812
  %261 = add nsw i32 %260, %255, !dbg !5030
  call void @llvm.dbg.value(metadata i32 %261, metadata !4760, metadata !DIExpression()), !dbg !4812
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5028
  %262 = add nuw nsw i32 %239, 1, !dbg !5031
  call void @llvm.dbg.value(metadata i32 %262, metadata !4801, metadata !DIExpression()), !dbg !5009
  %263 = icmp eq i32 %262, %164, !dbg !5010
  br i1 %263, label %264, label %238, !dbg !5011, !llvm.loop !5032

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !5008
  call void @llvm.dbg.value(metadata i32 %265, metadata !4760, metadata !DIExpression()), !dbg !4812
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !5034
  br label %267, !dbg !5035

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4812
  ret i32 %268, !dbg !5036
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !5037 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5041, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata i8* %0, metadata !5042, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata i8* %0, metadata !5043, metadata !DIExpression()), !dbg !5049
  %2 = load i8, i8* %0, align 1, !dbg !5050
  %3 = zext i8 %2 to i32, !dbg !5050
  %4 = shl nuw nsw i32 %3, 2, !dbg !5051
  call void @llvm.dbg.value(metadata i32 %4, metadata !5044, metadata !DIExpression()), !dbg !5049
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5052
  %6 = load i8, i8* %5, align 1, !dbg !5052
  %7 = zext i8 %6 to i32, !dbg !5052
  call void @llvm.dbg.value(metadata i32 %7, metadata !5045, metadata !DIExpression()), !dbg !5049
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5053
  %9 = load i8, i8* %8, align 1, !dbg !5053
  %10 = zext i8 %9 to i32, !dbg !5053
  call void @llvm.dbg.value(metadata i32 %10, metadata !5046, metadata !DIExpression()), !dbg !5049
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5054
  call void @llvm.dbg.value(metadata i8* %11, metadata !5042, metadata !DIExpression()), !dbg !5049
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !5055
  call void @llvm.dbg.value(metadata i8* %12, metadata !5042, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata i32 0, metadata !5047, metadata !DIExpression()), !dbg !5056
  %13 = icmp eq i8 %6, 0, !dbg !5057
  br i1 %13, label %14, label %19, !dbg !5059

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !5049
  %16 = ptrtoint i8* %15 to i32, !dbg !5060
  %17 = ptrtoint i8* %0 to i32, !dbg !5060
  %18 = sub i32 %16, %17, !dbg !5060
  ret i32 %18, !dbg !5061

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5047, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.value(metadata i8* %21, metadata !5042, metadata !DIExpression()), !dbg !5049
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5062
  call void @llvm.dbg.value(metadata i8* %22, metadata !5042, metadata !DIExpression()), !dbg !5049
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !5064
  %24 = add i32 %23, 1, !dbg !5065
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !5066
  call void @llvm.dbg.value(metadata i8* %25, metadata !5042, metadata !DIExpression()), !dbg !5049
  %26 = add nuw nsw i32 %20, 1, !dbg !5067
  call void @llvm.dbg.value(metadata i32 %26, metadata !5047, metadata !DIExpression()), !dbg !5056
  %27 = icmp eq i32 %26, %7, !dbg !5057
  br i1 %27, label %14, label %19, !dbg !5059, !llvm.loop !5068
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5070 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5074, metadata !DIExpression()), !dbg !5078
  call void @llvm.dbg.value(metadata i8* %1, metadata !5075, metadata !DIExpression()), !dbg !5078
  call void @llvm.dbg.value(metadata i8* %2, metadata !5076, metadata !DIExpression()), !dbg !5078
  call void @llvm.dbg.value(metadata i16 %3, metadata !5077, metadata !DIExpression()), !dbg !5078
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5079
  br i1 %5, label %6, label %9, !dbg !5081

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5082
  %8 = add i32 %7, 1, !dbg !5084
  br label %20, !dbg !5085

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5086
  br i1 %10, label %13, label %11, !dbg !5087

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5087
  br label %16, !dbg !5087

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5088
  %15 = add i32 %14, 1, !dbg !5089
  br label %16, !dbg !5087

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5087
  %18 = and i32 %17, 65535, !dbg !5090
  call void @llvm.dbg.value(metadata i32 %17, metadata !5077, metadata !DIExpression()), !dbg !5078
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !5091
  br label %20, !dbg !5092

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5078
  ret i32 %21, !dbg !5093
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5096, metadata !DIExpression()), !dbg !5097
  ret i32 0, !dbg !5098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5099 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5103, metadata !DIExpression()), !dbg !5104
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5105
  ret void, !dbg !5106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5107 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5110
  ret i8* %1, !dbg !5111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5112 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5123, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i8* %0, metadata !5122, metadata !DIExpression()), !dbg !5134
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !5135
  ret void, !dbg !5137
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5142, metadata !DIExpression()), !dbg !5144
  call void @llvm.dbg.value(metadata i8* %1, metadata !5143, metadata !DIExpression()), !dbg !5144
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5145
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !5145
  ret i32 %4, !dbg !5146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5147 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5154, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5151, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i8* %1, metadata !5152, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i8* %2, metadata !5153, metadata !DIExpression()), !dbg !5155
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !5156
  ret void, !dbg !5157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5158 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5162, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i32 %1, metadata !5163, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i32 0, metadata !5164, metadata !DIExpression()), !dbg !5165
  %3 = icmp eq i32 %1, 0, !dbg !5166
  br i1 %3, label %13, label %4, !dbg !5169

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5164, metadata !DIExpression()), !dbg !5165
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5170
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5172
  %8 = load i8, i8* %7, align 1, !dbg !5172
  %9 = zext i8 %8 to i32, !dbg !5172
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !5170
  %11 = add nuw i32 %5, 1, !dbg !5173
  call void @llvm.dbg.value(metadata i32 %11, metadata !5164, metadata !DIExpression()), !dbg !5165
  %12 = icmp eq i32 %11, %1, !dbg !5166
  br i1 %12, label %13, label %4, !dbg !5169, !llvm.loop !5174

13:                                               ; preds = %4, %2
  ret void, !dbg !5176
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5177 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5181, metadata !DIExpression()), !dbg !5183
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !5184
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5184
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !5182, metadata !DIExpression()), !dbg !5185
  call void @llvm.va_start(i8* nonnull %3), !dbg !5186
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !5187
  %5 = load i32, i32* %4, align 4, !dbg !5187
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5187
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5187
  call void @llvm.va_end(i8* nonnull %3), !dbg !5188
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5189
  ret void, !dbg !5189
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5190 {
  %4 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5194, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %1, metadata !5195, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i8* %2, metadata !5196, metadata !DIExpression()), !dbg !5199
  %5 = bitcast %union.anon.4* %4 to i8*, !dbg !5200
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5200
  call void @llvm.dbg.declare(metadata %union.anon.4* %4, metadata !5197, metadata !DIExpression()), !dbg !5201
  call void @llvm.va_start(i8* nonnull %5), !dbg !5202
  %6 = bitcast %union.anon.4* %4 to i32*, !dbg !5203
  %7 = load i32, i32* %6, align 4, !dbg !5203
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5203
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !5203
  call void @llvm.dbg.value(metadata i32 %9, metadata !5198, metadata !DIExpression()), !dbg !5199
  call void @llvm.va_end(i8* nonnull %5), !dbg !5204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5205
  ret i32 %9, !dbg !5206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5207 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5214, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i8* %0, metadata !5211, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i32 %1, metadata !5212, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i8* %2, metadata !5213, metadata !DIExpression()), !dbg !5221
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5222
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5222
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5215, metadata !DIExpression()), !dbg !5223
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5224
  store i8* %0, i8** %7, align 4, !dbg !5224
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5224
  store i32 %1, i32* %8, align 4, !dbg !5224
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5224
  store i32 0, i32* %9, align 4, !dbg !5224
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !5225
  %10 = load i32, i32* %9, align 4, !dbg !5226
  %11 = load i32, i32* %8, align 4, !dbg !5228
  %12 = icmp slt i32 %10, %11, !dbg !5229
  br i1 %12, label %13, label %15, !dbg !5230

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5231
  store i8 0, i8* %14, align 1, !dbg !5233
  br label %15, !dbg !5234

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5235
  ret i32 %10, !dbg !5236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5242, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5243, metadata !DIExpression()), !dbg !5244
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5245
  %4 = load i8*, i8** %3, align 4, !dbg !5245
  %5 = icmp eq i8* %4, null, !dbg !5247
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5248
  br i1 %5, label %12, label %8, !dbg !5249

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5250
  %10 = load i32, i32* %9, align 4, !dbg !5250
  %11 = icmp slt i32 %7, %10, !dbg !5251
  br i1 %11, label %15, label %12, !dbg !5252

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5253
  %14 = add nsw i32 %7, 1, !dbg !5255
  store i32 %14, i32* %13, align 4, !dbg !5255
  br label %25, !dbg !5256

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5257
  %17 = icmp eq i32 %7, %16, !dbg !5259
  br i1 %17, label %18, label %21, !dbg !5260

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5261
  store i32 %19, i32* %6, align 4, !dbg !5261
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5263
  store i8 0, i8* %20, align 1, !dbg !5264
  br label %25, !dbg !5265

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5266
  %23 = add nsw i32 %7, 1, !dbg !5268
  store i32 %23, i32* %6, align 4, !dbg !5268
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5269
  store i8 %22, i8* %24, align 1, !dbg !5270
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5271
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !5272 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5282, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata i8* %1, metadata !5283, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata i8* %2, metadata !5284, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata i8* %3, metadata !5285, metadata !DIExpression()), !dbg !5286
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5287
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5288
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !5289
  unreachable, !dbg !5290
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !5291 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5395
  ret %struct.k_thread* %1, !dbg !5396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5402, metadata !DIExpression()), !dbg !5403
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5404, !srcloc !5406
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5407
  ret void, !dbg !5408
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !5409 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5410, !srcloc !5412
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5413
  ret %struct.k_thread* %1, !dbg !5414
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5415 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5428, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5425, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i8* %1, metadata !5426, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i8* %2, metadata !5427, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %4, metadata !5429, metadata !DIExpression()), !dbg !5554
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5555
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5555
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5430, metadata !DIExpression()), !dbg !5556
  call void @llvm.dbg.value(metadata i32 0, metadata !5434, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i1 undef, metadata !5436, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5554
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5557

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5557

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5558
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5428, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i8* %30, metadata !5427, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %29, metadata !5434, metadata !DIExpression()), !dbg !5554
  %31 = load i8, i8* %30, align 1, !dbg !5559
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5557

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5559
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5560
  call void @llvm.dbg.value(metadata i8* %34, metadata !5427, metadata !DIExpression()), !dbg !5554
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5560
  call void @llvm.dbg.value(metadata i32 %35, metadata !5438, metadata !DIExpression()), !dbg !5561
  %36 = icmp slt i32 %35, 0, !dbg !5562
  %37 = add i32 %29, 1, !dbg !5560
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  br i1 %36, label %365, label %28, !llvm.loop !5564

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5566
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5443, metadata !DIExpression()), !dbg !5567
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5567
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5486, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5489, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i8* %30, metadata !5492, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i32 -1, metadata !5493, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i32 -1, metadata !5494, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i8* null, metadata !5495, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i8* %14, metadata !5496, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i8 0, metadata !5497, metadata !DIExpression()), !dbg !5568
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5569
  call void @llvm.dbg.value(metadata i8* %39, metadata !5427, metadata !DIExpression()), !dbg !5554
  %40 = load i24, i24* %15, align 8, !dbg !5570
  %41 = and i24 %40, 256, !dbg !5570
  %42 = icmp eq i24 %41, 0, !dbg !5570
  br i1 %42, label %51, label %43, !dbg !5572

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5573
  call void @llvm.dbg.value(metadata i8* %44, metadata !5428, metadata !DIExpression()), !dbg !5554
  %45 = bitcast i8* %27 to i32*, !dbg !5573
  %46 = load i32, i32* %45, align 4, !dbg !5573
  call void @llvm.dbg.value(metadata i32 %46, metadata !5493, metadata !DIExpression()), !dbg !5568
  %47 = icmp slt i32 %46, 0, !dbg !5575
  br i1 %47, label %48, label %56, !dbg !5577

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5578
  store i24 %49, i24* %15, align 8, !dbg !5578
  %50 = sub nsw i32 0, %46, !dbg !5580
  call void @llvm.dbg.value(metadata i32 %50, metadata !5493, metadata !DIExpression()), !dbg !5568
  br label %56, !dbg !5581

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5582
  %53 = icmp eq i24 %52, 0, !dbg !5582
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5584
  br label %56, !dbg !5584

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5585
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5568
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5428, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %58, metadata !5493, metadata !DIExpression()), !dbg !5568
  %60 = and i24 %57, 1024, !dbg !5585
  %61 = icmp eq i24 %60, 0, !dbg !5585
  br i1 %61, label %69, label %62, !dbg !5586

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5587
  call void @llvm.dbg.value(metadata i8* %63, metadata !5428, metadata !DIExpression()), !dbg !5554
  %64 = bitcast i8* %59 to i32*, !dbg !5587
  %65 = load i32, i32* %64, align 4, !dbg !5587
  call void @llvm.dbg.value(metadata i32 %65, metadata !5498, metadata !DIExpression()), !dbg !5588
  %66 = icmp slt i32 %65, 0, !dbg !5589
  br i1 %66, label %67, label %74, !dbg !5591

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5592
  store i24 %68, i24* %15, align 8, !dbg !5592
  br label %74, !dbg !5594

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5595
  %71 = icmp eq i24 %70, 0, !dbg !5595
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5597
  br label %74, !dbg !5597

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5598
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5568
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5568
  call void @llvm.dbg.value(metadata i8* %77, metadata !5428, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %76, metadata !5494, metadata !DIExpression()), !dbg !5568
  store i32 0, i32* %16, align 4, !dbg !5599
  store i32 0, i32* %17, align 8, !dbg !5600
  %78 = lshr i24 %75, 16, !dbg !5598
  call void @llvm.dbg.value(metadata i24 %78, metadata !5501, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5568
  %79 = lshr i24 %75, 11, !dbg !5601
  %80 = and i24 %79, 15, !dbg !5601
  %81 = zext i24 %80 to i32, !dbg !5601
  call void @llvm.dbg.value(metadata i32 %81, metadata !5502, metadata !DIExpression()), !dbg !5568
  %82 = trunc i24 %78 to i3, !dbg !5602
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5602

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5603

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5606
  call void @llvm.dbg.value(metadata i8* %85, metadata !5428, metadata !DIExpression()), !dbg !5554
  %86 = bitcast i8* %77 to i32*, !dbg !5606
  %87 = load i32, i32* %86, align 4, !dbg !5606
  %88 = sext i32 %87 to i64, !dbg !5606
  store i64 %88, i64* %20, align 8, !dbg !5608
  br label %115, !dbg !5609

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5610
  call void @llvm.dbg.value(metadata i8* %90, metadata !5428, metadata !DIExpression()), !dbg !5554
  %91 = bitcast i8* %77 to i32*, !dbg !5610
  %92 = load i32, i32* %91, align 4, !dbg !5610
  %93 = sext i32 %92 to i64, !dbg !5610
  store i64 %93, i64* %20, align 8, !dbg !5613
  br label %115, !dbg !5614

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5615
  %96 = add i32 %95, 7, !dbg !5615
  %97 = and i32 %96, -8, !dbg !5615
  %98 = inttoptr i32 %97 to i8*, !dbg !5615
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5615
  call void @llvm.dbg.value(metadata i8* %99, metadata !5428, metadata !DIExpression()), !dbg !5554
  %100 = inttoptr i32 %97 to i64*, !dbg !5615
  %101 = load i64, i64* %100, align 8, !dbg !5615
  store i64 %101, i64* %20, align 8, !dbg !5616
  br label %115, !dbg !5617

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5618
  %104 = add i32 %103, 7, !dbg !5618
  %105 = and i32 %104, -8, !dbg !5618
  %106 = inttoptr i32 %105 to i8*, !dbg !5618
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5618
  call void @llvm.dbg.value(metadata i8* %107, metadata !5428, metadata !DIExpression()), !dbg !5554
  %108 = inttoptr i32 %105 to i64*, !dbg !5618
  %109 = load i64, i64* %108, align 8, !dbg !5618
  store i64 %109, i64* %20, align 8, !dbg !5619
  br label %115, !dbg !5620

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5621
  call void @llvm.dbg.value(metadata i8* %111, metadata !5428, metadata !DIExpression()), !dbg !5554
  %112 = bitcast i8* %77 to i32*, !dbg !5621
  %113 = load i32, i32* %112, align 4, !dbg !5621
  %114 = sext i32 %113 to i64, !dbg !5622
  store i64 %114, i64* %20, align 8, !dbg !5623
  br label %115, !dbg !5624

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5625
  call void @llvm.dbg.value(metadata i8* %117, metadata !5428, metadata !DIExpression()), !dbg !5554
  %118 = trunc i24 %79 to i4, !dbg !5626
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5626

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5627
  %121 = ashr exact i64 %120, 56, !dbg !5627
  store i64 %121, i64* %20, align 8, !dbg !5630
  br label %177, !dbg !5631

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5632
  %124 = ashr exact i64 %123, 48, !dbg !5632
  store i64 %124, i64* %20, align 8, !dbg !5635
  br label %177, !dbg !5636

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5637

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5640
  call void @llvm.dbg.value(metadata i8* %127, metadata !5428, metadata !DIExpression()), !dbg !5554
  %128 = bitcast i8* %77 to i32*, !dbg !5640
  %129 = load i32, i32* %128, align 4, !dbg !5640
  %130 = zext i32 %129 to i64, !dbg !5640
  store i64 %130, i64* %20, align 8, !dbg !5642
  br label %157, !dbg !5643

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5644
  call void @llvm.dbg.value(metadata i8* %132, metadata !5428, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i8* %132, metadata !5428, metadata !DIExpression()), !dbg !5554
  %133 = bitcast i8* %77 to i32*, !dbg !5644
  %134 = load i32, i32* %133, align 4, !dbg !5644
  %135 = zext i32 %134 to i64, !dbg !5644
  store i64 %135, i64* %20, align 8, !dbg !5644
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5646
  %138 = add i32 %137, 7, !dbg !5646
  %139 = and i32 %138, -8, !dbg !5646
  %140 = inttoptr i32 %139 to i8*, !dbg !5646
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5646
  call void @llvm.dbg.value(metadata i8* %141, metadata !5428, metadata !DIExpression()), !dbg !5554
  %142 = inttoptr i32 %139 to i64*, !dbg !5646
  %143 = load i64, i64* %142, align 8, !dbg !5646
  store i64 %143, i64* %20, align 8, !dbg !5647
  br label %157, !dbg !5648

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5649
  %146 = add i32 %145, 7, !dbg !5649
  %147 = and i32 %146, -8, !dbg !5649
  %148 = inttoptr i32 %147 to i8*, !dbg !5649
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5649
  call void @llvm.dbg.value(metadata i8* %149, metadata !5428, metadata !DIExpression()), !dbg !5554
  %150 = inttoptr i32 %147 to i64*, !dbg !5649
  %151 = load i64, i64* %150, align 8, !dbg !5649
  store i64 %151, i64* %20, align 8, !dbg !5650
  br label %157, !dbg !5651

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5652
  call void @llvm.dbg.value(metadata i8* %153, metadata !5428, metadata !DIExpression()), !dbg !5554
  %154 = bitcast i8* %77 to i32*, !dbg !5652
  %155 = load i32, i32* %154, align 4, !dbg !5652
  %156 = zext i32 %155 to i64, !dbg !5653
  store i64 %156, i64* %20, align 8, !dbg !5654
  br label %157, !dbg !5655

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5656
  call void @llvm.dbg.value(metadata i8* %159, metadata !5428, metadata !DIExpression()), !dbg !5554
  %160 = trunc i24 %79 to i4, !dbg !5657
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5657

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5658
  store i64 %162, i64* %20, align 8, !dbg !5661
  br label %177, !dbg !5662

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5663
  store i64 %164, i64* %20, align 8, !dbg !5666
  br label %177, !dbg !5667

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5668
  %167 = add i32 %166, 7, !dbg !5668
  %168 = and i32 %167, -8, !dbg !5668
  %169 = inttoptr i32 %168 to i8*, !dbg !5668
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5668
  call void @llvm.dbg.value(metadata i8* %170, metadata !5428, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i8* %170, metadata !5428, metadata !DIExpression()), !dbg !5554
  %171 = inttoptr i32 %168 to double*, !dbg !5668
  %172 = load double, double* %171, align 8, !dbg !5668
  store double %172, double* %19, align 8, !dbg !5668
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5672
  call void @llvm.dbg.value(metadata i8* %174, metadata !5428, metadata !DIExpression()), !dbg !5554
  %175 = bitcast i8* %77 to i8**, !dbg !5672
  %176 = load i8*, i8** %175, align 4, !dbg !5672
  store i8* %176, i8** %18, align 8, !dbg !5675
  br label %177, !dbg !5676

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5568
  call void @llvm.dbg.value(metadata i8* %178, metadata !5428, metadata !DIExpression()), !dbg !5554
  %179 = and i24 %75, 3, !dbg !5677
  %180 = icmp eq i24 %179, 0, !dbg !5677
  br i1 %180, label %185, label %181, !dbg !5677

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5678
  call void @llvm.dbg.value(metadata i32 %182, metadata !5503, metadata !DIExpression()), !dbg !5679
  %183 = icmp slt i32 %182, 0, !dbg !5680
  %184 = add i32 %182, %29, !dbg !5678
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5682
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5683

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5684
  call void @llvm.dbg.value(metadata i32 %188, metadata !5507, metadata !DIExpression()), !dbg !5685
  %189 = icmp slt i32 %188, 0, !dbg !5686
  %190 = add i32 %29, 1, !dbg !5684
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5688
  call void @llvm.dbg.value(metadata i8* %192, metadata !5495, metadata !DIExpression()), !dbg !5568
  %193 = icmp sgt i32 %76, -1, !dbg !5689
  br i1 %193, label %194, label %196, !dbg !5691

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5692
  call void @llvm.dbg.value(metadata i32 %195, metadata !5510, metadata !DIExpression()), !dbg !5694
  br label %241, !dbg !5695

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5696
  call void @llvm.dbg.value(metadata i32 %197, metadata !5510, metadata !DIExpression()), !dbg !5694
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5495, metadata !DIExpression()), !dbg !5568
  %199 = load i64, i64* %20, align 8, !dbg !5698
  %200 = trunc i64 %199 to i8, !dbg !5699
  store i8 %200, i8* %10, align 1, !dbg !5700
  call void @llvm.dbg.value(metadata i8* %23, metadata !5496, metadata !DIExpression()), !dbg !5568
  br label %245, !dbg !5701

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5702
  %203 = icmp eq i24 %202, 0, !dbg !5702
  %204 = trunc i24 %75 to i8, !dbg !5704
  %205 = shl i8 %204, 1, !dbg !5704
  %206 = and i8 %205, 32, !dbg !5704
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5704
  call void @llvm.dbg.value(metadata i8 %207, metadata !5497, metadata !DIExpression()), !dbg !5568
  %208 = load i64, i64* %20, align 8, !dbg !5705
  call void @llvm.dbg.value(metadata i64 %208, metadata !5435, metadata !DIExpression()), !dbg !5554
  %209 = icmp slt i64 %208, 0, !dbg !5706
  br i1 %209, label %210, label %212, !dbg !5708

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5497, metadata !DIExpression()), !dbg !5568
  %211 = sub nsw i64 0, %208, !dbg !5709
  store i64 %211, i64* %20, align 8, !dbg !5711
  br label %212, !dbg !5712

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5568
  call void @llvm.dbg.value(metadata i8 %213, metadata !5497, metadata !DIExpression()), !dbg !5568
  %214 = load i64, i64* %20, align 8, !dbg !5713
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5714
  call void @llvm.dbg.value(metadata i8* %215, metadata !5495, metadata !DIExpression()), !dbg !5568
  br label %216, !dbg !5715

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5716
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5717
  call void @llvm.dbg.value(metadata i8* %218, metadata !5495, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i8 %217, metadata !5497, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.label(metadata !5553), !dbg !5718
  %219 = icmp sgt i32 %76, -1, !dbg !5719
  br i1 %219, label %222, label %220, !dbg !5720

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5721
  br label %245, !dbg !5720

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5723
  %224 = sub i32 %22, %223, !dbg !5723
  call void @llvm.dbg.value(metadata i32 %224, metadata !5512, metadata !DIExpression()), !dbg !5724
  %225 = load i24, i24* %15, align 8, !dbg !5725
  %226 = and i24 %225, -65, !dbg !5725
  store i24 %226, i24* %15, align 8, !dbg !5725
  %227 = icmp ugt i32 %76, %224, !dbg !5726
  br i1 %227, label %228, label %245, !dbg !5728

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5729
  store i32 %229, i32* %16, align 4, !dbg !5731
  br label %245, !dbg !5732

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5733
  %232 = icmp eq i8* %231, null, !dbg !5735
  br i1 %232, label %245, label %233, !dbg !5736

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5737
  %235 = zext i32 %234 to i64, !dbg !5737
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5739
  call void @llvm.dbg.value(metadata i8* %236, metadata !5495, metadata !DIExpression()), !dbg !5568
  %237 = load i24, i24* %15, align 8, !dbg !5740
  %238 = or i24 %237, 1048576, !dbg !5740
  store i24 %238, i24* %15, align 8, !dbg !5740
  store i8 120, i8* %21, align 1, !dbg !5741
  br label %216, !dbg !5742

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5743
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5746
  br label %363, !dbg !5747

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5748
  call void @llvm.dbg.value(metadata i32 %242, metadata !5510, metadata !DIExpression()), !dbg !5694
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5749
  call void @llvm.dbg.value(metadata i32 -1, metadata !5494, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i32 %29, metadata !5434, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i8* %192, metadata !5495, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i8* %243, metadata !5496, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i8 0, metadata !5497, metadata !DIExpression()), !dbg !5568
  %244 = icmp eq i8* %192, null, !dbg !5750
  br i1 %244, label %363, label %245, !dbg !5752, !llvm.loop !5564

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5721
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5568
  call void @llvm.dbg.value(metadata i32 0, metadata !5516, metadata !DIExpression()), !dbg !5568
  %250 = zext i8 %249 to i32, !dbg !5753
  %251 = icmp eq i8 %249, 0, !dbg !5755
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5568
  call void @llvm.dbg.value(metadata i32 undef, metadata !5515, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5568
  call void @llvm.dbg.value(metadata i32 undef, metadata !5515, metadata !DIExpression()), !dbg !5568
  %252 = icmp sgt i32 %58, 0, !dbg !5756
  br i1 %252, label %253, label %302, !dbg !5757

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5721
  %255 = icmp eq i24 %254, 0, !dbg !5721
  %256 = ptrtoint i8* %248 to i32, !dbg !5758
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5568
  %257 = ptrtoint i8* %247 to i32, !dbg !5758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5568
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5568
  %258 = xor i1 %251, true, !dbg !5759
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5568
  %259 = sext i1 %258 to i32, !dbg !5759
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5568
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5568
  %260 = lshr i24 %246, 19, !dbg !5760
  %261 = and i24 %260, 1, !dbg !5760
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5760
  %263 = zext i24 %262 to i32, !dbg !5760
  %264 = add i32 %257, %259, !dbg !5760
  %265 = add i32 %256, %263, !dbg !5760
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5568
  %266 = and i24 %246, 4194304, !dbg !5761
  %267 = icmp eq i24 %266, 0, !dbg !5761
  %268 = load i32, i32* %16, align 4, !dbg !5763
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5568
  call void @llvm.dbg.value(metadata i32 undef, metadata !5515, metadata !DIExpression()), !dbg !5568
  %269 = load i32, i32* %17, align 8, !dbg !5764
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5764
  call void @llvm.dbg.value(metadata i32 undef, metadata !5515, metadata !DIExpression()), !dbg !5568
  %271 = add i32 %264, %58, !dbg !5764
  %272 = add i32 %265, %268, !dbg !5764
  %273 = add i32 %272, %270, !dbg !5765
  %274 = sub i32 %271, %273, !dbg !5765
  call void @llvm.dbg.value(metadata i32 %274, metadata !5493, metadata !DIExpression()), !dbg !5568
  %275 = and i24 %246, 4, !dbg !5766
  %276 = icmp eq i24 %275, 0, !dbg !5766
  br i1 %276, label %277, label %302, !dbg !5767

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5517, metadata !DIExpression()), !dbg !5768
  %278 = and i24 %246, 64, !dbg !5769
  %279 = icmp eq i24 %278, 0, !dbg !5769
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5770
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5770
  %282 = select i1 %279, i32 32, i32 48, !dbg !5770
  br i1 %280, label %287, label %283, !dbg !5770

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5771
  call void @llvm.dbg.value(metadata i32 %284, metadata !5522, metadata !DIExpression()), !dbg !5772
  %285 = icmp slt i32 %284, 0, !dbg !5773
  %286 = add i32 %29, 1, !dbg !5771
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5568
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %290, metadata !5434, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i8 undef, metadata !5517, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8 %288, metadata !5497, metadata !DIExpression()), !dbg !5568
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5775
  %292 = add i32 %291, -1, !dbg !5775
  br label %293, !dbg !5775

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5776
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %295, metadata !5434, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %294, metadata !5493, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i32 %294, metadata !5493, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5568
  %296 = icmp sgt i32 %294, 0, !dbg !5777
  br i1 %296, label %297, label %302, !dbg !5775

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5778
  call void @llvm.dbg.value(metadata i32 %298, metadata !5493, metadata !DIExpression()), !dbg !5568
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5779
  call void @llvm.dbg.value(metadata i32 %299, metadata !5528, metadata !DIExpression()), !dbg !5780
  %300 = icmp slt i32 %299, 0, !dbg !5781
  %301 = add i32 %295, 1, !dbg !5779
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  br i1 %300, label %361, label %293, !llvm.loop !5783

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5568
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5568
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %305, metadata !5434, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %304, metadata !5493, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i8 %303, metadata !5497, metadata !DIExpression()), !dbg !5568
  %306 = icmp eq i8 %303, 0, !dbg !5785
  br i1 %306, label %312, label %307, !dbg !5786

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5787
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5788
  call void @llvm.dbg.value(metadata i32 %309, metadata !5531, metadata !DIExpression()), !dbg !5789
  %310 = icmp slt i32 %309, 0, !dbg !5790
  %311 = add i32 %305, 1, !dbg !5788
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %313, metadata !5434, metadata !DIExpression()), !dbg !5554
  %314 = lshr i24 %246, 20, !dbg !5792
  %315 = lshr i24 %246, 19, !dbg !5793
  %316 = or i24 %314, %315, !dbg !5794
  %317 = and i24 %316, 1, !dbg !5794
  %318 = icmp eq i24 %317, 0, !dbg !5794
  br i1 %318, label %323, label %319, !dbg !5795

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5796
  call void @llvm.dbg.value(metadata i32 %320, metadata !5535, metadata !DIExpression()), !dbg !5797
  %321 = icmp slt i32 %320, 0, !dbg !5798
  %322 = add i32 %313, 1, !dbg !5796
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %324, metadata !5434, metadata !DIExpression()), !dbg !5554
  %325 = and i24 %246, 1048576, !dbg !5800
  %326 = icmp eq i24 %325, 0, !dbg !5800
  br i1 %326, label %333, label %327, !dbg !5801

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5802
  %329 = zext i8 %328 to i32, !dbg !5802
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5802
  call void @llvm.dbg.value(metadata i32 %330, metadata !5541, metadata !DIExpression()), !dbg !5803
  %331 = icmp slt i32 %330, 0, !dbg !5804
  %332 = add i32 %324, 1, !dbg !5802
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %334, metadata !5434, metadata !DIExpression()), !dbg !5554
  %335 = load i32, i32* %16, align 4, !dbg !5806
  call void @llvm.dbg.value(metadata i32 %335, metadata !5516, metadata !DIExpression()), !dbg !5568
  br label %336, !dbg !5807

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5808
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %338, metadata !5434, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %337, metadata !5516, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5568
  %339 = icmp sgt i32 %337, 0, !dbg !5809
  br i1 %339, label %340, label %345, !dbg !5807

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5810
  call void @llvm.dbg.value(metadata i32 %341, metadata !5516, metadata !DIExpression()), !dbg !5568
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5811
  call void @llvm.dbg.value(metadata i32 %342, metadata !5545, metadata !DIExpression()), !dbg !5812
  %343 = icmp slt i32 %342, 0, !dbg !5813
  %344 = add i32 %338, 1, !dbg !5811
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  br i1 %343, label %361, label %336, !llvm.loop !5815

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5817
  call void @llvm.dbg.value(metadata i32 %346, metadata !5548, metadata !DIExpression()), !dbg !5818
  %347 = icmp slt i32 %346, 0, !dbg !5819
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5817
  call void @llvm.dbg.value(metadata i32 %349, metadata !5434, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %304, metadata !5493, metadata !DIExpression()), !dbg !5568
  %350 = icmp sgt i32 %304, 0, !dbg !5821
  br i1 %350, label %351, label %363, !dbg !5822

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5822
  %353 = add i32 %352, %338, !dbg !5822
  br label %354, !dbg !5822

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %355, metadata !5493, metadata !DIExpression()), !dbg !5568
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %356, metadata !5550, metadata !DIExpression()), !dbg !5824
  %357 = icmp slt i32 %356, 0, !dbg !5825
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5827
  call void @llvm.dbg.value(metadata i32 undef, metadata !5434, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5554
  call void @llvm.dbg.value(metadata i32 %359, metadata !5493, metadata !DIExpression()), !dbg !5568
  %360 = icmp sgt i32 %355, 1, !dbg !5821
  br i1 %360, label %354, label %363, !dbg !5822, !llvm.loop !5828

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5434, metadata !DIExpression()), !dbg !5554
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5565
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %364, metadata !5434, metadata !DIExpression()), !dbg !5554
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5565
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5554
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5830
  ret i32 %366, !dbg !5830
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5831 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5835, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i8* %1, metadata !5836, metadata !DIExpression()), !dbg !5837
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5838
  store i24 0, i24* %3, align 4, !dbg !5838
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5838
  store i8 0, i8* %4, align 1, !dbg !5838
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5838
  store i32 0, i32* %5, align 4, !dbg !5838
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5838
  store i32 0, i32* %6, align 4, !dbg !5838
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5839
  call void @llvm.dbg.value(metadata i8* %7, metadata !5836, metadata !DIExpression()), !dbg !5837
  %8 = load i8, i8* %7, align 1, !dbg !5840
  %9 = icmp eq i8 %8, 37, !dbg !5842
  br i1 %9, label %10, label %12, !dbg !5843

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5844
  call void @llvm.dbg.value(metadata i8* %11, metadata !5836, metadata !DIExpression()), !dbg !5837
  store i8 37, i8* %4, align 1, !dbg !5846
  br label %18, !dbg !5847

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5848
  call void @llvm.dbg.value(metadata i8* %13, metadata !5836, metadata !DIExpression()), !dbg !5837
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5849
  call void @llvm.dbg.value(metadata i8* %14, metadata !5836, metadata !DIExpression()), !dbg !5837
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5850
  call void @llvm.dbg.value(metadata i8* %15, metadata !5836, metadata !DIExpression()), !dbg !5837
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5851
  call void @llvm.dbg.value(metadata i8* %16, metadata !5836, metadata !DIExpression()), !dbg !5837
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5852
  call void @llvm.dbg.value(metadata i8* %17, metadata !5836, metadata !DIExpression()), !dbg !5837
  br label %18, !dbg !5853

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5837
  ret i8* %19, !dbg !5854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5855 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5859, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i8* %1, metadata !5860, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i8* %2, metadata !5861, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i8* %3, metadata !5862, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 0, metadata !5863, metadata !DIExpression()), !dbg !5866
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5867

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5868
  call void @llvm.dbg.value(metadata i32 %9, metadata !5863, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i8* %8, metadata !5861, metadata !DIExpression()), !dbg !5866
  %10 = icmp ult i8* %8, %3, !dbg !5869
  br i1 %10, label %11, label %13, !dbg !5870

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5871
  br label %17, !dbg !5870

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5872

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5873
  %16 = icmp eq i8 %15, 0, !dbg !5872
  br i1 %16, label %24, label %17, !dbg !5867

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5871
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5874
  call void @llvm.dbg.value(metadata i8* %19, metadata !5861, metadata !DIExpression()), !dbg !5866
  %20 = zext i8 %18 to i32, !dbg !5875
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5876
  call void @llvm.dbg.value(metadata i32 %21, metadata !5864, metadata !DIExpression()), !dbg !5877
  %22 = icmp slt i32 %21, 0, !dbg !5878
  %23 = add i32 %9, 1, !dbg !5880
  call void @llvm.dbg.value(metadata i32 undef, metadata !5863, metadata !DIExpression()), !dbg !5866
  br i1 %22, label %24, label %7, !llvm.loop !5881

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5866
  ret i32 %25, !dbg !5883
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5884 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5888, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5889, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i8* %2, metadata !5890, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i8* %3, metadata !5891, metadata !DIExpression()), !dbg !5898
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5899
  %6 = load i8, i8* %5, align 1, !dbg !5899
  %7 = zext i8 %6 to i32, !dbg !5900
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5901
  %9 = icmp eq i32 %8, 0, !dbg !5901
  call void @llvm.dbg.value(metadata i1 %9, metadata !5892, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5898
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5902
  call void @llvm.dbg.value(metadata i32 %10, metadata !5893, metadata !DIExpression()), !dbg !5898
  %11 = ptrtoint i8* %3 to i32, !dbg !5903
  %12 = ptrtoint i8* %2 to i32, !dbg !5903
  %13 = sub i32 %11, %12, !dbg !5903
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5904
  call void @llvm.dbg.value(metadata i8* %14, metadata !5895, metadata !DIExpression()), !dbg !5898
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5905

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5898
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5888, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i8* %18, metadata !5895, metadata !DIExpression()), !dbg !5898
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5906
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5907
  call void @llvm.dbg.value(metadata i32 %25, metadata !5896, metadata !DIExpression()), !dbg !5908
  %26 = icmp ult i32 %25, 10, !dbg !5909
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5910
  %28 = add i32 %27, %25, !dbg !5908
  %29 = trunc i32 %28 to i8, !dbg !5910
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5911
  call void @llvm.dbg.value(metadata i8* %30, metadata !5895, metadata !DIExpression()), !dbg !5898
  store i8 %29, i8* %30, align 1, !dbg !5912
  call void @llvm.dbg.value(metadata i64 %22, metadata !5888, metadata !DIExpression()), !dbg !5898
  %31 = icmp uge i64 %19, %15, !dbg !5913
  %32 = icmp ugt i8* %30, %2, !dbg !5914
  %33 = and i1 %31, %32, !dbg !5914
  br i1 %33, label %17, label %34, !dbg !5915, !llvm.loop !5916

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5918
  %36 = load i24, i24* %35, align 4, !dbg !5918
  %37 = and i24 %36, 32, !dbg !5918
  %38 = icmp eq i24 %37, 0, !dbg !5918
  br i1 %38, label %44, label %39, !dbg !5920

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5921

40:                                               ; preds = %39
  br label %41, !dbg !5923

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5927
  store i24 %43, i24* %35, align 4, !dbg !5927
  br label %44, !dbg !5928

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5929 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5935, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i8* %1, metadata !5936, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i32 %2, metadata !5937, metadata !DIExpression()), !dbg !5938
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5939
  %5 = load i24, i24* %4, align 4, !dbg !5939
  %6 = lshr i24 %5, 11, !dbg !5939
  %7 = and i24 %6, 15, !dbg !5939
  %8 = zext i24 %7 to i32, !dbg !5939
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5940

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5941
  store i32 %2, i32* %10, align 4, !dbg !5943
  br label %28, !dbg !5944

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5945
  store i8 %12, i8* %1, align 1, !dbg !5946
  br label %28, !dbg !5947

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5948
  %15 = bitcast i8* %1 to i16*, !dbg !5949
  store i16 %14, i16* %15, align 2, !dbg !5950
  br label %28, !dbg !5951

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5952
  store i32 %2, i32* %17, align 4, !dbg !5953
  br label %28, !dbg !5954

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5955
  %20 = bitcast i8* %1 to i64*, !dbg !5956
  store i64 %19, i64* %20, align 8, !dbg !5957
  br label %28, !dbg !5958

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5959
  %23 = bitcast i8* %1 to i64*, !dbg !5960
  store i64 %22, i64* %23, align 8, !dbg !5961
  br label %28, !dbg !5962

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5963
  store i32 %2, i32* %25, align 4, !dbg !5964
  br label %28, !dbg !5965

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5966
  store i32 %2, i32* %27, align 4, !dbg !5967
  br label %28, !dbg !5968

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5969
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5973, metadata !DIExpression()), !dbg !5974
  %2 = add i32 %0, -65, !dbg !5975
  %3 = icmp ult i32 %2, 26, !dbg !5976
  %4 = zext i1 %3 to i32, !dbg !5976
  ret i32 %4, !dbg !5977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5978 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5982, metadata !DIExpression()), !dbg !5983
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5984

2:                                                ; preds = %1
  br label %4, !dbg !5985

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5987

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5988
  ret i32 %5, !dbg !5989
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5990 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5992, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata i8* %1, metadata !5993, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata i8 1, metadata !5994, metadata !DIExpression()), !dbg !5995
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5996

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5994, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata i8* %5, metadata !5993, metadata !DIExpression()), !dbg !5995
  %6 = load i8, i8* %5, align 1, !dbg !5997
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5999

7:                                                ; preds = %4
  br label %11, !dbg !6000

8:                                                ; preds = %4
  br label %11, !dbg !6002

9:                                                ; preds = %4
  br label %11, !dbg !6003

10:                                               ; preds = %4
  br label %11, !dbg !6004

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6005
  %14 = or i24 %13, %12, !dbg !6005
  store i24 %14, i24* %3, align 4, !dbg !6005
  call void @llvm.dbg.value(metadata i8 poison, metadata !5994, metadata !DIExpression()), !dbg !5995
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5993, metadata !DIExpression()), !dbg !5995
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5994, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata i8* %15, metadata !5993, metadata !DIExpression()), !dbg !5995
  %17 = load i24, i24* %3, align 4, !dbg !6006
  %18 = and i24 %17, 68, !dbg !6008
  %19 = icmp eq i24 %18, 68, !dbg !6008
  br i1 %19, label %20, label %22, !dbg !6008

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6009
  store i24 %21, i24* %3, align 4, !dbg !6009
  br label %22, !dbg !6011

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6013 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6015, metadata !DIExpression()), !dbg !6019
  call void @llvm.dbg.value(metadata i8* %1, metadata !6016, metadata !DIExpression()), !dbg !6019
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6020
  %5 = load i24, i24* %4, align 4, !dbg !6021
  %6 = or i24 %5, 128, !dbg !6021
  store i24 %6, i24* %4, align 4, !dbg !6021
  call void @llvm.dbg.value(metadata i8* %1, metadata !6016, metadata !DIExpression()), !dbg !6019
  %7 = load i8, i8* %1, align 1, !dbg !6022
  %8 = icmp eq i8 %7, 42, !dbg !6024
  br i1 %8, label %9, label %12, !dbg !6025

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6026
  store i24 %10, i24* %4, align 4, !dbg !6026
  call void @llvm.dbg.value(metadata i8* %1, metadata !6016, metadata !DIExpression()), !dbg !6019
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6028
  call void @llvm.dbg.value(metadata i8* %11, metadata !6016, metadata !DIExpression()), !dbg !6019
  store i8* %11, i8** %3, align 4, !dbg !6028
  br label %29, !dbg !6029

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6017, metadata !DIExpression()), !dbg !6019
  call void @llvm.dbg.value(metadata i8** %3, metadata !6016, metadata !DIExpression(DW_OP_deref)), !dbg !6019
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6030
  call void @llvm.dbg.value(metadata i32 %13, metadata !6018, metadata !DIExpression()), !dbg !6019
  %14 = load i8*, i8** %3, align 4, !dbg !6031
  call void @llvm.dbg.value(metadata i8* %14, metadata !6016, metadata !DIExpression()), !dbg !6019
  %15 = icmp eq i8* %14, %1, !dbg !6033
  br i1 %15, label %29, label %16, !dbg !6034

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6035
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6037
  store i32 %13, i32* %18, align 4, !dbg !6038
  %19 = lshr i32 %13, 31, !dbg !6039
  %20 = lshr i24 %17, 1, !dbg !6040
  %21 = and i24 %20, 1, !dbg !6040
  %22 = zext i24 %21 to i32, !dbg !6040
  %23 = or i32 %19, %22, !dbg !6040
  %24 = trunc i32 %23 to i24, !dbg !6040
  %25 = shl nuw nsw i24 %24, 1, !dbg !6040
  %26 = and i24 %17, -131, !dbg !6040
  %27 = or i24 %26, 128, !dbg !6040
  %28 = or i24 %25, %27, !dbg !6040
  store i24 %28, i24* %4, align 4, !dbg !6040
  br label %29, !dbg !6041

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6019
  ret i8* %30, !dbg !6042
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6043 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6045, metadata !DIExpression()), !dbg !6048
  call void @llvm.dbg.value(metadata i8* %1, metadata !6046, metadata !DIExpression()), !dbg !6048
  %4 = load i8, i8* %1, align 1, !dbg !6049
  %5 = icmp eq i8 %4, 46, !dbg !6050
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6051
  %7 = load i24, i24* %6, align 4, !dbg !6052
  %8 = select i1 %5, i24 512, i24 0, !dbg !6052
  %9 = and i24 %7, -513, !dbg !6052
  %10 = or i24 %9, %8, !dbg !6052
  store i24 %10, i24* %6, align 4, !dbg !6052
  br i1 %5, label %11, label %32, !dbg !6053

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6046, metadata !DIExpression()), !dbg !6048
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6054
  call void @llvm.dbg.value(metadata i8* %12, metadata !6046, metadata !DIExpression()), !dbg !6048
  store i8* %12, i8** %3, align 4, !dbg !6054
  %13 = load i8, i8* %12, align 1, !dbg !6055
  %14 = icmp eq i8 %13, 42, !dbg !6057
  br i1 %14, label %15, label %18, !dbg !6058

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6059
  store i24 %16, i24* %6, align 4, !dbg !6059
  call void @llvm.dbg.value(metadata i8* %12, metadata !6046, metadata !DIExpression()), !dbg !6048
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6061
  call void @llvm.dbg.value(metadata i8* %17, metadata !6046, metadata !DIExpression()), !dbg !6048
  store i8* %17, i8** %3, align 4, !dbg !6061
  br label %32, !dbg !6062

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6046, metadata !DIExpression(DW_OP_deref)), !dbg !6048
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6063
  call void @llvm.dbg.value(metadata i32 %19, metadata !6047, metadata !DIExpression()), !dbg !6048
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6064
  store i32 %19, i32* %20, align 4, !dbg !6065
  %21 = lshr i32 %19, 31, !dbg !6066
  %22 = load i24, i24* %6, align 4, !dbg !6067
  %23 = lshr i24 %22, 1, !dbg !6067
  %24 = and i24 %23, 1, !dbg !6067
  %25 = zext i24 %24 to i32, !dbg !6067
  %26 = or i32 %21, %25, !dbg !6067
  %27 = trunc i32 %26 to i24, !dbg !6067
  %28 = shl nuw nsw i24 %27, 1, !dbg !6067
  %29 = and i24 %22, -3, !dbg !6067
  %30 = or i24 %28, %29, !dbg !6067
  store i24 %30, i24* %6, align 4, !dbg !6067
  %31 = load i8*, i8** %3, align 4, !dbg !6068
  call void @llvm.dbg.value(metadata i8* %31, metadata !6046, metadata !DIExpression()), !dbg !6048
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6048
  ret i8* %33, !dbg !6069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6070 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6072, metadata !DIExpression()), !dbg !6074
  call void @llvm.dbg.value(metadata i8* %1, metadata !6073, metadata !DIExpression()), !dbg !6074
  %3 = load i8, i8* %1, align 1, !dbg !6075
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6076

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6077
  call void @llvm.dbg.value(metadata i8* %5, metadata !6073, metadata !DIExpression()), !dbg !6074
  %6 = load i8, i8* %5, align 1, !dbg !6080
  %7 = icmp eq i8 %6, 104, !dbg !6081
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6082
  %9 = load i24, i24* %8, align 4, !dbg !6082
  %10 = and i24 %9, -30721, !dbg !6082
  br i1 %7, label %11, label %14, !dbg !6083

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6084
  store i24 %12, i24* %8, align 4, !dbg !6084
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6086
  call void @llvm.dbg.value(metadata i8* %13, metadata !6073, metadata !DIExpression()), !dbg !6074
  br label %56, !dbg !6087

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6088
  store i24 %15, i24* %8, align 4, !dbg !6088
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6090
  call void @llvm.dbg.value(metadata i8* %17, metadata !6073, metadata !DIExpression()), !dbg !6074
  %18 = load i8, i8* %17, align 1, !dbg !6092
  %19 = icmp eq i8 %18, 108, !dbg !6093
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6094
  %21 = load i24, i24* %20, align 4, !dbg !6094
  %22 = and i24 %21, -30721, !dbg !6094
  br i1 %19, label %23, label %26, !dbg !6095

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6096
  store i24 %24, i24* %20, align 4, !dbg !6096
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6098
  call void @llvm.dbg.value(metadata i8* %25, metadata !6073, metadata !DIExpression()), !dbg !6074
  br label %56, !dbg !6099

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6100
  store i24 %27, i24* %20, align 4, !dbg !6100
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6102
  %30 = load i24, i24* %29, align 4, !dbg !6103
  %31 = and i24 %30, -30721, !dbg !6103
  %32 = or i24 %31, 10240, !dbg !6103
  store i24 %32, i24* %29, align 4, !dbg !6103
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6104
  call void @llvm.dbg.value(metadata i8* %33, metadata !6073, metadata !DIExpression()), !dbg !6074
  br label %56, !dbg !6105

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6106
  %36 = load i24, i24* %35, align 4, !dbg !6107
  %37 = and i24 %36, -30721, !dbg !6107
  %38 = or i24 %37, 12288, !dbg !6107
  store i24 %38, i24* %35, align 4, !dbg !6107
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6108
  call void @llvm.dbg.value(metadata i8* %39, metadata !6073, metadata !DIExpression()), !dbg !6074
  br label %56, !dbg !6109

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6110
  %42 = load i24, i24* %41, align 4, !dbg !6111
  %43 = and i24 %42, -30721, !dbg !6111
  %44 = or i24 %43, 14336, !dbg !6111
  store i24 %44, i24* %41, align 4, !dbg !6111
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6112
  call void @llvm.dbg.value(metadata i8* %45, metadata !6073, metadata !DIExpression()), !dbg !6074
  br label %56, !dbg !6113

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6114
  %48 = load i24, i24* %47, align 4, !dbg !6115
  %49 = and i24 %48, -30723, !dbg !6115
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6116
  call void @llvm.dbg.value(metadata i8* %50, metadata !6073, metadata !DIExpression()), !dbg !6074
  %51 = or i24 %49, 16386, !dbg !6117
  store i24 %51, i24* %47, align 4, !dbg !6117
  br label %56, !dbg !6118

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6119
  %54 = load i24, i24* %53, align 4, !dbg !6120
  %55 = and i24 %54, -30721, !dbg !6120
  store i24 %55, i24* %53, align 4, !dbg !6120
  br label %56, !dbg !6121

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6073, metadata !DIExpression()), !dbg !6074
  ret i8* %57, !dbg !6122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6123 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6125, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8* %1, metadata !6126, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8 0, metadata !6127, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8* %1, metadata !6126, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6130
  %3 = load i8, i8* %1, align 1, !dbg !6131
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6132
  store i8 %3, i8* %4, align 1, !dbg !6133
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6134

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6135

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6136
  %9 = load i24, i24* %8, align 4, !dbg !6136
  %10 = and i24 %9, -458753, !dbg !6136
  %11 = or i24 %10, %7, !dbg !6136
  call void @llvm.dbg.label(metadata !6128), !dbg !6137
  %12 = and i24 %9, 30720, !dbg !6138
  %13 = icmp eq i24 %12, 16384, !dbg !6138
  %14 = zext i1 %13 to i24, !dbg !6140
  %15 = or i24 %11, %14, !dbg !6140
  %16 = icmp eq i8 %3, 99, !dbg !6141
  br i1 %16, label %17, label %43, !dbg !6143

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6144
  %19 = icmp ne i24 %18, 0, !dbg !6144
  call void @llvm.dbg.value(metadata i1 %19, metadata !6127, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6130
  br label %43, !dbg !6146

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6147
  %22 = load i24, i24* %21, align 4, !dbg !6148
  %23 = and i24 %22, -458753, !dbg !6148
  %24 = or i24 %23, 262144, !dbg !6148
  call void @llvm.dbg.value(metadata i8 1, metadata !6127, metadata !DIExpression()), !dbg !6130
  br label %43, !dbg !6149

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6152
  %27 = load i24, i24* %26, align 4, !dbg !6153
  %28 = and i24 %27, -458753, !dbg !6153
  %29 = or i24 %28, 196608, !dbg !6153
  %30 = and i24 %27, 30720, !dbg !6154
  %31 = icmp eq i24 %30, 16384, !dbg !6154
  br label %43, !dbg !6156

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6157
  %34 = load i24, i24* %33, align 4, !dbg !6158
  %35 = and i24 %34, -458753, !dbg !6158
  %36 = or i24 %35, 196608, !dbg !6158
  %37 = and i24 %34, 30720, !dbg !6159
  %38 = icmp ne i24 %37, 0, !dbg !6159
  br label %43, !dbg !6161

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6162
  %41 = load i24, i24* %40, align 4, !dbg !6163
  %42 = or i24 %41, 1, !dbg !6163
  br label %43, !dbg !6164

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6165
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6166
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6167
  call void @llvm.dbg.value(metadata i8* %48, metadata !6126, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8 poison, metadata !6127, metadata !DIExpression()), !dbg !6130
  %49 = lshr i24 %44, 1, !dbg !6165
  %50 = and i24 %49, 1, !dbg !6165
  %51 = zext i24 %50 to i32, !dbg !6165
  %52 = or i32 %51, %47, !dbg !6165
  %53 = trunc i32 %52 to i24, !dbg !6165
  %54 = shl nuw nsw i24 %53, 1, !dbg !6165
  %55 = and i24 %44, -3, !dbg !6165
  %56 = or i24 %54, %55, !dbg !6165
  store i24 %56, i24* %46, align 4, !dbg !6165
  ret i8* %48, !dbg !6168
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6169 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6173, metadata !DIExpression()), !dbg !6176
  %2 = load i8*, i8** %0, align 4, !dbg !6177
  call void @llvm.dbg.value(metadata i8* %2, metadata !6174, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 0, metadata !6175, metadata !DIExpression()), !dbg !6176
  %3 = load i8, i8* %2, align 1, !dbg !6178
  %4 = zext i8 %3 to i32, !dbg !6179
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6180
  %6 = icmp eq i32 %5, 0, !dbg !6181
  br i1 %6, label %19, label %7, !dbg !6181

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6175, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i8* %10, metadata !6174, metadata !DIExpression()), !dbg !6176
  %11 = mul i32 %9, 10, !dbg !6182
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6184
  call void @llvm.dbg.value(metadata i8* %12, metadata !6174, metadata !DIExpression()), !dbg !6176
  %13 = add i32 %11, -48, !dbg !6185
  %14 = add i32 %13, %8, !dbg !6186
  call void @llvm.dbg.value(metadata i32 %14, metadata !6175, metadata !DIExpression()), !dbg !6176
  %15 = load i8, i8* %12, align 1, !dbg !6178
  %16 = zext i8 %15 to i32, !dbg !6179
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6180
  %18 = icmp eq i32 %17, 0, !dbg !6181
  br i1 %18, label %19, label %7, !dbg !6181, !llvm.loop !6187

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6176
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6176
  store i8* %20, i8** %0, align 4, !dbg !6189
  ret i32 %21, !dbg !6190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !6191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6193, metadata !DIExpression()), !dbg !6194
  %2 = add i32 %0, -48, !dbg !6195
  %3 = icmp ult i32 %2, 10, !dbg !6196
  %4 = zext i1 %3 to i32, !dbg !6196
  ret i32 %4, !dbg !6197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6198 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6224, !srcloc !6225
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6226, !srcloc !6227
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6228, !srcloc !6229
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6230, !srcloc !6231
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6232, !srcloc !6233
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6234, !srcloc !6235
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6236, !srcloc !6237
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6238, !srcloc !6239
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT\0A\09.equ\09CONFIG_TINYCRYPT,1\0A\09.type\09CONFIG_TINYCRYPT,%object", ""() #25, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6254, !srcloc !6255
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6256, !srcloc !6257
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6258, !srcloc !6259
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6260, !srcloc !6261
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #25, !dbg !6262, !srcloc !6263
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !6264, !srcloc !6265
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6266, !srcloc !6267
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !6268, !srcloc !6269
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6270, !srcloc !6271
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6272, !srcloc !6273
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6274, !srcloc !6275
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6276, !srcloc !6277
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6278, !srcloc !6279
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !6280, !srcloc !6281
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6282, !srcloc !6283
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6284, !srcloc !6285
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !6286, !srcloc !6287
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6288, !srcloc !6289
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6290, !srcloc !6291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6292, !srcloc !6293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6294, !srcloc !6295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6296, !srcloc !6297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6298, !srcloc !6299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6300, !srcloc !6301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6302, !srcloc !6303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6304, !srcloc !6305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #25, !dbg !6306, !srcloc !6307
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6308, !srcloc !6309
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6310, !srcloc !6311
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES\0A\09.equ\09CONFIG_TINYCRYPT_AES,1\0A\09.type\09CONFIG_TINYCRYPT_AES,%object", ""() #25, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CBC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CBC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CBC,%object", ""() #25, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CTR\0A\09.equ\09CONFIG_TINYCRYPT_AES_CTR,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CTR,%object", ""() #25, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CCM\0A\09.equ\09CONFIG_TINYCRYPT_AES_CCM,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CCM,%object", ""() #25, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CMAC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CMAC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CMAC,%object", ""() #25, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #25, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #25, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO\0A\09.equ\09CONFIG_CRYPTO,1\0A\09.type\09CONFIG_CRYPTO,%object", ""() #25, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_INIT_PRIORITY\0A\09.equ\09CONFIG_CRYPTO_INIT_PRIORITY,90\0A\09.type\09CONFIG_CRYPTO_INIT_PRIORITY,%object", ""() #25, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL_DBG\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL_DBG,1\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL_DBG,%object", ""() #25, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL,4\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL,%object", ""() #25, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM,%object", ""() #25, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,2\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,%object", ""() #25, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,%object", ""() #25, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_EXPERIMENTAL\0A\09.equ\09CONFIG_EXPERIMENTAL,1\0A\09.type\09CONFIG_EXPERIMENTAL,%object", ""() #25, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6850, !srcloc !6851
  ret void, !dbg !6852
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6853 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6855, metadata !DIExpression()), !dbg !6857
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6858
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6859
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6860, !srcloc !6869
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6860
  call void @llvm.dbg.value(metadata i32 %3, metadata !6866, metadata !DIExpression()) #25, !dbg !6870
  call void @llvm.dbg.value(metadata i32 undef, metadata !6867, metadata !DIExpression()) #25, !dbg !6870
  call void @llvm.dbg.value(metadata i32 %3, metadata !6856, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.value(metadata i32 %3, metadata !6871, metadata !DIExpression()) #25, !dbg !6876
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6878, !srcloc !6879
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6880
  ret i32 0, !dbg !6881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6882 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6884
  %2 = or i32 %1, 512, !dbg !6884
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6884
  ret void, !dbg !6885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6886 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6887
  %2 = or i32 %1, 1024, !dbg !6887
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6887
  ret void, !dbg !6888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6891, metadata !DIExpression()), !dbg !6892
  ret i32 0, !dbg !6893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6894 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6897, metadata !DIExpression()), !dbg !6905
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !6906
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6906
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !6898, metadata !DIExpression()), !dbg !6907
  call void @llvm.va_start(i8* nonnull %3), !dbg !6908
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !6909
  %5 = load i32, i32* %4, align 4, !dbg !6909
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6909
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6909
  call void @llvm.va_end(i8* nonnull %3), !dbg !6910
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6911
  ret void, !dbg !6911
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6912 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6917, metadata !DIExpression()), !dbg !6918
  call void @llvm.dbg.value(metadata i8* %0, metadata !6916, metadata !DIExpression()), !dbg !6918
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !6919
  ret void, !dbg !6920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6925, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i8* %1, metadata !6926, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i32 %2, metadata !6927, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i8* %1, metadata !6928, metadata !DIExpression()), !dbg !6929
  %4 = icmp eq i32 %2, 0, !dbg !6930
  br i1 %4, label %14, label %5, !dbg !6931

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) #26, !dbg !6929
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6931

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6928, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i32 %10, metadata !6927, metadata !DIExpression()), !dbg !6929
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 noundef %7) #27, !dbg !6932
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !6934
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6935
  call void @llvm.dbg.value(metadata i32 %11, metadata !6927, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i8* %12, metadata !6928, metadata !DIExpression()), !dbg !6929
  br i1 %13, label %14, label %8, !dbg !6935, !llvm.loop !6936

14:                                               ; preds = %8, %3
  ret void, !dbg !6938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) unnamed_addr #3 !dbg !6939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6941, metadata !DIExpression()), !dbg !6942
  %2 = add i32 %0, -1, !dbg !6943
  %3 = icmp ult i32 %2, 4, !dbg !6943
  %4 = shl i32 %2, 3, !dbg !6943
  %5 = lshr i32 1145657157, %4, !dbg !6943
  %6 = trunc i32 %5 to i8, !dbg !6943
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6943
  ret i8 %7, !dbg !6944
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6949, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.value(metadata i32 %1, metadata !6950, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.value(metadata i32 0, metadata !6951, metadata !DIExpression()), !dbg !6961
  br label %4, !dbg !6962

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.64, i32 0, i32 0)) #27, !dbg !6963
  call void @llvm.dbg.value(metadata i32 0, metadata !6953, metadata !DIExpression()), !dbg !6964
  br label %16, !dbg !6965

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6951, metadata !DIExpression()), !dbg !6961
  %6 = icmp ult i32 %5, %1, !dbg !6966
  br i1 %6, label %7, label %11, !dbg !6970

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6971
  %9 = load i8, i8* %8, align 1, !dbg !6971
  %10 = zext i8 %9 to i32, !dbg !6973
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.65, i32 0, i32 0), i32 noundef %10) #27, !dbg !6974
  br label %12, !dbg !6975

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.66, i32 0, i32 0)) #27, !dbg !6976
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6978
  call void @llvm.dbg.value(metadata i32 %13, metadata !6951, metadata !DIExpression()), !dbg !6961
  %14 = icmp eq i32 %13, 8, !dbg !6979
  br i1 %14, label %3, label %4, !dbg !6962, !llvm.loop !6980

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.67, i32 0, i32 0)) #27, !dbg !6982
  ret void, !dbg !6983

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6953, metadata !DIExpression()), !dbg !6964
  %18 = icmp ult i32 %17, %1, !dbg !6984
  br i1 %18, label %19, label %26, !dbg !6985

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6986
  %21 = load i8, i8* %20, align 1, !dbg !6986
  call void @llvm.dbg.value(metadata i8 %21, metadata !6955, metadata !DIExpression()), !dbg !6987
  %22 = zext i8 %21 to i32, !dbg !6988
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !6989
  %24 = icmp eq i32 %23, 0, !dbg !6990
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6989
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %25) #27, !dbg !6991
  br label %27, !dbg !6992

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.69, i32 0, i32 0)) #27, !dbg !6993
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6995
  call void @llvm.dbg.value(metadata i32 %28, metadata !6953, metadata !DIExpression()), !dbg !6964
  %29 = icmp eq i32 %28, 8, !dbg !6996
  br i1 %29, label %15, label %16, !dbg !6965, !llvm.loop !6997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7001, metadata !DIExpression()), !dbg !7002
  %2 = add i32 %0, -32, !dbg !7003
  %3 = icmp ult i32 %2, 95, !dbg !7003
  %4 = zext i1 %3 to i32, !dbg !7003
  ret i32 %4, !dbg !7004
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_copy(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7010, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata i32 %1, metadata !7011, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata i8* %2, metadata !7012, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata i32 %3, metadata !7013, metadata !DIExpression()), !dbg !7014
  %5 = icmp ugt i32 %3, %1, !dbg !7015
  br i1 %5, label %8, label %6, !dbg !7017

6:                                                ; preds = %4
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %3) #27, !dbg !7018
  br label %8, !dbg !7020

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %3, %6 ], [ 0, %4 ], !dbg !7021
  ret i32 %9, !dbg !7022
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_set(i8* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7023 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7027, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i8 %1, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %2, metadata !7029, metadata !DIExpression()), !dbg !7030
  %4 = zext i8 %1 to i32, !dbg !7031
  %5 = tail call i8* @memset(i8* noundef %0, i32 noundef %4, i32 noundef %2) #27, !dbg !7032
  ret void, !dbg !7033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @_double_byte(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !7034 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7038, metadata !DIExpression()), !dbg !7039
  %2 = shl i8 %0, 1, !dbg !7040
  %3 = icmp slt i8 %0, 0, !dbg !7041
  %4 = select i1 %3, i8 27, i8 0, !dbg !7041
  %5 = xor i8 %4, %2, !dbg !7042
  ret i8 %5, !dbg !7043
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @_compare(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7044 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7048, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i8* %1, metadata !7049, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i32 %2, metadata !7050, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i8* %0, metadata !7051, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i8* %1, metadata !7052, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i8 0, metadata !7053, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i32 0, metadata !7054, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i8 undef, metadata !7053, metadata !DIExpression()), !dbg !7056
  %4 = icmp eq i32 %2, 0, !dbg !7058
  br i1 %4, label %5, label %7, !dbg !7060

5:                                                ; preds = %7, %3
  %6 = phi i32 [ 0, %3 ], [ %16, %7 ]
  ret i32 %6, !dbg !7061

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %17, %7 ], [ 0, %3 ]
  %9 = phi i32 [ %16, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7054, metadata !DIExpression()), !dbg !7057
  %10 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !7062
  %11 = load i8, i8* %10, align 1, !dbg !7062
  %12 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !7064
  %13 = load i8, i8* %12, align 1, !dbg !7064
  %14 = xor i8 %13, %11, !dbg !7065
  %15 = zext i8 %14 to i32, !dbg !7065
  %16 = or i32 %9, %15, !dbg !7066
  call void @llvm.dbg.value(metadata i32 %16, metadata !7053, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7056
  %17 = add nuw i32 %8, 1, !dbg !7067
  call void @llvm.dbg.value(metadata i32 %17, metadata !7054, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i8 undef, metadata !7053, metadata !DIExpression()), !dbg !7056
  %18 = icmp eq i32 %17, %2, !dbg !7058
  br i1 %18, label %5, label %7, !dbg !7060, !llvm.loop !7068
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes128_set_decrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !7070 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7074, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i8* %1, metadata !7075, metadata !DIExpression()), !dbg !7076
  %3 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) #27, !dbg !7077
  ret i32 %3, !dbg !7078
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_decrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7079 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7084, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.value(metadata i8* %1, metadata !7085, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7086, metadata !DIExpression()), !dbg !7089
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7090
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7090
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7087, metadata !DIExpression()), !dbg !7091
  %6 = icmp eq i8* %0, null, !dbg !7092
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7094
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7094
  br i1 %10, label %23, label %11, !dbg !7094

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7095
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7096
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7097
  call void @llvm.dbg.value(metadata i32 9, metadata !7088, metadata !DIExpression()), !dbg !7089
  br label %14, !dbg !7098

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 9, %11 ], [ %18, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7088, metadata !DIExpression()), !dbg !7089
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7100
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7103
  %16 = shl i32 %15, 2, !dbg !7104
  %17 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %16, !dbg !7105
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %17) #26, !dbg !7106
  call fastcc void @inv_mix_columns(i8* noundef nonnull %5) #26, !dbg !7107
  %18 = add nsw i32 %15, -1, !dbg !7108
  call void @llvm.dbg.value(metadata i32 %18, metadata !7088, metadata !DIExpression()), !dbg !7089
  %19 = icmp eq i32 %18, 0, !dbg !7109
  br i1 %19, label %20, label %14, !dbg !7098, !llvm.loop !7110

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7112
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7113
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7114
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7115
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7116
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7117
  br label %23, !dbg !7118

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7089
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7119
  ret i32 %24, !dbg !7119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7120 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7125, metadata !DIExpression()), !dbg !7127
  call void @llvm.dbg.value(metadata i32* %1, metadata !7126, metadata !DIExpression()), !dbg !7127
  %3 = load i32, i32* %1, align 4, !dbg !7128
  %4 = lshr i32 %3, 24, !dbg !7129
  %5 = load i8, i8* %0, align 1, !dbg !7130
  %6 = trunc i32 %4 to i8, !dbg !7130
  %7 = xor i8 %5, %6, !dbg !7130
  store i8 %7, i8* %0, align 1, !dbg !7130
  %8 = load i32, i32* %1, align 4, !dbg !7131
  %9 = lshr i32 %8, 16, !dbg !7132
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7133
  %11 = load i8, i8* %10, align 1, !dbg !7134
  %12 = trunc i32 %9 to i8, !dbg !7134
  %13 = xor i8 %11, %12, !dbg !7134
  store i8 %13, i8* %10, align 1, !dbg !7134
  %14 = load i32, i32* %1, align 4, !dbg !7135
  %15 = lshr i32 %14, 8, !dbg !7136
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7137
  %17 = load i8, i8* %16, align 1, !dbg !7138
  %18 = trunc i32 %15 to i8, !dbg !7138
  %19 = xor i8 %17, %18, !dbg !7138
  store i8 %19, i8* %16, align 1, !dbg !7138
  %20 = load i32, i32* %1, align 4, !dbg !7139
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7140
  %22 = load i8, i8* %21, align 1, !dbg !7141
  %23 = trunc i32 %20 to i8, !dbg !7141
  %24 = xor i8 %22, %23, !dbg !7141
  store i8 %24, i8* %21, align 1, !dbg !7141
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7142
  %26 = load i32, i32* %25, align 4, !dbg !7142
  %27 = lshr i32 %26, 24, !dbg !7143
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7144
  %29 = load i8, i8* %28, align 1, !dbg !7145
  %30 = trunc i32 %27 to i8, !dbg !7145
  %31 = xor i8 %29, %30, !dbg !7145
  store i8 %31, i8* %28, align 1, !dbg !7145
  %32 = load i32, i32* %25, align 4, !dbg !7146
  %33 = lshr i32 %32, 16, !dbg !7147
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7148
  %35 = load i8, i8* %34, align 1, !dbg !7149
  %36 = trunc i32 %33 to i8, !dbg !7149
  %37 = xor i8 %35, %36, !dbg !7149
  store i8 %37, i8* %34, align 1, !dbg !7149
  %38 = load i32, i32* %25, align 4, !dbg !7150
  %39 = lshr i32 %38, 8, !dbg !7151
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7152
  %41 = load i8, i8* %40, align 1, !dbg !7153
  %42 = trunc i32 %39 to i8, !dbg !7153
  %43 = xor i8 %41, %42, !dbg !7153
  store i8 %43, i8* %40, align 1, !dbg !7153
  %44 = load i32, i32* %25, align 4, !dbg !7154
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7155
  %46 = load i8, i8* %45, align 1, !dbg !7156
  %47 = trunc i32 %44 to i8, !dbg !7156
  %48 = xor i8 %46, %47, !dbg !7156
  store i8 %48, i8* %45, align 1, !dbg !7156
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7157
  %50 = load i32, i32* %49, align 4, !dbg !7157
  %51 = lshr i32 %50, 24, !dbg !7158
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7159
  %53 = load i8, i8* %52, align 1, !dbg !7160
  %54 = trunc i32 %51 to i8, !dbg !7160
  %55 = xor i8 %53, %54, !dbg !7160
  store i8 %55, i8* %52, align 1, !dbg !7160
  %56 = load i32, i32* %49, align 4, !dbg !7161
  %57 = lshr i32 %56, 16, !dbg !7162
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7163
  %59 = load i8, i8* %58, align 1, !dbg !7164
  %60 = trunc i32 %57 to i8, !dbg !7164
  %61 = xor i8 %59, %60, !dbg !7164
  store i8 %61, i8* %58, align 1, !dbg !7164
  %62 = load i32, i32* %49, align 4, !dbg !7165
  %63 = lshr i32 %62, 8, !dbg !7166
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7167
  %65 = load i8, i8* %64, align 1, !dbg !7168
  %66 = trunc i32 %63 to i8, !dbg !7168
  %67 = xor i8 %65, %66, !dbg !7168
  store i8 %67, i8* %64, align 1, !dbg !7168
  %68 = load i32, i32* %49, align 4, !dbg !7169
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7170
  %70 = load i8, i8* %69, align 1, !dbg !7171
  %71 = trunc i32 %68 to i8, !dbg !7171
  %72 = xor i8 %70, %71, !dbg !7171
  store i8 %72, i8* %69, align 1, !dbg !7171
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7172
  %74 = load i32, i32* %73, align 4, !dbg !7172
  %75 = lshr i32 %74, 24, !dbg !7173
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7174
  %77 = load i8, i8* %76, align 1, !dbg !7175
  %78 = trunc i32 %75 to i8, !dbg !7175
  %79 = xor i8 %77, %78, !dbg !7175
  store i8 %79, i8* %76, align 1, !dbg !7175
  %80 = load i32, i32* %73, align 4, !dbg !7176
  %81 = lshr i32 %80, 16, !dbg !7177
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7178
  %83 = load i8, i8* %82, align 1, !dbg !7179
  %84 = trunc i32 %81 to i8, !dbg !7179
  %85 = xor i8 %83, %84, !dbg !7179
  store i8 %85, i8* %82, align 1, !dbg !7179
  %86 = load i32, i32* %73, align 4, !dbg !7180
  %87 = lshr i32 %86, 8, !dbg !7181
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7182
  %89 = load i8, i8* %88, align 1, !dbg !7183
  %90 = trunc i32 %87 to i8, !dbg !7183
  %91 = xor i8 %89, %90, !dbg !7183
  store i8 %91, i8* %88, align 1, !dbg !7183
  %92 = load i32, i32* %73, align 4, !dbg !7184
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7185
  %94 = load i8, i8* %93, align 1, !dbg !7186
  %95 = trunc i32 %92 to i8, !dbg !7186
  %96 = xor i8 %94, %95, !dbg !7186
  store i8 %96, i8* %93, align 1, !dbg !7186
  ret void, !dbg !7187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7188 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7192, metadata !DIExpression()), !dbg !7194
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7195
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7195
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7193, metadata !DIExpression()), !dbg !7196
  %4 = load i8, i8* %0, align 1, !dbg !7197
  store i8 %4, i8* %3, align 1, !dbg !7198
  %5 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7199
  %6 = load i8, i8* %5, align 1, !dbg !7199
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7200
  store i8 %6, i8* %7, align 1, !dbg !7201
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7202
  %9 = load i8, i8* %8, align 1, !dbg !7202
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7203
  store i8 %9, i8* %10, align 1, !dbg !7204
  %11 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7205
  %12 = load i8, i8* %11, align 1, !dbg !7205
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7206
  store i8 %12, i8* %13, align 1, !dbg !7207
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7208
  %15 = load i8, i8* %14, align 1, !dbg !7208
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7209
  store i8 %15, i8* %16, align 1, !dbg !7210
  %17 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7211
  %18 = load i8, i8* %17, align 1, !dbg !7211
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7212
  store i8 %18, i8* %19, align 1, !dbg !7213
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7214
  %21 = load i8, i8* %20, align 1, !dbg !7214
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7215
  store i8 %21, i8* %22, align 1, !dbg !7216
  %23 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7217
  %24 = load i8, i8* %23, align 1, !dbg !7217
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7218
  store i8 %24, i8* %25, align 1, !dbg !7219
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7220
  %27 = load i8, i8* %26, align 1, !dbg !7220
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7221
  store i8 %27, i8* %28, align 1, !dbg !7222
  %29 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7223
  %30 = load i8, i8* %29, align 1, !dbg !7223
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7224
  store i8 %30, i8* %31, align 1, !dbg !7225
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7226
  %33 = load i8, i8* %32, align 1, !dbg !7226
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7227
  store i8 %33, i8* %34, align 1, !dbg !7228
  %35 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7229
  %36 = load i8, i8* %35, align 1, !dbg !7229
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7230
  store i8 %36, i8* %37, align 1, !dbg !7231
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7232
  %39 = load i8, i8* %38, align 1, !dbg !7232
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7233
  store i8 %39, i8* %40, align 1, !dbg !7234
  %41 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7235
  %42 = load i8, i8* %41, align 1, !dbg !7235
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7236
  store i8 %42, i8* %43, align 1, !dbg !7237
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7238
  %45 = load i8, i8* %44, align 1, !dbg !7238
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7239
  store i8 %45, i8* %46, align 1, !dbg !7240
  %47 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7241
  %48 = load i8, i8* %47, align 1, !dbg !7241
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7242
  store i8 %48, i8* %49, align 1, !dbg !7243
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7244
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7245
  ret void, !dbg !7245
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @inv_sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7246 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7248, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 0, metadata !7249, metadata !DIExpression()), !dbg !7250
  br label %2, !dbg !7251

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7249, metadata !DIExpression()), !dbg !7250
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7253
  %5 = load i8, i8* %4, align 1, !dbg !7253
  %6 = zext i8 %5 to i32, !dbg !7256
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @inv_sbox, i32 0, i32 %6, !dbg !7256
  %8 = load i8, i8* %7, align 1, !dbg !7256
  store i8 %8, i8* %4, align 1, !dbg !7257
  %9 = add nuw nsw i32 %3, 1, !dbg !7258
  call void @llvm.dbg.value(metadata i32 %9, metadata !7249, metadata !DIExpression()), !dbg !7250
  %10 = icmp eq i32 %9, 16, !dbg !7259
  br i1 %10, label %11, label %2, !dbg !7251, !llvm.loop !7260

11:                                               ; preds = %2
  ret void, !dbg !7262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7263 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7265, metadata !DIExpression()), !dbg !7267
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7268
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7268
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7266, metadata !DIExpression()), !dbg !7269
  call fastcc void @mult_row_column(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7270
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7271
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7272
  call fastcc void @mult_row_column(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7273
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7274
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7275
  call fastcc void @mult_row_column(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7276
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7277
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7278
  call fastcc void @mult_row_column(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7279
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7280
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7281
  ret void, !dbg !7281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7282 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7286, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i8* %1, metadata !7287, metadata !DIExpression()), !dbg !7288
  %3 = load i8, i8* %1, align 1, !dbg !7289
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7289
  %5 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %4) #27, !dbg !7289
  %6 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %5) #27, !dbg !7289
  %7 = load i8, i8* %1, align 1, !dbg !7289
  %8 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %7) #27, !dbg !7289
  %9 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %8) #27, !dbg !7289
  %10 = load i8, i8* %1, align 1, !dbg !7289
  %11 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %10) #27, !dbg !7289
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7290
  %13 = load i8, i8* %12, align 1, !dbg !7290
  %14 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %13) #27, !dbg !7290
  %15 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %14) #27, !dbg !7290
  %16 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %15) #27, !dbg !7290
  %17 = load i8, i8* %12, align 1, !dbg !7290
  %18 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %17) #27, !dbg !7290
  %19 = load i8, i8* %12, align 1, !dbg !7290
  %20 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7291
  %21 = load i8, i8* %20, align 1, !dbg !7291
  %22 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %21) #27, !dbg !7291
  %23 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %22) #27, !dbg !7291
  %24 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %23) #27, !dbg !7291
  %25 = load i8, i8* %20, align 1, !dbg !7291
  %26 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %25) #27, !dbg !7291
  %27 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %26) #27, !dbg !7291
  %28 = load i8, i8* %20, align 1, !dbg !7291
  %29 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7292
  %30 = load i8, i8* %29, align 1, !dbg !7292
  %31 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %30) #27, !dbg !7292
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7292
  %33 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %32) #27, !dbg !7292
  %34 = load i8, i8* %29, align 1, !dbg !7292
  %35 = xor i8 %9, %6, !dbg !7292
  %36 = xor i8 %35, %11, !dbg !7291
  %37 = xor i8 %36, %16, !dbg !7291
  %38 = xor i8 %37, %18, !dbg !7290
  %39 = xor i8 %38, %19, !dbg !7290
  %40 = xor i8 %39, %24, !dbg !7289
  %41 = xor i8 %40, %27, !dbg !7289
  %42 = xor i8 %41, %28, !dbg !7293
  %43 = xor i8 %42, %33, !dbg !7294
  %44 = xor i8 %43, %34, !dbg !7295
  store i8 %44, i8* %0, align 1, !dbg !7296
  %45 = load i8, i8* %1, align 1, !dbg !7297
  %46 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %45) #27, !dbg !7297
  %47 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %46) #27, !dbg !7297
  %48 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %47) #27, !dbg !7297
  %49 = load i8, i8* %1, align 1, !dbg !7297
  %50 = load i8, i8* %12, align 1, !dbg !7298
  %51 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %50) #27, !dbg !7298
  %52 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %51) #27, !dbg !7298
  %53 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %52) #27, !dbg !7298
  %54 = load i8, i8* %12, align 1, !dbg !7298
  %55 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %54) #27, !dbg !7298
  %56 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %55) #27, !dbg !7298
  %57 = load i8, i8* %12, align 1, !dbg !7298
  %58 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %57) #27, !dbg !7298
  %59 = load i8, i8* %20, align 1, !dbg !7299
  %60 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %59) #27, !dbg !7299
  %61 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %60) #27, !dbg !7299
  %62 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %61) #27, !dbg !7299
  %63 = load i8, i8* %20, align 1, !dbg !7299
  %64 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %63) #27, !dbg !7299
  %65 = load i8, i8* %20, align 1, !dbg !7299
  %66 = load i8, i8* %29, align 1, !dbg !7300
  %67 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %66) #27, !dbg !7300
  %68 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %67) #27, !dbg !7300
  %69 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %68) #27, !dbg !7300
  %70 = load i8, i8* %29, align 1, !dbg !7300
  %71 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %70) #27, !dbg !7300
  %72 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %71) #27, !dbg !7300
  %73 = load i8, i8* %29, align 1, !dbg !7300
  %74 = xor i8 %49, %48, !dbg !7300
  %75 = xor i8 %74, %53, !dbg !7300
  %76 = xor i8 %75, %56, !dbg !7299
  %77 = xor i8 %76, %58, !dbg !7299
  %78 = xor i8 %77, %62, !dbg !7298
  %79 = xor i8 %78, %64, !dbg !7298
  %80 = xor i8 %79, %65, !dbg !7297
  %81 = xor i8 %80, %69, !dbg !7301
  %82 = xor i8 %81, %72, !dbg !7302
  %83 = xor i8 %82, %73, !dbg !7303
  %84 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7304
  store i8 %83, i8* %84, align 1, !dbg !7305
  %85 = load i8, i8* %1, align 1, !dbg !7306
  %86 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %85) #27, !dbg !7306
  %87 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %86) #27, !dbg !7306
  %88 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %87) #27, !dbg !7306
  %89 = load i8, i8* %1, align 1, !dbg !7306
  %90 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %89) #27, !dbg !7306
  %91 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %90) #27, !dbg !7306
  %92 = load i8, i8* %1, align 1, !dbg !7306
  %93 = load i8, i8* %12, align 1, !dbg !7307
  %94 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %93) #27, !dbg !7307
  %95 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %94) #27, !dbg !7307
  %96 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %95) #27, !dbg !7307
  %97 = load i8, i8* %12, align 1, !dbg !7307
  %98 = load i8, i8* %20, align 1, !dbg !7308
  %99 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %98) #27, !dbg !7308
  %100 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %99) #27, !dbg !7308
  %101 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %100) #27, !dbg !7308
  %102 = load i8, i8* %20, align 1, !dbg !7308
  %103 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %102) #27, !dbg !7308
  %104 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %103) #27, !dbg !7308
  %105 = load i8, i8* %20, align 1, !dbg !7308
  %106 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %105) #27, !dbg !7308
  %107 = load i8, i8* %29, align 1, !dbg !7309
  %108 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %107) #27, !dbg !7309
  %109 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %108) #27, !dbg !7309
  %110 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %109) #27, !dbg !7309
  %111 = load i8, i8* %29, align 1, !dbg !7309
  %112 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %111) #27, !dbg !7309
  %113 = load i8, i8* %29, align 1, !dbg !7309
  %114 = xor i8 %91, %88, !dbg !7309
  %115 = xor i8 %114, %92, !dbg !7309
  %116 = xor i8 %115, %96, !dbg !7308
  %117 = xor i8 %116, %97, !dbg !7308
  %118 = xor i8 %117, %101, !dbg !7307
  %119 = xor i8 %118, %104, !dbg !7306
  %120 = xor i8 %119, %106, !dbg !7306
  %121 = xor i8 %120, %110, !dbg !7310
  %122 = xor i8 %121, %112, !dbg !7311
  %123 = xor i8 %122, %113, !dbg !7312
  %124 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7313
  store i8 %123, i8* %124, align 1, !dbg !7314
  %125 = load i8, i8* %1, align 1, !dbg !7315
  %126 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %125) #27, !dbg !7315
  %127 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %126) #27, !dbg !7315
  %128 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %127) #27, !dbg !7315
  %129 = load i8, i8* %1, align 1, !dbg !7315
  %130 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %129) #27, !dbg !7315
  %131 = load i8, i8* %1, align 1, !dbg !7315
  %132 = load i8, i8* %12, align 1, !dbg !7316
  %133 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %132) #27, !dbg !7316
  %134 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %133) #27, !dbg !7316
  %135 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %134) #27, !dbg !7316
  %136 = load i8, i8* %12, align 1, !dbg !7316
  %137 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %136) #27, !dbg !7316
  %138 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %137) #27, !dbg !7316
  %139 = load i8, i8* %12, align 1, !dbg !7316
  %140 = load i8, i8* %20, align 1, !dbg !7317
  %141 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %140) #27, !dbg !7317
  %142 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %141) #27, !dbg !7317
  %143 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %142) #27, !dbg !7317
  %144 = load i8, i8* %20, align 1, !dbg !7317
  %145 = load i8, i8* %29, align 1, !dbg !7318
  %146 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %145) #27, !dbg !7318
  %147 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %146) #27, !dbg !7318
  %148 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %147) #27, !dbg !7318
  %149 = load i8, i8* %29, align 1, !dbg !7318
  %150 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %149) #27, !dbg !7318
  %151 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %150) #27, !dbg !7318
  %152 = load i8, i8* %29, align 1, !dbg !7318
  %153 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %152) #27, !dbg !7318
  %154 = xor i8 %130, %128, !dbg !7318
  %155 = xor i8 %154, %131, !dbg !7318
  %156 = xor i8 %155, %135, !dbg !7317
  %157 = xor i8 %156, %138, !dbg !7316
  %158 = xor i8 %157, %139, !dbg !7316
  %159 = xor i8 %158, %143, !dbg !7315
  %160 = xor i8 %159, %144, !dbg !7315
  %161 = xor i8 %160, %148, !dbg !7319
  %162 = xor i8 %161, %151, !dbg !7320
  %163 = xor i8 %162, %153, !dbg !7321
  %164 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7322
  store i8 %163, i8* %164, align 1, !dbg !7323
  ret void, !dbg !7324
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef readonly %1) local_unnamed_addr #16 !dbg !7325 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7329, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i8* %1, metadata !7330, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.declare(metadata [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, metadata !7331, metadata !DIExpression()), !dbg !7336
  %3 = icmp eq %struct.tc_aes_key_sched_struct* %0, null, !dbg !7337
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4, !dbg !7339
  br i1 %5, label %80, label %9, !dbg !7339

6:                                                ; preds = %9
  call void @llvm.dbg.value(metadata i32 4, metadata !7333, metadata !DIExpression()), !dbg !7335
  %7 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4, !dbg !7340
  br label %36, !dbg !7344

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %34, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7333, metadata !DIExpression()), !dbg !7335
  %11 = shl nuw nsw i32 %10, 2, !dbg !7345
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7349
  %13 = load i8, i8* %12, align 1, !dbg !7349
  %14 = zext i8 %13 to i32, !dbg !7349
  %15 = shl nuw i32 %14, 24, !dbg !7350
  %16 = or i32 %11, 1, !dbg !7351
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7352
  %18 = load i8, i8* %17, align 1, !dbg !7352
  %19 = zext i8 %18 to i32, !dbg !7352
  %20 = shl nuw nsw i32 %19, 16, !dbg !7353
  %21 = or i32 %20, %15, !dbg !7354
  %22 = or i32 %11, 2, !dbg !7355
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !7356
  %24 = load i8, i8* %23, align 1, !dbg !7356
  %25 = zext i8 %24 to i32, !dbg !7356
  %26 = shl nuw nsw i32 %25, 8, !dbg !7357
  %27 = or i32 %21, %26, !dbg !7358
  %28 = or i32 %11, 3, !dbg !7359
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !7360
  %30 = load i8, i8* %29, align 1, !dbg !7360
  %31 = zext i8 %30 to i32, !dbg !7361
  %32 = or i32 %27, %31, !dbg !7362
  %33 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %10, !dbg !7363
  store i32 %32, i32* %33, align 4, !dbg !7364
  %34 = add nuw nsw i32 %10, 1, !dbg !7365
  call void @llvm.dbg.value(metadata i32 %34, metadata !7333, metadata !DIExpression()), !dbg !7335
  %35 = icmp eq i32 %34, 4, !dbg !7366
  br i1 %35, label %6, label %9, !dbg !7367, !llvm.loop !7368

36:                                               ; preds = %6, %71
  %37 = phi i32 [ %76, %71 ], [ %8, %6 ], !dbg !7340
  %38 = phi i32 [ %78, %71 ], [ 4, %6 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7333, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i32 %37, metadata !7334, metadata !DIExpression()), !dbg !7335
  %39 = and i32 %38, 3, !dbg !7370
  %40 = icmp eq i32 %39, 0, !dbg !7372
  br i1 %40, label %41, label %71, !dbg !7373

41:                                               ; preds = %36
  %42 = tail call fastcc i32 @rotword(i32 noundef %37) #26, !dbg !7374
  %43 = lshr i32 %42, 24, !dbg !7374
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %43, !dbg !7374
  %45 = load i8, i8* %44, align 1, !dbg !7374
  %46 = zext i8 %45 to i32, !dbg !7374
  %47 = shl nuw i32 %46, 24, !dbg !7374
  %48 = lshr i32 %42, 16, !dbg !7374
  %49 = and i32 %48, 255, !dbg !7374
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %49, !dbg !7374
  %51 = load i8, i8* %50, align 1, !dbg !7374
  %52 = zext i8 %51 to i32, !dbg !7374
  %53 = shl nuw nsw i32 %52, 16, !dbg !7374
  %54 = or i32 %53, %47, !dbg !7374
  %55 = lshr i32 %42, 8, !dbg !7374
  %56 = and i32 %55, 255, !dbg !7374
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %56, !dbg !7374
  %58 = load i8, i8* %57, align 1, !dbg !7374
  %59 = zext i8 %58 to i32, !dbg !7374
  %60 = shl nuw nsw i32 %59, 8, !dbg !7374
  %61 = or i32 %54, %60, !dbg !7374
  %62 = and i32 %42, 255, !dbg !7374
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %62, !dbg !7374
  %64 = load i8, i8* %63, align 1, !dbg !7374
  %65 = zext i8 %64 to i32, !dbg !7374
  %66 = or i32 %61, %65, !dbg !7374
  %67 = lshr i32 %38, 2, !dbg !7376
  %68 = getelementptr inbounds [11 x i32], [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, i32 0, i32 %67, !dbg !7377
  %69 = load i32, i32* %68, align 4, !dbg !7377
  %70 = xor i32 %66, %69, !dbg !7378
  call void @llvm.dbg.value(metadata i32 %70, metadata !7334, metadata !DIExpression()), !dbg !7335
  br label %71, !dbg !7379

71:                                               ; preds = %41, %36
  %72 = phi i32 [ %70, %41 ], [ %37, %36 ], !dbg !7380
  call void @llvm.dbg.value(metadata i32 %72, metadata !7334, metadata !DIExpression()), !dbg !7335
  %73 = add nsw i32 %38, -4, !dbg !7381
  %74 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %73, !dbg !7382
  %75 = load i32, i32* %74, align 4, !dbg !7382
  %76 = xor i32 %75, %72, !dbg !7383
  %77 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %38, !dbg !7384
  store i32 %76, i32* %77, align 4, !dbg !7385
  %78 = add nuw nsw i32 %38, 1, !dbg !7386
  call void @llvm.dbg.value(metadata i32 %78, metadata !7333, metadata !DIExpression()), !dbg !7335
  %79 = icmp eq i32 %78, 44, !dbg !7387
  br i1 %79, label %80, label %36, !dbg !7344, !llvm.loop !7388

80:                                               ; preds = %71, %2
  %81 = phi i32 [ 0, %2 ], [ 1, %71 ], !dbg !7335
  ret i32 %81, !dbg !7390
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @rotword(i32 noundef %0) unnamed_addr #13 !dbg !7391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7395, metadata !DIExpression()), !dbg !7396
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 8), !dbg !7397
  ret i32 %2, !dbg !7398
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_encrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7399 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7404, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata i8* %1, metadata !7405, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7406, metadata !DIExpression()), !dbg !7409
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7410
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7410
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7407, metadata !DIExpression()), !dbg !7411
  %6 = icmp eq i8* %0, null, !dbg !7412
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7414
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7414
  br i1 %10, label %23, label %11, !dbg !7414

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7415
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7416
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7417
  call void @llvm.dbg.value(metadata i32 0, metadata !7408, metadata !DIExpression()), !dbg !7409
  br label %14, !dbg !7418

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 0, %11 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7408, metadata !DIExpression()), !dbg !7409
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7420
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7423
  call fastcc void @mix_columns(i8* noundef nonnull %5) #26, !dbg !7424
  %16 = add nuw nsw i32 %15, 1, !dbg !7425
  %17 = shl nuw nsw i32 %16, 2, !dbg !7426
  %18 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %17, !dbg !7427
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %18) #26, !dbg !7428
  call void @llvm.dbg.value(metadata i32 %16, metadata !7408, metadata !DIExpression()), !dbg !7409
  %19 = icmp eq i32 %16, 9, !dbg !7429
  br i1 %19, label %20, label %14, !dbg !7418, !llvm.loop !7430

20:                                               ; preds = %14
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7432
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7433
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7434
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7435
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7436
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7437
  br label %23, !dbg !7438

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7409
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7439
  ret i32 %24, !dbg !7439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key.72(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7440 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7442, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.value(metadata i32* %1, metadata !7443, metadata !DIExpression()), !dbg !7444
  %3 = load i32, i32* %1, align 4, !dbg !7445
  %4 = lshr i32 %3, 24, !dbg !7446
  %5 = load i8, i8* %0, align 1, !dbg !7447
  %6 = trunc i32 %4 to i8, !dbg !7447
  %7 = xor i8 %5, %6, !dbg !7447
  store i8 %7, i8* %0, align 1, !dbg !7447
  %8 = load i32, i32* %1, align 4, !dbg !7448
  %9 = lshr i32 %8, 16, !dbg !7449
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7450
  %11 = load i8, i8* %10, align 1, !dbg !7451
  %12 = trunc i32 %9 to i8, !dbg !7451
  %13 = xor i8 %11, %12, !dbg !7451
  store i8 %13, i8* %10, align 1, !dbg !7451
  %14 = load i32, i32* %1, align 4, !dbg !7452
  %15 = lshr i32 %14, 8, !dbg !7453
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7454
  %17 = load i8, i8* %16, align 1, !dbg !7455
  %18 = trunc i32 %15 to i8, !dbg !7455
  %19 = xor i8 %17, %18, !dbg !7455
  store i8 %19, i8* %16, align 1, !dbg !7455
  %20 = load i32, i32* %1, align 4, !dbg !7456
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7457
  %22 = load i8, i8* %21, align 1, !dbg !7458
  %23 = trunc i32 %20 to i8, !dbg !7458
  %24 = xor i8 %22, %23, !dbg !7458
  store i8 %24, i8* %21, align 1, !dbg !7458
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7459
  %26 = load i32, i32* %25, align 4, !dbg !7459
  %27 = lshr i32 %26, 24, !dbg !7460
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7461
  %29 = load i8, i8* %28, align 1, !dbg !7462
  %30 = trunc i32 %27 to i8, !dbg !7462
  %31 = xor i8 %29, %30, !dbg !7462
  store i8 %31, i8* %28, align 1, !dbg !7462
  %32 = load i32, i32* %25, align 4, !dbg !7463
  %33 = lshr i32 %32, 16, !dbg !7464
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7465
  %35 = load i8, i8* %34, align 1, !dbg !7466
  %36 = trunc i32 %33 to i8, !dbg !7466
  %37 = xor i8 %35, %36, !dbg !7466
  store i8 %37, i8* %34, align 1, !dbg !7466
  %38 = load i32, i32* %25, align 4, !dbg !7467
  %39 = lshr i32 %38, 8, !dbg !7468
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7469
  %41 = load i8, i8* %40, align 1, !dbg !7470
  %42 = trunc i32 %39 to i8, !dbg !7470
  %43 = xor i8 %41, %42, !dbg !7470
  store i8 %43, i8* %40, align 1, !dbg !7470
  %44 = load i32, i32* %25, align 4, !dbg !7471
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7472
  %46 = load i8, i8* %45, align 1, !dbg !7473
  %47 = trunc i32 %44 to i8, !dbg !7473
  %48 = xor i8 %46, %47, !dbg !7473
  store i8 %48, i8* %45, align 1, !dbg !7473
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7474
  %50 = load i32, i32* %49, align 4, !dbg !7474
  %51 = lshr i32 %50, 24, !dbg !7475
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7476
  %53 = load i8, i8* %52, align 1, !dbg !7477
  %54 = trunc i32 %51 to i8, !dbg !7477
  %55 = xor i8 %53, %54, !dbg !7477
  store i8 %55, i8* %52, align 1, !dbg !7477
  %56 = load i32, i32* %49, align 4, !dbg !7478
  %57 = lshr i32 %56, 16, !dbg !7479
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7480
  %59 = load i8, i8* %58, align 1, !dbg !7481
  %60 = trunc i32 %57 to i8, !dbg !7481
  %61 = xor i8 %59, %60, !dbg !7481
  store i8 %61, i8* %58, align 1, !dbg !7481
  %62 = load i32, i32* %49, align 4, !dbg !7482
  %63 = lshr i32 %62, 8, !dbg !7483
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7484
  %65 = load i8, i8* %64, align 1, !dbg !7485
  %66 = trunc i32 %63 to i8, !dbg !7485
  %67 = xor i8 %65, %66, !dbg !7485
  store i8 %67, i8* %64, align 1, !dbg !7485
  %68 = load i32, i32* %49, align 4, !dbg !7486
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7487
  %70 = load i8, i8* %69, align 1, !dbg !7488
  %71 = trunc i32 %68 to i8, !dbg !7488
  %72 = xor i8 %70, %71, !dbg !7488
  store i8 %72, i8* %69, align 1, !dbg !7488
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7489
  %74 = load i32, i32* %73, align 4, !dbg !7489
  %75 = lshr i32 %74, 24, !dbg !7490
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7491
  %77 = load i8, i8* %76, align 1, !dbg !7492
  %78 = trunc i32 %75 to i8, !dbg !7492
  %79 = xor i8 %77, %78, !dbg !7492
  store i8 %79, i8* %76, align 1, !dbg !7492
  %80 = load i32, i32* %73, align 4, !dbg !7493
  %81 = lshr i32 %80, 16, !dbg !7494
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7495
  %83 = load i8, i8* %82, align 1, !dbg !7496
  %84 = trunc i32 %81 to i8, !dbg !7496
  %85 = xor i8 %83, %84, !dbg !7496
  store i8 %85, i8* %82, align 1, !dbg !7496
  %86 = load i32, i32* %73, align 4, !dbg !7497
  %87 = lshr i32 %86, 8, !dbg !7498
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7499
  %89 = load i8, i8* %88, align 1, !dbg !7500
  %90 = trunc i32 %87 to i8, !dbg !7500
  %91 = xor i8 %89, %90, !dbg !7500
  store i8 %91, i8* %88, align 1, !dbg !7500
  %92 = load i32, i32* %73, align 4, !dbg !7501
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7502
  %94 = load i8, i8* %93, align 1, !dbg !7503
  %95 = trunc i32 %92 to i8, !dbg !7503
  %96 = xor i8 %94, %95, !dbg !7503
  store i8 %96, i8* %93, align 1, !dbg !7503
  ret void, !dbg !7504
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7505 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7507, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i32 0, metadata !7508, metadata !DIExpression()), !dbg !7509
  br label %2, !dbg !7510

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7508, metadata !DIExpression()), !dbg !7509
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7512
  %5 = load i8, i8* %4, align 1, !dbg !7512
  %6 = zext i8 %5 to i32, !dbg !7515
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %6, !dbg !7515
  %8 = load i8, i8* %7, align 1, !dbg !7515
  store i8 %8, i8* %4, align 1, !dbg !7516
  %9 = add nuw nsw i32 %3, 1, !dbg !7517
  call void @llvm.dbg.value(metadata i32 %9, metadata !7508, metadata !DIExpression()), !dbg !7509
  %10 = icmp eq i32 %9, 16, !dbg !7518
  br i1 %10, label %11, label %2, !dbg !7510, !llvm.loop !7519

11:                                               ; preds = %2
  ret void, !dbg !7521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7522 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7524, metadata !DIExpression()), !dbg !7526
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7527
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7527
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7525, metadata !DIExpression()), !dbg !7528
  %4 = load i8, i8* %0, align 1, !dbg !7529
  store i8 %4, i8* %3, align 1, !dbg !7530
  %5 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7531
  %6 = load i8, i8* %5, align 1, !dbg !7531
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7532
  store i8 %6, i8* %7, align 1, !dbg !7533
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7534
  %9 = load i8, i8* %8, align 1, !dbg !7534
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7535
  store i8 %9, i8* %10, align 1, !dbg !7536
  %11 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7537
  %12 = load i8, i8* %11, align 1, !dbg !7537
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7538
  store i8 %12, i8* %13, align 1, !dbg !7539
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7540
  %15 = load i8, i8* %14, align 1, !dbg !7540
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7541
  store i8 %15, i8* %16, align 1, !dbg !7542
  %17 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7543
  %18 = load i8, i8* %17, align 1, !dbg !7543
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7544
  store i8 %18, i8* %19, align 1, !dbg !7545
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7546
  %21 = load i8, i8* %20, align 1, !dbg !7546
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7547
  store i8 %21, i8* %22, align 1, !dbg !7548
  %23 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7549
  %24 = load i8, i8* %23, align 1, !dbg !7549
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7550
  store i8 %24, i8* %25, align 1, !dbg !7551
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7552
  %27 = load i8, i8* %26, align 1, !dbg !7552
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7553
  store i8 %27, i8* %28, align 1, !dbg !7554
  %29 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7555
  %30 = load i8, i8* %29, align 1, !dbg !7555
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7556
  store i8 %30, i8* %31, align 1, !dbg !7557
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7558
  %33 = load i8, i8* %32, align 1, !dbg !7558
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7559
  store i8 %33, i8* %34, align 1, !dbg !7560
  %35 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7561
  %36 = load i8, i8* %35, align 1, !dbg !7561
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7562
  store i8 %36, i8* %37, align 1, !dbg !7563
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7564
  %39 = load i8, i8* %38, align 1, !dbg !7564
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7565
  store i8 %39, i8* %40, align 1, !dbg !7566
  %41 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7567
  %42 = load i8, i8* %41, align 1, !dbg !7567
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7568
  store i8 %42, i8* %43, align 1, !dbg !7569
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7570
  %45 = load i8, i8* %44, align 1, !dbg !7570
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7571
  store i8 %45, i8* %46, align 1, !dbg !7572
  %47 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7573
  %48 = load i8, i8* %47, align 1, !dbg !7573
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7574
  store i8 %48, i8* %49, align 1, !dbg !7575
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7576
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7577
  ret void, !dbg !7577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7578 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7580, metadata !DIExpression()), !dbg !7582
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7583
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7583
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7581, metadata !DIExpression()), !dbg !7584
  call fastcc void @mult_row_column.73(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7585
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7586
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7587
  call fastcc void @mult_row_column.73(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7588
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7589
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7590
  call fastcc void @mult_row_column.73(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7591
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7592
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7593
  call fastcc void @mult_row_column.73(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7594
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7595
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7596
  ret void, !dbg !7596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column.73(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7597 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7599, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i8* %1, metadata !7600, metadata !DIExpression()), !dbg !7601
  %3 = load i8, i8* %1, align 1, !dbg !7602
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7603
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7604
  %6 = load i8, i8* %5, align 1, !dbg !7604
  %7 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %6) #27, !dbg !7604
  %8 = load i8, i8* %5, align 1, !dbg !7604
  %9 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7605
  %10 = load i8, i8* %9, align 1, !dbg !7605
  %11 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7606
  %12 = load i8, i8* %11, align 1, !dbg !7606
  %13 = xor i8 %7, %4, !dbg !7604
  %14 = xor i8 %13, %8, !dbg !7607
  %15 = xor i8 %14, %10, !dbg !7608
  %16 = xor i8 %15, %12, !dbg !7609
  store i8 %16, i8* %0, align 1, !dbg !7610
  %17 = load i8, i8* %1, align 1, !dbg !7611
  %18 = load i8, i8* %5, align 1, !dbg !7612
  %19 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %18) #27, !dbg !7613
  %20 = load i8, i8* %9, align 1, !dbg !7614
  %21 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %20) #27, !dbg !7614
  %22 = load i8, i8* %9, align 1, !dbg !7614
  %23 = load i8, i8* %11, align 1, !dbg !7615
  %24 = xor i8 %19, %17, !dbg !7614
  %25 = xor i8 %24, %21, !dbg !7616
  %26 = xor i8 %25, %22, !dbg !7617
  %27 = xor i8 %26, %23, !dbg !7618
  %28 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7619
  store i8 %27, i8* %28, align 1, !dbg !7620
  %29 = load i8, i8* %1, align 1, !dbg !7621
  %30 = load i8, i8* %5, align 1, !dbg !7622
  %31 = load i8, i8* %9, align 1, !dbg !7623
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7624
  %33 = load i8, i8* %11, align 1, !dbg !7625
  %34 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %33) #27, !dbg !7625
  %35 = load i8, i8* %11, align 1, !dbg !7625
  %36 = xor i8 %30, %29, !dbg !7625
  %37 = xor i8 %36, %32, !dbg !7626
  %38 = xor i8 %37, %34, !dbg !7627
  %39 = xor i8 %38, %35, !dbg !7628
  %40 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7629
  store i8 %39, i8* %40, align 1, !dbg !7630
  %41 = load i8, i8* %1, align 1, !dbg !7631
  %42 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %41) #27, !dbg !7631
  %43 = load i8, i8* %1, align 1, !dbg !7631
  %44 = xor i8 %43, %42, !dbg !7631
  %45 = load i8, i8* %5, align 1, !dbg !7632
  %46 = xor i8 %44, %45, !dbg !7633
  %47 = load i8, i8* %9, align 1, !dbg !7634
  %48 = xor i8 %46, %47, !dbg !7635
  %49 = load i8, i8* %11, align 1, !dbg !7636
  %50 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %49) #27, !dbg !7637
  %51 = xor i8 %48, %50, !dbg !7638
  %52 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7639
  store i8 %51, i8* %52, align 1, !dbg !7640
  ret void, !dbg !7641
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_encrypt(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7642 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7648, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 %1, metadata !7649, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8* %2, metadata !7650, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 %3, metadata !7651, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8* %4, metadata !7652, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7653, metadata !DIExpression()), !dbg !7657
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7658
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7658
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7654, metadata !DIExpression()), !dbg !7659
  %9 = icmp eq i8* %0, null, !dbg !7660
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7662
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7662
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7662
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7662
  %18 = xor i1 %17, true, !dbg !7662
  %19 = or i32 %3, %1, !dbg !7662
  %20 = and i32 %19, 15, !dbg !7662
  %21 = icmp eq i32 %20, 0, !dbg !7662
  %22 = and i1 %21, %18, !dbg !7662
  %23 = add i32 %3, 16
  %24 = icmp eq i32 %23, %1
  %25 = and i1 %24, %22, !dbg !7662
  br i1 %25, label %26, label %52, !dbg !7662

26:                                               ; preds = %6
  %27 = call i32 @_copy(i8* noundef nonnull %8, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7663
  %28 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7664
  call void @llvm.dbg.value(metadata i8* %0, metadata !7648, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !7657
  call void @llvm.dbg.value(metadata i32 0, metadata !7656, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 0, metadata !7655, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8* %2, metadata !7650, metadata !DIExpression()), !dbg !7657
  br i1 %14, label %52, label %29, !dbg !7665

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !7667
  call void @llvm.dbg.value(metadata i8* %30, metadata !7648, metadata !DIExpression()), !dbg !7657
  br label %31, !dbg !7665

31:                                               ; preds = %29, %47
  %32 = phi i32 [ %49, %47 ], [ 0, %29 ]
  %33 = phi i32 [ %50, %47 ], [ 0, %29 ]
  %34 = phi i8* [ %48, %47 ], [ %30, %29 ]
  %35 = phi i8* [ %36, %47 ], [ %2, %29 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !7656, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 %33, metadata !7655, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8* %34, metadata !7648, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8* %35, metadata !7650, metadata !DIExpression()), !dbg !7657
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7668
  call void @llvm.dbg.value(metadata i8* %36, metadata !7650, metadata !DIExpression()), !dbg !7657
  %37 = load i8, i8* %35, align 1, !dbg !7671
  %38 = add i32 %32, 1, !dbg !7672
  call void @llvm.dbg.value(metadata i32 %38, metadata !7656, metadata !DIExpression()), !dbg !7657
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %32, !dbg !7673
  %40 = load i8, i8* %39, align 1, !dbg !7674
  %41 = xor i8 %40, %37, !dbg !7674
  store i8 %41, i8* %39, align 1, !dbg !7674
  %42 = icmp eq i32 %38, 16, !dbg !7675
  br i1 %42, label %43, label %47, !dbg !7677

43:                                               ; preds = %31
  %44 = call i32 @tc_aes_encrypt(i8* noundef nonnull %8, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7678
  %45 = call i32 @_copy(i8* noundef %34, i32 noundef 16, i8* noundef nonnull %8, i32 noundef 16) #27, !dbg !7680
  %46 = getelementptr inbounds i8, i8* %34, i32 16, !dbg !7681
  call void @llvm.dbg.value(metadata i8* %46, metadata !7648, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 0, metadata !7656, metadata !DIExpression()), !dbg !7657
  br label %47, !dbg !7682

47:                                               ; preds = %31, %43
  %48 = phi i8* [ %46, %43 ], [ %34, %31 ], !dbg !7657
  %49 = phi i32 [ 0, %43 ], [ %38, %31 ], !dbg !7683
  call void @llvm.dbg.value(metadata i32 %49, metadata !7656, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8* %48, metadata !7648, metadata !DIExpression()), !dbg !7657
  %50 = add nuw i32 %33, 1, !dbg !7684
  call void @llvm.dbg.value(metadata i32 %50, metadata !7655, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8* %36, metadata !7650, metadata !DIExpression()), !dbg !7657
  %51 = icmp eq i32 %50, %3, !dbg !7685
  br i1 %51, label %52, label %31, !dbg !7665, !llvm.loop !7686

52:                                               ; preds = %47, %26, %6
  %53 = phi i32 [ 0, %6 ], [ 1, %26 ], [ 1, %47 ], !dbg !7657
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7688
  ret i32 %53, !dbg !7688
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_decrypt(i8* noundef writeonly %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i8* nocapture noundef readonly %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7689 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7691, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i32 %1, metadata !7692, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i8* %2, metadata !7693, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i32 %3, metadata !7694, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i8* %4, metadata !7695, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7696, metadata !DIExpression()), !dbg !7701
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7702
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7702
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7697, metadata !DIExpression()), !dbg !7703
  %9 = icmp eq i8* %0, null, !dbg !7704
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7706
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7706
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7706
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7706
  %18 = xor i1 %17, true, !dbg !7706
  %19 = or i32 %3, %1, !dbg !7706
  %20 = and i32 %19, 15, !dbg !7706
  %21 = icmp eq i32 %20, 0, !dbg !7706
  %22 = and i1 %21, %18, !dbg !7706
  %23 = icmp eq i32 %1, %3
  %24 = and i1 %23, %22, !dbg !7706
  %25 = xor i1 %24, true, !dbg !7706
  %26 = or i1 %14, %25, !dbg !7706
  %27 = zext i1 %24 to i32, !dbg !7706
  br i1 %26, label %51, label %28, !dbg !7706

28:                                               ; preds = %6, %39
  %29 = phi i32 [ %42, %39 ], [ 0, %6 ]
  %30 = phi i32 [ %49, %39 ], [ 0, %6 ]
  %31 = phi i8* [ %45, %39 ], [ %4, %6 ]
  %32 = phi i8* [ %48, %39 ], [ %0, %6 ]
  %33 = phi i8* [ %40, %39 ], [ %2, %6 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !7700, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i32 %30, metadata !7699, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i8* %31, metadata !7698, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i8* %32, metadata !7691, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i8* %33, metadata !7693, metadata !DIExpression()), !dbg !7701
  %34 = and i32 %30, 15, !dbg !7707
  %35 = icmp eq i32 %34, 0, !dbg !7712
  br i1 %35, label %36, label %39, !dbg !7713

36:                                               ; preds = %28
  %37 = call i32 @tc_aes_decrypt(i8* noundef nonnull %8, i8* noundef %33, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7714
  %38 = getelementptr inbounds i8, i8* %33, i32 16, !dbg !7716
  call void @llvm.dbg.value(metadata i8* %38, metadata !7693, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i32 0, metadata !7700, metadata !DIExpression()), !dbg !7701
  br label %39, !dbg !7717

39:                                               ; preds = %36, %28
  %40 = phi i8* [ %38, %36 ], [ %33, %28 ]
  %41 = phi i32 [ 0, %36 ], [ %29, %28 ], !dbg !7718
  call void @llvm.dbg.value(metadata i32 %41, metadata !7700, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i8* %40, metadata !7693, metadata !DIExpression()), !dbg !7701
  %42 = add i32 %41, 1, !dbg !7719
  call void @llvm.dbg.value(metadata i32 %42, metadata !7700, metadata !DIExpression()), !dbg !7701
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %41, !dbg !7720
  %44 = load i8, i8* %43, align 1, !dbg !7720
  %45 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7721
  call void @llvm.dbg.value(metadata i8* %45, metadata !7698, metadata !DIExpression()), !dbg !7701
  %46 = load i8, i8* %31, align 1, !dbg !7722
  %47 = xor i8 %46, %44, !dbg !7723
  %48 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7724
  call void @llvm.dbg.value(metadata i8* %48, metadata !7691, metadata !DIExpression()), !dbg !7701
  store i8 %47, i8* %32, align 1, !dbg !7725
  %49 = add nuw i32 %30, 1, !dbg !7726
  call void @llvm.dbg.value(metadata i32 %49, metadata !7699, metadata !DIExpression()), !dbg !7701
  %50 = icmp eq i32 %49, %3, !dbg !7727
  br i1 %50, label %51, label %28, !dbg !7728, !llvm.loop !7729

51:                                               ; preds = %39, %6
  %52 = phi i32 [ %27, %6 ], [ 1, %39 ], !dbg !7701
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7731
  ret i32 %52, !dbg !7731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7732 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7738, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32 %1, metadata !7739, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %2, metadata !7740, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32 %3, metadata !7741, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %4, metadata !7742, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7743, metadata !DIExpression()), !dbg !7748
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7749
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7749
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7744, metadata !DIExpression()), !dbg !7750
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7751
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7751
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7745, metadata !DIExpression()), !dbg !7752
  %11 = icmp eq i8* %0, null, !dbg !7753
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7755
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7755
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7755
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7755
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7755
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7755
  br i1 %23, label %86, label %24, !dbg !7755

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7756
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 12, !dbg !7757
  %27 = load i8, i8* %26, align 1, !dbg !7757
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 13, !dbg !7758
  %29 = load i8, i8* %28, align 1, !dbg !7758
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7759
  %31 = load i8, i8* %30, align 1, !dbg !7759
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7760
  %33 = load i8, i8* %32, align 1, !dbg !7760
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i8 %27), metadata !7746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7748
  call void @llvm.dbg.value(metadata i32 0, metadata !7747, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %0, metadata !7738, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %2, metadata !7740, metadata !DIExpression()), !dbg !7748
  %34 = zext i8 %29 to i32, !dbg !7758
  call void @llvm.dbg.value(metadata !DIArgList(i32 %34, i8 %33, i8 %31, i8 %27), metadata !7746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7748
  %35 = shl nuw nsw i32 %34, 16, !dbg !7761
  call void @llvm.dbg.value(metadata !DIArgList(i32 %35, i8 %33, i8 %31, i8 %27), metadata !7746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7748
  %36 = zext i8 %27 to i32, !dbg !7757
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %36), metadata !7746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7748
  %37 = shl nuw i32 %36, 24, !dbg !7762
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %37), metadata !7746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7748
  %38 = or i32 %35, %37, !dbg !7763
  call void @llvm.dbg.value(metadata !DIArgList(i32 %38, i8 %33, i8 %31), metadata !7746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7748
  %39 = zext i8 %31 to i32, !dbg !7759
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %39, i8 %27), metadata !7746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7748
  %40 = shl nuw nsw i32 %39, 8, !dbg !7764
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %40, i8 %27), metadata !7746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7748
  %41 = or i32 %38, %40, !dbg !7765
  call void @llvm.dbg.value(metadata !DIArgList(i32 %41, i8 %33), metadata !7746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7748
  %42 = zext i8 %33 to i32, !dbg !7766
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i32 %42, i8 %31, i8 %27), metadata !7746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7748
  %43 = or i32 %41, %42, !dbg !7767
  call void @llvm.dbg.value(metadata i32 %43, metadata !7746, metadata !DIExpression()), !dbg !7748
  br label %44, !dbg !7768

44:                                               ; preds = %24, %67
  %45 = phi i8 [ %68, %67 ], [ %33, %24 ]
  %46 = phi i8 [ %69, %67 ], [ %31, %24 ]
  %47 = phi i8 [ %70, %67 ], [ %29, %24 ]
  %48 = phi i8 [ %71, %67 ], [ %27, %24 ]
  %49 = phi i32 [ %79, %67 ], [ 0, %24 ]
  %50 = phi i32 [ %72, %67 ], [ %43, %24 ]
  %51 = phi i8* [ %78, %67 ], [ %0, %24 ]
  %52 = phi i8* [ %75, %67 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7747, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32 %50, metadata !7746, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %51, metadata !7738, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i8* %52, metadata !7740, metadata !DIExpression()), !dbg !7748
  %53 = and i32 %49, 15, !dbg !7770
  %54 = icmp eq i32 %53, 0, !dbg !7774
  br i1 %54, label %55, label %67, !dbg !7775

55:                                               ; preds = %44
  %56 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7776
  %57 = icmp eq i32 %56, 0, !dbg !7776
  br i1 %57, label %86, label %58, !dbg !7779

58:                                               ; preds = %55
  %59 = add i32 %50, 1, !dbg !7780
  call void @llvm.dbg.value(metadata i32 %59, metadata !7746, metadata !DIExpression()), !dbg !7748
  %60 = lshr i32 %59, 24, !dbg !7782
  %61 = trunc i32 %60 to i8, !dbg !7783
  store i8 %61, i8* %26, align 1, !dbg !7784
  %62 = lshr i32 %59, 16, !dbg !7785
  %63 = trunc i32 %62 to i8, !dbg !7786
  store i8 %63, i8* %28, align 1, !dbg !7787
  %64 = lshr i32 %59, 8, !dbg !7788
  %65 = trunc i32 %64 to i8, !dbg !7789
  store i8 %65, i8* %30, align 1, !dbg !7790
  %66 = trunc i32 %59 to i8, !dbg !7791
  store i8 %66, i8* %32, align 1, !dbg !7792
  br label %67, !dbg !7793

67:                                               ; preds = %58, %44
  %68 = phi i8 [ %66, %58 ], [ %45, %44 ]
  %69 = phi i8 [ %65, %58 ], [ %46, %44 ]
  %70 = phi i8 [ %63, %58 ], [ %47, %44 ]
  %71 = phi i8 [ %61, %58 ], [ %48, %44 ]
  %72 = phi i32 [ %59, %58 ], [ %50, %44 ], !dbg !7748
  call void @llvm.dbg.value(metadata i32 %72, metadata !7746, metadata !DIExpression()), !dbg !7748
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %53, !dbg !7794
  %74 = load i8, i8* %73, align 1, !dbg !7794
  %75 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !7795
  call void @llvm.dbg.value(metadata i8* %75, metadata !7740, metadata !DIExpression()), !dbg !7748
  %76 = load i8, i8* %52, align 1, !dbg !7796
  %77 = xor i8 %76, %74, !dbg !7797
  %78 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !7798
  call void @llvm.dbg.value(metadata i8* %78, metadata !7738, metadata !DIExpression()), !dbg !7748
  store i8 %77, i8* %51, align 1, !dbg !7799
  %79 = add nuw i32 %49, 1, !dbg !7800
  call void @llvm.dbg.value(metadata i32 %79, metadata !7747, metadata !DIExpression()), !dbg !7748
  %80 = icmp eq i32 %79, %3, !dbg !7801
  br i1 %80, label %81, label %44, !dbg !7768, !llvm.loop !7802

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %4, i32 12, !dbg !7804
  store i8 %71, i8* %82, align 1, !dbg !7805
  %83 = getelementptr inbounds i8, i8* %4, i32 13, !dbg !7806
  store i8 %70, i8* %83, align 1, !dbg !7807
  %84 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7808
  store i8 %69, i8* %84, align 1, !dbg !7809
  %85 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7810
  store i8 %68, i8* %85, align 1, !dbg !7811
  br label %86, !dbg !7812

86:                                               ; preds = %55, %6, %81
  %87 = phi i32 [ 1, %81 ], [ 0, %6 ], [ 0, %55 ], !dbg !7748
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7813
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7813
  ret i32 %87, !dbg !7813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef writeonly %0, %struct.tc_aes_key_sched_struct* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 !dbg !7814 {
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %0, metadata !7819, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %1, metadata !7820, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.value(metadata i8* %2, metadata !7821, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.value(metadata i32 %3, metadata !7822, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.value(metadata i32 %4, metadata !7823, metadata !DIExpression()), !dbg !7824
  %6 = icmp eq %struct.tc_ccm_mode_struct* %0, null, !dbg !7825
  %7 = icmp eq %struct.tc_aes_key_sched_struct* %1, null
  %8 = or i1 %6, %7, !dbg !7827
  %9 = icmp eq i8* %2, null
  %10 = or i1 %8, %9, !dbg !7827
  %11 = icmp ne i32 %3, 13
  %12 = or i1 %10, %11, !dbg !7827
  br i1 %12, label %23, label %13, !dbg !7827

13:                                               ; preds = %5
  %14 = add i32 %4, -4, !dbg !7828
  %15 = icmp ult i32 %14, 13, !dbg !7828
  %16 = and i32 %4, 1
  %17 = icmp eq i32 %16, 0
  %18 = and i1 %15, %17, !dbg !7828
  br i1 %18, label %19, label %23, !dbg !7828

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 2, !dbg !7831
  store i32 %4, i32* %20, align 4, !dbg !7832
  %21 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 0, !dbg !7833
  store %struct.tc_aes_key_sched_struct* %1, %struct.tc_aes_key_sched_struct** %21, align 4, !dbg !7834
  %22 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 1, !dbg !7835
  store i8* %2, i8** %22, align 4, !dbg !7836
  br label %23, !dbg !7837

23:                                               ; preds = %13, %5, %19
  %24 = phi i32 [ 1, %19 ], [ 0, %5 ], [ 0, %13 ], !dbg !7824
  ret i32 %24, !dbg !7838
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_generation_encryption(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7839 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7843, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i32 %1, metadata !7844, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* %2, metadata !7845, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i32 %3, metadata !7846, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* %4, metadata !7847, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i32 %5, metadata !7848, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7849, metadata !DIExpression()), !dbg !7853
  %10 = icmp eq i8* %0, null, !dbg !7854
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !7856
  br i1 %12, label %85, label %13, !dbg !7856

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !7857
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !7858
  br i1 %16, label %85, label %17, !dbg !7858

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !7859
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !7860
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !7860
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !7860
  br i1 %24, label %85, label %25, !dbg !7860

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !7861
  %27 = load i32, i32* %26, align 4, !dbg !7861
  %28 = add i32 %27, %5, !dbg !7862
  %29 = icmp ugt i32 %28, %1, !dbg !7863
  br i1 %29, label %85, label %30, !dbg !7864

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7865
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7865
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7850, metadata !DIExpression()), !dbg !7866
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !7867
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7867
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7851, metadata !DIExpression()), !dbg !7868
  %33 = select i1 %18, i32 64, i32 0, !dbg !7869
  %34 = shl i32 %27, 2, !dbg !7870
  %35 = add i32 %34, 248, !dbg !7870
  %36 = and i32 %35, 248, !dbg !7870
  %37 = or i32 %36, %33, !dbg !7871
  %38 = trunc i32 %37 to i8, !dbg !7872
  %39 = or i8 %38, 1, !dbg !7872
  store i8 %39, i8* %31, align 1, !dbg !7873
  call void @llvm.dbg.value(metadata i32 1, metadata !7852, metadata !DIExpression()), !dbg !7853
  %40 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %41 = load i8*, i8** %40, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7852, metadata !DIExpression()), !dbg !7853
  br label %42, !dbg !7874

42:                                               ; preds = %30, %42
  %43 = phi i32 [ 1, %30 ], [ %48, %42 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !7852, metadata !DIExpression()), !dbg !7853
  %44 = add nsw i32 %43, -1, !dbg !7876
  %45 = getelementptr inbounds i8, i8* %41, i32 %44, !dbg !7879
  %46 = load i8, i8* %45, align 1, !dbg !7879
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %43, !dbg !7880
  store i8 %46, i8* %47, align 1, !dbg !7881
  %48 = add nuw nsw i32 %43, 1, !dbg !7882
  call void @llvm.dbg.value(metadata i32 %48, metadata !7852, metadata !DIExpression()), !dbg !7853
  %49 = icmp eq i32 %48, 14, !dbg !7883
  br i1 %49, label %50, label %42, !dbg !7874, !llvm.loop !7884

50:                                               ; preds = %42
  %51 = lshr i32 %5, 8, !dbg !7886
  %52 = trunc i32 %51 to i8, !dbg !7887
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7888
  store i8 %52, i8* %53, align 1, !dbg !7889
  %54 = trunc i32 %5 to i8, !dbg !7890
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7891
  store i8 %54, i8* %55, align 1, !dbg !7892
  %56 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !7893
  %57 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7893
  %58 = call i32 @tc_aes_encrypt(i8* noundef nonnull %32, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %57) #27, !dbg !7894
  br i1 %18, label %59, label %61, !dbg !7895

59:                                               ; preds = %50
  %60 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7896
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %60) #26, !dbg !7899
  br label %61, !dbg !7900

61:                                               ; preds = %59, %50
  br i1 %14, label %62, label %64, !dbg !7901

62:                                               ; preds = %61
  %63 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7902
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %4, i32 noundef %5, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %63) #26, !dbg !7905
  br label %64, !dbg !7906

64:                                               ; preds = %62, %61
  store i8 1, i8* %31, align 1, !dbg !7907
  store i8 0, i8* %55, align 1, !dbg !7908
  store i8 0, i8* %53, align 1, !dbg !7909
  %65 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7910
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %5, i8* noundef %4, i32 noundef %5, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %65) #26, !dbg !7911
  store i8 0, i8* %55, align 1, !dbg !7912
  store i8 0, i8* %53, align 1, !dbg !7913
  %66 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7914
  %67 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %66) #27, !dbg !7915
  call void @llvm.dbg.value(metadata !DIArgList(i8* %0, i32 %5), metadata !7843, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7853
  call void @llvm.dbg.value(metadata i32 0, metadata !7852, metadata !DIExpression()), !dbg !7853
  %68 = load i32, i32* %26, align 4, !dbg !7916
  %69 = icmp eq i32 %68, 0, !dbg !7919
  br i1 %69, label %84, label %70, !dbg !7920

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7921
  call void @llvm.dbg.value(metadata i8* %71, metadata !7843, metadata !DIExpression()), !dbg !7853
  br label %72, !dbg !7920

72:                                               ; preds = %70, %72
  %73 = phi i32 [ %81, %72 ], [ 0, %70 ]
  %74 = phi i8* [ %80, %72 ], [ %71, %70 ]
  call void @llvm.dbg.value(metadata i32 %73, metadata !7852, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* %74, metadata !7843, metadata !DIExpression()), !dbg !7853
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %73, !dbg !7922
  %76 = load i8, i8* %75, align 1, !dbg !7922
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %73, !dbg !7924
  %78 = load i8, i8* %77, align 1, !dbg !7924
  %79 = xor i8 %78, %76, !dbg !7925
  %80 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !7926
  call void @llvm.dbg.value(metadata i8* %80, metadata !7843, metadata !DIExpression()), !dbg !7853
  store i8 %79, i8* %74, align 1, !dbg !7927
  %81 = add nuw i32 %73, 1, !dbg !7928
  call void @llvm.dbg.value(metadata i32 %81, metadata !7852, metadata !DIExpression()), !dbg !7853
  %82 = load i32, i32* %26, align 4, !dbg !7916
  %83 = icmp ult i32 %81, %82, !dbg !7919
  br i1 %83, label %72, label %84, !dbg !7920, !llvm.loop !7929

84:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7931
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7931
  br label %85

85:                                               ; preds = %7, %25, %13, %17, %84
  %86 = phi i32 [ 1, %84 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !7853
  ret i32 %86, !dbg !7931
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_cbc_mac(i8* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, %struct.tc_aes_key_sched_struct* noundef %4) unnamed_addr #1 !dbg !7932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7936, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i8* %1, metadata !7937, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i32 %2, metadata !7938, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i32 %3, metadata !7939, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %4, metadata !7940, metadata !DIExpression()), !dbg !7942
  %6 = icmp eq i32 %3, 0, !dbg !7943
  br i1 %6, label %17, label %7, !dbg !7945

7:                                                ; preds = %5
  %8 = lshr i32 %2, 8, !dbg !7946
  %9 = load i8, i8* %0, align 1, !dbg !7948
  %10 = trunc i32 %8 to i8, !dbg !7948
  %11 = xor i8 %9, %10, !dbg !7948
  store i8 %11, i8* %0, align 1, !dbg !7948
  %12 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7949
  %13 = load i8, i8* %12, align 1, !dbg !7950
  %14 = trunc i32 %2 to i8, !dbg !7950
  %15 = xor i8 %13, %14, !dbg !7950
  store i8 %15, i8* %12, align 1, !dbg !7950
  %16 = add i32 %2, 2, !dbg !7951
  call void @llvm.dbg.value(metadata i32 %16, metadata !7938, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i32 2, metadata !7941, metadata !DIExpression()), !dbg !7942
  br label %17, !dbg !7952

17:                                               ; preds = %5, %7
  %18 = phi i32 [ %16, %7 ], [ %2, %5 ]
  %19 = phi i32 [ 2, %7 ], [ 0, %5 ], !dbg !7953
  call void @llvm.dbg.value(metadata i32 %19, metadata !7941, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i32 %18, metadata !7938, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i8* %1, metadata !7937, metadata !DIExpression()), !dbg !7942
  %20 = icmp ult i32 %19, %18, !dbg !7954
  br i1 %20, label %21, label %39, !dbg !7955

21:                                               ; preds = %17, %37
  %22 = phi i32 [ %26, %37 ], [ %19, %17 ]
  %23 = phi i8* [ %24, %37 ], [ %1, %17 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !7941, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i8* %23, metadata !7937, metadata !DIExpression()), !dbg !7942
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7956
  call void @llvm.dbg.value(metadata i8* %24, metadata !7937, metadata !DIExpression()), !dbg !7942
  %25 = load i8, i8* %23, align 1, !dbg !7958
  %26 = add i32 %22, 1, !dbg !7959
  call void @llvm.dbg.value(metadata i32 %26, metadata !7941, metadata !DIExpression()), !dbg !7942
  %27 = and i32 %22, 15, !dbg !7960
  %28 = getelementptr inbounds i8, i8* %0, i32 %27, !dbg !7961
  %29 = load i8, i8* %28, align 1, !dbg !7962
  %30 = xor i8 %29, %25, !dbg !7962
  store i8 %30, i8* %28, align 1, !dbg !7962
  %31 = and i32 %26, 15, !dbg !7963
  %32 = icmp eq i32 %31, 0, !dbg !7965
  %33 = icmp eq i32 %18, %26
  %34 = or i1 %33, %32, !dbg !7966
  br i1 %34, label %35, label %37, !dbg !7966

35:                                               ; preds = %21
  %36 = tail call i32 @tc_aes_encrypt(i8* noundef nonnull %0, i8* noundef nonnull %0, %struct.tc_aes_key_sched_struct* noundef %4) #27, !dbg !7967
  br label %37, !dbg !7969

37:                                               ; preds = %21, %35
  call void @llvm.dbg.value(metadata i32 %26, metadata !7941, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i8* %24, metadata !7937, metadata !DIExpression()), !dbg !7942
  %38 = icmp eq i32 %26, %18, !dbg !7954
  br i1 %38, label %39, label %21, !dbg !7955, !llvm.loop !7970

39:                                               ; preds = %37, %17
  ret void, !dbg !7972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) unnamed_addr #1 !dbg !7973 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7978, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %1, metadata !7979, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %2, metadata !7980, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %3, metadata !7981, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %4, metadata !7982, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7983, metadata !DIExpression()), !dbg !7988
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7989
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7989
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7984, metadata !DIExpression()), !dbg !7990
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7991
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7991
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7985, metadata !DIExpression()), !dbg !7992
  %11 = icmp eq i8* %0, null, !dbg !7993
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7995
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7995
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7995
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7995
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7995
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7995
  br i1 %23, label %63, label %24, !dbg !7995

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7996
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7997
  %27 = load i8, i8* %26, align 1, !dbg !7997
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7998
  %29 = load i8, i8* %28, align 1, !dbg !7998
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i8 %29), metadata !7986, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7988
  call void @llvm.dbg.value(metadata i32 0, metadata !7987, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %0, metadata !7978, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %2, metadata !7980, metadata !DIExpression()), !dbg !7988
  %30 = zext i8 %27 to i16, !dbg !7997
  call void @llvm.dbg.value(metadata !DIArgList(i16 %30, i8 %29), metadata !7986, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7988
  %31 = shl nuw i16 %30, 8, !dbg !7999
  call void @llvm.dbg.value(metadata !DIArgList(i16 %31, i8 %29), metadata !7986, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7988
  %32 = zext i8 %29 to i16, !dbg !8000
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i16 %32), metadata !7986, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7988
  %33 = or i16 %31, %32, !dbg !8001
  call void @llvm.dbg.value(metadata i16 %33, metadata !7986, metadata !DIExpression()), !dbg !7988
  br label %34, !dbg !8002

34:                                               ; preds = %24, %48
  %35 = phi i32 [ %56, %48 ], [ 0, %24 ]
  %36 = phi i16 [ %49, %48 ], [ %33, %24 ]
  %37 = phi i8* [ %55, %48 ], [ %0, %24 ]
  %38 = phi i8* [ %52, %48 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !7987, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i16 %36, metadata !7986, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %37, metadata !7978, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %38, metadata !7980, metadata !DIExpression()), !dbg !7988
  %39 = and i32 %35, 15, !dbg !8004
  %40 = icmp eq i32 %39, 0, !dbg !8008
  br i1 %40, label %41, label %48, !dbg !8009

41:                                               ; preds = %34
  %42 = add i16 %36, 1, !dbg !8010
  call void @llvm.dbg.value(metadata i16 %42, metadata !7986, metadata !DIExpression()), !dbg !7988
  %43 = lshr i16 %42, 8, !dbg !8012
  %44 = trunc i16 %43 to i8, !dbg !8013
  store i8 %44, i8* %26, align 1, !dbg !8014
  %45 = trunc i16 %42 to i8, !dbg !8015
  store i8 %45, i8* %28, align 1, !dbg !8016
  %46 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !8017
  %47 = icmp eq i32 %46, 0, !dbg !8017
  br i1 %47, label %63, label %48, !dbg !8019

48:                                               ; preds = %41, %34
  %49 = phi i16 [ %42, %41 ], [ %36, %34 ], !dbg !7988
  call void @llvm.dbg.value(metadata i16 %49, metadata !7986, metadata !DIExpression()), !dbg !7988
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %39, !dbg !8020
  %51 = load i8, i8* %50, align 1, !dbg !8020
  %52 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !8021
  call void @llvm.dbg.value(metadata i8* %52, metadata !7980, metadata !DIExpression()), !dbg !7988
  %53 = load i8, i8* %38, align 1, !dbg !8022
  %54 = xor i8 %53, %51, !dbg !8023
  %55 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !8024
  call void @llvm.dbg.value(metadata i8* %55, metadata !7978, metadata !DIExpression()), !dbg !7988
  store i8 %54, i8* %37, align 1, !dbg !8025
  %56 = add nuw i32 %35, 1, !dbg !8026
  call void @llvm.dbg.value(metadata i32 %56, metadata !7987, metadata !DIExpression()), !dbg !7988
  %57 = icmp eq i32 %56, %3, !dbg !8027
  br i1 %57, label %58, label %34, !dbg !8002, !llvm.loop !8028

58:                                               ; preds = %48
  %59 = load i8, i8* %26, align 1, !dbg !8030
  %60 = load i8, i8* %28, align 1, !dbg !8031
  %61 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !8032
  store i8 %59, i8* %61, align 1, !dbg !8033
  %62 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !8034
  store i8 %60, i8* %62, align 1, !dbg !8035
  br label %63, !dbg !8036

63:                                               ; preds = %41, %6, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !8037
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !8037
  ret void, !dbg !8037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_decryption_verification(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !8038 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8040, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 %1, metadata !8041, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %2, metadata !8042, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 %3, metadata !8043, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %4, metadata !8044, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 %5, metadata !8045, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !8046, metadata !DIExpression()), !dbg !8050
  %10 = icmp eq i8* %0, null, !dbg !8051
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !8053
  br i1 %12, label %106, label %13, !dbg !8053

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !8054
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !8055
  br i1 %16, label %106, label %17, !dbg !8055

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !8056
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !8057
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !8057
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !8057
  br i1 %24, label %106, label %25, !dbg !8057

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !8058
  %27 = load i32, i32* %26, align 4, !dbg !8058
  %28 = sub i32 %5, %27, !dbg !8059
  %29 = icmp ugt i32 %28, %1, !dbg !8060
  br i1 %29, label %106, label %30, !dbg !8061

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8062
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8062
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !8047, metadata !DIExpression()), !dbg !8063
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !8064
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8064
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !8048, metadata !DIExpression()), !dbg !8065
  store i8 1, i8* %31, align 1, !dbg !8066
  call void @llvm.dbg.value(metadata i32 1, metadata !8049, metadata !DIExpression()), !dbg !8050
  %33 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %34 = load i8*, i8** %33, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8049, metadata !DIExpression()), !dbg !8050
  br label %35, !dbg !8067

35:                                               ; preds = %30, %35
  %36 = phi i32 [ 1, %30 ], [ %41, %35 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !8049, metadata !DIExpression()), !dbg !8050
  %37 = add nsw i32 %36, -1, !dbg !8069
  %38 = getelementptr inbounds i8, i8* %34, i32 %37, !dbg !8072
  %39 = load i8, i8* %38, align 1, !dbg !8072
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %36, !dbg !8073
  store i8 %39, i8* %40, align 1, !dbg !8074
  %41 = add nuw nsw i32 %36, 1, !dbg !8075
  call void @llvm.dbg.value(metadata i32 %41, metadata !8049, metadata !DIExpression()), !dbg !8050
  %42 = icmp eq i32 %41, 14, !dbg !8076
  br i1 %42, label %43, label %35, !dbg !8067, !llvm.loop !8077

43:                                               ; preds = %35
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8079
  store i8 0, i8* %44, align 1, !dbg !8080
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8081
  store i8 0, i8* %45, align 1, !dbg !8082
  %46 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !8083
  %47 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8083
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %28, i8* noundef %4, i32 noundef %28, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %47) #26, !dbg !8084
  store i8 0, i8* %44, align 1, !dbg !8085
  store i8 0, i8* %45, align 1, !dbg !8086
  %48 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8087
  %49 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %48) #27, !dbg !8088
  call void @llvm.dbg.value(metadata i32 0, metadata !8049, metadata !DIExpression()), !dbg !8050
  %50 = load i32, i32* %26, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !8049, metadata !DIExpression()), !dbg !8050
  %51 = icmp eq i32 %50, 0, !dbg !8089
  br i1 %51, label %66, label %52, !dbg !8092

52:                                               ; preds = %43
  %53 = getelementptr inbounds i8, i8* %4, i32 %5
  %54 = sub i32 0, %50
  %55 = getelementptr inbounds i8, i8* %53, i32 %54
  br label %56, !dbg !8092

56:                                               ; preds = %52, %56
  %57 = phi i32 [ 0, %52 ], [ %64, %56 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !8049, metadata !DIExpression()), !dbg !8050
  %58 = getelementptr inbounds i8, i8* %55, i32 %57, !dbg !8093
  %59 = load i8, i8* %58, align 1, !dbg !8095
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %57, !dbg !8096
  %61 = load i8, i8* %60, align 1, !dbg !8096
  %62 = xor i8 %61, %59, !dbg !8097
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %57, !dbg !8098
  store i8 %62, i8* %63, align 1, !dbg !8099
  %64 = add nuw i32 %57, 1, !dbg !8100
  call void @llvm.dbg.value(metadata i32 %64, metadata !8049, metadata !DIExpression()), !dbg !8050
  %65 = icmp eq i32 %64, %50, !dbg !8089
  br i1 %65, label %66, label %56, !dbg !8092, !llvm.loop !8101

66:                                               ; preds = %56, %43
  %67 = select i1 %18, i32 64, i32 0, !dbg !8103
  %68 = shl i32 %50, 2, !dbg !8104
  %69 = add i32 %68, 248, !dbg !8104
  %70 = and i32 %69, 248, !dbg !8104
  %71 = or i32 %70, %67, !dbg !8105
  %72 = trunc i32 %71 to i8, !dbg !8106
  %73 = or i8 %72, 1, !dbg !8106
  store i8 %73, i8* %31, align 1, !dbg !8107
  call void @llvm.dbg.value(metadata i32 1, metadata !8049, metadata !DIExpression()), !dbg !8050
  %74 = load i8*, i8** %33, align 4
  br label %75, !dbg !8108

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 1, %66 ], [ %81, %75 ]
  call void @llvm.dbg.value(metadata i32 %76, metadata !8049, metadata !DIExpression()), !dbg !8050
  %77 = add nsw i32 %76, -1, !dbg !8110
  %78 = getelementptr inbounds i8, i8* %74, i32 %77, !dbg !8113
  %79 = load i8, i8* %78, align 1, !dbg !8113
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %76, !dbg !8114
  store i8 %79, i8* %80, align 1, !dbg !8115
  %81 = add nuw nsw i32 %76, 1, !dbg !8116
  call void @llvm.dbg.value(metadata i32 %81, metadata !8049, metadata !DIExpression()), !dbg !8050
  %82 = icmp eq i32 %81, 14, !dbg !8117
  br i1 %82, label %83, label %75, !dbg !8108, !llvm.loop !8118

83:                                               ; preds = %75
  %84 = sub i32 %5, %50, !dbg !8120
  %85 = lshr i32 %84, 8, !dbg !8121
  %86 = trunc i32 %85 to i8, !dbg !8122
  store i8 %86, i8* %45, align 1, !dbg !8123
  %87 = trunc i32 %84 to i8, !dbg !8124
  store i8 %87, i8* %44, align 1, !dbg !8125
  %88 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8126
  %89 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %88) #27, !dbg !8127
  br i1 %18, label %90, label %92, !dbg !8128

90:                                               ; preds = %83
  %91 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8129
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %91) #26, !dbg !8132
  br label %92, !dbg !8133

92:                                               ; preds = %90, %83
  br i1 %14, label %93, label %97, !dbg !8134

93:                                               ; preds = %92
  %94 = load i32, i32* %26, align 4, !dbg !8135
  %95 = sub i32 %5, %94, !dbg !8138
  %96 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8139
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %0, i32 noundef %95, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %96) #26, !dbg !8140
  br label %97, !dbg !8141

97:                                               ; preds = %93, %92
  %98 = load i32, i32* %26, align 4, !dbg !8142
  %99 = call i32 @_compare(i8* noundef nonnull %31, i8* noundef nonnull %32, i32 noundef %98) #27, !dbg !8144
  %100 = icmp eq i32 %99, 0, !dbg !8145
  br i1 %100, label %104, label %101, !dbg !8146

101:                                              ; preds = %97
  %102 = load i32, i32* %26, align 4, !dbg !8147
  %103 = sub i32 %5, %102, !dbg !8149
  call void @_set(i8* noundef %0, i8 noundef zeroext 0, i32 noundef %103) #27, !dbg !8150
  br label %104, !dbg !8151

104:                                              ; preds = %97, %101
  %105 = phi i32 [ 0, %101 ], [ 1, %97 ], !dbg !8152
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8153
  br label %106

106:                                              ; preds = %7, %25, %13, %17, %104
  %107 = phi i32 [ %105, %104 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !8050
  ret i32 %107, !dbg !8153
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8203, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8204, metadata !DIExpression()), !dbg !8205
  %3 = icmp eq %struct.__esf* %1, null, !dbg !8206
  br i1 %3, label %5, label %4, !dbg !8208

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !8209
  br label %5, !dbg !8211

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !8212
  ret void, !dbg !8213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8214 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8218, metadata !DIExpression()), !dbg !8219
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8220
  %3 = load i32, i32* %2, align 4, !dbg !8220
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8220
  %5 = load i32, i32* %4, align 4, !dbg !8220
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8220
  %7 = load i32, i32* %6, align 4, !dbg !8220
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.74, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !8220
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !8225
  %9 = load i32, i32* %8, align 4, !dbg !8225
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !8225
  %11 = load i32, i32* %10, align 4, !dbg !8225
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !8225
  %13 = load i32, i32* %12, align 4, !dbg !8225
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.75, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !8225
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !8230
  %15 = load i32, i32* %14, align 4, !dbg !8230
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.76, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !8230
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8235
  %17 = load i32, i32* %16, align 4, !dbg !8235
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.77, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8235
  ret void, !dbg !8240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !8241 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8258, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !8259, metadata !DIExpression()), !dbg !8261
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8262
  %4 = load i32, i32* %3, align 4, !dbg !8262
  call void @llvm.dbg.value(metadata i32 %4, metadata !8260, metadata !DIExpression()), !dbg !8261
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !8263
  ret void, !dbg !8264
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8265 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8269, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.value(metadata i8* %0, metadata !8270, metadata !DIExpression()), !dbg !8272
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !8273
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !8273
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !8271, metadata !DIExpression()), !dbg !8274
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !8274
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8275
  %5 = bitcast i8* %4 to i32*, !dbg !8275
  %6 = load i32, i32* %5, align 4, !dbg !8275
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !8276
  store i32 %6, i32* %7, align 4, !dbg !8277
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !8278
  unreachable, !dbg !8279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8283, metadata !DIExpression()), !dbg !8284
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !8285
  ret void, !dbg !8286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8291, metadata !DIExpression()), !dbg !8292
  %2 = icmp sgt i32 %0, -1, !dbg !8293
  br i1 %2, label %3, label %8, !dbg !8295

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8296, !srcloc !8298
  %4 = and i32 %0, 31, !dbg !8299
  %5 = shl nuw i32 1, %4, !dbg !8300
  %6 = lshr i32 %0, 5, !dbg !8301
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8302
  store volatile i32 %5, i32* %7, align 4, !dbg !8303
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8304, !srcloc !8305
  br label %8, !dbg !8306

8:                                                ; preds = %3, %1
  ret void, !dbg !8307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !8308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8310, metadata !DIExpression()), !dbg !8311
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !8312
  ret void, !dbg !8313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8316, metadata !DIExpression()), !dbg !8317
  %2 = icmp sgt i32 %0, -1, !dbg !8318
  br i1 %2, label %3, label %8, !dbg !8320

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8321
  %5 = shl nuw i32 1, %4, !dbg !8323
  %6 = lshr i32 %0, 5, !dbg !8324
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8325
  store volatile i32 %5, i32* %7, align 4, !dbg !8326
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8327, !srcloc !8331
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8332, !srcloc !8335
  br label %8, !dbg !8336

8:                                                ; preds = %3, %1
  ret void, !dbg !8337
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !8338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8342, metadata !DIExpression()), !dbg !8343
  %2 = lshr i32 %0, 5, !dbg !8344
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !8345
  %4 = load volatile i32, i32* %3, align 4, !dbg !8345
  %5 = and i32 %0, 31, !dbg !8346
  %6 = shl nuw i32 1, %5, !dbg !8346
  %7 = and i32 %4, %6, !dbg !8347
  ret i32 %7, !dbg !8348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8353, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i32 %1, metadata !8354, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i32 %2, metadata !8355, metadata !DIExpression()), !dbg !8356
  %4 = add i32 %1, 1, !dbg !8357
  call void @llvm.dbg.value(metadata i32 %4, metadata !8354, metadata !DIExpression()), !dbg !8356
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !8360
  ret void, !dbg !8361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8366, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.value(metadata i32 %1, metadata !8367, metadata !DIExpression()), !dbg !8368
  %3 = trunc i32 %1 to i8, !dbg !8369
  %4 = shl i8 %3, 4, !dbg !8369
  %5 = and i32 %0, 15, !dbg !8371
  %6 = add nsw i32 %5, -4, !dbg !8371
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8371
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8371
  %9 = icmp slt i32 %0, 0, !dbg !8371
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8371
  store volatile i8 %4, i8* %10, align 1, !dbg !8369
  ret void, !dbg !8372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8373 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8375, metadata !DIExpression()), !dbg !8376
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !8377
  ret void, !dbg !8378
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8379 {
  tail call void @z_SysNmiOnReset() #27, !dbg !8381
  tail call void @z_arm_int_exit() #27, !dbg !8382
  ret void, !dbg !8383
}

; Function Attrs: optsize
declare !dbg !8384 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8385 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !8387 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !8389
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !8390
  tail call void @z_bss_zero() #27, !dbg !8391
  tail call void @z_data_copy() #27, !dbg !8392
  tail call void @z_arm_interrupt_init() #27, !dbg !8393
  tail call void @z_cstart() #29, !dbg !8394
  unreachable, !dbg !8394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8395 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8396
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8397, !srcloc !8400
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8401, !srcloc !8404
  ret void, !dbg !8405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !8406 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8407
  %2 = and i32 %1, -15728641, !dbg !8407
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8407
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !8408, !srcloc !8415
  call void @llvm.dbg.value(metadata i32 %3, metadata !8413, metadata !DIExpression()) #25, !dbg !8416
  %4 = and i32 %3, -5, !dbg !8417
  call void @llvm.dbg.value(metadata i32 %4, metadata !8418, metadata !DIExpression()) #25, !dbg !8423
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !8425, !srcloc !8426
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8427, !srcloc !8404
  ret void, !dbg !8429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8433, metadata !DIExpression()), !dbg !8434
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8435
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !8436
  store i32 %0, i32* %3, align 4, !dbg !8437
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8438
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !8439
  store i32 %4, i32* %5, align 4, !dbg !8440
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8441
  %7 = or i32 %6, 268435456, !dbg !8441
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8441
  call void @llvm.dbg.value(metadata i32 0, metadata !8442, metadata !DIExpression()) #25, !dbg !8445
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8447, !srcloc !8448
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8449
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !8450
  %10 = load i32, i32* %9, align 4, !dbg !8450
  ret i32 %10, !dbg !8451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8452 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8562, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8563, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata i8* %2, metadata !8564, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8565, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata i8* %4, metadata !8566, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata i8* %5, metadata !8567, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata i8* %6, metadata !8568, metadata !DIExpression()), !dbg !8570
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8571
  call void @llvm.dbg.value(metadata i8* %8, metadata !8569, metadata !DIExpression()), !dbg !8570
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8572
  %10 = bitcast i8* %9 to i32*, !dbg !8572
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8573
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8574
  %12 = bitcast i8* %8 to i32*, !dbg !8575
  store i32 %11, i32* %12, align 4, !dbg !8576
  %13 = ptrtoint i8* %4 to i32, !dbg !8577
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8578
  %15 = bitcast i8* %14 to i32*, !dbg !8578
  store i32 %13, i32* %15, align 4, !dbg !8579
  %16 = ptrtoint i8* %5 to i32, !dbg !8580
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8581
  %18 = bitcast i8* %17 to i32*, !dbg !8581
  store i32 %16, i32* %18, align 4, !dbg !8582
  %19 = ptrtoint i8* %6 to i32, !dbg !8583
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8584
  %21 = bitcast i8* %20 to i32*, !dbg !8584
  store i32 %19, i32* %21, align 4, !dbg !8585
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8586
  %23 = bitcast i8* %22 to i32*, !dbg !8586
  store i32 16777216, i32* %23, align 4, !dbg !8587
  %24 = ptrtoint i8* %8 to i32, !dbg !8588
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8589
  store i32 %24, i32* %25, align 8, !dbg !8590
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8591
  store i32 0, i32* %26, align 4, !dbg !8592
  ret void, !dbg !8593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8599, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata i32 %1, metadata !8600, metadata !DIExpression()), !dbg !8605
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8606
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8601, metadata !DIExpression()), !dbg !8605
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8607
  br i1 %4, label %19, label %5, !dbg !8609

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8604, metadata !DIExpression()), !dbg !8605
  %6 = icmp eq i32 %0, -22, !dbg !8610
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8610
  %8 = load i32, i32* %7, align 4, !dbg !8610
  br i1 %6, label %16, label %9, !dbg !8612

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8610
  %11 = icmp ule i32 %10, %0, !dbg !8610
  %12 = icmp ugt i32 %8, %0, !dbg !8610
  %13 = and i1 %12, %11, !dbg !8610
  %14 = icmp ugt i32 %8, %1, !dbg !8610
  %15 = and i1 %14, %13, !dbg !8610
  br i1 %15, label %18, label %19, !dbg !8610

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8610
  br i1 %17, label %18, label %19, !dbg !8612

18:                                               ; preds = %9, %16
  br label %19, !dbg !8613

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8605
  ret i32 %20, !dbg !8615
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !8616 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8620, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata i8* %1, metadata !8621, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8622, metadata !DIExpression()), !dbg !8623
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8624
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8625
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8626, !srcloc !8627
  unreachable, !dbg !8628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8629 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8647, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 %1, metadata !8648, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 %2, metadata !8649, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8650, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 0, metadata !8651, metadata !DIExpression()), !dbg !8657
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8658
  %9 = and i32 %8, 511, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %9, metadata !8652, metadata !DIExpression()), !dbg !8657
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8660
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8660
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !8661
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8661
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8656, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i32 0, metadata !8663, metadata !DIExpression()) #25, !dbg !8666
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8668, !srcloc !8669
  call void @llvm.dbg.value(metadata i8* %6, metadata !8654, metadata !DIExpression(DW_OP_deref)), !dbg !8657
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !8670
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !8655, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i8* %5, metadata !8653, metadata !DIExpression(DW_OP_deref)), !dbg !8657
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !8671
  call void @llvm.dbg.value(metadata i32 %12, metadata !8651, metadata !DIExpression()), !dbg !8657
  %13 = load i8, i8* %5, align 1, !dbg !8672, !range !8674
  call void @llvm.dbg.value(metadata i8 %13, metadata !8653, metadata !DIExpression()), !dbg !8657
  %14 = icmp eq i8 %13, 0, !dbg !8672
  br i1 %14, label %15, label %32, !dbg !8675

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !8676
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !8677
  %18 = load i8, i8* %6, align 1, !dbg !8678, !range !8674
  call void @llvm.dbg.value(metadata i8 %18, metadata !8654, metadata !DIExpression()), !dbg !8657
  %19 = icmp eq i8 %18, 0, !dbg !8678
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8680
  %21 = load i32, i32* %20, align 4, !dbg !8680
  br i1 %19, label %27, label %22, !dbg !8681

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !8682
  %24 = icmp eq i32 %23, 0, !dbg !8685
  br i1 %24, label %25, label %31, !dbg !8686

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !8687
  br label %29, !dbg !8689

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !8690
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !8680
  br label %31, !dbg !8692

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !8692
  br label %32, !dbg !8693

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8693
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8693
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8693
  ret void, !dbg !8693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8699, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 %1, metadata !8700, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 %2, metadata !8701, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i8* %3, metadata !8702, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i8 0, metadata !8703, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8704, metadata !DIExpression()), !dbg !8705
  store i8 0, i8* %3, align 1, !dbg !8706
  %5 = icmp ugt i32 %2, -16777217, !dbg !8707
  br i1 %5, label %6, label %17, !dbg !8709

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8710
  %8 = icmp eq i32 %7, 8, !dbg !8710
  br i1 %8, label %9, label %10, !dbg !8710

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.109, i32 0, i32 0), i32 noundef 69) #27, !dbg !8712
  br label %17, !dbg !8718

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8719
  %12 = icmp eq i32 %11, 0, !dbg !8719
  br i1 %12, label %13, label %14, !dbg !8720

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8704, metadata !DIExpression()), !dbg !8705
  store i8 1, i8* %3, align 1, !dbg !8723
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8705
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8704, metadata !DIExpression()), !dbg !8705
  br label %17, !dbg !8726

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8705
  ret %struct.__esf* %18, !dbg !8727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8728 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8732, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 %1, metadata !8733, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i8* %2, metadata !8734, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i32 0, metadata !8735, metadata !DIExpression()), !dbg !8736
  store i8 0, i8* %2, align 1, !dbg !8737
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8738

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !8739
  call void @llvm.dbg.value(metadata i32 %5, metadata !8735, metadata !DIExpression()), !dbg !8736
  br label %12, !dbg !8741

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8742
  call void @llvm.dbg.value(metadata i32 %7, metadata !8735, metadata !DIExpression()), !dbg !8736
  br label %12, !dbg !8743

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8744
  call void @llvm.dbg.value(metadata i32 0, metadata !8735, metadata !DIExpression()), !dbg !8736
  br label %12, !dbg !8745

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !8746
  call void @llvm.dbg.value(metadata i32 0, metadata !8735, metadata !DIExpression()), !dbg !8736
  br label %12, !dbg !8747

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !8748
  br label %12, !dbg !8749

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !8750
  br label %12, !dbg !8751

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8736
  call void @llvm.dbg.value(metadata i32 %13, metadata !8735, metadata !DIExpression()), !dbg !8736
  ret i32 %13, !dbg !8752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8753 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8757, metadata !DIExpression()), !dbg !8760
  call void @llvm.dbg.value(metadata i8* %1, metadata !8758, metadata !DIExpression()), !dbg !8760
  call void @llvm.dbg.value(metadata i32 0, metadata !8759, metadata !DIExpression()), !dbg !8760
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.104, i32 0, i32 0), i32 noundef 69) #27, !dbg !8761
  store i8 0, i8* %1, align 1, !dbg !8766
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8767
  %4 = and i32 %3, 2, !dbg !8769
  %5 = icmp eq i32 %4, 0, !dbg !8770
  br i1 %5, label %7, label %6, !dbg !8771

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.105, i32 0, i32 0), i32 noundef 69) #27, !dbg !8772
  br label %36, !dbg !8778

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8779
  %9 = icmp sgt i32 %8, -1, !dbg !8781
  br i1 %9, label %11, label %10, !dbg !8782

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.106, i32 0, i32 0), i32 noundef 69) #27, !dbg !8783
  br label %36, !dbg !8789

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8790
  %13 = and i32 %12, 1073741824, !dbg !8792
  %14 = icmp eq i32 %13, 0, !dbg !8793
  br i1 %14, label %36, label %15, !dbg !8794

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.107, i32 0, i32 0), i32 noundef 69) #27, !dbg !8795
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !8801
  br i1 %16, label %17, label %21, !dbg !8803

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8804
  %19 = load i32, i32* %18, align 4, !dbg !8804
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.108, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8804
  %20 = load i32, i32* %18, align 4, !dbg !8810
  call void @llvm.dbg.value(metadata i32 %20, metadata !8759, metadata !DIExpression()), !dbg !8760
  br label %36, !dbg !8811

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8812
  %23 = and i32 %22, 255, !dbg !8814
  %24 = icmp eq i32 %23, 0, !dbg !8815
  br i1 %24, label %27, label %25, !dbg !8816

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8817
  call void @llvm.dbg.value(metadata i32 %26, metadata !8759, metadata !DIExpression()), !dbg !8760
  br label %36, !dbg !8819

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8820
  %29 = and i32 %28, 65280, !dbg !8822
  %30 = icmp eq i32 %29, 0, !dbg !8823
  br i1 %30, label %32, label %31, !dbg !8824

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8825
  call void @llvm.dbg.value(metadata i32 0, metadata !8759, metadata !DIExpression()), !dbg !8760
  br label %36, !dbg !8827

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8828
  %34 = icmp ult i32 %33, 65536, !dbg !8830
  br i1 %34, label %36, label %35, !dbg !8831

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !8832
  call void @llvm.dbg.value(metadata i32 0, metadata !8759, metadata !DIExpression()), !dbg !8760
  br label %36, !dbg !8834

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !8760
  call void @llvm.dbg.value(metadata i32 %37, metadata !8759, metadata !DIExpression()), !dbg !8760
  ret i32 %37, !dbg !8835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8836 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8838, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 %1, metadata !8839, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8* %2, metadata !8840, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 0, metadata !8841, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 -22, metadata !8842, metadata !DIExpression()), !dbg !8851
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.99, i32 0, i32 0), i32 noundef 69) #27, !dbg !8852
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8857
  %5 = and i32 %4, 16, !dbg !8859
  %6 = icmp eq i32 %5, 0, !dbg !8860
  br i1 %6, label %8, label %7, !dbg !8861

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.100, i32 0, i32 0), i32 noundef 69) #27, !dbg !8862
  br label %8, !dbg !8868

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8869
  %10 = and i32 %9, 8, !dbg !8871
  %11 = icmp eq i32 %10, 0, !dbg !8872
  br i1 %11, label %13, label %12, !dbg !8873

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8874
  br label %13, !dbg !8880

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8881
  %15 = and i32 %14, 2, !dbg !8882
  %16 = icmp eq i32 %15, 0, !dbg !8883
  br i1 %16, label %27, label %17, !dbg !8884

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8885
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8890
  call void @llvm.dbg.value(metadata i32 %18, metadata !8843, metadata !DIExpression()), !dbg !8891
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8892
  %20 = and i32 %19, 128, !dbg !8894
  %21 = icmp eq i32 %20, 0, !dbg !8895
  br i1 %21, label %27, label %22, !dbg !8896

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8842, metadata !DIExpression()), !dbg !8851
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.102, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8897
  %23 = icmp eq i32 %1, 0, !dbg !8903
  br i1 %23, label %27, label %24, !dbg !8905

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8906
  %26 = and i32 %25, -129, !dbg !8906
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8906
  br label %27, !dbg !8908

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8851
  call void @llvm.dbg.value(metadata i32 %28, metadata !8842, metadata !DIExpression()), !dbg !8851
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8909
  %30 = and i32 %29, 1, !dbg !8911
  %31 = icmp eq i32 %30, 0, !dbg !8912
  br i1 %31, label %33, label %32, !dbg !8913

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.103, i32 0, i32 0), i32 noundef 69) #27, !dbg !8914
  br label %33, !dbg !8920

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8921
  %35 = and i32 %34, 32, !dbg !8923
  %36 = icmp eq i32 %35, 0, !dbg !8924
  br i1 %36, label %38, label %37, !dbg !8925

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), i32 noundef 69) #27, !dbg !8926
  br label %38, !dbg !8932

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8933
  %40 = and i32 %39, 16, !dbg !8934
  %41 = icmp eq i32 %40, 0, !dbg !8934
  br i1 %41, label %42, label %46, !dbg !8935

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8936
  %44 = and i32 %43, 2, !dbg !8937
  %45 = icmp eq i32 %44, 0, !dbg !8937
  br i1 %45, label %55, label %46, !dbg !8938

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8939
  %48 = and i32 %47, 2048, !dbg !8940
  %49 = icmp eq i32 %48, 0, !dbg !8940
  br i1 %49, label %55, label %50, !dbg !8941

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8942
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !8943
  call void @llvm.dbg.value(metadata i32 %52, metadata !8846, metadata !DIExpression()), !dbg !8944
  %53 = icmp eq i32 %52, 0, !dbg !8945
  br i1 %53, label %55, label %54, !dbg !8947

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8948, metadata !DIExpression()) #25, !dbg !8951
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !8954, !srcloc !8955
  call void @llvm.dbg.value(metadata i32 2, metadata !8841, metadata !DIExpression()), !dbg !8851
  br label %55, !dbg !8956

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !8851
  call void @llvm.dbg.value(metadata i32 %56, metadata !8841, metadata !DIExpression()), !dbg !8851
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8957
  %58 = and i32 %57, 32, !dbg !8959
  %59 = icmp eq i32 %58, 0, !dbg !8960
  br i1 %59, label %63, label %60, !dbg !8961

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8962
  %62 = and i32 %61, -8193, !dbg !8962
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8962
  br label %63, !dbg !8964

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8965
  %65 = or i32 %64, 255, !dbg !8965
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8965
  store i8 0, i8* %2, align 1, !dbg !8966
  ret i32 %56, !dbg !8967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8968 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8972, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i32 %0, metadata !8973, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i8* %1, metadata !8974, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i32 0, metadata !8975, metadata !DIExpression()), !dbg !8979
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8980
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8985
  %4 = and i32 %3, 4096, !dbg !8987
  %5 = icmp eq i32 %4, 0, !dbg !8987
  br i1 %5, label %7, label %6, !dbg !8988

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8989
  br label %7, !dbg !8995

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8996
  %9 = and i32 %8, 2048, !dbg !8998
  %10 = icmp eq i32 %9, 0, !dbg !8998
  br i1 %10, label %12, label %11, !dbg !8999

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !9000
  br label %12, !dbg !9006

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9007
  %14 = and i32 %13, 512, !dbg !9008
  %15 = icmp eq i32 %14, 0, !dbg !9008
  br i1 %15, label %26, label %16, !dbg !9009

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !9010
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !9015
  call void @llvm.dbg.value(metadata i32 %17, metadata !8976, metadata !DIExpression()), !dbg !9016
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9017
  %19 = and i32 %18, 32768, !dbg !9019
  %20 = icmp eq i32 %19, 0, !dbg !9020
  br i1 %20, label %26, label %21, !dbg !9021

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.95, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !9022
  %22 = icmp eq i32 %0, 0, !dbg !9028
  br i1 %22, label %26, label %23, !dbg !9030

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9031
  %25 = and i32 %24, -32769, !dbg !9031
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9031
  br label %26, !dbg !9033

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9034
  %28 = and i32 %27, 1024, !dbg !9036
  %29 = icmp eq i32 %28, 0, !dbg !9036
  br i1 %29, label %31, label %30, !dbg !9037

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !9038
  br label %31, !dbg !9044

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9045
  %33 = and i32 %32, 256, !dbg !9047
  %34 = icmp eq i32 %33, 0, !dbg !9048
  br i1 %34, label %35, label %39, !dbg !9049

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9050
  %37 = and i32 %36, 8192, !dbg !9052
  %38 = icmp eq i32 %37, 0, !dbg !9052
  br i1 %38, label %41, label %39, !dbg !9053

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.97, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !9054
  br label %41, !dbg !9055

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9055
  %43 = or i32 %42, 65280, !dbg !9055
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9055
  store i8 0, i8* %1, align 1, !dbg !9056
  ret void, !dbg !9057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !9058 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9064, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i32 0, metadata !9065, metadata !DIExpression()), !dbg !9066
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.84, i32 0, i32 0), i32 noundef 69) #27, !dbg !9067
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9072
  %2 = and i32 %1, 33554432, !dbg !9074
  %3 = icmp eq i32 %2, 0, !dbg !9075
  br i1 %3, label %5, label %4, !dbg !9076

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.85, i32 0, i32 0), i32 noundef 69) #27, !dbg !9077
  br label %5, !dbg !9083

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9084
  %7 = and i32 %6, 16777216, !dbg !9086
  %8 = icmp eq i32 %7, 0, !dbg !9087
  br i1 %8, label %10, label %9, !dbg !9088

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.86, i32 0, i32 0), i32 noundef 69) #27, !dbg !9089
  br label %10, !dbg !9095

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9096
  %12 = and i32 %11, 524288, !dbg !9098
  %13 = icmp eq i32 %12, 0, !dbg !9099
  br i1 %13, label %15, label %14, !dbg !9100

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22.87, i32 0, i32 0), i32 noundef 69) #27, !dbg !9101
  br label %15, !dbg !9107

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9108
  %17 = and i32 %16, 262144, !dbg !9110
  %18 = icmp eq i32 %17, 0, !dbg !9111
  br i1 %18, label %20, label %19, !dbg !9112

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.88, i32 0, i32 0), i32 noundef 69) #27, !dbg !9113
  br label %20, !dbg !9119

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9120
  %22 = and i32 %21, 131072, !dbg !9122
  %23 = icmp eq i32 %22, 0, !dbg !9123
  br i1 %23, label %25, label %24, !dbg !9124

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.89, i32 0, i32 0), i32 noundef 69) #27, !dbg !9125
  br label %25, !dbg !9131

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9132
  %27 = and i32 %26, 65536, !dbg !9134
  %28 = icmp eq i32 %27, 0, !dbg !9135
  br i1 %28, label %30, label %29, !dbg !9136

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69) #27, !dbg !9137
  br label %30, !dbg !9143

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9144
  %32 = or i32 %31, -65536, !dbg !9144
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9144
  ret void, !dbg !9145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !9146 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9150, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.value(metadata i8* %0, metadata !9151, metadata !DIExpression()), !dbg !9152
  store i8 0, i8* %0, align 1, !dbg !9153
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26.83, i32 0, i32 0), i32 noundef 69) #27, !dbg !9154
  ret void, !dbg !9159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !9160 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9164, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i32 %0, metadata !9165, metadata !DIExpression()), !dbg !9166
  %2 = icmp slt i32 %0, 16, !dbg !9167
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.80, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29.81, i32 0, i32 0), !dbg !9167
  %4 = add nsw i32 %0, -16, !dbg !9167
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.82, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !9167
  ret void, !dbg !9172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9177, metadata !DIExpression()), !dbg !9180
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !9181
  %3 = load i32, i32* %2, align 4, !dbg !9181
  %4 = inttoptr i32 %3 to i16*, !dbg !9182
  call void @llvm.dbg.value(metadata i16* %4, metadata !9178, metadata !DIExpression()), !dbg !9180
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9183
  %6 = or i32 %5, 256, !dbg !9183
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9183
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9184, !srcloc !9187
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9188, !srcloc !9191
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !9192
  %8 = load i16, i16* %7, align 2, !dbg !9193
  call void @llvm.dbg.value(metadata i16 %8, metadata !9179, metadata !DIExpression()), !dbg !9180
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9194
  %10 = and i32 %9, -257, !dbg !9194
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9194
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9195, !srcloc !9187
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9197, !srcloc !9191
  %11 = icmp eq i16 %8, -8446, !dbg !9199
  ret i1 %11, !dbg !9201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !9202 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9203
  %2 = or i32 %1, 16, !dbg !9203
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9203
  ret void, !dbg !9204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !9205 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9208, metadata !DIExpression()), !dbg !9209
  br label %1, !dbg !9210

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9208, metadata !DIExpression()), !dbg !9209
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef %2) #26, !dbg !9212
  %3 = add nuw nsw i32 %2, 1, !dbg !9215
  call void @llvm.dbg.value(metadata i32 %3, metadata !9208, metadata !DIExpression()), !dbg !9209
  %4 = icmp eq i32 %3, 85, !dbg !9216
  br i1 %4, label %5, label %1, !dbg !9210, !llvm.loop !9217

5:                                                ; preds = %1
  ret void, !dbg !9219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.112(i32 noundef %0) unnamed_addr #15 !dbg !9220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9222, metadata !DIExpression()), !dbg !9224
  call void @llvm.dbg.value(metadata i32 1, metadata !9223, metadata !DIExpression()), !dbg !9224
  %2 = and i32 %0, 15, !dbg !9225
  %3 = add nsw i32 %2, -4, !dbg !9225
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !9225
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9225
  %6 = icmp slt i32 %0, 0, !dbg !9225
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !9225
  store volatile i8 16, i8* %7, align 1, !dbg !9226
  ret void, !dbg !9228
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9229 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9335, metadata !DIExpression()), !dbg !9336
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9337
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !9339
  br i1 %3, label %4, label %12, !dbg !9340

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !9341, !srcloc !9353
  call void @llvm.dbg.value(metadata i32 %5, metadata !9344, metadata !DIExpression()) #25, !dbg !9354
  %6 = icmp eq i32 %5, 0, !dbg !9355
  br i1 %6, label %12, label %7, !dbg !9356

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9357
  %9 = or i32 %8, 268435456, !dbg !9357
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9357
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9359
  %11 = and i32 %10, -32769, !dbg !9359
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9359
  br label %12, !dbg !9360

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !9361
  ret void, !dbg !9362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !9363 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !9364
  ret void, !dbg !9365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !646, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata i8 0, metadata !647, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata i32 64, metadata !649, metadata !DIExpression()), !dbg !9366
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9367
  %3 = load i32, i32* %2, align 4, !dbg !9367
  %4 = add i32 %3, -64, !dbg !9369
  call void @llvm.dbg.value(metadata i32 %4, metadata !648, metadata !DIExpression()), !dbg !9366
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !9370
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !9371
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !9372
  call void @llvm.dbg.value(metadata i8 1, metadata !647, metadata !DIExpression()), !dbg !9366
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !9373
  ret void, !dbg !9374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !9375 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9376
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9377, !srcloc !9380
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9381, !srcloc !9384
  ret void, !dbg !9385
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !9386 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !9387, !srcloc !9390
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9391
  ret void, !dbg !9392
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9393 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9408, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.value(metadata i8 %1, metadata !9409, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.value(metadata i32 %2, metadata !9410, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.value(metadata i32 %3, metadata !9411, metadata !DIExpression()), !dbg !9412
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9413
  ret void, !dbg !9415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9416 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9421, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i8 %1, metadata !9422, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 undef, metadata !9423, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 undef, metadata !9424, metadata !DIExpression()), !dbg !9426
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9427
  call void @llvm.dbg.value(metadata i8 %3, metadata !9425, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9426
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %4, metadata !9425, metadata !DIExpression()), !dbg !9426
  %5 = trunc i32 %4 to i8, !dbg !9429
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9430
  ret void, !dbg !9431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9432 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9436, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata i8 %1, metadata !9437, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata i8 %2, metadata !9438, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata i1 %3, metadata !9439, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9442
  %5 = zext i8 %2 to i32, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %5, metadata !9441, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata i32 0, metadata !9440, metadata !DIExpression()), !dbg !9442
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9441, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata i32 0, metadata !9440, metadata !DIExpression()), !dbg !9442
  %7 = icmp eq i8 %1, 0, !dbg !9444
  br i1 %7, label %30, label %8, !dbg !9447

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9441, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata i32 %10, metadata !9440, metadata !DIExpression()), !dbg !9442
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9448
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9451
  %13 = load i32, i32* %12, align 4, !dbg !9451
  %14 = icmp eq i32 %13, 0, !dbg !9452
  br i1 %14, label %26, label %15, !dbg !9453

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9454

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9456
  %18 = icmp eq i32 %17, 0, !dbg !9456
  br i1 %18, label %19, label %20, !dbg !9457

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !9458
  br label %30, !dbg !9464

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9465
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9466
  call void @llvm.dbg.value(metadata i32 %22, metadata !9441, metadata !DIExpression()), !dbg !9442
  %23 = icmp eq i32 %22, -22, !dbg !9467
  br i1 %23, label %30, label %24, !dbg !9469

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %25, metadata !9441, metadata !DIExpression()), !dbg !9442
  br label %26, !dbg !9471

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9442
  call void @llvm.dbg.value(metadata i32 %27, metadata !9441, metadata !DIExpression()), !dbg !9442
  %28 = add nuw nsw i32 %10, 1, !dbg !9472
  call void @llvm.dbg.value(metadata i32 %28, metadata !9440, metadata !DIExpression()), !dbg !9442
  %29 = icmp eq i32 %28, %6, !dbg !9444
  br i1 %29, label %30, label %8, !dbg !9447, !llvm.loop !9473

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9442
  ret i32 %31, !dbg !9475
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !9476 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9480, metadata !DIExpression()), !dbg !9482
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9483
  %3 = load i32, i32* %2, align 4, !dbg !9483
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9484, !range !9485
  %5 = icmp ult i32 %4, 2, !dbg !9484
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9486
  br i1 %7, label %8, label %15, !dbg !9486

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9487
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9488
  %11 = load i32, i32* %10, align 4, !dbg !9488
  %12 = and i32 %11, %9, !dbg !9489
  %13 = icmp eq i32 %12, 0, !dbg !9490
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9481, metadata !DIExpression()), !dbg !9482
  ret i32 %16, !dbg !9491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9492 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9496, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9497, metadata !DIExpression()), !dbg !9499
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9500
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9500
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9498, metadata !DIExpression()), !dbg !9501
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9502
  %6 = load i32, i32* %5, align 4, !dbg !9502
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9503
  store i32 %6, i32* %7, align 4, !dbg !9504
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9505
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9506
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9507
  %11 = load i32, i32* %10, align 4, !dbg !9507
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* noundef nonnull %8, %struct.ctr_params* noundef nonnull %9, i32 noundef %11) #26, !dbg !9508
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !9509
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9510
  ret i32 %12, !dbg !9511
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* nocapture noundef writeonly %0, %struct.ctr_params* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #19 !dbg !9512 {
  call void @llvm.dbg.value(metadata %struct.ctr_params* %0, metadata !9519, metadata !DIExpression()), !dbg !9523
  call void @llvm.dbg.value(metadata %struct.ctr_params* %1, metadata !9520, metadata !DIExpression()), !dbg !9523
  call void @llvm.dbg.value(metadata i32 undef, metadata !9521, metadata !DIExpression()), !dbg !9523
  call void @llvm.dbg.value(metadata i32 %2, metadata !9522, metadata !DIExpression()), !dbg !9523
  %4 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %1, i32 0, i32 0, !dbg !9524
  %5 = load i32, i32* %4, align 4, !dbg !9524
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !9525
  %7 = or i32 %6, %5, !dbg !9526
  %8 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %0, i32 0, i32 0, !dbg !9527
  store i32 %7, i32* %8, align 4, !dbg !9528
  ret void, !dbg !9529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9530 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9534, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9535, metadata !DIExpression()), !dbg !9536
  %3 = zext i8 %0 to i32, !dbg !9537
  %4 = icmp ugt i8 %0, 7, !dbg !9539
  br i1 %4, label %5, label %6, !dbg !9540

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.122, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9541
  br label %7, !dbg !9547

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !9548
  br label %7, !dbg !9549

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9536
  ret i32 %8, !dbg !9550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !9551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9555, metadata !DIExpression()), !dbg !9557
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9556, metadata !DIExpression()), !dbg !9557
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !9558
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9559
  %4 = load i32, i32* %3, align 4, !dbg !9559
  %5 = and i32 %4, -32, !dbg !9560
  %6 = or i32 %5, %0, !dbg !9561
  %7 = or i32 %6, 16, !dbg !9561
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9562
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9563
  %9 = load i32, i32* %8, align 4, !dbg !9563
  %10 = or i32 %9, 1, !dbg !9564
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9565
  ret void, !dbg !9566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !9567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9570, metadata !DIExpression()), !dbg !9571
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9572
  ret void, !dbg !9573
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !9574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9578, metadata !DIExpression()), !dbg !9579
  %2 = icmp ult i32 %0, 33, !dbg !9580
  br i1 %2, label %11, label %3, !dbg !9582

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9583
  br i1 %4, label %11, label %5, !dbg !9585

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9586
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9587, !range !9485
  %8 = mul nsw i32 %7, -2, !dbg !9588
  %9 = add nsw i32 %8, 62, !dbg !9588
  %10 = and i32 %9, 62, !dbg !9589
  br label %11, !dbg !9590

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9579
  ret i32 %12, !dbg !9591
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9592 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9596, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %1, metadata !9597, metadata !DIExpression()), !dbg !9598
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9599
  ret void, !dbg !9601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9602 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9606, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.value(metadata i8 %1, metadata !9607, metadata !DIExpression()), !dbg !9613
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9614
  call void @llvm.dbg.value(metadata i8 %3, metadata !9608, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9613
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %4, metadata !9608, metadata !DIExpression()), !dbg !9613
  %5 = icmp ne i32 %4, -22, !dbg !9616
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %4, metadata !9609, metadata !DIExpression()), !dbg !9618
  br i1 %7, label %8, label %12, !dbg !9617

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9609, metadata !DIExpression()), !dbg !9618
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !9619
  %10 = add i32 %9, 1, !dbg !9622
  call void @llvm.dbg.value(metadata i32 %10, metadata !9609, metadata !DIExpression()), !dbg !9618
  %11 = icmp eq i32 %10, 8, !dbg !9623
  br i1 %11, label %12, label %8, !dbg !9624, !llvm.loop !9625

12:                                               ; preds = %8, %2
  ret void, !dbg !9627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !9628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9631, metadata !DIExpression()), !dbg !9632
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9633
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9634
  ret void, !dbg !9635
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9636 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9641
  %2 = icmp ugt i32 %1, 8, !dbg !9643
  br i1 %2, label %14, label %3, !dbg !9644

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !9645
  call void @llvm.dbg.value(metadata i32 0, metadata !9640, metadata !DIExpression()), !dbg !9646
  %4 = icmp eq i32 %1, 0, !dbg !9647
  br i1 %4, label %12, label %5, !dbg !9650

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !9650

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9640, metadata !DIExpression()), !dbg !9646
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !9651
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !9653
  %10 = add nuw i32 %8, 1, !dbg !9654
  call void @llvm.dbg.value(metadata i32 %10, metadata !9640, metadata !DIExpression()), !dbg !9646
  %11 = icmp eq i32 %10, %1, !dbg !9647
  br i1 %11, label %12, label %7, !dbg !9650, !llvm.loop !9655

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !9657
  store i8 %13, i8* @static_regions_num, align 1, !dbg !9658
  tail call void @arm_core_mpu_enable() #26, !dbg !9659
  br label %14, !dbg !9660

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !9646
  ret i32 %15, !dbg !9661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9669, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i8* %1, metadata !9670, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i8* %0, metadata !9671, metadata !DIExpression()), !dbg !9672
  %3 = load i8, i8* %1, align 1, !dbg !9673
  %4 = icmp eq i8 %3, 0, !dbg !9674
  br i1 %4, label %13, label %5, !dbg !9675

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9669, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i8* %8, metadata !9670, metadata !DIExpression()), !dbg !9672
  store i8 %6, i8* %7, align 1, !dbg !9676
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9678
  call void @llvm.dbg.value(metadata i8* %9, metadata !9669, metadata !DIExpression()), !dbg !9672
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9679
  call void @llvm.dbg.value(metadata i8* %10, metadata !9670, metadata !DIExpression()), !dbg !9672
  %11 = load i8, i8* %10, align 1, !dbg !9673
  %12 = icmp eq i8 %11, 0, !dbg !9674
  br i1 %12, label %13, label %5, !dbg !9675, !llvm.loop !9680

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9682
  ret i8* %0, !dbg !9683
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9684 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9688, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i8* %1, metadata !9689, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 %2, metadata !9690, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i8* %0, metadata !9691, metadata !DIExpression()), !dbg !9692
  %4 = icmp eq i32 %2, 0, !dbg !9693
  br i1 %4, label %22, label %5, !dbg !9694

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9688, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 %7, metadata !9690, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i8* %8, metadata !9689, metadata !DIExpression()), !dbg !9692
  %9 = load i8, i8* %8, align 1, !dbg !9695
  %10 = icmp eq i8 %9, 0, !dbg !9696
  br i1 %10, label %16, label %11, !dbg !9697

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9698
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9700
  call void @llvm.dbg.value(metadata i8* %12, metadata !9689, metadata !DIExpression()), !dbg !9692
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9701
  call void @llvm.dbg.value(metadata i8* %13, metadata !9688, metadata !DIExpression()), !dbg !9692
  %14 = add i32 %7, -1, !dbg !9702
  call void @llvm.dbg.value(metadata i32 %14, metadata !9690, metadata !DIExpression()), !dbg !9692
  %15 = icmp eq i32 %14, 0, !dbg !9693
  br i1 %15, label %22, label %5, !dbg !9694, !llvm.loop !9703

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9688, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 %18, metadata !9690, metadata !DIExpression()), !dbg !9692
  store i8 0, i8* %17, align 1, !dbg !9705
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9707
  call void @llvm.dbg.value(metadata i8* %19, metadata !9688, metadata !DIExpression()), !dbg !9692
  %20 = add i32 %18, -1, !dbg !9708
  call void @llvm.dbg.value(metadata i32 %20, metadata !9690, metadata !DIExpression()), !dbg !9692
  %21 = icmp eq i32 %20, 0, !dbg !9709
  br i1 %21, label %22, label %16, !dbg !9710, !llvm.loop !9711

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9713
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9718, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i32 %1, metadata !9719, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i32 %1, metadata !9720, metadata !DIExpression()), !dbg !9721
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9722

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9718, metadata !DIExpression()), !dbg !9721
  %6 = load i8, i8* %5, align 1, !dbg !9723
  %7 = icmp eq i8 %6, %3, !dbg !9724
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9725
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9726
  call void @llvm.dbg.value(metadata i8* %10, metadata !9718, metadata !DIExpression()), !dbg !9721
  br i1 %9, label %11, label %4, !dbg !9725, !llvm.loop !9728

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9730
  ret i8* %12, !dbg !9731
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9734, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.value(metadata i32 %1, metadata !9735, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.value(metadata i8* null, metadata !9736, metadata !DIExpression()), !dbg !9737
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9738

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9737
  call void @llvm.dbg.value(metadata i8* %6, metadata !9736, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.value(metadata i8* %5, metadata !9734, metadata !DIExpression()), !dbg !9737
  %7 = load i8, i8* %5, align 1, !dbg !9739
  %8 = icmp eq i8 %7, %3, !dbg !9742
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9743
  call void @llvm.dbg.value(metadata i8* %9, metadata !9736, metadata !DIExpression()), !dbg !9737
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9744
  call void @llvm.dbg.value(metadata i8* %10, metadata !9734, metadata !DIExpression()), !dbg !9737
  %11 = icmp eq i8 %7, 0, !dbg !9745
  br i1 %11, label %12, label %4, !dbg !9745, !llvm.loop !9746

12:                                               ; preds = %4
  ret i8* %9, !dbg !9748
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9749 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9753, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 0, metadata !9754, metadata !DIExpression()), !dbg !9755
  %2 = load i8, i8* %0, align 1, !dbg !9756
  %3 = icmp eq i8 %2, 0, !dbg !9757
  br i1 %3, label %11, label %4, !dbg !9758

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9754, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i8* %6, metadata !9753, metadata !DIExpression()), !dbg !9755
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9759
  call void @llvm.dbg.value(metadata i8* %7, metadata !9753, metadata !DIExpression()), !dbg !9755
  %8 = add i32 %5, 1, !dbg !9761
  call void @llvm.dbg.value(metadata i32 %8, metadata !9754, metadata !DIExpression()), !dbg !9755
  %9 = load i8, i8* %7, align 1, !dbg !9756
  %10 = icmp eq i8 %9, 0, !dbg !9757
  br i1 %10, label %11, label %4, !dbg !9758, !llvm.loop !9762

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9755
  ret i32 %12, !dbg !9764
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9765 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9769, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.value(metadata i32 %1, metadata !9770, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.value(metadata i32 0, metadata !9771, metadata !DIExpression()), !dbg !9772
  %3 = load i8, i8* %0, align 1, !dbg !9773
  %4 = icmp ne i8 %3, 0, !dbg !9774
  %5 = icmp ne i32 %1, 0, !dbg !9775
  %6 = and i1 %4, %5, !dbg !9775
  br i1 %6, label %7, label %16, !dbg !9776

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9771, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.value(metadata i8* %9, metadata !9769, metadata !DIExpression()), !dbg !9772
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9777
  call void @llvm.dbg.value(metadata i8* %10, metadata !9769, metadata !DIExpression()), !dbg !9772
  %11 = add nuw i32 %8, 1, !dbg !9779
  call void @llvm.dbg.value(metadata i32 %11, metadata !9771, metadata !DIExpression()), !dbg !9772
  %12 = load i8, i8* %10, align 1, !dbg !9773
  %13 = icmp ne i8 %12, 0, !dbg !9774
  %14 = icmp ult i32 %11, %1, !dbg !9775
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9775
  br i1 %15, label %7, label %16, !dbg !9776, !llvm.loop !9780

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9772
  ret i32 %17, !dbg !9782
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9783 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9787, metadata !DIExpression()), !dbg !9789
  call void @llvm.dbg.value(metadata i8* %1, metadata !9788, metadata !DIExpression()), !dbg !9789
  %3 = load i8, i8* %0, align 1, !dbg !9790
  %4 = load i8, i8* %1, align 1, !dbg !9791
  %5 = icmp ne i8 %3, %4, !dbg !9792
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9793
  br i1 %7, label %18, label %8, !dbg !9793

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9788, metadata !DIExpression()), !dbg !9789
  call void @llvm.dbg.value(metadata i8* %10, metadata !9787, metadata !DIExpression()), !dbg !9789
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9794
  call void @llvm.dbg.value(metadata i8* %11, metadata !9787, metadata !DIExpression()), !dbg !9789
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9796
  call void @llvm.dbg.value(metadata i8* %12, metadata !9788, metadata !DIExpression()), !dbg !9789
  %13 = load i8, i8* %11, align 1, !dbg !9790
  %14 = load i8, i8* %12, align 1, !dbg !9791
  %15 = icmp ne i8 %13, %14, !dbg !9792
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9793
  br i1 %17, label %18, label %8, !dbg !9793, !llvm.loop !9797

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9790
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9791
  %21 = zext i8 %19 to i32, !dbg !9800
  %22 = zext i8 %20 to i32, !dbg !9801
  %23 = sub nsw i32 %21, %22, !dbg !9802
  ret i32 %23, !dbg !9803
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9808, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata i8* %1, metadata !9809, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata i32 %2, metadata !9810, metadata !DIExpression()), !dbg !9811
  %4 = icmp eq i32 %2, 0, !dbg !9812
  br i1 %4, label %23, label %5, !dbg !9812

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9810, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata i8* %7, metadata !9809, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata i8* %8, metadata !9808, metadata !DIExpression()), !dbg !9811
  %9 = load i8, i8* %8, align 1, !dbg !9813
  %10 = load i8, i8* %7, align 1, !dbg !9814
  %11 = icmp ne i8 %9, %10, !dbg !9815
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9816
  br i1 %13, label %19, label %14, !dbg !9816

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9817
  call void @llvm.dbg.value(metadata i8* %15, metadata !9808, metadata !DIExpression()), !dbg !9811
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9819
  call void @llvm.dbg.value(metadata i8* %16, metadata !9809, metadata !DIExpression()), !dbg !9811
  %17 = add i32 %6, -1, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %17, metadata !9810, metadata !DIExpression()), !dbg !9811
  %18 = icmp eq i32 %17, 0, !dbg !9812
  br i1 %18, label %23, label %5, !dbg !9812, !llvm.loop !9821

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9824
  %21 = zext i8 %10 to i32, !dbg !9825
  %22 = sub nsw i32 %20, %21, !dbg !9826
  br label %23, !dbg !9827

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9827
  ret i32 %24, !dbg !9828
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !9829 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9833, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata i8* %1, metadata !9834, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata i8** %2, metadata !9835, metadata !DIExpression()), !dbg !9838
  %4 = icmp eq i8* %0, null, !dbg !9839
  br i1 %4, label %5, label %7, !dbg !9839

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9840
  br label %7, !dbg !9839

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9839
  call void @llvm.dbg.value(metadata i8* %8, metadata !9836, metadata !DIExpression()), !dbg !9838
  %9 = load i8, i8* %8, align 1, !dbg !9841
  %10 = icmp eq i8 %9, 0, !dbg !9841
  br i1 %10, label %33, label %11, !dbg !9842

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9836, metadata !DIExpression()), !dbg !9838
  %14 = zext i8 %12 to i32, !dbg !9841
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !9843
  %16 = icmp eq i8* %15, null, !dbg !9842
  br i1 %16, label %21, label %17, !dbg !9844

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9845
  call void @llvm.dbg.value(metadata i8* %18, metadata !9836, metadata !DIExpression()), !dbg !9838
  %19 = load i8, i8* %18, align 1, !dbg !9841
  %20 = icmp eq i8 %19, 0, !dbg !9841
  br i1 %20, label %33, label %11, !dbg !9842, !llvm.loop !9847

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9837, metadata !DIExpression()), !dbg !9838
  %24 = zext i8 %22 to i32, !dbg !9849
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !9850
  %26 = icmp eq i8* %25, null, !dbg !9851
  br i1 %26, label %27, label %31, !dbg !9852

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9853
  call void @llvm.dbg.value(metadata i8* %28, metadata !9837, metadata !DIExpression()), !dbg !9838
  %29 = load i8, i8* %28, align 1, !dbg !9849
  %30 = icmp eq i8 %29, 0, !dbg !9849
  br i1 %30, label %33, label %21, !dbg !9855, !llvm.loop !9856

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9858
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9861
  br label %33, !dbg !9862

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9838
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9838
  store i8* %34, i8** %2, align 4, !dbg !9838
  ret i8* %35, !dbg !9863
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9864 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9866, metadata !DIExpression()), !dbg !9868
  call void @llvm.dbg.value(metadata i8* %1, metadata !9867, metadata !DIExpression()), !dbg !9868
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9869
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9870
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !9871
  ret i8* %0, !dbg !9872
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9873 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9875, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %1, metadata !9876, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %2, metadata !9877, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %0, metadata !9878, metadata !DIExpression()), !dbg !9880
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9881
  call void @llvm.dbg.value(metadata i32 %4, metadata !9879, metadata !DIExpression()), !dbg !9880
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9882
  call void @llvm.dbg.value(metadata i8* %5, metadata !9875, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %1, metadata !9876, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %2, metadata !9877, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %2, metadata !9877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9880
  %6 = icmp eq i32 %2, 0, !dbg !9883
  br i1 %6, label %18, label %7, !dbg !9884

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9885
  call void @llvm.dbg.value(metadata i8* %9, metadata !9875, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %10, metadata !9876, metadata !DIExpression()), !dbg !9880
  %12 = load i8, i8* %10, align 1, !dbg !9886
  %13 = icmp eq i8 %12, 0, !dbg !9887
  br i1 %13, label %18, label %14, !dbg !9888

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9889
  call void @llvm.dbg.value(metadata i8* %15, metadata !9876, metadata !DIExpression()), !dbg !9880
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9891
  call void @llvm.dbg.value(metadata i8* %16, metadata !9875, metadata !DIExpression()), !dbg !9880
  store i8 %12, i8* %9, align 1, !dbg !9892
  call void @llvm.dbg.value(metadata i32 %11, metadata !9877, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %11, metadata !9877, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9880
  %17 = icmp eq i32 %11, 0, !dbg !9883
  br i1 %17, label %18, label %7, !dbg !9884, !llvm.loop !9893

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9880
  store i8 0, i8* %19, align 1, !dbg !9895
  ret i8* %0, !dbg !9896
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9897 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9901, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i8* %1, metadata !9902, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i32 %2, metadata !9903, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i8* %0, metadata !9904, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i8* %1, metadata !9905, metadata !DIExpression()), !dbg !9906
  %4 = icmp eq i32 %2, 0, !dbg !9907
  br i1 %4, label %31, label %5, !dbg !9909

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9905, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i8* %0, metadata !9904, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i32 %2, metadata !9903, metadata !DIExpression()), !dbg !9906
  %6 = add i32 %2, -1, !dbg !9910
  call void @llvm.dbg.value(metadata i32 %6, metadata !9903, metadata !DIExpression()), !dbg !9906
  %7 = icmp eq i32 %6, 0, !dbg !9911
  br i1 %7, label %23, label %8, !dbg !9912

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9913
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9913
  br label %11, !dbg !9913

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9905, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i8* %14, metadata !9904, metadata !DIExpression()), !dbg !9906
  %15 = load i8, i8* %14, align 1, !dbg !9914
  %16 = load i8, i8* %13, align 1, !dbg !9915
  %17 = icmp eq i8 %15, %16, !dbg !9916
  br i1 %17, label %18, label %23, !dbg !9913

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9917
  call void @llvm.dbg.value(metadata i8* %19, metadata !9904, metadata !DIExpression()), !dbg !9906
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9919
  call void @llvm.dbg.value(metadata i8* %20, metadata !9905, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i32 %12, metadata !9903, metadata !DIExpression()), !dbg !9906
  %21 = add i32 %12, -1, !dbg !9910
  call void @llvm.dbg.value(metadata i32 %21, metadata !9903, metadata !DIExpression()), !dbg !9906
  %22 = icmp eq i32 %21, 0, !dbg !9911
  br i1 %22, label %23, label %11, !dbg !9912, !llvm.loop !9920

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9906
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9906
  %26 = load i8, i8* %24, align 1, !dbg !9922
  %27 = zext i8 %26 to i32, !dbg !9922
  %28 = load i8, i8* %25, align 1, !dbg !9923
  %29 = zext i8 %28 to i32, !dbg !9923
  %30 = sub nsw i32 %27, %29, !dbg !9924
  br label %31, !dbg !9925

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9906
  ret i32 %32, !dbg !9926
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9927 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9931, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i8* %1, metadata !9932, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i32 %2, metadata !9933, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i8* %0, metadata !9934, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i8* %1, metadata !9935, metadata !DIExpression()), !dbg !9936
  %4 = ptrtoint i8* %0 to i32, !dbg !9937
  %5 = ptrtoint i8* %1 to i32, !dbg !9937
  %6 = sub i32 %4, %5, !dbg !9937
  %7 = icmp ult i32 %6, %2, !dbg !9939
  br i1 %7, label %10, label %8, !dbg !9940

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9935, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i8* %0, metadata !9934, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i32 %2, metadata !9933, metadata !DIExpression()), !dbg !9936
  %9 = icmp eq i32 %2, 0, !dbg !9941
  br i1 %9, label %26, label %17, !dbg !9943

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9933, metadata !DIExpression()), !dbg !9936
  %12 = add i32 %11, -1, !dbg !9944
  call void @llvm.dbg.value(metadata i32 %12, metadata !9933, metadata !DIExpression()), !dbg !9936
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9947
  %14 = load i8, i8* %13, align 1, !dbg !9947
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9948
  store i8 %14, i8* %15, align 1, !dbg !9949
  %16 = icmp eq i32 %12, 0, !dbg !9950
  br i1 %16, label %26, label %10, !dbg !9951, !llvm.loop !9952

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9935, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i8* %19, metadata !9934, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i32 %20, metadata !9933, metadata !DIExpression()), !dbg !9936
  %21 = load i8, i8* %18, align 1, !dbg !9954
  store i8 %21, i8* %19, align 1, !dbg !9956
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9957
  call void @llvm.dbg.value(metadata i8* %22, metadata !9934, metadata !DIExpression()), !dbg !9936
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9958
  call void @llvm.dbg.value(metadata i8* %23, metadata !9935, metadata !DIExpression()), !dbg !9936
  %24 = add i32 %20, -1, !dbg !9959
  call void @llvm.dbg.value(metadata i32 %24, metadata !9933, metadata !DIExpression()), !dbg !9936
  %25 = icmp eq i32 %24, 0, !dbg !9941
  br i1 %25, label %26, label %17, !dbg !9943, !llvm.loop !9960

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9962
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9963 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9969, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata i8* %1, metadata !9970, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata i32 %2, metadata !9971, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata i8* %0, metadata !9972, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata i8* %1, metadata !9973, metadata !DIExpression()), !dbg !9974
  %4 = icmp eq i32 %2, 0, !dbg !9975
  br i1 %4, label %14, label %5, !dbg !9976

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9973, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata i8* %7, metadata !9972, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata i32 %8, metadata !9971, metadata !DIExpression()), !dbg !9974
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9977
  call void @llvm.dbg.value(metadata i8* %9, metadata !9973, metadata !DIExpression()), !dbg !9974
  %10 = load i8, i8* %6, align 1, !dbg !9979
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9980
  call void @llvm.dbg.value(metadata i8* %11, metadata !9972, metadata !DIExpression()), !dbg !9974
  store i8 %10, i8* %7, align 1, !dbg !9981
  %12 = add i32 %8, -1, !dbg !9982
  call void @llvm.dbg.value(metadata i32 %12, metadata !9971, metadata !DIExpression()), !dbg !9974
  %13 = icmp eq i32 %12, 0, !dbg !9975
  br i1 %13, label %14, label %5, !dbg !9976, !llvm.loop !9983

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9985
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9986 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9990, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata i32 %1, metadata !9991, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata i32 %2, metadata !9992, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata i8* %0, metadata !9993, metadata !DIExpression()), !dbg !9995
  %4 = trunc i32 %1 to i8, !dbg !9996
  call void @llvm.dbg.value(metadata i8 %4, metadata !9994, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata i32 %2, metadata !9992, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata i8* %0, metadata !9993, metadata !DIExpression()), !dbg !9995
  %5 = icmp eq i32 %2, 0, !dbg !9997
  br i1 %5, label %12, label %6, !dbg !9998

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9992, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata i8* %8, metadata !9993, metadata !DIExpression()), !dbg !9995
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9999
  call void @llvm.dbg.value(metadata i8* %9, metadata !9993, metadata !DIExpression()), !dbg !9995
  store i8 %4, i8* %8, align 1, !dbg !10001
  %10 = add i32 %7, -1, !dbg !10002
  call void @llvm.dbg.value(metadata i32 %10, metadata !9992, metadata !DIExpression()), !dbg !9995
  %11 = icmp eq i32 %10, 0, !dbg !9997
  br i1 %11, label %12, label %6, !dbg !9998, !llvm.loop !10003

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !10005
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10006 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10010, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata i32 %1, metadata !10011, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata i32 %2, metadata !10012, metadata !DIExpression()), !dbg !10016
  %4 = icmp eq i32 %2, 0, !dbg !10017
  br i1 %4, label %17, label %5, !dbg !10018

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !10019

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !10020
  call void @llvm.dbg.value(metadata i8* %9, metadata !10013, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.value(metadata i32 %8, metadata !10012, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata i8* %9, metadata !10013, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10020
  %10 = load i8, i8* %9, align 1, !dbg !10021
  %11 = icmp eq i8 %10, %6, !dbg !10024
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !10025
  call void @llvm.dbg.value(metadata i8* %12, metadata !10013, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.value(metadata i32 %13, metadata !10012, metadata !DIExpression()), !dbg !10016
  br i1 %15, label %16, label %7, !dbg !10025, !llvm.loop !10026

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !10028

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !10016
  ret i8* %19, !dbg !10029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !10030 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !10032, metadata !DIExpression()), !dbg !10033
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !10034
  ret void, !dbg !10035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !10036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10038, metadata !DIExpression()), !dbg !10039
  ret i32 -1, !dbg !10040
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10045, metadata !DIExpression()), !dbg !10047
  call void @llvm.dbg.value(metadata i32* %1, metadata !10046, metadata !DIExpression()), !dbg !10047
  %3 = ptrtoint i32* %1 to i32, !dbg !10048
  %4 = and i32 %3, -2, !dbg !10048
  %5 = icmp eq i32 %4, 2, !dbg !10048
  br i1 %5, label %6, label %9, !dbg !10048

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10049
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !10049
  br label %9, !dbg !10050

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !10050
  ret i32 %10, !dbg !10051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10054, metadata !DIExpression()), !dbg !10056
  call void @llvm.dbg.value(metadata i32* %1, metadata !10055, metadata !DIExpression()), !dbg !10056
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10057
  ret i32 %3, !dbg !10058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !10059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10062, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata i32* %1, metadata !10063, metadata !DIExpression()), !dbg !10064
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10065, !srcloc !10067
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10068
  ret i32 %3, !dbg !10069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !10070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10075, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32* %1, metadata !10076, metadata !DIExpression()), !dbg !10079
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !10080
  call void @llvm.dbg.value(metadata i32 %3, metadata !10077, metadata !DIExpression()), !dbg !10079
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !10081
  call void @llvm.dbg.value(metadata i32 %4, metadata !10078, metadata !DIExpression()), !dbg !10079
  %5 = icmp ne i32 %3, %4, !dbg !10082
  %6 = sext i1 %5 to i32, !dbg !10083
  ret i32 %6, !dbg !10084
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !10085 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10089, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.value(metadata i32 %1, metadata !10090, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.value(metadata i32 %2, metadata !10091, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.value(metadata i32* %3, metadata !10092, metadata !DIExpression()), !dbg !10093
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10094
  ret i32 %5, !dbg !10095
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !10096 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10098, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata i32 %1, metadata !10099, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata i32 %2, metadata !10100, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata i32* %3, metadata !10101, metadata !DIExpression()), !dbg !10102
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10103, !srcloc !10105
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10106
  ret i32 %5, !dbg !10107
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !10108 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10110, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i32 %1, metadata !10111, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i32 %2, metadata !10112, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i32* %3, metadata !10113, metadata !DIExpression()), !dbg !10118
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !10119
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !10121
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !10121
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !10121
  br i1 %11, label %33, label %12, !dbg !10121

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !10118
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !10118
  call void @llvm.dbg.value(metadata i8* %14, metadata !10116, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i32 %13, metadata !10114, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()), !dbg !10118
  br label %15, !dbg !10122

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !10124
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !10118
  call void @llvm.dbg.value(metadata i8* %17, metadata !10116, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i32 %16, metadata !10115, metadata !DIExpression()), !dbg !10118
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10125
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !10128
  call void @llvm.dbg.value(metadata i8* %19, metadata !10116, metadata !DIExpression()), !dbg !10118
  %20 = load i8, i8* %17, align 1, !dbg !10129
  %21 = zext i8 %20 to i32, !dbg !10130
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !10125
  %23 = icmp eq i32 %22, -1, !dbg !10131
  br i1 %23, label %30, label %24, !dbg !10132

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !10133
  call void @llvm.dbg.value(metadata i32 %25, metadata !10115, metadata !DIExpression()), !dbg !10118
  %26 = icmp eq i32 %25, 0, !dbg !10134
  br i1 %26, label %27, label %15, !dbg !10135, !llvm.loop !10136

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !10138
  call void @llvm.dbg.value(metadata i32 %28, metadata !10114, metadata !DIExpression()), !dbg !10118
  %29 = icmp eq i32 %28, 0, !dbg !10139
  br i1 %29, label %30, label %12, !dbg !10140, !llvm.loop !10141

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !10118
  call void @llvm.dbg.value(metadata i32 %31, metadata !10114, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.label(metadata !10117), !dbg !10144
  %32 = sub i32 %2, %31, !dbg !10145
  br label %33, !dbg !10146

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !10118
  ret i32 %34, !dbg !10147
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !10148 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10152, metadata !DIExpression()), !dbg !10153
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10154
  %3 = icmp eq i32 %2, -1, !dbg !10156
  br i1 %3, label %8, label %4, !dbg !10157

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10158
  %6 = icmp eq i32 %5, -1, !dbg !10159
  %7 = sext i1 %6 to i32, !dbg !10158
  br label %8, !dbg !10160

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !10153
  ret i32 %9, !dbg !10161
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10162 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10164, metadata !DIExpression()), !dbg !10165
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !10166
  ret void, !dbg !10167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10172, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.value(metadata i32 %1, metadata !10173, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10174, metadata !DIExpression()), !dbg !10178
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10179
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10179
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10179
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10175, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.value(metadata i32 %0, metadata !10177, metadata !DIExpression()), !dbg !10178
  %7 = icmp slt i32 %0, %1, !dbg !10180
  br i1 %7, label %8, label %22, !dbg !10183

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10177, metadata !DIExpression()), !dbg !10178
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !10184
  %11 = icmp eq i32 %10, 0, !dbg !10184
  br i1 %11, label %19, label %12, !dbg !10187

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !10188
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10190
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10190
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10192
  br i1 %15, label %19, label %16, !dbg !10193

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10194
  %18 = load i8*, i8** %17, align 4, !dbg !10194
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !10195
  br label %19, !dbg !10196

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10197
  call void @llvm.dbg.value(metadata i32 %20, metadata !10177, metadata !DIExpression()), !dbg !10178
  %21 = icmp eq i32 %20, %1, !dbg !10180
  br i1 %21, label %22, label %8, !dbg !10183, !llvm.loop !10198

22:                                               ; preds = %19, %3
  ret void, !dbg !10200
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !10201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10203, metadata !DIExpression()), !dbg !10204
  %2 = shl nuw i32 1, %0, !dbg !10205
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !10208
  ret i32 %3, !dbg !10209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !10210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10214, metadata !DIExpression()), !dbg !10215
  %2 = shl nuw i32 1, %0, !dbg !10216
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !10219
  ret void, !dbg !10220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10224, metadata !DIExpression()), !dbg !10225
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10226
  ret void, !dbg !10227
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10230, metadata !DIExpression()), !dbg !10231
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10232
  %3 = and i32 %2, %0, !dbg !10232
  %4 = icmp eq i32 %3, %0, !dbg !10233
  %5 = zext i1 %4 to i32, !dbg !10233
  ret i32 %5, !dbg !10234
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10237, metadata !DIExpression()), !dbg !10238
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !10239
  ret void, !dbg !10240
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10243, metadata !DIExpression()), !dbg !10244
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !10245
  ret void, !dbg !10246
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10247 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10249, metadata !DIExpression()), !dbg !10250
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !10251
  ret void, !dbg !10252
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !10253 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10255, metadata !DIExpression()), !dbg !10256
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !10257
  ret void, !dbg !10258
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !10259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10261, metadata !DIExpression()), !dbg !10262
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !10263
  ret void, !dbg !10264
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10265 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10267, metadata !DIExpression()), !dbg !10268
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !10269
  ret void, !dbg !10270
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !10271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10273, metadata !DIExpression()), !dbg !10274
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !10275
  ret void, !dbg !10276
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !10277 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10279, metadata !DIExpression()), !dbg !10280
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !10281
  ret void, !dbg !10282
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10283 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10285, metadata !DIExpression()), !dbg !10286
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !10287
  ret void, !dbg !10288
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10289 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10291, metadata !DIExpression()), !dbg !10292
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !10293
  ret void, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10297, metadata !DIExpression()), !dbg !10298
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !10299
  ret i32 0, !dbg !10300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !879 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !883, metadata !DIExpression()), !dbg !10301
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !10302
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !10304
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !10306
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !10308
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !10310
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !10312
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !10314
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !10316
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !10318
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !10320
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !10322
  ret void, !dbg !10324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10327, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.value(metadata i32 0, metadata !10328, metadata !DIExpression()), !dbg !10329
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10330
  %3 = load i32, i32* %2, align 4, !dbg !10330
  call void @llvm.dbg.value(metadata i32 %3, metadata !10328, metadata !DIExpression()), !dbg !10329
  %4 = shl nuw i32 1, %0, !dbg !10331
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !10332
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !10333
  ret void, !dbg !10334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10337, metadata !DIExpression()), !dbg !10338
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10339
  %3 = or i32 %2, %0, !dbg !10339
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10339
  ret void, !dbg !10340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !10341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10343, metadata !DIExpression()), !dbg !10344
  %2 = icmp slt i32 %0, 32, !dbg !10345
  br i1 %2, label %3, label %5, !dbg !10347

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10348
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !10350
  br label %5, !dbg !10351

5:                                                ; preds = %1, %3
  ret void, !dbg !10352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10355, metadata !DIExpression()), !dbg !10356
  %2 = xor i32 %0, -1, !dbg !10357
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10357
  %4 = and i32 %3, %2, !dbg !10357
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10357
  ret void, !dbg !10358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !10359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10363, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %1, metadata !10364, metadata !DIExpression()), !dbg !10365
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10366

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10367
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !10369
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !10370
  br label %11, !dbg !10371

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10372
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !10373
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !10374
  br label %11, !dbg !10375

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10376
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !10377
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !10378
  br label %11, !dbg !10379

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10380
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !10381
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !10382
  br label %11, !dbg !10383

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10387, metadata !DIExpression()), !dbg !10388
  %2 = xor i32 %0, -1, !dbg !10389
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10389
  %4 = and i32 %3, %2, !dbg !10389
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10389
  ret void, !dbg !10390
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10393, metadata !DIExpression()), !dbg !10394
  %2 = xor i32 %0, -1, !dbg !10395
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10395
  %4 = and i32 %3, %2, !dbg !10395
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10395
  ret void, !dbg !10396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10399, metadata !DIExpression()), !dbg !10400
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10401
  %3 = or i32 %2, %0, !dbg !10401
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10401
  ret void, !dbg !10402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10405, metadata !DIExpression()), !dbg !10406
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10407
  %3 = or i32 %2, %0, !dbg !10407
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10407
  ret void, !dbg !10408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !10409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10413, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10414, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata i8* %2, metadata !10415, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !10416, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10418, metadata !DIExpression()), !dbg !10419
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10420
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10420
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10422
  br i1 %6, label %7, label %9, !dbg !10423

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10424
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10425
  store i8* %2, i8** %8, align 4, !dbg !10426
  br label %9, !dbg !10427

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10419
  ret i32 %10, !dbg !10428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !10429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10431, metadata !DIExpression()), !dbg !10434
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !10432, metadata !DIExpression()), !dbg !10434
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10433, metadata !DIExpression()), !dbg !10434
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10435
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10436
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10437
  store i8* null, i8** %3, align 4, !dbg !10438
  ret void, !dbg !10439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10440 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10442, metadata !DIExpression()), !dbg !10447
  call void @llvm.dbg.value(metadata i8* %1, metadata !10443, metadata !DIExpression()), !dbg !10447
  call void @llvm.dbg.value(metadata i8* %1, metadata !10444, metadata !DIExpression()), !dbg !10447
  %3 = bitcast i8* %1 to i32*, !dbg !10448
  %4 = load i32, i32* %3, align 4, !dbg !10448
  %5 = add i32 %4, -169, !dbg !10448
  %6 = icmp ult i32 %5, -121, !dbg !10448
  br i1 %6, label %15, label %7, !dbg !10450

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10451
  %9 = inttoptr i32 %8 to i32*, !dbg !10452
  call void @llvm.dbg.value(metadata i32* %9, metadata !10445, metadata !DIExpression()), !dbg !10447
  %10 = load volatile i32, i32* %9, align 4, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %10, metadata !10446, metadata !DIExpression()), !dbg !10447
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10454
  %12 = bitcast i8* %11 to i32*, !dbg !10454
  %13 = load i32, i32* %12, align 4, !dbg !10454
  %14 = or i32 %13, %10, !dbg !10455
  call void @llvm.dbg.value(metadata i32 %14, metadata !10446, metadata !DIExpression()), !dbg !10447
  store volatile i32 %14, i32* %9, align 4, !dbg !10456
  br label %15, !dbg !10457

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10447
  ret i32 %16, !dbg !10458
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10459 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10461, metadata !DIExpression()), !dbg !10466
  call void @llvm.dbg.value(metadata i8* %1, metadata !10462, metadata !DIExpression()), !dbg !10466
  call void @llvm.dbg.value(metadata i8* %1, metadata !10463, metadata !DIExpression()), !dbg !10466
  %3 = bitcast i8* %1 to i32*, !dbg !10467
  %4 = load i32, i32* %3, align 4, !dbg !10467
  %5 = add i32 %4, -169, !dbg !10467
  %6 = icmp ult i32 %5, -121, !dbg !10467
  br i1 %6, label %16, label %7, !dbg !10469

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10470
  %9 = inttoptr i32 %8 to i32*, !dbg !10471
  call void @llvm.dbg.value(metadata i32* %9, metadata !10464, metadata !DIExpression()), !dbg !10466
  %10 = load volatile i32, i32* %9, align 4, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %10, metadata !10465, metadata !DIExpression()), !dbg !10466
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10473
  %12 = bitcast i8* %11 to i32*, !dbg !10473
  %13 = load i32, i32* %12, align 4, !dbg !10473
  %14 = xor i32 %13, -1, !dbg !10474
  %15 = and i32 %10, %14, !dbg !10475
  call void @llvm.dbg.value(metadata i32 %15, metadata !10465, metadata !DIExpression()), !dbg !10466
  store volatile i32 %15, i32* %9, align 4, !dbg !10476
  br label %16, !dbg !10477

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10466
  ret i32 %17, !dbg !10478
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10479 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10481, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i8* %1, metadata !10482, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32* %2, metadata !10483, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i8* %1, metadata !10484, metadata !DIExpression()), !dbg !10489
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10490
  call void @llvm.dbg.value(metadata i32 %4, metadata !10485, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 undef, metadata !10486, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 %4, metadata !10488, metadata !DIExpression()), !dbg !10489
  %5 = bitcast i8* %1 to i32*, !dbg !10491
  %6 = load i32, i32* %5, align 4, !dbg !10491
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10492

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %8, metadata !10486, metadata !DIExpression()), !dbg !10489
  br label %19, !dbg !10494

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %10, metadata !10487, metadata !DIExpression()), !dbg !10489
  br label %19, !dbg !10497

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10498
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #26, !dbg !10499
  br label %19, !dbg !10500

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10501
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !10502
  br label %19, !dbg !10503

17:                                               ; preds = %3
  br label %19, !dbg !10504

18:                                               ; preds = %3
  br label %19, !dbg !10505

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10506
  br label %21, !dbg !10507

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10489
  ret i32 %22, !dbg !10507
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !10508 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10510, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i8* %1, metadata !10511, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i8* %2, metadata !10512, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i8* %1, metadata !10513, metadata !DIExpression()), !dbg !10518
  %4 = bitcast i8* %1 to i32*, !dbg !10519
  %5 = load i32, i32* %4, align 4, !dbg !10519
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %6, metadata !10517, metadata !DIExpression()), !dbg !10518
  %7 = icmp slt i32 %6, 0, !dbg !10521
  br i1 %7, label %22, label %8, !dbg !10523

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10513, metadata !DIExpression()), !dbg !10518
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10524
  %10 = bitcast i8* %9 to i32*, !dbg !10524
  %11 = load i32, i32* %10, align 4, !dbg !10524
  %12 = lshr i32 %11, 16, !dbg !10524
  %13 = and i32 %12, 7, !dbg !10524
  %14 = lshr i32 %11, 8, !dbg !10525
  %15 = and i32 %14, 31, !dbg !10525
  %16 = shl i32 %13, %15, !dbg !10526
  call void @llvm.dbg.value(metadata i32 %16, metadata !10516, metadata !DIExpression()), !dbg !10518
  %17 = and i32 %11, 255, !dbg !10527
  %18 = or i32 %17, 1073887232, !dbg !10528
  %19 = inttoptr i32 %18 to i32*, !dbg !10529
  call void @llvm.dbg.value(metadata i32* %19, metadata !10514, metadata !DIExpression()), !dbg !10518
  %20 = load volatile i32, i32* %19, align 4, !dbg !10530
  call void @llvm.dbg.value(metadata i32 %20, metadata !10515, metadata !DIExpression()), !dbg !10518
  %21 = or i32 %16, %20, !dbg !10531
  call void @llvm.dbg.value(metadata i32 %21, metadata !10515, metadata !DIExpression()), !dbg !10518
  store volatile i32 %21, i32* %19, align 4, !dbg !10532
  br label %22, !dbg !10533

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10518
  ret i32 %23, !dbg !10534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !10535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10539, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 0, metadata !10540, metadata !DIExpression()), !dbg !10541
  %2 = add i32 %0, -1, !dbg !10542
  %3 = icmp ult i32 %2, 6, !dbg !10542
  br i1 %3, label %4, label %7, !dbg !10542

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10542
  %6 = load i32, i32* %5, align 4, !dbg !10542
  call void @llvm.dbg.value(metadata i32 %6, metadata !10540, metadata !DIExpression()), !dbg !10541
  br label %7, !dbg !10543

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10541
  ret i32 %8, !dbg !10544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10549, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i32 %1, metadata !10550, metadata !DIExpression()), !dbg !10551
  %3 = udiv i32 %0, %1, !dbg !10552
  ret i32 %3, !dbg !10553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10558, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 16, metadata !10559, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 336, metadata !10560, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 %1, metadata !10561, metadata !DIExpression()), !dbg !10562
  %3 = mul i32 %0, 336, !dbg !10563
  %4 = shl nsw i32 %1, 4, !dbg !10564
  %5 = udiv i32 %3, %4, !dbg !10565
  ret i32 %5, !dbg !10566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10567 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10569, metadata !DIExpression()), !dbg !10572
  tail call void @config_enable_default_clocks() #27, !dbg !10573
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10574
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !10574
  %4 = lshr i32 %3, 4, !dbg !10574
  %5 = and i32 %4, 15, !dbg !10574
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10574
  %7 = load i8, i8* %6, align 1, !dbg !10574
  %8 = zext i8 %7 to i32, !dbg !10574
  %9 = lshr i32 %2, %8, !dbg !10574
  call void @llvm.dbg.value(metadata i32 %9, metadata !10570, metadata !DIExpression()), !dbg !10572
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10571, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10572
  %10 = icmp ult i32 %9, 84000000, !dbg !10575
  br i1 %10, label %11, label %13, !dbg !10577

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10578
  br label %13, !dbg !10580

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !10581
  tail call fastcc void @set_up_plls() #26, !dbg !10582
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10583
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !10586
  br label %14, !dbg !10587

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10588
  %16 = icmp eq i32 %15, 8, !dbg !10589
  br i1 %16, label %17, label %14, !dbg !10587, !llvm.loop !10590

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10592
  br i1 %18, label %19, label %21, !dbg !10594

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10595
  br label %21, !dbg !10597

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10598
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !10599
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !10600
  ret i32 0, !dbg !10601
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !10602 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10604
  %2 = and i32 %1, 240, !dbg !10604
  ret i32 %2, !dbg !10605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10606 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !10607
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !10612
  br label %1, !dbg !10613

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !10614
  %3 = icmp eq i32 %2, 1, !dbg !10615
  br i1 %3, label %4, label %1, !dbg !10613, !llvm.loop !10616

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !10618
  br label %5, !dbg !10621

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !10622
  %7 = icmp eq i32 %6, 1, !dbg !10623
  br i1 %7, label %8, label %5, !dbg !10621, !llvm.loop !10624

8:                                                ; preds = %5
  ret void, !dbg !10626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10627 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10628
  %2 = icmp eq i32 %1, 8, !dbg !10630
  br i1 %2, label %3, label %4, !dbg !10631

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10632
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !10634
  br label %4, !dbg !10635

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !10636
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10637
  %6 = and i32 %5, -196609, !dbg !10637
  %7 = or i32 %6, 65536, !dbg !10637
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10637
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10638
  %9 = and i32 %8, -251658241, !dbg !10638
  %10 = or i32 %9, 117440512, !dbg !10638
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10638
  tail call void @config_pll_sysclock() #27, !dbg !10639
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10640
  br label %11, !dbg !10641

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10642
  %13 = icmp eq i32 %12, 1, !dbg !10643
  br i1 %13, label %14, label %11, !dbg !10641, !llvm.loop !10644

14:                                               ; preds = %11
  ret void, !dbg !10646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10647 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10649, metadata !DIExpression()), !dbg !10650
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10651
  %2 = and i32 %1, -241, !dbg !10651
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10651
  ret void, !dbg !10652
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10655, metadata !DIExpression()), !dbg !10656
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10657
  %3 = and i32 %2, -4, !dbg !10657
  %4 = or i32 %3, %0, !dbg !10657
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10657
  ret void, !dbg !10658
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10659 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10660
  %2 = and i32 %1, 12, !dbg !10660
  ret i32 %2, !dbg !10661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10662 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10664, metadata !DIExpression()), !dbg !10665
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10666
  %2 = and i32 %1, -7169, !dbg !10666
  %3 = or i32 %2, 4096, !dbg !10666
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10666
  ret void, !dbg !10667
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10668 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10670, metadata !DIExpression()), !dbg !10671
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10672
  %2 = and i32 %1, -57345, !dbg !10672
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10672
  ret void, !dbg !10673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10674 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10675
  %2 = icmp eq i32 %1, 1, !dbg !10677
  br i1 %2, label %7, label %3, !dbg !10678

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10679
  br label %4, !dbg !10681

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10682
  %6 = icmp eq i32 %5, 1, !dbg !10683
  br i1 %6, label %7, label %4, !dbg !10681, !llvm.loop !10684

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10686
  br label %8, !dbg !10687

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10688
  %10 = icmp eq i32 %9, 0, !dbg !10689
  br i1 %10, label %11, label %8, !dbg !10687, !llvm.loop !10690

11:                                               ; preds = %8
  ret void, !dbg !10692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10693 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10694
  %2 = and i32 %1, -16777217, !dbg !10694
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10694
  ret void, !dbg !10695
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10696 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10697
  %2 = or i32 %1, 16777216, !dbg !10697
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10697
  ret void, !dbg !10698
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10699 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10700
  %2 = lshr i32 %1, 25, !dbg !10701
  %3 = and i32 %2, 1, !dbg !10701
  ret i32 %3, !dbg !10702
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10703 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10704
  %2 = lshr i32 %1, 1, !dbg !10705
  %3 = and i32 %2, 1, !dbg !10705
  ret i32 %3, !dbg !10706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10707 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10708
  %2 = or i32 %1, 1, !dbg !10708
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10708
  ret void, !dbg !10709
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !10710 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10711
  %2 = and i32 %1, -262145, !dbg !10711
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10711
  ret void, !dbg !10712
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !10713 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10714
  %2 = or i32 %1, 65536, !dbg !10714
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10714
  ret void, !dbg !10715
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10716 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10717
  %2 = lshr i32 %1, 17, !dbg !10718
  %3 = and i32 %2, 1, !dbg !10718
  ret i32 %3, !dbg !10719
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !10720 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10721
  %2 = or i32 %1, 1, !dbg !10721
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10721
  ret void, !dbg !10722
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10723 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10724
  %2 = lshr i32 %1, 1, !dbg !10725
  %3 = and i32 %2, 1, !dbg !10725
  ret i32 %3, !dbg !10726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !10727 {
  ret i32 16000000, !dbg !10729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10733 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10734
  ret void, !dbg !10735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10736 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10740, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i32 16, metadata !10741, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i32 336, metadata !10742, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i32 65536, metadata !10743, metadata !DIExpression()), !dbg !10744
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10745
  %2 = and i32 %1, -4227072, !dbg !10745
  %3 = or i32 %2, 4215824, !dbg !10745
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10745
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10746
  %5 = and i32 %4, -196609, !dbg !10746
  %6 = or i32 %5, 65536, !dbg !10746
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10746
  ret void, !dbg !10747
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10748 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10749
  ret void, !dbg !10750
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10751 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10754, metadata !DIExpression()), !dbg !10756
  %2 = bitcast i32* %1 to i8*, !dbg !10757
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10757
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10755, metadata !DIExpression()), !dbg !10758
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10759
  %4 = or i32 %3, 268435456, !dbg !10759
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10759
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10760
  %6 = and i32 %5, 268435456, !dbg !10760
  store volatile i32 %6, i32* %1, align 4, !dbg !10761
  %7 = load volatile i32, i32* %1, align 4, !dbg !10762
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10763
  ret void, !dbg !10763
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10764 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10766, metadata !DIExpression()), !dbg !10767
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10768
  br i1 %2, label %3, label %4, !dbg !10770

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10771
  br label %4, !dbg !10772

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10767
  ret i32 %5, !dbg !10773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10774 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10778, metadata !DIExpression()), !dbg !10779
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10780, !srcloc !10782
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10783
  ret i1 %1, !dbg !10784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10785 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10786
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10787
  ret void, !dbg !10788
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10791, metadata !DIExpression()), !dbg !10792
  %2 = icmp eq i32 %0, 10, !dbg !10793
  br i1 %2, label %3, label %4, !dbg !10795

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10796
  br label %4, !dbg !10798

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10799
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10800
  ret i32 %0, !dbg !10801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10805, metadata !DIExpression()), !dbg !10807
  call void @llvm.dbg.value(metadata i8 %0, metadata !10806, metadata !DIExpression()), !dbg !10807
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10808, !srcloc !10810
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10811
  ret void, !dbg !10812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10813 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10815, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.value(metadata i8 %0, metadata !10816, metadata !DIExpression()), !dbg !10818
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10819
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10817, metadata !DIExpression()), !dbg !10818
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10820
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10820
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #27, !dbg !10821
  ret void, !dbg !10822
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10823 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !10825, metadata !DIExpression()), !dbg !10826
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #27, !dbg !10827
  ret i1 %1, !dbg !10828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !10829 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10876, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10877, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10878, metadata !DIExpression()), !dbg !10879
  ret void, !dbg !10880
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define internal i32 @tc_shim_init(%struct.device* nocapture noundef readnone %0) #20 !dbg !10881 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10883, metadata !DIExpression()), !dbg !10885
  call void @llvm.dbg.value(metadata i32 0, metadata !10884, metadata !DIExpression()), !dbg !10885
  call void @llvm.dbg.value(metadata i32 0, metadata !10884, metadata !DIExpression()), !dbg !10885
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 0, i32 0), align 4, !dbg !10886
  call void @llvm.dbg.value(metadata i32 1, metadata !10884, metadata !DIExpression()), !dbg !10885
  call void @llvm.dbg.value(metadata i32 1, metadata !10884, metadata !DIExpression()), !dbg !10885
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 1, i32 0), align 4, !dbg !10886
  call void @llvm.dbg.value(metadata i32 2, metadata !10884, metadata !DIExpression()), !dbg !10885
  ret i32 0, !dbg !10890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @tc_query_caps(%struct.device* nocapture noundef readnone %0) #3 !dbg !10891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10893, metadata !DIExpression()), !dbg !10894
  ret i32 50, !dbg !10895
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_setup(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !10896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10898, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !10899, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.value(metadata i32 %2, metadata !10900, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.value(metadata i32 %3, metadata !10901, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.value(metadata i32 %4, metadata !10902, metadata !DIExpression()), !dbg !10906
  %6 = icmp eq i32 %2, 1, !dbg !10907
  br i1 %6, label %8, label %7, !dbg !10909

7:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 69) #27, !dbg !10910
  br label %70, !dbg !10916

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 7, !dbg !10917
  %10 = load i16, i16* %9, align 2, !dbg !10917
  %11 = and i16 %10, 32, !dbg !10919
  %12 = icmp eq i16 %11, 0, !dbg !10919
  br i1 %12, label %13, label %14, !dbg !10920

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.154, i32 0, i32 0), i32 noundef 69) #27, !dbg !10921
  br label %70, !dbg !10927

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 6, !dbg !10928
  %16 = load i16, i16* %15, align 4, !dbg !10928
  %17 = icmp eq i16 %16, 16, !dbg !10930
  br i1 %17, label %19, label %18, !dbg !10931

18:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.155, i32 0, i32 0), i32 noundef 69) #27, !dbg !10932
  br label %70, !dbg !10938

19:                                               ; preds = %14
  %20 = icmp eq i32 %4, 1, !dbg !10939
  br i1 %20, label %21, label %37, !dbg !10941

21:                                               ; preds = %19
  switch i32 %3, label %36 [
    i32 2, label %22
    i32 3, label %25
    i32 4, label %33
  ], !dbg !10942

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10944
  %24 = bitcast %union.anon.3* %23 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10944
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_encrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %24, align 4, !dbg !10946
  br label %53, !dbg !10947

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10948
  %27 = load i32, i32* %26, align 4, !dbg !10948
  %28 = icmp eq i32 %27, 32, !dbg !10950
  br i1 %28, label %30, label %29, !dbg !10951

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10952
  br label %70, !dbg !10958

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10959
  %32 = bitcast %union.anon.3* %31 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10959
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %32, align 4, !dbg !10960
  br label %53, !dbg !10961

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10962
  %35 = bitcast %union.anon.3* %34 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !10962
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_encrypt_mac, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %35, align 4, !dbg !10963
  br label %53, !dbg !10964

36:                                               ; preds = %21
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !10965
  br label %70, !dbg !10970

37:                                               ; preds = %19
  switch i32 %3, label %52 [
    i32 2, label %38
    i32 3, label %41
    i32 4, label %49
  ], !dbg !10971

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10973
  %40 = bitcast %union.anon.3* %39 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10973
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_decrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %40, align 4, !dbg !10975
  br label %53, !dbg !10976

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10977
  %43 = load i32, i32* %42, align 4, !dbg !10977
  %44 = icmp eq i32 %43, 32, !dbg !10979
  br i1 %44, label %46, label %45, !dbg !10980

45:                                               ; preds = %41
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10981
  br label %70, !dbg !10987

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10988
  %48 = bitcast %union.anon.3* %47 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10988
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %48, align 4, !dbg !10989
  br label %53, !dbg !10990

49:                                               ; preds = %37
  %50 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10991
  %51 = bitcast %union.anon.3* %50 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !10991
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_decrypt_auth, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %51, align 4, !dbg !10992
  br label %53, !dbg !10993

52:                                               ; preds = %37
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !10994
  br label %70, !dbg !10999

53:                                               ; preds = %38, %46, %49, %22, %30, %33
  %54 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !11000
  store i32 %3, i32* %54, align 4, !dbg !11001
  %55 = tail call fastcc i32 @get_unused_session() #26, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %55, metadata !10905, metadata !DIExpression()), !dbg !10906
  %56 = icmp eq i32 %55, 2, !dbg !11003
  br i1 %56, label %57, label %58, !dbg !11005

57:                                               ; preds = %53
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.158, i32 0, i32 0), i32 noundef 69) #27, !dbg !11006
  br label %70, !dbg !11012

58:                                               ; preds = %53
  %59 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, !dbg !11013
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %59, metadata !10903, metadata !DIExpression()), !dbg !10906
  %60 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, i32 1, !dbg !11014
  %61 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 1, i32 0, !dbg !11016
  %62 = load i8*, i8** %61, align 4, !dbg !11016
  %63 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef nonnull %60, i8* noundef %62) #27, !dbg !11017
  %64 = icmp eq i32 %63, 0, !dbg !11018
  br i1 %64, label %65, label %67, !dbg !11019

65:                                               ; preds = %58
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.159, i32 0, i32 0), i32 noundef 69) #27, !dbg !11020
  %66 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %59, i32 0, i32 0, !dbg !11026
  store i32 0, i32* %66, align 4, !dbg !11027
  br label %70, !dbg !11028

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11029
  %69 = bitcast i8** %68 to %struct.tc_shim_drv_state**, !dbg !11030
  store %struct.tc_shim_drv_state* %59, %struct.tc_shim_drv_state** %69, align 4, !dbg !11030
  br label %70, !dbg !11031

70:                                               ; preds = %67, %65, %57, %52, %45, %36, %29, %18, %13, %7
  %71 = phi i32 [ -22, %7 ], [ -22, %18 ], [ -22, %36 ], [ -28, %57 ], [ -5, %65 ], [ 0, %67 ], [ -22, %29 ], [ -22, %52 ], [ -22, %45 ], [ -22, %13 ], !dbg !10906
  ret i32 %71, !dbg !11032
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_free(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef readonly %1) #1 !dbg !11033 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11035, metadata !DIExpression()), !dbg !11038
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !11036, metadata !DIExpression()), !dbg !11038
  %3 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11039
  %4 = load i8*, i8** %3, align 4, !dbg !11039
  call void @llvm.dbg.value(metadata i8* %4, metadata !11037, metadata !DIExpression()), !dbg !11038
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 180) #27, !dbg !11040
  %6 = bitcast i8* %4 to i32*, !dbg !11041
  store i32 0, i32* %6, align 4, !dbg !11042
  ret i32 0, !dbg !11043
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_encrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11044 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11046, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11047, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i8* %2, metadata !11048, metadata !DIExpression()), !dbg !11050
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11051
  %5 = bitcast i8** %4 to %struct.tc_shim_drv_state**, !dbg !11051
  %6 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %5, align 4, !dbg !11051
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %6, metadata !11049, metadata !DIExpression()), !dbg !11050
  %7 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11052
  %8 = load i8*, i8** %7, align 4, !dbg !11052
  %9 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11054
  %10 = load i32, i32* %9, align 4, !dbg !11054
  %11 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11055
  %12 = load i8*, i8** %11, align 4, !dbg !11055
  %13 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11056
  %14 = load i32, i32* %13, align 4, !dbg !11056
  %15 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %6, i32 0, i32 1, !dbg !11057
  %16 = tail call i32 @tc_cbc_mode_encrypt(i8* noundef %8, i32 noundef %10, i8* noundef %12, i32 noundef %14, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %15) #27, !dbg !11058
  %17 = icmp eq i32 %16, 0, !dbg !11059
  br i1 %17, label %18, label %19, !dbg !11060

18:                                               ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.168, i32 0, i32 0), i32 noundef 69) #27, !dbg !11061
  br label %22, !dbg !11067

19:                                               ; preds = %3
  %20 = load i32, i32* %13, align 4, !dbg !11068
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11069
  store i32 %20, i32* %21, align 4, !dbg !11070
  br label %22, !dbg !11071

22:                                               ; preds = %19, %18
  %23 = phi i32 [ -5, %18 ], [ 0, %19 ], !dbg !11050
  ret i32 %23, !dbg !11072
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ctr_op(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11073 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11075, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11076, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i8* %2, metadata !11077, metadata !DIExpression()), !dbg !11081
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11082
  %6 = bitcast i8** %5 to %struct.tc_shim_drv_state**, !dbg !11082
  %7 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %6, align 4, !dbg !11082
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %7, metadata !11078, metadata !DIExpression()), !dbg !11081
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !11083
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11083
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !11079, metadata !DIExpression()), !dbg !11084
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %8, i8 0, i32 16, i1 false), !dbg !11084
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 6, !dbg !11085
  %10 = load i16, i16* %9, align 4, !dbg !11085
  %11 = zext i16 %10 to i32, !dbg !11086
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, i32 0, i32 0, !dbg !11087
  %13 = load i32, i32* %12, align 4, !dbg !11087
  %14 = lshr i32 %13, 3, !dbg !11088
  %15 = sub nsw i32 %11, %14, !dbg !11089
  call void @llvm.dbg.value(metadata i32 %15, metadata !11080, metadata !DIExpression()), !dbg !11081
  %16 = call i8* @memcpy(i8* noundef nonnull %8, i8* noundef %2, i32 noundef %15) #27, !dbg !11090
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11091
  %18 = load i8*, i8** %17, align 4, !dbg !11091
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11093
  %20 = load i32, i32* %19, align 4, !dbg !11093
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11094
  %22 = load i8*, i8** %21, align 4, !dbg !11094
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11095
  %24 = load i32, i32* %23, align 4, !dbg !11095
  %25 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %7, i32 0, i32 1, !dbg !11096
  %26 = call i32 @tc_ctr_mode(i8* noundef %18, i32 noundef %20, i8* noundef %22, i32 noundef %24, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef nonnull %25) #27, !dbg !11097
  %27 = icmp eq i32 %26, 0, !dbg !11098
  br i1 %27, label %28, label %29, !dbg !11099

28:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.167, i32 0, i32 0), i32 noundef 69) #27, !dbg !11100
  br label %32, !dbg !11106

29:                                               ; preds = %3
  %30 = load i32, i32* %23, align 4, !dbg !11107
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11108
  store i32 %30, i32* %31, align 4, !dbg !11109
  br label %32, !dbg !11110

32:                                               ; preds = %29, %28
  %33 = phi i32 [ -5, %28 ], [ 0, %29 ], !dbg !11081
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11111
  ret i32 %33, !dbg !11111
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_encrypt_mac(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11112 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11114, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11115, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.value(metadata i8* %2, metadata !11116, metadata !DIExpression()), !dbg !11129
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11130
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11130
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11117, metadata !DIExpression()), !dbg !11131
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11132
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11132
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11132
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11125, metadata !DIExpression()), !dbg !11129
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11133
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11134
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11126, metadata !DIExpression()), !dbg !11129
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11135
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11135
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11128, metadata !DIExpression()), !dbg !11129
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11136
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11138
  %15 = load i16, i16* %14, align 2, !dbg !11138
  %16 = zext i16 %15 to i32, !dbg !11139
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11140
  %18 = load i16, i16* %17, align 2, !dbg !11140
  %19 = zext i16 %18 to i32, !dbg !11141
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11142
  %21 = icmp eq i32 %20, 0, !dbg !11143
  br i1 %21, label %22, label %23, !dbg !11144

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.165, i32 0, i32 0), i32 noundef 69) #27, !dbg !11145
  br label %56, !dbg !11151

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11152
  %25 = load i8*, i8** %24, align 4, !dbg !11152
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11154
  %27 = load i32, i32* %26, align 4, !dbg !11154
  %28 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11155
  %29 = load i8*, i8** %28, align 4, !dbg !11155
  %30 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11156
  %31 = load i32, i32* %30, align 4, !dbg !11156
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11157
  %33 = load i8*, i8** %32, align 4, !dbg !11157
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11158
  %35 = load i32, i32* %34, align 4, !dbg !11158
  %36 = call i32 @tc_ccm_generation_encryption(i8* noundef %25, i32 noundef %27, i8* noundef %29, i32 noundef %31, i8* noundef %33, i32 noundef %35, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11159
  %37 = icmp eq i32 %36, 0, !dbg !11160
  br i1 %37, label %38, label %39, !dbg !11161

38:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.166, i32 0, i32 0), i32 noundef 69) #27, !dbg !11162
  br label %56, !dbg !11168

39:                                               ; preds = %23
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11169
  %41 = load i8*, i8** %40, align 4, !dbg !11169
  %42 = icmp eq i8* %41, null, !dbg !11171
  br i1 %42, label %50, label %43, !dbg !11172

43:                                               ; preds = %39
  %44 = load i8*, i8** %24, align 4, !dbg !11173
  %45 = load i32, i32* %34, align 4, !dbg !11175
  %46 = getelementptr inbounds i8, i8* %44, i32 %45, !dbg !11176
  %47 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11177
  %48 = load i32, i32* %47, align 4, !dbg !11177
  %49 = call i8* @memcpy(i8* noundef nonnull %41, i8* noundef %46, i32 noundef %48) #27, !dbg !11178
  br label %50, !dbg !11179

50:                                               ; preds = %43, %39
  %51 = load i32, i32* %34, align 4, !dbg !11180
  %52 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11181
  %53 = load i32, i32* %52, align 4, !dbg !11181
  %54 = add i32 %53, %51, !dbg !11182
  %55 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11183
  store i32 %54, i32* %55, align 4, !dbg !11184
  br label %56, !dbg !11185

56:                                               ; preds = %50, %38, %22
  %57 = phi i32 [ -5, %22 ], [ -5, %38 ], [ 0, %50 ], !dbg !11129
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11186
  ret i32 %57, !dbg !11186
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_decrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef readnone %2) #1 !dbg !11187 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11189, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11190, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i8* %2, metadata !11191, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* undef, metadata !11192, metadata !DIExpression()), !dbg !11193
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11194
  %5 = load i8*, i8** %4, align 4, !dbg !11194
  %6 = icmp eq i8* %5, %2, !dbg !11196
  br i1 %6, label %8, label %7, !dbg !11197

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.163, i32 0, i32 0), i32 noundef 69) #27, !dbg !11198
  br label %27, !dbg !11204

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11205
  %10 = bitcast i8** %9 to %struct.tc_shim_drv_state**, !dbg !11205
  %11 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %10, align 4, !dbg !11205
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %11, metadata !11192, metadata !DIExpression()), !dbg !11193
  %12 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11206
  %13 = load i8*, i8** %12, align 4, !dbg !11206
  %14 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11208
  %15 = load i32, i32* %14, align 4, !dbg !11208
  %16 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !11209
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11210
  %18 = load i32, i32* %17, align 4, !dbg !11210
  %19 = add nsw i32 %18, -16, !dbg !11211
  %20 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %11, i32 0, i32 1, !dbg !11212
  %21 = tail call i32 @tc_cbc_mode_decrypt(i8* noundef %13, i32 noundef %15, i8* noundef nonnull %16, i32 noundef %19, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %20) #27, !dbg !11213
  %22 = icmp eq i32 %21, 0, !dbg !11214
  br i1 %22, label %23, label %24, !dbg !11215

23:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.164, i32 0, i32 0), i32 noundef 69) #27, !dbg !11216
  br label %27, !dbg !11222

24:                                               ; preds = %8
  %25 = load i32, i32* %17, align 4, !dbg !11223
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11224
  store i32 %25, i32* %26, align 4, !dbg !11225
  br label %27, !dbg !11226

27:                                               ; preds = %24, %23, %7
  %28 = phi i32 [ -5, %7 ], [ -5, %23 ], [ 0, %24 ], !dbg !11193
  ret i32 %28, !dbg !11227
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_decrypt_auth(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11228 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11230, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11231, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata i8* %2, metadata !11232, metadata !DIExpression()), !dbg !11237
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11238
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11238
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11233, metadata !DIExpression()), !dbg !11239
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11240
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11240
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11240
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11234, metadata !DIExpression()), !dbg !11237
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11241
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11242
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11235, metadata !DIExpression()), !dbg !11237
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11243
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11243
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11236, metadata !DIExpression()), !dbg !11237
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11244
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11246
  %15 = load i16, i16* %14, align 2, !dbg !11246
  %16 = zext i16 %15 to i32, !dbg !11247
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11248
  %18 = load i16, i16* %17, align 2, !dbg !11248
  %19 = zext i16 %18 to i32, !dbg !11249
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11250
  %21 = icmp eq i32 %20, 0, !dbg !11251
  br i1 %21, label %22, label %23, !dbg !11252

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15.160, i32 0, i32 0), i32 noundef 69) #27, !dbg !11253
  br label %54, !dbg !11259

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11260
  %25 = load i8*, i8** %24, align 4, !dbg !11260
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11262
  %27 = load i8*, i8** %26, align 4, !dbg !11262
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11263
  %29 = load i32, i32* %28, align 4, !dbg !11263
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !11264
  %31 = icmp eq i8* %25, %30, !dbg !11265
  br i1 %31, label %33, label %32, !dbg !11266

32:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16.161, i32 0, i32 0), i32 noundef 69) #27, !dbg !11267
  br label %54, !dbg !11273

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11274
  %35 = load i8*, i8** %34, align 4, !dbg !11274
  %36 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11276
  %37 = load i32, i32* %36, align 4, !dbg !11276
  %38 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11277
  %39 = load i8*, i8** %38, align 4, !dbg !11277
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11278
  %41 = load i32, i32* %40, align 4, !dbg !11278
  %42 = load i16, i16* %17, align 2, !dbg !11279
  %43 = zext i16 %42 to i32, !dbg !11280
  %44 = add nsw i32 %29, %43, !dbg !11281
  %45 = call i32 @tc_ccm_decryption_verification(i8* noundef %35, i32 noundef %37, i8* noundef %39, i32 noundef %41, i8* noundef %27, i32 noundef %44, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11282
  %46 = icmp eq i32 %45, 0, !dbg !11283
  br i1 %46, label %47, label %48, !dbg !11284

47:                                               ; preds = %33
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17.162, i32 0, i32 0), i32 noundef 69) #27, !dbg !11285
  br label %54, !dbg !11291

48:                                               ; preds = %33
  %49 = load i32, i32* %28, align 4, !dbg !11292
  %50 = load i16, i16* %17, align 2, !dbg !11293
  %51 = zext i16 %50 to i32, !dbg !11294
  %52 = add nsw i32 %49, %51, !dbg !11295
  %53 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11296
  store i32 %52, i32* %53, align 4, !dbg !11297
  br label %54, !dbg !11298

54:                                               ; preds = %48, %47, %32, %22
  %55 = phi i32 [ -5, %22 ], [ -5, %32 ], [ -5, %47 ], [ 0, %48 ], !dbg !11237
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11299
  ret i32 %55, !dbg !11299
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @get_unused_session() unnamed_addr #14 !dbg !11300 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11302, metadata !DIExpression()), !dbg !11303
  br label %1, !dbg !11304

1:                                                ; preds = %0, %8
  %2 = phi i1 [ true, %0 ], [ false, %8 ]
  %3 = phi i32 [ 0, %0 ], [ 1, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11302, metadata !DIExpression()), !dbg !11303
  %4 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %3, i32 0, !dbg !11306
  %5 = load i32, i32* %4, align 4, !dbg !11306
  %6 = icmp eq i32 %5, 0, !dbg !11310
  br i1 %6, label %7, label %8, !dbg !11311

7:                                                ; preds = %1
  store i32 1, i32* %4, align 4, !dbg !11312
  br label %9, !dbg !11314

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11302, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11303
  br i1 %2, label %1, label %9, !dbg !11304, !llvm.loop !11315

9:                                                ; preds = %8, %7
  %10 = phi i32 [ %3, %7 ], [ 2, %8 ]
  ret i32 %10, !dbg !11317
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11318 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11320, metadata !DIExpression()), !dbg !11325
  call void @llvm.dbg.value(metadata i8 %1, metadata !11321, metadata !DIExpression()), !dbg !11325
  call void @llvm.dbg.value(metadata i32 %2, metadata !11322, metadata !DIExpression()), !dbg !11325
  %5 = bitcast i32* %4 to i8*, !dbg !11326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11326
  call void @llvm.dbg.value(metadata i32* %4, metadata !11324, metadata !DIExpression(DW_OP_deref)), !dbg !11325
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !11327
  call void @llvm.dbg.value(metadata i32 %6, metadata !11323, metadata !DIExpression()), !dbg !11325
  %7 = icmp eq i32 %6, 0, !dbg !11328
  br i1 %7, label %8, label %31, !dbg !11330

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !11323, metadata !DIExpression()), !dbg !11325
  %9 = and i32 %2, 131072, !dbg !11331
  %10 = icmp eq i32 %9, 0, !dbg !11333
  br i1 %10, label %28, label %11, !dbg !11334

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !11335
  %13 = icmp eq i32 %12, 0, !dbg !11338
  br i1 %13, label %18, label %14, !dbg !11339

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !11340
  %16 = shl nuw i32 1, %15, !dbg !11340
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !11342
  br label %25, !dbg !11343

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !11344
  %20 = icmp eq i32 %19, 0, !dbg !11346
  %21 = zext i8 %1 to i32, !dbg !11325
  br i1 %20, label %25, label %22, !dbg !11347

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !11348
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !11350
  br label %25, !dbg !11351

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !11352
  %27 = load i32, i32* %4, align 4, !dbg !11353
  call void @llvm.dbg.value(metadata i32 %30, metadata !11324, metadata !DIExpression()), !dbg !11325
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !11354
  br label %31, !dbg !11355

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !11352
  %30 = load i32, i32* %4, align 4, !dbg !11353
  call void @llvm.dbg.value(metadata i32 %30, metadata !11324, metadata !DIExpression()), !dbg !11325
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !11354
  call void @llvm.dbg.value(metadata i32 0, metadata !11323, metadata !DIExpression()), !dbg !11325
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11356
  ret i32 %6, !dbg !11356
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !11357 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11361, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i32* %1, metadata !11362, metadata !DIExpression()), !dbg !11366
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11367
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11367
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11367
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11363, metadata !DIExpression()), !dbg !11366
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11368
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11368
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11368
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11365, metadata !DIExpression()), !dbg !11366
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !11369
  store i32 %9, i32* %1, align 4, !dbg !11370
  ret i32 0, !dbg !11371
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !11372 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11374, metadata !DIExpression()), !dbg !11380
  call void @llvm.dbg.value(metadata i32 %1, metadata !11375, metadata !DIExpression()), !dbg !11380
  call void @llvm.dbg.value(metadata i32 %2, metadata !11376, metadata !DIExpression()), !dbg !11380
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11381
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11381
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11381
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11377, metadata !DIExpression()), !dbg !11380
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11382
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11382
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11382
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11378, metadata !DIExpression()), !dbg !11380
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !11383
  call void @llvm.dbg.value(metadata i32 %10, metadata !11379, metadata !DIExpression()), !dbg !11380
  %11 = xor i32 %1, -1, !dbg !11384
  %12 = and i32 %10, %11, !dbg !11385
  %13 = and i32 %2, %1, !dbg !11386
  %14 = or i32 %12, %13, !dbg !11387
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !11388
  ret i32 0, !dbg !11389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11390 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11392, metadata !DIExpression()), !dbg !11396
  call void @llvm.dbg.value(metadata i32 %1, metadata !11393, metadata !DIExpression()), !dbg !11396
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11397
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11397
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11397
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11394, metadata !DIExpression()), !dbg !11396
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11398
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11398
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11398
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11395, metadata !DIExpression()), !dbg !11396
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11399
  store volatile i32 %1, i32* %9, align 4, !dbg !11399
  ret i32 0, !dbg !11400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11403, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i32 %1, metadata !11404, metadata !DIExpression()), !dbg !11407
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11408
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11408
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11408
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11405, metadata !DIExpression()), !dbg !11407
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11409
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11409
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11409
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11406, metadata !DIExpression()), !dbg !11407
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !11410
  ret i32 0, !dbg !11411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11414, metadata !DIExpression()), !dbg !11418
  call void @llvm.dbg.value(metadata i32 %1, metadata !11415, metadata !DIExpression()), !dbg !11418
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11419
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11419
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11419
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11416, metadata !DIExpression()), !dbg !11418
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11420
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11420
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11420
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11417, metadata !DIExpression()), !dbg !11418
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11421
  %10 = load volatile i32, i32* %9, align 4, !dbg !11421
  %11 = xor i32 %10, %1, !dbg !11421
  store volatile i32 %11, i32* %9, align 4, !dbg !11421
  ret i32 0, !dbg !11422
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11423 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11425, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.value(metadata i8 %1, metadata !11426, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.value(metadata i32 %2, metadata !11427, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.value(metadata i32 %3, metadata !11428, metadata !DIExpression()), !dbg !11435
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11436
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11436
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11436
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11429, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.value(metadata i8* undef, metadata !11430, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.value(metadata i32 0, metadata !11432, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.value(metadata i32 0, metadata !11433, metadata !DIExpression()), !dbg !11435
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11437

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11438
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !11442
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11443
  %12 = load i32, i32* %11, align 4, !dbg !11443
  %13 = icmp eq i32 %10, %12, !dbg !11444
  br i1 %13, label %14, label %29, !dbg !11445

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !11446
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !11448
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !11449
  br label %29, !dbg !11450

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11451
  %17 = load i8*, i8** %16, align 4, !dbg !11451
  call void @llvm.dbg.value(metadata i8* %17, metadata !11430, metadata !DIExpression()), !dbg !11435
  %18 = zext i8 %1 to i32, !dbg !11452
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !11454
  %20 = icmp eq i32 %19, 0, !dbg !11455
  br i1 %20, label %21, label %29, !dbg !11456

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11457
  %23 = load i32, i32* %22, align 4, !dbg !11457
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !11458
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11459

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11432, metadata !DIExpression()), !dbg !11435
  br label %27, !dbg !11460

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11432, metadata !DIExpression()), !dbg !11435
  br label %27, !dbg !11462

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11432, metadata !DIExpression()), !dbg !11435
  br label %27, !dbg !11463

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11435
  call void @llvm.dbg.value(metadata i32 %28, metadata !11432, metadata !DIExpression()), !dbg !11435
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !11464
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !11465
  br label %29, !dbg !11465

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11435
  call void @llvm.dbg.value(metadata i32 %30, metadata !11433, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.label(metadata !11434), !dbg !11466
  ret i32 %30, !dbg !11467
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !11468 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11470, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11471, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata i1 %2, metadata !11472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11474
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11475
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11475
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11475
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11473, metadata !DIExpression()), !dbg !11474
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11476
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !11477
  ret i32 %8, !dbg !11478
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !11479 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11485, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11486, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.value(metadata i1 %2, metadata !11487, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11488
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !11489
  br i1 %4, label %10, label %5, !dbg !11491

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11492
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !11495
  %8 = or i1 %7, %2, !dbg !11496
  %9 = select i1 %8, i32 0, i32 -22, !dbg !11496
  br i1 %2, label %11, label %13, !dbg !11496

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !11497

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11498
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !11501
  br label %13, !dbg !11502

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !11488
  ret i32 %14, !dbg !11503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11504 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11508, metadata !DIExpression()), !dbg !11509
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11510
  %3 = icmp eq %struct._snode* %2, null, !dbg !11510
  ret i1 %3, !dbg !11510
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !11511 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11515, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11516, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11517, metadata !DIExpression()), !dbg !11519
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11520
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11518, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11517, metadata !DIExpression()), !dbg !11519
  %4 = icmp eq %struct._snode* %3, null, !dbg !11522
  br i1 %4, label %15, label %5, !dbg !11520

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11518, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11517, metadata !DIExpression()), !dbg !11519
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11524
  br i1 %6, label %9, label %11, !dbg !11527

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11518, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11517, metadata !DIExpression()), !dbg !11519
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11524
  br i1 %8, label %9, label %11, !dbg !11527, !llvm.loop !11528

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !11529
  br label %15, !dbg !11529

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11518, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11517, metadata !DIExpression()), !dbg !11519
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !11522
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11518, metadata !DIExpression()), !dbg !11519
  %14 = icmp eq %struct._snode* %13, null, !dbg !11522
  br i1 %14, label %15, label %7, !dbg !11520, !llvm.loop !11528

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !11532 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11536, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11537, metadata !DIExpression()), !dbg !11538
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11539
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !11539
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !11539
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11540
  %5 = icmp eq %struct._snode* %4, null, !dbg !11540
  br i1 %5, label %6, label %8, !dbg !11539

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11542
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !11542
  br label %8, !dbg !11542

8:                                                ; preds = %6, %2
  ret void, !dbg !11539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11544 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11548, metadata !DIExpression()), !dbg !11549
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11550
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11550
  ret %struct._snode* %3, !dbg !11551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11552 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11556, metadata !DIExpression()), !dbg !11558
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11557, metadata !DIExpression()), !dbg !11558
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11559
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11560
  ret void, !dbg !11561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11562 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11564, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11565, metadata !DIExpression()), !dbg !11566
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11567
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11568
  ret void, !dbg !11569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11570 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11572, metadata !DIExpression()), !dbg !11573
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11574
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11574
  ret %struct._snode* %3, !dbg !11575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11576 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11578, metadata !DIExpression()), !dbg !11580
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11579, metadata !DIExpression()), !dbg !11580
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11581
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11582
  ret void, !dbg !11583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !11584 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11588, metadata !DIExpression()), !dbg !11591
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11589, metadata !DIExpression()), !dbg !11591
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11590, metadata !DIExpression()), !dbg !11591
  %4 = icmp eq %struct._snode* %1, null, !dbg !11592
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !11594
  br i1 %4, label %6, label %11, !dbg !11595

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !11596
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11598
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11598
  br i1 %8, label %9, label %15, !dbg !11596

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11600
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !11600
  br label %15, !dbg !11600

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !11602
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11604
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11604
  br i1 %13, label %14, label %15, !dbg !11602

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !11606
  br label %15, !dbg !11606

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !11595
  ret void, !dbg !11595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !11608 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11612, metadata !DIExpression()), !dbg !11613
  %2 = icmp eq %struct._snode* %0, null, !dbg !11614
  br i1 %2, label %5, label %3, !dbg !11614

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !11614
  br label %5, !dbg !11614

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11614
  ret %struct._snode* %6, !dbg !11614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11615 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11617, metadata !DIExpression()), !dbg !11618
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !11619
  ret %struct._snode* %2, !dbg !11619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11620 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11622, metadata !DIExpression()), !dbg !11623
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11624
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11624
  ret %struct._snode* %3, !dbg !11625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11628, metadata !DIExpression()), !dbg !11631
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !11632, !range !11633
  call void @llvm.dbg.value(metadata i32 %2, metadata !11629, metadata !DIExpression()), !dbg !11631
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !11634
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()), !dbg !11631
  ret i32 %3, !dbg !11635
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11638, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata i8* %1, metadata !11639, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata i8* %1, metadata !11640, metadata !DIExpression()), !dbg !11641
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11642
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11642
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11643
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11643
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11643
  %8 = shl nuw i32 1, %0, !dbg !11644
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !11645
  ret void, !dbg !11646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11647 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11651, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata i32 %1, metadata !11652, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11653, metadata !DIExpression()), !dbg !11657
  %4 = bitcast i64* %3 to i8*, !dbg !11658
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11658
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !11655, metadata !DIExpression()), !dbg !11657
  store i64 70368744177732, i64* %3, align 8, !dbg !11659
  call void @llvm.dbg.value(metadata i64* %3, metadata !11655, metadata !DIExpression(DW_OP_deref)), !dbg !11657
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !11660
  call void @llvm.dbg.value(metadata i32 %5, metadata !11656, metadata !DIExpression()), !dbg !11657
  %6 = icmp eq i32 %5, 0, !dbg !11661
  br i1 %6, label %7, label %8, !dbg !11663

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !11664
  br label %8, !dbg !11665

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11666
  ret void, !dbg !11666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11667 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11669, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.value(metadata i8* %0, metadata !11670, metadata !DIExpression()), !dbg !11672
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11673
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11671, metadata !DIExpression()), !dbg !11672
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11674
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11674
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !11675
  ret i32 %5, !dbg !11676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11679, metadata !DIExpression()), !dbg !11682
  call void @llvm.dbg.value(metadata i32 %1, metadata !11680, metadata !DIExpression()), !dbg !11682
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %3, metadata !11681, metadata !DIExpression()), !dbg !11682
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !11684
  ret void, !dbg !11685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !11686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11690, metadata !DIExpression()), !dbg !11691
  %2 = sdiv i32 %0, 4, !dbg !11692
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11693
  %6 = add nsw i32 %5, 16, !dbg !11694
  %7 = shl i32 15, %6, !dbg !11695
  %8 = or i32 %7, %2, !dbg !11696
  ret i32 %8, !dbg !11697
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11702, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.value(metadata i32 %1, metadata !11703, metadata !DIExpression()), !dbg !11704
  %3 = and i32 %1, 255, !dbg !11705
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !11705
  %5 = load volatile i32, i32* %4, align 4, !dbg !11705
  %6 = lshr i32 %1, 16, !dbg !11705
  %7 = xor i32 %6, -1, !dbg !11705
  %8 = and i32 %5, %7, !dbg !11705
  call void @llvm.dbg.value(metadata i32 %6, metadata !11706, metadata !DIExpression()) #25, !dbg !11710
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11712, !srcloc !11713
  call void @llvm.dbg.value(metadata i32 %9, metadata !11709, metadata !DIExpression()) #25, !dbg !11710
  call void @llvm.dbg.value(metadata i32 %9, metadata !11714, metadata !DIExpression()) #25, !dbg !11719
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11721, !range !9485
  %11 = shl i32 %0, %10, !dbg !11705
  %12 = or i32 %11, %8, !dbg !11705
  store volatile i32 %12, i32* %4, align 4, !dbg !11705
  ret void, !dbg !11722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11723 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11727, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11728, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.value(metadata i32 %2, metadata !11729, metadata !DIExpression()), !dbg !11732
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11733
  %5 = icmp eq %struct._snode* %4, null, !dbg !11733
  br i1 %5, label %21, label %6, !dbg !11733

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !11735
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11731, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !11730, metadata !DIExpression()), !dbg !11732
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11736
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !11736
  %11 = load i32, i32* %10, align 4, !dbg !11736
  %12 = and i32 %11, %2, !dbg !11740
  %13 = icmp eq i32 %12, 0, !dbg !11740
  br i1 %13, label %19, label %14, !dbg !11741

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !11730, metadata !DIExpression()), !dbg !11732
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11742
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11742
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11742
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !11744
  br label %19, !dbg !11745

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11730, metadata !DIExpression()), !dbg !11732
  %20 = icmp eq %struct._snode* %8, null, !dbg !11746
  br i1 %20, label %21, label %6, !dbg !11746

21:                                               ; preds = %19, %3
  ret void, !dbg !11747
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11750, metadata !DIExpression()), !dbg !11751
  %2 = and i32 %0, 255, !dbg !11752
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !11752
  %4 = load volatile i32, i32* %3, align 4, !dbg !11752
  %5 = lshr i32 %0, 16, !dbg !11752
  %6 = and i32 %4, %5, !dbg !11752
  call void @llvm.dbg.value(metadata i32 %5, metadata !11706, metadata !DIExpression()) #25, !dbg !11753
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11755, !srcloc !11713
  call void @llvm.dbg.value(metadata i32 %7, metadata !11709, metadata !DIExpression()) #25, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %7, metadata !11714, metadata !DIExpression()) #25, !dbg !11756
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11758, !range !9485
  %9 = lshr i32 %6, %8, !dbg !11759
  ret i32 %9, !dbg !11760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11761 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11766, metadata !DIExpression()), !dbg !11768
  call void @llvm.dbg.value(metadata i32 %1, metadata !11767, metadata !DIExpression()), !dbg !11768
  %3 = shl i32 %1, 16, !dbg !11769
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11769
  store volatile i32 %3, i32* %4, align 4, !dbg !11769
  ret void, !dbg !11770
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11771 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11775, metadata !DIExpression()), !dbg !11776
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11777
  %3 = load volatile i32, i32* %2, align 4, !dbg !11777
  ret i32 %3, !dbg !11778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11779 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %1, metadata !11782, metadata !DIExpression()), !dbg !11783
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11784
  store volatile i32 %1, i32* %3, align 4, !dbg !11784
  ret void, !dbg !11785
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11786 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11788, metadata !DIExpression()), !dbg !11789
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11790
  %3 = load volatile i32, i32* %2, align 4, !dbg !11790
  ret i32 %3, !dbg !11791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !11792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11796, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32* %1, metadata !11797, metadata !DIExpression()), !dbg !11798
  %3 = and i32 %0, 131072, !dbg !11799
  %4 = icmp eq i32 %3, 0, !dbg !11801
  br i1 %4, label %22, label %5, !dbg !11802

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11803
  %6 = and i32 %0, 2, !dbg !11805
  %7 = icmp eq i32 %6, 0, !dbg !11807
  br i1 %7, label %11, label %8, !dbg !11808

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11809
  %10 = icmp eq i32 %9, 0, !dbg !11809
  br i1 %10, label %33, label %11, !dbg !11812

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11813
  store i32 %12, i32* %1, align 4, !dbg !11813
  %13 = and i32 %0, 16, !dbg !11814
  %14 = icmp eq i32 %13, 0, !dbg !11816
  br i1 %14, label %17, label %15, !dbg !11817

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11818
  br label %31, !dbg !11820

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11821
  %19 = icmp eq i32 %18, 0, !dbg !11823
  br i1 %19, label %33, label %20, !dbg !11824

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11825
  br label %31, !dbg !11827

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11828
  %24 = icmp eq i32 %23, 0, !dbg !11830
  br i1 %24, label %31, label %25, !dbg !11831

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11832
  %27 = icmp eq i32 %26, 0, !dbg !11835
  br i1 %27, label %28, label %31, !dbg !11836

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11837
  br label %33, !dbg !11838

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11798
  ret i32 %34, !dbg !11838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11839 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11843, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %1, metadata !11844, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %2, metadata !11845, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %3, metadata !11846, metadata !DIExpression()), !dbg !11854
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11855
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11855
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11855
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11847, metadata !DIExpression()), !dbg !11854
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11856
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11856
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11856
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11848, metadata !DIExpression()), !dbg !11854
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !11857
  call void @llvm.dbg.value(metadata i32 %11, metadata !11849, metadata !DIExpression()), !dbg !11854
  %12 = and i32 %2, 48, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %12, metadata !11850, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %2, metadata !11851, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %2, metadata !11852, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %2, metadata !11853, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11854
  %13 = lshr i32 %2, 6, !dbg !11859
  %14 = and i32 %13, 1, !dbg !11859
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !11860
  %15 = lshr i32 %2, 7, !dbg !11861
  %16 = and i32 %15, 3, !dbg !11861
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !11862
  %17 = lshr i32 %2, 9, !dbg !11863
  %18 = and i32 %17, 3, !dbg !11863
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !11864
  %19 = icmp eq i32 %12, 32, !dbg !11865
  br i1 %19, label %20, label %24, !dbg !11867

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11868
  br i1 %21, label %22, label %23, !dbg !11871

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11872
  br label %24, !dbg !11874

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11875
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11877
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !11878
  ret void, !dbg !11879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !11880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11882, metadata !DIExpression()), !dbg !11884
  %2 = shl nuw i32 1, %0, !dbg !11885
  call void @llvm.dbg.value(metadata i32 %2, metadata !11883, metadata !DIExpression()), !dbg !11884
  ret i32 %2, !dbg !11886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11887 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11891, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.value(metadata i32 %1, metadata !11892, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.value(metadata i32 %2, metadata !11893, metadata !DIExpression()), !dbg !11894
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11895
  %5 = load volatile i32, i32* %4, align 4, !dbg !11895
  %6 = xor i32 %1, -1, !dbg !11895
  %7 = and i32 %5, %6, !dbg !11895
  %8 = mul i32 %2, %1, !dbg !11895
  %9 = or i32 %7, %8, !dbg !11895
  store volatile i32 %9, i32* %4, align 4, !dbg !11895
  ret void, !dbg !11896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11897 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11899, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i32 %1, metadata !11900, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i32 %2, metadata !11901, metadata !DIExpression()), !dbg !11902
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11903
  %5 = load volatile i32, i32* %4, align 4, !dbg !11903
  call void @llvm.dbg.value(metadata i32 %1, metadata !11706, metadata !DIExpression()) #25, !dbg !11904
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11906, !srcloc !11713
  call void @llvm.dbg.value(metadata i32 %6, metadata !11709, metadata !DIExpression()) #25, !dbg !11904
  call void @llvm.dbg.value(metadata i32 %6, metadata !11714, metadata !DIExpression()) #25, !dbg !11907
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11909, !range !9485
  %8 = shl nuw nsw i32 %7, 1, !dbg !11903
  %9 = shl i32 3, %8, !dbg !11903
  %10 = xor i32 %9, -1, !dbg !11903
  %11 = and i32 %5, %10, !dbg !11903
  call void @llvm.dbg.value(metadata i32 %1, metadata !11706, metadata !DIExpression()) #25, !dbg !11910
  call void @llvm.dbg.value(metadata i32 %6, metadata !11709, metadata !DIExpression()) #25, !dbg !11910
  call void @llvm.dbg.value(metadata i32 %6, metadata !11714, metadata !DIExpression()) #25, !dbg !11912
  %12 = shl i32 %2, %8, !dbg !11903
  %13 = or i32 %11, %12, !dbg !11903
  store volatile i32 %13, i32* %4, align 4, !dbg !11903
  ret void, !dbg !11914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11915 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11917, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.value(metadata i32 %1, metadata !11918, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.value(metadata i32 %2, metadata !11919, metadata !DIExpression()), !dbg !11920
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11921
  %5 = load volatile i32, i32* %4, align 4, !dbg !11921
  call void @llvm.dbg.value(metadata i32 %1, metadata !11706, metadata !DIExpression()) #25, !dbg !11922
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11924, !srcloc !11713
  call void @llvm.dbg.value(metadata i32 %6, metadata !11709, metadata !DIExpression()) #25, !dbg !11922
  call void @llvm.dbg.value(metadata i32 %6, metadata !11714, metadata !DIExpression()) #25, !dbg !11925
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11927, !range !9485
  %8 = shl nuw nsw i32 %7, 1, !dbg !11921
  %9 = shl i32 3, %8, !dbg !11921
  %10 = xor i32 %9, -1, !dbg !11921
  %11 = and i32 %5, %10, !dbg !11921
  call void @llvm.dbg.value(metadata i32 %1, metadata !11706, metadata !DIExpression()) #25, !dbg !11928
  call void @llvm.dbg.value(metadata i32 %6, metadata !11709, metadata !DIExpression()) #25, !dbg !11928
  call void @llvm.dbg.value(metadata i32 %6, metadata !11714, metadata !DIExpression()) #25, !dbg !11930
  %12 = shl i32 %2, %8, !dbg !11921
  %13 = or i32 %11, %12, !dbg !11921
  store volatile i32 %13, i32* %4, align 4, !dbg !11921
  ret void, !dbg !11932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11933 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11935, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.value(metadata i32 %1, metadata !11936, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.value(metadata i32 %2, metadata !11937, metadata !DIExpression()), !dbg !11938
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11939
  %5 = load volatile i32, i32* %4, align 4, !dbg !11939
  call void @llvm.dbg.value(metadata i32 %1, metadata !11706, metadata !DIExpression()) #25, !dbg !11940
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11942, !srcloc !11713
  call void @llvm.dbg.value(metadata i32 %6, metadata !11709, metadata !DIExpression()) #25, !dbg !11940
  call void @llvm.dbg.value(metadata i32 %6, metadata !11714, metadata !DIExpression()) #25, !dbg !11943
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11945, !range !9485
  %8 = shl nuw nsw i32 %7, 2, !dbg !11939
  %9 = shl i32 15, %8, !dbg !11939
  %10 = xor i32 %9, -1, !dbg !11939
  %11 = and i32 %5, %10, !dbg !11939
  call void @llvm.dbg.value(metadata i32 %1, metadata !11706, metadata !DIExpression()) #25, !dbg !11946
  call void @llvm.dbg.value(metadata i32 %6, metadata !11709, metadata !DIExpression()) #25, !dbg !11946
  call void @llvm.dbg.value(metadata i32 %6, metadata !11714, metadata !DIExpression()) #25, !dbg !11948
  %12 = shl i32 %2, %8, !dbg !11939
  %13 = or i32 %11, %12, !dbg !11939
  store volatile i32 %13, i32* %4, align 4, !dbg !11939
  ret void, !dbg !11950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11951 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11953, metadata !DIExpression()), !dbg !11956
  call void @llvm.dbg.value(metadata i32 %1, metadata !11954, metadata !DIExpression()), !dbg !11956
  call void @llvm.dbg.value(metadata i32 %2, metadata !11955, metadata !DIExpression()), !dbg !11956
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11957
  %5 = load volatile i32, i32* %4, align 4, !dbg !11957
  %6 = lshr i32 %1, 8, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %6, metadata !11706, metadata !DIExpression()) #25, !dbg !11958
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11960, !srcloc !11713
  call void @llvm.dbg.value(metadata i32 %7, metadata !11709, metadata !DIExpression()) #25, !dbg !11958
  call void @llvm.dbg.value(metadata i32 %7, metadata !11714, metadata !DIExpression()) #25, !dbg !11961
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11963, !range !9485
  %9 = shl nuw nsw i32 %8, 2, !dbg !11957
  %10 = shl i32 15, %9, !dbg !11957
  %11 = xor i32 %10, -1, !dbg !11957
  %12 = and i32 %5, %11, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %6, metadata !11706, metadata !DIExpression()) #25, !dbg !11964
  call void @llvm.dbg.value(metadata i32 %7, metadata !11709, metadata !DIExpression()) #25, !dbg !11964
  call void @llvm.dbg.value(metadata i32 %7, metadata !11714, metadata !DIExpression()) #25, !dbg !11966
  %13 = shl i32 %2, %9, !dbg !11957
  %14 = or i32 %12, %13, !dbg !11957
  store volatile i32 %14, i32* %4, align 4, !dbg !11957
  ret void, !dbg !11968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11969 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11971, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.value(metadata i32 %1, metadata !11972, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.value(metadata i32 %2, metadata !11973, metadata !DIExpression()), !dbg !11974
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11975
  %5 = load volatile i32, i32* %4, align 4, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %1, metadata !11706, metadata !DIExpression()) #25, !dbg !11976
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11978, !srcloc !11713
  call void @llvm.dbg.value(metadata i32 %6, metadata !11709, metadata !DIExpression()) #25, !dbg !11976
  call void @llvm.dbg.value(metadata i32 %6, metadata !11714, metadata !DIExpression()) #25, !dbg !11979
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11981, !range !9485
  %8 = shl nuw nsw i32 %7, 1, !dbg !11975
  %9 = shl i32 3, %8, !dbg !11975
  %10 = xor i32 %9, -1, !dbg !11975
  %11 = and i32 %5, %10, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %1, metadata !11706, metadata !DIExpression()) #25, !dbg !11982
  call void @llvm.dbg.value(metadata i32 %6, metadata !11709, metadata !DIExpression()) #25, !dbg !11982
  call void @llvm.dbg.value(metadata i32 %6, metadata !11714, metadata !DIExpression()) #25, !dbg !11984
  %12 = shl i32 %2, %8, !dbg !11975
  %13 = or i32 %11, %12, !dbg !11975
  store volatile i32 %13, i32* %4, align 4, !dbg !11975
  ret void, !dbg !11986
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11987 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11989, metadata !DIExpression()), !dbg !11992
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11993
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11993
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11993
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11990, metadata !DIExpression()), !dbg !11992
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11994
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11995
  %6 = tail call fastcc zeroext i1 @device_is_ready.178() #26, !dbg !11996
  br i1 %6, label %7, label %11, !dbg !11998

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !11999
  call void @llvm.dbg.value(metadata i32 %8, metadata !11991, metadata !DIExpression()), !dbg !11992
  %9 = icmp slt i32 %8, 0, !dbg !12000
  %10 = select i1 %9, i32 %8, i32 0, !dbg !12002
  br label %11, !dbg !12002

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11992
  ret i32 %12, !dbg !12003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.178() unnamed_addr #1 !dbg !12004 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12008, metadata !DIExpression()), !dbg !12009
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12010, !srcloc !12012
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.179() #26, !dbg !12013
  ret i1 %1, !dbg !12014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12015 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12019, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8 1, metadata !12020, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !12021, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 0, metadata !12022, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12023, metadata !DIExpression()), !dbg !12024
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12025
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !12025
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !12025
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !12021, metadata !DIExpression()), !dbg !12024
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !12026
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !12029
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !12030
  call void @llvm.dbg.value(metadata i32 %7, metadata !12022, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 %7, metadata !12022, metadata !DIExpression()), !dbg !12024
  ret i32 %7, !dbg !12031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.179() unnamed_addr #1 !dbg !12032 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12034, metadata !DIExpression()), !dbg !12035
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !12036
  ret i1 %1, !dbg !12037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !12038 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12042, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.value(metadata i32 %1, metadata !12043, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.value(metadata i32 %2, metadata !12044, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.value(metadata i32 %3, metadata !12045, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.value(metadata i32 0, metadata !12046, metadata !DIExpression()), !dbg !12050
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !12051
  %5 = icmp eq i32 %3, 17, !dbg !12052
  br i1 %5, label %6, label %14, !dbg !12053

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !12054
  call void @llvm.dbg.value(metadata i32 %7, metadata !12047, metadata !DIExpression()), !dbg !12055
  %8 = icmp eq i32 %7, 0, !dbg !12056
  %9 = shl nuw i32 1, %1, !dbg !12058
  br i1 %8, label %12, label %10, !dbg !12059

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12060
  br label %14, !dbg !12062

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12063
  br label %14, !dbg !12066

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !12067
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !12068 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12070, metadata !DIExpression()), !dbg !12074
  call void @llvm.dbg.value(metadata i8* %1, metadata !12071, metadata !DIExpression()), !dbg !12074
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12075
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12075
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12075
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12072, metadata !DIExpression()), !dbg !12074
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12076
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12076
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !12078
  %9 = icmp eq i32 %8, 0, !dbg !12078
  br i1 %9, label %12, label %10, !dbg !12079

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12080
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !12082
  br label %12, !dbg !12083

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12084
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12086
  %15 = icmp eq i32 %14, 0, !dbg !12086
  br i1 %15, label %19, label %16, !dbg !12087

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12088
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !12089
  store i8 %18, i8* %1, align 1, !dbg !12090
  br label %19, !dbg !12091

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !12074
  ret i32 %20, !dbg !12092
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !12093 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12095, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.value(metadata i8 %1, metadata !12096, metadata !DIExpression()), !dbg !12099
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12100
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12100
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12100
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12097, metadata !DIExpression()), !dbg !12099
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !12101

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12102
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !12105
  %10 = icmp eq i32 %9, 0, !dbg !12105
  br i1 %10, label %18, label %11, !dbg !12106

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12107, !srcloc !12114
  call void @llvm.dbg.value(metadata i32 undef, metadata !12110, metadata !DIExpression()) #25, !dbg !12115
  call void @llvm.dbg.value(metadata i32 undef, metadata !12111, metadata !DIExpression()) #25, !dbg !12115
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()), !dbg !12099
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12116
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12118
  %15 = icmp eq i32 %14, 0, !dbg !12118
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !12107
  br i1 %15, label %17, label %19, !dbg !12119

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !12110, metadata !DIExpression()) #25, !dbg !12115
  call void @llvm.dbg.value(metadata i32 %16, metadata !12098, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.value(metadata i32 undef, metadata !12120, metadata !DIExpression()) #25, !dbg !12123
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !12125, !srcloc !12126
  br label %18, !dbg !12127

18:                                               ; preds = %17, %7
  br label %7, !dbg !12102, !llvm.loop !12128

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !12107
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12130
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !12131
  call void @llvm.dbg.value(metadata i32 %20, metadata !12120, metadata !DIExpression()) #25, !dbg !12132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !12134, !srcloc !12126
  ret void, !dbg !12135
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !12136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12138, metadata !DIExpression()), !dbg !12141
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12142
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12142
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12142
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12139, metadata !DIExpression()), !dbg !12141
  call void @llvm.dbg.value(metadata i32 0, metadata !12140, metadata !DIExpression()), !dbg !12141
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12143
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12143
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !12145
  %8 = icmp ne i32 %7, 0, !dbg !12145
  %9 = zext i1 %8 to i32, !dbg !12146
  call void @llvm.dbg.value(metadata i32 %9, metadata !12140, metadata !DIExpression()), !dbg !12141
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12147
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !12149
  %12 = icmp eq i32 %11, 0, !dbg !12149
  %13 = or i32 %9, 2, !dbg !12150
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !12150
  call void @llvm.dbg.value(metadata i32 %14, metadata !12140, metadata !DIExpression()), !dbg !12141
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12151
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !12153
  %17 = icmp eq i32 %16, 0, !dbg !12153
  %18 = or i32 %14, 4, !dbg !12154
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !12154
  call void @llvm.dbg.value(metadata i32 %19, metadata !12140, metadata !DIExpression()), !dbg !12141
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12155
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !12157
  %22 = icmp eq i32 %21, 0, !dbg !12157
  %23 = or i32 %19, 8, !dbg !12158
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !12158
  call void @llvm.dbg.value(metadata i32 %24, metadata !12140, metadata !DIExpression()), !dbg !12141
  %25 = and i32 %24, 8, !dbg !12159
  %26 = icmp eq i32 %25, 0, !dbg !12159
  br i1 %26, label %29, label %27, !dbg !12161

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12162
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !12164
  br label %29, !dbg !12165

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !12166
  %31 = icmp eq i32 %30, 0, !dbg !12166
  br i1 %31, label %34, label %32, !dbg !12168

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12169
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !12171
  br label %34, !dbg !12172

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !12173
  %36 = icmp eq i32 %35, 0, !dbg !12173
  br i1 %36, label %39, label %37, !dbg !12175

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12176
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !12178
  br label %39, !dbg !12179

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !12180
  %41 = icmp eq i32 %40, 0, !dbg !12180
  br i1 %41, label %44, label %42, !dbg !12182

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12183
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !12185
  br label %44, !dbg !12186

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12187
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !12188
  ret i32 %24, !dbg !12189
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !12190 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12192, metadata !DIExpression()), !dbg !12201
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12193, metadata !DIExpression()), !dbg !12201
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12202
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12202
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12202
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12194, metadata !DIExpression()), !dbg !12201
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12203
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !12203
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !12203
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !12195, metadata !DIExpression()), !dbg !12201
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12204
  %10 = load i8, i8* %9, align 4, !dbg !12204
  %11 = zext i8 %10 to i32, !dbg !12205
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !12206
  call void @llvm.dbg.value(metadata i32 %12, metadata !12197, metadata !DIExpression()), !dbg !12201
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12207
  %14 = load i8, i8* %13, align 1, !dbg !12207
  %15 = zext i8 %14 to i32, !dbg !12208
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !12209
  call void @llvm.dbg.value(metadata i32 %16, metadata !12198, metadata !DIExpression()), !dbg !12201
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12210
  %18 = load i8, i8* %17, align 2, !dbg !12210
  %19 = zext i8 %18 to i32, !dbg !12211
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !12212
  call void @llvm.dbg.value(metadata i32 %20, metadata !12199, metadata !DIExpression()), !dbg !12201
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12213
  %22 = load i8, i8* %21, align 1, !dbg !12213
  %23 = zext i8 %22 to i32, !dbg !12214
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !12215
  call void @llvm.dbg.value(metadata i32 %24, metadata !12200, metadata !DIExpression()), !dbg !12201
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !12216

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !12218
  br i1 %26, label %69, label %27, !dbg !12220

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !12221

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !12222
  br i1 %29, label %65, label %30, !dbg !12222

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !12224
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !12201
  br i1 %31, label %38, label %34, !dbg !12226

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !12227
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !12227

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !12230
  br i1 %37, label %38, label %69, !dbg !12231

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12232
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !12233
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !12234
  %41 = icmp eq i32 %12, %40, !dbg !12236
  br i1 %41, label %43, label %42, !dbg !12237

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !12238
  br label %43, !dbg !12240

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !12241
  %45 = icmp eq i32 %16, %44, !dbg !12243
  br i1 %45, label %47, label %46, !dbg !12244

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !12245
  br label %47, !dbg !12247

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !12248
  %49 = icmp eq i32 %20, %48, !dbg !12250
  br i1 %49, label %51, label %50, !dbg !12251

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !12252
  br label %51, !dbg !12254

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !12255
  %53 = icmp eq i32 %24, %52, !dbg !12257
  br i1 %53, label %55, label %54, !dbg !12258

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !12259
  br label %55, !dbg !12261

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12262
  %57 = load i32, i32* %56, align 4, !dbg !12262
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !12264
  %59 = load i32, i32* %58, align 4, !dbg !12264
  %60 = icmp eq i32 %57, %59, !dbg !12265
  br i1 %60, label %63, label %61, !dbg !12266

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !12267
  %62 = load i32, i32* %56, align 4, !dbg !12269
  store i32 %62, i32* %58, align 4, !dbg !12270
  br label %63, !dbg !12271

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !12272
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !12273
  br label %69, !dbg !12274

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !12222
  %67 = and i8 %66, 1, !dbg !12222
  %68 = icmp eq i8 %67, 0, !dbg !12222
  br i1 %68, label %30, label %69, !dbg !12222

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !12201
  ret i32 %70, !dbg !12275
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !12276 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12278, metadata !DIExpression()), !dbg !12281
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12279, metadata !DIExpression()), !dbg !12281
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12282
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !12282
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !12282
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !12280, metadata !DIExpression()), !dbg !12281
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !12283
  %7 = load i32, i32* %6, align 4, !dbg !12283
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12284
  store i32 %7, i32* %8, align 4, !dbg !12285
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12286, !range !12287
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !12288
  %11 = trunc i32 %10 to i8, !dbg !12288
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12289
  store i8 %11, i8* %12, align 4, !dbg !12290
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !12291, !range !12292
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !12293
  %15 = trunc i32 %14 to i8, !dbg !12293
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12294
  store i8 %15, i8* %16, align 1, !dbg !12295
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !12296
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12297, !range !12287
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !12298
  %20 = trunc i32 %19 to i8, !dbg !12298
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12299
  store i8 %20, i8* %21, align 2, !dbg !12300
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !12301, !range !12302
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !12303
  %24 = trunc i32 %23 to i8, !dbg !12303
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12304
  store i8 %24, i8* %25, align 1, !dbg !12305
  ret i32 0, !dbg !12306
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12307 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12311, metadata !DIExpression()), !dbg !12313
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12314
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12314
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12314
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12312, metadata !DIExpression()), !dbg !12313
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12315
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12315
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !12316
  ret i32 %7, !dbg !12317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !12318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12322, metadata !DIExpression()), !dbg !12323
  %2 = icmp eq i32 %0, 1024, !dbg !12324
  %3 = select i1 %2, i32 2, i32 0, !dbg !12324
  %4 = icmp eq i32 %0, 1536, !dbg !12324
  %5 = select i1 %4, i32 1, i32 %3, !dbg !12324
  ret i32 %5, !dbg !12325
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12326 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12328, metadata !DIExpression()), !dbg !12330
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12331
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12331
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12331
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12329, metadata !DIExpression()), !dbg !12330
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12332
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12332
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !12333
  ret i32 %7, !dbg !12334
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !12335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12339, metadata !DIExpression()), !dbg !12340
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !12341
  %3 = icmp ult i32 %2, 4, !dbg !12341
  br i1 %3, label %4, label %7, !dbg !12341

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !12341
  %6 = load i32, i32* %5, align 4, !dbg !12341
  br label %7, !dbg !12341

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !12342
  ret i32 %8, !dbg !12344
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12345 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12347, metadata !DIExpression()), !dbg !12349
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12350
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12350
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12350
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12348, metadata !DIExpression()), !dbg !12349
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12351
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12351
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !12352
  ret i32 %7, !dbg !12353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12358, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.value(metadata i32 %1, metadata !12359, metadata !DIExpression()), !dbg !12360
  %3 = icmp eq i32 %0, 4096, !dbg !12361
  %4 = icmp eq i32 %1, 0, !dbg !12361
  %5 = select i1 %4, i32 4, i32 3, !dbg !12361
  %6 = select i1 %4, i32 3, i32 2, !dbg !12361
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12361
  ret i32 %7, !dbg !12362
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12363 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12365, metadata !DIExpression()), !dbg !12367
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12368
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12368
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12368
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12366, metadata !DIExpression()), !dbg !12367
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12369
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12369
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !12370
  ret i32 %7, !dbg !12371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12376, metadata !DIExpression()), !dbg !12377
  %2 = icmp eq i32 %0, 768, !dbg !12378
  %3 = zext i1 %2 to i32, !dbg !12377
  ret i32 %3, !dbg !12380
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12381 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12386, metadata !DIExpression()), !dbg !12387
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12388
  %3 = load volatile i32, i32* %2, align 4, !dbg !12388
  %4 = and i32 %3, 768, !dbg !12388
  ret i32 %4, !dbg !12389
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12390 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12392, metadata !DIExpression()), !dbg !12393
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12394
  %3 = load volatile i32, i32* %2, align 4, !dbg !12394
  %4 = and i32 %3, 4096, !dbg !12394
  ret i32 %4, !dbg !12395
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12396 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12398, metadata !DIExpression()), !dbg !12399
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12400
  %3 = load volatile i32, i32* %2, align 4, !dbg !12400
  %4 = and i32 %3, 12288, !dbg !12400
  ret i32 %4, !dbg !12401
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12402 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12404, metadata !DIExpression()), !dbg !12405
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12406
  %3 = load volatile i32, i32* %2, align 4, !dbg !12406
  %4 = and i32 %3, 1536, !dbg !12406
  ret i32 %4, !dbg !12407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !12408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12412, metadata !DIExpression()), !dbg !12413
  %2 = icmp eq i32 %0, 2, !dbg !12414
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12414
  %4 = icmp eq i32 %0, 1, !dbg !12414
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12414
  ret i32 %5, !dbg !12415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !12416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12420, metadata !DIExpression()), !dbg !12421
  %2 = icmp ult i32 %0, 3, !dbg !12422
  br i1 %2, label %3, label %6, !dbg !12422

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12422
  %5 = load i32, i32* %4, align 4, !dbg !12422
  br label %6, !dbg !12422

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12423
  ret i32 %7, !dbg !12425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12430, metadata !DIExpression()), !dbg !12432
  call void @llvm.dbg.value(metadata i32 %1, metadata !12431, metadata !DIExpression()), !dbg !12432
  %3 = icmp eq i32 %0, 4, !dbg !12433
  %4 = icmp eq i32 %1, 0, !dbg !12433
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12433
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12433
  ret i32 %6, !dbg !12434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12439, metadata !DIExpression()), !dbg !12440
  %2 = icmp eq i32 %0, 1, !dbg !12441
  %3 = select i1 %2, i32 768, i32 0, !dbg !12440
  ret i32 %3, !dbg !12443
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12444 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12448, metadata !DIExpression()), !dbg !12449
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12450
  %3 = load volatile i32, i32* %2, align 4, !dbg !12450
  %4 = and i32 %3, -8193, !dbg !12450
  store volatile i32 %4, i32* %2, align 4, !dbg !12450
  ret void, !dbg !12451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12452 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12456, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.value(metadata i32 %1, metadata !12457, metadata !DIExpression()), !dbg !12459
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12460
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12460
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12460
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12458, metadata !DIExpression()), !dbg !12459
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12461
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12461
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12462
  ret void, !dbg !12463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12466, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.value(metadata i32 %1, metadata !12467, metadata !DIExpression()), !dbg !12469
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12470
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12470
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12470
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12468, metadata !DIExpression()), !dbg !12469
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12471
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12471
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12472
  ret void, !dbg !12473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12476, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 %1, metadata !12477, metadata !DIExpression()), !dbg !12479
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12480
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12480
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12480
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12478, metadata !DIExpression()), !dbg !12479
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12481
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12481
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12482
  ret void, !dbg !12483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12484 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12486, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.value(metadata i32 %1, metadata !12487, metadata !DIExpression()), !dbg !12489
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12490
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12490
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12490
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12488, metadata !DIExpression()), !dbg !12489
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12491
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12491
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12492
  ret void, !dbg !12493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12494 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12496, metadata !DIExpression()), !dbg !12501
  call void @llvm.dbg.value(metadata i32 %1, metadata !12497, metadata !DIExpression()), !dbg !12501
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12502
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12502
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12502
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12498, metadata !DIExpression()), !dbg !12501
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12503
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12503
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12503
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12499, metadata !DIExpression()), !dbg !12501
  %10 = bitcast i32* %3 to i8*, !dbg !12504
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12504
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12505
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12505
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12509
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12509
  %15 = load i8*, i8** %14, align 4, !dbg !12509
  call void @llvm.dbg.value(metadata i32* %3, metadata !12500, metadata !DIExpression(DW_OP_deref)), !dbg !12501
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !12510
  %17 = icmp slt i32 %16, 0, !dbg !12511
  br i1 %17, label %18, label %21, !dbg !12512

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12513
  %20 = zext i8 %19 to i32, !dbg !12513
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.185, i32 0, i32 0), i32 noundef %20) #27, !dbg !12513
  br label %26, !dbg !12519

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12520
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12520
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !12521
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12522
  %25 = load i32, i32* %3, align 4, !dbg !12523
  call void @llvm.dbg.value(metadata i32 %25, metadata !12500, metadata !DIExpression()), !dbg !12501
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !12524
  br label %26, !dbg !12525

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12525
  ret void, !dbg !12525
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12526 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12528, metadata !DIExpression()), !dbg !12529
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12530
  %3 = load volatile i32, i32* %2, align 4, !dbg !12530
  %4 = or i32 %3, 8192, !dbg !12530
  store volatile i32 %4, i32* %2, align 4, !dbg !12530
  ret void, !dbg !12531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12532 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12534, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i8* %1, metadata !12535, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i32* %2, metadata !12536, metadata !DIExpression()), !dbg !12538
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12539
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12539
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12539
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12537, metadata !DIExpression()), !dbg !12538
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12540
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12540
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12542
  br i1 %9, label %12, label %10, !dbg !12543

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !12544
  br label %12, !dbg !12545

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12538
  ret i32 %13, !dbg !12546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef %0) unnamed_addr #3 !dbg !12547 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12549, metadata !DIExpression()), !dbg !12550
  %2 = icmp eq i32 %0, 2, !dbg !12551
  %3 = select i1 %2, i8 87, i8 63, !dbg !12551
  %4 = icmp eq i32 %0, 1, !dbg !12551
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12551
  ret i8 %5, !dbg !12552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12553 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12557, metadata !DIExpression()), !dbg !12559
  call void @llvm.dbg.value(metadata i32 0, metadata !12558, metadata !DIExpression()), !dbg !12559
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12560
  %3 = load volatile i32, i32* %2, align 4, !dbg !12560
  %4 = and i32 %3, -32769, !dbg !12560
  store volatile i32 %4, i32* %2, align 4, !dbg !12560
  ret void, !dbg !12561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12562 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12566, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.value(metadata i32 %1, metadata !12567, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.value(metadata i32 0, metadata !12568, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.value(metadata i32 %2, metadata !12569, metadata !DIExpression()), !dbg !12570
  %4 = zext i32 %1 to i64, !dbg !12571
  %5 = mul nuw nsw i64 %4, 25, !dbg !12571
  %6 = zext i32 %2 to i64, !dbg !12571
  %7 = shl nuw nsw i64 %6, 2, !dbg !12571
  %8 = udiv i64 %5, %7, !dbg !12571
  %9 = trunc i64 %8 to i32, !dbg !12571
  %10 = udiv i32 %9, 100, !dbg !12571
  %11 = shl nuw nsw i32 %10, 4, !dbg !12571
  %12 = mul i32 %10, -100, !dbg !12571
  %13 = add i32 %12, %9, !dbg !12571
  %14 = shl i32 %13, 4, !dbg !12571
  %15 = add i32 %14, 50, !dbg !12571
  %16 = udiv i32 %15, 100, !dbg !12571
  %17 = and i32 %16, 240, !dbg !12571
  %18 = add nuw nsw i32 %17, %11, !dbg !12571
  %19 = and i32 %16, 15, !dbg !12571
  %20 = and i32 %18, 65520, !dbg !12574
  %21 = or i32 %20, %19, !dbg !12574
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12575
  store volatile i32 %21, i32* %22, align 4, !dbg !12576
  ret void, !dbg !12577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12578 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12580, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i32 %1, metadata !12581, metadata !DIExpression()), !dbg !12582
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12583
  %4 = load volatile i32, i32* %3, align 4, !dbg !12583
  %5 = and i32 %4, -769, !dbg !12583
  %6 = or i32 %5, %1, !dbg !12583
  store volatile i32 %6, i32* %3, align 4, !dbg !12583
  ret void, !dbg !12584
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12585 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12587, metadata !DIExpression()), !dbg !12589
  call void @llvm.dbg.value(metadata i32 %1, metadata !12588, metadata !DIExpression()), !dbg !12589
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12590
  %4 = load volatile i32, i32* %3, align 4, !dbg !12590
  %5 = and i32 %4, -4097, !dbg !12590
  %6 = or i32 %5, %1, !dbg !12590
  store volatile i32 %6, i32* %3, align 4, !dbg !12590
  ret void, !dbg !12591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12592 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12594, metadata !DIExpression()), !dbg !12596
  call void @llvm.dbg.value(metadata i32 %1, metadata !12595, metadata !DIExpression()), !dbg !12596
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12597
  %4 = load volatile i32, i32* %3, align 4, !dbg !12597
  %5 = and i32 %4, -12289, !dbg !12597
  %6 = or i32 %5, %1, !dbg !12597
  store volatile i32 %6, i32* %3, align 4, !dbg !12597
  ret void, !dbg !12598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12599 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12601, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.value(metadata i32 %1, metadata !12602, metadata !DIExpression()), !dbg !12603
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12604
  %4 = load volatile i32, i32* %3, align 4, !dbg !12604
  %5 = and i32 %4, -1537, !dbg !12604
  %6 = or i32 %5, %1, !dbg !12604
  store volatile i32 %6, i32* %3, align 4, !dbg !12604
  ret void, !dbg !12605
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12606 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12608, metadata !DIExpression()), !dbg !12609
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12610
  %3 = load volatile i32, i32* %2, align 4, !dbg !12610
  %4 = lshr i32 %3, 3, !dbg !12611
  %5 = and i32 %4, 1, !dbg !12611
  ret i32 %5, !dbg !12612
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12613 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12615, metadata !DIExpression()), !dbg !12616
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12617
  %3 = load volatile i32, i32* %2, align 4, !dbg !12617
  %4 = and i32 %3, 1, !dbg !12617
  ret i32 %4, !dbg !12618
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12619 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12621, metadata !DIExpression()), !dbg !12622
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12623
  %3 = load volatile i32, i32* %2, align 4, !dbg !12623
  %4 = lshr i32 %3, 1, !dbg !12624
  %5 = and i32 %4, 1, !dbg !12624
  ret i32 %5, !dbg !12625
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12626 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12628, metadata !DIExpression()), !dbg !12629
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12630
  %3 = load volatile i32, i32* %2, align 4, !dbg !12630
  %4 = lshr i32 %3, 8, !dbg !12631
  %5 = and i32 %4, 1, !dbg !12631
  ret i32 %5, !dbg !12632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12633 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12635, metadata !DIExpression()), !dbg !12636
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12637
  store volatile i32 -257, i32* %2, align 4, !dbg !12637
  ret void, !dbg !12638
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12639 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12641, metadata !DIExpression()), !dbg !12643
  %3 = bitcast i32* %2 to i8*, !dbg !12644
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12644
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12642, metadata !DIExpression()), !dbg !12645
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12646
  %5 = load volatile i32, i32* %4, align 4, !dbg !12646
  store volatile i32 %5, i32* %2, align 4, !dbg !12647
  %6 = load volatile i32, i32* %2, align 4, !dbg !12648
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12649
  %8 = load volatile i32, i32* %7, align 4, !dbg !12649
  store volatile i32 %8, i32* %2, align 4, !dbg !12650
  %9 = load volatile i32, i32* %2, align 4, !dbg !12651
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12652
  ret void, !dbg !12652
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12653 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12655, metadata !DIExpression()), !dbg !12657
  %3 = bitcast i32* %2 to i8*, !dbg !12658
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12658
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12656, metadata !DIExpression()), !dbg !12659
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12660
  %5 = load volatile i32, i32* %4, align 4, !dbg !12660
  store volatile i32 %5, i32* %2, align 4, !dbg !12661
  %6 = load volatile i32, i32* %2, align 4, !dbg !12662
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12663
  %8 = load volatile i32, i32* %7, align 4, !dbg !12663
  store volatile i32 %8, i32* %2, align 4, !dbg !12664
  %9 = load volatile i32, i32* %2, align 4, !dbg !12665
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12666
  ret void, !dbg !12666
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12667 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12669, metadata !DIExpression()), !dbg !12671
  %3 = bitcast i32* %2 to i8*, !dbg !12672
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12672
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12670, metadata !DIExpression()), !dbg !12673
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12674
  %5 = load volatile i32, i32* %4, align 4, !dbg !12674
  store volatile i32 %5, i32* %2, align 4, !dbg !12675
  %6 = load volatile i32, i32* %2, align 4, !dbg !12676
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12677
  %8 = load volatile i32, i32* %7, align 4, !dbg !12677
  store volatile i32 %8, i32* %2, align 4, !dbg !12678
  %9 = load volatile i32, i32* %2, align 4, !dbg !12679
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12680
  ret void, !dbg !12680
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12681 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12683, metadata !DIExpression()), !dbg !12685
  %3 = bitcast i32* %2 to i8*, !dbg !12686
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12686
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12684, metadata !DIExpression()), !dbg !12687
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12688
  %5 = load volatile i32, i32* %4, align 4, !dbg !12688
  store volatile i32 %5, i32* %2, align 4, !dbg !12689
  %6 = load volatile i32, i32* %2, align 4, !dbg !12690
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12691
  %8 = load volatile i32, i32* %7, align 4, !dbg !12691
  store volatile i32 %8, i32* %2, align 4, !dbg !12692
  %9 = load volatile i32, i32* %2, align 4, !dbg !12693
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12694
  ret void, !dbg !12694
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12695 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12697, metadata !DIExpression()), !dbg !12698
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12699
  %3 = load volatile i32, i32* %2, align 4, !dbg !12699
  %4 = lshr i32 %3, 7, !dbg !12700
  %5 = and i32 %4, 1, !dbg !12700
  ret i32 %5, !dbg !12701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !12702 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12706, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.value(metadata i8 %1, metadata !12707, metadata !DIExpression()), !dbg !12708
  %3 = zext i8 %1 to i32, !dbg !12709
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12710
  store volatile i32 %3, i32* %4, align 4, !dbg !12711
  ret void, !dbg !12712
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12713 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12715, metadata !DIExpression()), !dbg !12716
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12717
  %3 = load volatile i32, i32* %2, align 4, !dbg !12717
  %4 = lshr i32 %3, 5, !dbg !12718
  %5 = and i32 %4, 1, !dbg !12718
  ret i32 %5, !dbg !12719
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12720 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12724, metadata !DIExpression()), !dbg !12725
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12726
  %3 = load volatile i32, i32* %2, align 4, !dbg !12726
  %4 = trunc i32 %3 to i8, !dbg !12727
  ret i8 %4, !dbg !12728
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12729 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12731, metadata !DIExpression()), !dbg !12737
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12738
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12738
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12738
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12732, metadata !DIExpression()), !dbg !12737
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12739
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12739
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12739
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12733, metadata !DIExpression()), !dbg !12737
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !12740
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12741
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12741
  %10 = tail call fastcc zeroext i1 @device_is_ready.189(%struct.device* noundef %9) #26, !dbg !12743
  br i1 %10, label %14, label %11, !dbg !12744

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12745
  %13 = zext i8 %12 to i32, !dbg !12745
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.190, i32 0, i32 0), i32 noundef %13) #27, !dbg !12745
  br label %62, !dbg !12751

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12752
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12753
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12753
  %18 = load i8*, i8** %17, align 4, !dbg !12753
  %19 = tail call fastcc i32 @clock_control_on.191(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !12754
  call void @llvm.dbg.value(metadata i32 %19, metadata !12736, metadata !DIExpression()), !dbg !12737
  %20 = icmp eq i32 %19, 0, !dbg !12755
  br i1 %20, label %24, label %21, !dbg !12757

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12758
  %23 = zext i8 %22 to i32, !dbg !12758
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6.192, i32 0, i32 0), i32 noundef %23) #27, !dbg !12758
  br label %62, !dbg !12764

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12765
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12765
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !12766
  call void @llvm.dbg.value(metadata i32 %27, metadata !12736, metadata !DIExpression()), !dbg !12737
  %28 = icmp slt i32 %27, 0, !dbg !12767
  br i1 %28, label %62, label %29, !dbg !12769

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12770
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12770
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !12771
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12772
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !12773
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12774
  %34 = load i32, i32* %33, align 4, !dbg !12774
  %35 = icmp ult i32 %34, 3, !dbg !12776
  br i1 %35, label %39, label %36, !dbg !12776

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 2) #26, !dbg !12777
  %38 = zext i8 %37 to i32, !dbg !12777
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7.193, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !12777
  call void @llvm.dbg.value(metadata i32 0, metadata !12734, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.value(metadata i32 0, metadata !12735, metadata !DIExpression()), !dbg !12737
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12776
  %41 = load i32, i32* %40, align 4, !dbg !12776
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.8, i32 0, i32 %34, !dbg !12776
  %43 = load i32, i32* %42, align 4, !dbg !12776
  br label %44, !dbg !12776

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12786
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12786
  call void @llvm.dbg.value(metadata i32 %46, metadata !12735, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.value(metadata i32 %45, metadata !12734, metadata !DIExpression()), !dbg !12737
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12787
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !12788
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12789
  %49 = load i8, i8* %48, align 4, !dbg !12789, !range !8674
  %50 = icmp eq i8 %49, 0, !dbg !12789
  br i1 %50, label %52, label %51, !dbg !12791

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !12792
  br label %52, !dbg !12794

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12795
  %54 = load i32, i32* %53, align 4, !dbg !12795
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !12796
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12797
  %56 = load i8, i8* %55, align 4, !dbg !12797, !range !8674
  %57 = icmp eq i8 %56, 0, !dbg !12797
  br i1 %57, label %60, label %58, !dbg !12799

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12800
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !12802
  br label %60, !dbg !12803

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12804
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !12805
  br label %62, !dbg !12806

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12737
  ret i32 %63, !dbg !12807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !12808 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12812, metadata !DIExpression()), !dbg !12816
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12817
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12817
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12817
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12813, metadata !DIExpression()), !dbg !12816
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12814, metadata !DIExpression()), !dbg !12816
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12818
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !12819
  ret void, !dbg !12820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.189(%struct.device* noundef %0) unnamed_addr #1 !dbg !12821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12825, metadata !DIExpression()), !dbg !12826
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12827, !srcloc !12829
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.194(%struct.device* noundef %0) #26, !dbg !12830
  ret i1 %2, !dbg !12831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.191(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12834, metadata !DIExpression()), !dbg !12837
  call void @llvm.dbg.value(metadata i8* %1, metadata !12835, metadata !DIExpression()), !dbg !12837
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12838
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12838
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12838
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12836, metadata !DIExpression()), !dbg !12837
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12839
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12839
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !12840
  ret i32 %8, !dbg !12841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12842 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12846, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata i8 0, metadata !12847, metadata !DIExpression()), !dbg !12850
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12851
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12851
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12849, metadata !DIExpression(DW_OP_deref)), !dbg !12850
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !12852
  call void @llvm.dbg.value(metadata i32 %4, metadata !12848, metadata !DIExpression()), !dbg !12850
  %5 = icmp slt i32 %4, 0, !dbg !12853
  br i1 %5, label %9, label %6, !dbg !12855

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12856
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12849, metadata !DIExpression()), !dbg !12850
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !12857
  br label %9, !dbg !12858

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12850
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12859
  ret i32 %10, !dbg !12859
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12860 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12862, metadata !DIExpression()), !dbg !12866
  call void @llvm.dbg.value(metadata i32 12, metadata !12863, metadata !DIExpression()), !dbg !12866
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12867

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12868, metadata !DIExpression()) #25, !dbg !12874
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !12877, !srcloc !12878
  call void @llvm.dbg.value(metadata i32 %4, metadata !12873, metadata !DIExpression()) #25, !dbg !12874
  %5 = or i32 %4, 12, !dbg !12879
  call void @llvm.dbg.value(metadata i32 %5, metadata !12864, metadata !DIExpression()), !dbg !12880
  call void @llvm.dbg.value(metadata i32 %5, metadata !12881, metadata !DIExpression()) #25, !dbg !12888
  call void @llvm.dbg.value(metadata i32* %2, metadata !12886, metadata !DIExpression()) #25, !dbg !12888
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !12890, !srcloc !12891
  call void @llvm.dbg.value(metadata i32 %6, metadata !12887, metadata !DIExpression()) #25, !dbg !12888
  %7 = icmp eq i32 %6, 0, !dbg !12867
  br i1 %7, label %8, label %3, !dbg !12879, !llvm.loop !12892

8:                                                ; preds = %3
  ret void, !dbg !12893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12894 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12896, metadata !DIExpression()), !dbg !12900
  call void @llvm.dbg.value(metadata i32 %1, metadata !12897, metadata !DIExpression()), !dbg !12900
  call void @llvm.dbg.value(metadata i32 %2, metadata !12898, metadata !DIExpression()), !dbg !12900
  call void @llvm.dbg.value(metadata i32 0, metadata !12899, metadata !DIExpression()), !dbg !12900
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12901
  %5 = load volatile i32, i32* %4, align 4, !dbg !12901
  %6 = and i32 %5, -5633, !dbg !12901
  %7 = or i32 %2, %1, !dbg !12901
  %8 = or i32 %7, %6, !dbg !12901
  store volatile i32 %8, i32* %4, align 4, !dbg !12901
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12902
  %10 = load volatile i32, i32* %9, align 4, !dbg !12902
  %11 = and i32 %10, -12289, !dbg !12902
  store volatile i32 %11, i32* %9, align 4, !dbg !12902
  ret void, !dbg !12903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12904 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12906, metadata !DIExpression()), !dbg !12907
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12908
  %3 = load volatile i32, i32* %2, align 4, !dbg !12908
  %4 = or i32 %3, 8, !dbg !12908
  store volatile i32 %4, i32* %2, align 4, !dbg !12908
  ret void, !dbg !12909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12910 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12914, metadata !DIExpression()), !dbg !12917
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12915, metadata !DIExpression()), !dbg !12917
  call void @llvm.dbg.value(metadata i32 0, metadata !12916, metadata !DIExpression()), !dbg !12917
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12918
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12918
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12919
  %5 = load i8, i8* %4, align 4, !dbg !12919
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !12920
  ret i32 %6, !dbg !12921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.194(%struct.device* noundef %0) unnamed_addr #1 !dbg !12922 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12924, metadata !DIExpression()), !dbg !12925
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12926
  ret i1 %2, !dbg !12927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !12928 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12930, metadata !DIExpression()), !dbg !12931
  tail call fastcc void @__NVIC_SetPriority.196() #26, !dbg !12932
  store i32 8399, i32* @last_load, align 4, !dbg !12933
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12934
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12935
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12936
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12937
  %3 = or i32 %2, 7, !dbg !12937
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12937
  ret i32 0, !dbg !12938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.196() unnamed_addr #15 !dbg !12939 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12941, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata i32 1, metadata !12942, metadata !DIExpression()), !dbg !12943
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12944
  ret void, !dbg !12947
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12948 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12950, metadata !DIExpression()), !dbg !12952
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !12953
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12954
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12955
  %5 = add i32 %4, %3, !dbg !12955
  store i32 %5, i32* @cycle_count, align 4, !dbg !12955
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12956
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12957
  %7 = sub i32 %5, %6, !dbg !12960
  %8 = udiv i32 %7, 8400, !dbg !12961
  call void @llvm.dbg.value(metadata i32 %8, metadata !12951, metadata !DIExpression()), !dbg !12952
  %9 = mul nuw i32 %8, 8400, !dbg !12962
  %10 = add i32 %9, %6, !dbg !12963
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12963
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12964
  tail call void @z_arm_int_exit() #27, !dbg !12965
  ret void, !dbg !12966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !12967 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12972
  call void @llvm.dbg.value(metadata i32 %1, metadata !12969, metadata !DIExpression()), !dbg !12973
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12974
  call void @llvm.dbg.value(metadata i32 %2, metadata !12970, metadata !DIExpression()), !dbg !12973
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12975
  call void @llvm.dbg.value(metadata i32 %3, metadata !12971, metadata !DIExpression()), !dbg !12973
  %4 = and i32 %2, 65536, !dbg !12976
  %5 = icmp ne i32 %4, 0, !dbg !12976
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12978
  %8 = load i32, i32* @last_load, align 4, !dbg !12973
  br i1 %7, label %9, label %13, !dbg !12978

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12979
  %11 = add i32 %10, %8, !dbg !12979
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12979
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12981
  br label %13, !dbg !12982

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12983
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12984
  %16 = add i32 %14, %15, !dbg !12985
  ret i32 %16, !dbg !12986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12991, metadata !DIExpression()), !dbg !13004
  call void @llvm.dbg.value(metadata i1 %1, metadata !12992, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13004
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !13005
  br i1 %4, label %5, label %8, !dbg !13005

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13007
  %7 = and i32 %6, -2, !dbg !13007
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13007
  store i32 -16777216, i32* @last_load, align 4, !dbg !13009
  br label %54, !dbg !13010

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !13011
  call void @llvm.dbg.value(metadata i32 %9, metadata !12996, metadata !DIExpression()), !dbg !13004
  br i1 %3, label %18, label %10, !dbg !13012

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !13012
  call void @llvm.dbg.value(metadata i32 undef, metadata !12991, metadata !DIExpression()), !dbg !13004
  %12 = icmp slt i32 %11, 1, !dbg !13013
  br i1 %12, label %18, label %13, !dbg !13013

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !13013
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !13013
  %16 = mul nuw nsw i32 %15, 8400, !dbg !13013
  %17 = add nuw nsw i32 %16, 8399, !dbg !13013
  br label %18, !dbg !13013

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12991, metadata !DIExpression()), !dbg !13004
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13014, metadata !DIExpression()) #25, !dbg !13021
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13023, !srcloc !13029
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !13023
  call void @llvm.dbg.value(metadata i32 %21, metadata !13026, metadata !DIExpression()) #25, !dbg !13030
  call void @llvm.dbg.value(metadata i32 undef, metadata !13027, metadata !DIExpression()) #25, !dbg !13030
  call void @llvm.dbg.value(metadata i32 %21, metadata !13020, metadata !DIExpression()) #25, !dbg !13021
  call void @llvm.dbg.value(metadata i32 %21, metadata !12997, metadata !DIExpression()), !dbg !13004
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !13031
  call void @llvm.dbg.value(metadata i32 %22, metadata !13002, metadata !DIExpression()), !dbg !13004
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13032
  call void @llvm.dbg.value(metadata i32 %23, metadata !12994, metadata !DIExpression()), !dbg !13004
  %24 = load i32, i32* @cycle_count, align 4, !dbg !13033
  %25 = add i32 %24, %22, !dbg !13033
  store i32 %25, i32* @cycle_count, align 4, !dbg !13033
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13034
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !13035
  %27 = sub i32 %25, %26, !dbg !13036
  call void @llvm.dbg.value(metadata i32 %27, metadata !13003, metadata !DIExpression()), !dbg !13004
  %28 = icmp slt i32 %27, 0, !dbg !13037
  br i1 %28, label %38, label %29, !dbg !13039

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12993, metadata !DIExpression()), !dbg !13004
  call void @llvm.dbg.value(metadata i32 undef, metadata !12993, metadata !DIExpression()), !dbg !13004
  %30 = add nuw i32 %19, %27, !dbg !13040
  %31 = urem i32 %30, 8400, !dbg !13042
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12993, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13004
  %32 = sub nuw nsw i32 %19, %31, !dbg !13043
  call void @llvm.dbg.value(metadata i32 %32, metadata !12993, metadata !DIExpression()), !dbg !13004
  %33 = icmp ugt i32 %32, 1024, !dbg !13044
  br i1 %33, label %34, label %36, !dbg !13044

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12993, metadata !DIExpression()), !dbg !13004
  %35 = icmp ugt i32 %32, 16766400, !dbg !13045
  br i1 %35, label %38, label %36, !dbg !13047

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !13048
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13049
  call void @llvm.dbg.value(metadata i32 %40, metadata !12995, metadata !DIExpression()), !dbg !13004
  %41 = add nsw i32 %39, -1, !dbg !13050
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13051
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13052
  %42 = icmp ult i32 %23, %40, !dbg !13053
  br i1 %42, label %43, label %48, !dbg !13055

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !13056
  %45 = add i32 %23, %9, !dbg !13058
  %46 = sub i32 %45, %40, !dbg !13059
  %47 = add i32 %46, %44, !dbg !13056
  br label %52, !dbg !13060

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !13061
  %50 = load i32, i32* @cycle_count, align 4, !dbg !13063
  %51 = add i32 %49, %50, !dbg !13063
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !13064
  store i32 %53, i32* @cycle_count, align 4, !dbg !13064
  call void @llvm.dbg.value(metadata i32 %21, metadata !13065, metadata !DIExpression()) #25, !dbg !13071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13070, metadata !DIExpression()) #25, !dbg !13071
  call void @llvm.dbg.value(metadata i32 %21, metadata !13073, metadata !DIExpression()) #25, !dbg !13076
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !13078, !srcloc !13079
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !13080
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !13081 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13014, metadata !DIExpression()) #25, !dbg !13085
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13087, !srcloc !13029
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13087
  call void @llvm.dbg.value(metadata i32 %2, metadata !13026, metadata !DIExpression()) #25, !dbg !13089
  call void @llvm.dbg.value(metadata i32 undef, metadata !13027, metadata !DIExpression()) #25, !dbg !13089
  call void @llvm.dbg.value(metadata i32 %2, metadata !13020, metadata !DIExpression()) #25, !dbg !13085
  call void @llvm.dbg.value(metadata i32 %2, metadata !13083, metadata !DIExpression()), !dbg !13090
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13091
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13092
  %5 = add i32 %4, %3, !dbg !13093
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13094
  %7 = sub i32 %5, %6, !dbg !13095
  call void @llvm.dbg.value(metadata i32 %7, metadata !13084, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i32 %2, metadata !13065, metadata !DIExpression()) #25, !dbg !13096
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13070, metadata !DIExpression()) #25, !dbg !13096
  call void @llvm.dbg.value(metadata i32 %2, metadata !13073, metadata !DIExpression()) #25, !dbg !13098
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13100, !srcloc !13079
  %8 = udiv i32 %7, 8400, !dbg !13101
  ret i32 %8, !dbg !13102
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !13103 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13014, metadata !DIExpression()) #25, !dbg !13107
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13109, !srcloc !13029
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13109
  call void @llvm.dbg.value(metadata i32 %2, metadata !13026, metadata !DIExpression()) #25, !dbg !13111
  call void @llvm.dbg.value(metadata i32 undef, metadata !13027, metadata !DIExpression()) #25, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %2, metadata !13020, metadata !DIExpression()) #25, !dbg !13107
  call void @llvm.dbg.value(metadata i32 %2, metadata !13105, metadata !DIExpression()), !dbg !13112
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13113
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13114
  %5 = add i32 %4, %3, !dbg !13115
  call void @llvm.dbg.value(metadata i32 %5, metadata !13106, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i32 %2, metadata !13065, metadata !DIExpression()) #25, !dbg !13116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13070, metadata !DIExpression()) #25, !dbg !13116
  call void @llvm.dbg.value(metadata i32 %2, metadata !13073, metadata !DIExpression()) #25, !dbg !13118
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13120, !srcloc !13079
  ret i32 %5, !dbg !13121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !13122 {
  %1 = load i32, i32* @last_load, align 4, !dbg !13123
  %2 = icmp eq i32 %1, -16777216, !dbg !13125
  br i1 %2, label %3, label %6, !dbg !13126

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13127
  %5 = or i32 %4, 1, !dbg !13127
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13127
  br label %6, !dbg !13129

6:                                                ; preds = %3, %0
  ret void, !dbg !13130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !13131 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13132
  %2 = and i32 %1, -2, !dbg !13132
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13132
  ret void, !dbg !13133
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !13134 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13160, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.value(metadata i8 %1, metadata !13161, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13162, metadata !DIExpression()), !dbg !13163
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !13164
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13164
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !13163
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13165
  %8 = load i8, i8* %6, align 4, !dbg !13166
  %9 = zext i8 %8 to i32, !dbg !13167
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !13167
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !13168
  br i1 %11, label %18, label %24, !dbg !13169

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !13163
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13165
  %14 = load i8, i8* %6, align 4, !dbg !13166
  %15 = zext i8 %14 to i32, !dbg !13167
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !13167
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !13168
  br i1 %17, label %18, label %24, !dbg !13169, !llvm.loop !13170

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !13172
  %21 = load i8, i8* %20, align 1, !dbg !13172
  %22 = icmp eq i8 %21, %1, !dbg !13175
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !13176
  br i1 %22, label %24, label %12, !dbg !13177

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !13163
  ret i32 %25, !dbg !13178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13179 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13190, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.value(metadata i8 %1, metadata !13191, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.value(metadata i32 %2, metadata !13192, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.value(metadata i32 0, metadata !13195, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.value(metadata i32 0, metadata !13196, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.value(metadata i8 0, metadata !13197, metadata !DIExpression()), !dbg !13207
  %4 = icmp eq i8 %1, 0, !dbg !13208
  br i1 %4, label %35, label %5, !dbg !13209

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !13208
  br label %9, !dbg !13209

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !13197, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %29, metadata !13195, metadata !DIExpression()), !dbg !13206
  %8 = icmp eq i32 %34, %6, !dbg !13208
  br i1 %8, label %35, label %9, !dbg !13209, !llvm.loop !13210

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13197, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %11, metadata !13195, metadata !DIExpression()), !dbg !13206
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !13212
  %13 = load i32, i32* %12, align 4, !dbg !13212
  call void @llvm.dbg.value(metadata i32 %13, metadata !13194, metadata !DIExpression()), !dbg !13206
  %14 = and i32 %13, 31, !dbg !13213
  %15 = icmp ult i32 %14, 16, !dbg !13214
  br i1 %15, label %16, label %20, !dbg !13215

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13216
  %18 = load i32, i32* %17, align 4, !dbg !13216
  %19 = or i32 %18, 32, !dbg !13218
  call void @llvm.dbg.value(metadata i32 %19, metadata !13195, metadata !DIExpression()), !dbg !13206
  br label %28, !dbg !13219

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !13220

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13221
  %23 = load i32, i32* %22, align 4, !dbg !13221
  call void @llvm.dbg.value(metadata i32 %23, metadata !13199, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !13222
  %24 = lshr i32 %23, 7, !dbg !13223
  %25 = and i32 %24, 16, !dbg !13223
  %26 = or i32 %25, %23, !dbg !13223
  call void @llvm.dbg.value(metadata i32 %26, metadata !13195, metadata !DIExpression()), !dbg !13206
  br label %28, !dbg !13224

27:                                               ; preds = %20
  br label %28, !dbg !13225

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !13206
  call void @llvm.dbg.value(metadata i32 %29, metadata !13195, metadata !DIExpression()), !dbg !13206
  %30 = lshr i32 %13, 5, !dbg !13225
  %31 = and i32 %30, 255, !dbg !13225
  call void @llvm.dbg.value(metadata i32 %31, metadata !13193, metadata !DIExpression()), !dbg !13206
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !13226
  call void @llvm.dbg.value(metadata i32 %32, metadata !13196, metadata !DIExpression()), !dbg !13206
  %33 = icmp slt i32 %32, 0, !dbg !13227
  %34 = add nuw nsw i32 %10, 1, !dbg !13229
  call void @llvm.dbg.value(metadata i32 %34, metadata !13197, metadata !DIExpression()), !dbg !13207
  br i1 %33, label %35, label %7, !dbg !13230

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !13231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !13232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13236, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.value(metadata i32 %1, metadata !13237, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.value(metadata i32 %2, metadata !13238, metadata !DIExpression()), !dbg !13240
  %4 = icmp ugt i32 %0, 175, !dbg !13241
  br i1 %4, label %16, label %5, !dbg !13243

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !13244
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !13245
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !13245
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13239, metadata !DIExpression()), !dbg !13240
  %9 = add nsw i32 %6, -8, !dbg !13246
  %10 = icmp ult i32 %9, 3, !dbg !13246
  br i1 %10, label %16, label %11, !dbg !13248

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.201(%struct.device* noundef %8) #26, !dbg !13249
  br i1 %12, label %13, label %16, !dbg !13250

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !13251
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !13252
  br label %16, !dbg !13253

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !13240
  ret i32 %17, !dbg !13254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.201(%struct.device* noundef %0) unnamed_addr #1 !dbg !13255 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13259, metadata !DIExpression()), !dbg !13260
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13261, !srcloc !13263
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.202(%struct.device* noundef %0) #26, !dbg !13264
  ret i1 %2, !dbg !13265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.202(%struct.device* noundef %0) unnamed_addr #1 !dbg !13266 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13268, metadata !DIExpression()), !dbg !13269
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !13270
  ret i1 %2, !dbg !13271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !13272 {
  ret void, !dbg !13273
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !13274 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13276, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32 0, metadata !13277, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32 2, metadata !13278, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32 0, metadata !13279, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32 2, metadata !13280, metadata !DIExpression()), !dbg !13281
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13282
  %2 = and i32 %1, 12, !dbg !13283
  call void @llvm.dbg.value(metadata i32 %2, metadata !13276, metadata !DIExpression()), !dbg !13281
  %3 = icmp eq i32 %2, 8, !dbg !13284
  br i1 %3, label %4, label %18, !dbg !13284

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13285
  call void @llvm.dbg.value(metadata i32 %5, metadata !13279, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !13281
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13287
  %7 = and i32 %6, 63, !dbg !13288
  call void @llvm.dbg.value(metadata i32 %7, metadata !13280, metadata !DIExpression()), !dbg !13281
  %8 = udiv i32 16000000, %7, !dbg !13289
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13289
  %10 = lshr i32 %9, 6, !dbg !13289
  %11 = and i32 %10, 511, !dbg !13289
  %12 = mul i32 %11, %8, !dbg !13289
  call void @llvm.dbg.value(metadata i32 %12, metadata !13277, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32 %12, metadata !13277, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32 %12, metadata !13277, metadata !DIExpression()), !dbg !13281
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13291
  %14 = lshr i32 %13, 15, !dbg !13292
  %15 = and i32 %14, 6, !dbg !13292
  %16 = add nuw nsw i32 %15, 2, !dbg !13292
  call void @llvm.dbg.value(metadata i32 %16, metadata !13278, metadata !DIExpression()), !dbg !13281
  %17 = udiv i32 %12, %16, !dbg !13293
  br label %18, !dbg !13294

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !13295
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13296
  %21 = lshr i32 %20, 4, !dbg !13297
  %22 = and i32 %21, 15, !dbg !13297
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !13298
  %24 = load i8, i8* %23, align 1, !dbg !13298
  %25 = zext i8 %24 to i32, !dbg !13298
  call void @llvm.dbg.value(metadata i32 %25, metadata !13276, metadata !DIExpression()), !dbg !13281
  %26 = lshr i32 %19, %25, !dbg !13299
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !13299
  ret void, !dbg !13300
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13301 {
  ret i32 0, !dbg !13306
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13307 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13333, metadata !DIExpression()), !dbg !13344
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13345
  br i1 %3, label %311, label %4, !dbg !13347

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13348
  %6 = load i32, i32* %5, align 4, !dbg !13348
  %7 = and i32 %6, 1, !dbg !13350
  %8 = icmp eq i32 %7, 0, !dbg !13351
  br i1 %8, label %66, label %9, !dbg !13352

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13353
  %11 = and i32 %10, 12, !dbg !13353
  %12 = icmp eq i32 %11, 4, !dbg !13356
  br i1 %12, label %21, label %13, !dbg !13357

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13358
  %15 = and i32 %14, 12, !dbg !13358
  %16 = icmp eq i32 %15, 8, !dbg !13359
  br i1 %16, label %17, label %29, !dbg !13360

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13361
  %19 = and i32 %18, 4194304, !dbg !13362
  %20 = icmp eq i32 %19, 0, !dbg !13363
  br i1 %20, label %29, label %21, !dbg !13364

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13365
  %23 = and i32 %22, 131072, !dbg !13365
  %24 = icmp eq i32 %23, 0, !dbg !13365
  br i1 %24, label %66, label %25, !dbg !13368

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13369
  %27 = load i32, i32* %26, align 4, !dbg !13369
  %28 = icmp eq i32 %27, 0, !dbg !13370
  br i1 %28, label %311, label %66, !dbg !13371

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13372
  %31 = load i32, i32* %30, align 4, !dbg !13372
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !13376

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13377
  %34 = or i32 %33, 65536, !dbg !13377
  br label %45, !dbg !13377

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13379
  %37 = or i32 %36, 262144, !dbg !13379
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13379
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13379
  %39 = or i32 %38, 65536, !dbg !13379
  br label %45, !dbg !13379

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13382
  %42 = and i32 %41, -65537, !dbg !13382
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13382
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13382
  %44 = and i32 %43, -262145, !dbg !13382
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13384
  %47 = load i32, i32* %30, align 4, !dbg !13385
  %48 = icmp eq i32 %47, 0, !dbg !13387
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !13388
  call void @llvm.dbg.value(metadata i32 %49, metadata !13334, metadata !DIExpression()), !dbg !13344
  call void @llvm.dbg.value(metadata i32 %49, metadata !13334, metadata !DIExpression()), !dbg !13344
  br i1 %48, label %58, label %50, !dbg !13389

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13390
  %52 = and i32 %51, 131072, !dbg !13392
  %53 = icmp eq i32 %52, 0, !dbg !13392
  br i1 %53, label %54, label %66, !dbg !13393

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !13394
  %56 = sub i32 %55, %49, !dbg !13397
  %57 = icmp ugt i32 %56, 100, !dbg !13398
  br i1 %57, label %311, label %50, !dbg !13399, !llvm.loop !13400

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13402
  %60 = and i32 %59, 131072, !dbg !13402
  %61 = icmp eq i32 %60, 0, !dbg !13402
  br i1 %61, label %66, label %62, !dbg !13404

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !13405
  %64 = sub i32 %63, %49, !dbg !13408
  %65 = icmp ugt i32 %64, 100, !dbg !13409
  br i1 %65, label %311, label %58, !dbg !13410, !llvm.loop !13411

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !13413
  %68 = and i32 %67, 2, !dbg !13415
  %69 = icmp eq i32 %68, 0, !dbg !13416
  br i1 %69, label %121, label %70, !dbg !13417

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13418
  %72 = and i32 %71, 12, !dbg !13418
  %73 = icmp eq i32 %72, 0, !dbg !13421
  br i1 %73, label %82, label %74, !dbg !13422

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13423
  %76 = and i32 %75, 12, !dbg !13423
  %77 = icmp eq i32 %76, 8, !dbg !13424
  br i1 %77, label %78, label %90, !dbg !13425

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13426
  %80 = and i32 %79, 4194304, !dbg !13427
  %81 = icmp eq i32 %80, 0, !dbg !13428
  br i1 %81, label %82, label %90, !dbg !13429

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13430
  %84 = and i32 %83, 2, !dbg !13430
  %85 = icmp eq i32 %84, 0, !dbg !13430
  br i1 %85, label %114, label %86, !dbg !13433

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13434
  %88 = load i32, i32* %87, align 4, !dbg !13434
  %89 = icmp eq i32 %88, 1, !dbg !13435
  br i1 %89, label %114, label %311, !dbg !13436

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13437
  %92 = load i32, i32* %91, align 4, !dbg !13437
  %93 = icmp eq i32 %92, 0, !dbg !13440
  br i1 %93, label %104, label %94, !dbg !13441

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13442
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !13444
  call void @llvm.dbg.value(metadata i32 %95, metadata !13334, metadata !DIExpression()), !dbg !13344
  br label %96, !dbg !13445

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13446
  %98 = and i32 %97, 2, !dbg !13447
  %99 = icmp eq i32 %98, 0, !dbg !13447
  br i1 %99, label %100, label %114, !dbg !13445

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !13448
  %102 = sub i32 %101, %95, !dbg !13451
  %103 = icmp ugt i32 %102, 2, !dbg !13452
  br i1 %103, label %311, label %96, !dbg !13453, !llvm.loop !13454

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13456
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !13458
  call void @llvm.dbg.value(metadata i32 %105, metadata !13334, metadata !DIExpression()), !dbg !13344
  br label %106, !dbg !13459

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13460
  %108 = and i32 %107, 2, !dbg !13460
  %109 = icmp eq i32 %108, 0, !dbg !13460
  br i1 %109, label %121, label %110, !dbg !13459

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !13461
  %112 = sub i32 %111, %105, !dbg !13464
  %113 = icmp ugt i32 %112, 2, !dbg !13465
  br i1 %113, label %311, label %106, !dbg !13466, !llvm.loop !13467

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13469
  %116 = and i32 %115, -249, !dbg !13469
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13469
  %118 = load i32, i32* %117, align 4, !dbg !13469
  %119 = shl i32 %118, 3, !dbg !13469
  %120 = or i32 %119, %116, !dbg !13469
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13469
  br label %121, !dbg !13470

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !13470
  %123 = and i32 %122, 8, !dbg !13472
  %124 = icmp eq i32 %123, 0, !dbg !13473
  br i1 %124, label %149, label %125, !dbg !13474

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13475
  %127 = load i32, i32* %126, align 4, !dbg !13475
  %128 = icmp eq i32 %127, 0, !dbg !13478
  br i1 %128, label %139, label %129, !dbg !13479

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13480
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !13482
  call void @llvm.dbg.value(metadata i32 %130, metadata !13334, metadata !DIExpression()), !dbg !13344
  br label %131, !dbg !13483

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13484
  %133 = and i32 %132, 2, !dbg !13485
  %134 = icmp eq i32 %133, 0, !dbg !13485
  br i1 %134, label %135, label %149, !dbg !13483

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !13486
  %137 = sub i32 %136, %130, !dbg !13489
  %138 = icmp ugt i32 %137, 2, !dbg !13490
  br i1 %138, label %311, label %131, !dbg !13491, !llvm.loop !13492

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13494
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !13496
  call void @llvm.dbg.value(metadata i32 %140, metadata !13334, metadata !DIExpression()), !dbg !13344
  br label %141, !dbg !13497

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13498
  %143 = and i32 %142, 2, !dbg !13498
  %144 = icmp eq i32 %143, 0, !dbg !13498
  br i1 %144, label %149, label %145, !dbg !13497

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !13499
  %147 = sub i32 %146, %140, !dbg !13502
  %148 = icmp ugt i32 %147, 2, !dbg !13503
  br i1 %148, label %311, label %141, !dbg !13504, !llvm.loop !13505

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !13507
  %151 = and i32 %150, 4, !dbg !13508
  %152 = icmp eq i32 %151, 0, !dbg !13509
  br i1 %152, label %221, label %153, !dbg !13510

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !13336, metadata !DIExpression()), !dbg !13511
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13512
  %155 = and i32 %154, 268435456, !dbg !13512
  %156 = icmp eq i32 %155, 0, !dbg !13512
  br i1 %156, label %157, label %164, !dbg !13513

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !13514
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !13514
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13340, metadata !DIExpression()), !dbg !13514
  store volatile i32 0, i32* %2, align 4, !dbg !13514
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13514
  %160 = or i32 %159, 268435456, !dbg !13514
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13514
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13514
  %162 = and i32 %161, 268435456, !dbg !13514
  store volatile i32 %162, i32* %2, align 4, !dbg !13514
  %163 = load volatile i32, i32* %2, align 4, !dbg !13514
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !13515
  call void @llvm.dbg.value(metadata i32 1, metadata !13336, metadata !DIExpression()), !dbg !13511
  br label %164, !dbg !13516

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !13336, metadata !DIExpression()), !dbg !13511
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13517
  %166 = and i32 %165, 256, !dbg !13517
  %167 = icmp eq i32 %166, 0, !dbg !13517
  br i1 %167, label %168, label %180, !dbg !13519

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13520
  %170 = or i32 %169, 256, !dbg !13520
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13520
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !13522
  call void @llvm.dbg.value(metadata i32 %171, metadata !13334, metadata !DIExpression()), !dbg !13344
  br label %172, !dbg !13523

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13524
  %174 = and i32 %173, 256, !dbg !13524
  %175 = icmp eq i32 %174, 0, !dbg !13524
  br i1 %175, label %176, label %180, !dbg !13523

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !13525
  %178 = sub i32 %177, %171, !dbg !13528
  %179 = icmp ugt i32 %178, 2, !dbg !13529
  br i1 %179, label %311, label %172, !dbg !13530, !llvm.loop !13531

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13533
  %182 = load i32, i32* %181, align 4, !dbg !13533
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !13536

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13537
  %185 = or i32 %184, 1, !dbg !13537
  br label %196, !dbg !13537

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13539
  %188 = or i32 %187, 4, !dbg !13539
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13539
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13539
  %190 = or i32 %189, 1, !dbg !13539
  br label %196, !dbg !13539

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13542
  %193 = and i32 %192, -2, !dbg !13542
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13542
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13542
  %195 = and i32 %194, -5, !dbg !13542
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13544
  %198 = load i32, i32* %181, align 4, !dbg !13545
  %199 = icmp eq i32 %198, 0, !dbg !13547
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !13548
  call void @llvm.dbg.value(metadata i32 %200, metadata !13334, metadata !DIExpression()), !dbg !13344
  call void @llvm.dbg.value(metadata i32 %200, metadata !13334, metadata !DIExpression()), !dbg !13344
  br i1 %199, label %209, label %201, !dbg !13549

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13550
  %203 = and i32 %202, 2, !dbg !13552
  %204 = icmp eq i32 %203, 0, !dbg !13552
  br i1 %204, label %205, label %217, !dbg !13553

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !13554
  %207 = sub i32 %206, %200, !dbg !13557
  %208 = icmp ugt i32 %207, 5000, !dbg !13558
  br i1 %208, label %311, label %201, !dbg !13559, !llvm.loop !13560

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13562
  %211 = and i32 %210, 2, !dbg !13562
  %212 = icmp eq i32 %211, 0, !dbg !13562
  br i1 %212, label %217, label %213, !dbg !13564

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !13565
  %215 = sub i32 %214, %200, !dbg !13568
  %216 = icmp ugt i32 %215, 5000, !dbg !13569
  br i1 %216, label %311, label %209, !dbg !13570, !llvm.loop !13571

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !13573

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13574
  %220 = and i32 %219, -268435457, !dbg !13574
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13574
  br label %221, !dbg !13577

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13578
  %223 = load i32, i32* %222, align 4, !dbg !13578
  %224 = icmp eq i32 %223, 0, !dbg !13580
  br i1 %224, label %310, label %225, !dbg !13581

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13582
  %227 = and i32 %226, 12, !dbg !13582
  %228 = icmp eq i32 %227, 8, !dbg !13585
  br i1 %228, label %277, label %229, !dbg !13586

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !13587
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13590
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %231, metadata !13334, metadata !DIExpression()), !dbg !13344
  call void @llvm.dbg.value(metadata i32 %231, metadata !13334, metadata !DIExpression()), !dbg !13344
  br i1 %230, label %232, label %269, !dbg !13591

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13592
  %234 = and i32 %233, 33554432, !dbg !13592
  %235 = icmp eq i32 %234, 0, !dbg !13592
  br i1 %235, label %240, label %236, !dbg !13594

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !13595
  %238 = sub i32 %237, %231, !dbg !13598
  %239 = icmp ugt i32 %238, 2, !dbg !13599
  br i1 %239, label %311, label %232, !dbg !13600, !llvm.loop !13601

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13603
  %242 = load i32, i32* %241, align 4, !dbg !13603
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13603
  %244 = load i32, i32* %243, align 4, !dbg !13603
  %245 = or i32 %244, %242, !dbg !13603
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13603
  %247 = load i32, i32* %246, align 4, !dbg !13603
  %248 = shl i32 %247, 6, !dbg !13603
  %249 = or i32 %245, %248, !dbg !13603
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13603
  %251 = load i32, i32* %250, align 4, !dbg !13603
  %252 = shl i32 %251, 15, !dbg !13603
  %253 = add i32 %252, -65536, !dbg !13603
  %254 = and i32 %253, -65536, !dbg !13603
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13603
  %256 = load i32, i32* %255, align 4, !dbg !13603
  %257 = shl i32 %256, 24, !dbg !13603
  %258 = or i32 %249, %257, !dbg !13603
  %259 = or i32 %258, %254, !dbg !13603
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13603
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13604
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !13605
  call void @llvm.dbg.value(metadata i32 %260, metadata !13334, metadata !DIExpression()), !dbg !13344
  br label %261, !dbg !13606

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13607
  %263 = and i32 %262, 33554432, !dbg !13608
  %264 = icmp eq i32 %263, 0, !dbg !13608
  br i1 %264, label %265, label %310, !dbg !13606

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !13609
  %267 = sub i32 %266, %260, !dbg !13612
  %268 = icmp ugt i32 %267, 2, !dbg !13613
  br i1 %268, label %311, label %261, !dbg !13614, !llvm.loop !13615

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13617
  %271 = and i32 %270, 33554432, !dbg !13617
  %272 = icmp eq i32 %271, 0, !dbg !13617
  br i1 %272, label %310, label %273, !dbg !13619

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !13620
  %275 = sub i32 %274, %231, !dbg !13623
  %276 = icmp ugt i32 %275, 2, !dbg !13624
  br i1 %276, label %311, label %269, !dbg !13625, !llvm.loop !13626

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !13628
  br i1 %278, label %311, label %279, !dbg !13631

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13632
  call void @llvm.dbg.value(metadata i32 %280, metadata !13335, metadata !DIExpression()), !dbg !13344
  %281 = and i32 %280, 4194304, !dbg !13634
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13636
  %283 = load i32, i32* %282, align 4, !dbg !13636
  %284 = icmp eq i32 %281, %283, !dbg !13637
  br i1 %284, label %285, label %311, !dbg !13638

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !13639
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13640
  %288 = load i32, i32* %287, align 4, !dbg !13640
  %289 = icmp eq i32 %286, %288, !dbg !13641
  br i1 %289, label %290, label %311, !dbg !13642

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !13643
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13644
  %293 = load i32, i32* %292, align 4, !dbg !13644
  %294 = shl i32 %293, 6, !dbg !13645
  %295 = icmp eq i32 %291, %294, !dbg !13646
  br i1 %295, label %296, label %311, !dbg !13647

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !13648
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13649
  %299 = load i32, i32* %298, align 4, !dbg !13649
  %300 = shl i32 %299, 15, !dbg !13650
  %301 = add i32 %300, -65536, !dbg !13650
  %302 = and i32 %301, -65536, !dbg !13650
  %303 = icmp eq i32 %297, %302, !dbg !13651
  br i1 %303, label %304, label %311, !dbg !13652

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !13653
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13654
  %307 = load i32, i32* %306, align 4, !dbg !13654
  %308 = shl i32 %307, 24, !dbg !13655
  %309 = icmp eq i32 %305, %308, !dbg !13656
  br i1 %309, label %310, label %311, !dbg !13657

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !13658

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !13344
  ret i32 %312, !dbg !13659
}

; Function Attrs: optsize
declare !dbg !13660 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13662 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13675, metadata !DIExpression()), !dbg !13678
  call void @llvm.dbg.value(metadata i32 %1, metadata !13676, metadata !DIExpression()), !dbg !13678
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !13679
  br i1 %3, label %115, label %4, !dbg !13681

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13682
  %6 = and i32 %5, 7, !dbg !13682
  %7 = icmp ult i32 %6, %1, !dbg !13684
  br i1 %7, label %8, label %13, !dbg !13685

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !13686
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13686
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13688
  %11 = and i32 %10, 7, !dbg !13688
  %12 = icmp eq i32 %11, %1, !dbg !13690
  br i1 %12, label %13, label %115, !dbg !13691

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13692
  %15 = load i32, i32* %14, align 4, !dbg !13692
  %16 = and i32 %15, 2, !dbg !13694
  %17 = icmp eq i32 %16, 0, !dbg !13695
  br i1 %17, label %39, label %18, !dbg !13696

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !13697
  %20 = icmp eq i32 %19, 0, !dbg !13700
  br i1 %20, label %25, label %21, !dbg !13701

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13702
  %23 = or i32 %22, 7168, !dbg !13702
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13702
  %24 = load i32, i32* %14, align 4, !dbg !13704
  br label %25, !dbg !13706

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !13704
  %27 = and i32 %26, 8, !dbg !13707
  %28 = icmp eq i32 %27, 0, !dbg !13708
  br i1 %28, label %32, label %29, !dbg !13709

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13710
  %31 = or i32 %30, 57344, !dbg !13710
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13710
  br label %32, !dbg !13712

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13713
  %34 = and i32 %33, -241, !dbg !13713
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13713
  %36 = load i32, i32* %35, align 4, !dbg !13713
  %37 = or i32 %34, %36, !dbg !13713
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13713
  %38 = load i32, i32* %14, align 4, !dbg !13714
  br label %39, !dbg !13716

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !13714
  %41 = and i32 %40, 1, !dbg !13717
  %42 = icmp eq i32 %41, 0, !dbg !13718
  br i1 %42, label %73, label %43, !dbg !13719

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13720
  %45 = load i32, i32* %44, align 4, !dbg !13720
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !13723

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13724
  %48 = and i32 %47, 131072, !dbg !13727
  %49 = icmp eq i32 %48, 0, !dbg !13727
  br i1 %49, label %115, label %58, !dbg !13728

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13729
  %52 = and i32 %51, 33554432, !dbg !13733
  %53 = icmp eq i32 %52, 0, !dbg !13733
  br i1 %53, label %115, label %58, !dbg !13734

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13735
  %56 = and i32 %55, 2, !dbg !13738
  %57 = icmp eq i32 %56, 0, !dbg !13738
  br i1 %57, label %115, label %58, !dbg !13739

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13740
  %60 = and i32 %59, -4, !dbg !13740
  %61 = or i32 %60, %45, !dbg !13740
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13740
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !13741
  call void @llvm.dbg.value(metadata i32 %62, metadata !13677, metadata !DIExpression()), !dbg !13678
  br label %63, !dbg !13742

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13743
  %65 = and i32 %64, 12, !dbg !13743
  %66 = load i32, i32* %44, align 4, !dbg !13744
  %67 = shl i32 %66, 2, !dbg !13745
  %68 = icmp eq i32 %65, %67, !dbg !13746
  br i1 %68, label %73, label %69, !dbg !13742

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !13747
  %71 = sub i32 %70, %62, !dbg !13750
  %72 = icmp ugt i32 %71, 5000, !dbg !13751
  br i1 %72, label %115, label %63, !dbg !13752, !llvm.loop !13753

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13755
  %75 = and i32 %74, 7, !dbg !13755
  %76 = icmp ugt i32 %75, %1, !dbg !13757
  br i1 %76, label %77, label %82, !dbg !13758

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !13759
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13759
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13761
  %80 = and i32 %79, 7, !dbg !13761
  %81 = icmp eq i32 %80, %1, !dbg !13763
  br i1 %81, label %82, label %115, !dbg !13764

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !13765
  %84 = and i32 %83, 4, !dbg !13767
  %85 = icmp eq i32 %84, 0, !dbg !13768
  br i1 %85, label %93, label %86, !dbg !13769

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13770
  %88 = and i32 %87, -7169, !dbg !13770
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13770
  %90 = load i32, i32* %89, align 4, !dbg !13770
  %91 = or i32 %88, %90, !dbg !13770
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13770
  %92 = load i32, i32* %14, align 4, !dbg !13772
  br label %93, !dbg !13774

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !13772
  %95 = and i32 %94, 8, !dbg !13775
  %96 = icmp eq i32 %95, 0, !dbg !13776
  br i1 %96, label %104, label %97, !dbg !13777

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13778
  %99 = and i32 %98, -57345, !dbg !13778
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13778
  %101 = load i32, i32* %100, align 4, !dbg !13778
  %102 = shl i32 %101, 3, !dbg !13778
  %103 = or i32 %102, %99, !dbg !13778
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13778
  br label %104, !dbg !13780

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !13781
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13782
  %107 = lshr i32 %106, 4, !dbg !13783
  %108 = and i32 %107, 15, !dbg !13783
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !13784
  %110 = load i8, i8* %109, align 1, !dbg !13784
  %111 = zext i8 %110 to i32, !dbg !13784
  %112 = lshr i32 %105, %111, !dbg !13785
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !13786
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !13787
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !13788
  br label %115, !dbg !13789

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !13678
  ret i32 %116, !dbg !13790
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !13791 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13793, metadata !DIExpression()), !dbg !13797
  call void @llvm.dbg.value(metadata i32 0, metadata !13794, metadata !DIExpression()), !dbg !13797
  call void @llvm.dbg.value(metadata i32 0, metadata !13795, metadata !DIExpression()), !dbg !13797
  call void @llvm.dbg.value(metadata i32 0, metadata !13796, metadata !DIExpression()), !dbg !13797
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13798
  %2 = and i32 %1, 12, !dbg !13799
  %3 = icmp eq i32 %2, 8, !dbg !13800
  br i1 %3, label %4, label %21, !dbg !13800

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13801
  %6 = and i32 %5, 63, !dbg !13804
  call void @llvm.dbg.value(metadata i32 %6, metadata !13793, metadata !DIExpression()), !dbg !13797
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13805
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13807
  %9 = lshr i32 %8, 6, !dbg !13807
  %10 = and i32 %9, 511, !dbg !13807
  %11 = zext i32 %10 to i64, !dbg !13807
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !13807
  %13 = zext i32 %6 to i64, !dbg !13807
  %14 = udiv i64 %12, %13, !dbg !13807
  %15 = trunc i64 %14 to i32, !dbg !13807
  call void @llvm.dbg.value(metadata i32 %15, metadata !13794, metadata !DIExpression()), !dbg !13797
  call void @llvm.dbg.value(metadata i32 %15, metadata !13794, metadata !DIExpression()), !dbg !13797
  call void @llvm.dbg.value(metadata i32 %15, metadata !13794, metadata !DIExpression()), !dbg !13797
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13808
  %17 = lshr i32 %16, 15, !dbg !13809
  %18 = and i32 %17, 6, !dbg !13809
  %19 = add nuw nsw i32 %18, 2, !dbg !13809
  call void @llvm.dbg.value(metadata i32 %19, metadata !13795, metadata !DIExpression()), !dbg !13797
  %20 = udiv i32 %15, %19, !dbg !13810
  call void @llvm.dbg.value(metadata i32 %20, metadata !13796, metadata !DIExpression()), !dbg !13797
  br label %21, !dbg !13811

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !13812
  call void @llvm.dbg.value(metadata i32 %22, metadata !13796, metadata !DIExpression()), !dbg !13797
  ret i32 %22, !dbg !13813
}

; Function Attrs: optsize
declare !dbg !13814 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13817 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13821, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata i32 %1, metadata !13822, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata i32 %2, metadata !13823, metadata !DIExpression()), !dbg !13841
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !13842
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !13842
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !13824, metadata !DIExpression()), !dbg !13843
  %8 = icmp eq i32 %0, 0, !dbg !13844
  br i1 %8, label %9, label %23, !dbg !13845

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !13846
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !13846
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13834, metadata !DIExpression()), !dbg !13846
  store volatile i32 0, i32* %5, align 4, !dbg !13846
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13846
  %12 = or i32 %11, 1, !dbg !13846
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13846
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13846
  %14 = and i32 %13, 1, !dbg !13846
  store volatile i32 %14, i32* %5, align 4, !dbg !13846
  %15 = load volatile i32, i32* %5, align 4, !dbg !13846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !13847
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13848
  store i32 256, i32* %16, align 4, !dbg !13849
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13850
  store i32 2, i32* %17, align 4, !dbg !13851
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13852
  store i32 3, i32* %18, align 4, !dbg !13853
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13854
  store i32 0, i32* %19, align 4, !dbg !13855
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13856
  store i32 0, i32* %20, align 4, !dbg !13857
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !13858
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13859
  %22 = and i32 %21, -123731969, !dbg !13859
  br label %38, !dbg !13860

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !13861
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !13861
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13838, metadata !DIExpression()), !dbg !13861
  store volatile i32 0, i32* %6, align 4, !dbg !13861
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13861
  %26 = or i32 %25, 4, !dbg !13861
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13861
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13861
  %28 = and i32 %27, 4, !dbg !13861
  store volatile i32 %28, i32* %6, align 4, !dbg !13861
  %29 = load volatile i32, i32* %6, align 4, !dbg !13861
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !13862
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13863
  store i32 512, i32* %30, align 4, !dbg !13864
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13865
  store i32 2, i32* %31, align 4, !dbg !13866
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13867
  store i32 3, i32* %32, align 4, !dbg !13868
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13869
  store i32 0, i32* %33, align 4, !dbg !13870
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13871
  store i32 0, i32* %34, align 4, !dbg !13872
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !13873
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13874
  %36 = and i32 %35, 134217727, !dbg !13874
  %37 = shl i32 %2, 3, !dbg !13874
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !13875
  %42 = or i32 %41, %40, !dbg !13875
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13875
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !13876
  ret void, !dbg !13876
}

; Function Attrs: optsize
declare !dbg !13877 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !13881 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13882
  ret void, !dbg !13883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !13884 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13885
  ret void, !dbg !13886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !13887 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13888
  ret i32 %1, !dbg !13889
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !13890 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !13891
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13892
  %3 = lshr i32 %2, 10, !dbg !13893
  %4 = and i32 %3, 7, !dbg !13893
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13894
  %6 = load i8, i8* %5, align 1, !dbg !13894
  %7 = zext i8 %6 to i32, !dbg !13894
  %8 = lshr i32 %1, %7, !dbg !13895
  ret i32 %8, !dbg !13896
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !13897 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !13898
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13899
  %3 = lshr i32 %2, 13, !dbg !13900
  %4 = and i32 %3, 7, !dbg !13900
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13901
  %6 = load i8, i8* %5, align 1, !dbg !13901
  %7 = zext i8 %6 to i32, !dbg !13901
  %8 = lshr i32 %1, %7, !dbg !13902
  ret i32 %8, !dbg !13903
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13904 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13908, metadata !DIExpression()), !dbg !13909
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13910
  store i32 15, i32* %2, align 4, !dbg !13911
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13912
  %4 = and i32 %3, 262144, !dbg !13914
  %5 = icmp eq i32 %4, 0, !dbg !13915
  br i1 %5, label %8, label %6, !dbg !13916

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13917
  store i32 327680, i32* %7, align 4, !dbg !13919
  br label %15, !dbg !13920

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13921
  %10 = and i32 %9, 65536, !dbg !13923
  %11 = icmp eq i32 %10, 0, !dbg !13924
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13925
  br i1 %11, label %14, label %13, !dbg !13926

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13927
  br label %15, !dbg !13929

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13930
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13932
  %17 = and i32 %16, 1, !dbg !13934
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13935
  store i32 %17, i32* %18, align 4, !dbg !13937
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13938
  %20 = lshr i32 %19, 3, !dbg !13939
  %21 = and i32 %20, 31, !dbg !13939
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13940
  store i32 %21, i32* %22, align 4, !dbg !13941
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13942
  %24 = and i32 %23, 4, !dbg !13944
  %25 = icmp eq i32 %24, 0, !dbg !13945
  br i1 %25, label %28, label %26, !dbg !13946

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13947
  store i32 5, i32* %27, align 4, !dbg !13949
  br label %35, !dbg !13950

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13951
  %30 = and i32 %29, 1, !dbg !13953
  %31 = icmp eq i32 %30, 0, !dbg !13954
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13955
  br i1 %31, label %34, label %33, !dbg !13956

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13957
  br label %35, !dbg !13959

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13960
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13962
  %37 = and i32 %36, 1, !dbg !13964
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13965
  store i32 %37, i32* %38, align 4, !dbg !13967
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13968
  %40 = and i32 %39, 16777216, !dbg !13970
  %41 = icmp eq i32 %40, 0, !dbg !13971
  %42 = select i1 %41, i32 1, i32 2, !dbg !13972
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13973
  store i32 %42, i32* %43, align 4, !dbg !13975
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13976
  %45 = and i32 %44, 4194304, !dbg !13977
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13978
  store i32 %45, i32* %46, align 4, !dbg !13979
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13980
  %48 = and i32 %47, 63, !dbg !13981
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13982
  store i32 %48, i32* %49, align 4, !dbg !13983
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13984
  %51 = lshr i32 %50, 6, !dbg !13985
  %52 = and i32 %51, 511, !dbg !13985
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13986
  store i32 %52, i32* %53, align 4, !dbg !13987
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13988
  %55 = shl i32 %54, 1, !dbg !13989
  %56 = and i32 %55, 393216, !dbg !13989
  %57 = add nuw nsw i32 %56, 131072, !dbg !13989
  %58 = lshr exact i32 %57, 16, !dbg !13990
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13991
  store i32 %58, i32* %59, align 4, !dbg !13992
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13993
  %61 = lshr i32 %60, 24, !dbg !13994
  %62 = and i32 %61, 15, !dbg !13994
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13995
  store i32 %62, i32* %63, align 4, !dbg !13996
  ret void, !dbg !13997
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !13998 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !14002, metadata !DIExpression()), !dbg !14004
  call void @llvm.dbg.value(metadata i32* %1, metadata !14003, metadata !DIExpression()), !dbg !14004
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !14005
  store i32 15, i32* %3, align 4, !dbg !14006
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14007
  %5 = and i32 %4, 3, !dbg !14008
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !14009
  store i32 %5, i32* %6, align 4, !dbg !14010
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14011
  %8 = and i32 %7, 240, !dbg !14012
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !14013
  store i32 %8, i32* %9, align 4, !dbg !14014
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14015
  %11 = and i32 %10, 7168, !dbg !14016
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !14017
  store i32 %11, i32* %12, align 4, !dbg !14018
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14019
  %14 = lshr i32 %13, 3, !dbg !14020
  %15 = and i32 %14, 7168, !dbg !14020
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !14021
  store i32 %15, i32* %16, align 4, !dbg !14022
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14023
  %18 = and i32 %17, 7, !dbg !14024
  store i32 %18, i32* %1, align 4, !dbg !14025
  ret void, !dbg !14026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !14027 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14028
  %2 = and i32 %1, 128, !dbg !14028
  %3 = icmp eq i32 %2, 0, !dbg !14028
  br i1 %3, label %5, label %4, !dbg !14030

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !14031
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !14033
  br label %5, !dbg !14034

5:                                                ; preds = %4, %0
  ret void, !dbg !14035
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !14036 {
  ret void, !dbg !14037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !14038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14041, metadata !DIExpression()), !dbg !14042
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !14043
  ret void, !dbg !14044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !14045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14048, metadata !DIExpression()), !dbg !14050
  call void @llvm.dbg.value(metadata i32 1000, metadata !14049, metadata !DIExpression()), !dbg !14050
  %2 = udiv i32 %0, 1000, !dbg !14051
  %3 = add nsw i32 %2, -1, !dbg !14052
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !14053
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14054
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14055
  ret void, !dbg !14056
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !14057 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14059, metadata !DIExpression()), !dbg !14061
  %3 = bitcast i32* %2 to i8*, !dbg !14062
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !14062
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14060, metadata !DIExpression()), !dbg !14063
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14064
  store volatile i32 %4, i32* %2, align 4, !dbg !14063
  %5 = load volatile i32, i32* %2, align 4, !dbg !14065
  %6 = icmp eq i32 %0, -1, !dbg !14066
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14059, metadata !DIExpression()), !dbg !14061
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !14061
  call void @llvm.dbg.value(metadata i32 %8, metadata !14059, metadata !DIExpression()), !dbg !14061
  br label %9, !dbg !14068

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !14059, metadata !DIExpression()), !dbg !14061
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14069
  call void @llvm.dbg.value(metadata i32 undef, metadata !14059, metadata !DIExpression()), !dbg !14061
  %12 = shl i32 %11, 15, !dbg !14061
  %13 = ashr i32 %12, 31, !dbg !14061
  %14 = add i32 %13, %10, !dbg !14061
  call void @llvm.dbg.value(metadata i32 %14, metadata !14059, metadata !DIExpression()), !dbg !14061
  %15 = icmp eq i32 %14, 0, !dbg !14068
  br i1 %15, label %16, label %9, !dbg !14068

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !14072
  ret void, !dbg !14072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !14073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14075, metadata !DIExpression()), !dbg !14076
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !14077
  ret void, !dbg !14078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !14079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14084, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i32 0, metadata !14087, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i32 0, metadata !14088, metadata !DIExpression()), !dbg !14089
  %2 = icmp eq i32 %0, 0, !dbg !14090
  br i1 %2, label %35, label %3, !dbg !14092

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14093
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14096
  %6 = icmp eq i32 %5, 32768, !dbg !14098
  br i1 %6, label %7, label %12, !dbg !14099

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !14100
  br i1 %8, label %12, label %9, !dbg !14103

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !14104
  %11 = zext i1 %10 to i32, !dbg !14107
  call void @llvm.dbg.value(metadata i32 %11, metadata !14087, metadata !DIExpression()), !dbg !14089
  br label %12, !dbg !14107

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !14089
  call void @llvm.dbg.value(metadata i32 %13, metadata !14087, metadata !DIExpression()), !dbg !14089
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14108
  %15 = icmp eq i32 %14, 16384, !dbg !14110
  br i1 %15, label %16, label %24, !dbg !14111

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !14112
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !14115
  br i1 %19, label %24, label %20, !dbg !14115

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !14116
  %22 = and i1 %21, %18, !dbg !14119
  %23 = select i1 %22, i32 1, i32 %13, !dbg !14119
  call void @llvm.dbg.value(metadata i32 %23, metadata !14087, metadata !DIExpression()), !dbg !14089
  br label %24, !dbg !14119

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !14120
  call void @llvm.dbg.value(metadata i32 %25, metadata !14087, metadata !DIExpression()), !dbg !14089
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #26, !dbg !14121
  call void @llvm.dbg.value(metadata i32 2, metadata !14085, metadata !DIExpression()), !dbg !14089
  br label %26, !dbg !14122

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !14120
  call void @llvm.dbg.value(metadata i32 %27, metadata !14085, metadata !DIExpression()), !dbg !14089
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !14123
  call void @llvm.dbg.value(metadata i32 %28, metadata !14086, metadata !DIExpression()), !dbg !14089
  %29 = add nsw i32 %27, -1, !dbg !14125
  call void @llvm.dbg.value(metadata i32 %29, metadata !14085, metadata !DIExpression()), !dbg !14089
  %30 = icmp ne i32 %28, %25, !dbg !14126
  %31 = icmp ne i32 %29, 0, !dbg !14127
  %32 = select i1 %30, i1 %31, i1 false, !dbg !14127
  br i1 %32, label %26, label %33, !dbg !14128, !llvm.loop !14129

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !14131
  call void @llvm.dbg.value(metadata i32 %36, metadata !14088, metadata !DIExpression()), !dbg !14089
  ret i32 %36, !dbg !14132
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !14133 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14135
  %2 = and i32 %1, 49152, !dbg !14135
  ret i32 %2, !dbg !14136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !14137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14139, metadata !DIExpression()), !dbg !14140
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14141
  %3 = and i32 %2, -8, !dbg !14141
  %4 = or i32 %3, %0, !dbg !14141
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14141
  ret void, !dbg !14142
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !14143 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14144
  %2 = and i32 %1, 7, !dbg !14144
  ret i32 %2, !dbg !14145
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !14146 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !14164, metadata !DIExpression()), !dbg !14168
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14165, metadata !DIExpression()), !dbg !14168
  call void @llvm.dbg.value(metadata i32 0, metadata !14166, metadata !DIExpression()), !dbg !14168
  call void @llvm.dbg.value(metadata i32 0, metadata !14167, metadata !DIExpression()), !dbg !14168
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14169
  %4 = icmp eq i32 %3, 0, !dbg !14171
  br i1 %4, label %5, label %21, !dbg !14172

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !14173
  call void @llvm.dbg.value(metadata i32 %6, metadata !14167, metadata !DIExpression()), !dbg !14168
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.211() #26, !dbg !14175
  %8 = icmp eq i32 %7, 1, !dbg !14177
  br i1 %8, label %13, label %9, !dbg !14178

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.212() #26, !dbg !14179
  br label %10, !dbg !14181

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.211() #26, !dbg !14182
  %12 = icmp eq i32 %11, 1, !dbg !14183
  br i1 %12, label %13, label %10, !dbg !14181, !llvm.loop !14184

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !14186
  %15 = load i32, i32* %14, align 4, !dbg !14186
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !14187
  %17 = load i32, i32* %16, align 4, !dbg !14187
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !14188
  %19 = load i32, i32* %18, align 4, !dbg !14188
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.213(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !14189
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !14190
  call void @llvm.dbg.value(metadata i32 %20, metadata !14166, metadata !DIExpression()), !dbg !14168
  br label %21, !dbg !14191

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !14192
  call void @llvm.dbg.value(metadata i32 %22, metadata !14166, metadata !DIExpression()), !dbg !14168
  ret i32 %22, !dbg !14193
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !14194 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14198, metadata !DIExpression()), !dbg !14199
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.215() #26, !dbg !14200
  %2 = icmp ne i32 %1, 0, !dbg !14202
  call void @llvm.dbg.value(metadata i1 %2, metadata !14198, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14199
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !14203
  %4 = icmp ne i32 %3, 0, !dbg !14205
  %5 = select i1 %4, i1 true, i1 %2, !dbg !14206
  %6 = zext i1 %5 to i32, !dbg !14206
  call void @llvm.dbg.value(metadata i32 %6, metadata !14198, metadata !DIExpression()), !dbg !14199
  ret i32 %6, !dbg !14207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !14208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14212, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14213, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i32 0, metadata !14214, metadata !DIExpression()), !dbg !14215
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14216
  %4 = load i32, i32* %3, align 4, !dbg !14216
  %5 = and i32 %4, 63, !dbg !14217
  %6 = udiv i32 %0, %5, !dbg !14218
  call void @llvm.dbg.value(metadata i32 %6, metadata !14214, metadata !DIExpression()), !dbg !14215
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14219
  %8 = load i32, i32* %7, align 4, !dbg !14219
  %9 = and i32 %8, 511, !dbg !14220
  %10 = mul i32 %9, %6, !dbg !14221
  call void @llvm.dbg.value(metadata i32 %10, metadata !14214, metadata !DIExpression()), !dbg !14215
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14222
  %12 = load i32, i32* %11, align 4, !dbg !14222
  %13 = lshr i32 %12, 15, !dbg !14223
  %14 = and i32 %13, 131070, !dbg !14223
  %15 = add nuw nsw i32 %14, 2, !dbg !14223
  %16 = udiv i32 %10, %15, !dbg !14224
  call void @llvm.dbg.value(metadata i32 %16, metadata !14214, metadata !DIExpression()), !dbg !14215
  ret i32 %16, !dbg !14225
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.211() unnamed_addr #17 !dbg !14226 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14227
  %2 = lshr i32 %1, 1, !dbg !14228
  %3 = and i32 %2, 1, !dbg !14228
  ret i32 %3, !dbg !14229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.212() unnamed_addr #15 !dbg !14230 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14231
  %2 = or i32 %1, 1, !dbg !14231
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14231
  ret void, !dbg !14232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.213(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !14233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14235, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i32 %1, metadata !14236, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i32 %2, metadata !14237, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i32 %3, metadata !14238, metadata !DIExpression()), !dbg !14239
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14240
  %6 = and i32 %5, -4227072, !dbg !14240
  %7 = or i32 %1, %0, !dbg !14240
  %8 = shl i32 %2, 6, !dbg !14240
  %9 = or i32 %7, %8, !dbg !14240
  %10 = or i32 %9, %6, !dbg !14240
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14240
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14241
  %12 = and i32 %11, -196609, !dbg !14241
  %13 = or i32 %12, %3, !dbg !14241
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14241
  ret void, !dbg !14242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !14243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14247, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14248, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata i32 0, metadata !14249, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata i32 0, metadata !14250, metadata !DIExpression()), !dbg !14251
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14252
  %4 = load i32, i32* %3, align 4, !dbg !14252
  %5 = lshr i32 %4, 4, !dbg !14252
  %6 = and i32 %5, 15, !dbg !14252
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14252
  %8 = load i8, i8* %7, align 1, !dbg !14252
  %9 = zext i8 %8 to i32, !dbg !14252
  %10 = lshr i32 %0, %9, !dbg !14252
  call void @llvm.dbg.value(metadata i32 %10, metadata !14250, metadata !DIExpression()), !dbg !14251
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14253
  %12 = icmp ult i32 %11, %10, !dbg !14255
  br i1 %12, label %13, label %16, !dbg !14256

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14257
  call void @llvm.dbg.value(metadata i32 %14, metadata !14249, metadata !DIExpression()), !dbg !14251
  %15 = icmp eq i32 %14, 0, !dbg !14259
  br i1 %15, label %16, label %30, !dbg !14261

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.214() #26, !dbg !14262
  br label %17, !dbg !14264

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.215() #26, !dbg !14265
  %19 = icmp eq i32 %18, 1, !dbg !14266
  br i1 %19, label %20, label %17, !dbg !14264, !llvm.loop !14267

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14269
  tail call fastcc void @LL_RCC_SetAHBPrescaler.216(i32 noundef %21) #26, !dbg !14270
  tail call fastcc void @LL_RCC_SetSysClkSource.217() #26, !dbg !14271
  br label %22, !dbg !14272

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.218() #26, !dbg !14273
  %24 = icmp eq i32 %23, 8, !dbg !14274
  br i1 %24, label %25, label %22, !dbg !14272, !llvm.loop !14275

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14277
  %27 = load i32, i32* %26, align 4, !dbg !14277
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.219(i32 noundef %27) #26, !dbg !14278
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14279
  %29 = load i32, i32* %28, align 4, !dbg !14279
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.220(i32 noundef %29) #26, !dbg !14280
  br label %30, !dbg !14281

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14282
  %33 = icmp ugt i32 %32, %10, !dbg !14284
  br i1 %33, label %34, label %36, !dbg !14285

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14286
  call void @llvm.dbg.value(metadata i32 %35, metadata !14249, metadata !DIExpression()), !dbg !14251
  br label %36, !dbg !14288

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14251
  call void @llvm.dbg.value(metadata i32 %37, metadata !14249, metadata !DIExpression()), !dbg !14251
  %38 = icmp eq i32 %37, 0, !dbg !14289
  br i1 %38, label %39, label %40, !dbg !14291

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !14292
  br label %40, !dbg !14294

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.214() unnamed_addr #15 !dbg !14296 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14297
  %2 = or i32 %1, 16777216, !dbg !14297
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14297
  ret void, !dbg !14298
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.215() unnamed_addr #17 !dbg !14299 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14300
  %2 = lshr i32 %1, 25, !dbg !14301
  %3 = and i32 %2, 1, !dbg !14301
  ret i32 %3, !dbg !14302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.216(i32 noundef %0) unnamed_addr #15 !dbg !14303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14305, metadata !DIExpression()), !dbg !14306
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14307
  %3 = and i32 %2, -241, !dbg !14307
  %4 = or i32 %3, %0, !dbg !14307
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14307
  ret void, !dbg !14308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.217() unnamed_addr #15 !dbg !14309 {
  call void @llvm.dbg.value(metadata i32 2, metadata !14311, metadata !DIExpression()), !dbg !14312
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14313
  %2 = and i32 %1, -4, !dbg !14313
  %3 = or i32 %2, 2, !dbg !14313
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14313
  ret void, !dbg !14314
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.218() unnamed_addr #17 !dbg !14315 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14316
  %2 = and i32 %1, 12, !dbg !14316
  ret i32 %2, !dbg !14317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.219(i32 noundef %0) unnamed_addr #15 !dbg !14318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14320, metadata !DIExpression()), !dbg !14321
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14322
  %3 = and i32 %2, -7169, !dbg !14322
  %4 = or i32 %3, %0, !dbg !14322
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14322
  ret void, !dbg !14323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.220(i32 noundef %0) unnamed_addr #15 !dbg !14324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14326, metadata !DIExpression()), !dbg !14327
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14328
  %3 = and i32 %2, -57345, !dbg !14328
  %4 = or i32 %3, %0, !dbg !14328
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14328
  ret void, !dbg !14329
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !14330 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14331
  %2 = lshr i32 %1, 27, !dbg !14332
  %3 = and i32 %2, 1, !dbg !14332
  ret i32 %3, !dbg !14333
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !14334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14338, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 %1, metadata !14339, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14340, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14341, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 0, metadata !14342, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 0, metadata !14343, metadata !DIExpression()), !dbg !14344
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14345
  %6 = icmp eq i32 %5, 0, !dbg !14347
  br i1 %6, label %7, label %27, !dbg !14348

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !14349
  call void @llvm.dbg.value(metadata i32 %8, metadata !14343, metadata !DIExpression()), !dbg !14344
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.221() #26, !dbg !14351
  %10 = icmp eq i32 %9, 1, !dbg !14353
  br i1 %10, label %19, label %11, !dbg !14354

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14355
  br i1 %12, label %13, label %14, !dbg !14358

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !14359
  br label %15, !dbg !14361

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.222() #26, !dbg !14362
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.223() #26, !dbg !14364
  br label %16, !dbg !14365

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.221() #26, !dbg !14366
  %18 = icmp eq i32 %17, 1, !dbg !14367
  br i1 %18, label %19, label %16, !dbg !14365, !llvm.loop !14368

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !14370
  %21 = load i32, i32* %20, align 4, !dbg !14370
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !14371
  %23 = load i32, i32* %22, align 4, !dbg !14371
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !14372
  %25 = load i32, i32* %24, align 4, !dbg !14372
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.213(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !14373
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !14374
  call void @llvm.dbg.value(metadata i32 %26, metadata !14342, metadata !DIExpression()), !dbg !14344
  br label %27, !dbg !14375

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !14376
  call void @llvm.dbg.value(metadata i32 %28, metadata !14342, metadata !DIExpression()), !dbg !14344
  ret i32 %28, !dbg !14377
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.221() unnamed_addr #17 !dbg !14378 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14379
  %2 = lshr i32 %1, 17, !dbg !14380
  %3 = and i32 %2, 1, !dbg !14380
  ret i32 %3, !dbg !14381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !14382 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14383
  %2 = or i32 %1, 262144, !dbg !14383
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14383
  ret void, !dbg !14384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.222() unnamed_addr #15 !dbg !14385 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14386
  %2 = and i32 %1, -262145, !dbg !14386
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14386
  ret void, !dbg !14387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.223() unnamed_addr #15 !dbg !14388 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14389
  %2 = or i32 %1, 65536, !dbg !14389
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14389
  ret void, !dbg !14390
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !14391 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14394, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata i32 undef, metadata !14394, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14410
  ret void, !dbg !14411
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14412 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14416, metadata !DIExpression()), !dbg !14418
  %2 = icmp eq i8* %0, null, !dbg !14419
  br i1 %2, label %29, label %3, !dbg !14421

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14422
  %5 = icmp eq i8 %4, 0, !dbg !14423
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14424
  br i1 %6, label %29, label %8, !dbg !14424

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14417, metadata !DIExpression()), !dbg !14418
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14425

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14417, metadata !DIExpression()), !dbg !14418
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !14427
  br i1 %10, label %11, label %15, !dbg !14432

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14433
  %13 = load i8*, i8** %12, align 4, !dbg !14433
  %14 = icmp eq i8* %13, %0, !dbg !14434
  br i1 %14, label %29, label %15, !dbg !14435

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14436
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14417, metadata !DIExpression()), !dbg !14418
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14437
  br i1 %17, label %7, label %8, !dbg !14438, !llvm.loop !14439

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14417, metadata !DIExpression()), !dbg !14418
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !14441
  br i1 %20, label %21, label %26, !dbg !14445

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14446
  %23 = load i8*, i8** %22, align 4, !dbg !14446
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !14447
  %25 = icmp eq i32 %24, 0, !dbg !14448
  br i1 %25, label %29, label %26, !dbg !14449

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14450
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14417, metadata !DIExpression()), !dbg !14418
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14451
  br i1 %28, label %29, label %18, !dbg !14425, !llvm.loop !14452

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14418
  ret %struct.device* %30, !dbg !14454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !14455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14459, metadata !DIExpression()), !dbg !14460
  %2 = icmp eq %struct.device* %0, null, !dbg !14461
  br i1 %2, label %14, label %3, !dbg !14463

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14464
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14464
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14465
  %7 = load i8, i8* %6, align 1, !dbg !14465
  %8 = and i8 %7, 1, !dbg !14465
  %9 = icmp eq i8 %8, 0, !dbg !14465
  br i1 %9, label %14, label %10, !dbg !14466

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14467
  %12 = load i8, i8* %11, align 1, !dbg !14467
  %13 = icmp eq i8 %12, 0, !dbg !14468
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14460
  ret i1 %15, !dbg !14469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14470 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14475, metadata !DIExpression()), !dbg !14476
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14477
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14478
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14479 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14487, metadata !DIExpression()), !dbg !14492
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14488, metadata !DIExpression()), !dbg !14492
  call void @llvm.dbg.value(metadata i8* %2, metadata !14489, metadata !DIExpression()), !dbg !14492
  %5 = bitcast i32* %4 to i8*, !dbg !14493
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14493
  call void @llvm.dbg.value(metadata i32 0, metadata !14490, metadata !DIExpression()), !dbg !14492
  store i32 0, i32* %4, align 4, !dbg !14494
  call void @llvm.dbg.value(metadata i32* %4, metadata !14490, metadata !DIExpression(DW_OP_deref)), !dbg !14492
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14495
  call void @llvm.dbg.value(metadata i16* %6, metadata !14491, metadata !DIExpression()), !dbg !14492
  %7 = load i32, i32* %4, align 4, !dbg !14496
  call void @llvm.dbg.value(metadata i32 %7, metadata !14490, metadata !DIExpression()), !dbg !14492
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14497
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14498
  ret i32 %8, !dbg !14499
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14500 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14504, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata i32* %1, metadata !14505, metadata !DIExpression()), !dbg !14510
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14511
  %4 = load i16*, i16** %3, align 4, !dbg !14511
  call void @llvm.dbg.value(metadata i16* %4, metadata !14506, metadata !DIExpression()), !dbg !14510
  %5 = icmp eq i16* %4, null, !dbg !14512
  br i1 %5, label %14, label %6, !dbg !14513

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14514
  call void @llvm.dbg.value(metadata i32 %7, metadata !14507, metadata !DIExpression()), !dbg !14514
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14515
  %9 = load i16, i16* %8, align 2, !dbg !14515
  %10 = add i16 %9, -32767, !dbg !14516
  %11 = icmp ult i16 %10, 2, !dbg !14516
  %12 = add i32 %7, 1, !dbg !14517
  call void @llvm.dbg.value(metadata i32 %12, metadata !14507, metadata !DIExpression()), !dbg !14514
  br i1 %11, label %13, label %6, !dbg !14516, !llvm.loop !14519

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14522
  br label %14, !dbg !14523

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14525 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14529, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i32 %1, metadata !14530, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14531, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i8* %3, metadata !14532, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i32 0, metadata !14533, metadata !DIExpression()), !dbg !14541
  %5 = icmp eq i32 %1, 0, !dbg !14542
  br i1 %5, label %16, label %8, !dbg !14543

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14533, metadata !DIExpression()), !dbg !14541
  %7 = icmp eq i32 %15, %1, !dbg !14542
  br i1 %7, label %16, label %8, !dbg !14543, !llvm.loop !14544

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14533, metadata !DIExpression()), !dbg !14541
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14546
  %11 = load i16, i16* %10, align 2, !dbg !14546
  call void @llvm.dbg.value(metadata i16 %11, metadata !14535, metadata !DIExpression()), !dbg !14547
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !14548
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14538, metadata !DIExpression()), !dbg !14547
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !14549
  call void @llvm.dbg.value(metadata i32 %13, metadata !14539, metadata !DIExpression()), !dbg !14547
  %14 = icmp slt i32 %13, 0, !dbg !14550
  %15 = add nuw i32 %9, 1, !dbg !14552
  call void @llvm.dbg.value(metadata i32 %15, metadata !14533, metadata !DIExpression()), !dbg !14541
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !14554 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14558, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14559, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14560, metadata !DIExpression()), !dbg !14561
  %2 = sext i16 %0 to i32, !dbg !14562
  %3 = icmp slt i16 %0, 1, !dbg !14564
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14565
  %6 = add nsw i32 %2, -1, !dbg !14565
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14565
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14565
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14559, metadata !DIExpression()), !dbg !14561
  ret %struct.device* %8, !dbg !14566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14567 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14569, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14570, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata i8* %2, metadata !14571, metadata !DIExpression()), !dbg !14574
  %5 = bitcast i32* %4 to i8*, !dbg !14575
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14575
  call void @llvm.dbg.value(metadata i32 0, metadata !14572, metadata !DIExpression()), !dbg !14574
  store i32 0, i32* %4, align 4, !dbg !14576
  call void @llvm.dbg.value(metadata i32* %4, metadata !14572, metadata !DIExpression(DW_OP_deref)), !dbg !14574
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14577
  call void @llvm.dbg.value(metadata i16* %6, metadata !14573, metadata !DIExpression()), !dbg !14574
  %7 = load i32, i32* %4, align 4, !dbg !14578
  call void @llvm.dbg.value(metadata i32 %7, metadata !14572, metadata !DIExpression()), !dbg !14574
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14579
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14580
  ret i32 %8, !dbg !14581
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14582 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14584, metadata !DIExpression()), !dbg !14589
  call void @llvm.dbg.value(metadata i32* %1, metadata !14585, metadata !DIExpression()), !dbg !14589
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14590
  %4 = load i16*, i16** %3, align 4, !dbg !14590
  call void @llvm.dbg.value(metadata i16* %4, metadata !14586, metadata !DIExpression()), !dbg !14589
  call void @llvm.dbg.value(metadata i32 0, metadata !14587, metadata !DIExpression()), !dbg !14589
  call void @llvm.dbg.value(metadata i32 0, metadata !14588, metadata !DIExpression()), !dbg !14589
  %5 = icmp eq i16* %4, null, !dbg !14591
  br i1 %5, label %22, label %6, !dbg !14593

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14587, metadata !DIExpression()), !dbg !14589
  call void @llvm.dbg.value(metadata i16* %8, metadata !14586, metadata !DIExpression()), !dbg !14589
  %9 = load i16, i16* %8, align 2, !dbg !14594
  %10 = icmp eq i16 %9, -32768, !dbg !14598
  call void @llvm.dbg.value(metadata i32 undef, metadata !14587, metadata !DIExpression()), !dbg !14589
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14599
  call void @llvm.dbg.value(metadata i16* %11, metadata !14586, metadata !DIExpression()), !dbg !14589
  %12 = zext i1 %10 to i32, !dbg !14600
  %13 = add i32 %7, %12, !dbg !14600
  call void @llvm.dbg.value(metadata i32 %13, metadata !14587, metadata !DIExpression()), !dbg !14589
  %14 = icmp eq i32 %13, 2, !dbg !14601
  br i1 %14, label %15, label %6, !dbg !14602

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14589
  call void @llvm.dbg.value(metadata i32 %16, metadata !14588, metadata !DIExpression()), !dbg !14589
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14603
  %18 = load i16, i16* %17, align 2, !dbg !14603
  %19 = icmp eq i16 %18, 32767, !dbg !14604
  %20 = add i32 %16, 1, !dbg !14605
  call void @llvm.dbg.value(metadata i32 %20, metadata !14588, metadata !DIExpression()), !dbg !14589
  br i1 %19, label %21, label %15, !dbg !14607, !llvm.loop !14608

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14610
  br label %22, !dbg !14611

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14612
  call void @llvm.dbg.value(metadata i16* %23, metadata !14586, metadata !DIExpression()), !dbg !14589
  ret i16* %23, !dbg !14613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !14614 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14617
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14618
  ret i32* %2, !dbg !14619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !14620 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14769, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14770, metadata !DIExpression()), !dbg !14771
  ret void, !dbg !14772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14777, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i32 %1, metadata !14778, metadata !DIExpression()), !dbg !14779
  ret void, !dbg !14780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14781 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14785, metadata !DIExpression()), !dbg !14787
  call void @llvm.dbg.value(metadata i32 %1, metadata !14786, metadata !DIExpression()), !dbg !14787
  ret void, !dbg !14788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14793, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i8* %1, metadata !14794, metadata !DIExpression()), !dbg !14795
  ret i32 -134, !dbg !14796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14801, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.value(metadata i8* %1, metadata !14802, metadata !DIExpression()), !dbg !14803
  ret i32 -134, !dbg !14804
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14808, metadata !DIExpression()), !dbg !14809
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14810, !srcloc !14816
  call void @llvm.dbg.value(metadata i32 undef, metadata !14813, metadata !DIExpression()) #25, !dbg !14817
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #25, !dbg !14817
  br label %3, !dbg !14818

3:                                                ; preds = %3, %1
  br label %3, !dbg !14819, !llvm.loop !14822
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14829, metadata !DIExpression()), !dbg !14831
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14830, metadata !DIExpression()), !dbg !14831
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.230, i32 0, i32 0), i32 noundef 69) #27, !dbg !14832
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14837
  unreachable, !dbg !14837
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14840, metadata !DIExpression()), !dbg !14841
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14842
  unreachable, !dbg !14842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14845, metadata !DIExpression()), !dbg !14849
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14846, metadata !DIExpression()), !dbg !14849
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14850, !srcloc !14816
  call void @llvm.dbg.value(metadata i32 undef, metadata !14813, metadata !DIExpression()) #25, !dbg !14852
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #25, !dbg !14852
  call void @llvm.dbg.value(metadata i32 undef, metadata !14847, metadata !DIExpression()), !dbg !14849
  %4 = tail call fastcc %struct.k_thread* @k_current_get.233() #28, !dbg !14853
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14848, metadata !DIExpression()), !dbg !14849
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !14854
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.234, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14854
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14859
  br i1 %6, label %15, label %7, !dbg !14861

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14862, metadata !DIExpression()), !dbg !14867
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14869
  %9 = load i32, i32* %8, align 4, !dbg !14869
  %10 = and i32 %9, 511, !dbg !14870
  %11 = icmp eq i32 %10, 0, !dbg !14871
  br i1 %11, label %13, label %12, !dbg !14872

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 69) #27, !dbg !14873
  br label %13, !dbg !14879

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14880
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.236, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14880
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !14885
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14862, metadata !DIExpression()), !dbg !14886
  br label %17, !dbg !14891

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14880
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.236, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !14880
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !14885
  br label %17, !dbg !14892

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14850
  call void @llvm.dbg.value(metadata i32 %18, metadata !14813, metadata !DIExpression()) #25, !dbg !14852
  call void @llvm.dbg.value(metadata i32 %18, metadata !14847, metadata !DIExpression()), !dbg !14849
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()) #25, !dbg !14896
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14898, !srcloc !14899
  tail call fastcc void @k_thread_abort.237(%struct.k_thread* noundef %4) #26, !dbg !14900
  ret void, !dbg !14903
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.233() unnamed_addr #13 !dbg !14904 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.245() #28, !dbg !14908
  ret %struct.k_thread* %1, !dbg !14909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !14910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14914, metadata !DIExpression()), !dbg !14915
  %2 = icmp ult i32 %0, 5, !dbg !14916
  br i1 %2, label %3, label %6, !dbg !14916

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14916
  %5 = load i8*, i8** %4, align 4, !dbg !14916
  br label %6, !dbg !14916

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.239, i32 0, i32 0), %1 ], !dbg !14917
  ret i8* %7, !dbg !14919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14920 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()), !dbg !14926
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14927
  br i1 %2, label %9, label %3, !dbg !14928

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14929
  call void @llvm.dbg.value(metadata i8* %4, metadata !14925, metadata !DIExpression()), !dbg !14926
  %5 = icmp eq i8* %4, null, !dbg !14930
  br i1 %5, label %9, label %6, !dbg !14932

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14933
  %8 = icmp eq i8 %7, 0, !dbg !14934
  br i1 %8, label %9, label %10, !dbg !14935

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.238, i32 0, i32 0), metadata !14925, metadata !DIExpression()), !dbg !14926
  br label %10, !dbg !14936

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.238, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14926
  call void @llvm.dbg.value(metadata i8* %11, metadata !14925, metadata !DIExpression()), !dbg !14926
  ret i8* %11, !dbg !14938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.237(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14943, metadata !DIExpression()), !dbg !14944
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14945, !srcloc !14947
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14948
  ret void, !dbg !14949
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.245() unnamed_addr #13 !dbg !14950 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14951, !srcloc !14953
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14954
  ret %struct.k_thread* %1, !dbg !14955
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14956 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14960, metadata !DIExpression()), !dbg !14963
  call void @llvm.dbg.value(metadata i32 %1, metadata !14961, metadata !DIExpression()), !dbg !14963
  call void @llvm.dbg.value(metadata i32 %2, metadata !14962, metadata !DIExpression()), !dbg !14963
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14964
  ret void, !dbg !14965
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14966 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14970, metadata !DIExpression()), !dbg !14973
  call void @llvm.dbg.value(metadata i8* %1, metadata !14971, metadata !DIExpression()), !dbg !14973
  call void @llvm.dbg.value(metadata i32 %2, metadata !14972, metadata !DIExpression()), !dbg !14973
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14974
  ret void, !dbg !14975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14976 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !14977
  ret void, !dbg !14978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14981, metadata !DIExpression()), !dbg !14982
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !14983
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14984
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14985
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14986
  %4 = trunc i32 %0 to i8, !dbg !14987
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14988
  store i8 %4, i8* %5, align 4, !dbg !14989
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14990
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !14991
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14992
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14993
  store i8* %8, i8** %9, align 4, !dbg !14994
  ret void, !dbg !14995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14998, metadata !DIExpression()), !dbg !15004
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15005
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14999, metadata !DIExpression()), !dbg !15004
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !15006
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !15000, metadata !DIExpression()), !dbg !15004
  call void @llvm.dbg.value(metadata i8* null, metadata !15003, metadata !DIExpression()), !dbg !15004
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !15007
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !15008
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !15009
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !15010
  ret void, !dbg !15011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15012 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15016, metadata !DIExpression()), !dbg !15017
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15018
  ret i8* %2, !dbg !15019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15020 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15025, metadata !DIExpression()), !dbg !15026
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15027
  %3 = load i8, i8* %2, align 1, !dbg !15028
  %4 = and i8 %3, -5, !dbg !15028
  store i8 %4, i8* %2, align 1, !dbg !15028
  ret void, !dbg !15029
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !15030 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !15033
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !15034
  %3 = ptrtoint i8* %2 to i32, !dbg !15043
  %4 = add i32 %3, 2048, !dbg !15044
  call void @llvm.dbg.value(metadata i32 %4, metadata !15038, metadata !DIExpression()) #25, !dbg !15045
  call void @llvm.dbg.value(metadata i32 %4, metadata !15046, metadata !DIExpression()) #25, !dbg !15049
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !15051, !srcloc !15052
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15053
  %6 = or i32 %5, 512, !dbg !15053
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15053
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -2, i32 noundef 255) #27, !dbg !15054
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -5, i32 noundef 0) #27, !dbg !15057
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -12, i32 noundef 0) #27, !dbg !15058
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -11, i32 noundef 0) #27, !dbg !15059
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -10, i32 noundef 0) #27, !dbg !15060
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -4, i32 noundef 0) #27, !dbg !15061
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15062
  %8 = or i32 %7, 458752, !dbg !15062
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15062
  tail call void @z_arm_fault_init() #27, !dbg !15063
  tail call void @z_arm_cpu_idle_init() #27, !dbg !15064
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !15065
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !15068
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !15069
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !15070
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !15071
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !15071
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !15032, metadata !DIExpression()), !dbg !15072
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !15073
  call void @z_device_state_init() #27, !dbg !15074
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !15075
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !15076
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !15077
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !15078
  unreachable, !dbg !15078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2408, metadata !DIExpression()), !dbg !15079
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !15080
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !15080
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2409, metadata !DIExpression()), !dbg !15079
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2409, metadata !DIExpression()), !dbg !15079
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !15081
  br i1 %7, label %8, label %35, !dbg !15082

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2409, metadata !DIExpression()), !dbg !15079
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !15083
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !15083
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2419, metadata !DIExpression()), !dbg !15084
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !15085
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !15085
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !15086
  call void @llvm.dbg.value(metadata i32 %14, metadata !2423, metadata !DIExpression()), !dbg !15084
  %15 = icmp eq %struct.device* %11, null, !dbg !15087
  br i1 %15, label %32, label %16, !dbg !15089

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !15090
  br i1 %17, label %26, label %18, !dbg !15093

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !15094
  call void @llvm.dbg.value(metadata i32 %19, metadata !2423, metadata !DIExpression()), !dbg !15084
  %20 = icmp ult i32 %19, 255, !dbg !15096
  %21 = select i1 %20, i32 %19, i32 255, !dbg !15096
  call void @llvm.dbg.value(metadata i32 %21, metadata !2423, metadata !DIExpression()), !dbg !15084
  %22 = trunc i32 %21 to i8, !dbg !15097
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15098
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !15098
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !15099
  store i8 %22, i8* %25, align 1, !dbg !15100
  br label %26, !dbg !15101

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15102
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !15102
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !15103
  %30 = load i8, i8* %29, align 1, !dbg !15104
  %31 = or i8 %30, 1, !dbg !15104
  store i8 %31, i8* %29, align 1, !dbg !15104
  br label %32, !dbg !15105

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !15106
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2409, metadata !DIExpression()), !dbg !15079
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !15081
  br i1 %34, label %8, label %35, !dbg !15082, !llvm.loop !15107

35:                                               ; preds = %32, %1
  ret void, !dbg !15109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.254(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !15110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15112, metadata !DIExpression()), !dbg !15114
  call void @llvm.dbg.value(metadata i32 %1, metadata !15113, metadata !DIExpression()), !dbg !15114
  %3 = trunc i32 %1 to i8, !dbg !15115
  %4 = shl i8 %3, 4, !dbg !15115
  %5 = and i32 %0, 15, !dbg !15118
  %6 = add nsw i32 %5, -4, !dbg !15119
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !15120
  store volatile i8 %4, i8* %7, align 1, !dbg !15121
  ret void, !dbg !15122
}

; Function Attrs: optsize
declare !dbg !15123 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !15124 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15127, metadata !DIExpression()), !dbg !15128
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15129
  store i8 1, i8* %2, align 1, !dbg !15130
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15131
  store i8 1, i8* %3, align 4, !dbg !15132
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15133
  store i32 0, i32* %4, align 4, !dbg !15134
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15135
  store i32 0, i32* %5, align 4, !dbg !15136
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15137
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !15138
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15139
  ret void, !dbg !15140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !15141 {
  tail call void @z_sched_init() #27, !dbg !15146
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15147
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.255, i32 0, i32 0)) #27, !dbg !15148
  call void @llvm.dbg.value(metadata i8* %1, metadata !15145, metadata !DIExpression()), !dbg !15149
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !15150
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !15151
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !15152
  ret i8* %1, !dbg !15153
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !15154 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15158, metadata !DIExpression()), !dbg !15159
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !15160
  unreachable, !dbg !15161
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15162 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15164, metadata !DIExpression()), !dbg !15167
  call void @llvm.dbg.value(metadata i8* %1, metadata !15165, metadata !DIExpression()), !dbg !15167
  call void @llvm.dbg.value(metadata i8* %2, metadata !15166, metadata !DIExpression()), !dbg !15167
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15168
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !15169
  tail call void @boot_banner() #27, !dbg !15170
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !15171
  tail call void @z_init_static_threads() #27, !dbg !15172
  tail call void @main() #27, !dbg !15173
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15174
  %5 = and i8 %4, -2, !dbg !15174
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15174
  ret void, !dbg !15175
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15176 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15186, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i8* %1, metadata !15187, metadata !DIExpression()), !dbg !15188
  ret void, !dbg !15189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15190 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15192, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata i8* %1, metadata !15193, metadata !DIExpression()), !dbg !15194
  ret void, !dbg !15195
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15196 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15197, !srcloc !15204
  call void @llvm.dbg.value(metadata i32 %1, metadata !15200, metadata !DIExpression()) #25, !dbg !15205
  %2 = icmp ne i32 %1, 0, !dbg !15206
  ret i1 %2, !dbg !15207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !15208 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15209
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15210
  %3 = load i8, i8* %2, align 4, !dbg !15211
  %4 = or i8 %3, 1, !dbg !15211
  store i8 %4, i8* %2, align 4, !dbg !15211
  ret void, !dbg !15212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !15213 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15214
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15215
  %3 = load i8, i8* %2, align 4, !dbg !15216
  %4 = and i8 %3, -2, !dbg !15216
  store i8 %4, i8* %2, align 4, !dbg !15216
  ret void, !dbg !15217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !15218 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15219
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15220
  %3 = load i8, i8* %2, align 4, !dbg !15220
  %4 = and i8 %3, 1, !dbg !15221
  %5 = icmp ne i8 %4, 0, !dbg !15222
  ret i1 %5, !dbg !15223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !15224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15228, metadata !DIExpression()), !dbg !15230
  call void @llvm.dbg.value(metadata i8* %1, metadata !15229, metadata !DIExpression()), !dbg !15230
  ret i32 -88, !dbg !15231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15236, metadata !DIExpression()), !dbg !15237
  ret i8* null, !dbg !15238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #3 !dbg !15239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15243, metadata !DIExpression()), !dbg !15246
  call void @llvm.dbg.value(metadata i8* %1, metadata !15244, metadata !DIExpression()), !dbg !15246
  call void @llvm.dbg.value(metadata i32 %2, metadata !15245, metadata !DIExpression()), !dbg !15246
  ret i32 -88, !dbg !15247
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2546, metadata !DIExpression()), !dbg !15248
  call void @llvm.dbg.value(metadata i8* %1, metadata !2547, metadata !DIExpression()), !dbg !15248
  call void @llvm.dbg.value(metadata i32 %2, metadata !2548, metadata !DIExpression()), !dbg !15248
  call void @llvm.dbg.value(metadata i32 0, metadata !2549, metadata !DIExpression()), !dbg !15248
  call void @llvm.dbg.value(metadata i8 undef, metadata !2551, metadata !DIExpression()), !dbg !15248
  %4 = icmp eq i8* %1, null, !dbg !15249
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15251
  br i1 %6, label %46, label %7, !dbg !15251

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15252
  %9 = load i8, i8* %8, align 1, !dbg !15252
  call void @llvm.dbg.value(metadata i8 %9, metadata !2551, metadata !DIExpression()), !dbg !15248
  %10 = add i32 %2, -1, !dbg !15253
  call void @llvm.dbg.value(metadata i32 %10, metadata !2548, metadata !DIExpression()), !dbg !15248
  call void @llvm.dbg.value(metadata i8 0, metadata !2552, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata i8 %9, metadata !2551, metadata !DIExpression()), !dbg !15248
  call void @llvm.dbg.value(metadata i32 0, metadata !2549, metadata !DIExpression()), !dbg !15248
  %11 = icmp eq i8 %9, 0, !dbg !15255
  br i1 %11, label %12, label %15, !dbg !15257

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15258
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15259
  store i8 0, i8* %14, align 1, !dbg !15260
  br label %46, !dbg !15261

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2552, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata i8 %17, metadata !2551, metadata !DIExpression()), !dbg !15248
  call void @llvm.dbg.value(metadata i32 %18, metadata !2549, metadata !DIExpression()), !dbg !15248
  %19 = zext i8 %17 to i32, !dbg !15262
  %20 = zext i8 %16 to i32, !dbg !15263
  %21 = shl nuw i32 1, %20, !dbg !15263
  call void @llvm.dbg.value(metadata i32 %21, metadata !2550, metadata !DIExpression()), !dbg !15248
  %22 = and i32 %21, %19, !dbg !15265
  %23 = icmp eq i32 %22, 0, !dbg !15267
  br i1 %23, label %42, label %24, !dbg !15268

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15269
  %26 = sub i32 %10, %18, !dbg !15270
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15271
  %28 = load i8*, i8** %27, align 4, !dbg !15271
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15272
  %30 = load i32, i32* %29, align 4, !dbg !15272
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !15273
  %32 = add i32 %31, %18, !dbg !15274
  call void @llvm.dbg.value(metadata i32 %32, metadata !2549, metadata !DIExpression()), !dbg !15248
  %33 = trunc i32 %21 to i8, !dbg !15275
  %34 = xor i8 %33, -1, !dbg !15275
  %35 = and i8 %17, %34, !dbg !15275
  call void @llvm.dbg.value(metadata i8 %35, metadata !2551, metadata !DIExpression()), !dbg !15248
  %36 = icmp eq i8 %35, 0, !dbg !15276
  br i1 %36, label %12, label %37, !dbg !15278

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15279
  %39 = sub i32 %10, %32, !dbg !15281
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.258, i32 0, i32 0), i32 noundef 1) #26, !dbg !15282
  %41 = add i32 %40, %32, !dbg !15283
  call void @llvm.dbg.value(metadata i32 %41, metadata !2549, metadata !DIExpression()), !dbg !15248
  br label %42, !dbg !15284

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15248
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15248
  call void @llvm.dbg.value(metadata i8 %44, metadata !2551, metadata !DIExpression()), !dbg !15248
  call void @llvm.dbg.value(metadata i32 %43, metadata !2549, metadata !DIExpression()), !dbg !15248
  %45 = add i8 %16, 1, !dbg !15285
  call void @llvm.dbg.value(metadata i8 %45, metadata !2552, metadata !DIExpression()), !dbg !15254
  br label %15, !dbg !15257

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.259, i32 0, i32 0), %3 ], !dbg !15248
  ret i8* %47, !dbg !15286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15287 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15291, metadata !DIExpression()), !dbg !15296
  call void @llvm.dbg.value(metadata i32 %1, metadata !15292, metadata !DIExpression()), !dbg !15296
  call void @llvm.dbg.value(metadata i8* %2, metadata !15293, metadata !DIExpression()), !dbg !15296
  call void @llvm.dbg.value(metadata i32 %3, metadata !15294, metadata !DIExpression()), !dbg !15296
  %5 = icmp ult i32 %1, %3, !dbg !15297
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15297
  call void @llvm.dbg.value(metadata i32 %6, metadata !15295, metadata !DIExpression()), !dbg !15296
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !15298
  ret i32 %6, !dbg !15299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15304, metadata !DIExpression()), !dbg !15305
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !15306
  ret void, !dbg !15307
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15317, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15318, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i32 %2, metadata !15319, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15320, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i8* %4, metadata !15321, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i8* %5, metadata !15322, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i8* %6, metadata !15323, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i32 %7, metadata !15324, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i32 %8, metadata !15325, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i8* undef, metadata !15326, metadata !DIExpression()), !dbg !15328
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15329
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !15330
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15331
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !15332
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !15333
  call void @llvm.dbg.value(metadata i8* %13, metadata !15327, metadata !DIExpression()), !dbg !15328
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !15334
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15335
  store i8* null, i8** %14, align 4, !dbg !15336
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15337
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !15337
  br i1 %16, label %20, label %17, !dbg !15339

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !15340
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !15340
  br label %20, !dbg !15341

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !15328
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15342
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !15344
  ret i8* %13, !dbg !15345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !15346 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15351, metadata !DIExpression()), !dbg !15352
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15353
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !15354
  ret void, !dbg !15355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !15356 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15361, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata i32 %1, metadata !15362, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata i32 %2, metadata !15363, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata i32 %3, metadata !15364, metadata !DIExpression()), !dbg !15365
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15366
  store %union.anon* null, %union.anon** %5, align 8, !dbg !15367
  %6 = trunc i32 %3 to i8, !dbg !15368
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15369
  store i8 %6, i8* %7, align 4, !dbg !15370
  %8 = trunc i32 %2 to i8, !dbg !15371
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15372
  store i8 %8, i8* %9, align 1, !dbg !15373
  %10 = trunc i32 %1 to i8, !dbg !15374
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15375
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15375
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15375
  store i8 %10, i8* %13, align 2, !dbg !15376
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15377
  store i8 0, i8* %14, align 1, !dbg !15378
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !15379
  ret void, !dbg !15380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !15381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15385, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15386, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 %2, metadata !15387, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 0, metadata !15392, metadata !DIExpression()), !dbg !15393
  %4 = add i32 %2, 7, !dbg !15394
  %5 = and i32 %4, -8, !dbg !15394
  %6 = add i32 %5, 64, !dbg !15394
  call void @llvm.dbg.value(metadata i32 %6, metadata !15388, metadata !DIExpression()), !dbg !15393
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.269(%struct.z_thread_stack_element* noundef %1) #26, !dbg !15396
  call void @llvm.dbg.value(metadata i8* %7, metadata !15391, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 %5, metadata !15389, metadata !DIExpression()), !dbg !15393
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15397
  call void @llvm.dbg.value(metadata i8* %8, metadata !15390, metadata !DIExpression()), !dbg !15393
  call void @llvm.dbg.value(metadata i32 0, metadata !15392, metadata !DIExpression()), !dbg !15393
  %9 = ptrtoint i8* %7 to i32, !dbg !15398
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15399
  store i32 %9, i32* %10, align 4, !dbg !15400
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15401
  store i32 %5, i32* %11, align 4, !dbg !15402
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15403
  store i32 0, i32* %12, align 4, !dbg !15404
  call void @llvm.dbg.value(metadata i8* %8, metadata !15390, metadata !DIExpression()), !dbg !15393
  ret i8* %8, !dbg !15405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.269(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15406 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15410, metadata !DIExpression()), !dbg !15411
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15412
  ret i8* %2, !dbg !15413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15414 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15419, metadata !DIExpression()), !dbg !15420
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15421
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15422
  ret void, !dbg !15423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15424 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15426, metadata !DIExpression()), !dbg !15427
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15428
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !15429
  ret void, !dbg !15430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15431 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15435, metadata !DIExpression()), !dbg !15436
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15437
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15438
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15439
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15440
  ret void, !dbg !15441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15442 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15447, metadata !DIExpression()), !dbg !15448
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15449
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15450
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15451
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15452
  ret void, !dbg !15453
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15454 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15471, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15462, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15463, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 %2, metadata !15464, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15465, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i8* %4, metadata !15466, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i8* %5, metadata !15467, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i8* %6, metadata !15468, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 %7, metadata !15469, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 %8, metadata !15470, metadata !DIExpression()), !dbg !15472
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !15473
  %13 = icmp eq i64 %11, -1, !dbg !15474
  br i1 %13, label %15, label %14, !dbg !15476

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !15477
  br label %15, !dbg !15479

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !15480
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15481 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15486, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15485, metadata !DIExpression()), !dbg !15487
  %4 = icmp eq i64 %3, 0, !dbg !15488
  br i1 %4, label %5, label %6, !dbg !15490

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15491
  br label %7, !dbg !15493

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15494
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15496
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15501, metadata !DIExpression()), !dbg !15502
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15503, !srcloc !15505
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15506
  ret void, !dbg !15507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15508 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15511, metadata !DIExpression()), !dbg !15512
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15510, metadata !DIExpression()), !dbg !15512
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15513
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15514
  ret void, !dbg !15515
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15516 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15518, metadata !DIExpression()), !dbg !15538
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !15539

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !15540
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15536, metadata !DIExpression()), !dbg !15541
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !15542

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15518, metadata !DIExpression()), !dbg !15538
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15543
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15543
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15546
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !15546
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15547
  %9 = load i32, i32* %8, align 4, !dbg !15547
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15548
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !15548
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15549
  %13 = load i8*, i8** %12, align 4, !dbg !15549
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15550
  %15 = load i8*, i8** %14, align 4, !dbg !15550
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15551
  %17 = load i8*, i8** %16, align 4, !dbg !15551
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15552
  %19 = load i32, i32* %18, align 4, !dbg !15552
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15553
  %21 = load i32, i32* %20, align 4, !dbg !15553
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !15554
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15555
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !15556
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !15557
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !15557
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15558
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !15518, metadata !DIExpression()), !dbg !15538
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15559
  br i1 %27, label %2, label %1, !dbg !15539, !llvm.loop !15561

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !15540
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15536, metadata !DIExpression()), !dbg !15541
  br label %29, !dbg !15542

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !15563
  ret void, !dbg !15564

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !15536, metadata !DIExpression()), !dbg !15541
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !15565
  %33 = load i32, i32* %32, align 4, !dbg !15565
  %34 = icmp eq i32 %33, -1, !dbg !15569
  br i1 %34, label %43, label %35, !dbg !15570

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !15571
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !15571
  %38 = icmp sgt i32 %33, 0, !dbg !15573
  %39 = select i1 %38, i32 %33, i32 0, !dbg !15573
  %40 = zext i32 %39 to i64, !dbg !15573
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !15573
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !15574
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !15574
  br label %43, !dbg !15575

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !15576
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !15536, metadata !DIExpression()), !dbg !15541
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15577
  br i1 %45, label %30, label %29, !dbg !15542, !llvm.loop !15579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !15581 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15586, metadata !DIExpression()), !dbg !15587
  call void @llvm.dbg.value(metadata i64 %0, metadata !15588, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i32 1000, metadata !15593, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i32 10000, metadata !15594, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i8 1, metadata !15595, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i8 0, metadata !15596, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i8 1, metadata !15597, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i8 0, metadata !15598, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i8 1, metadata !15599, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i8 0, metadata !15600, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i64 0, metadata !15601, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i64 0, metadata !15601, metadata !DIExpression()), !dbg !15605
  %2 = mul i64 %0, 10, !dbg !15607
  ret i64 %2, !dbg !15613
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !15614 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15616, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.value(metadata i8* %1, metadata !15617, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.value(metadata i8* %2, metadata !15618, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.value(metadata i8* %3, metadata !15619, metadata !DIExpression()), !dbg !15620
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15621
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15622
  %7 = load i8, i8* %6, align 4, !dbg !15623
  %8 = or i8 %7, 4, !dbg !15623
  store i8 %8, i8* %6, align 4, !dbg !15623
  tail call void @z_thread_essential_clear() #26, !dbg !15624
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !15625
  unreachable, !dbg !15625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15626 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15630, metadata !DIExpression()), !dbg !15631
  ret i32 -134, !dbg !15632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !15633 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15637, metadata !DIExpression()), !dbg !15639
  call void @llvm.dbg.value(metadata i32 %1, metadata !15638, metadata !DIExpression()), !dbg !15639
  ret i32 -134, !dbg !15640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #3 !dbg !15641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15648, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15649, metadata !DIExpression()), !dbg !15650
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15651
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15653
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15650
  ret i32 %6, !dbg !15654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #3 !dbg !15655 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15659, metadata !DIExpression()), !dbg !15660
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15661
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15660
  ret i32 %3, !dbg !15663
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15664 {
  tail call void @sys_clock_idle_exit() #27, !dbg !15666
  ret void, !dbg !15667
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !15668 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15670, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata i8* %1, metadata !15671, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata i8* %2, metadata !15672, metadata !DIExpression()), !dbg !15673
  br label %4, !dbg !15674

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15675, !srcloc !15682
  call void @llvm.dbg.value(metadata i32 undef, metadata !15678, metadata !DIExpression()) #25, !dbg !15683
  call void @llvm.dbg.value(metadata i32 undef, metadata !15679, metadata !DIExpression()) #25, !dbg !15683
  tail call fastcc void @k_cpu_idle() #26, !dbg !15684
  br label %4, !dbg !15674, !llvm.loop !15685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15687 {
  tail call void @arch_cpu_idle() #27, !dbg !15688
  ret void, !dbg !15689
}

; Function Attrs: optsize
declare !dbg !15690 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15691 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15695, metadata !DIExpression()), !dbg !15699
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15696, metadata !DIExpression()), !dbg !15699
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15700
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15700
  %5 = load i8, i8* %4, align 2, !dbg !15700
  call void @llvm.dbg.value(metadata i8 %5, metadata !15697, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15699
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15701
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15701
  %8 = load i8, i8* %7, align 2, !dbg !15701
  call void @llvm.dbg.value(metadata i8 %8, metadata !15698, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15699
  %9 = icmp eq i8 %8, %5, !dbg !15702
  %10 = sext i8 %5 to i32, !dbg !15704
  %11 = sext i8 %8 to i32, !dbg !15704
  %12 = sub nsw i32 %11, %10, !dbg !15704
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15704
  ret i32 %13, !dbg !15705
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15706 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15710, metadata !DIExpression()), !dbg !15711
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15712
  %3 = icmp eq i32 %2, 0, !dbg !15714
  br i1 %3, label %8, label %4, !dbg !15715

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15716
  %6 = add i32 %5, %2, !dbg !15718
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15719
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15720
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15721
  br label %8, !dbg !15722

8:                                                ; preds = %4, %1
  ret void, !dbg !15723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !15724 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15728, metadata !DIExpression()), !dbg !15730
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15731
  call void @llvm.dbg.value(metadata i32 %1, metadata !15729, metadata !DIExpression()), !dbg !15730
  ret i32 %1, !dbg !15732
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15737, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i32 %1, metadata !15738, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i32 0, metadata !15739, metadata !DIExpression()), !dbg !15747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !15755
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15757, !srcloc !15763
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15757
  call void @llvm.dbg.value(metadata i32 %4, metadata !15760, metadata !DIExpression()) #25, !dbg !15764
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !15764
  call void @llvm.dbg.value(metadata i32 %4, metadata !15754, metadata !DIExpression()) #25, !dbg !15755
  call void @llvm.dbg.value(metadata i32 %4, metadata !15745, metadata !DIExpression()), !dbg !15747
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()), !dbg !15747
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15765
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15768
  %6 = icmp sgt i32 %0, 0, !dbg !15769
  %7 = icmp sgt i32 %5, 2, !dbg !15771
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15771
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15771
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15772
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15773
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15774
  call void @llvm.dbg.value(metadata i32 %4, metadata !15775, metadata !DIExpression()) #25, !dbg !15781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !15781
  call void @llvm.dbg.value(metadata i32 %4, metadata !15783, metadata !DIExpression()) #25, !dbg !15786
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15788, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !15739, metadata !DIExpression()), !dbg !15747
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()), !dbg !15747
  ret void, !dbg !15790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !15791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15793, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i32 %0, metadata !15795, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15810
  call void @llvm.dbg.value(metadata i32 1000, metadata !15798, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata i32 10000, metadata !15799, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata i8 1, metadata !15800, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata i1 true, metadata !15801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15810
  call void @llvm.dbg.value(metadata i1 true, metadata !15802, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15810
  call void @llvm.dbg.value(metadata i8 0, metadata !15803, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata i1 true, metadata !15804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15810
  call void @llvm.dbg.value(metadata i1 false, metadata !15805, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15810
  call void @llvm.dbg.value(metadata i64 0, metadata !15806, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata i64 0, metadata !15806, metadata !DIExpression()), !dbg !15810
  %2 = mul i32 %0, 10, !dbg !15812
  ret i32 %2, !dbg !15818
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15821, metadata !DIExpression()), !dbg !15823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !15824
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15826, !srcloc !15763
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15826
  call void @llvm.dbg.value(metadata i32 %3, metadata !15760, metadata !DIExpression()) #25, !dbg !15828
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !15828
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !15824
  call void @llvm.dbg.value(metadata i32 %3, metadata !15822, metadata !DIExpression()), !dbg !15823
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15829
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15831
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15832
  br i1 %6, label %7, label %8, !dbg !15833

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15834
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !15836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !15836
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !15838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15840, !srcloc !15789
  br label %24, !dbg !15841

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15842
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15843
  %10 = icmp eq i32 %9, 0, !dbg !15843
  br i1 %10, label %21, label %11, !dbg !15845

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15846
  br i1 %12, label %13, label %21, !dbg !15847

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15848
  %15 = icmp sgt i32 %14, %0, !dbg !15851
  br i1 %15, label %19, label %16, !dbg !15852

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15853
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15853
  call void @llvm.dbg.value(metadata i32 %18, metadata !15822, metadata !DIExpression()), !dbg !15823
  br label %22, !dbg !15855

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15856
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15856
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15858
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15823
  call void @llvm.dbg.value(metadata i32 %23, metadata !15822, metadata !DIExpression()), !dbg !15823
  call void @llvm.dbg.value(metadata i32 %23, metadata !15775, metadata !DIExpression()) #25, !dbg !15860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !15860
  call void @llvm.dbg.value(metadata i32 %23, metadata !15783, metadata !DIExpression()) #25, !dbg !15862
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15864, !srcloc !15789
  br label %24, !dbg !15865

24:                                               ; preds = %22, %7
  ret void, !dbg !15865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !15866 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15870, metadata !DIExpression()), !dbg !15872
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15873
  %3 = icmp eq i32 %2, 0, !dbg !15873
  br i1 %3, label %16, label %4, !dbg !15874

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15875
  br i1 %5, label %16, label %6, !dbg !15876

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15877
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15877
  %9 = load i8, i8* %8, align 2, !dbg !15877
  %10 = sext i8 %9 to i32, !dbg !15878
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15879
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !15880
  br i1 %12, label %16, label %13, !dbg !15881

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15882
  %15 = xor i1 %14, true, !dbg !15883
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15872
  call void @llvm.dbg.value(metadata i1 %17, metadata !15871, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15872
  ret i1 %17, !dbg !15884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15885 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15889, metadata !DIExpression()), !dbg !15891
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15892
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15890, metadata !DIExpression()), !dbg !15891
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15893
  br i1 %3, label %5, label %4, !dbg !15895

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15896
  br label %5, !dbg !15898

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15889, metadata !DIExpression()), !dbg !15891
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15899
  ret i32 %6, !dbg !15900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15901 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15903, metadata !DIExpression()), !dbg !15905
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15906
  %3 = load i8, i8* %2, align 1, !dbg !15906
  call void @llvm.dbg.value(metadata i8 %3, metadata !15904, metadata !DIExpression()), !dbg !15905
  %4 = and i8 %3, 31, !dbg !15907
  %5 = icmp ne i8 %4, 0, !dbg !15908
  ret i1 %5, !dbg !15909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15910 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15912, metadata !DIExpression()), !dbg !15913
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15914
  br i1 %2, label %3, label %7, !dbg !15916

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15917, metadata !DIExpression()) #25, !dbg !15920
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15923
  %5 = load i8, i8* %4, align 1, !dbg !15924
  %6 = and i8 %5, 127, !dbg !15924
  store i8 %6, i8* %4, align 1, !dbg !15924
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15925, metadata !DIExpression()) #25, !dbg !15928
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15932
  br label %7, !dbg !15933

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15934, metadata !DIExpression()) #25, !dbg !15937
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15939
  %9 = load i8, i8* %8, align 1, !dbg !15940
  %10 = or i8 %9, -128, !dbg !15940
  store i8 %10, i8* %8, align 1, !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15941, metadata !DIExpression()) #25, !dbg !15944
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15948, metadata !DIExpression()) #25, !dbg !15956
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15954, metadata !DIExpression()) #25, !dbg !15956
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15958
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15955, metadata !DIExpression()) #25, !dbg !15956
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15960
  br i1 %12, label %23, label %13, !dbg !15958

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15955, metadata !DIExpression()) #25, !dbg !15956
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15962
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15955, metadata !DIExpression()) #25, !dbg !15956
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !15963
  %17 = icmp sgt i32 %16, 0, !dbg !15966
  br i1 %17, label %18, label %20, !dbg !15967

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15968
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !15970
  br label %25, !dbg !15971

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !15960
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15955, metadata !DIExpression()) #25, !dbg !15956
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15960
  br i1 %22, label %23, label %13, !dbg !15958, !llvm.loop !15972

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15974
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !15975
  br label %25, !dbg !15976

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15977
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15978
  %28 = zext i1 %27 to i32, !dbg !15978
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15979
  ret void, !dbg !15980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15981 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15983, metadata !DIExpression()), !dbg !15984
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15985
  ret i1 %2, !dbg !15986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !15987 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15989, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15990, metadata !DIExpression()), !dbg !15991
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15992
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15993
  ret void, !dbg !15994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15995 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15999, metadata !DIExpression()), !dbg !16000
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !16001
  br i1 %2, label %6, label %3, !dbg !16001

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16002
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16002
  br label %6, !dbg !16001

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16001
  ret %struct._dnode* %7, !dbg !16003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16004 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16008, metadata !DIExpression()), !dbg !16012
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16009, metadata !DIExpression()), !dbg !16012
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16013
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16013
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16010, metadata !DIExpression()), !dbg !16012
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16014
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16015
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16016
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16017
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16018
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16019
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16020
  ret void, !dbg !16021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16022 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16026, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16027, metadata !DIExpression()), !dbg !16028
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16029
  br i1 %3, label %6, label %4, !dbg !16030

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !16031
  br label %6, !dbg !16030

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16030
  ret %struct._dnode* %7, !dbg !16032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16033 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16037, metadata !DIExpression()), !dbg !16040
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16038, metadata !DIExpression()), !dbg !16040
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16041
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16041
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16039, metadata !DIExpression()), !dbg !16040
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16042
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16043
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16044
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16045
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16046
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16047
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16048
  ret void, !dbg !16049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16052, metadata !DIExpression()), !dbg !16054
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16055
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16062, metadata !DIExpression()) #25, !dbg !16064
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16065
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16066
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16066
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16053, metadata !DIExpression()), !dbg !16054
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16067, metadata !DIExpression()) #25, !dbg !16073
  call void @llvm.dbg.value(metadata i32 %0, metadata !16072, metadata !DIExpression()) #25, !dbg !16073
  %6 = icmp eq i32 %0, 0, !dbg !16076
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16078
  br i1 %6, label %8, label %15, !dbg !16079

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !16080
  br i1 %9, label %15, label %10, !dbg !16082

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !16083
  br i1 %11, label %15, label %12, !dbg !16085

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !16086
  %14 = icmp eq i32 %13, 0, !dbg !16086
  br i1 %14, label %18, label %15, !dbg !16088

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16089
  br i1 %16, label %18, label %17, !dbg !16092

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16093
  br label %18, !dbg !16095

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16078
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16078
  ret void, !dbg !16096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !16097 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16101, metadata !DIExpression()), !dbg !16104
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16102, metadata !DIExpression()), !dbg !16104
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !16105
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16103, metadata !DIExpression()), !dbg !16104
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16102, metadata !DIExpression()), !dbg !16104
  ret %struct.k_thread* %3, !dbg !16106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16107 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16109, metadata !DIExpression()), !dbg !16110
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16111
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !16112
  %4 = xor i1 %3, true, !dbg !16113
  ret i1 %4, !dbg !16114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16115 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16117, metadata !DIExpression()), !dbg !16118
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16119
  %3 = load i16, i16* %2, align 2, !dbg !16119
  %4 = icmp ult i16 %3, 128, !dbg !16120
  %5 = zext i1 %4 to i32, !dbg !16120
  ret i32 %5, !dbg !16121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16122 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16128, metadata !DIExpression()), !dbg !16129
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16130
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !16131
  %4 = xor i1 %3, true, !dbg !16132
  ret i1 %4, !dbg !16133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16134 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16140, metadata !DIExpression()), !dbg !16141
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16142
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16142
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16143
  ret i1 %4, !dbg !16144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16145 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16147, metadata !DIExpression()), !dbg !16149
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16148, metadata !DIExpression()), !dbg !16149
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16150
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16150
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16151
  br i1 %5, label %9, label %6, !dbg !16152

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16153
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16153
  br label %9, !dbg !16152

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16152
  ret %struct._dnode* %10, !dbg !16154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16155 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16159, metadata !DIExpression()), !dbg !16160
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16161
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16161
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16162
  ret i1 %4, !dbg !16163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16164 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16168, metadata !DIExpression()), !dbg !16171
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16172
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16172
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16169, metadata !DIExpression()), !dbg !16171
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16173
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16173
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16170, metadata !DIExpression()), !dbg !16171
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16174
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16175
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16176
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16177
  tail call fastcc void @sys_dnode_init.274(%struct._dnode* noundef %0) #26, !dbg !16178
  ret void, !dbg !16179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.274(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16180 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16182, metadata !DIExpression()), !dbg !16183
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16184
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16185
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16186
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16187
  ret void, !dbg !16188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16193, metadata !DIExpression()), !dbg !16195
  call void @llvm.dbg.value(metadata i32 128, metadata !16194, metadata !DIExpression()), !dbg !16195
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16196
  %3 = load i8, i8* %2, align 1, !dbg !16196
  %4 = icmp slt i8 %3, 0, !dbg !16197
  ret i1 %4, !dbg !16198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16203, metadata !DIExpression()), !dbg !16205
  call void @llvm.dbg.value(metadata i32 %1, metadata !16204, metadata !DIExpression()), !dbg !16205
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !16206
  ret i1 %3, !dbg !16207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !16208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16210, metadata !DIExpression()), !dbg !16211
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16212
  ret i1 %2, !dbg !16213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16216, metadata !DIExpression()), !dbg !16218
  call void @llvm.dbg.value(metadata i32 %1, metadata !16217, metadata !DIExpression()), !dbg !16218
  %3 = icmp slt i32 %0, %1, !dbg !16219
  ret i1 %3, !dbg !16220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16221 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16223, metadata !DIExpression()), !dbg !16227
  call void @llvm.dbg.value(metadata i32 0, metadata !16224, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16229
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16231, !srcloc !15763
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16231
  call void @llvm.dbg.value(metadata i32 %3, metadata !15760, metadata !DIExpression()) #25, !dbg !16233
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16233
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16229
  call void @llvm.dbg.value(metadata i32 %3, metadata !16226, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata i32 undef, metadata !16224, metadata !DIExpression()), !dbg !16228
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16234
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !16239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16239
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !16241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16243, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !16224, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata i32 undef, metadata !16224, metadata !DIExpression()), !dbg !16228
  ret void, !dbg !16244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16247, metadata !DIExpression()), !dbg !16248
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16249
  br i1 %2, label %24, label %3, !dbg !16251

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16252
  br i1 %4, label %5, label %24, !dbg !16253

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15934, metadata !DIExpression()) #25, !dbg !16254
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16257
  %7 = load i8, i8* %6, align 1, !dbg !16258
  %8 = or i8 %7, -128, !dbg !16258
  store i8 %8, i8* %6, align 1, !dbg !16258
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15941, metadata !DIExpression()) #25, !dbg !16259
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15948, metadata !DIExpression()) #25, !dbg !16261
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15954, metadata !DIExpression()) #25, !dbg !16261
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16263
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15955, metadata !DIExpression()) #25, !dbg !16261
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16264
  br i1 %10, label %21, label %11, !dbg !16263

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15955, metadata !DIExpression()) #25, !dbg !16261
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16265
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15955, metadata !DIExpression()) #25, !dbg !16261
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !16266
  %15 = icmp sgt i32 %14, 0, !dbg !16267
  br i1 %15, label %16, label %18, !dbg !16268

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16269
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !16270
  br label %23, !dbg !16271

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !16264
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15955, metadata !DIExpression()) #25, !dbg !16261
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16264
  br i1 %20, label %21, label %11, !dbg !16263, !llvm.loop !16272

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16274
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !16275
  br label %23, !dbg !16276

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16277
  br label %24, !dbg !16278

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16280 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16282, metadata !DIExpression()), !dbg !16283
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16284
  br i1 %2, label %6, label %3, !dbg !16285

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !16286
  %5 = xor i1 %4, true, !dbg !16285
  br label %6, !dbg !16285

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16287
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16288 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16290, metadata !DIExpression()), !dbg !16294
  call void @llvm.dbg.value(metadata i32 0, metadata !16291, metadata !DIExpression()), !dbg !16295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16296
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16298, !srcloc !15763
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16298
  call void @llvm.dbg.value(metadata i32 %3, metadata !15760, metadata !DIExpression()) #25, !dbg !16300
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16300
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16296
  call void @llvm.dbg.value(metadata i32 %3, metadata !16293, metadata !DIExpression()), !dbg !16295
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()), !dbg !16295
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !16301
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !16304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16304
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !16306
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16308, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !16291, metadata !DIExpression()), !dbg !16295
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()), !dbg !16295
  ret void, !dbg !16309
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16310 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16312, metadata !DIExpression()), !dbg !16314
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16315
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16317, !srcloc !15763
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16317
  call void @llvm.dbg.value(metadata i32 %3, metadata !15760, metadata !DIExpression()) #25, !dbg !16319
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16319
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16315
  call void @llvm.dbg.value(metadata i32 %3, metadata !16313, metadata !DIExpression()), !dbg !16314
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16320
  br i1 %4, label %5, label %6, !dbg !16322

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !16323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16323
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !16326
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16328, !srcloc !15789
  br label %8, !dbg !16329

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.279(%struct.k_thread* noundef %0) #26, !dbg !16330
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16331
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16332
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16332
  br label %8, !dbg !16333

8:                                                ; preds = %6, %5
  ret void, !dbg !16333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16336, metadata !DIExpression()), !dbg !16337
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16338
  %3 = load i8, i8* %2, align 1, !dbg !16338
  %4 = and i8 %3, 4, !dbg !16339
  %5 = icmp eq i8 %4, 0, !dbg !16340
  ret i1 %5, !dbg !16341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.279(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16342 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16344, metadata !DIExpression()), !dbg !16345
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16346
  %3 = load i8, i8* %2, align 1, !dbg !16347
  %4 = and i8 %3, -5, !dbg !16347
  store i8 %4, i8* %2, align 1, !dbg !16347
  ret void, !dbg !16348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16349 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16352, metadata !DIExpression()), !dbg !16353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16351, metadata !DIExpression()), !dbg !16353
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16354
  br i1 %4, label %5, label %9, !dbg !16356

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16357
  br i1 %6, label %7, label %9, !dbg !16358

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16359, metadata !DIExpression()) #25, !dbg !16365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16364, metadata !DIExpression()) #25, !dbg !16365
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16368
  br label %10, !dbg !16369

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !16370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !16373
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16375, !srcloc !15789
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16381, metadata !DIExpression()), !dbg !16382
  call void @llvm.dbg.value(metadata i32 %0, metadata !16383, metadata !DIExpression()), !dbg !16388
  %2 = icmp eq i32 %0, 0, !dbg !16390
  br i1 %2, label %3, label %6, !dbg !16391

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16392, !srcloc !16399
  call void @llvm.dbg.value(metadata i32 %4, metadata !16395, metadata !DIExpression()) #25, !dbg !16400
  %5 = icmp eq i32 %4, 0, !dbg !16401
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16382
  ret i1 %7, !dbg !16402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !16403 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16406
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16405, metadata !DIExpression()), !dbg !16407
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16408
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16409
  ret i1 %3, !dbg !16410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16413, metadata !DIExpression()), !dbg !16415
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16416
  call void @llvm.dbg.value(metadata i32 %2, metadata !16414, metadata !DIExpression()), !dbg !16415
  ret i32 %2, !dbg !16417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16418 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16420, metadata !DIExpression()), !dbg !16424
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16425
  call void @llvm.dbg.value(metadata i32 0, metadata !16421, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16427
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16429, !srcloc !15763
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16429
  call void @llvm.dbg.value(metadata i32 %4, metadata !15760, metadata !DIExpression()) #25, !dbg !16431
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16431
  call void @llvm.dbg.value(metadata i32 %4, metadata !15754, metadata !DIExpression()) #25, !dbg !16427
  call void @llvm.dbg.value(metadata i32 %4, metadata !16423, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata i32 undef, metadata !16421, metadata !DIExpression()), !dbg !16426
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16432
  br i1 %5, label %6, label %10, !dbg !16436

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15917, metadata !DIExpression()) #25, !dbg !16437
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16440
  %8 = load i8, i8* %7, align 1, !dbg !16441
  %9 = and i8 %8, 127, !dbg !16441
  store i8 %9, i8* %7, align 1, !dbg !16441
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15925, metadata !DIExpression()) #25, !dbg !16442
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16444
  br label %10, !dbg !16445

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16446
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16447
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16448
  %13 = zext i1 %12 to i32, !dbg !16448
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16449
  call void @llvm.dbg.value(metadata i32 %4, metadata !15775, metadata !DIExpression()) #25, !dbg !16450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16450
  call void @llvm.dbg.value(metadata i32 %4, metadata !15783, metadata !DIExpression()) #25, !dbg !16452
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16454, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !16421, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata i32 undef, metadata !16421, metadata !DIExpression()), !dbg !16426
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16455
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16457
  br i1 %15, label %16, label %17, !dbg !16458

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16459
  br label %17, !dbg !16461

17:                                               ; preds = %16, %10
  ret void, !dbg !16462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16463 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16465, metadata !DIExpression()), !dbg !16466
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16467
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16468
  ret i32 %3, !dbg !16469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16472, metadata !DIExpression()), !dbg !16473
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16474
  %3 = load i8, i8* %2, align 1, !dbg !16475
  %4 = or i8 %3, 16, !dbg !16475
  store i8 %4, i8* %2, align 1, !dbg !16475
  ret void, !dbg !16476
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16477 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16478, !srcloc !15763
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16478
  call void @llvm.dbg.value(metadata i32 %2, metadata !15760, metadata !DIExpression()) #25, !dbg !16480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16480
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16481
  ret void, !dbg !16482
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16485, metadata !DIExpression()), !dbg !16486
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16487
  br i1 %2, label %3, label %5, !dbg !16489

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16490
  br label %6, !dbg !16492

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15783, metadata !DIExpression()) #25, !dbg !16493
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16496, !srcloc !15789
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16497
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16500, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16503
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16505, !srcloc !15763
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16505
  call void @llvm.dbg.value(metadata i32 %3, metadata !15760, metadata !DIExpression()) #25, !dbg !16507
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16507
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16503
  call void @llvm.dbg.value(metadata i32 %3, metadata !16501, metadata !DIExpression()), !dbg !16502
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16508
  br i1 %4, label %6, label %5, !dbg !16510

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !16511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16511
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !16514
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16516, !srcloc !15789
  br label %8, !dbg !16517

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16518
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16519
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16520
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16520
  br label %8, !dbg !16521

8:                                                ; preds = %6, %5
  ret void, !dbg !16521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16524, metadata !DIExpression()), !dbg !16525
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16526
  %3 = load i8, i8* %2, align 1, !dbg !16526
  %4 = and i8 %3, 16, !dbg !16527
  %5 = icmp ne i8 %4, 0, !dbg !16528
  ret i1 %5, !dbg !16529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16532, metadata !DIExpression()), !dbg !16533
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16534
  %3 = load i8, i8* %2, align 1, !dbg !16535
  %4 = and i8 %3, -17, !dbg !16535
  store i8 %4, i8* %2, align 1, !dbg !16535
  ret void, !dbg !16536
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16537 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16547, metadata !DIExpression()), !dbg !16551
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16545, metadata !DIExpression()), !dbg !16551
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16546, metadata !DIExpression()), !dbg !16551
  call void @llvm.dbg.value(metadata i32 0, metadata !16548, metadata !DIExpression()), !dbg !16552
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16553
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16555, !srcloc !15763
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16555
  call void @llvm.dbg.value(metadata i32 %5, metadata !15760, metadata !DIExpression()) #25, !dbg !16557
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16557
  call void @llvm.dbg.value(metadata i32 %5, metadata !15754, metadata !DIExpression()) #25, !dbg !16553
  call void @llvm.dbg.value(metadata i32 %5, metadata !16550, metadata !DIExpression()), !dbg !16552
  call void @llvm.dbg.value(metadata i32 undef, metadata !16548, metadata !DIExpression()), !dbg !16552
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16558
  call void @llvm.dbg.value(metadata i32 %5, metadata !15775, metadata !DIExpression()) #25, !dbg !16561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16561
  call void @llvm.dbg.value(metadata i32 %5, metadata !15783, metadata !DIExpression()) #25, !dbg !16563
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16565, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !16548, metadata !DIExpression()), !dbg !16552
  call void @llvm.dbg.value(metadata i32 undef, metadata !16548, metadata !DIExpression()), !dbg !16552
  ret void, !dbg !16566
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16567 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16571, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16569, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16570, metadata !DIExpression()), !dbg !16572
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !16573
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16574
  ret void, !dbg !16575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16576 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16580, metadata !DIExpression()), !dbg !16582
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16581, metadata !DIExpression()), !dbg !16582
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16583
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16584
  %3 = icmp eq %union.anon* %1, null, !dbg !16585
  br i1 %3, label %21, label %4, !dbg !16587

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16588
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16590
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16591
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15948, metadata !DIExpression()) #25, !dbg !16592
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15954, metadata !DIExpression()) #25, !dbg !16592
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !16594
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15955, metadata !DIExpression()) #25, !dbg !16592
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16595
  br i1 %8, label %19, label %9, !dbg !16594

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15955, metadata !DIExpression()) #25, !dbg !16592
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16596
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15955, metadata !DIExpression()) #25, !dbg !16592
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16597
  %13 = icmp sgt i32 %12, 0, !dbg !16598
  br i1 %13, label %14, label %16, !dbg !16599

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16600
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16601
  br label %21, !dbg !16602

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16595
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15955, metadata !DIExpression()) #25, !dbg !16592
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16595
  br i1 %18, label %19, label %9, !dbg !16594, !llvm.loop !16603

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16605
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16606
  br label %21, !dbg !16607

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16609 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16614, metadata !DIExpression()), !dbg !16615
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16613, metadata !DIExpression()), !dbg !16615
  %4 = icmp eq i64 %3, -1, !dbg !16616
  br i1 %4, label %6, label %5, !dbg !16618

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.280(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16619
  br label %6, !dbg !16621

6:                                                ; preds = %5, %2
  ret void, !dbg !16622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.280(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16623 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16626, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16625, metadata !DIExpression()), !dbg !16627
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16628
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16629
  ret void, !dbg !16630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16631 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16633, metadata !DIExpression()), !dbg !16641
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16642
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16642
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16634, metadata !DIExpression()), !dbg !16641
  call void @llvm.dbg.value(metadata i32 0, metadata !16635, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16644
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16646, !srcloc !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()) #25, !dbg !16648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16644
  call void @llvm.dbg.value(metadata i32 undef, metadata !16637, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata i32 undef, metadata !16635, metadata !DIExpression()), !dbg !16643
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16649
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16650
  %7 = load i8, i8* %6, align 1, !dbg !16650
  %8 = and i8 %7, 40, !dbg !16651
  %9 = icmp eq i8 %8, 0, !dbg !16651
  call void @llvm.dbg.value(metadata i1 %9, metadata !16638, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16652
  br i1 %9, label %10, label %17, !dbg !16653

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16654
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !16654
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !16654
  %14 = icmp eq %union.anon* %13, null, !dbg !16658
  br i1 %14, label %16, label %15, !dbg !16659

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16660
  br label %16, !dbg !16662

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.279(%struct.k_thread* noundef nonnull %3) #26, !dbg !16663
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16664
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16665
  br label %17, !dbg !16666

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16646
  call void @llvm.dbg.value(metadata i32 %18, metadata !15760, metadata !DIExpression()) #25, !dbg !16648
  call void @llvm.dbg.value(metadata i32 %18, metadata !15754, metadata !DIExpression()) #25, !dbg !16644
  call void @llvm.dbg.value(metadata i32 %18, metadata !16637, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()) #25, !dbg !16667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16667
  call void @llvm.dbg.value(metadata i32 undef, metadata !15783, metadata !DIExpression()) #25, !dbg !16669
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16671, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !16635, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata i32 undef, metadata !16635, metadata !DIExpression()), !dbg !16643
  ret void, !dbg !16672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16675, metadata !DIExpression()), !dbg !16676
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16677
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16678
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16679
  store %union.anon* null, %union.anon** %2, align 8, !dbg !16680
  ret void, !dbg !16681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16684, metadata !DIExpression()), !dbg !16685
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16686
  %3 = load i8, i8* %2, align 1, !dbg !16687
  %4 = and i8 %3, -3, !dbg !16687
  store i8 %4, i8* %2, align 1, !dbg !16687
  ret void, !dbg !16688
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16689 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16691, metadata !DIExpression()), !dbg !16692
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16693
  br i1 %2, label %3, label %7, !dbg !16695

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15917, metadata !DIExpression()) #25, !dbg !16696
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16699
  %5 = load i8, i8* %4, align 1, !dbg !16700
  %6 = and i8 %5, 127, !dbg !16700
  store i8 %6, i8* %4, align 1, !dbg !16700
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15925, metadata !DIExpression()) #25, !dbg !16701
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16703
  br label %7, !dbg !16704

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16705
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16706
  %10 = zext i1 %9 to i32, !dbg !16706
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16707
  ret void, !dbg !16708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16709 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16711, metadata !DIExpression()), !dbg !16712
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16713
  %3 = load i8, i8* %2, align 1, !dbg !16714
  %4 = or i8 %3, 2, !dbg !16714
  store i8 %4, i8* %2, align 1, !dbg !16714
  ret void, !dbg !16715
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16716 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16718, metadata !DIExpression()), !dbg !16722
  call void @llvm.dbg.value(metadata i32 0, metadata !16719, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16724
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16726, !srcloc !15763
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16726
  call void @llvm.dbg.value(metadata i32 %3, metadata !15760, metadata !DIExpression()) #25, !dbg !16728
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16728
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16724
  call void @llvm.dbg.value(metadata i32 %3, metadata !16721, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16719, metadata !DIExpression()), !dbg !16723
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16729
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !16732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16732
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !16734
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16736, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !16719, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16719, metadata !DIExpression()), !dbg !16723
  ret void, !dbg !16737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16738 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16744, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata i32 %0, metadata !16742, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16743, metadata !DIExpression()), !dbg !16749
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16750
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16751
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16752
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16753
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16754
  call void @llvm.dbg.value(metadata i32 %6, metadata !16745, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata i32 0, metadata !16746, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16756
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16758, !srcloc !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()) #25, !dbg !16760
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16760
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16756
  call void @llvm.dbg.value(metadata i32 undef, metadata !16748, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.value(metadata i32 undef, metadata !16746, metadata !DIExpression()), !dbg !16755
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16761
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16765
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16766
  br i1 %10, label %11, label %12, !dbg !16767

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16768
  br label %12, !dbg !16770

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16758
  call void @llvm.dbg.value(metadata i32 %13, metadata !15760, metadata !DIExpression()) #25, !dbg !16760
  call void @llvm.dbg.value(metadata i32 %13, metadata !15754, metadata !DIExpression()) #25, !dbg !16756
  call void @llvm.dbg.value(metadata i32 %13, metadata !16748, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()) #25, !dbg !16771
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !15783, metadata !DIExpression()) #25, !dbg !16773
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16775, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !16746, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.value(metadata i32 undef, metadata !16746, metadata !DIExpression()), !dbg !16755
  ret i32 %6, !dbg !16776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16777 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16782, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.value(metadata i64 undef, metadata !16784, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16781, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16783, metadata !DIExpression()), !dbg !16785
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16786
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16787
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16788
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16790, !srcloc !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()) #25, !dbg !16792
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16792
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16788
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16793
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16794
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16359, metadata !DIExpression()) #25, !dbg !16795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16364, metadata !DIExpression()) #25, !dbg !16795
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16797
  ret i32 %9, !dbg !16798
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16799 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16803, metadata !DIExpression()), !dbg !16808
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16804, metadata !DIExpression()), !dbg !16808
  call void @llvm.dbg.value(metadata i32 0, metadata !16805, metadata !DIExpression()), !dbg !16809
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16810
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16812, !srcloc !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()) #25, !dbg !16814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !16807, metadata !DIExpression()), !dbg !16809
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16804, metadata !DIExpression()), !dbg !16808
  call void @llvm.dbg.value(metadata i32 undef, metadata !16805, metadata !DIExpression()), !dbg !16809
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16815
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16804, metadata !DIExpression()), !dbg !16808
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16818
  br i1 %5, label %7, label %6, !dbg !16820

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16821
  br label %7, !dbg !16823

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16812
  call void @llvm.dbg.value(metadata i32 %8, metadata !15760, metadata !DIExpression()) #25, !dbg !16814
  call void @llvm.dbg.value(metadata i32 %8, metadata !15754, metadata !DIExpression()) #25, !dbg !16810
  call void @llvm.dbg.value(metadata i32 %8, metadata !16807, metadata !DIExpression()), !dbg !16809
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()) #25, !dbg !16824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16824
  call void @llvm.dbg.value(metadata i32 undef, metadata !15783, metadata !DIExpression()) #25, !dbg !16826
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16828, !srcloc !15789
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16804, metadata !DIExpression()), !dbg !16808
  call void @llvm.dbg.value(metadata i32 undef, metadata !16805, metadata !DIExpression()), !dbg !16809
  ret %struct.k_thread* %4, !dbg !16829
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16830 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16832, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16833, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata i32 0, metadata !16834, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16839
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16841, !srcloc !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()) #25, !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16839
  call void @llvm.dbg.value(metadata i32 undef, metadata !16836, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16833, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata i32 undef, metadata !16834, metadata !DIExpression()), !dbg !16838
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16844
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16833, metadata !DIExpression()), !dbg !16837
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16847
  br i1 %5, label %8, label %6, !dbg !16849

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16850
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16852
  br label %8, !dbg !16853

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16841
  call void @llvm.dbg.value(metadata i32 %9, metadata !15760, metadata !DIExpression()) #25, !dbg !16843
  call void @llvm.dbg.value(metadata i32 %9, metadata !15754, metadata !DIExpression()) #25, !dbg !16839
  call void @llvm.dbg.value(metadata i32 %9, metadata !16836, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()) #25, !dbg !16854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16854
  call void @llvm.dbg.value(metadata i32 undef, metadata !15783, metadata !DIExpression()) #25, !dbg !16856
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16858, !srcloc !15789
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16833, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata i32 undef, metadata !16834, metadata !DIExpression()), !dbg !16838
  ret %struct.k_thread* %4, !dbg !16859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16860 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16862, metadata !DIExpression()), !dbg !16863
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16718, metadata !DIExpression()) #25, !dbg !16864
  call void @llvm.dbg.value(metadata i32 0, metadata !16719, metadata !DIExpression()) #25, !dbg !16866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16867
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16869, !srcloc !15763
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16869
  call void @llvm.dbg.value(metadata i32 %3, metadata !15760, metadata !DIExpression()) #25, !dbg !16871
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16871
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16867
  call void @llvm.dbg.value(metadata i32 %3, metadata !16721, metadata !DIExpression()) #25, !dbg !16866
  call void @llvm.dbg.value(metadata i32 undef, metadata !16719, metadata !DIExpression()) #25, !dbg !16866
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16872
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !16873
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16873
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !16875
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16877, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !16719, metadata !DIExpression()) #25, !dbg !16866
  call void @llvm.dbg.value(metadata i32 undef, metadata !16719, metadata !DIExpression()) #25, !dbg !16866
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16878
  ret void, !dbg !16879
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16880 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16882, metadata !DIExpression()), !dbg !16888
  call void @llvm.dbg.value(metadata i32 %1, metadata !16883, metadata !DIExpression()), !dbg !16888
  call void @llvm.dbg.value(metadata i8 0, metadata !16884, metadata !DIExpression()), !dbg !16888
  call void @llvm.dbg.value(metadata i32 0, metadata !16885, metadata !DIExpression()), !dbg !16889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16890
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16892, !srcloc !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()) #25, !dbg !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16894
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16890
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()), !dbg !16889
  call void @llvm.dbg.value(metadata i8 poison, metadata !16884, metadata !DIExpression()), !dbg !16888
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()), !dbg !16889
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16895
  call void @llvm.dbg.value(metadata i1 %6, metadata !16884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16888
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16898

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15917, metadata !DIExpression()) #25, !dbg !16899
  %11 = load i8, i8* %4, align 1, !dbg !16905
  %12 = and i8 %11, 127, !dbg !16905
  store i8 %12, i8* %4, align 1, !dbg !16905
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15925, metadata !DIExpression()) #25, !dbg !16906
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16908
  store i8 %9, i8* %8, align 2, !dbg !16909
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15934, metadata !DIExpression()) #25, !dbg !16910
  %13 = load i8, i8* %4, align 1, !dbg !16912
  %14 = or i8 %13, -128, !dbg !16912
  store i8 %14, i8* %4, align 1, !dbg !16912
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15941, metadata !DIExpression()) #25, !dbg !16913
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15948, metadata !DIExpression()) #25, !dbg !16915
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15954, metadata !DIExpression()) #25, !dbg !16915
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16917
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15955, metadata !DIExpression()) #25, !dbg !16915
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16918
  br i1 %16, label %26, label %17, !dbg !16917

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15955, metadata !DIExpression()) #25, !dbg !16915
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16919
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15955, metadata !DIExpression()) #25, !dbg !16915
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !16920
  %21 = icmp sgt i32 %20, 0, !dbg !16921
  br i1 %21, label %22, label %23, !dbg !16922

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !16923
  br label %27, !dbg !16924

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !16918
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15955, metadata !DIExpression()) #25, !dbg !16915
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16918
  br i1 %25, label %26, label %17, !dbg !16917, !llvm.loop !16925

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !16927
  br label %27, !dbg !16928

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16929
  br label %29, !dbg !16930

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16931
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16892
  call void @llvm.dbg.value(metadata i32 %30, metadata !15760, metadata !DIExpression()) #25, !dbg !16894
  call void @llvm.dbg.value(metadata i32 %30, metadata !15754, metadata !DIExpression()) #25, !dbg !16890
  call void @llvm.dbg.value(metadata i32 %30, metadata !16887, metadata !DIExpression()), !dbg !16889
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()) #25, !dbg !16933
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15783, metadata !DIExpression()) #25, !dbg !16935
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !16937, !srcloc !15789
  call void @llvm.dbg.value(metadata i8 poison, metadata !16884, metadata !DIExpression()), !dbg !16888
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()), !dbg !16889
  ret i1 %6, !dbg !16938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16943, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.value(metadata i32 %1, metadata !16944, metadata !DIExpression()), !dbg !16946
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16947
  call void @llvm.dbg.value(metadata i1 %3, metadata !16945, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16946
  br i1 %3, label %4, label %12, !dbg !16948

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16950
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16951
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16951
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16951
  %9 = load i8, i8* %8, align 1, !dbg !16951
  %10 = icmp eq i8 %9, 0, !dbg !16952
  br i1 %10, label %11, label %12, !dbg !16953

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16954
  br label %12, !dbg !16956

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16958 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16960, metadata !DIExpression()), !dbg !16963
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16964
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16966, !srcloc !15763
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16966
  call void @llvm.dbg.value(metadata i32 %2, metadata !15760, metadata !DIExpression()) #25, !dbg !16968
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16968
  call void @llvm.dbg.value(metadata i32 %2, metadata !15754, metadata !DIExpression()) #25, !dbg !16964
  call void @llvm.dbg.value(metadata i32 %2, metadata !16962, metadata !DIExpression()), !dbg !16963
  call void @llvm.dbg.value(metadata i32 undef, metadata !16960, metadata !DIExpression()), !dbg !16963
  tail call fastcc void @z_sched_lock() #26, !dbg !16969
  call void @llvm.dbg.value(metadata i32 %2, metadata !15775, metadata !DIExpression()) #25, !dbg !16972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !16972
  call void @llvm.dbg.value(metadata i32 %2, metadata !15783, metadata !DIExpression()) #25, !dbg !16974
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16976, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !16960, metadata !DIExpression()), !dbg !16963
  call void @llvm.dbg.value(metadata i32 undef, metadata !16960, metadata !DIExpression()), !dbg !16963
  ret void, !dbg !16977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16978 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16979
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16980
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16980
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16980
  %5 = load i8, i8* %4, align 1, !dbg !16981
  %6 = add i8 %5, -1, !dbg !16981
  store i8 %6, i8* %4, align 1, !dbg !16981
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16982, !srcloc !16984
  ret void, !dbg !16985
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16986 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16988, metadata !DIExpression()), !dbg !16991
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !16992
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16994, !srcloc !15763
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16994
  call void @llvm.dbg.value(metadata i32 %2, metadata !15760, metadata !DIExpression()) #25, !dbg !16996
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !16996
  call void @llvm.dbg.value(metadata i32 %2, metadata !15754, metadata !DIExpression()) #25, !dbg !16992
  call void @llvm.dbg.value(metadata i32 %2, metadata !16990, metadata !DIExpression()), !dbg !16991
  call void @llvm.dbg.value(metadata i32 undef, metadata !16988, metadata !DIExpression()), !dbg !16991
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16997
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !17000
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !17000
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !17000
  %7 = load i8, i8* %6, align 1, !dbg !17001
  %8 = add i8 %7, 1, !dbg !17001
  store i8 %8, i8* %6, align 1, !dbg !17001
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !17002
  call void @llvm.dbg.value(metadata i32 %2, metadata !15775, metadata !DIExpression()) #25, !dbg !17003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !17003
  call void @llvm.dbg.value(metadata i32 %2, metadata !15783, metadata !DIExpression()) #25, !dbg !17005
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17007, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 1, metadata !16988, metadata !DIExpression()), !dbg !16991
  call void @llvm.dbg.value(metadata i32 undef, metadata !16988, metadata !DIExpression()), !dbg !16991
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17008
  ret void, !dbg !17009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !17010 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17011
  ret %struct.k_thread* %1, !dbg !17012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !17013 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17017, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17018, metadata !DIExpression()), !dbg !17022
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17023
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17019, metadata !DIExpression()), !dbg !17022
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17024
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17020, metadata !DIExpression()), !dbg !17022
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !17025
  call void @llvm.dbg.value(metadata i32 %5, metadata !17021, metadata !DIExpression()), !dbg !17022
  %6 = icmp sgt i32 %5, 0, !dbg !17026
  br i1 %6, label %17, label %7, !dbg !17028

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17029
  br i1 %8, label %17, label %9, !dbg !17031

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17032
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17032
  %12 = load i32, i32* %11, align 8, !dbg !17032
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17034
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17034
  %15 = load i32, i32* %14, align 8, !dbg !17034
  %16 = icmp ult i32 %12, %15, !dbg !17035
  br label %17, !dbg !17036

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17037
  ret i1 %18, !dbg !17038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17039 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17056, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17057, metadata !DIExpression()), !dbg !17071
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17072
  %5 = load i32, i32* %4, align 4, !dbg !17073
  %6 = add nsw i32 %5, 1, !dbg !17073
  store i32 %6, i32* %4, align 4, !dbg !17073
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17074
  store i32 %5, i32* %7, align 8, !dbg !17075
  %8 = load i32, i32* %4, align 4, !dbg !17076
  %9 = icmp eq i32 %8, 0, !dbg !17077
  br i1 %9, label %10, label %32, !dbg !17078

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17079
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17079
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17059, metadata !DIExpression()), !dbg !17079
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17079
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17079
  %14 = load i32, i32* %13, align 4, !dbg !17079
  %15 = shl i32 %14, 2, !dbg !17079
  %16 = alloca i8, i32 %15, align 8, !dbg !17079
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17079
  store i8* %16, i8** %17, align 4, !dbg !17079
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17079
  %19 = alloca i8, i32 %14, align 8, !dbg !17079
  store i8* %19, i8** %18, align 4, !dbg !17079
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17079
  store i32 -1, i32* %20, align 4, !dbg !17079
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17080
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17068, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17058, metadata !DIExpression()), !dbg !17071
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17082
  br i1 %22, label %23, label %24, !dbg !17079

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17082
  br label %32, !dbg !17083

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !17058, metadata !DIExpression()), !dbg !17071
  %26 = load i32, i32* %4, align 4, !dbg !17084
  %27 = add nsw i32 %26, 1, !dbg !17084
  store i32 %27, i32* %4, align 4, !dbg !17084
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17086
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17086
  store i32 %26, i32* %29, align 8, !dbg !17087
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17080
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17068, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17058, metadata !DIExpression()), !dbg !17071
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17082
  br i1 %31, label %23, label %24, !dbg !17079, !llvm.loop !17088

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17090
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17091
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !17092
  ret void, !dbg !17093
}

; Function Attrs: optsize
declare !dbg !17094 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17099 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17102 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17104, metadata !DIExpression()), !dbg !17106
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17105, metadata !DIExpression()), !dbg !17106
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17107
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17108
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !17109
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17110
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17110
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17112
  br i1 %7, label %8, label %10, !dbg !17113

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17114
  store i32 0, i32* %9, align 4, !dbg !17116
  br label %10, !dbg !17117

10:                                               ; preds = %8, %2
  ret void, !dbg !17118
}

; Function Attrs: optsize
declare !dbg !17119 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17120 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17124, metadata !DIExpression()), !dbg !17127
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17125, metadata !DIExpression()), !dbg !17127
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17128
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !17129
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17126, metadata !DIExpression()), !dbg !17127
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17125, metadata !DIExpression()), !dbg !17127
  ret %struct.k_thread* %4, !dbg !17130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17131 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17135, metadata !DIExpression()), !dbg !17136
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17137
  ret %struct.rbnode* %2, !dbg !17138
}

; Function Attrs: optsize
declare !dbg !17139 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !17142 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17154, metadata !DIExpression()), !dbg !17158
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17159
  %3 = load i32, i32* %2, align 4, !dbg !17159
  %4 = icmp eq i32 %3, 0, !dbg !17161
  br i1 %4, label %10, label %5, !dbg !17162

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17155, metadata !DIExpression()), !dbg !17158
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17163, !range !9485
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17164
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17156, metadata !DIExpression()), !dbg !17158
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !17165
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17157, metadata !DIExpression()), !dbg !17158
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17155, metadata !DIExpression()), !dbg !17158
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17158
  ret %struct.k_thread* %11, !dbg !17166
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17167 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17171, metadata !DIExpression()), !dbg !17174
  call void @llvm.dbg.value(metadata i32 0, metadata !17172, metadata !DIExpression()), !dbg !17174
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17175
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17173, metadata !DIExpression()), !dbg !17174
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17176
  br i1 %3, label %8, label %4, !dbg !17177

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17178
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17180
  call void @llvm.dbg.value(metadata i32 1, metadata !17172, metadata !DIExpression()), !dbg !17174
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17175
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17173, metadata !DIExpression()), !dbg !17174
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17176
  br i1 %7, label %8, label %4, !dbg !17177, !llvm.loop !17181

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17174
  ret i32 %9, !dbg !17183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !17184 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17186, metadata !DIExpression()), !dbg !17187
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17188
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !17189
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17190
  ret %struct.k_thread* %4, !dbg !17191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17192 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17201, metadata !DIExpression()), !dbg !17202
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17203
  tail call fastcc void @sys_dlist_init.287(%struct._dnode* noundef nonnull %2) #26, !dbg !17204
  ret void, !dbg !17205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.287(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17206 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17210, metadata !DIExpression()), !dbg !17211
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17212
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17213
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17214
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17215
  ret void, !dbg !17216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17217 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !17218
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !17219
  ret void, !dbg !17220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !17221 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17226, metadata !DIExpression()), !dbg !17227
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17228
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17228
  %4 = load i8, i8* %3, align 2, !dbg !17228
  %5 = sext i8 %4 to i32, !dbg !17229
  ret i32 %5, !dbg !17230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17231 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17235, metadata !DIExpression()), !dbg !17238
  call void @llvm.dbg.value(metadata i32 %1, metadata !17236, metadata !DIExpression()), !dbg !17238
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17237, metadata !DIExpression()), !dbg !17238
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17239
  ret void, !dbg !17240
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17241 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !17242
  br i1 %1, label %8, label %2, !dbg !17243

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17244
  br i1 %3, label %8, label %4, !dbg !17245

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17246
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !17247
  %7 = xor i1 %6, true, !dbg !17245
  br label %8, !dbg !17245

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !17249 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17250, !range !8674
  %2 = icmp eq i8 %1, 0, !dbg !17250
  ret i1 %2, !dbg !17251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17252 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !17255
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17257, !srcloc !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()) #25, !dbg !17259
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !17259
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()), !dbg !17260
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15917, metadata !DIExpression()) #25, !dbg !17264
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17266
  %4 = load i8, i8* %3, align 1, !dbg !17267
  %5 = and i8 %4, 127, !dbg !17267
  store i8 %5, i8* %3, align 1, !dbg !17267
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15925, metadata !DIExpression()) #25, !dbg !17268
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !17270
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17271
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15934, metadata !DIExpression()) #25, !dbg !17272
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17274
  %8 = load i8, i8* %7, align 1, !dbg !17275
  %9 = or i8 %8, -128, !dbg !17275
  store i8 %9, i8* %7, align 1, !dbg !17275
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15941, metadata !DIExpression()) #25, !dbg !17276
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15948, metadata !DIExpression()) #25, !dbg !17278
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15954, metadata !DIExpression()) #25, !dbg !17278
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17280
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15955, metadata !DIExpression()) #25, !dbg !17278
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17281
  br i1 %11, label %22, label %12, !dbg !17280

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15955, metadata !DIExpression()) #25, !dbg !17278
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17282
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15955, metadata !DIExpression()) #25, !dbg !17278
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !17283
  %16 = icmp sgt i32 %15, 0, !dbg !17284
  br i1 %16, label %17, label %19, !dbg !17285

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17286
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !17287
  br label %24, !dbg !17288

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !17281
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15955, metadata !DIExpression()) #25, !dbg !17278
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17281
  br i1 %21, label %22, label %12, !dbg !17280, !llvm.loop !17289

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17291
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !17292
  br label %24, !dbg !17293

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17257
  call void @llvm.dbg.value(metadata i32 %25, metadata !15760, metadata !DIExpression()) #25, !dbg !17259
  call void @llvm.dbg.value(metadata i32 %25, metadata !15754, metadata !DIExpression()) #25, !dbg !17255
  call void @llvm.dbg.value(metadata i32 %25, metadata !17254, metadata !DIExpression()), !dbg !17260
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16359, metadata !DIExpression()) #25, !dbg !17295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16364, metadata !DIExpression()) #25, !dbg !17295
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !17297
  ret void, !dbg !17298
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17299 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17303, metadata !DIExpression()), !dbg !17306
  %3 = icmp eq i64 %2, -1, !dbg !17307
  br i1 %3, label %4, label %6, !dbg !17309

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17310
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !17312
  br label %11, !dbg !17313

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17304, metadata !DIExpression()), !dbg !17306
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17314
  %8 = sext i32 %7 to i64, !dbg !17314
  call void @llvm.dbg.value(metadata i64 %8, metadata !17304, metadata !DIExpression()), !dbg !17306
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !17315
  %10 = trunc i64 %9 to i32, !dbg !17315
  call void @llvm.dbg.value(metadata i32 %10, metadata !17305, metadata !DIExpression()), !dbg !17306
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17306
  ret i32 %12, !dbg !17316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17317 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17321, metadata !DIExpression()), !dbg !17322
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17323, !srcloc !17325
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17326
  ret void, !dbg !17327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17328 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17332, metadata !DIExpression()), !dbg !17336
  %2 = icmp eq i64 %0, 0, !dbg !17337
  br i1 %2, label %3, label %4, !dbg !17339

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17340
  br label %29, !dbg !17342

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17334, metadata !DIExpression()), !dbg !17336
  %5 = icmp sgt i64 %0, -3, !dbg !17343
  br i1 %5, label %6, label %10, !dbg !17345

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17346
  %8 = trunc i64 %0 to i32, !dbg !17348
  %9 = add i32 %7, %8, !dbg !17348
  call void @llvm.dbg.value(metadata i32 %9, metadata !17333, metadata !DIExpression()), !dbg !17336
  br label %13, !dbg !17349

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17350
  %12 = sub i32 -2, %11, !dbg !17350
  call void @llvm.dbg.value(metadata i32 %12, metadata !17333, metadata !DIExpression()), !dbg !17336
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17352
  call void @llvm.dbg.value(metadata i32 %14, metadata !17333, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !17353
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17355, !srcloc !15763
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17355
  call void @llvm.dbg.value(metadata i32 %16, metadata !15760, metadata !DIExpression()) #25, !dbg !17357
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !17357
  call void @llvm.dbg.value(metadata i32 %16, metadata !15754, metadata !DIExpression()) #25, !dbg !17353
  call void @llvm.dbg.value(metadata i32 %16, metadata !17335, metadata !DIExpression()), !dbg !17336
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17358
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17359
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17360
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17361
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17362
  tail call fastcc void @z_add_thread_timeout.280(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17362
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17363
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17364
  call void @llvm.dbg.value(metadata i32 %16, metadata !16359, metadata !DIExpression()) #25, !dbg !17365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16364, metadata !DIExpression()) #25, !dbg !17365
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17367
  %22 = zext i32 %14 to i64, !dbg !17368
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17369
  %24 = zext i32 %23 to i64, !dbg !17369
  %25 = sub nsw i64 %22, %24, !dbg !17370
  call void @llvm.dbg.value(metadata i64 %25, metadata !17332, metadata !DIExpression()), !dbg !17336
  %26 = icmp sgt i64 %25, 0, !dbg !17371
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17371
  %28 = trunc i64 %27 to i32, !dbg !17371
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17336
  ret i32 %30, !dbg !17372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17373 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17375, metadata !DIExpression()), !dbg !17376
  call void @llvm.dbg.value(metadata i64 %0, metadata !15795, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i32 10000, metadata !15798, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i32 1000, metadata !15799, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i8 1, metadata !15800, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i1 false, metadata !15801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17377
  call void @llvm.dbg.value(metadata i1 false, metadata !15802, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17377
  call void @llvm.dbg.value(metadata i8 0, metadata !15803, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i1 false, metadata !15804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17377
  call void @llvm.dbg.value(metadata i1 true, metadata !15805, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17377
  call void @llvm.dbg.value(metadata i64 0, metadata !15806, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i64 0, metadata !15806, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i64 %0, metadata !15795, metadata !DIExpression()), !dbg !17377
  %2 = udiv i64 %0, 10, !dbg !17379
  ret i64 %2, !dbg !17383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17384 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17385, !srcloc !17387
  tail call void @z_impl_k_yield() #26, !dbg !17388
  ret void, !dbg !17389
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17394, metadata !DIExpression()), !dbg !17396
  %2 = sext i32 %0 to i64, !dbg !17397
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17398
  call void @llvm.dbg.value(metadata i64 %3, metadata !17395, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17396
  %4 = shl i64 %3, 32, !dbg !17399
  %5 = ashr exact i64 %4, 32, !dbg !17399
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17400
  call void @llvm.dbg.value(metadata i32 %6, metadata !17395, metadata !DIExpression()), !dbg !17396
  %7 = sext i32 %6 to i64, !dbg !17401
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17402
  %9 = trunc i64 %8 to i32, !dbg !17402
  ret i32 %9, !dbg !17403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !17404 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17406, metadata !DIExpression()), !dbg !17407
  call void @llvm.dbg.value(metadata i64 %0, metadata !15795, metadata !DIExpression()), !dbg !17408
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15798, metadata !DIExpression()), !dbg !17408
  call void @llvm.dbg.value(metadata i32 10000, metadata !15799, metadata !DIExpression()), !dbg !17408
  call void @llvm.dbg.value(metadata i8 1, metadata !15800, metadata !DIExpression()), !dbg !17408
  call void @llvm.dbg.value(metadata i1 false, metadata !15801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17408
  call void @llvm.dbg.value(metadata i1 true, metadata !15802, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17408
  call void @llvm.dbg.value(metadata i8 0, metadata !15803, metadata !DIExpression()), !dbg !17408
  call void @llvm.dbg.value(metadata i1 false, metadata !15804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17408
  call void @llvm.dbg.value(metadata i1 true, metadata !15805, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17408
  call void @llvm.dbg.value(metadata i64 0, metadata !15806, metadata !DIExpression()), !dbg !17408
  call void @llvm.dbg.value(metadata i64 0, metadata !15806, metadata !DIExpression()), !dbg !17408
  %2 = add i64 %0, 99, !dbg !17410
  call void @llvm.dbg.value(metadata i64 %2, metadata !15795, metadata !DIExpression()), !dbg !17408
  %3 = udiv i64 %2, 100, !dbg !17411
  ret i64 %3, !dbg !17412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17413 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17415, metadata !DIExpression()), !dbg !17416
  call void @llvm.dbg.value(metadata i64 %0, metadata !15795, metadata !DIExpression()), !dbg !17417
  call void @llvm.dbg.value(metadata i32 10000, metadata !15798, metadata !DIExpression()), !dbg !17417
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15799, metadata !DIExpression()), !dbg !17417
  call void @llvm.dbg.value(metadata i8 1, metadata !15800, metadata !DIExpression()), !dbg !17417
  call void @llvm.dbg.value(metadata i1 false, metadata !15801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17417
  call void @llvm.dbg.value(metadata i1 false, metadata !15802, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17417
  call void @llvm.dbg.value(metadata i8 0, metadata !15803, metadata !DIExpression()), !dbg !17417
  call void @llvm.dbg.value(metadata i1 true, metadata !15804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17417
  call void @llvm.dbg.value(metadata i1 false, metadata !15805, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17417
  call void @llvm.dbg.value(metadata i64 0, metadata !15806, metadata !DIExpression()), !dbg !17417
  call void @llvm.dbg.value(metadata i64 0, metadata !15806, metadata !DIExpression()), !dbg !17417
  %2 = mul i64 %0, 100, !dbg !17419
  ret i64 %2, !dbg !17421
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17422 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17424, metadata !DIExpression()), !dbg !17425
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17426
  br i1 %2, label %14, label %3, !dbg !17428

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17429
  %5 = icmp slt i32 %4, 0, !dbg !17431
  br i1 %5, label %6, label %10, !dbg !17432

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17433
  %8 = load i8, i8* %7, align 1, !dbg !17433
  %9 = icmp eq i8 %8, 16, !dbg !17436
  br i1 %9, label %10, label %14, !dbg !17437

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17438
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17439
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17440, !srcloc !16399
  call void @llvm.dbg.value(metadata i32 %11, metadata !16395, metadata !DIExpression()) #25, !dbg !17444
  %12 = icmp eq i32 %11, 0, !dbg !17445
  br i1 %12, label %13, label %14, !dbg !17446

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17447
  br label %14, !dbg !17449

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17453, metadata !DIExpression()), !dbg !17454
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17455
  %3 = load i8, i8* %2, align 1, !dbg !17455
  %4 = and i8 %3, 2, !dbg !17456
  %5 = icmp ne i8 %4, 0, !dbg !17457
  ret i1 %5, !dbg !17458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !17459 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17464
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17463, metadata !DIExpression()), !dbg !17465
  ret %struct.k_thread* %1, !dbg !17466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17467 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17468, !srcloc !16399
  call void @llvm.dbg.value(metadata i32 %1, metadata !16395, metadata !DIExpression()) #25, !dbg !17471
  %2 = icmp eq i32 %1, 0, !dbg !17472
  br i1 %2, label %3, label %8, !dbg !17473

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17474
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17475
  %6 = icmp ne i32 %5, 0, !dbg !17473
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17476
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17477 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17479, metadata !DIExpression()), !dbg !17481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !17482
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17484, !srcloc !15763
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17484
  call void @llvm.dbg.value(metadata i32 %3, metadata !15760, metadata !DIExpression()) #25, !dbg !17486
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !17486
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !17482
  call void @llvm.dbg.value(metadata i32 %3, metadata !17480, metadata !DIExpression()), !dbg !17481
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17487
  %5 = load i8, i8* %4, align 4, !dbg !17487
  %6 = and i8 %5, 1, !dbg !17489
  %7 = icmp eq i8 %6, 0, !dbg !17490
  br i1 %7, label %9, label %8, !dbg !17491

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !17492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !17492
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !17495
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17497, !srcloc !15789
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17498, !srcloc !17500
  br label %24, !dbg !17501

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17502
  %11 = load i8, i8* %10, align 1, !dbg !17502
  %12 = and i8 %11, 8, !dbg !17504
  %13 = icmp eq i8 %12, 0, !dbg !17505
  br i1 %13, label %15, label %14, !dbg !17506

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !17507
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !17507
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !17510
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17512, !srcloc !15789
  br label %24, !dbg !17513

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17514
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17515
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17517
  br i1 %17, label %18, label %23, !dbg !17518

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17519, !srcloc !16399
  call void @llvm.dbg.value(metadata i32 %19, metadata !16395, metadata !DIExpression()) #25, !dbg !17522
  %20 = icmp eq i32 %19, 0, !dbg !17523
  br i1 %20, label %21, label %23, !dbg !17524

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16359, metadata !DIExpression()) #25, !dbg !17525
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16364, metadata !DIExpression()) #25, !dbg !17525
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17528
  br label %23, !dbg !17529

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15775, metadata !DIExpression()) #25, !dbg !17530
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !17530
  call void @llvm.dbg.value(metadata i32 %3, metadata !15783, metadata !DIExpression()) #25, !dbg !17532
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17534, !srcloc !15789
  br label %24, !dbg !17535

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17538, metadata !DIExpression()), !dbg !17539
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17540
  %3 = load i8, i8* %2, align 1, !dbg !17540
  %4 = and i8 %3, 8, !dbg !17542
  %5 = icmp eq i8 %4, 0, !dbg !17543
  br i1 %5, label %6, label %20, !dbg !17544

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17545
  %8 = or i8 %7, 8, !dbg !17545
  store i8 %8, i8* %2, align 1, !dbg !17545
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17547
  br i1 %9, label %10, label %12, !dbg !17549

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15917, metadata !DIExpression()) #25, !dbg !17550
  %11 = and i8 %8, 95, !dbg !17553
  store i8 %11, i8* %2, align 1, !dbg !17553
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15925, metadata !DIExpression()) #25, !dbg !17554
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17556
  br label %12, !dbg !17557

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17558
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17558
  %15 = icmp eq %union.anon* %14, null, !dbg !17560
  br i1 %15, label %17, label %16, !dbg !17561

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17562
  br label %17, !dbg !17564

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17565
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17566
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !17567
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17568
  br label %20, !dbg !17569

20:                                               ; preds = %17, %1
  ret void, !dbg !17570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !17571 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17575, metadata !DIExpression()), !dbg !17577
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17578
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17576, metadata !DIExpression()), !dbg !17577
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17579
  br i1 %3, label %10, label %4, !dbg !17580

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17581
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17583
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17584, metadata !DIExpression()), !dbg !17590
  call void @llvm.dbg.value(metadata i32 0, metadata !17589, metadata !DIExpression()), !dbg !17590
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17592
  store i32 0, i32* %7, align 4, !dbg !17593
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17594
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17578
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17576, metadata !DIExpression()), !dbg !17577
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17579
  br i1 %9, label %10, label %4, !dbg !17580, !llvm.loop !17595

10:                                               ; preds = %4, %1
  ret void, !dbg !17597
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17598 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17603, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17602, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !17607
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17609, !srcloc !15763
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17609
  call void @llvm.dbg.value(metadata i32 %4, metadata !15760, metadata !DIExpression()) #25, !dbg !17611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !17611
  call void @llvm.dbg.value(metadata i32 %4, metadata !15754, metadata !DIExpression()) #25, !dbg !17607
  call void @llvm.dbg.value(metadata i32 %4, metadata !17604, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata i32 0, metadata !17605, metadata !DIExpression()), !dbg !17606
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17612
  %6 = load i8, i8* %5, align 1, !dbg !17612
  %7 = and i8 %6, 8, !dbg !17614
  %8 = icmp eq i8 %7, 0, !dbg !17615
  br i1 %8, label %9, label %24, !dbg !17616

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17603, metadata !DIExpression()), !dbg !17606
  %11 = icmp eq i64 %10, 0, !dbg !17617
  br i1 %11, label %24, label %12, !dbg !17619

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17620
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17622
  br i1 %14, label %24, label %15, !dbg !17623

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17624
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !17624
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17625
  %19 = icmp eq %union.anon* %17, %18, !dbg !17626
  br i1 %19, label %24, label %20, !dbg !17627

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17628
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !17630
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17631
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17632
  call void @llvm.dbg.value(metadata i32 %4, metadata !16359, metadata !DIExpression()) #25, !dbg !17633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16364, metadata !DIExpression()) #25, !dbg !17633
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17635
  call void @llvm.dbg.value(metadata i32 %23, metadata !17605, metadata !DIExpression()), !dbg !17606
  br label %26, !dbg !17636

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17637
  call void @llvm.dbg.value(metadata i32 %25, metadata !17605, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.value(metadata i32 %4, metadata !15775, metadata !DIExpression()) #25, !dbg !17638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !17638
  call void @llvm.dbg.value(metadata i32 %4, metadata !15783, metadata !DIExpression()) #25, !dbg !17640
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17642, !srcloc !15789
  br label %26, !dbg !17643

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17606
  ret i32 %27, !dbg !17644
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17645 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17649, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i32 %1, metadata !17650, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i8* %2, metadata !17651, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i8 0, metadata !17653, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i32 0, metadata !17654, metadata !DIExpression()), !dbg !17658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15748, metadata !DIExpression()) #25, !dbg !17659
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17661, !srcloc !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()) #25, !dbg !17663
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()) #25, !dbg !17663
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !17659
  call void @llvm.dbg.value(metadata i32 undef, metadata !17656, metadata !DIExpression()), !dbg !17658
  call void @llvm.dbg.value(metadata i8 poison, metadata !17653, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i32 undef, metadata !17654, metadata !DIExpression()), !dbg !17658
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17664
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17652, metadata !DIExpression()), !dbg !17657
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17667
  br i1 %7, label %12, label %8, !dbg !17669

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17670, metadata !DIExpression()), !dbg !17678
  call void @llvm.dbg.value(metadata i32 %1, metadata !17676, metadata !DIExpression()), !dbg !17678
  call void @llvm.dbg.value(metadata i8* %2, metadata !17677, metadata !DIExpression()), !dbg !17678
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17584, metadata !DIExpression()), !dbg !17681
  call void @llvm.dbg.value(metadata i32 %1, metadata !17589, metadata !DIExpression()), !dbg !17681
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17683
  store i32 %1, i32* %9, align 4, !dbg !17684
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17685
  store i8* %2, i8** %10, align 4, !dbg !17686
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17687
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17688
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17689
  call void @llvm.dbg.value(metadata i8 1, metadata !17653, metadata !DIExpression()), !dbg !17657
  br label %12, !dbg !17690

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17661
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17661
  call void @llvm.dbg.value(metadata i32 %14, metadata !15760, metadata !DIExpression()) #25, !dbg !17663
  call void @llvm.dbg.value(metadata i32 %14, metadata !15754, metadata !DIExpression()) #25, !dbg !17659
  call void @llvm.dbg.value(metadata i32 %14, metadata !17656, metadata !DIExpression()), !dbg !17658
  call void @llvm.dbg.value(metadata i8 poison, metadata !17653, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()) #25, !dbg !17691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15780, metadata !DIExpression()) #25, !dbg !17691
  call void @llvm.dbg.value(metadata i32 undef, metadata !15783, metadata !DIExpression()) #25, !dbg !17693
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17695, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 undef, metadata !17654, metadata !DIExpression()), !dbg !17658
  ret i1 %13, !dbg !17696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17697 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17703, metadata !DIExpression()), !dbg !17708
  call void @llvm.dbg.value(metadata i64 undef, metadata !17705, metadata !DIExpression()), !dbg !17708
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17702, metadata !DIExpression()), !dbg !17708
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17704, metadata !DIExpression()), !dbg !17708
  call void @llvm.dbg.value(metadata i8** %4, metadata !17706, metadata !DIExpression()), !dbg !17708
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !17709
  call void @llvm.dbg.value(metadata i32 %6, metadata !17707, metadata !DIExpression()), !dbg !17708
  %7 = icmp eq i8** %4, null, !dbg !17710
  br i1 %7, label %12, label %8, !dbg !17712

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17713
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17715
  %11 = load i8*, i8** %10, align 4, !dbg !17715
  store i8* %11, i8** %4, align 4, !dbg !17716
  br label %12, !dbg !17717

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17718
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17719 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17721
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17722
  ret void, !dbg !17723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17724 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17734, metadata !DIExpression()), !dbg !17751
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17732, metadata !DIExpression()), !dbg !17751
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17733, metadata !DIExpression()), !dbg !17751
  %5 = icmp eq i64 %4, -1, !dbg !17752
  br i1 %5, label %55, label %6, !dbg !17754

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17755
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17756
  call void @llvm.dbg.value(metadata i32 0, metadata !17735, metadata !DIExpression()), !dbg !17757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17758, metadata !DIExpression()) #25, !dbg !17765
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17767, !srcloc !17773
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17767
  call void @llvm.dbg.value(metadata i32 %9, metadata !17770, metadata !DIExpression()) #25, !dbg !17774
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()) #25, !dbg !17774
  call void @llvm.dbg.value(metadata i32 %9, metadata !17764, metadata !DIExpression()) #25, !dbg !17765
  call void @llvm.dbg.value(metadata i32 %9, metadata !17741, metadata !DIExpression()), !dbg !17757
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()), !dbg !17757
  %10 = icmp slt i64 %4, -1, !dbg !17775
  br i1 %10, label %11, label %17, !dbg !17776

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17777
  %13 = add i64 %4, %12, !dbg !17778
  %14 = sub i64 -2, %13, !dbg !17778
  call void @llvm.dbg.value(metadata i64 %14, metadata !17745, metadata !DIExpression()), !dbg !17779
  %15 = icmp sgt i64 %14, 1, !dbg !17780
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17780
  br label %22, !dbg !17781

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17782
  %19 = tail call fastcc i32 @elapsed.298() #26, !dbg !17784
  %20 = sext i32 %19 to i64, !dbg !17784
  %21 = add nsw i64 %18, %20, !dbg !17785
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17786
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17787
  store i64 %23, i64* %24, align 8, !dbg !17788
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17789
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17742, metadata !DIExpression()), !dbg !17791
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17792
  br i1 %26, label %42, label %27, !dbg !17792

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17793
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17742, metadata !DIExpression()), !dbg !17791
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17797
  %31 = load i64, i64* %30, align 8, !dbg !17797
  %32 = icmp slt i64 %28, %31, !dbg !17798
  br i1 %32, label %33, label %38, !dbg !17799

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17797
  %35 = sub nsw i64 %31, %28, !dbg !17800
  store i64 %35, i64* %34, align 8, !dbg !17800
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17802
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17803
  tail call fastcc void @sys_dlist_insert.299(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17804
  br label %44, !dbg !17805

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17806
  store i64 %39, i64* %24, align 8, !dbg !17806
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17807
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17742, metadata !DIExpression()), !dbg !17791
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17792
  br i1 %41, label %42, label %27, !dbg !17792, !llvm.loop !17808

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17810
  tail call fastcc void @sys_dlist_append.300(%struct._dnode* noundef %43) #26, !dbg !17813
  br label %44, !dbg !17814

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17815
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17816
  br i1 %46, label %47, label %54, !dbg !17817

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17818
  call void @llvm.dbg.value(metadata i32 %48, metadata !17748, metadata !DIExpression()), !dbg !17819
  %49 = icmp ne i32 %48, 0, !dbg !17820
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17822
  br i1 %52, label %54, label %53, !dbg !17822

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17823
  br label %54, !dbg !17825

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17826, metadata !DIExpression()) #25, !dbg !17832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17831, metadata !DIExpression()) #25, !dbg !17832
  call void @llvm.dbg.value(metadata i32 %9, metadata !17834, metadata !DIExpression()) #25, !dbg !17837
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17839, !srcloc !17840
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()), !dbg !17757
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.298() unnamed_addr #1 !dbg !17842 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17845
  %2 = icmp eq i32 %1, 0, !dbg !17846
  br i1 %2, label %3, label %5, !dbg !17845

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17847
  br label %5, !dbg !17845

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17845
  ret i32 %6, !dbg !17848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !17849 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.303() #26, !dbg !17855
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17853, metadata !DIExpression()), !dbg !17856
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17857
  ret %struct._timeout* %2, !dbg !17858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.299(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !17859 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17863, metadata !DIExpression()), !dbg !17867
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17864, metadata !DIExpression()), !dbg !17867
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17868
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17868
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17865, metadata !DIExpression()), !dbg !17867
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17869
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17870
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17871
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17872
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17873
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17874
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17875
  ret void, !dbg !17876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !17877 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17881, metadata !DIExpression()), !dbg !17883
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17884
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.301(%struct._dnode* noundef %2) #26, !dbg !17885
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17882, metadata !DIExpression()), !dbg !17883
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17886
  ret %struct._timeout* %4, !dbg !17887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.300(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !17888 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17893, metadata !DIExpression()), !dbg !17896
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17894, metadata !DIExpression()), !dbg !17896
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17897
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17895, metadata !DIExpression()), !dbg !17896
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17898
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17899
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17900
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17901
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17902
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17903
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17904
  ret void, !dbg !17905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17906 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17911
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17908, metadata !DIExpression()), !dbg !17912
  %2 = tail call fastcc i32 @elapsed.298() #26, !dbg !17913
  call void @llvm.dbg.value(metadata i32 %2, metadata !17909, metadata !DIExpression()), !dbg !17912
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17914
  br i1 %3, label %14, label %4, !dbg !17916

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17917
  %6 = load i64, i64* %5, align 8, !dbg !17917
  %7 = sext i32 %2 to i64, !dbg !17918
  %8 = sub nsw i64 %6, %7, !dbg !17919
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17920
  br i1 %9, label %14, label %10, !dbg !17921

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17922
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17922
  %13 = trunc i64 %12 to i32, !dbg !17922
  call void @llvm.dbg.value(metadata i32 %13, metadata !17910, metadata !DIExpression()), !dbg !17912
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17924
  call void @llvm.dbg.value(metadata i32 %15, metadata !17910, metadata !DIExpression()), !dbg !17912
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17925
  %17 = icmp ne i32 %16, 0, !dbg !17927
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17928
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17928
  call void @llvm.dbg.value(metadata i32 %20, metadata !17910, metadata !DIExpression()), !dbg !17912
  ret i32 %20, !dbg !17929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.301(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17930 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17934, metadata !DIExpression()), !dbg !17936
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17935, metadata !DIExpression()), !dbg !17936
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17937
  br i1 %2, label %5, label %3, !dbg !17938

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.302(%struct._dnode* noundef nonnull %0) #26, !dbg !17939
  br label %5, !dbg !17938

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17938
  ret %struct._dnode* %6, !dbg !17940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.302(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17941 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17943, metadata !DIExpression()), !dbg !17945
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17944, metadata !DIExpression()), !dbg !17945
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17946
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17947
  br i1 %3, label %7, label %4, !dbg !17948

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17949
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17949
  br label %7, !dbg !17948

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17948
  ret %struct._dnode* %8, !dbg !17950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.303() unnamed_addr #10 !dbg !17951 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17955, metadata !DIExpression()), !dbg !17956
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.304() #26, !dbg !17957
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17957
  ret %struct._dnode* %3, !dbg !17958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.304() unnamed_addr #10 !dbg !17959 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17963, metadata !DIExpression()), !dbg !17964
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17965
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17966
  ret i1 %2, !dbg !17967
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17968 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17972, metadata !DIExpression()), !dbg !17977
  call void @llvm.dbg.value(metadata i32 -22, metadata !17973, metadata !DIExpression()), !dbg !17977
  call void @llvm.dbg.value(metadata i32 0, metadata !17974, metadata !DIExpression()), !dbg !17978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17758, metadata !DIExpression()) #25, !dbg !17979
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17981, !srcloc !17773
  call void @llvm.dbg.value(metadata i32 undef, metadata !17770, metadata !DIExpression()) #25, !dbg !17983
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()) #25, !dbg !17983
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()) #25, !dbg !17979
  call void @llvm.dbg.value(metadata i32 undef, metadata !17976, metadata !DIExpression()), !dbg !17978
  call void @llvm.dbg.value(metadata i32 -22, metadata !17973, metadata !DIExpression()), !dbg !17977
  call void @llvm.dbg.value(metadata i32 undef, metadata !17974, metadata !DIExpression()), !dbg !17978
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17973, metadata !DIExpression()), !dbg !17977
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.307(%struct._dnode* noundef %3) #26, !dbg !17984
  br i1 %4, label %5, label %6, !dbg !17988

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17989
  call void @llvm.dbg.value(metadata i32 0, metadata !17973, metadata !DIExpression()), !dbg !17977
  br label %6, !dbg !17991

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17977
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17981
  call void @llvm.dbg.value(metadata i32 %8, metadata !17770, metadata !DIExpression()) #25, !dbg !17983
  call void @llvm.dbg.value(metadata i32 %8, metadata !17764, metadata !DIExpression()) #25, !dbg !17979
  call void @llvm.dbg.value(metadata i32 %8, metadata !17976, metadata !DIExpression()), !dbg !17978
  call void @llvm.dbg.value(metadata i32 %7, metadata !17973, metadata !DIExpression()), !dbg !17977
  call void @llvm.dbg.value(metadata i32 undef, metadata !17826, metadata !DIExpression()) #25, !dbg !17992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17831, metadata !DIExpression()) #25, !dbg !17992
  call void @llvm.dbg.value(metadata i32 undef, metadata !17834, metadata !DIExpression()) #25, !dbg !17994
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17996, !srcloc !17840
  call void @llvm.dbg.value(metadata i32 undef, metadata !17974, metadata !DIExpression()), !dbg !17978
  ret i32 %7, !dbg !17997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.307(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17998 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18004, metadata !DIExpression()), !dbg !18005
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18006
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18006
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18007
  ret i1 %4, !dbg !18008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !18009 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18011, metadata !DIExpression()), !dbg !18012
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !18013
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18015
  br i1 %3, label %10, label %4, !dbg !18016

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18017
  %6 = load i64, i64* %5, align 8, !dbg !18017
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18019
  %8 = load i64, i64* %7, align 8, !dbg !18020
  %9 = add nsw i64 %8, %6, !dbg !18020
  store i64 %9, i64* %7, align 8, !dbg !18020
  br label %10, !dbg !18021

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18022
  tail call fastcc void @sys_dlist_remove.308(%struct._dnode* noundef %11) #26, !dbg !18023
  ret void, !dbg !18024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.308(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !18025 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18029, metadata !DIExpression()), !dbg !18032
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18033
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18033
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18030, metadata !DIExpression()), !dbg !18032
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18034
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18034
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18031, metadata !DIExpression()), !dbg !18032
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18035
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18036
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18037
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18038
  tail call fastcc void @sys_dnode_init.309(%struct._dnode* noundef %0) #26, !dbg !18039
  ret void, !dbg !18040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.309(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !18041 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18043, metadata !DIExpression()), !dbg !18044
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18045
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18046
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18047
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18048
  ret void, !dbg !18049
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18050 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18056, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i64 0, metadata !18057, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i32 0, metadata !18058, metadata !DIExpression()), !dbg !18062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17758, metadata !DIExpression()) #25, !dbg !18063
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18065, !srcloc !17773
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18065
  call void @llvm.dbg.value(metadata i32 %3, metadata !17770, metadata !DIExpression()) #25, !dbg !18067
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()) #25, !dbg !18067
  call void @llvm.dbg.value(metadata i32 %3, metadata !17764, metadata !DIExpression()) #25, !dbg !18063
  call void @llvm.dbg.value(metadata i32 %3, metadata !18060, metadata !DIExpression()), !dbg !18062
  call void @llvm.dbg.value(metadata i64 0, metadata !18057, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i32 undef, metadata !18058, metadata !DIExpression()), !dbg !18062
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18068
  call void @llvm.dbg.value(metadata i64 %4, metadata !18057, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i32 %3, metadata !17826, metadata !DIExpression()) #25, !dbg !18071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17831, metadata !DIExpression()) #25, !dbg !18071
  call void @llvm.dbg.value(metadata i32 %3, metadata !17834, metadata !DIExpression()) #25, !dbg !18073
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18075, !srcloc !17840
  call void @llvm.dbg.value(metadata i32 undef, metadata !18058, metadata !DIExpression()), !dbg !18062
  ret i64 %4, !dbg !18076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18077 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18079, metadata !DIExpression()), !dbg !18083
  call void @llvm.dbg.value(metadata i64 0, metadata !18080, metadata !DIExpression()), !dbg !18083
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.310(%struct._timeout* noundef %0) #26, !dbg !18084
  br i1 %2, label %21, label %3, !dbg !18086

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !18087
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18081, metadata !DIExpression()), !dbg !18088
  call void @llvm.dbg.value(metadata i64 0, metadata !18080, metadata !DIExpression()), !dbg !18083
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18089
  br i1 %5, label %16, label %6, !dbg !18091

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18081, metadata !DIExpression()), !dbg !18088
  call void @llvm.dbg.value(metadata i64 %8, metadata !18080, metadata !DIExpression()), !dbg !18083
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18092
  %10 = load i64, i64* %9, align 8, !dbg !18092
  %11 = add nsw i64 %10, %8, !dbg !18094
  call void @llvm.dbg.value(metadata i64 %11, metadata !18080, metadata !DIExpression()), !dbg !18083
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18095
  br i1 %12, label %16, label %13, !dbg !18097

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !18098
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18081, metadata !DIExpression()), !dbg !18088
  call void @llvm.dbg.value(metadata i64 %11, metadata !18080, metadata !DIExpression()), !dbg !18083
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18089
  br i1 %15, label %16, label %6, !dbg !18091, !llvm.loop !18099

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18083
  call void @llvm.dbg.value(metadata i64 %17, metadata !18080, metadata !DIExpression()), !dbg !18083
  %18 = tail call fastcc i32 @elapsed.298() #26, !dbg !18101
  %19 = sext i32 %18 to i64, !dbg !18101
  %20 = sub nsw i64 %17, %19, !dbg !18102
  br label %21, !dbg !18103

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18083
  ret i64 %22, !dbg !18104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.310(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18105 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18109, metadata !DIExpression()), !dbg !18110
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18111
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.307(%struct._dnode* noundef %2) #26, !dbg !18112
  %4 = xor i1 %3, true, !dbg !18113
  ret i1 %4, !dbg !18114
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18115 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18117, metadata !DIExpression()), !dbg !18122
  call void @llvm.dbg.value(metadata i64 0, metadata !18118, metadata !DIExpression()), !dbg !18122
  call void @llvm.dbg.value(metadata i32 0, metadata !18119, metadata !DIExpression()), !dbg !18123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17758, metadata !DIExpression()) #25, !dbg !18124
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18126, !srcloc !17773
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18126
  call void @llvm.dbg.value(metadata i32 %3, metadata !17770, metadata !DIExpression()) #25, !dbg !18128
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()) #25, !dbg !18128
  call void @llvm.dbg.value(metadata i32 %3, metadata !17764, metadata !DIExpression()) #25, !dbg !18124
  call void @llvm.dbg.value(metadata i32 %3, metadata !18121, metadata !DIExpression()), !dbg !18123
  call void @llvm.dbg.value(metadata i64 0, metadata !18118, metadata !DIExpression()), !dbg !18122
  call void @llvm.dbg.value(metadata i32 undef, metadata !18119, metadata !DIExpression()), !dbg !18123
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18129
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18132
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18118, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18122
  call void @llvm.dbg.value(metadata i32 %3, metadata !17826, metadata !DIExpression()) #25, !dbg !18133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17831, metadata !DIExpression()) #25, !dbg !18133
  call void @llvm.dbg.value(metadata i32 %3, metadata !17834, metadata !DIExpression()) #25, !dbg !18135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18137, !srcloc !17840
  call void @llvm.dbg.value(metadata i32 undef, metadata !18119, metadata !DIExpression()), !dbg !18123
  %6 = add i64 %5, %4, !dbg !18138
  ret i64 %6, !dbg !18139
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18140 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18142, metadata !DIExpression()), !dbg !18146
  call void @llvm.dbg.value(metadata i32 0, metadata !18143, metadata !DIExpression()), !dbg !18147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17758, metadata !DIExpression()) #25, !dbg !18148
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18150, !srcloc !17773
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18150
  call void @llvm.dbg.value(metadata i32 %2, metadata !17770, metadata !DIExpression()) #25, !dbg !18152
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()) #25, !dbg !18152
  call void @llvm.dbg.value(metadata i32 %2, metadata !17764, metadata !DIExpression()) #25, !dbg !18148
  call void @llvm.dbg.value(metadata i32 %2, metadata !18145, metadata !DIExpression()), !dbg !18147
  call void @llvm.dbg.value(metadata i32 -1, metadata !18142, metadata !DIExpression()), !dbg !18146
  call void @llvm.dbg.value(metadata i32 undef, metadata !18143, metadata !DIExpression()), !dbg !18147
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !18153
  call void @llvm.dbg.value(metadata i32 %3, metadata !18142, metadata !DIExpression()), !dbg !18146
  call void @llvm.dbg.value(metadata i32 %2, metadata !17826, metadata !DIExpression()) #25, !dbg !18156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17831, metadata !DIExpression()) #25, !dbg !18156
  call void @llvm.dbg.value(metadata i32 %2, metadata !17834, metadata !DIExpression()) #25, !dbg !18158
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18160, !srcloc !17840
  call void @llvm.dbg.value(metadata i32 undef, metadata !18143, metadata !DIExpression()), !dbg !18147
  ret i32 %3, !dbg !18161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18164, metadata !DIExpression()), !dbg !18174
  call void @llvm.dbg.value(metadata i1 %1, metadata !18165, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18174
  call void @llvm.dbg.value(metadata i32 0, metadata !18166, metadata !DIExpression()), !dbg !18175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17758, metadata !DIExpression()) #25, !dbg !18176
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18178, !srcloc !17773
  call void @llvm.dbg.value(metadata i32 undef, metadata !17770, metadata !DIExpression()) #25, !dbg !18180
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()) #25, !dbg !18180
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()) #25, !dbg !18176
  call void @llvm.dbg.value(metadata i32 undef, metadata !18168, metadata !DIExpression()), !dbg !18175
  call void @llvm.dbg.value(metadata i32 undef, metadata !18166, metadata !DIExpression()), !dbg !18175
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !18181
  call void @llvm.dbg.value(metadata i32 %4, metadata !18169, metadata !DIExpression()), !dbg !18182
  call void @llvm.dbg.value(metadata i1 undef, metadata !18172, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18182
  %5 = icmp slt i32 %4, 2, !dbg !18183
  call void @llvm.dbg.value(metadata i1 %5, metadata !18173, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18182
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18184
  call void @llvm.dbg.value(metadata i1 %6, metadata !18172, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18182
  br i1 %7, label %11, label %8, !dbg !18184

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18186
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18186
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !18188
  br label %11, !dbg !18189

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18178
  call void @llvm.dbg.value(metadata i32 %12, metadata !17770, metadata !DIExpression()) #25, !dbg !18180
  call void @llvm.dbg.value(metadata i32 %12, metadata !17764, metadata !DIExpression()) #25, !dbg !18176
  call void @llvm.dbg.value(metadata i32 %12, metadata !18168, metadata !DIExpression()), !dbg !18175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17826, metadata !DIExpression()) #25, !dbg !18190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17831, metadata !DIExpression()) #25, !dbg !18190
  call void @llvm.dbg.value(metadata i32 undef, metadata !17834, metadata !DIExpression()) #25, !dbg !18192
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !18194, !srcloc !17840
  call void @llvm.dbg.value(metadata i32 1, metadata !18166, metadata !DIExpression()), !dbg !18175
  call void @llvm.dbg.value(metadata i32 undef, metadata !18166, metadata !DIExpression()), !dbg !18175
  ret void, !dbg !18195
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18200, metadata !DIExpression()), !dbg !18205
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18206
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17758, metadata !DIExpression()) #25, !dbg !18207
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18209, !srcloc !17773
  call void @llvm.dbg.value(metadata i32 undef, metadata !17770, metadata !DIExpression()) #25, !dbg !18211
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()) #25, !dbg !18211
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()) #25, !dbg !18207
  call void @llvm.dbg.value(metadata i32 undef, metadata !18201, metadata !DIExpression()), !dbg !18205
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18205
  call void @llvm.dbg.value(metadata i32 undef, metadata !18201, metadata !DIExpression()), !dbg !18205
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !18212
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18213
  br i1 %4, label %28, label %5, !dbg !18214

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18215
  %10 = load i64, i64* %9, align 8, !dbg !18215
  %11 = sext i32 %8 to i64, !dbg !18216
  %12 = icmp sgt i64 %10, %11, !dbg !18217
  br i1 %12, label %26, label %13, !dbg !18218

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18205
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18202, metadata !DIExpression()), !dbg !18219
  %15 = trunc i64 %10 to i32, !dbg !18220
  call void @llvm.dbg.value(metadata i32 %15, metadata !18204, metadata !DIExpression()), !dbg !18219
  %16 = sext i32 %15 to i64, !dbg !18221
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18222
  %18 = add i64 %17, %16, !dbg !18222
  store i64 %18, i64* @curr_tick, align 8, !dbg !18222
  store i64 0, i64* %9, align 8, !dbg !18223
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !18224
  call void @llvm.dbg.value(metadata i32 %14, metadata !17826, metadata !DIExpression()) #25, !dbg !18225
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17831, metadata !DIExpression()) #25, !dbg !18225
  call void @llvm.dbg.value(metadata i32 %14, metadata !17834, metadata !DIExpression()) #25, !dbg !18227
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18229, !srcloc !17840
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18230
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18230
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !18231
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17758, metadata !DIExpression()) #25, !dbg !18232
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18234, !srcloc !17773
  call void @llvm.dbg.value(metadata i32 undef, metadata !17770, metadata !DIExpression()) #25, !dbg !18236
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()) #25, !dbg !18236
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()) #25, !dbg !18232
  call void @llvm.dbg.value(metadata i32 undef, metadata !18201, metadata !DIExpression()), !dbg !18205
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18237
  %23 = sub nsw i32 %22, %15, !dbg !18237
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18205
  call void @llvm.dbg.value(metadata i32 undef, metadata !18201, metadata !DIExpression()), !dbg !18205
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !18212
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18213
  br i1 %25, label %28, label %5, !dbg !18214, !llvm.loop !18238

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18240
  store i64 %27, i64* %9, align 8, !dbg !18240
  br label %32, !dbg !18243

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18205
  %31 = sext i32 %30 to i64, !dbg !18244
  br label %32, !dbg !18244

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18244
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18205
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18245
  %37 = add i64 %36, %33, !dbg !18245
  store i64 %37, i64* @curr_tick, align 8, !dbg !18245
  store i32 0, i32* @announce_remaining, align 4, !dbg !18246
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !18247
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !18248
  call void @llvm.dbg.value(metadata i32 %35, metadata !17826, metadata !DIExpression()) #25, !dbg !18249
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17831, metadata !DIExpression()) #25, !dbg !18249
  call void @llvm.dbg.value(metadata i32 %35, metadata !17834, metadata !DIExpression()) #25, !dbg !18251
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !18253, !srcloc !17840
  ret void, !dbg !18254
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18255 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18259, metadata !DIExpression()), !dbg !18263
  call void @llvm.dbg.value(metadata i32 0, metadata !18260, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17758, metadata !DIExpression()) #25, !dbg !18265
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18267, !srcloc !17773
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18267
  call void @llvm.dbg.value(metadata i32 %2, metadata !17770, metadata !DIExpression()) #25, !dbg !18269
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()) #25, !dbg !18269
  call void @llvm.dbg.value(metadata i32 %2, metadata !17764, metadata !DIExpression()) #25, !dbg !18265
  call void @llvm.dbg.value(metadata i32 %2, metadata !18262, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata i64 0, metadata !18259, metadata !DIExpression()), !dbg !18263
  call void @llvm.dbg.value(metadata i32 undef, metadata !18260, metadata !DIExpression()), !dbg !18264
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18270
  %4 = tail call fastcc i32 @elapsed.298() #26, !dbg !18273
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18259, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18263
  call void @llvm.dbg.value(metadata i32 %2, metadata !17826, metadata !DIExpression()) #25, !dbg !18274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17831, metadata !DIExpression()) #25, !dbg !18274
  call void @llvm.dbg.value(metadata i32 %2, metadata !17834, metadata !DIExpression()) #25, !dbg !18276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18278, !srcloc !17840
  call void @llvm.dbg.value(metadata i32 undef, metadata !18260, metadata !DIExpression()), !dbg !18264
  %5 = sext i32 %4 to i64, !dbg !18273
  %6 = add i64 %3, %5, !dbg !18279
  ret i64 %6, !dbg !18280
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18281 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18282
  %2 = trunc i64 %1 to i32, !dbg !18283
  ret i32 %2, !dbg !18284
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18285 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18286
  ret i64 %1, !dbg !18287
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18290, metadata !DIExpression()), !dbg !18297
  %2 = icmp eq i32 %0, 0, !dbg !18298
  br i1 %2, label %10, label %3, !dbg !18300

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18301
  call void @llvm.dbg.value(metadata i32 %4, metadata !18291, metadata !DIExpression()), !dbg !18297
  %5 = mul i32 %0, 84, !dbg !18302
  call void @llvm.dbg.value(metadata i32 %5, metadata !18292, metadata !DIExpression()), !dbg !18297
  br label %6, !dbg !18303

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18304
  call void @llvm.dbg.value(metadata i32 %7, metadata !18293, metadata !DIExpression()), !dbg !18305
  %8 = sub i32 %7, %4, !dbg !18306
  %9 = icmp ult i32 %8, %5, !dbg !18308
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18310 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !18311
  ret i32 %1, !dbg !18312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18313 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18315
  ret i32 %1, !dbg !18316
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18317 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18321, metadata !DIExpression()), !dbg !18323
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18324

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18325
  br label %14, !dbg !18329

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18322, metadata !DIExpression()), !dbg !18323
  %6 = icmp slt i64 %2, -1, !dbg !18330
  br i1 %6, label %7, label %9, !dbg !18333

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18334
  br label %14, !dbg !18335

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18337
  %11 = icmp ugt i64 %2, 1, !dbg !18338
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18338
  %13 = add nsw i64 %10, %12, !dbg !18339
  br label %14, !dbg !18340

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18341
  ret i64 %15, !dbg !18342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18343 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.319, i32 0, i32 0)) #27, !dbg !18345
  ret void, !dbg !18346
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!916, !2, !2709, !27, !379, !403, !2711, !2713, !2747, !414, !458, !2749, !2752, !487, !507, !2754, !2762, !2770, !2786, !2797, !2843, !2845, !2873, !2901, !2944, !3016, !3061, !519, !675, !3089, !711, !721, !746, !954, !3094, !1092, !1158, !1340, !1646, !1910, !3133, !2023, !2113, !3135, !3221, !3286, !2162, !3289, !2169, !2537, !3307, !2557, !3309, !2672, !3312}
!llvm.ident = !{!3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314, !3314}
!llvm.module.flags = !{!3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !294, line: 18, type: !371, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !123, globals: !290, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!29 = !{!30, !39, !42, !46, !116}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_mode", file: !31, line: 44, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/crypto/cipher.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_ECB", value: 1)
!35 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CBC", value: 2)
!36 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CTR", value: 3)
!37 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CCM", value: 4)
!38 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_GCM", value: 5)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_algo", file: !31, line: 29, baseType: !32, size: 32, elements: !40)
!40 = !{!41}
!41 = !DIEnumerator(name: "CRYPTO_CIPHER_ALGO_AES", value: 1)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_op", file: !31, line: 34, baseType: !32, size: 32, elements: !43)
!43 = !{!44, !45}
!44 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_DECRYPT", value: 0)
!45 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_ENCRYPT", value: 1)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !47, line: 27, baseType: !32, size: 32, elements: !48)
!47 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!49 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!50 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!51 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!52 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!53 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!54 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!55 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!56 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!57 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!58 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!59 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!60 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!61 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!62 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!63 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!64 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!65 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!104 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!105 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!106 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!107 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!108 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!109 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!110 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!111 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!112 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!113 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!114 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!115 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hash_algo", file: !117, line: 26, baseType: !32, size: 32, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/crypto/hash.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA224", value: 1)
!120 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA256", value: 2)
!121 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA384", value: 3)
!122 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA512", value: 4)
!123 = !{!124, !125, !126}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!125 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/crypto/crypto.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130, !161, !241, !245, !253, !278, !282}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !127, file: !128, line: 66, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!132 = !DISubroutineType(types: !133)
!133 = !{!125, !134}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !143, !144, !145, !154, !155}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !136, file: !137, line: 380, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !136, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !136, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !136, file: !137, line: 386, baseType: !146, size: 32, offset: 96)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !148)
!148 = !{!149, !152}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !147, file: !137, line: 359, baseType: !150, size: 8)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !151)
!151 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !147, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!153 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !136, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !136, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !137, line: 43, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !160)
!160 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !127, file: !128, line: 69, baseType: !162, size: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!163 = !DISubroutineType(types: !164)
!164 = !{!125, !134, !165, !39, !30, !42}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !167)
!167 = !{!168, !212, !217, !218, !219, !220, !239, !240}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !166, file: !31, line: 116, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !170)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !169, file: !31, line: 76, baseType: !30, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !169, file: !31, line: 78, baseType: !173, size: 32, offset: 32)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !169, file: !31, line: 78, size: 32, elements: !174)
!174 = !{!175, !190, !195, !197, !210}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !173, file: !31, line: 79, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DISubroutineType(types: !179)
!179 = !{!125, !165, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !182)
!182 = !{!183, !185, !186, !187, !188, !189}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !181, file: !31, line: 183, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !181, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !181, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !181, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !181, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !181, file: !31, line: 208, baseType: !165, size: 32, offset: 160)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !173, file: !31, line: 80, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DISubroutineType(types: !194)
!194 = !{!125, !165, !180, !184}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !173, file: !31, line: 81, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !173, file: !31, line: 82, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!125, !165, !202, !184}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !204)
!204 = !{!205, !206, !207, !209}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !203, file: !31, line: 219, baseType: !180, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !203, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !203, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !203, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !173, file: !31, line: 83, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !199)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !166, file: !31, line: 126, baseType: !213, size: 32, offset: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 119, size: 32, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !213, file: !31, line: 121, baseType: !184, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !213, file: !31, line: 125, baseType: !124, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !166, file: !31, line: 131, baseType: !134, size: 32, offset: 96)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !166, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !166, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !166, file: !31, line: 156, baseType: !221, size: 32, offset: 192)
!221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 152, size: 32, elements: !222)
!222 = !{!223, !230, !234}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !221, file: !31, line: 153, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !225)
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !224, file: !31, line: 88, baseType: !227, size: 16)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !228)
!228 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !224, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !221, file: !31, line: 154, baseType: !231, size: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !232)
!232 = !{!233}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !231, file: !31, line: 96, baseType: !208, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !221, file: !31, line: 155, baseType: !235, size: 32)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !235, file: !31, line: 100, baseType: !227, size: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !235, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !166, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !166, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !127, file: !128, line: 74, baseType: !242, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = !DISubroutineType(types: !244)
!244 = !{!125, !134, !165}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !127, file: !128, line: 77, baseType: !246, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DISubroutineType(types: !248)
!248 = !{!125, !134, !249}
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !180, !125}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !127, file: !128, line: 81, baseType: !254, size: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!125, !134, !257, !116}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !259)
!259 = !{!260, !261, !262, !276, !277}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !258, file: !117, line: 51, baseType: !134, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !258, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !258, file: !117, line: 65, baseType: !263, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!125, !257, !267, !153}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !269)
!269 = !{!270, !271, !274, !275}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !268, file: !117, line: 91, baseType: !184, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !268, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !273, line: 214, baseType: !32)
!273 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !268, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !268, file: !117, line: 107, baseType: !257, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !258, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !127, file: !128, line: 84, baseType: !279, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!125, !134, !257}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !127, file: !128, line: 86, baseType: !283, size: 32, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!125, !134, !286}
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !267, !125}
!290 = !{!25, !291, !314, !316, !318, !320, !324, !327, !329, !334, !339, !344, !349, !351, !356, !361, !366}
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "iv", scope: !293, file: !294, line: 227, type: !311, isLocal: true, isDefinition: true)
!293 = distinct !DISubprogram(name: "cbc_mode", scope: !294, file: !294, line: 205, type: !295, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !297)
!294 = !DIFile(filename: "zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !DISubroutineType(types: !296)
!296 = !{null, !134}
!297 = !{!298, !299, !303, !307, !308, !309, !310}
!298 = !DILocalVariable(name: "dev", arg: 1, scope: !293, file: !294, line: 205, type: !134)
!299 = !DILocalVariable(name: "encrypted", scope: !293, file: !294, line: 207, type: !300)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 640, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 80)
!303 = !DILocalVariable(name: "decrypted", scope: !293, file: !294, line: 208, type: !304)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 512, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 64)
!307 = !DILocalVariable(name: "ini", scope: !293, file: !294, line: 209, type: !166)
!308 = !DILocalVariable(name: "encrypt", scope: !293, file: !294, line: 214, type: !181)
!309 = !DILocalVariable(name: "decrypt", scope: !293, file: !294, line: 220, type: !181)
!310 = !DILabel(scope: !293, name: "out", file: !294, line: 279)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 16)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "cap_flags", scope: !27, file: !294, line: 48, type: !208, isLocal: false, isDefinition: true)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "key", scope: !27, file: !294, line: 34, type: !311, isLocal: true, isDefinition: true)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "plaintext", scope: !27, file: !294, line: 39, type: !304, isLocal: true, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "cbc_ciphertext", scope: !27, file: !294, line: 195, type: !322, isLocal: true, isDefinition: true)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 640, elements: !301)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "ctr_ciphertext", scope: !27, file: !294, line: 283, type: !326, isLocal: true, isDefinition: true)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 512, elements: !305)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ccm_key", scope: !27, file: !294, line: 373, type: !311, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "ccm_data", scope: !27, file: !294, line: 384, type: !331, isLocal: true, isDefinition: true)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 184, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 23)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "ccm_hdr", scope: !27, file: !294, line: 381, type: !336, isLocal: true, isDefinition: true)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 8)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "ccm_nonce", scope: !27, file: !294, line: 377, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 104, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 13)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "ccm_expected", scope: !27, file: !294, line: 388, type: !346, isLocal: true, isDefinition: true)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 248, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 31)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "gcm_key", scope: !27, file: !294, line: 485, type: !311, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "gcm_data", scope: !27, file: !294, line: 496, type: !353, isLocal: true, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 336, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 42)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "gcm_hdr", scope: !27, file: !294, line: 492, type: !358, isLocal: true, isDefinition: true)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 160, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 20)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gcm_nonce", scope: !27, file: !294, line: 489, type: !363, isLocal: true, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 12)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "gcm_expected", scope: !27, file: !294, line: 502, type: !368, isLocal: true, isDefinition: true)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 464, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 58)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !374)
!373 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !372, file: !373, line: 17, baseType: !140, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !372, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !379, file: !395, line: 18, type: !396, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !381, globals: !394, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!381 = !{!22, !124, !24, !382, !384, !386, !272, !125, !387, !388, !390, !392, !393, !184, !227, !140}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!394 = !{!377}
!395 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !398)
!398 = !{!399, !400}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !397, file: !373, line: 17, baseType: !140, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !397, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "_char_out", scope: !403, file: !408, line: 54, type: !409, isLocal: false, isDefinition: true)
!403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !407, splitDebugInlining: false, nameTableKind: None)
!404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!405 = !{!46}
!406 = !{!124, !125}
!407 = !{!401}
!408 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!410 = !DISubroutineType(types: !411)
!411 = !{!125, !125}
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !414, file: !431, line: 56, type: !432, isLocal: true, isDefinition: true, align: 32)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !416, globals: !430, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!416 = !{!417}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 258, baseType: !420)
!419 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 249, size: 224, elements: !421)
!421 = !{!422, !424, !425, !426, !427, !428, !429}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !420, file: !419, line: 251, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !420, file: !419, line: 252, baseType: !423, size: 32, offset: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !420, file: !419, line: 253, baseType: !423, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !420, file: !419, line: 254, baseType: !423, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !420, file: !419, line: 255, baseType: !423, size: 32, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !420, file: !419, line: 256, baseType: !423, size: 32, offset: 160)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !420, file: !419, line: 257, baseType: !423, size: 32, offset: 192)
!430 = !{!412}
!431 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !433)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !435)
!434 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !{!436, !455}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !433, file: !434, line: 60, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!438 = !DISubroutineType(types: !439)
!439 = !{!125, !440}
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !443)
!443 = !{!444, !445, !446, !447, !453, !454}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !442, file: !137, line: 380, baseType: !140, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !442, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !442, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !442, file: !137, line: 386, baseType: !448, size: 32, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !450)
!450 = !{!451, !452}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !449, file: !137, line: 359, baseType: !150, size: 8)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !449, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !442, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !442, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !434, line: 65, baseType: !440, size: 32, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !458, file: !461, line: 71, type: !462, isLocal: true, isDefinition: true, align: 32)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !460, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!460 = !{!456}
!461 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !464)
!464 = !{!465, !484}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !463, file: !434, line: 60, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{!125, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !472)
!472 = !{!473, !474, !475, !476, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !137, line: 380, baseType: !140, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !471, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !471, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !137, line: 386, baseType: !477, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !478, file: !137, line: 359, baseType: !150, size: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !478, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !471, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !463, file: !434, line: 65, baseType: !469, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "inv_sbox", scope: !487, file: !501, line: 37, type: !502, isLocal: true, isDefinition: true)
!487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !489, globals: !500, splitDebugInlining: false, nameTableKind: None)
!488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!489 = !{!184, !490, !491, !150}
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !493)
!492 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/aes.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !495)
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !494, file: !492, line: 65, baseType: !497, size: 1408)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1408, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 44)
!500 = !{!485}
!501 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 2048, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 256)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "sbox", scope: !507, file: !516, line: 37, type: !502, isLocal: true, isDefinition: true)
!507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !509, globals: !515, splitDebugInlining: false, nameTableKind: None)
!508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!509 = !{!510, !490, !184, !150}
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !512, file: !492, line: 65, baseType: !497, size: 1408)
!515 = !{!505}
!516 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !519, file: !526, line: 17, type: !668, isLocal: false, isDefinition: true)
!519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !521, globals: !522, splitDebugInlining: false, nameTableKind: None)
!520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!521 = !{!272, !125, !208, !124}
!522 = !{!517, !523, !664}
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !525, file: !526, line: 198, type: !650, isLocal: true, isDefinition: true)
!525 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !526, file: !526, line: 175, type: !527, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !645)
!526 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = !DISubroutineType(types: !528)
!528 = !{null, !529}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !532)
!531 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!533, !599, !612, !613, !614, !615, !621, !640}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !530, file: !531, line: 247, baseType: !534, size: 384)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !535)
!535 = !{!536, !564, !572, !573, !574, !585, !586, !587}
!536 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 60, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 60, size: 64, elements: !538)
!538 = !{!539, !555}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !537, file: !531, line: 61, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !542)
!541 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !543)
!543 = !{!544, !550}
!544 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 38, baseType: !545, size: 32)
!545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 38, size: 32, elements: !546)
!546 = !{!547, !549}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !545, file: !541, line: 39, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !545, file: !541, line: 40, baseType: !548, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 42, baseType: !551, size: 32, offset: 32)
!551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 42, size: 32, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !551, file: !541, line: 43, baseType: !548, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !551, file: !541, line: 44, baseType: !548, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !537, file: !531, line: 62, baseType: !556, size: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !558)
!557 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !556, file: !557, line: 50, baseType: !560, size: 64)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !561, size: 64, elements: !562)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!562 = !{!563}
!563 = !DISubrange(count: 2)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !534, file: !531, line: 68, baseType: !565, size: 32, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !568)
!567 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !568, file: !567, line: 232, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !542)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !534, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !534, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!574 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 90, baseType: !575, size: 16, offset: 112)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 90, size: 16, elements: !576)
!576 = !{!577, !584}
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !575, file: !531, line: 91, baseType: !578, size: 16)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !531, line: 91, size: 16, elements: !579)
!579 = !{!580, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !578, file: !531, line: 96, baseType: !581, size: 8)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !582)
!582 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !578, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !575, file: !531, line: 100, baseType: !227, size: 16)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !534, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !534, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !534, file: !531, line: 131, baseType: !588, size: 192, offset: 192)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !589)
!589 = !{!590, !591, !597}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !588, file: !567, line: 245, baseType: !540, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !588, file: !567, line: 246, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !593)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 32)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !596}
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !588, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !391)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !530, file: !531, line: 250, baseType: !600, size: 288, offset: 384)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !602)
!601 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!602 = !{!603, !604, !605, !606, !607, !608, !609, !610, !611}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !600, file: !601, line: 26, baseType: !208, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !600, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !600, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !600, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !600, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !600, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !600, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !600, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !600, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !530, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !530, file: !531, line: 256, baseType: !566, size: 64, offset: 704)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !530, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !530, file: !531, line: 300, baseType: !616, size: 96, offset: 800)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !617)
!617 = !{!618, !619, !620}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !616, file: !531, line: 153, baseType: !22, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !616, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !616, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !530, file: !531, line: 325, baseType: !622, size: 32, offset: 896)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !625)
!624 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = !{!626, !635, !636}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !623, file: !624, line: 5074, baseType: !627, size: 96)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !629)
!628 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!629 = !{!630, !633, !634}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !627, file: !628, line: 57, baseType: !631, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!632 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !628, line: 57, flags: DIFlagFwdDecl)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !627, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !627, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !623, file: !624, line: 5075, baseType: !566, size: 64, offset: 96)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !623, file: !624, line: 5076, baseType: !637, offset: 160)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!638 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!639 = !{}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !530, file: !531, line: 343, baseType: !641, size: 64, offset: 928)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !641, file: !601, line: 63, baseType: !208, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !641, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!645 = !{!646, !647, !648, !649}
!646 = !DILocalVariable(name: "thread", arg: 1, scope: !525, file: !526, line: 175, type: !529)
!647 = !DILocalVariable(name: "region_num", scope: !525, file: !526, line: 200, type: !150)
!648 = !DILocalVariable(name: "guard_start", scope: !525, file: !526, line: 265, type: !22)
!649 = !DILocalVariable(name: "guard_size", scope: !525, file: !526, line: 266, type: !272)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !651, size: 96, elements: !662)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !653)
!652 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !{!654, !655, !656}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !651, file: !652, line: 53, baseType: !22, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !651, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !651, file: !652, line: 55, baseType: !657, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !659)
!658 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !660)
!660 = !{!661}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !659, file: !658, line: 150, baseType: !208, size: 32)
!662 = !{!663}
!663 = !DISubrange(count: 1)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "static_regions", scope: !519, file: !526, line: 62, type: !666, isLocal: true, isDefinition: true)
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 96, elements: !662)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !651)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !670)
!670 = !{!671, !672}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !669, file: !373, line: 17, baseType: !140, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !669, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !675, file: !708, line: 39, type: !150, isLocal: true, isDefinition: true)
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !677, globals: !707, splitDebugInlining: false, nameTableKind: None)
!676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!677 = !{!678, !124, !125, !695, !150}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !680, line: 1226, baseType: !681)
!680 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 1213, size: 352, elements: !682)
!682 = !{!683, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !681, file: !680, line: 1215, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !681, file: !680, line: 1216, baseType: !423, size: 32, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !681, file: !680, line: 1217, baseType: !423, size: 32, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !681, file: !680, line: 1218, baseType: !423, size: 32, offset: 96)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !681, file: !680, line: 1219, baseType: !423, size: 32, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !681, file: !680, line: 1220, baseType: !423, size: 32, offset: 160)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !681, file: !680, line: 1221, baseType: !423, size: 32, offset: 192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !681, file: !680, line: 1222, baseType: !423, size: 32, offset: 224)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !681, file: !680, line: 1223, baseType: !423, size: 32, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !681, file: !680, line: 1224, baseType: !423, size: 32, offset: 288)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !681, file: !680, line: 1225, baseType: !423, size: 32, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !699)
!698 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!699 = !{!700, !701, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !697, file: !698, line: 29, baseType: !208, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !697, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !697, file: !698, line: 37, baseType: !703, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !705)
!705 = !{!706}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !704, file: !658, line: 143, baseType: !208, size: 32)
!707 = !{!673}
!708 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !711, file: !718, line: 21, type: !409, isLocal: true, isDefinition: true)
!711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !713, globals: !717, splitDebugInlining: false, nameTableKind: None)
!712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!713 = !{!714, !125, !124}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !716, line: 22, baseType: !125)
!716 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!717 = !{!709}
!718 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !721, file: !726, line: 13, type: !743, isLocal: true, isDefinition: true)
!721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !723, splitDebugInlining: false, nameTableKind: None)
!722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!723 = !{!724, !719}
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "mpu_config", scope: !721, file: !726, line: 37, type: !727, isLocal: false, isDefinition: true)
!726 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !698, line: 41, size: 64, elements: !729)
!729 = !{!730, !731}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !728, file: !698, line: 43, baseType: !208, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !728, file: !698, line: 45, baseType: !732, size: 32, offset: 32)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !735)
!735 = !{!736, !737, !738}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !734, file: !698, line: 29, baseType: !208, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !734, file: !698, line: 37, baseType: !739, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !741)
!741 = !{!742}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !740, file: !658, line: 143, baseType: !208, size: 32)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 192, elements: !562)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !746, file: !829, line: 72, type: !911, isLocal: true, isDefinition: true)
!746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !748, retainedTypes: !815, globals: !826, splitDebugInlining: false, nameTableKind: None)
!747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!748 = !{!46, !749}
!749 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !419, line: 65, baseType: !125, size: 32, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!751 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!752 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!753 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!754 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!755 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!756 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!757 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!758 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!759 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!760 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!761 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!762 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!763 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!764 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!765 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!766 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!767 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!768 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!769 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!770 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!771 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!772 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!773 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!774 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!775 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!776 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!777 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!778 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!779 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!780 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!781 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!782 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!783 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!784 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!785 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!786 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!787 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!788 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!789 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!790 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!791 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!792 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!793 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!794 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!795 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!796 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!797 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!798 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!799 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!800 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!801 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!802 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!803 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!804 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!805 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!806 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!807 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!808 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!809 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!810 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!811 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!812 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!813 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!814 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!815 = !{!272, !125, !124, !816}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !419, line: 243, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 235, size: 192, elements: !819)
!819 = !{!820, !821, !822, !823, !824, !825}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !818, file: !419, line: 237, baseType: !423, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !818, file: !419, line: 238, baseType: !423, size: 32, offset: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !818, file: !419, line: 239, baseType: !423, size: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !818, file: !419, line: 240, baseType: !423, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !818, file: !419, line: 241, baseType: !423, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !818, file: !419, line: 242, baseType: !423, size: 32, offset: 160)
!826 = !{!827, !833, !849, !860, !875, !744, !877, !891, !893, !895, !897, !899, !901, !903, !905, !907, !909}
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !746, file: !829, line: 424, type: !830, isLocal: false, isDefinition: true, align: 16)
!829 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !831)
!831 = !{!832}
!832 = !DISubrange(count: 4)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !746, file: !829, line: 424, type: !835, isLocal: false, isDefinition: true, align: 32)
!835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !836)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !837)
!837 = !{!838, !839, !840, !841, !847, !848}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !836, file: !137, line: 380, baseType: !140, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !836, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !836, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !836, file: !137, line: 386, baseType: !842, size: 32, offset: 96)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !844)
!844 = !{!845, !846}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !843, file: !137, line: 359, baseType: !150, size: 8)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !843, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !836, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !836, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !746, file: !829, line: 424, type: !851, isLocal: true, isDefinition: true, align: 32)
!851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !852)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !853)
!853 = !{!854, !859}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !852, file: !434, line: 60, baseType: !855, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = !DISubroutineType(types: !857)
!857 = !{!125, !858}
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !852, file: !434, line: 65, baseType: !858, size: 32, offset: 32)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "exti_data", scope: !746, file: !829, line: 423, type: !862, isLocal: true, isDefinition: true)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !829, line: 107, size: 1472, elements: !863)
!863 = !{!864}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !862, file: !829, line: 109, baseType: !865, size: 1472)
!865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !866, size: 1472, elements: !332)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !829, line: 101, size: 64, elements: !867)
!867 = !{!868, !874}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !866, file: !829, line: 102, baseType: !869, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !870, line: 63, baseType: !871)
!870 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 32)
!872 = !DISubroutineType(types: !873)
!873 = !{null, !125, !124}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !866, file: !829, line: 103, baseType: !124, size: 32, offset: 32)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !746, file: !829, line: 424, type: !843, isLocal: true, isDefinition: true, align: 8)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !879, file: !829, line: 493, type: !884, isLocal: true, isDefinition: true, align: 32)
!879 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !829, file: !829, line: 460, type: !880, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !882)
!880 = !DISubroutineType(types: !881)
!881 = !{null, !858}
!882 = !{!883}
!883 = !DILocalVariable(name: "dev", arg: 1, scope: !879, file: !829, line: 460, type: !858)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !885)
!885 = !{!886, !888, !889, !890}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !884, file: !10, line: 55, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !125)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !884, file: !10, line: 57, baseType: !887, size: 32, offset: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !884, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !884, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !879, file: !829, line: 497, type: !884, isLocal: true, isDefinition: true, align: 32)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !879, file: !829, line: 507, type: !884, isLocal: true, isDefinition: true, align: 32)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !879, file: !829, line: 512, type: !884, isLocal: true, isDefinition: true, align: 32)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !879, file: !829, line: 516, type: !884, isLocal: true, isDefinition: true, align: 32)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !879, file: !829, line: 523, type: !884, isLocal: true, isDefinition: true, align: 32)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !879, file: !829, line: 527, type: !884, isLocal: true, isDefinition: true, align: 32)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !879, file: !829, line: 581, type: !884, isLocal: true, isDefinition: true, align: 32)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !879, file: !829, line: 586, type: !884, isLocal: true, isDefinition: true, align: 32)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !879, file: !829, line: 591, type: !884, isLocal: true, isDefinition: true, align: 32)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !879, file: !829, line: 595, type: !884, isLocal: true, isDefinition: true, align: 32)
!911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 736, elements: !332)
!912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !419, line: 133, baseType: !749)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !916, file: !921, line: 24, type: !949, isLocal: false, isDefinition: true, align: 16)
!916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !917, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !918, splitDebugInlining: false, nameTableKind: None)
!917 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!918 = !{!919, !914, !925, !927, !929, !931, !933, !935, !937, !939, !941, !943, !945, !947}
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !916, file: !921, line: 19, type: !922, isLocal: false, isDefinition: true, align: 16)
!921 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 224, elements: !923)
!923 = !{!924}
!924 = !DISubrange(count: 14)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !916, file: !921, line: 31, type: !830, isLocal: false, isDefinition: true, align: 16)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !916, file: !921, line: 38, type: !830, isLocal: false, isDefinition: true, align: 16)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !916, file: !921, line: 45, type: !830, isLocal: false, isDefinition: true, align: 16)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !916, file: !921, line: 52, type: !830, isLocal: false, isDefinition: true, align: 16)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !916, file: !921, line: 59, type: !830, isLocal: false, isDefinition: true, align: 16)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !916, file: !921, line: 66, type: !830, isLocal: false, isDefinition: true, align: 16)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !916, file: !921, line: 73, type: !830, isLocal: false, isDefinition: true, align: 16)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !916, file: !921, line: 80, type: !830, isLocal: false, isDefinition: true, align: 16)
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !916, file: !921, line: 87, type: !830, isLocal: false, isDefinition: true, align: 16)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !916, file: !921, line: 94, type: !830, isLocal: false, isDefinition: true, align: 16)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !916, file: !921, line: 101, type: !830, isLocal: false, isDefinition: true, align: 16)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !916, file: !921, line: 106, type: !949, isLocal: false, isDefinition: true, align: 16)
!949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 48, elements: !950)
!950 = !{!951}
!951 = !DISubrange(count: 3)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !954, file: !1018, line: 398, type: !1051, isLocal: true, isDefinition: true)
!954 = distinct !DICompileUnit(language: DW_LANG_C99, file: !955, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !956, retainedTypes: !969, globals: !1015, splitDebugInlining: false, nameTableKind: None)
!955 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!956 = !{!957, !46, !962}
!957 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !958, line: 197, baseType: !32, size: 32, elements: !959)
!958 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!959 = !{!960, !961}
!960 = !DIEnumerator(name: "SUCCESS", value: 0)
!961 = !DIEnumerator(name: "ERROR", value: 1)
!962 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !963, line: 44, baseType: !32, size: 32, elements: !964)
!963 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!964 = !{!965, !966, !967, !968}
!965 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!966 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!967 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!968 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!969 = !{!124, !125, !208, !970, !1008, !1014}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 369, baseType: !972)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 335, size: 1152, elements: !973)
!973 = !{!974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1007}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !972, file: !419, line: 337, baseType: !423, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !972, file: !419, line: 338, baseType: !423, size: 32, offset: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !972, file: !419, line: 339, baseType: !423, size: 32, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !972, file: !419, line: 340, baseType: !423, size: 32, offset: 96)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !972, file: !419, line: 341, baseType: !423, size: 32, offset: 128)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !972, file: !419, line: 342, baseType: !423, size: 32, offset: 160)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !972, file: !419, line: 343, baseType: !423, size: 32, offset: 192)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !972, file: !419, line: 344, baseType: !208, size: 32, offset: 224)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !972, file: !419, line: 345, baseType: !423, size: 32, offset: 256)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !972, file: !419, line: 346, baseType: !423, size: 32, offset: 288)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !972, file: !419, line: 347, baseType: !985, size: 64, offset: 320)
!985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 64, elements: !562)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !972, file: !419, line: 348, baseType: !423, size: 32, offset: 384)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !972, file: !419, line: 349, baseType: !423, size: 32, offset: 416)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !972, file: !419, line: 350, baseType: !423, size: 32, offset: 448)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !972, file: !419, line: 351, baseType: !208, size: 32, offset: 480)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !972, file: !419, line: 352, baseType: !423, size: 32, offset: 512)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !972, file: !419, line: 353, baseType: !423, size: 32, offset: 544)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !972, file: !419, line: 354, baseType: !985, size: 64, offset: 576)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !972, file: !419, line: 355, baseType: !423, size: 32, offset: 640)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !972, file: !419, line: 356, baseType: !423, size: 32, offset: 672)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !972, file: !419, line: 357, baseType: !423, size: 32, offset: 704)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !972, file: !419, line: 358, baseType: !208, size: 32, offset: 736)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !972, file: !419, line: 359, baseType: !423, size: 32, offset: 768)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !972, file: !419, line: 360, baseType: !423, size: 32, offset: 800)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !972, file: !419, line: 361, baseType: !985, size: 64, offset: 832)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !972, file: !419, line: 362, baseType: !423, size: 32, offset: 896)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !972, file: !419, line: 363, baseType: !423, size: 32, offset: 928)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !972, file: !419, line: 364, baseType: !985, size: 64, offset: 960)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !972, file: !419, line: 365, baseType: !423, size: 32, offset: 1024)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !972, file: !419, line: 366, baseType: !423, size: 32, offset: 1056)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !972, file: !419, line: 367, baseType: !1006, size: 32, offset: 1088)
!1006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 32, elements: !662)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !972, file: !419, line: 368, baseType: !423, size: 32, offset: 1120)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1010, line: 343, size: 64, elements: !1011)
!1010 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1011 = !{!1012, !1013}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1009, file: !1010, line: 344, baseType: !208, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1009, file: !1010, line: 345, baseType: !208, size: 32, offset: 32)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1015 = !{!1016, !1022, !1038, !1049, !952}
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !954, file: !1018, line: 752, type: !1019, isLocal: false, isDefinition: true, align: 16)
!1018 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 640, elements: !1020)
!1020 = !{!1021}
!1021 = !DISubrange(count: 40)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !954, file: !1018, line: 752, type: !1024, isLocal: false, isDefinition: true, align: 32)
!1024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030, !1036, !1037}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1025, file: !137, line: 380, baseType: !140, size: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1025, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1025, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1025, file: !137, line: 386, baseType: !1031, size: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1033)
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1032, file: !137, line: 359, baseType: !150, size: 8)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1032, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1025, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1025, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !954, file: !1018, line: 752, type: !1040, isLocal: true, isDefinition: true, align: 32)
!1040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1042)
!1042 = !{!1043, !1048}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1041, file: !434, line: 60, baseType: !1044, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!125, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1041, file: !434, line: 65, baseType: !1047, size: 32, offset: 32)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !954, file: !1018, line: 752, type: !1032, isLocal: true, isDefinition: true, align: 8)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !963, line: 100, size: 224, elements: !1052)
!1052 = !{!1053, !1059, !1060, !1069, !1074, !1079, !1085}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1051, file: !963, line: 101, baseType: !1054, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !963, line: 76, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!125, !1047, !1058}
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !963, line: 56, baseType: !124)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1051, file: !963, line: 102, baseType: !1054, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1051, file: !963, line: 103, baseType: !1061, size: 32, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !963, line: 83, baseType: !1062)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!125, !1047, !1058, !1065, !124}
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !963, line: 72, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{null, !1047, !1058, !124}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1051, file: !963, line: 104, baseType: !1070, size: 32, offset: 96)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !963, line: 79, baseType: !1071)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!125, !1047, !1058, !1014}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1051, file: !963, line: 105, baseType: !1075, size: 32, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !963, line: 88, baseType: !1076)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!962, !1047, !1058}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1051, file: !963, line: 106, baseType: !1080, size: 32, offset: 160)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !963, line: 92, baseType: !1081)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!125, !1047, !1058, !1084}
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !963, line: 64, baseType: !124)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1051, file: !963, line: 107, baseType: !1086, size: 32, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !963, line: 96, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!125, !1047, !1058, !124}
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1092, file: !1149, line: 603, type: !1151, isLocal: true, isDefinition: true, align: 32)
!1092 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1093, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1094, globals: !1146, splitDebugInlining: false, nameTableKind: None)
!1093 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!1094 = !{!124, !125, !1095}
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1098, line: 336, size: 160, elements: !1099)
!1098 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1099 = !{!1100, !1120, !1124, !1128, !1141}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1097, file: !1098, line: 365, baseType: !1101, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!125, !1104, !1119}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111, !1117, !1118}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1106, file: !137, line: 380, baseType: !140, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1106, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1106, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1106, file: !137, line: 386, baseType: !1112, size: 32, offset: 96)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1114)
!1114 = !{!1115, !1116}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1113, file: !137, line: 359, baseType: !150, size: 8)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1113, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1106, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1106, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1097, file: !1098, line: 366, baseType: !1121, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{null, !1104, !151}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1097, file: !1098, line: 374, baseType: !1125, size: 32, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!125, !1104}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1097, file: !1098, line: 377, baseType: !1129, size: 32, offset: 96)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!125, !1104, !1132}
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1098, line: 122, size: 64, elements: !1135)
!1135 = !{!1136, !1137, !1138, !1139, !1140}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1134, file: !1098, line: 123, baseType: !208, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1134, file: !1098, line: 124, baseType: !150, size: 8, offset: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1134, file: !1098, line: 125, baseType: !150, size: 8, offset: 40)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1134, file: !1098, line: 126, baseType: !150, size: 8, offset: 48)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1134, file: !1098, line: 127, baseType: !150, size: 8, offset: 56)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1097, file: !1098, line: 379, baseType: !1142, size: 32, offset: 128)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!125, !1104, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1146 = !{!1090, !1147}
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1092, file: !1149, line: 38, type: !1150, isLocal: true, isDefinition: true)
!1149 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1153)
!1153 = !{!1154, !1155}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1152, file: !434, line: 60, baseType: !1125, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1152, file: !434, line: 65, baseType: !1104, size: 32, offset: 32)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "log_const_tinycrypt", scope: !1158, file: !1164, line: 22, type: !1333, isLocal: false, isDefinition: true)
!1158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1159, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1160, globals: !1161, splitDebugInlining: false, nameTableKind: None)
!1159 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!1160 = !{!30, !39, !42, !116}
!1161 = !{!1156, !1162, !1165, !1181, !1192, !1194, !1322}
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1158, file: !1164, line: 324, type: !949, isLocal: false, isDefinition: true, align: 16)
!1164 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "__device_crypto_tinycrypt", scope: !1158, file: !1164, line: 324, type: !1167, isLocal: true, isDefinition: true, align: 32)
!1167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1179, !1180}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1168, file: !137, line: 380, baseType: !140, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1168, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1168, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1168, file: !137, line: 386, baseType: !1174, size: 32, offset: 96)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1176)
!1176 = !{!1177, !1178}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1175, file: !137, line: 359, baseType: !150, size: 8)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1175, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1168, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1168, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "__init___device_crypto_tinycrypt", scope: !1158, file: !1164, line: 324, type: !1183, isLocal: true, isDefinition: true, align: 32)
!1183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1184)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1185)
!1185 = !{!1186, !1191}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1184, file: !434, line: 60, baseType: !1187, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!125, !1190}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1184, file: !434, line: 65, baseType: !1190, size: 32, offset: 32)
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "__devstate_crypto_tinycrypt", scope: !1158, file: !1164, line: 324, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "crypto_enc_funcs", scope: !1158, file: !1164, line: 317, type: !1196, isLocal: true, isDefinition: true)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !1197)
!1197 = !{!1198, !1199, !1275, !1279, !1287, !1310, !1314}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !1196, file: !128, line: 66, baseType: !1187, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !1196, file: !128, line: 69, baseType: !1200, size: 32, offset: 32)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!125, !1190, !1203, !39, !30, !42}
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !1205)
!1205 = !{!1206, !1248, !1253, !1254, !1255, !1256, !1273, !1274}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1204, file: !31, line: 116, baseType: !1207, size: 64)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !1208)
!1208 = !{!1209, !1210}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !1207, file: !31, line: 76, baseType: !30, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1207, file: !31, line: 78, baseType: !1211, size: 32, offset: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1207, file: !31, line: 78, size: 32, elements: !1212)
!1212 = !{!1213, !1227, !1232, !1234, !1246}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !1211, file: !31, line: 79, baseType: !1214, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !1215)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!125, !1203, !1218}
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !1220)
!1220 = !{!1221, !1222, !1223, !1224, !1225, !1226}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1219, file: !31, line: 183, baseType: !184, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1219, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1219, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !1219, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !1219, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1219, file: !31, line: 208, baseType: !1203, size: 32, offset: 160)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !1211, file: !31, line: 80, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !1229)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!125, !1203, !1218, !184}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !1211, file: !31, line: 81, baseType: !1233, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !1229)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !1211, file: !31, line: 82, baseType: !1235, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !1236)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!125, !1203, !1239, !184}
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1240, file: !31, line: 219, baseType: !1218, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !1240, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !1240, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1240, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !1211, file: !31, line: 83, baseType: !1247, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !1236)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1204, file: !31, line: 126, baseType: !1249, size: 32, offset: 64)
!1249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1204, file: !31, line: 119, size: 32, elements: !1250)
!1250 = !{!1251, !1252}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !1249, file: !31, line: 121, baseType: !184, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1249, file: !31, line: 125, baseType: !124, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1204, file: !31, line: 131, baseType: !1190, size: 32, offset: 96)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1204, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !1204, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !1204, file: !31, line: 156, baseType: !1257, size: 32, offset: 192)
!1257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1204, file: !31, line: 152, size: 32, elements: !1258)
!1258 = !{!1259, !1264, !1268}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !1257, file: !31, line: 153, baseType: !1260, size: 32)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !1261)
!1261 = !{!1262, !1263}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1260, file: !31, line: 88, baseType: !227, size: 16)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1260, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !1257, file: !31, line: 154, baseType: !1265, size: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !1266)
!1266 = !{!1267}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !1265, file: !31, line: 96, baseType: !208, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !1257, file: !31, line: 155, baseType: !1269, size: 32)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !1270)
!1270 = !{!1271, !1272}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1269, file: !31, line: 100, baseType: !227, size: 16)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1269, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1204, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1204, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !1196, file: !128, line: 74, baseType: !1276, size: 32, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!125, !1190, !1203}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !1196, file: !128, line: 77, baseType: !1280, size: 32, offset: 96)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!125, !1190, !1283}
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{null, !1218, !125}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !1196, file: !128, line: 81, baseType: !1288, size: 32, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!125, !1190, !1291, !116}
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !1293)
!1293 = !{!1294, !1295, !1296, !1308, !1309}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1292, file: !117, line: 51, baseType: !1190, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1292, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !1292, file: !117, line: 65, baseType: !1297, size: 32, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!125, !1291, !1301, !153}
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1302, file: !117, line: 91, baseType: !184, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1302, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1302, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1302, file: !117, line: 107, baseType: !1291, size: 32, offset: 96)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !1292, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1292, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !1196, file: !128, line: 84, baseType: !1311, size: 32, offset: 160)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!125, !1190, !1291}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !1196, file: !128, line: 86, baseType: !1315, size: 32, offset: 192)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!125, !1190, !1318}
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !1319)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{null, !1301, !125}
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "tc_driver_state", scope: !1158, file: !1164, line: 26, type: !1324, isLocal: true, isDefinition: true)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1325, size: 2880, elements: !562)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_shim_drv_state", file: !1326, line: 22, size: 1440, elements: !1327)
!1326 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1327 = !{!1328, !1329}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !1325, file: !1326, line: 23, baseType: !125, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1325, file: !1326, line: 24, baseType: !1330, size: 1408, offset: 32)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !1331)
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1330, file: !492, line: 65, baseType: !497, size: 1408)
!1333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1335)
!1335 = !{!1336, !1337}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1334, file: !373, line: 17, baseType: !140, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1334, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1340, file: !1509, line: 762, type: !1621, isLocal: true, isDefinition: true)
!1340 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1341, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1342, retainedTypes: !1360, globals: !1506, splitDebugInlining: false, nameTableKind: None)
!1341 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!1342 = !{!46, !1343, !1349, !1354, !962}
!1343 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1344, line: 506, baseType: !32, size: 32, elements: !1345)
!1344 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1345 = !{!1346, !1347, !1348}
!1346 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1347 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1348 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1349 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1344, line: 512, baseType: !32, size: 32, elements: !1350)
!1350 = !{!1351, !1352, !1353}
!1351 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1352 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1353 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1354 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !870, line: 43, baseType: !32, size: 32, elements: !1355)
!1355 = !{!1356, !1357, !1358, !1359}
!1356 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1357 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1358 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1359 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1360 = !{!124, !125, !1361, !1431, !1436, !1396, !1349, !1343, !1441, !1442, !208, !1456, !1411, !393, !1466, !1467}
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1363)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1344, line: 523, size: 288, elements: !1364)
!1364 = !{!1365, !1386, !1392, !1397, !1401, !1402, !1403, !1407, !1427}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1363, file: !1344, line: 524, baseType: !1366, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 32)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!125, !1369, !1384, !1385}
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1382, !1383}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1371, file: !137, line: 380, baseType: !140, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1371, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1371, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1371, file: !137, line: 386, baseType: !1377, size: 32, offset: 96)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1379)
!1379 = !{!1380, !1381}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1378, file: !137, line: 359, baseType: !150, size: 8)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1378, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1371, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1371, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1344, line: 237, baseType: !150)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1344, line: 257, baseType: !208)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1363, file: !1344, line: 530, baseType: !1387, size: 32, offset: 32)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!125, !1369, !1390}
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1344, line: 229, baseType: !208)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1363, file: !1344, line: 532, baseType: !1393, size: 32, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!125, !1369, !1396, !1391}
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1344, line: 216, baseType: !208)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1363, file: !1344, line: 535, baseType: !1398, size: 32, offset: 96)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!125, !1369, !1396}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1363, file: !1344, line: 537, baseType: !1398, size: 32, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1363, file: !1344, line: 539, baseType: !1398, size: 32, offset: 160)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1363, file: !1344, line: 541, baseType: !1404, size: 32, offset: 192)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 32)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{!125, !1369, !1384, !1343, !1349}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1363, file: !1344, line: 544, baseType: !1408, size: 32, offset: 224)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{!125, !1369, !1411, !153}
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1344, line: 478, size: 96, elements: !1413)
!1413 = !{!1414, !1421, !1426}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1412, file: !1344, line: 482, baseType: !1415, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1416, line: 33, baseType: !1417)
!1416 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1416, line: 29, size: 32, elements: !1418)
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1417, file: !1416, line: 30, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1412, file: !1344, line: 485, baseType: !1422, size: 32, offset: 32)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1344, line: 464, baseType: !1423)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{null, !1369, !1411, !1396}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1412, file: !1344, line: 493, baseType: !1396, size: 32, offset: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1363, file: !1344, line: 547, baseType: !1428, size: 32, offset: 256)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!208, !1369}
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1344, line: 428, size: 32, elements: !1434)
!1434 = !{!1435}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1433, file: !1344, line: 434, baseType: !1396, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1344, line: 441, size: 32, elements: !1439)
!1439 = !{!1440}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1438, file: !1344, line: 447, baseType: !1396, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 32)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 275, baseType: !1444)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 264, size: 320, elements: !1445)
!1445 = !{!1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1444, file: !419, line: 266, baseType: !423, size: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1444, file: !419, line: 267, baseType: !423, size: 32, offset: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1444, file: !419, line: 268, baseType: !423, size: 32, offset: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1444, file: !419, line: 269, baseType: !423, size: 32, offset: 96)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1444, file: !419, line: 270, baseType: !423, size: 32, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1444, file: !419, line: 271, baseType: !423, size: 32, offset: 160)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1444, file: !419, line: 272, baseType: !423, size: 32, offset: 192)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1444, file: !419, line: 273, baseType: !423, size: 32, offset: 224)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1444, file: !419, line: 274, baseType: !1455, size: 64, offset: 256)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 64, elements: !562)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !419, line: 288, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 281, size: 288, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1464, !1465}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1458, file: !419, line: 283, baseType: !423, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1458, file: !419, line: 284, baseType: !423, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1458, file: !419, line: 285, baseType: !1463, size: 128, offset: 64)
!1463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 128, elements: !831)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1458, file: !419, line: 286, baseType: !985, size: 64, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1458, file: !419, line: 287, baseType: !423, size: 32, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !963, line: 100, size: 224, elements: !1470)
!1470 = !{!1471, !1476, !1477, !1486, !1491, !1496, !1501}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1469, file: !963, line: 101, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !963, line: 76, baseType: !1473)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!125, !1369, !1058}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1469, file: !963, line: 102, baseType: !1472, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1469, file: !963, line: 103, baseType: !1478, size: 32, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !963, line: 83, baseType: !1479)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!125, !1369, !1058, !1482, !124}
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !963, line: 72, baseType: !1483)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{null, !1369, !1058, !124}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1469, file: !963, line: 104, baseType: !1487, size: 32, offset: 96)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !963, line: 79, baseType: !1488)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!125, !1369, !1058, !1014}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1469, file: !963, line: 105, baseType: !1492, size: 32, offset: 128)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !963, line: 88, baseType: !1493)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!962, !1369, !1058}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1469, file: !963, line: 106, baseType: !1497, size: 32, offset: 160)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !963, line: 92, baseType: !1498)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!125, !1369, !1058, !1084}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1469, file: !963, line: 107, baseType: !1502, size: 32, offset: 192)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !963, line: 96, baseType: !1503)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!125, !1369, !1058, !124}
!1506 = !{!1507, !1513, !1515, !1525, !1527, !1529, !1531, !1536, !1538, !1540, !1545, !1547, !1549, !1551, !1553, !1555, !1557, !1559, !1561, !1563, !1565, !1567, !1569, !1571, !1573, !1587, !1589, !1591, !1593, !1595, !1597, !1599, !1601, !1603, !1605, !1607, !1609, !1611, !1613, !1615, !1338, !1617, !1619, !1632, !1634, !1636, !1638, !1640, !1642}
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1340, file: !1509, line: 762, type: !1510, isLocal: false, isDefinition: true, align: 16)
!1509 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 112, elements: !1511)
!1511 = !{!1512}
!1512 = !DISubrange(count: 7)
!1513 = !DIGlobalVariableExpression(var: !1514, expr: !DIExpression())
!1514 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1340, file: !1509, line: 762, type: !1370, isLocal: false, isDefinition: true, align: 32)
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1340, file: !1509, line: 762, type: !1517, isLocal: true, isDefinition: true, align: 32)
!1517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1519)
!1519 = !{!1520, !1524}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1518, file: !434, line: 60, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!125, !1369}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1518, file: !434, line: 65, baseType: !1369, size: 32, offset: 32)
!1525 = !DIGlobalVariableExpression(var: !1526, expr: !DIExpression())
!1526 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1340, file: !1509, line: 766, type: !1510, isLocal: false, isDefinition: true, align: 16)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1340, file: !1509, line: 766, type: !1370, isLocal: false, isDefinition: true, align: 32)
!1529 = !DIGlobalVariableExpression(var: !1530, expr: !DIExpression())
!1530 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1340, file: !1509, line: 766, type: !1517, isLocal: true, isDefinition: true, align: 32)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1340, file: !1509, line: 770, type: !1533, isLocal: false, isDefinition: true, align: 16)
!1533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 80, elements: !1534)
!1534 = !{!1535}
!1535 = !DISubrange(count: 5)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1340, file: !1509, line: 770, type: !1370, isLocal: false, isDefinition: true, align: 32)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1340, file: !1509, line: 770, type: !1517, isLocal: true, isDefinition: true, align: 32)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1340, file: !1509, line: 774, type: !1542, isLocal: false, isDefinition: true, align: 16)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 96, elements: !1543)
!1543 = !{!1544}
!1544 = !DISubrange(count: 6)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1340, file: !1509, line: 774, type: !1370, isLocal: false, isDefinition: true, align: 32)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1340, file: !1509, line: 774, type: !1517, isLocal: true, isDefinition: true, align: 32)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1340, file: !1509, line: 778, type: !1533, isLocal: false, isDefinition: true, align: 16)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1340, file: !1509, line: 778, type: !1370, isLocal: false, isDefinition: true, align: 32)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1340, file: !1509, line: 778, type: !1517, isLocal: true, isDefinition: true, align: 32)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1340, file: !1509, line: 782, type: !1533, isLocal: false, isDefinition: true, align: 16)
!1557 = !DIGlobalVariableExpression(var: !1558, expr: !DIExpression())
!1558 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1340, file: !1509, line: 782, type: !1370, isLocal: false, isDefinition: true, align: 32)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1340, file: !1509, line: 782, type: !1517, isLocal: true, isDefinition: true, align: 32)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1340, file: !1509, line: 786, type: !1533, isLocal: false, isDefinition: true, align: 16)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1340, file: !1509, line: 786, type: !1370, isLocal: false, isDefinition: true, align: 32)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1340, file: !1509, line: 786, type: !1517, isLocal: true, isDefinition: true, align: 32)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1340, file: !1509, line: 790, type: !1533, isLocal: false, isDefinition: true, align: 16)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1340, file: !1509, line: 790, type: !1370, isLocal: false, isDefinition: true, align: 32)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1340, file: !1509, line: 790, type: !1517, isLocal: true, isDefinition: true, align: 32)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1340, file: !1509, line: 762, type: !1575, isLocal: true, isDefinition: true)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1576, line: 237, size: 128, elements: !1577)
!1576 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1577 = !{!1578, !1579, !1580}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1575, file: !1576, line: 239, baseType: !1438, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1575, file: !1576, line: 241, baseType: !1369, size: 32, offset: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1575, file: !1576, line: 243, baseType: !1581, size: 64, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1416, line: 40, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1416, line: 35, size: 64, elements: !1583)
!1583 = !{!1584, !1586}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1582, file: !1416, line: 36, baseType: !1585, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1582, file: !1416, line: 37, baseType: !1585, size: 32, offset: 32)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1340, file: !1509, line: 762, type: !1378, isLocal: true, isDefinition: true, align: 8)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1340, file: !1509, line: 766, type: !1575, isLocal: true, isDefinition: true)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1340, file: !1509, line: 766, type: !1378, isLocal: true, isDefinition: true, align: 8)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1340, file: !1509, line: 770, type: !1575, isLocal: true, isDefinition: true)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1340, file: !1509, line: 770, type: !1378, isLocal: true, isDefinition: true, align: 8)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1340, file: !1509, line: 774, type: !1575, isLocal: true, isDefinition: true)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1340, file: !1509, line: 774, type: !1378, isLocal: true, isDefinition: true, align: 8)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1340, file: !1509, line: 778, type: !1575, isLocal: true, isDefinition: true)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1340, file: !1509, line: 778, type: !1378, isLocal: true, isDefinition: true, align: 8)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1340, file: !1509, line: 782, type: !1575, isLocal: true, isDefinition: true)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1340, file: !1509, line: 782, type: !1378, isLocal: true, isDefinition: true, align: 8)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1340, file: !1509, line: 786, type: !1575, isLocal: true, isDefinition: true)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1340, file: !1509, line: 786, type: !1378, isLocal: true, isDefinition: true, align: 8)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1340, file: !1509, line: 790, type: !1575, isLocal: true, isDefinition: true)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1340, file: !1509, line: 790, type: !1378, isLocal: true, isDefinition: true, align: 8)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1340, file: !1509, line: 656, type: !1362, isLocal: true, isDefinition: true)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1340, file: !1509, line: 766, type: !1621, isLocal: true, isDefinition: true)
!1621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1622)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1576, line: 224, size: 160, elements: !1623)
!1623 = !{!1624, !1625, !1626, !1627}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1622, file: !1576, line: 226, baseType: !1433, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1622, file: !1576, line: 228, baseType: !1014, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1622, file: !1576, line: 230, baseType: !125, size: 32, offset: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1622, file: !1576, line: 231, baseType: !1628, size: 64, offset: 96)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1010, line: 343, size: 64, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1628, file: !1010, line: 344, baseType: !208, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1628, file: !1010, line: 345, baseType: !208, size: 32, offset: 32)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1340, file: !1509, line: 770, type: !1621, isLocal: true, isDefinition: true)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1340, file: !1509, line: 774, type: !1621, isLocal: true, isDefinition: true)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1340, file: !1509, line: 778, type: !1621, isLocal: true, isDefinition: true)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1340, file: !1509, line: 782, type: !1621, isLocal: true, isDefinition: true)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1340, file: !1509, line: 786, type: !1621, isLocal: true, isDefinition: true)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1340, file: !1509, line: 790, type: !1621, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1646, file: !1787, line: 44, type: !1903, isLocal: false, isDefinition: true)
!1646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1648, retainedTypes: !1681, globals: !1784, splitDebugInlining: false, nameTableKind: None)
!1647 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!1648 = !{!46, !1649, !1656, !1663, !1670, !1676, !962}
!1649 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1098, line: 47, baseType: !32, size: 32, elements: !1650)
!1650 = !{!1651, !1652, !1653, !1654, !1655}
!1651 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1652 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1653 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1654 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1655 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1656 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1098, line: 75, baseType: !32, size: 32, elements: !1657)
!1657 = !{!1658, !1659, !1660, !1661, !1662}
!1658 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1659 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1660 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1661 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1662 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1663 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1098, line: 92, baseType: !32, size: 32, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668, !1669}
!1665 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1666 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1667 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1668 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1669 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1098, line: 84, baseType: !32, size: 32, elements: !1671)
!1671 = !{!1672, !1673, !1674, !1675}
!1672 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1673 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1674 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1675 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1676 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1098, line: 107, baseType: !32, size: 32, elements: !1677)
!1677 = !{!1678, !1679, !1680}
!1678 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1679 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1680 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1681 = !{!124, !125, !1682, !151, !150, !1731, !208, !1058, !1742, !227, !1781, !1783}
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1098, line: 336, size: 160, elements: !1685)
!1685 = !{!1686, !1705, !1709, !1713, !1726}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1684, file: !1098, line: 365, baseType: !1687, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!125, !1690, !1119}
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1692)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1693)
!1693 = !{!1694, !1695, !1696, !1697, !1703, !1704}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1692, file: !137, line: 380, baseType: !140, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1692, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1692, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1692, file: !137, line: 386, baseType: !1698, size: 32, offset: 96)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 32)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1700)
!1700 = !{!1701, !1702}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1699, file: !137, line: 359, baseType: !150, size: 8)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1699, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1692, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1692, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1684, file: !1098, line: 366, baseType: !1706, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{null, !1690, !151}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1684, file: !1098, line: 374, baseType: !1710, size: 32, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!125, !1690}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1684, file: !1098, line: 377, baseType: !1714, size: 32, offset: 96)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!125, !1690, !1717}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1098, line: 122, size: 64, elements: !1720)
!1720 = !{!1721, !1722, !1723, !1724, !1725}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1719, file: !1098, line: 123, baseType: !208, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1719, file: !1098, line: 124, baseType: !150, size: 8, offset: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1719, file: !1098, line: 125, baseType: !150, size: 8, offset: 40)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1719, file: !1098, line: 126, baseType: !150, size: 8, offset: 48)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1719, file: !1098, line: 127, baseType: !150, size: 8, offset: 56)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1684, file: !1098, line: 379, baseType: !1727, size: 32, offset: 128)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 32)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!125, !1690, !1730}
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !419, line: 507, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 498, size: 224, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738, !1739, !1740, !1741}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1733, file: !419, line: 500, baseType: !423, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1733, file: !419, line: 501, baseType: !423, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1733, file: !419, line: 502, baseType: !423, size: 32, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1733, file: !419, line: 503, baseType: !423, size: 32, offset: 96)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1733, file: !419, line: 504, baseType: !423, size: 32, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1733, file: !419, line: 505, baseType: !423, size: 32, offset: 160)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1733, file: !419, line: 506, baseType: !423, size: 32, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1744)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !963, line: 100, size: 224, elements: !1745)
!1745 = !{!1746, !1751, !1752, !1761, !1766, !1771, !1776}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1744, file: !963, line: 101, baseType: !1747, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !963, line: 76, baseType: !1748)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!125, !1690, !1058}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1744, file: !963, line: 102, baseType: !1747, size: 32, offset: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1744, file: !963, line: 103, baseType: !1753, size: 32, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !963, line: 83, baseType: !1754)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!125, !1690, !1058, !1757, !124}
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !963, line: 72, baseType: !1758)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{null, !1690, !1058, !124}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1744, file: !963, line: 104, baseType: !1762, size: 32, offset: 96)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !963, line: 79, baseType: !1763)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!125, !1690, !1058, !1014}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1744, file: !963, line: 105, baseType: !1767, size: 32, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !963, line: 88, baseType: !1768)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!962, !1690, !1058}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1744, file: !963, line: 106, baseType: !1772, size: 32, offset: 160)
!1772 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !963, line: 92, baseType: !1773)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 32)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!125, !1690, !1058, !1084}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1744, file: !963, line: 107, baseType: !1777, size: 32, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !963, line: 96, baseType: !1778)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!125, !1690, !1058, !124}
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1782)
!1782 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 32)
!1784 = !{!1644, !1785, !1789, !1791, !1798, !1800, !1802, !1804, !1806, !1808, !1810, !1812, !1814, !1816, !1860, !1863, !1865, !1868, !1871, !1873, !1879, !1881, !1883, !1885, !1887, !1889, !1891, !1893, !1895, !1897, !1899, !1901}
!1785 = !DIGlobalVariableExpression(var: !1786, expr: !DIExpression())
!1786 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1646, file: !1787, line: 1914, type: !1788, isLocal: false, isDefinition: true, align: 16)
!1787 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 128, elements: !337)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1646, file: !1787, line: 1914, type: !1691, isLocal: false, isDefinition: true, align: 32)
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1646, file: !1787, line: 1914, type: !1793, isLocal: true, isDefinition: true, align: 32)
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1795)
!1795 = !{!1796, !1797}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1794, file: !434, line: 60, baseType: !1710, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1794, file: !434, line: 65, baseType: !1690, size: 32, offset: 32)
!1798 = !DIGlobalVariableExpression(var: !1799, expr: !DIExpression())
!1799 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1646, file: !1787, line: 1914, type: !1788, isLocal: false, isDefinition: true, align: 16)
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1646, file: !1787, line: 1914, type: !1691, isLocal: false, isDefinition: true, align: 32)
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1646, file: !1787, line: 1914, type: !1793, isLocal: true, isDefinition: true, align: 32)
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1646, file: !1787, line: 1914, type: !1788, isLocal: false, isDefinition: true, align: 16)
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1646, file: !1787, line: 1914, type: !1691, isLocal: false, isDefinition: true, align: 32)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1646, file: !1787, line: 1914, type: !1793, isLocal: true, isDefinition: true, align: 32)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1646, file: !1787, line: 1914, type: !1699, isLocal: true, isDefinition: true, align: 8)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1646, file: !1787, line: 1914, type: !1699, isLocal: true, isDefinition: true, align: 8)
!1814 = !DIGlobalVariableExpression(var: !1815, expr: !DIExpression())
!1815 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1646, file: !1787, line: 1914, type: !1699, isLocal: true, isDefinition: true, align: 8)
!1816 = !DIGlobalVariableExpression(var: !1817, expr: !DIExpression())
!1817 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1646, file: !1787, line: 1914, type: !1818, isLocal: true, isDefinition: true)
!1818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1820, line: 22, size: 224, elements: !1821)
!1820 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1821 = !{!1822, !1823, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1819, file: !1820, line: 24, baseType: !1731, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1819, file: !1820, line: 26, baseType: !1824, size: 32, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1826)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1010, line: 343, size: 64, elements: !1827)
!1827 = !{!1828, !1829}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1826, file: !1010, line: 344, baseType: !208, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1826, file: !1010, line: 345, baseType: !208, size: 32, offset: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1819, file: !1820, line: 28, baseType: !272, size: 32, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1819, file: !1820, line: 30, baseType: !153, size: 8, offset: 96)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1819, file: !1820, line: 32, baseType: !125, size: 32, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1819, file: !1820, line: 34, baseType: !153, size: 8, offset: 160)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1819, file: !1820, line: 36, baseType: !153, size: 8, offset: 168)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1819, file: !1820, line: 38, baseType: !153, size: 8, offset: 176)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1819, file: !1820, line: 40, baseType: !153, size: 8, offset: 184)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1819, file: !1820, line: 41, baseType: !1838, size: 32, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1841, line: 60, size: 64, elements: !1842)
!1841 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1842 = !{!1843, !1859}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1840, file: !1841, line: 69, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1841, line: 50, size: 64, elements: !1847)
!1847 = !{!1848, !1857, !1858}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1846, file: !1841, line: 52, baseType: !1849, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1852, line: 37, baseType: !1853)
!1852 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1852, line: 32, size: 64, elements: !1854)
!1854 = !{!1855, !1856}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1853, file: !1852, line: 34, baseType: !208, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1853, file: !1852, line: 36, baseType: !208, size: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1846, file: !1841, line: 54, baseType: !150, size: 8, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1846, file: !1841, line: 56, baseType: !150, size: 8, offset: 40)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1840, file: !1841, line: 71, baseType: !150, size: 8, offset: 32)
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression())
!1861 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1646, file: !1787, line: 1914, type: !1862, isLocal: true, isDefinition: true)
!1862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1825, size: 64, elements: !662)
!1863 = !DIGlobalVariableExpression(var: !1864, expr: !DIExpression())
!1864 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1646, file: !1787, line: 1914, type: !1839, isLocal: true, isDefinition: true)
!1865 = !DIGlobalVariableExpression(var: !1866, expr: !DIExpression())
!1866 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1646, file: !1787, line: 1914, type: !1867, isLocal: true, isDefinition: true)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1845, size: 64, elements: !662)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1646, file: !1787, line: 1914, type: !1870, isLocal: true, isDefinition: true)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1850, size: 128, elements: !562)
!1871 = !DIGlobalVariableExpression(var: !1872, expr: !DIExpression())
!1872 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1646, file: !1787, line: 1539, type: !1683, isLocal: true, isDefinition: true)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1646, file: !1787, line: 1914, type: !1875, isLocal: true, isDefinition: true)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1820, line: 74, size: 64, elements: !1876)
!1876 = !{!1877, !1878}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1875, file: !1820, line: 76, baseType: !208, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1875, file: !1820, line: 78, baseType: !1690, size: 32, offset: 32)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1646, file: !1787, line: 1914, type: !1818, isLocal: true, isDefinition: true)
!1881 = !DIGlobalVariableExpression(var: !1882, expr: !DIExpression())
!1882 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1646, file: !1787, line: 1914, type: !1862, isLocal: true, isDefinition: true)
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1646, file: !1787, line: 1914, type: !1839, isLocal: true, isDefinition: true)
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression())
!1886 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1646, file: !1787, line: 1914, type: !1867, isLocal: true, isDefinition: true)
!1887 = !DIGlobalVariableExpression(var: !1888, expr: !DIExpression())
!1888 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1646, file: !1787, line: 1914, type: !1870, isLocal: true, isDefinition: true)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1646, file: !1787, line: 1914, type: !1875, isLocal: true, isDefinition: true)
!1891 = !DIGlobalVariableExpression(var: !1892, expr: !DIExpression())
!1892 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1646, file: !1787, line: 1914, type: !1818, isLocal: true, isDefinition: true)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1646, file: !1787, line: 1914, type: !1862, isLocal: true, isDefinition: true)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1646, file: !1787, line: 1914, type: !1839, isLocal: true, isDefinition: true)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1646, file: !1787, line: 1914, type: !1867, isLocal: true, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1646, file: !1787, line: 1914, type: !1870, isLocal: true, isDefinition: true)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1646, file: !1787, line: 1914, type: !1875, isLocal: true, isDefinition: true)
!1903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1904)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1905)
!1905 = !{!1906, !1907}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1904, file: !373, line: 17, baseType: !140, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1904, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1910, file: !1988, line: 65, type: !423, isLocal: true, isDefinition: true)
!1910 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1911, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1912, retainedTypes: !1913, globals: !1985, splitDebugInlining: false, nameTableKind: None)
!1911 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!1912 = !{!749}
!1913 = !{!1914, !1916, !887, !150, !208, !1924, !1955}
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1915, line: 46, baseType: !598)
!1915 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1918, file: !680, line: 766, baseType: !423, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1918, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1918, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1918, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !1927)
!1927 = !{!1928, !1930, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1945, !1950, !1954}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1926, file: !680, line: 413, baseType: !1929, size: 256)
!1929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 256, elements: !337)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1926, file: !680, line: 414, baseType: !1931, size: 768, offset: 256)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 768, elements: !1932)
!1932 = !{!1933}
!1933 = !DISubrange(count: 24)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1926, file: !680, line: 415, baseType: !1929, size: 256, offset: 1024)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1926, file: !680, line: 416, baseType: !1931, size: 768, offset: 1280)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1926, file: !680, line: 417, baseType: !1929, size: 256, offset: 2048)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1926, file: !680, line: 418, baseType: !1931, size: 768, offset: 2304)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1926, file: !680, line: 419, baseType: !1929, size: 256, offset: 3072)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1926, file: !680, line: 420, baseType: !1931, size: 768, offset: 3328)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1926, file: !680, line: 421, baseType: !1929, size: 256, offset: 4096)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1926, file: !680, line: 422, baseType: !1942, size: 1792, offset: 4352)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 1792, elements: !1943)
!1943 = !{!1944}
!1944 = !DISubrange(count: 56)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1926, file: !680, line: 423, baseType: !1946, size: 1920, offset: 6144)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1947, size: 1920, elements: !1948)
!1947 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !150)
!1948 = !{!1949}
!1949 = !DISubrange(count: 240)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1926, file: !680, line: 424, baseType: !1951, size: 20608, offset: 8064)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 20608, elements: !1952)
!1952 = !{!1953}
!1953 = !DISubrange(count: 644)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1926, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962, !1963, !1964, !1965, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1976, !1977, !1978, !1980, !1982, !1984}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1957, file: !680, line: 447, baseType: !684, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1957, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1957, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1957, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1957, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1957, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1957, file: !680, line: 453, baseType: !1966, size: 96, offset: 192)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1947, size: 96, elements: !364)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1957, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1957, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1957, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1957, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1957, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1957, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1957, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1957, file: !680, line: 461, baseType: !1975, size: 64, offset: 512)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 64, elements: !562)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1957, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1957, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1957, file: !680, line: 464, baseType: !1979, size: 128, offset: 640)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 128, elements: !831)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1957, file: !680, line: 465, baseType: !1981, size: 160, offset: 768)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 160, elements: !1534)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1957, file: !680, line: 466, baseType: !1983, size: 160, offset: 928)
!1983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 160, elements: !1534)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1957, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!1985 = !{!1986, !2012, !2015, !2017, !2019, !1908}
!1986 = !DIGlobalVariableExpression(var: !1987, expr: !DIExpression())
!1987 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1910, file: !1988, line: 285, type: !1989, isLocal: true, isDefinition: true, align: 32)
!1988 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1991)
!1991 = !{!1992, !2011}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1990, file: !434, line: 60, baseType: !1993, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{!125, !1996}
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2009, !2010}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1998, file: !137, line: 380, baseType: !140, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1998, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1998, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1998, file: !137, line: 386, baseType: !2004, size: 32, offset: 96)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 32)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2006)
!2006 = !{!2007, !2008}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2005, file: !137, line: 359, baseType: !150, size: 8)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2005, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1998, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1998, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1990, file: !434, line: 65, baseType: !1996, size: 32, offset: 32)
!2012 = !DIGlobalVariableExpression(var: !2013, expr: !DIExpression())
!2013 = distinct !DIGlobalVariable(name: "lock", scope: !1910, file: !1988, line: 34, type: !2014, isLocal: true, isDefinition: true)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "last_load", scope: !1910, file: !1988, line: 36, type: !208, isLocal: true, isDefinition: true)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1910, file: !1988, line: 48, type: !208, isLocal: true, isDefinition: true)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1910, file: !1988, line: 54, type: !208, isLocal: true, isDefinition: true)
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2023, file: !2105, line: 22, type: !2107, isLocal: true, isDefinition: true)
!2023 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2024, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2025, retainedTypes: !2026, globals: !2102, splitDebugInlining: false, nameTableKind: None)
!2024 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2025 = !{!1343, !1349}
!2026 = !{!2027, !2091, !2096, !1396, !1349, !1343, !2101, !124}
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2029)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1344, line: 523, size: 288, elements: !2030)
!2030 = !{!2031, !2050, !2054, !2058, !2062, !2063, !2064, !2068, !2087}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2029, file: !1344, line: 524, baseType: !2032, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{!125, !2035, !1384, !1385}
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2037)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2038)
!2038 = !{!2039, !2040, !2041, !2042, !2048, !2049}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2037, file: !137, line: 380, baseType: !140, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2037, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2037, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2037, file: !137, line: 386, baseType: !2043, size: 32, offset: 96)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2045)
!2045 = !{!2046, !2047}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2044, file: !137, line: 359, baseType: !150, size: 8)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2044, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2037, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2037, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2029, file: !1344, line: 530, baseType: !2051, size: 32, offset: 32)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!125, !2035, !1390}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2029, file: !1344, line: 532, baseType: !2055, size: 32, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 32)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!125, !2035, !1396, !1391}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2029, file: !1344, line: 535, baseType: !2059, size: 32, offset: 96)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{!125, !2035, !1396}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2029, file: !1344, line: 537, baseType: !2059, size: 32, offset: 128)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2029, file: !1344, line: 539, baseType: !2059, size: 32, offset: 160)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2029, file: !1344, line: 541, baseType: !2065, size: 32, offset: 192)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{!125, !2035, !1384, !1343, !1349}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2029, file: !1344, line: 544, baseType: !2069, size: 32, offset: 224)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{!125, !2035, !2072, !153}
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1344, line: 478, size: 96, elements: !2074)
!2074 = !{!2075, !2081, !2086}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2073, file: !1344, line: 482, baseType: !2076, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1416, line: 33, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1416, line: 29, size: 32, elements: !2078)
!2078 = !{!2079}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2077, file: !1416, line: 30, baseType: !2080, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2073, file: !1344, line: 485, baseType: !2082, size: 32, offset: 32)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1344, line: 464, baseType: !2083)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{null, !2035, !2072, !1396}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2073, file: !1344, line: 493, baseType: !1396, size: 32, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2029, file: !1344, line: 547, baseType: !2088, size: 32, offset: 256)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!208, !2035}
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2093)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1344, line: 428, size: 32, elements: !2094)
!2094 = !{!2095}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2093, file: !1344, line: 434, baseType: !1396, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2098)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1344, line: 441, size: 32, elements: !2099)
!2099 = !{!2100}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2098, file: !1344, line: 447, baseType: !1396, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2102 = !{!2103, !2021}
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2104 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2023, file: !2105, line: 37, type: !2106, isLocal: true, isDefinition: true)
!2105 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2108, size: 352, elements: !2109)
!2108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2035)
!2109 = !{!2110}
!2110 = !DISubrange(count: 11)
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2113, file: !2155, line: 139, type: !2159, isLocal: false, isDefinition: true)
!2113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2115, globals: !2152, splitDebugInlining: false, nameTableKind: None)
!2114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2115 = !{!2116}
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 369, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 335, size: 1152, elements: !2119)
!2119 = !{!2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2118, file: !419, line: 337, baseType: !423, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2118, file: !419, line: 338, baseType: !423, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2118, file: !419, line: 339, baseType: !423, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2118, file: !419, line: 340, baseType: !423, size: 32, offset: 96)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2118, file: !419, line: 341, baseType: !423, size: 32, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2118, file: !419, line: 342, baseType: !423, size: 32, offset: 160)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2118, file: !419, line: 343, baseType: !423, size: 32, offset: 192)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2118, file: !419, line: 344, baseType: !208, size: 32, offset: 224)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2118, file: !419, line: 345, baseType: !423, size: 32, offset: 256)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2118, file: !419, line: 346, baseType: !423, size: 32, offset: 288)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2118, file: !419, line: 347, baseType: !985, size: 64, offset: 320)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2118, file: !419, line: 348, baseType: !423, size: 32, offset: 384)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2118, file: !419, line: 349, baseType: !423, size: 32, offset: 416)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2118, file: !419, line: 350, baseType: !423, size: 32, offset: 448)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2118, file: !419, line: 351, baseType: !208, size: 32, offset: 480)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2118, file: !419, line: 352, baseType: !423, size: 32, offset: 512)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2118, file: !419, line: 353, baseType: !423, size: 32, offset: 544)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2118, file: !419, line: 354, baseType: !985, size: 64, offset: 576)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2118, file: !419, line: 355, baseType: !423, size: 32, offset: 640)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2118, file: !419, line: 356, baseType: !423, size: 32, offset: 672)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2118, file: !419, line: 357, baseType: !423, size: 32, offset: 704)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2118, file: !419, line: 358, baseType: !208, size: 32, offset: 736)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2118, file: !419, line: 359, baseType: !423, size: 32, offset: 768)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2118, file: !419, line: 360, baseType: !423, size: 32, offset: 800)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2118, file: !419, line: 361, baseType: !985, size: 64, offset: 832)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2118, file: !419, line: 362, baseType: !423, size: 32, offset: 896)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2118, file: !419, line: 363, baseType: !423, size: 32, offset: 928)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2118, file: !419, line: 364, baseType: !985, size: 64, offset: 960)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2118, file: !419, line: 365, baseType: !423, size: 32, offset: 1024)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2118, file: !419, line: 366, baseType: !423, size: 32, offset: 1056)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2118, file: !419, line: 367, baseType: !1006, size: 32, offset: 1088)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2118, file: !419, line: 368, baseType: !423, size: 32, offset: 1120)
!2152 = !{!2153, !2156, !2111}
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2113, file: !2155, line: 137, type: !208, isLocal: false, isDefinition: true)
!2155 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2113, file: !2155, line: 138, type: !2158, isLocal: false, isDefinition: true)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !312)
!2159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 64, elements: !337)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2162, file: !2165, line: 23, type: !2166, isLocal: false, isDefinition: true)
!2162 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2163, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !2164, splitDebugInlining: false, nameTableKind: None)
!2163 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2164 = !{!2160}
!2165 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2169, file: !2173, line: 37, type: !2425, isLocal: false, isDefinition: true)
!2169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2170, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2171, retainedTypes: !2180, globals: !2253, splitDebugInlining: false, nameTableKind: None)
!2170 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2171 = !{!2172, !46, !749}
!2172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2173, line: 63, baseType: !32, size: 32, elements: !2174)
!2173 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2174 = !{!2175, !2176, !2177, !2178, !2179}
!2175 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2176 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2177 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2178 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2179 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2180 = !{!272, !124, !125, !2181, !393, !208, !2211, !887, !150, !2236}
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2184, line: 51, size: 64, elements: !2185)
!2184 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2185 = !{!2186, !2206}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2183, file: !2184, line: 52, baseType: !2187, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2184, line: 38, baseType: !2188)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!125, !2191, !184, !227}
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2193)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2194)
!2194 = !{!2195, !2196, !2197, !2198, !2204, !2205}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2193, file: !137, line: 380, baseType: !140, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2193, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2193, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2193, file: !137, line: 386, baseType: !2199, size: 32, offset: 96)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 32)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2201)
!2201 = !{!2202, !2203}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2200, file: !137, line: 359, baseType: !150, size: 8)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2200, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2193, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2193, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2183, file: !2184, line: 53, baseType: !2207, size: 32, offset: 32)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2184, line: 47, baseType: !2208)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!125, !2191, !184, !227, !208}
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2213)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2214)
!2214 = !{!2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2213, file: !680, line: 447, baseType: !684, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2213, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2213, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2213, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2213, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2213, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2213, file: !680, line: 453, baseType: !1966, size: 96, offset: 192)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2213, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2213, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2213, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2213, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2213, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2213, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2213, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2213, file: !680, line: 461, baseType: !1975, size: 64, offset: 512)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2213, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2213, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2213, file: !680, line: 464, baseType: !1979, size: 128, offset: 640)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2213, file: !680, line: 465, baseType: !1981, size: 160, offset: 768)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2213, file: !680, line: 466, baseType: !1983, size: 160, offset: 928)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2213, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2238)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2239)
!2239 = !{!2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2238, file: !680, line: 413, baseType: !1929, size: 256)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2238, file: !680, line: 414, baseType: !1931, size: 768, offset: 256)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2238, file: !680, line: 415, baseType: !1929, size: 256, offset: 1024)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2238, file: !680, line: 416, baseType: !1931, size: 768, offset: 1280)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2238, file: !680, line: 417, baseType: !1929, size: 256, offset: 2048)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2238, file: !680, line: 418, baseType: !1931, size: 768, offset: 2304)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2238, file: !680, line: 419, baseType: !1929, size: 256, offset: 3072)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2238, file: !680, line: 420, baseType: !1931, size: 768, offset: 3328)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2238, file: !680, line: 421, baseType: !1929, size: 256, offset: 4096)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2238, file: !680, line: 422, baseType: !1942, size: 1792, offset: 4352)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2238, file: !680, line: 423, baseType: !1946, size: 1920, offset: 6144)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2238, file: !680, line: 424, baseType: !1951, size: 20608, offset: 8064)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2238, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2253 = !{!2167, !2254, !2376, !2385, !2387, !2390, !2395, !2397, !2402}
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(name: "_kernel", scope: !2169, file: !2173, line: 40, type: !2256, isLocal: false, isDefinition: true)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !567, line: 158, size: 288, elements: !2257)
!2257 = !{!2258, !2371}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2256, file: !567, line: 159, baseType: !2259, size: 192)
!2259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2260, size: 192, elements: !662)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !567, line: 100, size: 192, elements: !2261)
!2261 = !{!2262, !2263, !2264, !2365, !2366, !2367, !2368}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2260, file: !567, line: 102, baseType: !208, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2260, file: !567, line: 105, baseType: !393, size: 32, offset: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2260, file: !567, line: 108, baseType: !2265, size: 32, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2267)
!2267 = !{!2268, !2326, !2338, !2339, !2340, !2341, !2347, !2360}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2266, file: !531, line: 247, baseType: !2269, size: 384)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2270)
!2270 = !{!2271, !2295, !2302, !2303, !2304, !2313, !2314, !2315}
!2271 = !DIDerivedType(tag: DW_TAG_member, scope: !2269, file: !531, line: 60, baseType: !2272, size: 64)
!2272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2269, file: !531, line: 60, size: 64, elements: !2273)
!2273 = !{!2274, !2289}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2272, file: !531, line: 61, baseType: !2275, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2277)
!2277 = !{!2278, !2284}
!2278 = !DIDerivedType(tag: DW_TAG_member, scope: !2276, file: !541, line: 38, baseType: !2279, size: 32)
!2279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2276, file: !541, line: 38, size: 32, elements: !2280)
!2280 = !{!2281, !2283}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2279, file: !541, line: 39, baseType: !2282, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2279, file: !541, line: 40, baseType: !2282, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, scope: !2276, file: !541, line: 42, baseType: !2285, size: 32, offset: 32)
!2285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2276, file: !541, line: 42, size: 32, elements: !2286)
!2286 = !{!2287, !2288}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2285, file: !541, line: 43, baseType: !2282, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2285, file: !541, line: 44, baseType: !2282, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2272, file: !531, line: 62, baseType: !2290, size: 64)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2291)
!2291 = !{!2292}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2290, file: !557, line: 50, baseType: !2293, size: 64)
!2293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2294, size: 64, elements: !562)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2269, file: !531, line: 68, baseType: !2296, size: 32, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2298)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2299)
!2299 = !{!2300}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2298, file: !567, line: 232, baseType: !2301, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2276)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2269, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2269, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2304 = !DIDerivedType(tag: DW_TAG_member, scope: !2269, file: !531, line: 90, baseType: !2305, size: 16, offset: 112)
!2305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2269, file: !531, line: 90, size: 16, elements: !2306)
!2306 = !{!2307, !2312}
!2307 = !DIDerivedType(tag: DW_TAG_member, scope: !2305, file: !531, line: 91, baseType: !2308, size: 16)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2305, file: !531, line: 91, size: 16, elements: !2309)
!2309 = !{!2310, !2311}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2308, file: !531, line: 96, baseType: !581, size: 8)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2308, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2305, file: !531, line: 100, baseType: !227, size: 16)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2269, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2269, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2269, file: !531, line: 131, baseType: !2316, size: 192, offset: 192)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2317)
!2317 = !{!2318, !2319, !2325}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2316, file: !567, line: 245, baseType: !2275, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2316, file: !567, line: 246, baseType: !2320, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2321)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 32)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{null, !2324}
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2316, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2266, file: !531, line: 250, baseType: !2327, size: 288, offset: 384)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2328)
!2328 = !{!2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2327, file: !601, line: 26, baseType: !208, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2327, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2327, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2327, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2327, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2327, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2327, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2327, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2327, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2266, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2266, file: !531, line: 256, baseType: !2297, size: 64, offset: 704)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2266, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2266, file: !531, line: 300, baseType: !2342, size: 96, offset: 800)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2343)
!2343 = !{!2344, !2345, !2346}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2342, file: !531, line: 153, baseType: !22, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2342, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2342, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2266, file: !531, line: 325, baseType: !2348, size: 32, offset: 896)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2350)
!2350 = !{!2351, !2357, !2358}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2349, file: !624, line: 5074, baseType: !2352, size: 96)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2353)
!2353 = !{!2354, !2355, !2356}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2352, file: !628, line: 57, baseType: !631, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2352, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2352, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2349, file: !624, line: 5075, baseType: !2297, size: 64, offset: 96)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2349, file: !624, line: 5076, baseType: !2359, offset: 160)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2266, file: !531, line: 343, baseType: !2361, size: 64, offset: 928)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2362)
!2362 = !{!2363, !2364}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2361, file: !601, line: 63, baseType: !208, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2361, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2260, file: !567, line: 111, baseType: !2265, size: 32, offset: 96)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2260, file: !567, line: 124, baseType: !125, size: 32, offset: 128)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2260, file: !567, line: 127, baseType: !150, size: 8, offset: 160)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2260, file: !567, line: 153, baseType: !2369, offset: 168)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2370, line: 33, elements: !639)
!2370 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2256, file: !567, line: 170, baseType: !2372, size: 96, offset: 192)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !2373)
!2373 = !{!2374, !2375}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2372, file: !567, line: 86, baseType: !2265, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2372, file: !567, line: 90, baseType: !2301, size: 64, offset: 32)
!2376 = !DIGlobalVariableExpression(var: !2377, expr: !DIExpression())
!2377 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2169, file: !2173, line: 43, type: !2378, isLocal: false, isDefinition: true, align: 512)
!2378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2379, size: 8704, elements: !2383)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2380, line: 47, size: 8, elements: !2381)
!2380 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2381 = !{!2382}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2379, file: !2380, line: 48, baseType: !142, size: 8)
!2383 = !{!2384}
!2384 = !DISubrange(count: 1088)
!2385 = !DIGlobalVariableExpression(var: !2386, expr: !DIExpression())
!2386 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2169, file: !2173, line: 44, type: !2266, isLocal: false, isDefinition: true)
!2387 = !DIGlobalVariableExpression(var: !2388, expr: !DIExpression())
!2388 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2169, file: !2173, line: 48, type: !2389, isLocal: false, isDefinition: true)
!2389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2266, size: 1024, elements: !662)
!2390 = !DIGlobalVariableExpression(var: !2391, expr: !DIExpression())
!2391 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2169, file: !2173, line: 86, type: !2392, isLocal: false, isDefinition: true, align: 512)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2379, size: 16896, elements: !2393)
!2393 = !{!663, !2394}
!2394 = !DISubrange(count: 2112)
!2395 = !DIGlobalVariableExpression(var: !2396, expr: !DIExpression())
!2396 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2169, file: !2173, line: 217, type: !153, isLocal: false, isDefinition: true)
!2397 = !DIGlobalVariableExpression(var: !2398, expr: !DIExpression())
!2398 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2169, file: !2173, line: 50, type: !2399, isLocal: true, isDefinition: true, align: 512)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2379, size: 3072, elements: !2400)
!2400 = !{!663, !2401}
!2401 = !DISubrange(count: 384)
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(name: "levels", scope: !2404, file: !2173, line: 232, type: !2424, isLocal: true, isDefinition: true)
!2404 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2173, file: !2173, line: 230, type: !2405, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !2407)
!2405 = !DISubroutineType(types: !2406)
!2406 = !{null, !2172}
!2407 = !{!2408, !2409, !2419, !2423}
!2408 = !DILocalVariable(name: "level", arg: 1, scope: !2404, file: !2173, line: 230, type: !2172)
!2409 = !DILocalVariable(name: "entry", scope: !2404, file: !2173, line: 244, type: !2410)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2412)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !2413)
!2413 = !{!2414, !2418}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2412, file: !434, line: 60, baseType: !2415, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 32)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!125, !2191}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2412, file: !434, line: 65, baseType: !2191, size: 32, offset: 32)
!2419 = !DILocalVariable(name: "dev", scope: !2420, file: !2173, line: 247, type: !2191)
!2420 = distinct !DILexicalBlock(scope: !2421, file: !2173, line: 246, column: 64)
!2421 = distinct !DILexicalBlock(scope: !2422, file: !2173, line: 246, column: 2)
!2422 = distinct !DILexicalBlock(scope: !2404, file: !2173, line: 246, column: 2)
!2423 = !DILocalVariable(name: "rc", scope: !2420, file: !2173, line: 248, type: !125)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2410, size: 192, elements: !1543)
!2425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !2427)
!2427 = !{!2428, !2429}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2426, file: !373, line: 17, baseType: !140, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2426, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!2430 = !DIGlobalVariableExpression(var: !2431, expr: !DIExpression())
!2431 = distinct !DIGlobalVariable(name: "states_str", scope: !2432, file: !2433, line: 276, type: !2554, isLocal: true, isDefinition: true)
!2432 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2433, file: !2433, line: 271, type: !2434, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !2545)
!2433 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!140, !2436, !393, !272}
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2437)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 32)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2439)
!2439 = !{!2440, !2498, !2510, !2511, !2512, !2513, !2519, !2532}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2438, file: !531, line: 247, baseType: !2441, size: 384)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2442)
!2442 = !{!2443, !2467, !2474, !2475, !2476, !2485, !2486, !2487}
!2443 = !DIDerivedType(tag: DW_TAG_member, scope: !2441, file: !531, line: 60, baseType: !2444, size: 64)
!2444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2441, file: !531, line: 60, size: 64, elements: !2445)
!2445 = !{!2446, !2461}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2444, file: !531, line: 61, baseType: !2447, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2448)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2449)
!2449 = !{!2450, !2456}
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !541, line: 38, baseType: !2451, size: 32)
!2451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2448, file: !541, line: 38, size: 32, elements: !2452)
!2452 = !{!2453, !2455}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2451, file: !541, line: 39, baseType: !2454, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2451, file: !541, line: 40, baseType: !2454, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !541, line: 42, baseType: !2457, size: 32, offset: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2448, file: !541, line: 42, size: 32, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2457, file: !541, line: 43, baseType: !2454, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2457, file: !541, line: 44, baseType: !2454, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2444, file: !531, line: 62, baseType: !2462, size: 64)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2463)
!2463 = !{!2464}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2462, file: !557, line: 50, baseType: !2465, size: 64)
!2465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2466, size: 64, elements: !562)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2441, file: !531, line: 68, baseType: !2468, size: 32, offset: 64)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2470)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2471)
!2471 = !{!2472}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2470, file: !567, line: 232, baseType: !2473, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2448)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2441, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2441, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2476 = !DIDerivedType(tag: DW_TAG_member, scope: !2441, file: !531, line: 90, baseType: !2477, size: 16, offset: 112)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2441, file: !531, line: 90, size: 16, elements: !2478)
!2478 = !{!2479, !2484}
!2479 = !DIDerivedType(tag: DW_TAG_member, scope: !2477, file: !531, line: 91, baseType: !2480, size: 16)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2477, file: !531, line: 91, size: 16, elements: !2481)
!2481 = !{!2482, !2483}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2480, file: !531, line: 96, baseType: !581, size: 8)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2480, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2477, file: !531, line: 100, baseType: !227, size: 16)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2441, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2441, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2441, file: !531, line: 131, baseType: !2488, size: 192, offset: 192)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2489)
!2489 = !{!2490, !2491, !2497}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2488, file: !567, line: 245, baseType: !2447, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2488, file: !567, line: 246, baseType: !2492, size: 32, offset: 64)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2493)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{null, !2496}
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2488, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2438, file: !531, line: 250, baseType: !2499, size: 288, offset: 384)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2500)
!2500 = !{!2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2499, file: !601, line: 26, baseType: !208, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2499, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2499, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2499, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2499, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2499, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2499, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2499, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2499, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2438, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2438, file: !531, line: 256, baseType: !2469, size: 64, offset: 704)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2438, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2438, file: !531, line: 300, baseType: !2514, size: 96, offset: 800)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2515)
!2515 = !{!2516, !2517, !2518}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2514, file: !531, line: 153, baseType: !22, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2514, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2514, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2438, file: !531, line: 325, baseType: !2520, size: 32, offset: 896)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2522)
!2522 = !{!2523, !2529, !2530}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2521, file: !624, line: 5074, baseType: !2524, size: 96)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2525)
!2525 = !{!2526, !2527, !2528}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2524, file: !628, line: 57, baseType: !631, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2524, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2524, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2521, file: !624, line: 5075, baseType: !2469, size: 64, offset: 96)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2521, file: !624, line: 5076, baseType: !2531, offset: 160)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2438, file: !531, line: 343, baseType: !2533, size: 64, offset: 928)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2534)
!2534 = !{!2535, !2536}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2533, file: !601, line: 63, baseType: !208, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2533, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2538, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2539, globals: !2541, splitDebugInlining: false, nameTableKind: None)
!2538 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2539 = !{!124, !140, !1914, !150, !125, !2540, !24, !272, !393, !22, !208, !1781}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!2541 = !{!2430, !2542}
!2542 = !DIGlobalVariableExpression(var: !2543, expr: !DIExpression())
!2543 = distinct !DIGlobalVariable(name: "states_sz", scope: !2432, file: !2433, line: 279, type: !2544, isLocal: true, isDefinition: true)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2106, size: 256, elements: !337)
!2545 = !{!2546, !2547, !2548, !2549, !2550, !2551, !2552}
!2546 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2432, file: !2433, line: 271, type: !2436)
!2547 = !DILocalVariable(name: "buf", arg: 2, scope: !2432, file: !2433, line: 271, type: !393)
!2548 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2432, file: !2433, line: 271, type: !272)
!2549 = !DILocalVariable(name: "off", scope: !2432, file: !2433, line: 273, type: !272)
!2550 = !DILocalVariable(name: "bit", scope: !2432, file: !2433, line: 274, type: !150)
!2551 = !DILocalVariable(name: "thread_state", scope: !2432, file: !2433, line: 275, type: !150)
!2552 = !DILocalVariable(name: "index", scope: !2553, file: !2433, line: 293, type: !150)
!2553 = distinct !DILexicalBlock(scope: !2432, file: !2433, line: 293, column: 2)
!2554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !337)
!2555 = !DIGlobalVariableExpression(var: !2556, expr: !DIExpression())
!2556 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2557, file: !2665, line: 56, type: !2654, isLocal: false, isDefinition: true)
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2559, globals: !2662, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2559 = !{!2560, !393, !124, !2660, !184, !1914, !887, !125, !208, !1781, !2661}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2562)
!2562 = !{!2563, !2621, !2633, !2634, !2635, !2636, !2642, !2655}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2561, file: !531, line: 247, baseType: !2564, size: 384)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2565)
!2565 = !{!2566, !2590, !2597, !2598, !2599, !2608, !2609, !2610}
!2566 = !DIDerivedType(tag: DW_TAG_member, scope: !2564, file: !531, line: 60, baseType: !2567, size: 64)
!2567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2564, file: !531, line: 60, size: 64, elements: !2568)
!2568 = !{!2569, !2584}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2567, file: !531, line: 61, baseType: !2570, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2571)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2572)
!2572 = !{!2573, !2579}
!2573 = !DIDerivedType(tag: DW_TAG_member, scope: !2571, file: !541, line: 38, baseType: !2574, size: 32)
!2574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2571, file: !541, line: 38, size: 32, elements: !2575)
!2575 = !{!2576, !2578}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2574, file: !541, line: 39, baseType: !2577, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2574, file: !541, line: 40, baseType: !2577, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, scope: !2571, file: !541, line: 42, baseType: !2580, size: 32, offset: 32)
!2580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2571, file: !541, line: 42, size: 32, elements: !2581)
!2581 = !{!2582, !2583}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2580, file: !541, line: 43, baseType: !2577, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2580, file: !541, line: 44, baseType: !2577, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2567, file: !531, line: 62, baseType: !2585, size: 64)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2586)
!2586 = !{!2587}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2585, file: !557, line: 50, baseType: !2588, size: 64)
!2588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2589, size: 64, elements: !562)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2564, file: !531, line: 68, baseType: !2591, size: 32, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2593)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2594)
!2594 = !{!2595}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2593, file: !567, line: 232, baseType: !2596, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2571)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2564, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2564, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2599 = !DIDerivedType(tag: DW_TAG_member, scope: !2564, file: !531, line: 90, baseType: !2600, size: 16, offset: 112)
!2600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2564, file: !531, line: 90, size: 16, elements: !2601)
!2601 = !{!2602, !2607}
!2602 = !DIDerivedType(tag: DW_TAG_member, scope: !2600, file: !531, line: 91, baseType: !2603, size: 16)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2600, file: !531, line: 91, size: 16, elements: !2604)
!2604 = !{!2605, !2606}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2603, file: !531, line: 96, baseType: !581, size: 8)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2603, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2600, file: !531, line: 100, baseType: !227, size: 16)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2564, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2564, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2564, file: !531, line: 131, baseType: !2611, size: 192, offset: 192)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2612)
!2612 = !{!2613, !2614, !2620}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2611, file: !567, line: 245, baseType: !2570, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2611, file: !567, line: 246, baseType: !2615, size: 32, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2616)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 32)
!2617 = !DISubroutineType(types: !2618)
!2618 = !{null, !2619}
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2611, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2561, file: !531, line: 250, baseType: !2622, size: 288, offset: 384)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2623)
!2623 = !{!2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2622, file: !601, line: 26, baseType: !208, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2622, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2622, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2622, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2622, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2622, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2622, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2622, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2622, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2561, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2561, file: !531, line: 256, baseType: !2592, size: 64, offset: 704)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2561, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2561, file: !531, line: 300, baseType: !2637, size: 96, offset: 800)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2638)
!2638 = !{!2639, !2640, !2641}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2637, file: !531, line: 153, baseType: !22, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2637, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2637, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2561, file: !531, line: 325, baseType: !2643, size: 32, offset: 896)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 32)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2645)
!2645 = !{!2646, !2652, !2653}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2644, file: !624, line: 5074, baseType: !2647, size: 96)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2648)
!2648 = !{!2649, !2650, !2651}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2647, file: !628, line: 57, baseType: !631, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2647, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2647, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2644, file: !624, line: 5075, baseType: !2592, size: 64, offset: 96)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2644, file: !624, line: 5076, baseType: !2654, offset: 160)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2561, file: !531, line: 343, baseType: !2656, size: 64, offset: 928)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2657)
!2657 = !{!2658, !2659}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2656, file: !601, line: 63, baseType: !208, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2656, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 32)
!2662 = !{!2555, !2663, !2666, !2668}
!2663 = !DIGlobalVariableExpression(var: !2664, expr: !DIExpression())
!2664 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2557, file: !2665, line: 404, type: !125, isLocal: true, isDefinition: true)
!2665 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2666 = !DIGlobalVariableExpression(var: !2667, expr: !DIExpression())
!2667 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2557, file: !2665, line: 405, type: !125, isLocal: true, isDefinition: true)
!2668 = !DIGlobalVariableExpression(var: !2669, expr: !DIExpression())
!2669 = distinct !DIGlobalVariable(name: "pending_current", scope: !2557, file: !2665, line: 425, type: !2560, isLocal: true, isDefinition: true)
!2670 = !DIGlobalVariableExpression(var: !2671, expr: !DIExpression())
!2671 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2672, file: !2702, line: 15, type: !1781, isLocal: true, isDefinition: true)
!2672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2673, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2674, globals: !2699, splitDebugInlining: false, nameTableKind: None)
!2673 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2674 = !{!1914, !124, !887, !208, !1781, !125, !2675, !393, !598}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2677)
!2677 = !{!2678, !2693, !2698}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2676, file: !567, line: 245, baseType: !2679, size: 64)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2680)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2681)
!2681 = !{!2682, !2688}
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2680, file: !541, line: 38, baseType: !2683, size: 32)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2680, file: !541, line: 38, size: 32, elements: !2684)
!2684 = !{!2685, !2687}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2683, file: !541, line: 39, baseType: !2686, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2683, file: !541, line: 40, baseType: !2686, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, scope: !2680, file: !541, line: 42, baseType: !2689, size: 32, offset: 32)
!2689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2680, file: !541, line: 42, size: 32, elements: !2690)
!2690 = !{!2691, !2692}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2689, file: !541, line: 43, baseType: !2686, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2689, file: !541, line: 44, baseType: !2686, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2676, file: !567, line: 246, baseType: !2694, size: 32, offset: 64)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2695)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 32)
!2696 = !DISubroutineType(types: !2697)
!2697 = !{null, !2675}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2676, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2699 = !{!2670, !2700, !2704, !2706}
!2700 = !DIGlobalVariableExpression(var: !2701, expr: !DIExpression())
!2701 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2672, file: !2702, line: 19, type: !2703, isLocal: true, isDefinition: true)
!2702 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2704 = !DIGlobalVariableExpression(var: !2705, expr: !DIExpression())
!2705 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2672, file: !2702, line: 25, type: !125, isLocal: true, isDefinition: true)
!2706 = !DIGlobalVariableExpression(var: !2707, expr: !DIExpression())
!2707 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2672, file: !2702, line: 17, type: !2708, isLocal: true, isDefinition: true)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2680)
!2709 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2710, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2710 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2715, retainedTypes: !2735, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2715 = !{!2716, !2724}
!2716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2717, line: 69, baseType: !32, size: 32, elements: !2718)
!2717 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2718 = !{!2719, !2720, !2721, !2722, !2723}
!2719 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2720 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2721 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2722 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2723 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2724 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2717, line: 56, baseType: !32, size: 32, elements: !2725)
!2725 = !{!2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734}
!2726 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2727 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2728 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2729 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2730 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2731 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2732 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2733 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2734 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2735 = !{!125, !2716, !2724, !2736, !582, !160, !2738, !2739, !151, !228, !140, !272, !124, !22, !32, !387, !2741, !2742, !389, !388, !391, !390, !2737, !2743, !2744, !2745, !2746}
!2736 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2717, line: 31, baseType: !2737)
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !391)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !273, line: 329, baseType: !32)
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2717, line: 32, baseType: !2740)
!2740 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1782)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !273, line: 145, baseType: !125)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 32)
!2747 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2748, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2748 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2749 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2750, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2751, splitDebugInlining: false, nameTableKind: None)
!2750 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2751 = !{!140, !151, !125, !32}
!2752 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2753, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2753 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2754 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2755, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2756, splitDebugInlining: false, nameTableKind: None)
!2755 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2756 = !{!184, !490, !2757}
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2758)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2760)
!2760 = !{!2761}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2759, file: !492, line: 65, baseType: !497, size: 1408)
!2762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2764, splitDebugInlining: false, nameTableKind: None)
!2763 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2764 = !{!184, !2765, !150}
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2766)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 32)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2768)
!2768 = !{!2769}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2767, file: !492, line: 65, baseType: !497, size: 1408)
!2770 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2771, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2772, splitDebugInlining: false, nameTableKind: None)
!2771 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2772 = !{!2773, !2779, !184, !150, !227}
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCCcmMode_t", file: !2774, line: 95, baseType: !2775)
!2774 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/ccm_mode.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 32)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2774, line: 91, size: 96, elements: !2777)
!2777 = !{!2778, !2784, !2785}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !2776, file: !2774, line: 92, baseType: !2779, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2780)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 32)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2782)
!2782 = !{!2783}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2781, file: !492, line: 65, baseType: !497, size: 1408)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !2776, file: !2774, line: 93, baseType: !184, size: 32, offset: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !2776, file: !2774, line: 94, baseType: !32, size: 32, offset: 64)
!2786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2788, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2788 = !{!2789, !46}
!2789 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2790, line: 27, baseType: !32, size: 32, elements: !2791)
!2790 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2791 = !{!2792, !2793, !2794, !2795, !2796}
!2792 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2793 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2794 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2795 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2796 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2799, retainedTypes: !2800, splitDebugInlining: false, nameTableKind: None)
!2798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2799 = !{!749, !2789, !46}
!2800 = !{!913, !2801, !124, !125, !887, !208, !150, !2818}
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2803)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2804)
!2804 = !{!2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2803, file: !680, line: 413, baseType: !1929, size: 256)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2803, file: !680, line: 414, baseType: !1931, size: 768, offset: 256)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2803, file: !680, line: 415, baseType: !1929, size: 256, offset: 1024)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2803, file: !680, line: 416, baseType: !1931, size: 768, offset: 1280)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2803, file: !680, line: 417, baseType: !1929, size: 256, offset: 2048)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2803, file: !680, line: 418, baseType: !1931, size: 768, offset: 2304)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2803, file: !680, line: 419, baseType: !1929, size: 256, offset: 3072)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2803, file: !680, line: 420, baseType: !1931, size: 768, offset: 3328)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2803, file: !680, line: 421, baseType: !1929, size: 256, offset: 4096)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2803, file: !680, line: 422, baseType: !1942, size: 1792, offset: 4352)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2803, file: !680, line: 423, baseType: !1946, size: 1920, offset: 6144)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2803, file: !680, line: 424, baseType: !1951, size: 20608, offset: 8064)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2803, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2820)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2821)
!2821 = !{!2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2820, file: !680, line: 447, baseType: !684, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2820, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2820, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2820, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2820, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2820, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2820, file: !680, line: 453, baseType: !1966, size: 96, offset: 192)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2820, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2820, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2820, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2820, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2820, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2820, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2820, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2820, file: !680, line: 461, baseType: !1975, size: 64, offset: 512)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2820, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2820, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2820, file: !680, line: 464, baseType: !1979, size: 128, offset: 640)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2820, file: !680, line: 465, baseType: !1981, size: 160, offset: 768)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2820, file: !680, line: 466, baseType: !1983, size: 160, offset: 928)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2820, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2844, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2844 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2846, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2847, splitDebugInlining: false, nameTableKind: None)
!2846 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2847 = !{!124, !125, !22, !2848}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2850)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2851)
!2851 = !{!2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2850, file: !680, line: 447, baseType: !684, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2850, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2850, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2850, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2850, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2850, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2850, file: !680, line: 453, baseType: !1966, size: 96, offset: 192)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2850, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2850, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2850, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2850, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2850, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2850, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2850, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2850, file: !680, line: 461, baseType: !1975, size: 64, offset: 512)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2850, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2850, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2850, file: !680, line: 464, baseType: !1979, size: 128, offset: 640)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2850, file: !680, line: 465, baseType: !1981, size: 160, offset: 768)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2850, file: !680, line: 466, baseType: !1983, size: 160, offset: 928)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2850, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2873 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2874, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2875, splitDebugInlining: false, nameTableKind: None)
!2874 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2875 = !{!2876, !124, !125}
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2878)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2879)
!2879 = !{!2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2878, file: !680, line: 447, baseType: !684, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2878, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2878, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2878, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2878, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2878, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2878, file: !680, line: 453, baseType: !1966, size: 96, offset: 192)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2878, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2878, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2878, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2878, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2878, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2878, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2878, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2878, file: !680, line: 461, baseType: !1975, size: 64, offset: 512)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2878, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2878, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2878, file: !680, line: 464, baseType: !1979, size: 128, offset: 640)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2878, file: !680, line: 465, baseType: !1981, size: 160, offset: 768)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2878, file: !680, line: 466, baseType: !1983, size: 160, offset: 928)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2878, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2901 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2902, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2903, splitDebugInlining: false, nameTableKind: None)
!2902 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2903 = !{!2904, !208, !124, !125}
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 32)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2906, line: 98, size: 256, elements: !2907)
!2906 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2907 = !{!2908, !2913, !2918, !2923, !2928, !2933, !2938, !2943}
!2908 = !DIDerivedType(tag: DW_TAG_member, scope: !2905, file: !2906, line: 99, baseType: !2909, size: 32)
!2909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2905, file: !2906, line: 99, size: 32, elements: !2910)
!2910 = !{!2911, !2912}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2909, file: !2906, line: 99, baseType: !208, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2909, file: !2906, line: 99, baseType: !208, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, scope: !2905, file: !2906, line: 100, baseType: !2914, size: 32, offset: 32)
!2914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2905, file: !2906, line: 100, size: 32, elements: !2915)
!2915 = !{!2916, !2917}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2914, file: !2906, line: 100, baseType: !208, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2914, file: !2906, line: 100, baseType: !208, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, scope: !2905, file: !2906, line: 101, baseType: !2919, size: 32, offset: 64)
!2919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2905, file: !2906, line: 101, size: 32, elements: !2920)
!2920 = !{!2921, !2922}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2919, file: !2906, line: 101, baseType: !208, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2919, file: !2906, line: 101, baseType: !208, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, scope: !2905, file: !2906, line: 102, baseType: !2924, size: 32, offset: 96)
!2924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2905, file: !2906, line: 102, size: 32, elements: !2925)
!2925 = !{!2926, !2927}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2924, file: !2906, line: 102, baseType: !208, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2924, file: !2906, line: 102, baseType: !208, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, scope: !2905, file: !2906, line: 103, baseType: !2929, size: 32, offset: 128)
!2929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2905, file: !2906, line: 103, size: 32, elements: !2930)
!2930 = !{!2931, !2932}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2929, file: !2906, line: 103, baseType: !208, size: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2929, file: !2906, line: 103, baseType: !208, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, scope: !2905, file: !2906, line: 104, baseType: !2934, size: 32, offset: 160)
!2934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2905, file: !2906, line: 104, size: 32, elements: !2935)
!2935 = !{!2936, !2937}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2934, file: !2906, line: 104, baseType: !208, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2934, file: !2906, line: 104, baseType: !208, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, scope: !2905, file: !2906, line: 105, baseType: !2939, size: 32, offset: 192)
!2939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2905, file: !2906, line: 105, size: 32, elements: !2940)
!2940 = !{!2941, !2942}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2939, file: !2906, line: 105, baseType: !208, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2939, file: !2906, line: 105, baseType: !208, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2905, file: !2906, line: 106, baseType: !208, size: 32, offset: 224)
!2944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2788, retainedTypes: !2946, splitDebugInlining: false, nameTableKind: None)
!2945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!2946 = !{!2947, !124, !125, !2972, !3015, !208}
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2950)
!2950 = !{!2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2949, file: !680, line: 447, baseType: !684, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2949, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2949, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2949, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2949, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2949, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2949, file: !680, line: 453, baseType: !1966, size: 96, offset: 192)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2949, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2949, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2949, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2949, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2949, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2949, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2949, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2949, file: !680, line: 461, baseType: !1975, size: 64, offset: 512)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2949, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2949, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2949, file: !680, line: 464, baseType: !1979, size: 128, offset: 640)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2949, file: !680, line: 465, baseType: !1981, size: 160, offset: 768)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2949, file: !680, line: 466, baseType: !1983, size: 160, offset: 928)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2949, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2906, line: 141, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2906, line: 97, size: 256, elements: !2975)
!2975 = !{!2976}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2974, file: !2906, line: 107, baseType: !2977, size: 256)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2906, line: 98, size: 256, elements: !2978)
!2978 = !{!2979, !2984, !2989, !2994, !2999, !3004, !3009, !3014}
!2979 = !DIDerivedType(tag: DW_TAG_member, scope: !2977, file: !2906, line: 99, baseType: !2980, size: 32)
!2980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2977, file: !2906, line: 99, size: 32, elements: !2981)
!2981 = !{!2982, !2983}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2980, file: !2906, line: 99, baseType: !208, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2980, file: !2906, line: 99, baseType: !208, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, scope: !2977, file: !2906, line: 100, baseType: !2985, size: 32, offset: 32)
!2985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2977, file: !2906, line: 100, size: 32, elements: !2986)
!2986 = !{!2987, !2988}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2985, file: !2906, line: 100, baseType: !208, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2985, file: !2906, line: 100, baseType: !208, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, scope: !2977, file: !2906, line: 101, baseType: !2990, size: 32, offset: 64)
!2990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2977, file: !2906, line: 101, size: 32, elements: !2991)
!2991 = !{!2992, !2993}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2990, file: !2906, line: 101, baseType: !208, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2990, file: !2906, line: 101, baseType: !208, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, scope: !2977, file: !2906, line: 102, baseType: !2995, size: 32, offset: 96)
!2995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2977, file: !2906, line: 102, size: 32, elements: !2996)
!2996 = !{!2997, !2998}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2995, file: !2906, line: 102, baseType: !208, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2995, file: !2906, line: 102, baseType: !208, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, scope: !2977, file: !2906, line: 103, baseType: !3000, size: 32, offset: 128)
!3000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2977, file: !2906, line: 103, size: 32, elements: !3001)
!3001 = !{!3002, !3003}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3000, file: !2906, line: 103, baseType: !208, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3000, file: !2906, line: 103, baseType: !208, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, scope: !2977, file: !2906, line: 104, baseType: !3005, size: 32, offset: 160)
!3005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2977, file: !2906, line: 104, size: 32, elements: !3006)
!3006 = !{!3007, !3008}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3005, file: !2906, line: 104, baseType: !208, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3005, file: !2906, line: 104, baseType: !208, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, scope: !2977, file: !2906, line: 105, baseType: !3010, size: 32, offset: 192)
!3010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2977, file: !2906, line: 105, size: 32, elements: !3011)
!3011 = !{!3012, !3013}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3010, file: !2906, line: 105, baseType: !208, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3010, file: !2906, line: 105, baseType: !208, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2977, file: !2906, line: 106, baseType: !208, size: 32, offset: 224)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!3016 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3017, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1912, retainedTypes: !3018, splitDebugInlining: false, nameTableKind: None)
!3017 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3018 = !{!913, !887, !150, !208, !3019, !3036}
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !3021)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !3022)
!3022 = !{!3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3021, file: !680, line: 413, baseType: !1929, size: 256)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3021, file: !680, line: 414, baseType: !1931, size: 768, offset: 256)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3021, file: !680, line: 415, baseType: !1929, size: 256, offset: 1024)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3021, file: !680, line: 416, baseType: !1931, size: 768, offset: 1280)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3021, file: !680, line: 417, baseType: !1929, size: 256, offset: 2048)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3021, file: !680, line: 418, baseType: !1931, size: 768, offset: 2304)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3021, file: !680, line: 419, baseType: !1929, size: 256, offset: 3072)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3021, file: !680, line: 420, baseType: !1931, size: 768, offset: 3328)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3021, file: !680, line: 421, baseType: !1929, size: 256, offset: 4096)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3021, file: !680, line: 422, baseType: !1942, size: 1792, offset: 4352)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3021, file: !680, line: 423, baseType: !1946, size: 1920, offset: 6144)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3021, file: !680, line: 424, baseType: !1951, size: 20608, offset: 8064)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3021, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 32)
!3037 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3038)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3039)
!3039 = !{!3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3038, file: !680, line: 447, baseType: !684, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3038, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3038, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3038, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3038, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3038, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3038, file: !680, line: 453, baseType: !1966, size: 96, offset: 192)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3038, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3038, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3038, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3038, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3038, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3038, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3038, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3038, file: !680, line: 461, baseType: !1975, size: 64, offset: 512)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3038, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3038, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3038, file: !680, line: 464, baseType: !1979, size: 128, offset: 640)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3038, file: !680, line: 465, baseType: !1981, size: 160, offset: 768)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3038, file: !680, line: 466, baseType: !1983, size: 160, offset: 928)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3038, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3061 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3062, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3063, splitDebugInlining: false, nameTableKind: None)
!3062 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3063 = !{!3064, !124, !125}
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3066)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3067)
!3067 = !{!3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3066, file: !680, line: 447, baseType: !684, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3066, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3066, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3066, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3066, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3066, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3066, file: !680, line: 453, baseType: !1966, size: 96, offset: 192)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3066, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3066, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3066, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3066, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3066, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3066, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3066, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3066, file: !680, line: 461, baseType: !1975, size: 64, offset: 512)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3066, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3066, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3066, file: !680, line: 464, baseType: !1979, size: 128, offset: 640)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3066, file: !680, line: 465, baseType: !1981, size: 160, offset: 768)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3066, file: !680, line: 466, baseType: !1983, size: 160, offset: 928)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3066, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3089 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3090, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3091, splitDebugInlining: false, nameTableKind: None)
!3090 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3091 = !{!142, !393, !272, !1119, !3092, !151, !124}
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!3094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3095, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3096, splitDebugInlining: false, nameTableKind: None)
!3095 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3096 = !{!3097}
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 32)
!3098 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 369, baseType: !3099)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 335, size: 1152, elements: !3100)
!3100 = !{!3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3099, file: !419, line: 337, baseType: !423, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3099, file: !419, line: 338, baseType: !423, size: 32, offset: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3099, file: !419, line: 339, baseType: !423, size: 32, offset: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3099, file: !419, line: 340, baseType: !423, size: 32, offset: 96)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3099, file: !419, line: 341, baseType: !423, size: 32, offset: 128)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3099, file: !419, line: 342, baseType: !423, size: 32, offset: 160)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3099, file: !419, line: 343, baseType: !423, size: 32, offset: 192)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3099, file: !419, line: 344, baseType: !208, size: 32, offset: 224)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3099, file: !419, line: 345, baseType: !423, size: 32, offset: 256)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3099, file: !419, line: 346, baseType: !423, size: 32, offset: 288)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3099, file: !419, line: 347, baseType: !985, size: 64, offset: 320)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3099, file: !419, line: 348, baseType: !423, size: 32, offset: 384)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3099, file: !419, line: 349, baseType: !423, size: 32, offset: 416)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3099, file: !419, line: 350, baseType: !423, size: 32, offset: 448)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3099, file: !419, line: 351, baseType: !208, size: 32, offset: 480)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3099, file: !419, line: 352, baseType: !423, size: 32, offset: 512)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3099, file: !419, line: 353, baseType: !423, size: 32, offset: 544)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3099, file: !419, line: 354, baseType: !985, size: 64, offset: 576)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3099, file: !419, line: 355, baseType: !423, size: 32, offset: 640)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3099, file: !419, line: 356, baseType: !423, size: 32, offset: 672)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3099, file: !419, line: 357, baseType: !423, size: 32, offset: 704)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3099, file: !419, line: 358, baseType: !208, size: 32, offset: 736)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3099, file: !419, line: 359, baseType: !423, size: 32, offset: 768)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3099, file: !419, line: 360, baseType: !423, size: 32, offset: 800)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3099, file: !419, line: 361, baseType: !985, size: 64, offset: 832)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3099, file: !419, line: 362, baseType: !423, size: 32, offset: 896)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3099, file: !419, line: 363, baseType: !423, size: 32, offset: 928)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3099, file: !419, line: 364, baseType: !985, size: 64, offset: 960)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3099, file: !419, line: 365, baseType: !423, size: 32, offset: 1024)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3099, file: !419, line: 366, baseType: !423, size: 32, offset: 1056)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3099, file: !419, line: 367, baseType: !1006, size: 32, offset: 1088)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3099, file: !419, line: 368, baseType: !423, size: 32, offset: 1120)
!3133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3134, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3134 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3136, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3137, retainedTypes: !3153, splitDebugInlining: false, nameTableKind: None)
!3136 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3137 = !{!3138, !3145, !3149}
!3138 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3139, line: 38, baseType: !32, size: 32, elements: !3140)
!3139 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3140 = !{!3141, !3142, !3143, !3144}
!3141 = !DIEnumerator(name: "HAL_OK", value: 0)
!3142 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3143 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3144 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3145 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !958, line: 184, baseType: !32, size: 32, elements: !3146)
!3146 = !{!3147, !3148}
!3147 = !DIEnumerator(name: "RESET", value: 0)
!3148 = !DIEnumerator(name: "SET", value: 1)
!3149 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !958, line: 190, baseType: !32, size: 32, elements: !3150)
!3150 = !{!3151, !3152}
!3151 = !DIEnumerator(name: "DISABLE", value: 0)
!3152 = !DIEnumerator(name: "ENABLE", value: 1)
!3153 = !{!124, !3154, !150, !208, !1783, !3190, !3196, !3207, !227, !3208, !1781}
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 32)
!3155 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 369, baseType: !3156)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 335, size: 1152, elements: !3157)
!3157 = !{!3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3156, file: !419, line: 337, baseType: !423, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3156, file: !419, line: 338, baseType: !423, size: 32, offset: 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3156, file: !419, line: 339, baseType: !423, size: 32, offset: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3156, file: !419, line: 340, baseType: !423, size: 32, offset: 96)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3156, file: !419, line: 341, baseType: !423, size: 32, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3156, file: !419, line: 342, baseType: !423, size: 32, offset: 160)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3156, file: !419, line: 343, baseType: !423, size: 32, offset: 192)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3156, file: !419, line: 344, baseType: !208, size: 32, offset: 224)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3156, file: !419, line: 345, baseType: !423, size: 32, offset: 256)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3156, file: !419, line: 346, baseType: !423, size: 32, offset: 288)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3156, file: !419, line: 347, baseType: !985, size: 64, offset: 320)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3156, file: !419, line: 348, baseType: !423, size: 32, offset: 384)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3156, file: !419, line: 349, baseType: !423, size: 32, offset: 416)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3156, file: !419, line: 350, baseType: !423, size: 32, offset: 448)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3156, file: !419, line: 351, baseType: !208, size: 32, offset: 480)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3156, file: !419, line: 352, baseType: !423, size: 32, offset: 512)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3156, file: !419, line: 353, baseType: !423, size: 32, offset: 544)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3156, file: !419, line: 354, baseType: !985, size: 64, offset: 576)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3156, file: !419, line: 355, baseType: !423, size: 32, offset: 640)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3156, file: !419, line: 356, baseType: !423, size: 32, offset: 672)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3156, file: !419, line: 357, baseType: !423, size: 32, offset: 704)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3156, file: !419, line: 358, baseType: !208, size: 32, offset: 736)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3156, file: !419, line: 359, baseType: !423, size: 32, offset: 768)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3156, file: !419, line: 360, baseType: !423, size: 32, offset: 800)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3156, file: !419, line: 361, baseType: !985, size: 64, offset: 832)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3156, file: !419, line: 362, baseType: !423, size: 32, offset: 896)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3156, file: !419, line: 363, baseType: !423, size: 32, offset: 928)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3156, file: !419, line: 364, baseType: !985, size: 64, offset: 960)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3156, file: !419, line: 365, baseType: !423, size: 32, offset: 1024)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3156, file: !419, line: 366, baseType: !423, size: 32, offset: 1056)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3156, file: !419, line: 367, baseType: !1006, size: 32, offset: 1088)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3156, file: !419, line: 368, baseType: !423, size: 32, offset: 1120)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 32)
!3191 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 329, baseType: !3192)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 325, size: 64, elements: !3193)
!3193 = !{!3194, !3195}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3192, file: !419, line: 327, baseType: !423, size: 32)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3192, file: !419, line: 328, baseType: !423, size: 32, offset: 32)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 32)
!3197 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 258, baseType: !3198)
!3198 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 249, size: 224, elements: !3199)
!3199 = !{!3200, !3201, !3202, !3203, !3204, !3205, !3206}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3198, file: !419, line: 251, baseType: !423, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3198, file: !419, line: 252, baseType: !423, size: 32, offset: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3198, file: !419, line: 253, baseType: !423, size: 32, offset: 64)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3198, file: !419, line: 254, baseType: !423, size: 32, offset: 96)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3198, file: !419, line: 255, baseType: !423, size: 32, offset: 128)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3198, file: !419, line: 256, baseType: !423, size: 32, offset: 160)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3198, file: !419, line: 257, baseType: !423, size: 32, offset: 192)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 275, baseType: !3210)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 264, size: 320, elements: !3211)
!3211 = !{!3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3210, file: !419, line: 266, baseType: !423, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3210, file: !419, line: 267, baseType: !423, size: 32, offset: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3210, file: !419, line: 268, baseType: !423, size: 32, offset: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3210, file: !419, line: 269, baseType: !423, size: 32, offset: 96)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3210, file: !419, line: 270, baseType: !423, size: 32, offset: 128)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3210, file: !419, line: 271, baseType: !423, size: 32, offset: 160)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3210, file: !419, line: 272, baseType: !423, size: 32, offset: 192)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3210, file: !419, line: 273, baseType: !423, size: 32, offset: 224)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3210, file: !419, line: 274, baseType: !1455, size: 64, offset: 256)
!3221 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3222, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3223, retainedTypes: !3224, splitDebugInlining: false, nameTableKind: None)
!3222 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3223 = !{!957}
!3224 = !{!3225, !208, !3233, !3239, !3250}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 32)
!3226 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !3227)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !3228)
!3228 = !{!3229, !3230, !3231, !3232}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3227, file: !680, line: 766, baseType: !423, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3227, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3227, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3227, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 32)
!3234 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 329, baseType: !3235)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 325, size: 64, elements: !3236)
!3236 = !{!3237, !3238}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3235, file: !419, line: 327, baseType: !423, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3235, file: !419, line: 328, baseType: !423, size: 32, offset: 32)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 32)
!3240 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 258, baseType: !3241)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 249, size: 224, elements: !3242)
!3242 = !{!3243, !3244, !3245, !3246, !3247, !3248, !3249}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3241, file: !419, line: 251, baseType: !423, size: 32)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3241, file: !419, line: 252, baseType: !423, size: 32, offset: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3241, file: !419, line: 253, baseType: !423, size: 32, offset: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3241, file: !419, line: 254, baseType: !423, size: 32, offset: 96)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3241, file: !419, line: 255, baseType: !423, size: 32, offset: 128)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3241, file: !419, line: 256, baseType: !423, size: 32, offset: 160)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3241, file: !419, line: 257, baseType: !423, size: 32, offset: 192)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 369, baseType: !3252)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 335, size: 1152, elements: !3253)
!3253 = !{!3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3252, file: !419, line: 337, baseType: !423, size: 32)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3252, file: !419, line: 338, baseType: !423, size: 32, offset: 32)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3252, file: !419, line: 339, baseType: !423, size: 32, offset: 64)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3252, file: !419, line: 340, baseType: !423, size: 32, offset: 96)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3252, file: !419, line: 341, baseType: !423, size: 32, offset: 128)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3252, file: !419, line: 342, baseType: !423, size: 32, offset: 160)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3252, file: !419, line: 343, baseType: !423, size: 32, offset: 192)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3252, file: !419, line: 344, baseType: !208, size: 32, offset: 224)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3252, file: !419, line: 345, baseType: !423, size: 32, offset: 256)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3252, file: !419, line: 346, baseType: !423, size: 32, offset: 288)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3252, file: !419, line: 347, baseType: !985, size: 64, offset: 320)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3252, file: !419, line: 348, baseType: !423, size: 32, offset: 384)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3252, file: !419, line: 349, baseType: !423, size: 32, offset: 416)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3252, file: !419, line: 350, baseType: !423, size: 32, offset: 448)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3252, file: !419, line: 351, baseType: !208, size: 32, offset: 480)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3252, file: !419, line: 352, baseType: !423, size: 32, offset: 512)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3252, file: !419, line: 353, baseType: !423, size: 32, offset: 544)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3252, file: !419, line: 354, baseType: !985, size: 64, offset: 576)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3252, file: !419, line: 355, baseType: !423, size: 32, offset: 640)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3252, file: !419, line: 356, baseType: !423, size: 32, offset: 672)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3252, file: !419, line: 357, baseType: !423, size: 32, offset: 704)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3252, file: !419, line: 358, baseType: !208, size: 32, offset: 736)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3252, file: !419, line: 359, baseType: !423, size: 32, offset: 768)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3252, file: !419, line: 360, baseType: !423, size: 32, offset: 800)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3252, file: !419, line: 361, baseType: !985, size: 64, offset: 832)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3252, file: !419, line: 362, baseType: !423, size: 32, offset: 896)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3252, file: !419, line: 363, baseType: !423, size: 32, offset: 928)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3252, file: !419, line: 364, baseType: !985, size: 64, offset: 960)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3252, file: !419, line: 365, baseType: !423, size: 32, offset: 1024)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3252, file: !419, line: 366, baseType: !423, size: 32, offset: 1056)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3252, file: !419, line: 367, baseType: !1006, size: 32, offset: 1088)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3252, file: !419, line: 368, baseType: !423, size: 32, offset: 1120)
!3286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3287, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3288, splitDebugInlining: false, nameTableKind: None)
!3287 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3288 = !{!124, !272}
!3289 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3290, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3291, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3290 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3291 = !{!3292, !3299, !46}
!3292 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3293, line: 14, baseType: !32, size: 32, elements: !3294)
!3293 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3294 = !{!3295, !3296, !3297, !3298}
!3295 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3296 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3297 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3298 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3299 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3293, line: 42, baseType: !32, size: 32, elements: !3300)
!3300 = !{!3301, !3302, !3303, !3304, !3305, !3306}
!3301 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3302 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3303 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3304 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3305 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3306 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3310, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3311, splitDebugInlining: false, nameTableKind: None)
!3310 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3311 = !{!22, !124, !125}
!3312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3313 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!3314 = !{!"Ubuntu clang version 14.0.6"}
!3315 = !{i32 7, !"Dwarf Version", i32 4}
!3316 = !{i32 2, !"Debug Info Version", i32 3}
!3317 = !{i32 1, !"wchar_size", i32 4}
!3318 = !{i32 1, !"min_enum_size", i32 4}
!3319 = !{i32 1, !"branch-target-enforcement", i32 0}
!3320 = !{i32 1, !"sign-return-address", i32 0}
!3321 = !{i32 1, !"sign-return-address-all", i32 0}
!3322 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3323 = !{i32 7, !"frame-pointer", i32 2}
!3324 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3325, file: !3325, line: 26, type: !3326, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !639)
!3325 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3326 = !DISubroutineType(types: !3327)
!3327 = !{null}
!3328 = !DILocation(line: 28, column: 1, scope: !3324)
!3329 = !{i64 2154440419, i64 2154440439, i64 2154440502}
!3330 = !DILocation(line: 29, column: 1, scope: !3324)
!3331 = !{i64 2154440834, i64 2154440854, i64 2154440917}
!3332 = !DILocation(line: 30, column: 1, scope: !3324)
!3333 = !{i64 2154441253, i64 2154441273, i64 2154441336}
!3334 = !DILocation(line: 31, column: 1, scope: !3324)
!3335 = !{i64 2154441672, i64 2154441692, i64 2154441755}
!3336 = !DILocation(line: 33, column: 1, scope: !3324)
!3337 = !{i64 2154441964, i64 2154441984, i64 2154442047}
!3338 = !DILocation(line: 35, column: 1, scope: !3324)
!3339 = !{i64 2154442289, i64 2154442309, i64 2154442372}
!3340 = !DILocation(line: 50, column: 1, scope: !3324)
!3341 = !{i64 2154442716, i64 2154442736, i64 2154442799}
!3342 = !DILocation(line: 54, column: 1, scope: !3324)
!3343 = !{i64 2154443155, i64 2154443175, i64 2154443238}
!3344 = !DILocation(line: 61, column: 1, scope: !3324)
!3345 = !{i64 2154443472, i64 2154443492, i64 2154443555}
!3346 = !DILocation(line: 63, column: 1, scope: !3324)
!3347 = !{i64 2154443852, i64 2154443872, i64 2154443935}
!3348 = !DILocation(line: 64, column: 1, scope: !3324)
!3349 = !{i64 2154444374, i64 2154444394, i64 2154444457}
!3350 = !DILocation(line: 65, column: 1, scope: !3324)
!3351 = !{i64 2154444872, i64 2154444892, i64 2154444955}
!3352 = !DILocation(line: 66, column: 1, scope: !3324)
!3353 = !{i64 2154445354, i64 2154445374, i64 2154445437}
!3354 = !DILocation(line: 67, column: 1, scope: !3324)
!3355 = !{i64 2154449922, i64 2154449942, i64 2154450005}
!3356 = !DILocation(line: 68, column: 1, scope: !3324)
!3357 = !{i64 2154450410, i64 2154450430, i64 2154450493}
!3358 = !DILocation(line: 70, column: 1, scope: !3324)
!3359 = !{i64 2154450878, i64 2154450898, i64 2154450961}
!3360 = !DILocation(line: 71, column: 1, scope: !3324)
!3361 = !{i64 2154451320, i64 2154451340, i64 2154451403}
!3362 = !DILocation(line: 72, column: 1, scope: !3324)
!3363 = !{i64 2154451778, i64 2154451798, i64 2154451861}
!3364 = !DILocation(line: 79, column: 1, scope: !3324)
!3365 = !{i64 2154452232, i64 2154452252, i64 2154452315}
!3366 = !DILocation(line: 80, column: 1, scope: !3324)
!3367 = !{i64 2154452743, i64 2154452763, i64 2154452826}
!3368 = !DILocation(line: 82, column: 1, scope: !3324)
!3369 = !{i64 2154453234, i64 2154453254, i64 2154453317}
!3370 = !DILocation(line: 97, column: 1, scope: !3324)
!3371 = !{i64 2154453571, i64 2154453591, i64 2154453654}
!3372 = !DILocation(line: 99, column: 1, scope: !3324)
!3373 = !{i64 2154453789, i64 2154453809, i64 2154453872}
!3374 = !DILocation(line: 102, column: 1, scope: !3324)
!3375 = !{i64 2154454046, i64 2154454066, i64 2154454129}
!3376 = !DILocation(line: 105, column: 1, scope: !3324)
!3377 = !{i64 2154454286, i64 2154454306, i64 2154454369}
!3378 = !DILocation(line: 115, column: 1, scope: !3324)
!3379 = !{i64 2154454625, i64 2154454645, i64 2154454708}
!3380 = !DILocation(line: 118, column: 1, scope: !3324)
!3381 = !{i64 2154454969, i64 2154454989, i64 2154455052}
!3382 = !DILocation(line: 32, column: 1, scope: !3383)
!3383 = !DILexicalBlockFile(scope: !3324, file: !3384, discriminator: 0)
!3384 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3385 = !{i64 2154455325, i64 2154455345, i64 2154455408}
!3386 = !DILocation(line: 33, column: 1, scope: !3383)
!3387 = !{i64 2154455837, i64 2154455857, i64 2154455920}
!3388 = !DILocation(line: 53, column: 1, scope: !3383)
!3389 = !{i64 2154456345, i64 2154456365, i64 2154456428}
!3390 = !DILocation(line: 54, column: 1, scope: !3383)
!3391 = !{i64 2154456763, i64 2154456783, i64 2154456846}
!3392 = !DILocation(line: 55, column: 1, scope: !3383)
!3393 = !{i64 2154457181, i64 2154457201, i64 2154457264}
!3394 = !DILocation(line: 56, column: 1, scope: !3383)
!3395 = !{i64 2154457599, i64 2154457619, i64 2154457682}
!3396 = !DILocation(line: 57, column: 1, scope: !3383)
!3397 = !{i64 2154458017, i64 2154458037, i64 2154458100}
!3398 = !DILocation(line: 58, column: 1, scope: !3383)
!3399 = !{i64 2154458435, i64 2154458455, i64 2154458518}
!3400 = !DILocation(line: 59, column: 1, scope: !3383)
!3401 = !{i64 2154458853, i64 2154458873, i64 2154458936}
!3402 = !DILocation(line: 60, column: 1, scope: !3383)
!3403 = !{i64 2154459277, i64 2154459297, i64 2154459360}
!3404 = !DILocation(line: 61, column: 1, scope: !3383)
!3405 = !{i64 2154463655, i64 2154463675, i64 2154463738}
!3406 = !DILocation(line: 70, column: 1, scope: !3383)
!3407 = !{i64 2154463884, i64 2154463904, i64 2154463967}
!3408 = !DILocation(line: 72, column: 1, scope: !3383)
!3409 = !{i64 2154464216, i64 2154464236, i64 2154464299}
!3410 = !DILocation(line: 73, column: 1, scope: !3383)
!3411 = !{i64 2154464666, i64 2154464686, i64 2154464749}
!3412 = !DILocation(line: 74, column: 1, scope: !3383)
!3413 = !{i64 2154465116, i64 2154465136, i64 2154465199}
!3414 = !DILocation(line: 75, column: 1, scope: !3383)
!3415 = !{i64 2154465566, i64 2154465586, i64 2154465649}
!3416 = !DILocation(line: 76, column: 1, scope: !3383)
!3417 = !{i64 2154466016, i64 2154466036, i64 2154466099}
!3418 = !DILocation(line: 77, column: 1, scope: !3383)
!3419 = !{i64 2154466466, i64 2154466486, i64 2154466549}
!3420 = !DILocation(line: 78, column: 1, scope: !3383)
!3421 = !{i64 2154466916, i64 2154466936, i64 2154466999}
!3422 = !DILocation(line: 79, column: 1, scope: !3383)
!3423 = !{i64 2154467366, i64 2154467386, i64 2154467449}
!3424 = !DILocation(line: 80, column: 1, scope: !3383)
!3425 = !{i64 2154467819, i64 2154467839, i64 2154467902}
!3426 = !DILocation(line: 84, column: 1, scope: !3383)
!3427 = !{i64 2154468151, i64 2154468171, i64 2154468234}
!3428 = !DILocation(line: 91, column: 1, scope: !3383)
!3429 = !{i64 2154468548, i64 2154468568, i64 2154468631}
!3430 = !DILocation(line: 93, column: 1, scope: !3383)
!3431 = !{i64 2154468915, i64 2154468935, i64 2154468998}
!3432 = !DILocation(line: 106, column: 1, scope: !3383)
!3433 = !{i64 2154469185, i64 2154469205, i64 2154469268}
!3434 = !DILocation(line: 11, column: 1, scope: !3435)
!3435 = !DILexicalBlockFile(scope: !3324, file: !3436, discriminator: 0)
!3436 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3437 = distinct !DISubprogram(name: "validate_hw_compatibility", scope: !294, file: !294, line: 80, type: !132, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3438)
!3438 = !{!3439, !3440}
!3439 = !DILocalVariable(name: "dev", arg: 1, scope: !3437, file: !294, line: 80, type: !134)
!3440 = !DILocalVariable(name: "flags", scope: !3437, file: !294, line: 82, type: !208)
!3441 = !DILocation(line: 0, scope: !3437)
!3442 = !DILocation(line: 84, column: 10, scope: !3437)
!3443 = !DILocation(line: 85, column: 13, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3437, file: !294, line: 85, column: 6)
!3445 = !DILocation(line: 85, column: 28, scope: !3444)
!3446 = !DILocation(line: 85, column: 6, scope: !3437)
!3447 = !DILocation(line: 86, column: 3, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !294, line: 86, column: 3)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 86, column: 3)
!3450 = distinct !DILexicalBlock(scope: !3451, file: !294, line: 86, column: 3)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !294, line: 86, column: 3)
!3452 = distinct !DILexicalBlock(scope: !3444, file: !294, line: 85, column: 35)
!3453 = !DILocation(line: 88, column: 3, scope: !3452)
!3454 = !DILocation(line: 91, column: 13, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3437, file: !294, line: 91, column: 6)
!3456 = !DILocation(line: 91, column: 29, scope: !3455)
!3457 = !DILocation(line: 91, column: 6, scope: !3437)
!3458 = !DILocation(line: 92, column: 3, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !294, line: 92, column: 3)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !294, line: 92, column: 3)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !294, line: 92, column: 3)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !294, line: 92, column: 3)
!3463 = distinct !DILexicalBlock(scope: !3455, file: !294, line: 91, column: 36)
!3464 = !DILocation(line: 94, column: 3, scope: !3463)
!3465 = !DILocation(line: 97, column: 13, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3437, file: !294, line: 97, column: 6)
!3467 = !DILocation(line: 97, column: 37, scope: !3466)
!3468 = !DILocation(line: 97, column: 6, scope: !3437)
!3469 = !DILocation(line: 98, column: 3, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !294, line: 98, column: 3)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !294, line: 98, column: 3)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !294, line: 98, column: 3)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !294, line: 98, column: 3)
!3474 = distinct !DILexicalBlock(scope: !3466, file: !294, line: 97, column: 44)
!3475 = !DILocation(line: 100, column: 3, scope: !3474)
!3476 = !DILocation(line: 103, column: 12, scope: !3437)
!3477 = !DILocation(line: 105, column: 2, scope: !3437)
!3478 = !DILocation(line: 107, column: 1, scope: !3437)
!3479 = distinct !DISubprogram(name: "crypto_query_hwcaps", scope: !128, file: !128, line: 108, type: !132, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3480)
!3480 = !{!3481, !3482, !3483}
!3481 = !DILocalVariable(name: "dev", arg: 1, scope: !3479, file: !128, line: 108, type: !134)
!3482 = !DILocalVariable(name: "api", scope: !3479, file: !128, line: 110, type: !126)
!3483 = !DILocalVariable(name: "tmp", scope: !3479, file: !128, line: 111, type: !125)
!3484 = !DILocation(line: 0, scope: !3479)
!3485 = !DILocation(line: 113, column: 42, scope: !3479)
!3486 = !DILocation(line: 115, column: 13, scope: !3479)
!3487 = !DILocation(line: 115, column: 8, scope: !3479)
!3488 = !DILocation(line: 125, column: 2, scope: !3479)
!3489 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3490, file: !3490, line: 175, type: !3491, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3493)
!3490 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3491 = !DISubroutineType(types: !3492)
!3492 = !{!142, !125}
!3493 = !{!3494}
!3494 = !DILocalVariable(name: "level", arg: 1, scope: !3489, file: !3490, line: 175, type: !125)
!3495 = !DILocation(line: 0, scope: !3489)
!3496 = !DILocation(line: 177, column: 2, scope: !3489)
!3497 = !DILocation(line: 189, column: 1, scope: !3489)
!3498 = distinct !DISubprogram(name: "ecb_mode", scope: !294, file: !294, line: 109, type: !295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3499)
!3499 = !{!3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509}
!3500 = !DILocalVariable(name: "dev", arg: 1, scope: !3498, file: !294, line: 109, type: !134)
!3501 = !DILocalVariable(name: "ecb_key", scope: !3498, file: !294, line: 112, type: !311)
!3502 = !DILocalVariable(name: "ecb_plaintext", scope: !3498, file: !294, line: 116, type: !311)
!3503 = !DILocalVariable(name: "ecb_ciphertext", scope: !3498, file: !294, line: 120, type: !2158)
!3504 = !DILocalVariable(name: "encrypted", scope: !3498, file: !294, line: 125, type: !311)
!3505 = !DILocalVariable(name: "decrypted", scope: !3498, file: !294, line: 126, type: !311)
!3506 = !DILocalVariable(name: "ini", scope: !3498, file: !294, line: 127, type: !166)
!3507 = !DILocalVariable(name: "encrypt", scope: !3498, file: !294, line: 132, type: !181)
!3508 = !DILocalVariable(name: "decrypt", scope: !3498, file: !294, line: 138, type: !181)
!3509 = !DILabel(scope: !3498, name: "out", file: !294, line: 191)
!3510 = !DILocation(line: 0, scope: !3498)
!3511 = !DILocation(line: 112, column: 2, scope: !3498)
!3512 = !DILocation(line: 112, column: 10, scope: !3498)
!3513 = !DILocation(line: 116, column: 2, scope: !3498)
!3514 = !DILocation(line: 116, column: 10, scope: !3498)
!3515 = !DILocation(line: 120, column: 2, scope: !3498)
!3516 = !DILocation(line: 120, column: 16, scope: !3498)
!3517 = !DILocation(line: 125, column: 2, scope: !3498)
!3518 = !DILocation(line: 125, column: 10, scope: !3498)
!3519 = !DILocation(line: 126, column: 2, scope: !3498)
!3520 = !DILocation(line: 126, column: 10, scope: !3498)
!3521 = !DILocation(line: 127, column: 2, scope: !3498)
!3522 = !DILocation(line: 127, column: 20, scope: !3498)
!3523 = !DILocation(line: 129, column: 7, scope: !3498)
!3524 = !DILocation(line: 127, column: 26, scope: !3498)
!3525 = !DILocation(line: 130, column: 12, scope: !3498)
!3526 = !DILocation(line: 132, column: 2, scope: !3498)
!3527 = !DILocation(line: 132, column: 20, scope: !3498)
!3528 = !DILocation(line: 132, column: 30, scope: !3498)
!3529 = !DILocation(line: 138, column: 2, scope: !3498)
!3530 = !DILocation(line: 138, column: 20, scope: !3498)
!3531 = !DILocation(line: 138, column: 30, scope: !3498)
!3532 = !DILocation(line: 145, column: 6, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 145, column: 6)
!3534 = !DILocation(line: 145, column: 6, scope: !3498)
!3535 = !DILocation(line: 151, column: 6, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 151, column: 6)
!3537 = !DILocation(line: 151, column: 6, scope: !3498)
!3538 = !DILocation(line: 152, column: 3, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !294, line: 152, column: 3)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !294, line: 152, column: 3)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !294, line: 152, column: 3)
!3542 = distinct !DILexicalBlock(scope: !3543, file: !294, line: 152, column: 3)
!3543 = distinct !DILexicalBlock(scope: !3536, file: !294, line: 151, column: 39)
!3544 = !DILocation(line: 153, column: 3, scope: !3543)
!3545 = !DILocation(line: 156, column: 2, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !294, line: 156, column: 2)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !294, line: 156, column: 2)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !294, line: 156, column: 2)
!3549 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 156, column: 2)
!3550 = !DILocation(line: 158, column: 21, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 158, column: 6)
!3552 = !DILocation(line: 158, column: 6, scope: !3551)
!3553 = !DILocation(line: 158, column: 6, scope: !3498)
!3554 = !DILocation(line: 159, column: 3, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !294, line: 159, column: 3)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !294, line: 159, column: 3)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !294, line: 159, column: 3)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !294, line: 159, column: 3)
!3559 = distinct !DILexicalBlock(scope: !3551, file: !294, line: 158, column: 71)
!3560 = !DILocation(line: 161, column: 51, scope: !3559)
!3561 = !DILocation(line: 161, column: 3, scope: !3559)
!3562 = !DILocation(line: 163, column: 3, scope: !3559)
!3563 = !DILocation(line: 166, column: 2, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !294, line: 166, column: 2)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !294, line: 166, column: 2)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !294, line: 166, column: 2)
!3567 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 166, column: 2)
!3568 = !DILocation(line: 167, column: 2, scope: !3498)
!3569 = !DILocation(line: 169, column: 6, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 169, column: 6)
!3571 = !DILocation(line: 169, column: 6, scope: !3498)
!3572 = !DILocation(line: 175, column: 6, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 175, column: 6)
!3574 = !DILocation(line: 175, column: 6, scope: !3498)
!3575 = !DILocation(line: 176, column: 3, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !294, line: 176, column: 3)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !294, line: 176, column: 3)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !294, line: 176, column: 3)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !294, line: 176, column: 3)
!3580 = distinct !DILexicalBlock(scope: !3573, file: !294, line: 175, column: 39)
!3581 = !DILocation(line: 177, column: 3, scope: !3580)
!3582 = !DILocation(line: 180, column: 2, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !294, line: 180, column: 2)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !294, line: 180, column: 2)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !294, line: 180, column: 2)
!3586 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 180, column: 2)
!3587 = !DILocation(line: 182, column: 21, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 182, column: 6)
!3589 = !DILocation(line: 182, column: 6, scope: !3588)
!3590 = !DILocation(line: 182, column: 6, scope: !3498)
!3591 = !DILocation(line: 183, column: 3, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !294, line: 183, column: 3)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !294, line: 183, column: 3)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !294, line: 183, column: 3)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !294, line: 183, column: 3)
!3596 = distinct !DILexicalBlock(scope: !3588, file: !294, line: 182, column: 69)
!3597 = !DILocation(line: 185, column: 50, scope: !3596)
!3598 = !DILocation(line: 185, column: 3, scope: !3596)
!3599 = !DILocation(line: 187, column: 3, scope: !3596)
!3600 = !DILocation(line: 190, column: 2, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !294, line: 190, column: 2)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !294, line: 190, column: 2)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !294, line: 190, column: 2)
!3604 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 190, column: 2)
!3605 = !DILocation(line: 190, column: 2, scope: !3604)
!3606 = !DILocation(line: 191, column: 1, scope: !3498)
!3607 = !DILocation(line: 192, column: 2, scope: !3498)
!3608 = !DILocation(line: 193, column: 1, scope: !3498)
!3609 = distinct !DISubprogram(name: "cipher_begin_session", scope: !128, file: !128, line: 159, type: !163, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3610)
!3610 = !{!3611, !3612, !3613, !3614, !3615, !3616, !3617}
!3611 = !DILocalVariable(name: "dev", arg: 1, scope: !3609, file: !128, line: 159, type: !134)
!3612 = !DILocalVariable(name: "ctx", arg: 2, scope: !3609, file: !128, line: 160, type: !165)
!3613 = !DILocalVariable(name: "algo", arg: 3, scope: !3609, file: !128, line: 161, type: !39)
!3614 = !DILocalVariable(name: "mode", arg: 4, scope: !3609, file: !128, line: 162, type: !30)
!3615 = !DILocalVariable(name: "optype", arg: 5, scope: !3609, file: !128, line: 163, type: !42)
!3616 = !DILocalVariable(name: "api", scope: !3609, file: !128, line: 165, type: !126)
!3617 = !DILocalVariable(name: "flags", scope: !3609, file: !128, line: 166, type: !208)
!3618 = !DILocation(line: 0, scope: !3609)
!3619 = !DILocation(line: 168, column: 42, scope: !3609)
!3620 = !DILocation(line: 169, column: 7, scope: !3609)
!3621 = !DILocation(line: 169, column: 14, scope: !3609)
!3622 = !DILocation(line: 170, column: 11, scope: !3609)
!3623 = !DILocation(line: 170, column: 23, scope: !3609)
!3624 = !DILocation(line: 187, column: 14, scope: !3609)
!3625 = !DILocation(line: 187, column: 9, scope: !3609)
!3626 = !DILocation(line: 187, column: 2, scope: !3609)
!3627 = distinct !DISubprogram(name: "cipher_block_op", scope: !128, file: !128, line: 249, type: !178, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3628)
!3628 = !{!3629, !3630}
!3629 = !DILocalVariable(name: "ctx", arg: 1, scope: !3627, file: !128, line: 249, type: !165)
!3630 = !DILocalVariable(name: "pkt", arg: 2, scope: !3627, file: !128, line: 250, type: !180)
!3631 = !DILocation(line: 0, scope: !3627)
!3632 = !DILocation(line: 255, column: 7, scope: !3627)
!3633 = !DILocation(line: 255, column: 11, scope: !3627)
!3634 = !DILocation(line: 256, column: 18, scope: !3627)
!3635 = !DILocation(line: 256, column: 9, scope: !3627)
!3636 = !DILocation(line: 256, column: 2, scope: !3627)
!3637 = distinct !DISubprogram(name: "print_buffer_comparison", scope: !294, file: !294, line: 50, type: !3638, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3640)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{null, !490, !184, !272}
!3640 = !{!3641, !3642, !3643, !3644, !3645}
!3641 = !DILocalVariable(name: "wanted_result", arg: 1, scope: !3637, file: !294, line: 50, type: !490)
!3642 = !DILocalVariable(name: "result", arg: 2, scope: !3637, file: !294, line: 51, type: !184)
!3643 = !DILocalVariable(name: "length", arg: 3, scope: !3637, file: !294, line: 51, type: !272)
!3644 = !DILocalVariable(name: "i", scope: !3637, file: !294, line: 53, type: !125)
!3645 = !DILocalVariable(name: "j", scope: !3637, file: !294, line: 53, type: !125)
!3646 = !DILocation(line: 0, scope: !3637)
!3647 = !DILocation(line: 55, column: 2, scope: !3637)
!3648 = !DILocation(line: 57, column: 23, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !294, line: 57, column: 2)
!3650 = distinct !DILexicalBlock(scope: !3637, file: !294, line: 57, column: 2)
!3651 = !DILocation(line: 57, column: 2, scope: !3650)
!3652 = !DILocation(line: 66, column: 2, scope: !3637)
!3653 = !DILocation(line: 68, column: 2, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3637, file: !294, line: 68, column: 2)
!3655 = !DILocation(line: 58, column: 21, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3649, file: !294, line: 57, column: 43)
!3657 = !DILocation(line: 58, column: 3, scope: !3656)
!3658 = !DILocation(line: 60, column: 9, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3656, file: !294, line: 60, column: 7)
!3660 = !DILocation(line: 60, column: 7, scope: !3656)
!3661 = !DILocation(line: 61, column: 4, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3659, file: !294, line: 60, column: 16)
!3663 = !DILocation(line: 63, column: 3, scope: !3662)
!3664 = !DILocation(line: 0, scope: !3650)
!3665 = !DILocation(line: 57, column: 34, scope: !3649)
!3666 = !DILocation(line: 57, column: 39, scope: !3649)
!3667 = distinct !{!3667, !3651, !3668}
!3668 = !DILocation(line: 64, column: 2, scope: !3650)
!3669 = !DILocation(line: 69, column: 21, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !294, line: 68, column: 43)
!3671 = distinct !DILexicalBlock(scope: !3654, file: !294, line: 68, column: 2)
!3672 = !DILocation(line: 69, column: 3, scope: !3670)
!3673 = !DILocation(line: 71, column: 9, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3670, file: !294, line: 71, column: 7)
!3675 = !DILocation(line: 71, column: 7, scope: !3670)
!3676 = !DILocation(line: 72, column: 4, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3674, file: !294, line: 71, column: 16)
!3678 = !DILocation(line: 74, column: 3, scope: !3677)
!3679 = !DILocation(line: 0, scope: !3654)
!3680 = !DILocation(line: 68, column: 34, scope: !3671)
!3681 = !DILocation(line: 68, column: 39, scope: !3671)
!3682 = !DILocation(line: 68, column: 23, scope: !3671)
!3683 = distinct !{!3683, !3653, !3684}
!3684 = !DILocation(line: 75, column: 2, scope: !3654)
!3685 = !DILocation(line: 77, column: 2, scope: !3637)
!3686 = !DILocation(line: 78, column: 1, scope: !3637)
!3687 = distinct !DISubprogram(name: "cipher_free_session", scope: !128, file: !128, line: 201, type: !243, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3688)
!3688 = !{!3689, !3690, !3691}
!3689 = !DILocalVariable(name: "dev", arg: 1, scope: !3687, file: !128, line: 201, type: !134)
!3690 = !DILocalVariable(name: "ctx", arg: 2, scope: !3687, file: !128, line: 202, type: !165)
!3691 = !DILocalVariable(name: "api", scope: !3687, file: !128, line: 204, type: !126)
!3692 = !DILocation(line: 0, scope: !3687)
!3693 = !DILocation(line: 206, column: 42, scope: !3687)
!3694 = !DILocation(line: 208, column: 14, scope: !3687)
!3695 = !DILocation(line: 208, column: 9, scope: !3687)
!3696 = !DILocation(line: 208, column: 2, scope: !3687)
!3697 = !DILocation(line: 0, scope: !293)
!3698 = !DILocation(line: 207, column: 2, scope: !293)
!3699 = !DILocation(line: 207, column: 10, scope: !293)
!3700 = !DILocation(line: 208, column: 2, scope: !293)
!3701 = !DILocation(line: 208, column: 10, scope: !293)
!3702 = !DILocation(line: 209, column: 2, scope: !293)
!3703 = !DILocation(line: 209, column: 20, scope: !293)
!3704 = !DILocation(line: 211, column: 7, scope: !293)
!3705 = !DILocation(line: 209, column: 26, scope: !293)
!3706 = !DILocation(line: 212, column: 12, scope: !293)
!3707 = !DILocation(line: 214, column: 2, scope: !293)
!3708 = !DILocation(line: 214, column: 20, scope: !293)
!3709 = !DILocation(line: 214, column: 30, scope: !293)
!3710 = !DILocation(line: 220, column: 2, scope: !293)
!3711 = !DILocation(line: 220, column: 20, scope: !293)
!3712 = !DILocation(line: 220, column: 30, scope: !293)
!3713 = !DILocation(line: 232, column: 6, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !293, file: !294, line: 232, column: 6)
!3715 = !DILocation(line: 232, column: 6, scope: !293)
!3716 = !DILocation(line: 238, column: 6, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !293, file: !294, line: 238, column: 6)
!3718 = !DILocation(line: 238, column: 6, scope: !293)
!3719 = !DILocation(line: 239, column: 3, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !294, line: 239, column: 3)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !294, line: 239, column: 3)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !294, line: 239, column: 3)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !294, line: 239, column: 3)
!3724 = distinct !DILexicalBlock(scope: !3717, file: !294, line: 238, column: 41)
!3725 = !DILocation(line: 240, column: 3, scope: !3724)
!3726 = !DILocation(line: 243, column: 2, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !294, line: 243, column: 2)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !294, line: 243, column: 2)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !294, line: 243, column: 2)
!3730 = distinct !DILexicalBlock(scope: !293, file: !294, line: 243, column: 2)
!3731 = !DILocation(line: 245, column: 21, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !293, file: !294, line: 245, column: 6)
!3733 = !DILocation(line: 245, column: 6, scope: !3732)
!3734 = !DILocation(line: 245, column: 6, scope: !293)
!3735 = !DILocation(line: 246, column: 3, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3737, file: !294, line: 246, column: 3)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !294, line: 246, column: 3)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !294, line: 246, column: 3)
!3739 = distinct !DILexicalBlock(scope: !3740, file: !294, line: 246, column: 3)
!3740 = distinct !DILexicalBlock(scope: !3732, file: !294, line: 245, column: 71)
!3741 = !DILocation(line: 248, column: 51, scope: !3740)
!3742 = !DILocation(line: 248, column: 3, scope: !3740)
!3743 = !DILocation(line: 250, column: 3, scope: !3740)
!3744 = !DILocation(line: 253, column: 2, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !294, line: 253, column: 2)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !294, line: 253, column: 2)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !294, line: 253, column: 2)
!3748 = distinct !DILexicalBlock(scope: !293, file: !294, line: 253, column: 2)
!3749 = !DILocation(line: 254, column: 2, scope: !293)
!3750 = !DILocation(line: 256, column: 6, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !293, file: !294, line: 256, column: 6)
!3752 = !DILocation(line: 256, column: 6, scope: !293)
!3753 = !DILocation(line: 263, column: 6, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !293, file: !294, line: 263, column: 6)
!3755 = !DILocation(line: 263, column: 6, scope: !293)
!3756 = !DILocation(line: 264, column: 3, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !294, line: 264, column: 3)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !294, line: 264, column: 3)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !294, line: 264, column: 3)
!3760 = distinct !DILexicalBlock(scope: !3761, file: !294, line: 264, column: 3)
!3761 = distinct !DILexicalBlock(scope: !3754, file: !294, line: 263, column: 48)
!3762 = !DILocation(line: 265, column: 3, scope: !3761)
!3763 = !DILocation(line: 268, column: 2, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !294, line: 268, column: 2)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !294, line: 268, column: 2)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !294, line: 268, column: 2)
!3767 = distinct !DILexicalBlock(scope: !293, file: !294, line: 268, column: 2)
!3768 = !DILocation(line: 270, column: 21, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !293, file: !294, line: 270, column: 6)
!3770 = !DILocation(line: 270, column: 6, scope: !3769)
!3771 = !DILocation(line: 270, column: 6, scope: !293)
!3772 = !DILocation(line: 271, column: 3, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !294, line: 271, column: 3)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 271, column: 3)
!3775 = distinct !DILexicalBlock(scope: !3776, file: !294, line: 271, column: 3)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !294, line: 271, column: 3)
!3777 = distinct !DILexicalBlock(scope: !3769, file: !294, line: 270, column: 61)
!3778 = !DILocation(line: 273, column: 46, scope: !3777)
!3779 = !DILocation(line: 273, column: 3, scope: !3777)
!3780 = !DILocation(line: 275, column: 3, scope: !3777)
!3781 = !DILocation(line: 278, column: 2, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !294, line: 278, column: 2)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !294, line: 278, column: 2)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !294, line: 278, column: 2)
!3785 = distinct !DILexicalBlock(scope: !293, file: !294, line: 278, column: 2)
!3786 = !DILocation(line: 278, column: 2, scope: !3785)
!3787 = !DILocation(line: 279, column: 1, scope: !293)
!3788 = !DILocation(line: 280, column: 2, scope: !293)
!3789 = !DILocation(line: 281, column: 1, scope: !293)
!3790 = distinct !DISubprogram(name: "cipher_cbc_op", scope: !128, file: !128, line: 270, type: !193, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3791)
!3791 = !{!3792, !3793, !3794}
!3792 = !DILocalVariable(name: "ctx", arg: 1, scope: !3790, file: !128, line: 270, type: !165)
!3793 = !DILocalVariable(name: "pkt", arg: 2, scope: !3790, file: !128, line: 271, type: !180)
!3794 = !DILocalVariable(name: "iv", arg: 3, scope: !3790, file: !128, line: 271, type: !184)
!3795 = !DILocation(line: 0, scope: !3790)
!3796 = !DILocation(line: 276, column: 7, scope: !3790)
!3797 = !DILocation(line: 276, column: 11, scope: !3790)
!3798 = !DILocation(line: 277, column: 18, scope: !3790)
!3799 = !DILocation(line: 277, column: 9, scope: !3790)
!3800 = !DILocation(line: 277, column: 2, scope: !3790)
!3801 = distinct !DISubprogram(name: "ctr_mode", scope: !294, file: !294, line: 294, type: !295, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3802)
!3802 = !{!3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810}
!3803 = !DILocalVariable(name: "dev", arg: 1, scope: !3801, file: !294, line: 294, type: !134)
!3804 = !DILocalVariable(name: "encrypted", scope: !3801, file: !294, line: 296, type: !304)
!3805 = !DILocalVariable(name: "decrypted", scope: !3801, file: !294, line: 297, type: !304)
!3806 = !DILocalVariable(name: "ini", scope: !3801, file: !294, line: 298, type: !166)
!3807 = !DILocalVariable(name: "encrypt", scope: !3801, file: !294, line: 305, type: !181)
!3808 = !DILocalVariable(name: "decrypt", scope: !3801, file: !294, line: 311, type: !181)
!3809 = !DILocalVariable(name: "iv", scope: !3801, file: !294, line: 317, type: !363)
!3810 = !DILabel(scope: !3801, name: "out", file: !294, line: 368)
!3811 = !DILocation(line: 0, scope: !3801)
!3812 = !DILocation(line: 296, column: 2, scope: !3801)
!3813 = !DILocation(line: 296, column: 10, scope: !3801)
!3814 = !DILocation(line: 297, column: 2, scope: !3801)
!3815 = !DILocation(line: 297, column: 10, scope: !3801)
!3816 = !DILocation(line: 298, column: 2, scope: !3801)
!3817 = !DILocation(line: 298, column: 20, scope: !3801)
!3818 = !DILocation(line: 298, column: 26, scope: !3801)
!3819 = !DILocation(line: 300, column: 7, scope: !3801)
!3820 = !DILocation(line: 303, column: 24, scope: !3801)
!3821 = !DILocation(line: 301, column: 12, scope: !3801)
!3822 = !DILocation(line: 305, column: 2, scope: !3801)
!3823 = !DILocation(line: 305, column: 20, scope: !3801)
!3824 = !DILocation(line: 305, column: 30, scope: !3801)
!3825 = !DILocation(line: 311, column: 2, scope: !3801)
!3826 = !DILocation(line: 311, column: 20, scope: !3801)
!3827 = !DILocation(line: 311, column: 30, scope: !3801)
!3828 = !DILocation(line: 317, column: 2, scope: !3801)
!3829 = !DILocation(line: 317, column: 10, scope: !3801)
!3830 = !DILocation(line: 322, column: 6, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 322, column: 6)
!3832 = !DILocation(line: 322, column: 6, scope: !3801)
!3833 = !DILocation(line: 328, column: 6, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 328, column: 6)
!3835 = !DILocation(line: 328, column: 6, scope: !3801)
!3836 = !DILocation(line: 329, column: 3, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 329, column: 3)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !294, line: 329, column: 3)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !294, line: 329, column: 3)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !294, line: 329, column: 3)
!3841 = distinct !DILexicalBlock(scope: !3834, file: !294, line: 328, column: 41)
!3842 = !DILocation(line: 330, column: 3, scope: !3841)
!3843 = !DILocation(line: 333, column: 2, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 333, column: 2)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !294, line: 333, column: 2)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !294, line: 333, column: 2)
!3847 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 333, column: 2)
!3848 = !DILocation(line: 335, column: 21, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 335, column: 6)
!3850 = !DILocation(line: 335, column: 6, scope: !3849)
!3851 = !DILocation(line: 335, column: 6, scope: !3801)
!3852 = !DILocation(line: 336, column: 3, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !294, line: 336, column: 3)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !294, line: 336, column: 3)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !294, line: 336, column: 3)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !294, line: 336, column: 3)
!3857 = distinct !DILexicalBlock(scope: !3849, file: !294, line: 335, column: 71)
!3858 = !DILocation(line: 338, column: 51, scope: !3857)
!3859 = !DILocation(line: 338, column: 3, scope: !3857)
!3860 = !DILocation(line: 340, column: 3, scope: !3857)
!3861 = !DILocation(line: 343, column: 2, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !294, line: 343, column: 2)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !294, line: 343, column: 2)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !294, line: 343, column: 2)
!3865 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 343, column: 2)
!3866 = !DILocation(line: 344, column: 2, scope: !3801)
!3867 = !DILocation(line: 346, column: 6, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 346, column: 6)
!3869 = !DILocation(line: 346, column: 6, scope: !3801)
!3870 = !DILocation(line: 352, column: 6, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 352, column: 6)
!3872 = !DILocation(line: 352, column: 6, scope: !3801)
!3873 = !DILocation(line: 353, column: 3, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3875, file: !294, line: 353, column: 3)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !294, line: 353, column: 3)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !294, line: 353, column: 3)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !294, line: 353, column: 3)
!3878 = distinct !DILexicalBlock(scope: !3871, file: !294, line: 352, column: 41)
!3879 = !DILocation(line: 354, column: 3, scope: !3878)
!3880 = !DILocation(line: 357, column: 2, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !294, line: 357, column: 2)
!3882 = distinct !DILexicalBlock(scope: !3883, file: !294, line: 357, column: 2)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !294, line: 357, column: 2)
!3884 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 357, column: 2)
!3885 = !DILocation(line: 359, column: 21, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 359, column: 6)
!3887 = !DILocation(line: 359, column: 6, scope: !3886)
!3888 = !DILocation(line: 359, column: 6, scope: !3801)
!3889 = !DILocation(line: 360, column: 3, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !294, line: 360, column: 3)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 360, column: 3)
!3892 = distinct !DILexicalBlock(scope: !3893, file: !294, line: 360, column: 3)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !294, line: 360, column: 3)
!3894 = distinct !DILexicalBlock(scope: !3886, file: !294, line: 359, column: 61)
!3895 = !DILocation(line: 363, column: 14, scope: !3894)
!3896 = !DILocation(line: 362, column: 3, scope: !3894)
!3897 = !DILocation(line: 364, column: 3, scope: !3894)
!3898 = !DILocation(line: 367, column: 2, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3900, file: !294, line: 367, column: 2)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !294, line: 367, column: 2)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !294, line: 367, column: 2)
!3902 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 367, column: 2)
!3903 = !DILocation(line: 367, column: 2, scope: !3902)
!3904 = !DILocation(line: 368, column: 1, scope: !3801)
!3905 = !DILocation(line: 369, column: 2, scope: !3801)
!3906 = !DILocation(line: 370, column: 1, scope: !3801)
!3907 = distinct !DISubprogram(name: "cipher_ctr_op", scope: !128, file: !128, line: 297, type: !193, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3908)
!3908 = !{!3909, !3910, !3911}
!3909 = !DILocalVariable(name: "ctx", arg: 1, scope: !3907, file: !128, line: 297, type: !165)
!3910 = !DILocalVariable(name: "pkt", arg: 2, scope: !3907, file: !128, line: 298, type: !180)
!3911 = !DILocalVariable(name: "iv", arg: 3, scope: !3907, file: !128, line: 298, type: !184)
!3912 = !DILocation(line: 0, scope: !3907)
!3913 = !DILocation(line: 303, column: 7, scope: !3907)
!3914 = !DILocation(line: 303, column: 11, scope: !3907)
!3915 = !DILocation(line: 304, column: 18, scope: !3907)
!3916 = !DILocation(line: 304, column: 9, scope: !3907)
!3917 = !DILocation(line: 304, column: 2, scope: !3907)
!3918 = distinct !DISubprogram(name: "ccm_mode", scope: !294, file: !294, line: 394, type: !295, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3919)
!3919 = !{!3920, !3921, !3925, !3929, !3930, !3931, !3932, !3933}
!3920 = !DILocalVariable(name: "dev", arg: 1, scope: !3918, file: !294, line: 394, type: !134)
!3921 = !DILocalVariable(name: "encrypted", scope: !3918, file: !294, line: 396, type: !3922)
!3922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 400, elements: !3923)
!3923 = !{!3924}
!3924 = !DISubrange(count: 50)
!3925 = !DILocalVariable(name: "decrypted", scope: !3918, file: !294, line: 397, type: !3926)
!3926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 200, elements: !3927)
!3927 = !{!3928}
!3928 = !DISubrange(count: 25)
!3929 = !DILocalVariable(name: "ini", scope: !3918, file: !294, line: 398, type: !166)
!3930 = !DILocalVariable(name: "encrypt", scope: !3918, file: !294, line: 407, type: !181)
!3931 = !DILocalVariable(name: "ccm_op", scope: !3918, file: !294, line: 413, type: !203)
!3932 = !DILocalVariable(name: "decrypt", scope: !3918, file: !294, line: 425, type: !181)
!3933 = !DILabel(scope: !3918, name: "out", file: !294, line: 480)
!3934 = !DILocation(line: 0, scope: !3918)
!3935 = !DILocation(line: 396, column: 2, scope: !3918)
!3936 = !DILocation(line: 396, column: 10, scope: !3918)
!3937 = !DILocation(line: 397, column: 2, scope: !3918)
!3938 = !DILocation(line: 397, column: 10, scope: !3918)
!3939 = !DILocation(line: 398, column: 2, scope: !3918)
!3940 = !DILocation(line: 398, column: 20, scope: !3918)
!3941 = !DILocation(line: 398, column: 26, scope: !3918)
!3942 = !DILocation(line: 400, column: 7, scope: !3918)
!3943 = !DILocation(line: 401, column: 15, scope: !3918)
!3944 = !DILocation(line: 401, column: 27, scope: !3918)
!3945 = !DILocation(line: 405, column: 12, scope: !3918)
!3946 = !DILocation(line: 407, column: 2, scope: !3918)
!3947 = !DILocation(line: 407, column: 20, scope: !3918)
!3948 = !DILocation(line: 407, column: 30, scope: !3918)
!3949 = !DILocation(line: 413, column: 2, scope: !3918)
!3950 = !DILocation(line: 413, column: 25, scope: !3918)
!3951 = !DILocation(line: 413, column: 34, scope: !3918)
!3952 = !DILocation(line: 423, column: 20, scope: !3918)
!3953 = !DILocation(line: 425, column: 2, scope: !3918)
!3954 = !DILocation(line: 425, column: 20, scope: !3918)
!3955 = !DILocation(line: 425, column: 30, scope: !3918)
!3956 = !DILocation(line: 432, column: 6, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 432, column: 6)
!3958 = !DILocation(line: 432, column: 6, scope: !3918)
!3959 = !DILocation(line: 438, column: 13, scope: !3918)
!3960 = !DILocation(line: 439, column: 6, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 439, column: 6)
!3962 = !DILocation(line: 439, column: 6, scope: !3918)
!3963 = !DILocation(line: 440, column: 3, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !294, line: 440, column: 3)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !294, line: 440, column: 3)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !294, line: 440, column: 3)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !294, line: 440, column: 3)
!3968 = distinct !DILexicalBlock(scope: !3961, file: !294, line: 439, column: 47)
!3969 = !DILocation(line: 441, column: 3, scope: !3968)
!3970 = !DILocation(line: 444, column: 2, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !294, line: 444, column: 2)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !294, line: 444, column: 2)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !294, line: 444, column: 2)
!3974 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 444, column: 2)
!3975 = !DILocation(line: 446, column: 21, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 446, column: 6)
!3977 = !DILocation(line: 446, column: 6, scope: !3976)
!3978 = !DILocation(line: 446, column: 6, scope: !3918)
!3979 = !DILocation(line: 447, column: 3, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !294, line: 447, column: 3)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !294, line: 447, column: 3)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !294, line: 447, column: 3)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !294, line: 447, column: 3)
!3984 = distinct !DILexicalBlock(scope: !3976, file: !294, line: 446, column: 67)
!3985 = !DILocation(line: 450, column: 14, scope: !3984)
!3986 = !DILocation(line: 449, column: 3, scope: !3984)
!3987 = !DILocation(line: 451, column: 3, scope: !3984)
!3988 = !DILocation(line: 454, column: 2, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !294, line: 454, column: 2)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !294, line: 454, column: 2)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !294, line: 454, column: 2)
!3992 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 454, column: 2)
!3993 = !DILocation(line: 455, column: 2, scope: !3918)
!3994 = !DILocation(line: 457, column: 6, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 457, column: 6)
!3996 = !DILocation(line: 457, column: 6, scope: !3918)
!3997 = !DILocation(line: 463, column: 13, scope: !3918)
!3998 = !DILocation(line: 464, column: 6, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 464, column: 6)
!4000 = !DILocation(line: 464, column: 6, scope: !3918)
!4001 = !DILocation(line: 465, column: 3, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !294, line: 465, column: 3)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !294, line: 465, column: 3)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !294, line: 465, column: 3)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !294, line: 465, column: 3)
!4006 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 464, column: 47)
!4007 = !DILocation(line: 466, column: 3, scope: !4006)
!4008 = !DILocation(line: 469, column: 2, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4010, file: !294, line: 469, column: 2)
!4010 = distinct !DILexicalBlock(scope: !4011, file: !294, line: 469, column: 2)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !294, line: 469, column: 2)
!4012 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 469, column: 2)
!4013 = !DILocation(line: 471, column: 21, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 471, column: 6)
!4015 = !DILocation(line: 471, column: 6, scope: !4014)
!4016 = !DILocation(line: 471, column: 6, scope: !3918)
!4017 = !DILocation(line: 472, column: 3, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !294, line: 472, column: 3)
!4019 = distinct !DILexicalBlock(scope: !4020, file: !294, line: 472, column: 3)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !294, line: 472, column: 3)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !294, line: 472, column: 3)
!4022 = distinct !DILexicalBlock(scope: !4014, file: !294, line: 471, column: 59)
!4023 = !DILocation(line: 475, column: 14, scope: !4022)
!4024 = !DILocation(line: 474, column: 3, scope: !4022)
!4025 = !DILocation(line: 476, column: 3, scope: !4022)
!4026 = !DILocation(line: 479, column: 2, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !294, line: 479, column: 2)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !294, line: 479, column: 2)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !294, line: 479, column: 2)
!4030 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 479, column: 2)
!4031 = !DILocation(line: 479, column: 2, scope: !4030)
!4032 = !DILocation(line: 480, column: 1, scope: !3918)
!4033 = !DILocation(line: 481, column: 2, scope: !3918)
!4034 = !DILocation(line: 482, column: 1, scope: !3918)
!4035 = distinct !DISubprogram(name: "cipher_ccm_op", scope: !128, file: !128, line: 319, type: !200, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4036)
!4036 = !{!4037, !4038, !4039}
!4037 = !DILocalVariable(name: "ctx", arg: 1, scope: !4035, file: !128, line: 319, type: !165)
!4038 = !DILocalVariable(name: "pkt", arg: 2, scope: !4035, file: !128, line: 320, type: !202)
!4039 = !DILocalVariable(name: "nonce", arg: 3, scope: !4035, file: !128, line: 320, type: !184)
!4040 = !DILocation(line: 0, scope: !4035)
!4041 = !DILocation(line: 325, column: 7, scope: !4035)
!4042 = !DILocation(line: 325, column: 12, scope: !4035)
!4043 = !DILocation(line: 325, column: 16, scope: !4035)
!4044 = !DILocation(line: 326, column: 18, scope: !4035)
!4045 = !DILocation(line: 326, column: 9, scope: !4035)
!4046 = !DILocation(line: 326, column: 2, scope: !4035)
!4047 = distinct !DISubprogram(name: "gcm_mode", scope: !294, file: !294, line: 511, type: !295, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4048)
!4048 = !{!4049, !4050, !4054, !4056, !4057, !4058, !4059, !4060}
!4049 = !DILocalVariable(name: "dev", arg: 1, scope: !4047, file: !294, line: 511, type: !134)
!4050 = !DILocalVariable(name: "encrypted", scope: !4047, file: !294, line: 513, type: !4051)
!4051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 480, elements: !4052)
!4052 = !{!4053}
!4053 = !DISubrange(count: 60)
!4054 = !DILocalVariable(name: "decrypted", scope: !4047, file: !294, line: 514, type: !4055)
!4055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 352, elements: !498)
!4056 = !DILocalVariable(name: "ini", scope: !4047, file: !294, line: 515, type: !166)
!4057 = !DILocalVariable(name: "encrypt", scope: !4047, file: !294, line: 524, type: !181)
!4058 = !DILocalVariable(name: "gcm_op", scope: !4047, file: !294, line: 530, type: !203)
!4059 = !DILocalVariable(name: "decrypt", scope: !4047, file: !294, line: 542, type: !181)
!4060 = !DILabel(scope: !4047, name: "out", file: !294, line: 597)
!4061 = !DILocation(line: 0, scope: !4047)
!4062 = !DILocation(line: 513, column: 2, scope: !4047)
!4063 = !DILocation(line: 513, column: 10, scope: !4047)
!4064 = !DILocation(line: 514, column: 2, scope: !4047)
!4065 = !DILocation(line: 514, column: 10, scope: !4047)
!4066 = !DILocation(line: 515, column: 2, scope: !4047)
!4067 = !DILocation(line: 515, column: 20, scope: !4047)
!4068 = !DILocation(line: 515, column: 26, scope: !4047)
!4069 = !DILocation(line: 517, column: 7, scope: !4047)
!4070 = !DILocation(line: 518, column: 15, scope: !4047)
!4071 = !DILocation(line: 518, column: 27, scope: !4047)
!4072 = !DILocation(line: 522, column: 12, scope: !4047)
!4073 = !DILocation(line: 524, column: 2, scope: !4047)
!4074 = !DILocation(line: 524, column: 20, scope: !4047)
!4075 = !DILocation(line: 524, column: 30, scope: !4047)
!4076 = !DILocation(line: 530, column: 2, scope: !4047)
!4077 = !DILocation(line: 530, column: 25, scope: !4047)
!4078 = !DILocation(line: 530, column: 34, scope: !4047)
!4079 = !DILocation(line: 540, column: 20, scope: !4047)
!4080 = !DILocation(line: 542, column: 2, scope: !4047)
!4081 = !DILocation(line: 542, column: 20, scope: !4047)
!4082 = !DILocation(line: 542, column: 30, scope: !4047)
!4083 = !DILocation(line: 549, column: 6, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 549, column: 6)
!4085 = !DILocation(line: 549, column: 6, scope: !4047)
!4086 = !DILocation(line: 555, column: 13, scope: !4047)
!4087 = !DILocation(line: 556, column: 6, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 556, column: 6)
!4089 = !DILocation(line: 556, column: 6, scope: !4047)
!4090 = !DILocation(line: 557, column: 3, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4092, file: !294, line: 557, column: 3)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !294, line: 557, column: 3)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !294, line: 557, column: 3)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !294, line: 557, column: 3)
!4095 = distinct !DILexicalBlock(scope: !4088, file: !294, line: 556, column: 47)
!4096 = !DILocation(line: 558, column: 3, scope: !4095)
!4097 = !DILocation(line: 561, column: 2, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4099, file: !294, line: 561, column: 2)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !294, line: 561, column: 2)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !294, line: 561, column: 2)
!4101 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 561, column: 2)
!4102 = !DILocation(line: 563, column: 21, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 563, column: 6)
!4104 = !DILocation(line: 563, column: 6, scope: !4103)
!4105 = !DILocation(line: 563, column: 6, scope: !4047)
!4106 = !DILocation(line: 564, column: 3, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !294, line: 564, column: 3)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !294, line: 564, column: 3)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !294, line: 564, column: 3)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !294, line: 564, column: 3)
!4111 = distinct !DILexicalBlock(scope: !4103, file: !294, line: 563, column: 67)
!4112 = !DILocation(line: 567, column: 14, scope: !4111)
!4113 = !DILocation(line: 566, column: 3, scope: !4111)
!4114 = !DILocation(line: 568, column: 3, scope: !4111)
!4115 = !DILocation(line: 571, column: 2, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !294, line: 571, column: 2)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !294, line: 571, column: 2)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !294, line: 571, column: 2)
!4119 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 571, column: 2)
!4120 = !DILocation(line: 572, column: 2, scope: !4047)
!4121 = !DILocation(line: 574, column: 6, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 574, column: 6)
!4123 = !DILocation(line: 574, column: 6, scope: !4047)
!4124 = !DILocation(line: 580, column: 13, scope: !4047)
!4125 = !DILocation(line: 581, column: 6, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 581, column: 6)
!4127 = !DILocation(line: 581, column: 6, scope: !4047)
!4128 = !DILocation(line: 582, column: 3, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !294, line: 582, column: 3)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !294, line: 582, column: 3)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !294, line: 582, column: 3)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !294, line: 582, column: 3)
!4133 = distinct !DILexicalBlock(scope: !4126, file: !294, line: 581, column: 47)
!4134 = !DILocation(line: 583, column: 3, scope: !4133)
!4135 = !DILocation(line: 586, column: 2, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !294, line: 586, column: 2)
!4137 = distinct !DILexicalBlock(scope: !4138, file: !294, line: 586, column: 2)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !294, line: 586, column: 2)
!4139 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 586, column: 2)
!4140 = !DILocation(line: 588, column: 21, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 588, column: 6)
!4142 = !DILocation(line: 588, column: 6, scope: !4141)
!4143 = !DILocation(line: 588, column: 6, scope: !4047)
!4144 = !DILocation(line: 589, column: 3, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !294, line: 589, column: 3)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !294, line: 589, column: 3)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !294, line: 589, column: 3)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !294, line: 589, column: 3)
!4149 = distinct !DILexicalBlock(scope: !4141, file: !294, line: 588, column: 59)
!4150 = !DILocation(line: 592, column: 14, scope: !4149)
!4151 = !DILocation(line: 591, column: 3, scope: !4149)
!4152 = !DILocation(line: 593, column: 3, scope: !4149)
!4153 = !DILocation(line: 596, column: 2, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !294, line: 596, column: 2)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !294, line: 596, column: 2)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !294, line: 596, column: 2)
!4157 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 596, column: 2)
!4158 = !DILocation(line: 596, column: 2, scope: !4157)
!4159 = !DILocation(line: 597, column: 1, scope: !4047)
!4160 = !DILocation(line: 598, column: 2, scope: !4047)
!4161 = !DILocation(line: 599, column: 1, scope: !4047)
!4162 = distinct !DISubprogram(name: "cipher_gcm_op", scope: !128, file: !128, line: 341, type: !200, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4163)
!4163 = !{!4164, !4165, !4166}
!4164 = !DILocalVariable(name: "ctx", arg: 1, scope: !4162, file: !128, line: 341, type: !165)
!4165 = !DILocalVariable(name: "pkt", arg: 2, scope: !4162, file: !128, line: 342, type: !202)
!4166 = !DILocalVariable(name: "nonce", arg: 3, scope: !4162, file: !128, line: 342, type: !184)
!4167 = !DILocation(line: 0, scope: !4162)
!4168 = !DILocation(line: 347, column: 7, scope: !4162)
!4169 = !DILocation(line: 347, column: 12, scope: !4162)
!4170 = !DILocation(line: 347, column: 16, scope: !4162)
!4171 = !DILocation(line: 348, column: 18, scope: !4162)
!4172 = !DILocation(line: 348, column: 9, scope: !4162)
!4173 = !DILocation(line: 348, column: 2, scope: !4162)
!4174 = distinct !DISubprogram(name: "main", scope: !294, file: !294, line: 606, type: !3326, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4175)
!4175 = !{!4176, !4177, !4185}
!4176 = !DILocalVariable(name: "dev", scope: !4174, file: !294, line: 609, type: !134)
!4177 = !DILocalVariable(name: "modes", scope: !4174, file: !294, line: 623, type: !4178)
!4178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4179, size: 384, elements: !1543)
!4179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4180)
!4180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_test", file: !294, line: 601, size: 64, elements: !4181)
!4181 = !{!4182, !4183}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4180, file: !294, line: 602, baseType: !140, size: 32)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "mode_func", scope: !4180, file: !294, line: 603, baseType: !4184, size: 32, offset: 32)
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!4185 = !DILocalVariable(name: "i", scope: !4174, file: !294, line: 631, type: !125)
!4186 = !DILocation(line: 609, column: 29, scope: !4174)
!4187 = !DILocation(line: 0, scope: !4174)
!4188 = !DILocation(line: 611, column: 7, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4174, file: !294, line: 611, column: 6)
!4190 = !DILocation(line: 611, column: 6, scope: !4174)
!4191 = !DILocation(line: 612, column: 3, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !294, line: 612, column: 3)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !294, line: 612, column: 3)
!4194 = distinct !DILexicalBlock(scope: !4195, file: !294, line: 612, column: 3)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !294, line: 612, column: 3)
!4196 = distinct !DILexicalBlock(scope: !4189, file: !294, line: 611, column: 12)
!4197 = !DILocation(line: 613, column: 3, scope: !4196)
!4198 = !DILocation(line: 623, column: 25, scope: !4174)
!4199 = !DILocation(line: 633, column: 6, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4174, file: !294, line: 633, column: 6)
!4201 = !DILocation(line: 633, column: 6, scope: !4174)
!4202 = !DILocation(line: 634, column: 3, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4204, file: !294, line: 634, column: 3)
!4204 = distinct !DILexicalBlock(scope: !4205, file: !294, line: 634, column: 3)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !294, line: 634, column: 3)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !294, line: 634, column: 3)
!4207 = distinct !DILexicalBlock(scope: !4200, file: !294, line: 633, column: 38)
!4208 = !DILocation(line: 635, column: 3, scope: !4207)
!4209 = !DILocation(line: 638, column: 2, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !294, line: 638, column: 2)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !294, line: 638, column: 2)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !294, line: 638, column: 2)
!4213 = distinct !DILexicalBlock(scope: !4174, file: !294, line: 638, column: 2)
!4214 = !DILocation(line: 640, column: 2, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4174, file: !294, line: 640, column: 2)
!4216 = !DILocation(line: 640, column: 23, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4215, file: !294, line: 640, column: 2)
!4218 = !DILocation(line: 641, column: 3, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4220, file: !294, line: 641, column: 3)
!4220 = distinct !DILexicalBlock(scope: !4221, file: !294, line: 641, column: 3)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !294, line: 641, column: 3)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !294, line: 641, column: 3)
!4223 = distinct !DILexicalBlock(scope: !4217, file: !294, line: 640, column: 34)
!4224 = !DILocation(line: 642, column: 12, scope: !4223)
!4225 = !DILocation(line: 642, column: 3, scope: !4223)
!4226 = !DILocation(line: 640, column: 30, scope: !4217)
!4227 = distinct !{!4227, !4214, !4228}
!4228 = !DILocation(line: 643, column: 2, scope: !4215)
!4229 = !DILocation(line: 644, column: 1, scope: !4174)
!4230 = distinct !DISubprogram(name: "device_get_binding", scope: !4231, file: !4231, line: 24, type: !4232, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4234)
!4231 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!134, !140}
!4234 = !{!4235}
!4235 = !DILocalVariable(name: "name", arg: 1, scope: !4230, file: !4231, line: 24, type: !140)
!4236 = !DILocation(line: 0, scope: !4230)
!4237 = !DILocation(line: 32, column: 2, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4230, file: !4231, line: 32, column: 2)
!4239 = !{i64 2149227245}
!4240 = !DILocation(line: 33, column: 9, scope: !4230)
!4241 = !DILocation(line: 33, column: 2, scope: !4230)
!4242 = distinct !DISubprogram(name: "cbvprintf_package", scope: !395, file: !395, line: 233, type: !4243, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4252)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{!125, !124, !272, !208, !140, !4245}
!4245 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4246, line: 99, baseType: !4247)
!4246 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4247 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4246, line: 40, baseType: !4248)
!4248 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !395, baseType: !4249)
!4249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4250)
!4250 = !{!4251}
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4249, file: !395, line: 18, baseType: !124, size: 32)
!4252 = !{!4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4287, !4296, !4299, !4300, !4303, !4306, !4309, !4312, !4318}
!4253 = !DILocalVariable(name: "packaged", arg: 1, scope: !4242, file: !395, line: 233, type: !124)
!4254 = !DILocalVariable(name: "len", arg: 2, scope: !4242, file: !395, line: 233, type: !272)
!4255 = !DILocalVariable(name: "flags", arg: 3, scope: !4242, file: !395, line: 233, type: !208)
!4256 = !DILocalVariable(name: "fmt", arg: 4, scope: !4242, file: !395, line: 234, type: !140)
!4257 = !DILocalVariable(name: "ap", arg: 5, scope: !4242, file: !395, line: 234, type: !4245)
!4258 = !DILocalVariable(name: "buf0", scope: !4242, file: !395, line: 247, type: !184)
!4259 = !DILocalVariable(name: "buf", scope: !4242, file: !395, line: 248, type: !184)
!4260 = !DILocalVariable(name: "size", scope: !4242, file: !395, line: 249, type: !32)
!4261 = !DILocalVariable(name: "align", scope: !4242, file: !395, line: 250, type: !32)
!4262 = !DILocalVariable(name: "str_ptr_pos", scope: !4242, file: !395, line: 251, type: !311)
!4263 = !DILocalVariable(name: "str_ptr_arg", scope: !4242, file: !395, line: 252, type: !311)
!4264 = !DILocalVariable(name: "s_idx", scope: !4242, file: !395, line: 253, type: !32)
!4265 = !DILocalVariable(name: "s_rw_cnt", scope: !4242, file: !395, line: 254, type: !32)
!4266 = !DILocalVariable(name: "s_ro_cnt", scope: !4242, file: !395, line: 255, type: !32)
!4267 = !DILocalVariable(name: "arg_idx", scope: !4242, file: !395, line: 256, type: !125)
!4268 = !DILocalVariable(name: "i", scope: !4242, file: !395, line: 257, type: !32)
!4269 = !DILocalVariable(name: "s", scope: !4242, file: !395, line: 258, type: !140)
!4270 = !DILocalVariable(name: "parsing", scope: !4242, file: !395, line: 259, type: !153)
!4271 = !DILocalVariable(name: "rws_pos_en", scope: !4242, file: !395, line: 263, type: !153)
!4272 = !DILocalVariable(name: "fros_cnt", scope: !4242, file: !395, line: 268, type: !125)
!4273 = !DILocalVariable(name: "is_str_arg", scope: !4242, file: !395, line: 269, type: !153)
!4274 = !DILocalVariable(name: "pkg_hdr", scope: !4242, file: !395, line: 270, type: !4275)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 32)
!4276 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4277, line: 78, size: 32, elements: !4278)
!4277 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4278 = !{!4279, !4286}
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4276, file: !4277, line: 80, baseType: !4280, size: 32)
!4280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4277, line: 45, size: 32, elements: !4281)
!4281 = !{!4282, !4283, !4284, !4285}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4280, file: !4277, line: 47, baseType: !150, size: 8)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4280, file: !4277, line: 50, baseType: !150, size: 8, offset: 8)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4280, file: !4277, line: 53, baseType: !150, size: 8, offset: 16)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4280, file: !4277, line: 56, baseType: !150, size: 8, offset: 24)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4276, file: !4277, line: 82, baseType: !124, size: 32)
!4287 = !DILocalVariable(name: "v", scope: !4288, file: !395, line: 567, type: !4292)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !395, line: 562, column: 14)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !395, line: 481, column: 18)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !395, line: 466, column: 3)
!4291 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 343, column: 15)
!4292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4242, file: !395, line: 567, size: 64, elements: !4293)
!4293 = !{!4294, !4295}
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4292, file: !395, line: 567, baseType: !385, size: 64)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4292, file: !395, line: 567, baseType: !383, size: 64)
!4296 = !DILocalVariable(name: "is_ro", scope: !4297, file: !395, line: 620, type: !153)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !395, line: 613, column: 19)
!4298 = distinct !DILexicalBlock(scope: !4291, file: !395, line: 613, column: 7)
!4299 = !DILocalVariable(name: "do_ro", scope: !4297, file: !395, line: 621, type: !153)
!4300 = !DILocalVariable(name: "s_ptr_idx", scope: !4301, file: !395, line: 626, type: !208)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !395, line: 625, column: 11)
!4302 = distinct !DILexicalBlock(scope: !4297, file: !395, line: 623, column: 8)
!4303 = !DILocalVariable(name: "v", scope: !4304, file: !395, line: 684, type: !125)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !395, line: 683, column: 35)
!4305 = distinct !DILexicalBlock(scope: !4298, file: !395, line: 683, column: 14)
!4306 = !DILocalVariable(name: "v", scope: !4307, file: !395, line: 691, type: !389)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !395, line: 690, column: 36)
!4308 = distinct !DILexicalBlock(scope: !4305, file: !395, line: 690, column: 14)
!4309 = !DILocalVariable(name: "v", scope: !4310, file: !395, line: 698, type: !391)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !395, line: 697, column: 41)
!4311 = distinct !DILexicalBlock(scope: !4308, file: !395, line: 697, column: 14)
!4312 = !DILocalVariable(name: "pos", scope: !4313, file: !395, line: 762, type: !150)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !395, line: 757, column: 31)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !395, line: 757, column: 3)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !395, line: 757, column: 3)
!4316 = distinct !DILexicalBlock(scope: !4317, file: !395, line: 756, column: 16)
!4317 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 756, column: 6)
!4318 = !DILabel(scope: !4297, name: "process_string", file: !395, line: 615)
!4319 = !DILocation(line: 0, scope: !4242)
!4320 = !DILocation(line: 251, column: 2, scope: !4242)
!4321 = !DILocation(line: 251, column: 10, scope: !4242)
!4322 = !DILocation(line: 252, column: 2, scope: !4242)
!4323 = !DILocation(line: 252, column: 10, scope: !4242)
!4324 = !DILocation(line: 263, column: 29, scope: !4242)
!4325 = !DILocation(line: 263, column: 21, scope: !4242)
!4326 = !DILocation(line: 268, column: 21, scope: !4242)
!4327 = !DILocation(line: 268, column: 19, scope: !4242)
!4328 = !DILocation(line: 273, column: 6, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 273, column: 6)
!4330 = !DILocation(line: 273, column: 26, scope: !4329)
!4331 = !DILocation(line: 273, column: 6, scope: !4242)
!4332 = !DILocation(line: 297, column: 6, scope: !4242)
!4333 = !DILocation(line: 305, column: 11, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 305, column: 6)
!4335 = !DILocation(line: 305, column: 6, scope: !4242)
!4336 = !DILocation(line: 327, column: 19, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 327, column: 6)
!4338 = !DILocation(line: 327, column: 22, scope: !4337)
!4339 = !DILocation(line: 327, column: 33, scope: !4337)
!4340 = !DILocation(line: 327, column: 50, scope: !4337)
!4341 = !DILocation(line: 327, column: 6, scope: !4242)
!4342 = !DILocation(line: 338, column: 9, scope: !4242)
!4343 = !DILocation(line: 341, column: 2, scope: !4242)
!4344 = !DILocation(line: 472, column: 8, scope: !4290)
!4345 = !DILocation(line: 473, column: 14, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !395, line: 473, column: 9)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !395, line: 472, column: 18)
!4348 = distinct !DILexicalBlock(scope: !4290, file: !395, line: 472, column: 8)
!4349 = !DILocation(line: 473, column: 9, scope: !4347)
!4350 = !DILocation(line: 479, column: 5, scope: !4347)
!4351 = !DILocation(line: 468, column: 9, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4290, file: !395, line: 468, column: 8)
!4353 = !DILocation(line: 468, column: 8, scope: !4352)
!4354 = !DILocation(line: 468, column: 15, scope: !4352)
!4355 = !DILocation(line: 468, column: 8, scope: !4290)
!4356 = distinct !{!4356, !4357, !4358}
!4357 = !DILocation(line: 343, column: 2, scope: !4242)
!4358 = !DILocation(line: 712, column: 2, scope: !4242)
!4359 = !DILocation(line: 481, column: 4, scope: !4290)
!4360 = !DILocation(line: 484, column: 12, scope: !4289)
!4361 = !DILocation(line: 485, column: 5, scope: !4289)
!4362 = !DILocation(line: 505, column: 5, scope: !4289)
!4363 = !DILocation(line: 518, column: 5, scope: !4289)
!4364 = !DILocation(line: 523, column: 5, scope: !4289)
!4365 = !DILocation(line: 532, column: 9, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4289, file: !395, line: 532, column: 9)
!4367 = !DILocation(line: 532, column: 17, scope: !4366)
!4368 = !DILocation(line: 532, column: 9, scope: !4289)
!4369 = !DILocation(line: 533, column: 10, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !395, line: 533, column: 10)
!4371 = distinct !DILexicalBlock(scope: !4366, file: !395, line: 532, column: 25)
!4372 = !DILocation(line: 533, column: 18, scope: !4370)
!4373 = !DILocation(line: 0, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4288, file: !395, line: 569, column: 9)
!4375 = !DILocation(line: 0, scope: !4288)
!4376 = !DILocation(line: 579, column: 20, scope: !4288)
!4377 = !DILocation(line: 579, column: 11, scope: !4288)
!4378 = !DILocation(line: 580, column: 9, scope: !4288)
!4379 = !DILocation(line: 582, column: 21, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !395, line: 582, column: 10)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !395, line: 580, column: 23)
!4382 = distinct !DILexicalBlock(scope: !4288, file: !395, line: 580, column: 9)
!4383 = !DILocation(line: 582, column: 28, scope: !4380)
!4384 = !DILocation(line: 582, column: 10, scope: !4381)
!4385 = !DILocation(line: 0, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !395, line: 587, column: 17)
!4387 = distinct !DILexicalBlock(scope: !4381, file: !395, line: 585, column: 10)
!4388 = !DILocation(line: 593, column: 9, scope: !4288)
!4389 = !DILocation(line: 600, column: 5, scope: !4289)
!4390 = !DILocation(line: 605, column: 18, scope: !4291)
!4391 = !DILocation(line: 605, column: 9, scope: !4291)
!4392 = !DILocation(line: 608, column: 20, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4291, file: !395, line: 608, column: 7)
!4394 = !DILocation(line: 608, column: 23, scope: !4393)
!4395 = !DILocation(line: 608, column: 34, scope: !4393)
!4396 = !DILocation(line: 608, column: 41, scope: !4393)
!4397 = !DILocation(line: 608, column: 7, scope: !4291)
!4398 = !DILocation(line: 613, column: 7, scope: !4291)
!4399 = !DILocation(line: 614, column: 8, scope: !4297)
!4400 = !DILocation(line: 614, column: 4, scope: !4297)
!4401 = !DILocation(line: 255, column: 15, scope: !4242)
!4402 = !DILocation(line: 256, column: 6, scope: !4242)
!4403 = !DILocation(line: 254, column: 15, scope: !4242)
!4404 = !DILocation(line: 253, column: 15, scope: !4242)
!4405 = !DILocation(line: 320, column: 7, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4334, file: !395, line: 305, column: 20)
!4407 = !DILocation(line: 615, column: 1, scope: !4297)
!4408 = !DILocation(line: 616, column: 8, scope: !4297)
!4409 = !DILocation(line: 617, column: 5, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !395, line: 616, column: 22)
!4411 = distinct !DILexicalBlock(scope: !4297, file: !395, line: 616, column: 8)
!4412 = !DILocation(line: 617, column: 25, scope: !4410)
!4413 = !DILocation(line: 618, column: 4, scope: !4410)
!4414 = !DILocation(line: 620, column: 26, scope: !4297)
!4415 = !DILocation(line: 620, column: 29, scope: !4297)
!4416 = !DILocation(line: 620, column: 17, scope: !4297)
!4417 = !DILocation(line: 620, column: 43, scope: !4297)
!4418 = !DILocation(line: 0, scope: !4297)
!4419 = !DILocation(line: 623, column: 14, scope: !4302)
!4420 = !DILocation(line: 626, column: 26, scope: !4301)
!4421 = !DILocation(line: 626, column: 37, scope: !4301)
!4422 = !DILocation(line: 0, scope: !4301)
!4423 = !DILocation(line: 634, column: 15, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4301, file: !395, line: 634, column: 9)
!4425 = !DILocation(line: 644, column: 9, scope: !4301)
!4426 = !DILocation(line: 649, column: 27, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !395, line: 644, column: 23)
!4428 = distinct !DILexicalBlock(scope: !4301, file: !395, line: 644, column: 9)
!4429 = !DILocation(line: 649, column: 6, scope: !4427)
!4430 = !DILocation(line: 649, column: 25, scope: !4427)
!4431 = !DILocation(line: 650, column: 27, scope: !4427)
!4432 = !DILocation(line: 650, column: 6, scope: !4427)
!4433 = !DILocation(line: 650, column: 25, scope: !4427)
!4434 = !DILocation(line: 651, column: 10, scope: !4427)
!4435 = !DILocation(line: 653, column: 26, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4437, file: !395, line: 651, column: 17)
!4437 = distinct !DILexicalBlock(scope: !4427, file: !395, line: 651, column: 10)
!4438 = !DILocation(line: 654, column: 15, scope: !4436)
!4439 = !DILocation(line: 655, column: 6, scope: !4436)
!4440 = !DILocation(line: 656, column: 15, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4437, file: !395, line: 655, column: 13)
!4442 = !DILocation(line: 658, column: 16, scope: !4428)
!4443 = !DILocation(line: 663, column: 10, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !395, line: 658, column: 23)
!4445 = distinct !DILexicalBlock(scope: !4428, file: !395, line: 658, column: 16)
!4446 = !DILocation(line: 664, column: 5, scope: !4444)
!4447 = !DILocation(line: 664, column: 16, scope: !4445)
!4448 = !DILocation(line: 669, column: 10, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !395, line: 664, column: 28)
!4450 = distinct !DILexicalBlock(scope: !4445, file: !395, line: 664, column: 16)
!4451 = !DILocation(line: 670, column: 5, scope: !4449)
!4452 = !DILocation(line: 675, column: 13, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4450, file: !395, line: 670, column: 12)
!4454 = !DILocation(line: 675, column: 27, scope: !4453)
!4455 = !DILocation(line: 675, column: 10, scope: !4453)
!4456 = !DILocation(line: 678, column: 10, scope: !4301)
!4457 = !DILocation(line: 680, column: 8, scope: !4297)
!4458 = !DILocation(line: 683, column: 14, scope: !4298)
!4459 = !DILocation(line: 684, column: 12, scope: !4304)
!4460 = !DILocation(line: 0, scope: !4304)
!4461 = !DILocation(line: 686, column: 8, scope: !4304)
!4462 = !DILocation(line: 687, column: 5, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4464, file: !395, line: 686, column: 22)
!4464 = distinct !DILexicalBlock(scope: !4304, file: !395, line: 686, column: 8)
!4465 = !DILocation(line: 687, column: 17, scope: !4463)
!4466 = !DILocation(line: 688, column: 4, scope: !4463)
!4467 = !DILocation(line: 698, column: 18, scope: !4310)
!4468 = !DILocation(line: 0, scope: !4310)
!4469 = !DILocation(line: 700, column: 8, scope: !4310)
!4470 = !DILocation(line: 704, column: 6, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !395, line: 703, column: 12)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !395, line: 701, column: 9)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !395, line: 700, column: 22)
!4474 = distinct !DILexicalBlock(scope: !4310, file: !395, line: 700, column: 8)
!4475 = !DILocation(line: 704, column: 24, scope: !4471)
!4476 = !DILocation(line: 706, column: 4, scope: !4473)
!4477 = !DILocation(line: 0, scope: !4305)
!4478 = !DILocation(line: 0, scope: !4291)
!4479 = !DILocation(line: 720, column: 6, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 720, column: 6)
!4481 = !DILocation(line: 720, column: 17, scope: !4480)
!4482 = !DILocation(line: 720, column: 31, scope: !4480)
!4483 = !DILocation(line: 720, column: 6, scope: !4242)
!4484 = !DILocation(line: 729, column: 6, scope: !4242)
!4485 = !DILocation(line: 730, column: 21, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4487, file: !395, line: 729, column: 20)
!4487 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 729, column: 6)
!4488 = !DILocation(line: 730, column: 27, scope: !4486)
!4489 = !DILocation(line: 730, column: 3, scope: !4486)
!4490 = !DILocation(line: 737, column: 22, scope: !4242)
!4491 = !DILocation(line: 737, column: 20, scope: !4242)
!4492 = !DILocation(line: 0, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 739, column: 6)
!4494 = !DILocation(line: 745, column: 17, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4493, file: !395, line: 743, column: 9)
!4496 = !DILocation(line: 745, column: 25, scope: !4495)
!4497 = !DILocation(line: 746, column: 17, scope: !4495)
!4498 = !DILocation(line: 746, column: 28, scope: !4495)
!4499 = !DILocation(line: 749, column: 29, scope: !4242)
!4500 = !DILocation(line: 749, column: 16, scope: !4242)
!4501 = !DILocation(line: 749, column: 27, scope: !4242)
!4502 = !DILocation(line: 756, column: 6, scope: !4317)
!4503 = !DILocation(line: 756, column: 6, scope: !4242)
!4504 = !DILocation(line: 757, column: 3, scope: !4315)
!4505 = !DILocation(line: 758, column: 10, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4313, file: !395, line: 758, column: 8)
!4507 = !DILocation(line: 758, column: 25, scope: !4506)
!4508 = !DILocation(line: 758, column: 8, scope: !4313)
!4509 = !DILocation(line: 0, scope: !4313)
!4510 = !DILocation(line: 765, column: 8, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4313, file: !395, line: 765, column: 8)
!4512 = !DILocation(line: 765, column: 19, scope: !4511)
!4513 = !DILocation(line: 765, column: 23, scope: !4511)
!4514 = !DILocation(line: 765, column: 8, scope: !4313)
!4515 = !DILocation(line: 762, column: 33, scope: !4313)
!4516 = !DILocation(line: 769, column: 8, scope: !4313)
!4517 = !DILocation(line: 769, column: 11, scope: !4313)
!4518 = !DILocation(line: 757, column: 27, scope: !4314)
!4519 = !DILocation(line: 757, column: 17, scope: !4314)
!4520 = distinct !{!4520, !4504, !4521}
!4521 = !DILocation(line: 770, column: 3, scope: !4315)
!4522 = !DILocation(line: 774, column: 16, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !395, line: 774, column: 2)
!4524 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 774, column: 2)
!4525 = !DILocation(line: 774, column: 2, scope: !4524)
!4526 = !DILocation(line: 776, column: 16, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !395, line: 776, column: 7)
!4528 = distinct !DILexicalBlock(scope: !4523, file: !395, line: 774, column: 30)
!4529 = !DILocation(line: 776, column: 19, scope: !4527)
!4530 = !DILocation(line: 776, column: 34, scope: !4527)
!4531 = !DILocation(line: 776, column: 7, scope: !4528)
!4532 = !DILocation(line: 780, column: 7, scope: !4528)
!4533 = !DILocation(line: 782, column: 13, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !395, line: 780, column: 19)
!4535 = distinct !DILexicalBlock(scope: !4528, file: !395, line: 780, column: 7)
!4536 = !DILocation(line: 782, column: 8, scope: !4534)
!4537 = !DILocation(line: 782, column: 11, scope: !4534)
!4538 = !DILocation(line: 783, column: 3, scope: !4534)
!4539 = !DILocation(line: 785, column: 26, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !395, line: 783, column: 10)
!4541 = !DILocation(line: 785, column: 41, scope: !4540)
!4542 = !DILocation(line: 785, column: 24, scope: !4540)
!4543 = !DILocation(line: 785, column: 8, scope: !4540)
!4544 = !DILocation(line: 787, column: 52, scope: !4540)
!4545 = !DILocation(line: 789, column: 11, scope: !4540)
!4546 = !DILocation(line: 789, column: 21, scope: !4540)
!4547 = !DILocation(line: 0, scope: !4535)
!4548 = !DILocation(line: 793, column: 7, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4528, file: !395, line: 793, column: 7)
!4550 = !DILocation(line: 793, column: 18, scope: !4549)
!4551 = !DILocation(line: 793, column: 22, scope: !4549)
!4552 = !DILocation(line: 793, column: 29, scope: !4549)
!4553 = !DILocation(line: 793, column: 7, scope: !4528)
!4554 = !DILocation(line: 797, column: 12, scope: !4528)
!4555 = !DILocation(line: 797, column: 7, scope: !4528)
!4556 = !DILocation(line: 797, column: 10, scope: !4528)
!4557 = !DILocation(line: 799, column: 3, scope: !4528)
!4558 = !DILocation(line: 800, column: 7, scope: !4528)
!4559 = !DILocation(line: 801, column: 2, scope: !4528)
!4560 = !DILocation(line: 338, column: 4, scope: !4242)
!4561 = !DILocation(line: 774, column: 26, scope: !4523)
!4562 = distinct !{!4562, !4525, !4563}
!4563 = !DILocation(line: 801, column: 2, scope: !4524)
!4564 = !DILocation(line: 808, column: 9, scope: !4242)
!4565 = !DILocation(line: 808, column: 2, scope: !4242)
!4566 = !DILocation(line: 813, column: 1, scope: !4242)
!4567 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !395, file: !395, line: 33, type: !4568, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4570)
!4568 = !DISubroutineType(types: !4569)
!4569 = !{!153, !140}
!4570 = !{!4571}
!4571 = !DILocalVariable(name: "addr", arg: 1, scope: !4567, file: !395, line: 33, type: !140)
!4572 = !DILocation(line: 0, scope: !4567)
!4573 = !DILocation(line: 41, column: 9, scope: !4567)
!4574 = !DILocation(line: 41, column: 2, scope: !4567)
!4575 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4576, file: !4576, line: 24, type: !4577, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4579)
!4576 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4577 = !DISubroutineType(types: !4578)
!4578 = !{!153, !13}
!4579 = !{!4580}
!4580 = !DILocalVariable(name: "addr", arg: 1, scope: !4575, file: !4576, line: 24, type: !13)
!4581 = !DILocation(line: 0, scope: !4575)
!4582 = !DILocation(line: 49, column: 30, scope: !4575)
!4583 = !DILocation(line: 49, column: 57, scope: !4575)
!4584 = !DILocation(line: 49, column: 2, scope: !4575)
!4585 = distinct !DISubprogram(name: "cbprintf_package", scope: !395, file: !395, line: 815, type: !4586, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4588)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{!125, !124, !272, !208, !140, null}
!4588 = !{!4589, !4590, !4591, !4592, !4593, !4594}
!4589 = !DILocalVariable(name: "packaged", arg: 1, scope: !4585, file: !395, line: 815, type: !124)
!4590 = !DILocalVariable(name: "len", arg: 2, scope: !4585, file: !395, line: 815, type: !272)
!4591 = !DILocalVariable(name: "flags", arg: 3, scope: !4585, file: !395, line: 815, type: !208)
!4592 = !DILocalVariable(name: "format", arg: 4, scope: !4585, file: !395, line: 816, type: !140)
!4593 = !DILocalVariable(name: "ap", scope: !4585, file: !395, line: 818, type: !4245)
!4594 = !DILocalVariable(name: "ret", scope: !4585, file: !395, line: 819, type: !125)
!4595 = !DILocation(line: 0, scope: !4585)
!4596 = !DILocation(line: 818, column: 2, scope: !4585)
!4597 = !DILocation(line: 818, column: 10, scope: !4585)
!4598 = !DILocation(line: 821, column: 2, scope: !4585)
!4599 = !DILocation(line: 822, column: 8, scope: !4585)
!4600 = !DILocation(line: 823, column: 2, scope: !4585)
!4601 = !DILocation(line: 825, column: 1, scope: !4585)
!4602 = !DILocation(line: 824, column: 2, scope: !4585)
!4603 = distinct !DISubprogram(name: "cbpprintf_external", scope: !395, file: !395, line: 827, type: !4604, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4614)
!4604 = !DISubroutineType(types: !4605)
!4605 = !{!125, !4606, !4610, !124, !124}
!4606 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4277, line: 297, baseType: !4607)
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 32)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{!125, null}
!4610 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4277, line: 328, baseType: !4611)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 32)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!125, !4606, !124, !140, !4245}
!4614 = !{!4615, !4616, !4617, !4618, !4619, !4620, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633}
!4615 = !DILocalVariable(name: "out", arg: 1, scope: !4603, file: !395, line: 827, type: !4606)
!4616 = !DILocalVariable(name: "formatter", arg: 2, scope: !4603, file: !395, line: 828, type: !4610)
!4617 = !DILocalVariable(name: "ctx", arg: 3, scope: !4603, file: !395, line: 829, type: !124)
!4618 = !DILocalVariable(name: "packaged", arg: 4, scope: !4603, file: !395, line: 829, type: !124)
!4619 = !DILocalVariable(name: "buf", scope: !4603, file: !395, line: 831, type: !184)
!4620 = !DILocalVariable(name: "hdr", scope: !4603, file: !395, line: 832, type: !4621)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 32)
!4622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4277, line: 96, size: 64, elements: !4623)
!4623 = !{!4624, !4625}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4622, file: !4277, line: 98, baseType: !4276, size: 32)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4622, file: !4277, line: 101, baseType: !393, size: 32, offset: 32)
!4626 = !DILocalVariable(name: "s", scope: !4603, file: !395, line: 833, type: !393)
!4627 = !DILocalVariable(name: "ps", scope: !4603, file: !395, line: 833, type: !392)
!4628 = !DILocalVariable(name: "i", scope: !4603, file: !395, line: 834, type: !32)
!4629 = !DILocalVariable(name: "args_size", scope: !4603, file: !395, line: 834, type: !32)
!4630 = !DILocalVariable(name: "s_nbr", scope: !4603, file: !395, line: 834, type: !32)
!4631 = !DILocalVariable(name: "ros_nbr", scope: !4603, file: !395, line: 834, type: !32)
!4632 = !DILocalVariable(name: "rws_nbr", scope: !4603, file: !395, line: 834, type: !32)
!4633 = !DILocalVariable(name: "s_idx", scope: !4603, file: !395, line: 834, type: !32)
!4634 = !DILocation(line: 0, scope: !4603)
!4635 = !DILocation(line: 836, column: 10, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4603, file: !395, line: 836, column: 6)
!4637 = !DILocation(line: 836, column: 6, scope: !4603)
!4638 = !DILocation(line: 842, column: 28, scope: !4603)
!4639 = !DILocation(line: 842, column: 14, scope: !4603)
!4640 = !DILocation(line: 852, column: 16, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !395, line: 852, column: 2)
!4642 = distinct !DILexicalBlock(scope: !4603, file: !395, line: 852, column: 2)
!4643 = !DILocation(line: 852, column: 2, scope: !4642)
!4644 = !DILocation(line: 841, column: 28, scope: !4603)
!4645 = !DILocation(line: 841, column: 14, scope: !4603)
!4646 = !DILocation(line: 841, column: 32, scope: !4603)
!4647 = !DILocation(line: 847, column: 19, scope: !4603)
!4648 = !DILocation(line: 843, column: 28, scope: !4603)
!4649 = !DILocation(line: 843, column: 14, scope: !4603)
!4650 = !DILocation(line: 847, column: 31, scope: !4603)
!4651 = !DILocation(line: 844, column: 28, scope: !4603)
!4652 = !DILocation(line: 844, column: 14, scope: !4603)
!4653 = !DILocation(line: 847, column: 45, scope: !4603)
!4654 = !DILocation(line: 847, column: 41, scope: !4603)
!4655 = !DILocation(line: 854, column: 24, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4641, file: !395, line: 852, column: 30)
!4657 = !DILocation(line: 854, column: 11, scope: !4656)
!4658 = !DILocation(line: 855, column: 30, scope: !4656)
!4659 = !DILocation(line: 855, column: 22, scope: !4656)
!4660 = !DILocation(line: 855, column: 8, scope: !4656)
!4661 = !DILocation(line: 857, column: 7, scope: !4656)
!4662 = !DILocation(line: 859, column: 8, scope: !4656)
!4663 = !DILocation(line: 859, column: 18, scope: !4656)
!4664 = !DILocation(line: 859, column: 5, scope: !4656)
!4665 = !DILocation(line: 852, column: 26, scope: !4641)
!4666 = distinct !{!4666, !4643, !4667}
!4667 = !DILocation(line: 860, column: 2, scope: !4642)
!4668 = !DILocation(line: 863, column: 6, scope: !4603)
!4669 = !DILocation(line: 866, column: 56, scope: !4603)
!4670 = !DILocation(line: 866, column: 9, scope: !4603)
!4671 = !DILocation(line: 866, column: 2, scope: !4603)
!4672 = !DILocation(line: 867, column: 1, scope: !4603)
!4673 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !395, file: !395, line: 179, type: !4674, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4676)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{!125, !4606, !4610, !124, !140, !124}
!4676 = !{!4677, !4678, !4679, !4680, !4681, !4682}
!4677 = !DILocalVariable(name: "out", arg: 1, scope: !4673, file: !395, line: 179, type: !4606)
!4678 = !DILocalVariable(name: "formatter", arg: 2, scope: !4673, file: !395, line: 180, type: !4610)
!4679 = !DILocalVariable(name: "ctx", arg: 3, scope: !4673, file: !395, line: 181, type: !124)
!4680 = !DILocalVariable(name: "fmt", arg: 4, scope: !4673, file: !395, line: 182, type: !140)
!4681 = !DILocalVariable(name: "buf", arg: 5, scope: !4673, file: !395, line: 182, type: !124)
!4682 = !DILocalVariable(name: "u", scope: !4673, file: !395, line: 187, type: !4683)
!4683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4673, file: !395, line: 184, size: 32, elements: !4684)
!4684 = !{!4685, !4686}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4683, file: !395, line: 185, baseType: !4245, size: 32)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4683, file: !395, line: 186, baseType: !124, size: 32)
!4687 = !DILocation(line: 0, scope: !4673)
!4688 = !DILocation(line: 191, column: 9, scope: !4673)
!4689 = !DILocation(line: 191, column: 2, scope: !4673)
!4690 = distinct !DISubprogram(name: "is_ptr", scope: !395, file: !395, line: 881, type: !4691, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4693)
!4691 = !DISubroutineType(types: !4692)
!4692 = !{!153, !140, !125}
!4693 = !{!4694, !4695, !4696, !4697, !4698}
!4694 = !DILocalVariable(name: "fmt", arg: 1, scope: !4690, file: !395, line: 881, type: !140)
!4695 = !DILocalVariable(name: "n", arg: 2, scope: !4690, file: !395, line: 881, type: !125)
!4696 = !DILocalVariable(name: "c", scope: !4690, file: !395, line: 883, type: !142)
!4697 = !DILocalVariable(name: "mod", scope: !4690, file: !395, line: 884, type: !153)
!4698 = !DILocalVariable(name: "cnt", scope: !4690, file: !395, line: 885, type: !125)
!4699 = !DILocation(line: 0, scope: !4690)
!4700 = !DILocation(line: 887, column: 14, scope: !4690)
!4701 = !DILocation(line: 887, column: 22, scope: !4690)
!4702 = !DILocation(line: 887, column: 2, scope: !4690)
!4703 = !DILocation(line: 887, column: 18, scope: !4690)
!4704 = !DILocation(line: 888, column: 7, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4690, file: !395, line: 887, column: 31)
!4706 = !DILocation(line: 889, column: 12, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !395, line: 889, column: 8)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !395, line: 888, column: 12)
!4709 = distinct !DILexicalBlock(scope: !4705, file: !395, line: 888, column: 7)
!4710 = !DILocation(line: 889, column: 8, scope: !4708)
!4711 = !DILocation(line: 890, column: 11, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !395, line: 890, column: 9)
!4713 = distinct !DILexicalBlock(scope: !4707, file: !395, line: 889, column: 18)
!4714 = !DILocation(line: 890, column: 9, scope: !4713)
!4715 = !DILocation(line: 892, column: 16, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4712, file: !395, line: 892, column: 16)
!4717 = !DILocation(line: 892, column: 16, scope: !4712)
!4718 = !DILocation(line: 895, column: 15, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4707, file: !395, line: 895, column: 15)
!4720 = !DILocation(line: 895, column: 15, scope: !4707)
!4721 = !DILocation(line: 900, column: 9, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4705, file: !395, line: 900, column: 7)
!4723 = !DILocation(line: 900, column: 7, scope: !4705)
!4724 = distinct !{!4724, !4702, !4725}
!4725 = !DILocation(line: 903, column: 2, scope: !4690)
!4726 = !DILocation(line: 906, column: 1, scope: !4690)
!4727 = distinct !DISubprogram(name: "is_fmt_spec", scope: !395, file: !395, line: 873, type: !4728, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4730)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!153, !142}
!4730 = !{!4731}
!4731 = !DILocalVariable(name: "c", arg: 1, scope: !4727, file: !395, line: 873, type: !142)
!4732 = !DILocation(line: 0, scope: !4727)
!4733 = !DILocation(line: 875, column: 19, scope: !4727)
!4734 = !DILocation(line: 875, column: 2, scope: !4727)
!4735 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !395, file: !395, line: 908, type: !4736, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4742)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!125, !124, !272, !4738, !124, !208, !3015, !272}
!4738 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4277, line: 308, baseType: !4739)
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4740, size: 32)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{!125, !13, !272, !124}
!4742 = !{!4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4760, !4761, !4762, !4763, !4764, !4770, !4773, !4774, !4775, !4777, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4793, !4796, !4797, !4798, !4799, !4800, !4801, !4803, !4806, !4807, !4808}
!4743 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4735, file: !395, line: 908, type: !124)
!4744 = !DILocalVariable(name: "in_len", arg: 2, scope: !4735, file: !395, line: 909, type: !272)
!4745 = !DILocalVariable(name: "cb", arg: 3, scope: !4735, file: !395, line: 910, type: !4738)
!4746 = !DILocalVariable(name: "ctx", arg: 4, scope: !4735, file: !395, line: 911, type: !124)
!4747 = !DILocalVariable(name: "flags", arg: 5, scope: !4735, file: !395, line: 912, type: !208)
!4748 = !DILocalVariable(name: "strl", arg: 6, scope: !4735, file: !395, line: 913, type: !3015)
!4749 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4735, file: !395, line: 914, type: !272)
!4750 = !DILocalVariable(name: "buf", scope: !4735, file: !395, line: 918, type: !184)
!4751 = !DILocalVariable(name: "buf32", scope: !4735, file: !395, line: 919, type: !1014)
!4752 = !DILocalVariable(name: "args_size", scope: !4735, file: !395, line: 920, type: !32)
!4753 = !DILocalVariable(name: "ros_nbr", scope: !4735, file: !395, line: 920, type: !32)
!4754 = !DILocalVariable(name: "rws_nbr", scope: !4735, file: !395, line: 920, type: !32)
!4755 = !DILocalVariable(name: "fmt_present", scope: !4735, file: !395, line: 921, type: !153)
!4756 = !DILocalVariable(name: "rw_cpy", scope: !4735, file: !395, line: 922, type: !153)
!4757 = !DILocalVariable(name: "ro_cpy", scope: !4735, file: !395, line: 923, type: !153)
!4758 = !DILocalVariable(name: "in_desc", scope: !4735, file: !395, line: 924, type: !4759)
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 32)
!4760 = !DILocalVariable(name: "out_len", scope: !4735, file: !395, line: 960, type: !125)
!4761 = !DILocalVariable(name: "fmt", scope: !4735, file: !395, line: 965, type: !140)
!4762 = !DILocalVariable(name: "str_pos", scope: !4735, file: !395, line: 966, type: !184)
!4763 = !DILocalVariable(name: "strl_cnt", scope: !4735, file: !395, line: 967, type: !272)
!4764 = !DILocalVariable(name: "i", scope: !4765, file: !395, line: 973, type: !125)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !395, line: 973, column: 4)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !395, line: 972, column: 15)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !395, line: 972, column: 7)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !395, line: 970, column: 18)
!4769 = distinct !DILexicalBlock(scope: !4735, file: !395, line: 970, column: 6)
!4770 = !DILocalVariable(name: "str", scope: !4771, file: !395, line: 974, type: !140)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !395, line: 973, column: 38)
!4772 = distinct !DILexicalBlock(scope: !4765, file: !395, line: 973, column: 4)
!4773 = !DILocalVariable(name: "len", scope: !4771, file: !395, line: 975, type: !125)
!4774 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4768, file: !395, line: 990, type: !153)
!4775 = !DILocalVariable(name: "i", scope: !4776, file: !395, line: 995, type: !125)
!4776 = distinct !DILexicalBlock(scope: !4768, file: !395, line: 995, column: 3)
!4777 = !DILocalVariable(name: "arg_idx", scope: !4778, file: !395, line: 996, type: !150)
!4778 = distinct !DILexicalBlock(scope: !4779, file: !395, line: 995, column: 37)
!4779 = distinct !DILexicalBlock(scope: !4776, file: !395, line: 995, column: 3)
!4780 = !DILocalVariable(name: "arg_pos", scope: !4778, file: !395, line: 997, type: !150)
!4781 = !DILocalVariable(name: "str", scope: !4778, file: !395, line: 998, type: !140)
!4782 = !DILocalVariable(name: "is_ro", scope: !4778, file: !395, line: 999, type: !153)
!4783 = !DILocalVariable(name: "len", scope: !4778, file: !395, line: 1000, type: !125)
!4784 = !DILocalVariable(name: "out_desc", scope: !4735, file: !395, line: 1038, type: !4280)
!4785 = !DILocalVariable(name: "cpy_str_pos", scope: !4735, file: !395, line: 1040, type: !311)
!4786 = !DILocalVariable(name: "keep_str_pos", scope: !4735, file: !395, line: 1042, type: !311)
!4787 = !DILocalVariable(name: "scpy_cnt", scope: !4735, file: !395, line: 1043, type: !150)
!4788 = !DILocalVariable(name: "keep_cnt", scope: !4735, file: !395, line: 1044, type: !150)
!4789 = !DILocalVariable(name: "dst", scope: !4735, file: !395, line: 1045, type: !184)
!4790 = !DILocalVariable(name: "rv", scope: !4735, file: !395, line: 1046, type: !125)
!4791 = !DILocalVariable(name: "i", scope: !4792, file: !395, line: 1074, type: !125)
!4792 = distinct !DILexicalBlock(scope: !4735, file: !395, line: 1074, column: 2)
!4793 = !DILocalVariable(name: "arg_idx", scope: !4794, file: !395, line: 1075, type: !150)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !395, line: 1074, column: 36)
!4795 = distinct !DILexicalBlock(scope: !4792, file: !395, line: 1074, column: 2)
!4796 = !DILocalVariable(name: "arg_pos", scope: !4794, file: !395, line: 1076, type: !150)
!4797 = !DILocalVariable(name: "str", scope: !4794, file: !395, line: 1077, type: !140)
!4798 = !DILocalVariable(name: "is_ro", scope: !4794, file: !395, line: 1078, type: !153)
!4799 = !DILocalVariable(name: "in_desc_backup", scope: !4735, file: !395, line: 1114, type: !4280)
!4800 = !DILocalVariable(name: "strs_len", scope: !4735, file: !395, line: 1134, type: !272)
!4801 = !DILocalVariable(name: "i", scope: !4802, file: !395, line: 1143, type: !125)
!4802 = distinct !DILexicalBlock(scope: !4735, file: !395, line: 1143, column: 2)
!4803 = !DILocalVariable(name: "loc", scope: !4804, file: !395, line: 1144, type: !150)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !395, line: 1143, column: 37)
!4805 = distinct !DILexicalBlock(scope: !4802, file: !395, line: 1143, column: 2)
!4806 = !DILocalVariable(name: "str", scope: !4804, file: !395, line: 1145, type: !140)
!4807 = !DILocalVariable(name: "str_len", scope: !4804, file: !395, line: 1146, type: !227)
!4808 = !DILabel(scope: !4809, name: "calculate_string_length", file: !395, line: 1021)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !395, line: 1020, column: 56)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !395, line: 1020, column: 15)
!4811 = distinct !DILexicalBlock(scope: !4778, file: !395, line: 1014, column: 8)
!4812 = !DILocation(line: 0, scope: !4735)
!4813 = !DILocation(line: 919, column: 20, scope: !4735)
!4814 = !DILocation(line: 921, column: 27, scope: !4735)
!4815 = !DILocation(line: 921, column: 21, scope: !4735)
!4816 = !DILocation(line: 926, column: 18, scope: !4735)
!4817 = !DILocation(line: 926, column: 11, scope: !4735)
!4818 = !DILocation(line: 926, column: 34, scope: !4735)
!4819 = !DILocation(line: 931, column: 21, scope: !4735)
!4820 = !DILocation(line: 931, column: 12, scope: !4735)
!4821 = !DILocation(line: 932, column: 11, scope: !4735)
!4822 = !DILocation(line: 932, column: 19, scope: !4735)
!4823 = !DILocation(line: 938, column: 21, scope: !4735)
!4824 = !DILocation(line: 938, column: 12, scope: !4735)
!4825 = !DILocation(line: 939, column: 19, scope: !4735)
!4826 = !DILocation(line: 939, column: 23, scope: !4735)
!4827 = !DILocation(line: 946, column: 14, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4735, file: !395, line: 946, column: 6)
!4829 = !DILocation(line: 947, column: 7, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !395, line: 947, column: 7)
!4831 = distinct !DILexicalBlock(scope: !4828, file: !395, line: 946, column: 26)
!4832 = !DILocation(line: 947, column: 7, scope: !4831)
!4833 = !DILocation(line: 948, column: 4, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4830, file: !395, line: 947, column: 11)
!4835 = !DILocation(line: 949, column: 3, scope: !4834)
!4836 = !DILocation(line: 958, column: 23, scope: !4735)
!4837 = !DILocation(line: 958, column: 14, scope: !4735)
!4838 = !DILocation(line: 958, column: 27, scope: !4735)
!4839 = !DILocation(line: 965, column: 41, scope: !4735)
!4840 = !DILocation(line: 965, column: 20, scope: !4735)
!4841 = !DILocation(line: 966, column: 22, scope: !4735)
!4842 = !DILocation(line: 970, column: 9, scope: !4769)
!4843 = !DILocation(line: 970, column: 6, scope: !4735)
!4844 = !DILocation(line: 972, column: 7, scope: !4768)
!4845 = !DILocation(line: 0, scope: !4765)
!4846 = !DILocation(line: 973, column: 4, scope: !4765)
!4847 = !DILocation(line: 974, column: 46, scope: !4771)
!4848 = !DILocation(line: 974, column: 40, scope: !4771)
!4849 = !DILocation(line: 974, column: 23, scope: !4771)
!4850 = !DILocation(line: 0, scope: !4771)
!4851 = !DILocation(line: 975, column: 15, scope: !4771)
!4852 = !DILocation(line: 978, column: 14, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4771, file: !395, line: 978, column: 9)
!4854 = !DILocation(line: 979, column: 25, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4853, file: !395, line: 978, column: 38)
!4856 = !DILocation(line: 979, column: 19, scope: !4855)
!4857 = !DILocation(line: 979, column: 6, scope: !4855)
!4858 = !DILocation(line: 979, column: 23, scope: !4855)
!4859 = !DILocation(line: 980, column: 5, scope: !4855)
!4860 = !DILocation(line: 981, column: 13, scope: !4771)
!4861 = !DILocation(line: 982, column: 12, scope: !4771)
!4862 = !DILocation(line: 973, column: 34, scope: !4772)
!4863 = !DILocation(line: 973, column: 22, scope: !4772)
!4864 = distinct !{!4864, !4846, !4865}
!4865 = !DILocation(line: 983, column: 4, scope: !4765)
!4866 = !DILocation(line: 985, column: 16, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !395, line: 985, column: 8)
!4868 = distinct !DILexicalBlock(scope: !4767, file: !395, line: 984, column: 10)
!4869 = !DILocation(line: 967, column: 9, scope: !4735)
!4870 = !DILocation(line: 971, column: 11, scope: !4768)
!4871 = !DILocation(line: 0, scope: !4768)
!4872 = !DILocation(line: 0, scope: !4776)
!4873 = !DILocation(line: 995, column: 21, scope: !4779)
!4874 = !DILocation(line: 995, column: 3, scope: !4776)
!4875 = !DILocation(line: 990, column: 34, scope: !4768)
!4876 = !DILocation(line: 990, column: 26, scope: !4768)
!4877 = !DILocation(line: 996, column: 30, scope: !4778)
!4878 = !DILocation(line: 0, scope: !4778)
!4879 = !DILocation(line: 997, column: 30, scope: !4778)
!4880 = !DILocation(line: 997, column: 22, scope: !4778)
!4881 = !DILocation(line: 998, column: 39, scope: !4778)
!4882 = !DILocation(line: 998, column: 22, scope: !4778)
!4883 = !DILocation(line: 999, column: 17, scope: !4778)
!4884 = !DILocation(line: 1002, column: 20, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4778, file: !395, line: 1002, column: 8)
!4886 = !DILocation(line: 996, column: 22, scope: !4778)
!4887 = !DILocation(line: 1002, column: 35, scope: !4885)
!4888 = !DILocation(line: 1002, column: 23, scope: !4885)
!4889 = !DILocation(line: 1002, column: 8, scope: !4778)
!4890 = !DILocation(line: 1003, column: 5, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4892, file: !395, line: 1003, column: 5)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !395, line: 1003, column: 5)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !395, line: 1003, column: 5)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !395, line: 1003, column: 5)
!4895 = distinct !DILexicalBlock(scope: !4885, file: !395, line: 1002, column: 45)
!4896 = !DILocation(line: 1010, column: 13, scope: !4895)
!4897 = !DILocation(line: 1011, column: 5, scope: !4895)
!4898 = !DILocation(line: 1014, column: 8, scope: !4778)
!4899 = !DILocation(line: 1015, column: 9, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4811, file: !395, line: 1014, column: 15)
!4901 = !DILocation(line: 1018, column: 14, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !395, line: 1017, column: 12)
!4903 = distinct !DILexicalBlock(scope: !4900, file: !395, line: 1015, column: 9)
!4904 = !DILocation(line: 1020, column: 4, scope: !4900)
!4905 = !DILocation(line: 1020, column: 15, scope: !4811)
!4906 = !DILocation(line: 1021, column: 1, scope: !4809)
!4907 = !DILocation(line: 1022, column: 11, scope: !4809)
!4908 = !DILocation(line: 1025, column: 14, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4809, file: !395, line: 1025, column: 9)
!4910 = !DILocation(line: 1026, column: 25, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4909, file: !395, line: 1025, column: 38)
!4912 = !DILocation(line: 1026, column: 19, scope: !4911)
!4913 = !DILocation(line: 1026, column: 6, scope: !4911)
!4914 = !DILocation(line: 1026, column: 23, scope: !4911)
!4915 = !DILocation(line: 1027, column: 5, scope: !4911)
!4916 = !DILocation(line: 1031, column: 21, scope: !4809)
!4917 = !DILocation(line: 1031, column: 13, scope: !4809)
!4918 = !DILocation(line: 1032, column: 4, scope: !4809)
!4919 = !DILocation(line: 995, column: 33, scope: !4779)
!4920 = distinct !{!4920, !4874, !4921}
!4921 = !DILocation(line: 1033, column: 3, scope: !4776)
!4922 = !DILocation(line: 1040, column: 10, scope: !4735)
!4923 = !DILocation(line: 1042, column: 10, scope: !4735)
!4924 = !DILocation(line: 1052, column: 6, scope: !4735)
!4925 = !DILocation(line: 1055, column: 9, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !395, line: 1052, column: 14)
!4927 = distinct !DILexicalBlock(scope: !4735, file: !395, line: 1052, column: 6)
!4928 = !DILocation(line: 1056, column: 2, scope: !4926)
!4929 = !DILocation(line: 1056, column: 21, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4927, file: !395, line: 1056, column: 13)
!4931 = !DILocation(line: 1066, column: 3, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !395, line: 1065, column: 11)
!4933 = distinct !DILexicalBlock(scope: !4735, file: !395, line: 1065, column: 6)
!4934 = !DILocation(line: 1067, column: 2, scope: !4932)
!4935 = !DILocation(line: 1068, column: 10, scope: !4735)
!4936 = !DILocation(line: 0, scope: !4792)
!4937 = !DILocation(line: 1074, column: 20, scope: !4795)
!4938 = !DILocation(line: 1074, column: 2, scope: !4792)
!4939 = !DILocation(line: 1110, column: 24, scope: !4735)
!4940 = !DILocation(line: 1053, column: 12, scope: !4926)
!4941 = !DILocation(line: 1054, column: 12, scope: !4926)
!4942 = !DILocation(line: 1108, column: 30, scope: !4735)
!4943 = !DILocation(line: 1108, column: 40, scope: !4735)
!4944 = !DILocation(line: 1108, column: 38, scope: !4735)
!4945 = !DILocation(line: 1109, column: 31, scope: !4735)
!4946 = !DILocation(line: 1109, column: 24, scope: !4735)
!4947 = !DILocation(line: 1110, column: 31, scope: !4735)
!4948 = !DILocation(line: 1114, column: 31, scope: !4735)
!4949 = !DILocation(line: 1114, column: 48, scope: !4735)
!4950 = !DILocation(line: 1115, column: 13, scope: !4735)
!4951 = !DILocation(line: 1118, column: 7, scope: !4735)
!4952 = !DILocation(line: 1119, column: 9, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4735, file: !395, line: 1119, column: 6)
!4954 = !DILocation(line: 1119, column: 6, scope: !4735)
!4955 = !DILocation(line: 1075, column: 29, scope: !4794)
!4956 = !DILocation(line: 1075, column: 21, scope: !4794)
!4957 = !DILocation(line: 0, scope: !4794)
!4958 = !DILocation(line: 1076, column: 29, scope: !4794)
!4959 = !DILocation(line: 1076, column: 21, scope: !4794)
!4960 = !DILocation(line: 1077, column: 38, scope: !4794)
!4961 = !DILocation(line: 1077, column: 21, scope: !4794)
!4962 = !DILocation(line: 1078, column: 16, scope: !4794)
!4963 = !DILocation(line: 1080, column: 19, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4794, file: !395, line: 1080, column: 7)
!4965 = !DILocation(line: 1080, column: 34, scope: !4964)
!4966 = !DILocation(line: 1080, column: 22, scope: !4964)
!4967 = !DILocation(line: 1080, column: 7, scope: !4794)
!4968 = !DILocation(line: 1084, column: 7, scope: !4794)
!4969 = !DILocation(line: 1085, column: 8, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !395, line: 1084, column: 14)
!4971 = distinct !DILexicalBlock(scope: !4794, file: !395, line: 1084, column: 7)
!4972 = !DILocation(line: 1087, column: 25, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !395, line: 1085, column: 49)
!4974 = distinct !DILexicalBlock(scope: !4970, file: !395, line: 1085, column: 8)
!4975 = !DILocation(line: 1088, column: 4, scope: !4973)
!4976 = !DILocation(line: 1088, column: 15, scope: !4974)
!4977 = !DILocation(line: 1090, column: 26, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4979, file: !395, line: 1088, column: 61)
!4979 = distinct !DILexicalBlock(scope: !4974, file: !395, line: 1088, column: 15)
!4980 = !DILocation(line: 1091, column: 4, scope: !4978)
!4981 = !DILocation(line: 1095, column: 8, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4971, file: !395, line: 1094, column: 10)
!4983 = !DILocation(line: 1097, column: 25, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4985, file: !395, line: 1095, column: 49)
!4985 = distinct !DILexicalBlock(scope: !4982, file: !395, line: 1095, column: 8)
!4986 = !DILocation(line: 1098, column: 4, scope: !4984)
!4987 = !DILocation(line: 1100, column: 26, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4985, file: !395, line: 1098, column: 11)
!4989 = !DILocation(line: 1100, column: 5, scope: !4988)
!4990 = !DILocation(line: 1100, column: 30, scope: !4988)
!4991 = !DILocation(line: 1101, column: 26, scope: !4988)
!4992 = !DILocation(line: 0, scope: !4971)
!4993 = !DILocation(line: 1074, column: 32, scope: !4795)
!4994 = distinct !{!4994, !4938, !4995}
!4995 = !DILocation(line: 1104, column: 2, scope: !4792)
!4996 = !DILocation(line: 1124, column: 13, scope: !4735)
!4997 = !DILocation(line: 1127, column: 10, scope: !4735)
!4998 = !DILocation(line: 1127, column: 7, scope: !4735)
!4999 = !DILocation(line: 1128, column: 9, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4735, file: !395, line: 1128, column: 6)
!5001 = !DILocation(line: 1128, column: 6, scope: !4735)
!5002 = !DILocation(line: 1134, column: 27, scope: !4735)
!5003 = !DILocation(line: 1136, column: 7, scope: !4735)
!5004 = !DILocation(line: 1137, column: 9, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4735, file: !395, line: 1137, column: 6)
!5006 = !DILocation(line: 1137, column: 6, scope: !4735)
!5007 = !DILocation(line: 1131, column: 10, scope: !4735)
!5008 = !DILocation(line: 1140, column: 10, scope: !4735)
!5009 = !DILocation(line: 0, scope: !4802)
!5010 = !DILocation(line: 1143, column: 20, scope: !4805)
!5011 = !DILocation(line: 1143, column: 2, scope: !4802)
!5012 = !DILocation(line: 1144, column: 3, scope: !4804)
!5013 = !DILocation(line: 1144, column: 17, scope: !4804)
!5014 = !DILocation(line: 0, scope: !4804)
!5015 = !DILocation(line: 1144, column: 11, scope: !4804)
!5016 = !DILocation(line: 1145, column: 38, scope: !4804)
!5017 = !DILocation(line: 1145, column: 21, scope: !4804)
!5018 = !DILocation(line: 1146, column: 22, scope: !4804)
!5019 = !DILocation(line: 1146, column: 29, scope: !4804)
!5020 = !DILocation(line: 1148, column: 8, scope: !4804)
!5021 = !DILocation(line: 1149, column: 10, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4804, file: !395, line: 1149, column: 7)
!5023 = !DILocation(line: 1149, column: 7, scope: !4804)
!5024 = !DILocation(line: 1154, column: 8, scope: !4804)
!5025 = !DILocation(line: 1155, column: 10, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4804, file: !395, line: 1155, column: 7)
!5027 = !DILocation(line: 1155, column: 7, scope: !4804)
!5028 = !DILocation(line: 1159, column: 2, scope: !4805)
!5029 = !DILocation(line: 1152, column: 11, scope: !4804)
!5030 = !DILocation(line: 1158, column: 11, scope: !4804)
!5031 = !DILocation(line: 1143, column: 33, scope: !4805)
!5032 = distinct !{!5032, !5011, !5033}
!5033 = !DILocation(line: 1159, column: 2, scope: !4802)
!5034 = !DILocation(line: 1162, column: 8, scope: !4735)
!5035 = !DILocation(line: 1164, column: 2, scope: !4735)
!5036 = !DILocation(line: 1165, column: 1, scope: !4735)
!5037 = distinct !DISubprogram(name: "get_package_len", scope: !395, file: !395, line: 196, type: !5038, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5040)
!5038 = !DISubroutineType(types: !5039)
!5039 = !{!272, !124}
!5040 = !{!5041, !5042, !5043, !5044, !5045, !5046, !5047}
!5041 = !DILocalVariable(name: "packaged", arg: 1, scope: !5037, file: !395, line: 196, type: !124)
!5042 = !DILocalVariable(name: "buf", scope: !5037, file: !395, line: 200, type: !184)
!5043 = !DILocalVariable(name: "start", scope: !5037, file: !395, line: 201, type: !184)
!5044 = !DILocalVariable(name: "args_size", scope: !5037, file: !395, line: 202, type: !32)
!5045 = !DILocalVariable(name: "s_nbr", scope: !5037, file: !395, line: 202, type: !32)
!5046 = !DILocalVariable(name: "ros_nbr", scope: !5037, file: !395, line: 202, type: !32)
!5047 = !DILocalVariable(name: "i", scope: !5048, file: !395, line: 215, type: !125)
!5048 = distinct !DILexicalBlock(scope: !5037, file: !395, line: 215, column: 2)
!5049 = !DILocation(line: 0, scope: !5037)
!5050 = !DILocation(line: 204, column: 14, scope: !5037)
!5051 = !DILocation(line: 204, column: 21, scope: !5037)
!5052 = !DILocation(line: 205, column: 14, scope: !5037)
!5053 = !DILocation(line: 206, column: 14, scope: !5037)
!5054 = !DILocation(line: 209, column: 6, scope: !5037)
!5055 = !DILocation(line: 212, column: 6, scope: !5037)
!5056 = !DILocation(line: 0, scope: !5048)
!5057 = !DILocation(line: 215, column: 20, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5048, file: !395, line: 215, column: 2)
!5059 = !DILocation(line: 215, column: 2, scope: !5048)
!5060 = !DILocation(line: 220, column: 33, scope: !5037)
!5061 = !DILocation(line: 220, column: 2, scope: !5037)
!5062 = !DILocation(line: 216, column: 6, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5058, file: !395, line: 215, column: 34)
!5064 = !DILocation(line: 217, column: 10, scope: !5063)
!5065 = !DILocation(line: 217, column: 36, scope: !5063)
!5066 = !DILocation(line: 217, column: 7, scope: !5063)
!5067 = !DILocation(line: 215, column: 30, scope: !5058)
!5068 = distinct !{!5068, !5059, !5069}
!5069 = !DILocation(line: 218, column: 2, scope: !5048)
!5070 = distinct !DISubprogram(name: "append_string", scope: !395, file: !395, line: 223, type: !5071, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!125, !4738, !124, !140, !227}
!5073 = !{!5074, !5075, !5076, !5077}
!5074 = !DILocalVariable(name: "cb", arg: 1, scope: !5070, file: !395, line: 223, type: !4738)
!5075 = !DILocalVariable(name: "ctx", arg: 2, scope: !5070, file: !395, line: 223, type: !124)
!5076 = !DILocalVariable(name: "str", arg: 3, scope: !5070, file: !395, line: 223, type: !140)
!5077 = !DILocalVariable(name: "strl", arg: 4, scope: !5070, file: !395, line: 223, type: !227)
!5078 = !DILocation(line: 0, scope: !5070)
!5079 = !DILocation(line: 225, column: 9, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5070, file: !395, line: 225, column: 6)
!5081 = !DILocation(line: 225, column: 6, scope: !5070)
!5082 = !DILocation(line: 226, column: 14, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5080, file: !395, line: 225, column: 18)
!5084 = !DILocation(line: 226, column: 12, scope: !5083)
!5085 = !DILocation(line: 226, column: 3, scope: !5083)
!5086 = !DILocation(line: 229, column: 14, scope: !5070)
!5087 = !DILocation(line: 229, column: 9, scope: !5070)
!5088 = !DILocation(line: 229, column: 27, scope: !5070)
!5089 = !DILocation(line: 229, column: 39, scope: !5070)
!5090 = !DILocation(line: 230, column: 17, scope: !5070)
!5091 = !DILocation(line: 230, column: 9, scope: !5070)
!5092 = !DILocation(line: 230, column: 2, scope: !5070)
!5093 = !DILocation(line: 231, column: 1, scope: !5070)
!5094 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !408, file: !408, line: 45, type: !410, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5095)
!5095 = !{!5096}
!5096 = !DILocalVariable(name: "c", arg: 1, scope: !5094, file: !408, line: 45, type: !125)
!5097 = !DILocation(line: 0, scope: !5094)
!5098 = !DILocation(line: 50, column: 2, scope: !5094)
!5099 = distinct !DISubprogram(name: "__printk_hook_install", scope: !408, file: !408, line: 63, type: !5100, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5102)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{null, !409}
!5102 = !{!5103}
!5103 = !DILocalVariable(name: "fn", arg: 1, scope: !5099, file: !408, line: 63, type: !409)
!5104 = !DILocation(line: 0, scope: !5099)
!5105 = !DILocation(line: 65, column: 12, scope: !5099)
!5106 = !DILocation(line: 66, column: 1, scope: !5099)
!5107 = distinct !DISubprogram(name: "__printk_get_hook", scope: !408, file: !408, line: 76, type: !5108, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !639)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!124}
!5110 = !DILocation(line: 78, column: 9, scope: !5107)
!5111 = !DILocation(line: 78, column: 2, scope: !5107)
!5112 = distinct !DISubprogram(name: "vprintk", scope: !408, file: !408, line: 113, type: !5113, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5121)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{null, !140, !5115}
!5115 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4246, line: 99, baseType: !5116)
!5116 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4246, line: 40, baseType: !5117)
!5117 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !408, baseType: !5118)
!5118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5119)
!5119 = !{!5120}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5118, file: !408, line: 79, baseType: !124, size: 32)
!5121 = !{!5122, !5123, !5124}
!5122 = !DILocalVariable(name: "fmt", arg: 1, scope: !5112, file: !408, line: 113, type: !140)
!5123 = !DILocalVariable(name: "ap", arg: 2, scope: !5112, file: !408, line: 113, type: !5115)
!5124 = !DILocalVariable(name: "ctx", scope: !5125, file: !408, line: 121, type: !5127)
!5125 = distinct !DILexicalBlock(scope: !5126, file: !408, line: 120, column: 27)
!5126 = distinct !DILexicalBlock(scope: !5112, file: !408, line: 120, column: 6)
!5127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !408, line: 81, size: 32, elements: !5128)
!5128 = !{!5129, !5130}
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5127, file: !408, line: 85, baseType: !32, size: 32)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5127, file: !408, line: 86, baseType: !5131, offset: 32)
!5131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, elements: !5132)
!5132 = !{!5133}
!5133 = !DISubrange(count: 0)
!5134 = !DILocation(line: 0, scope: !5112)
!5135 = !DILocation(line: 148, column: 3, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5126, file: !408, line: 138, column: 9)
!5137 = !DILocation(line: 155, column: 1, scope: !5112)
!5138 = distinct !DISubprogram(name: "char_out", scope: !408, file: !408, line: 107, type: !5139, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5141)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!125, !125, !124}
!5141 = !{!5142, !5143}
!5142 = !DILocalVariable(name: "c", arg: 1, scope: !5138, file: !408, line: 107, type: !125)
!5143 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5138, file: !408, line: 107, type: !124)
!5144 = !DILocation(line: 0, scope: !5138)
!5145 = !DILocation(line: 110, column: 9, scope: !5138)
!5146 = !DILocation(line: 110, column: 2, scope: !5138)
!5147 = distinct !DISubprogram(name: "cbvprintf", scope: !4277, file: !4277, line: 739, type: !5148, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5150)
!5148 = !DISubroutineType(types: !5149)
!5149 = !{!125, !4606, !124, !140, !5115}
!5150 = !{!5151, !5152, !5153, !5154}
!5151 = !DILocalVariable(name: "out", arg: 1, scope: !5147, file: !4277, line: 739, type: !4606)
!5152 = !DILocalVariable(name: "ctx", arg: 2, scope: !5147, file: !4277, line: 739, type: !124)
!5153 = !DILocalVariable(name: "format", arg: 3, scope: !5147, file: !4277, line: 739, type: !140)
!5154 = !DILocalVariable(name: "ap", arg: 4, scope: !5147, file: !4277, line: 739, type: !5115)
!5155 = !DILocation(line: 0, scope: !5147)
!5156 = !DILocation(line: 741, column: 9, scope: !5147)
!5157 = !DILocation(line: 741, column: 2, scope: !5147)
!5158 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !408, file: !408, line: 157, type: !5159, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5161)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{null, !393, !272}
!5161 = !{!5162, !5163, !5164}
!5162 = !DILocalVariable(name: "c", arg: 1, scope: !5158, file: !408, line: 157, type: !393)
!5163 = !DILocalVariable(name: "n", arg: 2, scope: !5158, file: !408, line: 157, type: !272)
!5164 = !DILocalVariable(name: "i", scope: !5158, file: !408, line: 159, type: !272)
!5165 = !DILocation(line: 0, scope: !5158)
!5166 = !DILocation(line: 164, column: 16, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5168, file: !408, line: 164, column: 2)
!5168 = distinct !DILexicalBlock(scope: !5158, file: !408, line: 164, column: 2)
!5169 = !DILocation(line: 164, column: 2, scope: !5168)
!5170 = !DILocation(line: 165, column: 3, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5167, file: !408, line: 164, column: 26)
!5172 = !DILocation(line: 165, column: 13, scope: !5171)
!5173 = !DILocation(line: 164, column: 22, scope: !5167)
!5174 = distinct !{!5174, !5169, !5175}
!5175 = !DILocation(line: 166, column: 2, scope: !5168)
!5176 = !DILocation(line: 171, column: 1, scope: !5158)
!5177 = distinct !DISubprogram(name: "printk", scope: !408, file: !408, line: 203, type: !5178, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5180)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{null, !140, null}
!5180 = !{!5181, !5182}
!5181 = !DILocalVariable(name: "fmt", arg: 1, scope: !5177, file: !408, line: 203, type: !140)
!5182 = !DILocalVariable(name: "ap", scope: !5177, file: !408, line: 205, type: !5115)
!5183 = !DILocation(line: 0, scope: !5177)
!5184 = !DILocation(line: 205, column: 2, scope: !5177)
!5185 = !DILocation(line: 205, column: 10, scope: !5177)
!5186 = !DILocation(line: 207, column: 2, scope: !5177)
!5187 = !DILocation(line: 209, column: 2, scope: !5177)
!5188 = !DILocation(line: 211, column: 2, scope: !5177)
!5189 = !DILocation(line: 212, column: 1, scope: !5177)
!5190 = distinct !DISubprogram(name: "snprintk", scope: !408, file: !408, line: 239, type: !5191, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!125, !393, !272, !140, null}
!5193 = !{!5194, !5195, !5196, !5197, !5198}
!5194 = !DILocalVariable(name: "str", arg: 1, scope: !5190, file: !408, line: 239, type: !393)
!5195 = !DILocalVariable(name: "size", arg: 2, scope: !5190, file: !408, line: 239, type: !272)
!5196 = !DILocalVariable(name: "fmt", arg: 3, scope: !5190, file: !408, line: 239, type: !140)
!5197 = !DILocalVariable(name: "ap", scope: !5190, file: !408, line: 241, type: !5115)
!5198 = !DILocalVariable(name: "ret", scope: !5190, file: !408, line: 242, type: !125)
!5199 = !DILocation(line: 0, scope: !5190)
!5200 = !DILocation(line: 241, column: 2, scope: !5190)
!5201 = !DILocation(line: 241, column: 10, scope: !5190)
!5202 = !DILocation(line: 244, column: 2, scope: !5190)
!5203 = !DILocation(line: 245, column: 8, scope: !5190)
!5204 = !DILocation(line: 246, column: 2, scope: !5190)
!5205 = !DILocation(line: 249, column: 1, scope: !5190)
!5206 = !DILocation(line: 248, column: 2, scope: !5190)
!5207 = distinct !DISubprogram(name: "vsnprintk", scope: !408, file: !408, line: 251, type: !5208, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5210)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{!125, !393, !272, !140, !5115}
!5210 = !{!5211, !5212, !5213, !5214, !5215}
!5211 = !DILocalVariable(name: "str", arg: 1, scope: !5207, file: !408, line: 251, type: !393)
!5212 = !DILocalVariable(name: "size", arg: 2, scope: !5207, file: !408, line: 251, type: !272)
!5213 = !DILocalVariable(name: "fmt", arg: 3, scope: !5207, file: !408, line: 251, type: !140)
!5214 = !DILocalVariable(name: "ap", arg: 4, scope: !5207, file: !408, line: 251, type: !5115)
!5215 = !DILocalVariable(name: "ctx", scope: !5207, file: !408, line: 253, type: !5216)
!5216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !408, line: 217, size: 96, elements: !5217)
!5217 = !{!5218, !5219, !5220}
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5216, file: !408, line: 218, baseType: !393, size: 32)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5216, file: !408, line: 219, baseType: !125, size: 32, offset: 32)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5216, file: !408, line: 220, baseType: !125, size: 32, offset: 64)
!5221 = !DILocation(line: 0, scope: !5207)
!5222 = !DILocation(line: 253, column: 2, scope: !5207)
!5223 = !DILocation(line: 253, column: 21, scope: !5207)
!5224 = !DILocation(line: 253, column: 27, scope: !5207)
!5225 = !DILocation(line: 255, column: 2, scope: !5207)
!5226 = !DILocation(line: 257, column: 10, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5207, file: !408, line: 257, column: 6)
!5228 = !DILocation(line: 257, column: 22, scope: !5227)
!5229 = !DILocation(line: 257, column: 16, scope: !5227)
!5230 = !DILocation(line: 257, column: 6, scope: !5207)
!5231 = !DILocation(line: 258, column: 3, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5227, file: !408, line: 257, column: 27)
!5233 = !DILocation(line: 258, column: 18, scope: !5232)
!5234 = !DILocation(line: 259, column: 2, scope: !5232)
!5235 = !DILocation(line: 262, column: 1, scope: !5207)
!5236 = !DILocation(line: 261, column: 2, scope: !5207)
!5237 = distinct !DISubprogram(name: "str_out", scope: !408, file: !408, line: 223, type: !5238, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5241)
!5238 = !DISubroutineType(types: !5239)
!5239 = !{!125, !125, !5240}
!5240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5216, size: 32)
!5241 = !{!5242, !5243}
!5242 = !DILocalVariable(name: "c", arg: 1, scope: !5237, file: !408, line: 223, type: !125)
!5243 = !DILocalVariable(name: "ctx", arg: 2, scope: !5237, file: !408, line: 223, type: !5240)
!5244 = !DILocation(line: 0, scope: !5237)
!5245 = !DILocation(line: 225, column: 11, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5237, file: !408, line: 225, column: 6)
!5247 = !DILocation(line: 225, column: 15, scope: !5246)
!5248 = !DILocation(line: 0, scope: !5246)
!5249 = !DILocation(line: 225, column: 23, scope: !5246)
!5250 = !DILocation(line: 225, column: 45, scope: !5246)
!5251 = !DILocation(line: 225, column: 37, scope: !5246)
!5252 = !DILocation(line: 225, column: 6, scope: !5237)
!5253 = !DILocation(line: 226, column: 8, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5246, file: !408, line: 225, column: 50)
!5255 = !DILocation(line: 226, column: 13, scope: !5254)
!5256 = !DILocation(line: 227, column: 3, scope: !5254)
!5257 = !DILocation(line: 230, column: 29, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5237, file: !408, line: 230, column: 6)
!5259 = !DILocation(line: 230, column: 17, scope: !5258)
!5260 = !DILocation(line: 230, column: 6, scope: !5237)
!5261 = !DILocation(line: 231, column: 22, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !408, line: 230, column: 34)
!5263 = !DILocation(line: 231, column: 3, scope: !5262)
!5264 = !DILocation(line: 231, column: 26, scope: !5262)
!5265 = !DILocation(line: 232, column: 2, scope: !5262)
!5266 = !DILocation(line: 233, column: 28, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5258, file: !408, line: 232, column: 9)
!5268 = !DILocation(line: 233, column: 22, scope: !5267)
!5269 = !DILocation(line: 233, column: 3, scope: !5267)
!5270 = !DILocation(line: 233, column: 26, scope: !5267)
!5271 = !DILocation(line: 237, column: 1, scope: !5237)
!5272 = distinct !DISubprogram(name: "z_thread_entry", scope: !5273, file: !5273, line: 30, type: !5274, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !5281)
!5273 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5274 = !DISubroutineType(types: !5275)
!5275 = !{null, !5276, !124, !124, !124}
!5276 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5277, line: 46, baseType: !5278)
!5277 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5279, size: 32)
!5279 = !DISubroutineType(types: !5280)
!5280 = !{null, !124, !124, !124}
!5281 = !{!5282, !5283, !5284, !5285}
!5282 = !DILocalVariable(name: "entry", arg: 1, scope: !5272, file: !5273, line: 30, type: !5276)
!5283 = !DILocalVariable(name: "p1", arg: 2, scope: !5272, file: !5273, line: 31, type: !124)
!5284 = !DILocalVariable(name: "p2", arg: 3, scope: !5272, file: !5273, line: 31, type: !124)
!5285 = !DILocalVariable(name: "p3", arg: 4, scope: !5272, file: !5273, line: 31, type: !124)
!5286 = !DILocation(line: 0, scope: !5272)
!5287 = !DILocation(line: 36, column: 2, scope: !5272)
!5288 = !DILocation(line: 38, column: 17, scope: !5272)
!5289 = !DILocation(line: 38, column: 2, scope: !5272)
!5290 = !DILocation(line: 45, column: 2, scope: !5272)
!5291 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !5292, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !639)
!5292 = !DISubroutineType(types: !5293)
!5293 = !{!5294}
!5294 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !5295)
!5295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5296, size: 32)
!5296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !5297)
!5297 = !{!5298, !5356, !5368, !5369, !5370, !5371, !5377, !5390}
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5296, file: !531, line: 247, baseType: !5299, size: 384)
!5299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !5300)
!5300 = !{!5301, !5325, !5332, !5333, !5334, !5343, !5344, !5345}
!5301 = !DIDerivedType(tag: DW_TAG_member, scope: !5299, file: !531, line: 60, baseType: !5302, size: 64)
!5302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5299, file: !531, line: 60, size: 64, elements: !5303)
!5303 = !{!5304, !5319}
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5302, file: !531, line: 61, baseType: !5305, size: 64)
!5305 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !5306)
!5306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !5307)
!5307 = !{!5308, !5314}
!5308 = !DIDerivedType(tag: DW_TAG_member, scope: !5306, file: !541, line: 38, baseType: !5309, size: 32)
!5309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5306, file: !541, line: 38, size: 32, elements: !5310)
!5310 = !{!5311, !5313}
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5309, file: !541, line: 39, baseType: !5312, size: 32)
!5312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 32)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5309, file: !541, line: 40, baseType: !5312, size: 32)
!5314 = !DIDerivedType(tag: DW_TAG_member, scope: !5306, file: !541, line: 42, baseType: !5315, size: 32, offset: 32)
!5315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5306, file: !541, line: 42, size: 32, elements: !5316)
!5316 = !{!5317, !5318}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5315, file: !541, line: 43, baseType: !5312, size: 32)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5315, file: !541, line: 44, baseType: !5312, size: 32)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5302, file: !531, line: 62, baseType: !5320, size: 64)
!5320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !5321)
!5321 = !{!5322}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5320, file: !557, line: 50, baseType: !5323, size: 64)
!5323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5324, size: 64, elements: !562)
!5324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 32)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5299, file: !531, line: 68, baseType: !5326, size: 32, offset: 64)
!5326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5327, size: 32)
!5327 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !5328)
!5328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !5329)
!5329 = !{!5330}
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5328, file: !567, line: 232, baseType: !5331, size: 64)
!5331 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !5306)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5299, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5299, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!5334 = !DIDerivedType(tag: DW_TAG_member, scope: !5299, file: !531, line: 90, baseType: !5335, size: 16, offset: 112)
!5335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5299, file: !531, line: 90, size: 16, elements: !5336)
!5336 = !{!5337, !5342}
!5337 = !DIDerivedType(tag: DW_TAG_member, scope: !5335, file: !531, line: 91, baseType: !5338, size: 16)
!5338 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5335, file: !531, line: 91, size: 16, elements: !5339)
!5339 = !{!5340, !5341}
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5338, file: !531, line: 96, baseType: !581, size: 8)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5338, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5335, file: !531, line: 100, baseType: !227, size: 16)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5299, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5299, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5299, file: !531, line: 131, baseType: !5346, size: 192, offset: 192)
!5346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !5347)
!5347 = !{!5348, !5349, !5355}
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5346, file: !567, line: 245, baseType: !5305, size: 64)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5346, file: !567, line: 246, baseType: !5350, size: 32, offset: 64)
!5350 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !5351)
!5351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5352, size: 32)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{null, !5354}
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5346, size: 32)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5346, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5296, file: !531, line: 250, baseType: !5357, size: 288, offset: 384)
!5357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !5358)
!5358 = !{!5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367}
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5357, file: !601, line: 26, baseType: !208, size: 32)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5357, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5357, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5357, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5357, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5357, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5357, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5357, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5357, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5296, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5296, file: !531, line: 256, baseType: !5327, size: 64, offset: 704)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5296, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5296, file: !531, line: 300, baseType: !5372, size: 96, offset: 800)
!5372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !5373)
!5373 = !{!5374, !5375, !5376}
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5372, file: !531, line: 153, baseType: !22, size: 32)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5372, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5372, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5296, file: !531, line: 325, baseType: !5378, size: 32, offset: 896)
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 32)
!5379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !5380)
!5380 = !{!5381, !5387, !5388}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5379, file: !624, line: 5074, baseType: !5382, size: 96)
!5382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !5383)
!5383 = !{!5384, !5385, !5386}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5382, file: !628, line: 57, baseType: !631, size: 32)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5382, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5382, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5379, file: !624, line: 5075, baseType: !5327, size: 64, offset: 96)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5379, file: !624, line: 5076, baseType: !5389, offset: 160)
!5389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5296, file: !531, line: 343, baseType: !5391, size: 64, offset: 928)
!5391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !5392)
!5392 = !{!5393, !5394}
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5391, file: !601, line: 63, baseType: !208, size: 32)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5391, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!5395 = !DILocation(line: 535, column: 9, scope: !5291)
!5396 = !DILocation(line: 535, column: 2, scope: !5291)
!5397 = distinct !DISubprogram(name: "k_thread_abort", scope: !5398, file: !5398, line: 188, type: !5399, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !5401)
!5398 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!5399 = !DISubroutineType(types: !5400)
!5400 = !{null, !5294}
!5401 = !{!5402}
!5402 = !DILocalVariable(name: "thread", arg: 1, scope: !5397, file: !5398, line: 188, type: !5294)
!5403 = !DILocation(line: 0, scope: !5397)
!5404 = !DILocation(line: 197, column: 2, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5397, file: !5398, line: 197, column: 2)
!5406 = !{i64 2154148486}
!5407 = !DILocation(line: 198, column: 2, scope: !5397)
!5408 = !DILocation(line: 199, column: 1, scope: !5397)
!5409 = distinct !DISubprogram(name: "z_current_get", scope: !5398, file: !5398, line: 173, type: !5292, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !639)
!5410 = !DILocation(line: 180, column: 2, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5409, file: !5398, line: 180, column: 2)
!5412 = !{i64 2154148418}
!5413 = !DILocation(line: 181, column: 9, scope: !5409)
!5414 = !DILocation(line: 181, column: 2, scope: !5409)
!5415 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2717, file: !2717, line: 1338, type: !5416, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !5424)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{!125, !4606, !124, !140, !5418, !208}
!5418 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4246, line: 99, baseType: !5419)
!5419 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4246, line: 40, baseType: !5420)
!5420 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2717, baseType: !5421)
!5421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5422)
!5422 = !{!5423}
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5421, file: !2717, baseType: !124, size: 32)
!5424 = !{!5425, !5426, !5427, !5428, !5429, !5430, !5434, !5435, !5436, !5438, !5443, !5486, !5489, !5492, !5493, !5494, !5495, !5496, !5497, !5498, !5501, !5502, !5503, !5507, !5510, !5512, !5515, !5516, !5517, !5522, !5528, !5531, !5535, !5541, !5545, !5548, !5550, !5553}
!5425 = !DILocalVariable(name: "out", arg: 1, scope: !5415, file: !2717, line: 1338, type: !4606)
!5426 = !DILocalVariable(name: "ctx", arg: 2, scope: !5415, file: !2717, line: 1338, type: !124)
!5427 = !DILocalVariable(name: "fp", arg: 3, scope: !5415, file: !2717, line: 1338, type: !140)
!5428 = !DILocalVariable(name: "ap", arg: 4, scope: !5415, file: !2717, line: 1339, type: !5418)
!5429 = !DILocalVariable(name: "flags", arg: 5, scope: !5415, file: !2717, line: 1339, type: !208)
!5430 = !DILocalVariable(name: "buf", scope: !5415, file: !2717, line: 1341, type: !5431)
!5431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 176, elements: !5432)
!5432 = !{!5433}
!5433 = !DISubrange(count: 22)
!5434 = !DILocalVariable(name: "count", scope: !5415, file: !2717, line: 1342, type: !272)
!5435 = !DILocalVariable(name: "sint", scope: !5415, file: !2717, line: 1343, type: !2736)
!5436 = !DILocalVariable(name: "tagged_ap", scope: !5415, file: !2717, line: 1345, type: !5437)
!5437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!5438 = !DILocalVariable(name: "rc", scope: !5439, file: !2717, line: 1377, type: !125)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !2717, line: 1377, column: 4)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !2717, line: 1376, column: 19)
!5441 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1376, column: 7)
!5442 = distinct !DILexicalBlock(scope: !5415, file: !2717, line: 1375, column: 19)
!5443 = !DILocalVariable(name: "state", scope: !5442, file: !2717, line: 1395, type: !5444)
!5444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5415, file: !2717, line: 1392, size: 192, elements: !5445)
!5445 = !{!5446, !5454}
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5444, file: !2717, line: 1393, baseType: !5447, size: 64)
!5447 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2717, line: 166, size: 64, elements: !5448)
!5448 = !{!5449, !5450, !5451, !5452, !5453}
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5447, file: !2717, line: 168, baseType: !2736, size: 64)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5447, file: !2717, line: 171, baseType: !2739, size: 64)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5447, file: !2717, line: 174, baseType: !385, size: 64)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5447, file: !2717, line: 177, baseType: !383, size: 64)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5447, file: !2717, line: 180, baseType: !124, size: 32)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5444, file: !2717, line: 1394, baseType: !5455, size: 96, offset: 64)
!5455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2717, line: 189, size: 96, elements: !5456)
!5456 = !{!5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5481}
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5455, file: !2717, line: 191, baseType: !153, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5455, file: !2717, line: 194, baseType: !153, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5455, file: !2717, line: 197, baseType: !153, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5455, file: !2717, line: 200, baseType: !153, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5455, file: !2717, line: 203, baseType: !153, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5455, file: !2717, line: 206, baseType: !153, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5455, file: !2717, line: 209, baseType: !153, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5455, file: !2717, line: 212, baseType: !153, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5455, file: !2717, line: 219, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5455, file: !2717, line: 222, baseType: !153, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5455, file: !2717, line: 229, baseType: !153, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5455, file: !2717, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5455, file: !2717, line: 238, baseType: !153, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5455, file: !2717, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5455, file: !2717, line: 244, baseType: !153, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5455, file: !2717, line: 247, baseType: !153, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5455, file: !2717, line: 252, baseType: !153, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5455, file: !2717, line: 257, baseType: !153, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5455, file: !2717, line: 260, baseType: !151, size: 8, offset: 24)
!5476 = !DIDerivedType(tag: DW_TAG_member, scope: !5455, file: !2717, line: 262, baseType: !5477, size: 32, offset: 32)
!5477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5455, file: !2717, line: 262, size: 32, elements: !5478)
!5478 = !{!5479, !5480}
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5477, file: !2717, line: 267, baseType: !125, size: 32)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5477, file: !2717, line: 289, baseType: !125, size: 32)
!5481 = !DIDerivedType(tag: DW_TAG_member, scope: !5455, file: !2717, line: 292, baseType: !5482, size: 32, offset: 64)
!5482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5455, file: !2717, line: 292, size: 32, elements: !5483)
!5483 = !{!5484, !5485}
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5482, file: !2717, line: 297, baseType: !125, size: 32)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5482, file: !2717, line: 306, baseType: !125, size: 32)
!5486 = !DILocalVariable(name: "conv", scope: !5442, file: !2717, line: 1400, type: !5487)
!5487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5488)
!5488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5455, size: 32)
!5489 = !DILocalVariable(name: "value", scope: !5442, file: !2717, line: 1401, type: !5490)
!5490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5491)
!5491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5447, size: 32)
!5492 = !DILocalVariable(name: "sp", scope: !5442, file: !2717, line: 1402, type: !140)
!5493 = !DILocalVariable(name: "width", scope: !5442, file: !2717, line: 1403, type: !125)
!5494 = !DILocalVariable(name: "precision", scope: !5442, file: !2717, line: 1404, type: !125)
!5495 = !DILocalVariable(name: "bps", scope: !5442, file: !2717, line: 1405, type: !140)
!5496 = !DILocalVariable(name: "bpe", scope: !5442, file: !2717, line: 1406, type: !140)
!5497 = !DILocalVariable(name: "sign", scope: !5442, file: !2717, line: 1407, type: !142)
!5498 = !DILocalVariable(name: "arg", scope: !5499, file: !2717, line: 1432, type: !125)
!5499 = distinct !DILexicalBlock(scope: !5500, file: !2717, line: 1431, column: 24)
!5500 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1431, column: 7)
!5501 = !DILocalVariable(name: "specifier_cat", scope: !5442, file: !2717, line: 1468, type: !2716)
!5502 = !DILocalVariable(name: "length_mod", scope: !5442, file: !2717, line: 1470, type: !2724)
!5503 = !DILocalVariable(name: "rc", scope: !5504, file: !2717, line: 1575, type: !125)
!5504 = distinct !DILexicalBlock(scope: !5505, file: !2717, line: 1575, column: 4)
!5505 = distinct !DILexicalBlock(scope: !5506, file: !2717, line: 1574, column: 43)
!5506 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1574, column: 7)
!5507 = !DILocalVariable(name: "rc", scope: !5508, file: !2717, line: 1584, type: !125)
!5508 = distinct !DILexicalBlock(scope: !5509, file: !2717, line: 1584, column: 4)
!5509 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1582, column: 28)
!5510 = !DILocalVariable(name: "len", scope: !5511, file: !2717, line: 1589, type: !272)
!5511 = distinct !DILexicalBlock(scope: !5509, file: !2717, line: 1586, column: 13)
!5512 = !DILocalVariable(name: "len", scope: !5513, file: !2717, line: 1641, type: !272)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !2717, line: 1640, column: 24)
!5514 = distinct !DILexicalBlock(scope: !5509, file: !2717, line: 1640, column: 8)
!5515 = !DILocalVariable(name: "nj_len", scope: !5442, file: !2717, line: 1722, type: !272)
!5516 = !DILocalVariable(name: "pad_len", scope: !5442, file: !2717, line: 1723, type: !125)
!5517 = !DILocalVariable(name: "pad", scope: !5518, file: !2717, line: 1751, type: !142)
!5518 = distinct !DILexicalBlock(scope: !5519, file: !2717, line: 1750, column: 26)
!5519 = distinct !DILexicalBlock(scope: !5520, file: !2717, line: 1750, column: 8)
!5520 = distinct !DILexicalBlock(scope: !5521, file: !2717, line: 1747, column: 18)
!5521 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1747, column: 7)
!5522 = !DILocalVariable(name: "rc", scope: !5523, file: !2717, line: 1758, type: !125)
!5523 = distinct !DILexicalBlock(scope: !5524, file: !2717, line: 1758, column: 7)
!5524 = distinct !DILexicalBlock(scope: !5525, file: !2717, line: 1757, column: 21)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !2717, line: 1757, column: 10)
!5526 = distinct !DILexicalBlock(scope: !5527, file: !2717, line: 1756, column: 26)
!5527 = distinct !DILexicalBlock(scope: !5518, file: !2717, line: 1756, column: 9)
!5528 = !DILocalVariable(name: "rc", scope: !5529, file: !2717, line: 1765, type: !125)
!5529 = distinct !DILexicalBlock(scope: !5530, file: !2717, line: 1765, column: 6)
!5530 = distinct !DILexicalBlock(scope: !5518, file: !2717, line: 1764, column: 25)
!5531 = !DILocalVariable(name: "rc", scope: !5532, file: !2717, line: 1774, type: !125)
!5532 = distinct !DILexicalBlock(scope: !5533, file: !2717, line: 1774, column: 4)
!5533 = distinct !DILexicalBlock(scope: !5534, file: !2717, line: 1773, column: 18)
!5534 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1773, column: 7)
!5535 = !DILocalVariable(name: "rc", scope: !5536, file: !2717, line: 1819, type: !125)
!5536 = distinct !DILexicalBlock(scope: !5537, file: !2717, line: 1819, column: 5)
!5537 = distinct !DILexicalBlock(scope: !5538, file: !2717, line: 1818, column: 44)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !2717, line: 1818, column: 8)
!5539 = distinct !DILexicalBlock(scope: !5540, file: !2717, line: 1817, column: 10)
!5540 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1777, column: 7)
!5541 = !DILocalVariable(name: "rc", scope: !5542, file: !2717, line: 1823, type: !125)
!5542 = distinct !DILexicalBlock(scope: !5543, file: !2717, line: 1823, column: 5)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !2717, line: 1822, column: 26)
!5544 = distinct !DILexicalBlock(scope: !5539, file: !2717, line: 1822, column: 8)
!5545 = !DILocalVariable(name: "rc", scope: !5546, file: !2717, line: 1828, type: !125)
!5546 = distinct !DILexicalBlock(scope: !5547, file: !2717, line: 1828, column: 5)
!5547 = distinct !DILexicalBlock(scope: !5539, file: !2717, line: 1827, column: 26)
!5548 = !DILocalVariable(name: "rc", scope: !5549, file: !2717, line: 1831, type: !125)
!5549 = distinct !DILexicalBlock(scope: !5539, file: !2717, line: 1831, column: 4)
!5550 = !DILocalVariable(name: "rc", scope: !5551, file: !2717, line: 1836, type: !125)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !2717, line: 1836, column: 4)
!5552 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1835, column: 21)
!5553 = !DILabel(scope: !5509, name: "prec_int_pad0", file: !2717, line: 1634)
!5554 = !DILocation(line: 0, scope: !5415)
!5555 = !DILocation(line: 1341, column: 2, scope: !5415)
!5556 = !DILocation(line: 1341, column: 7, scope: !5415)
!5557 = !DILocation(line: 1375, column: 2, scope: !5415)
!5558 = !DILocation(line: 1342, column: 9, scope: !5415)
!5559 = !DILocation(line: 1375, column: 9, scope: !5415)
!5560 = !DILocation(line: 1377, column: 4, scope: !5439)
!5561 = !DILocation(line: 0, scope: !5439)
!5562 = !DILocation(line: 1377, column: 4, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5439, file: !2717, line: 1377, column: 4)
!5564 = distinct !{!5564, !5557, !5565}
!5565 = !DILocation(line: 1839, column: 2, scope: !5415)
!5566 = !DILocation(line: 1392, column: 3, scope: !5442)
!5567 = !DILocation(line: 1395, column: 5, scope: !5442)
!5568 = !DILocation(line: 0, scope: !5442)
!5569 = !DILocation(line: 1409, column: 8, scope: !5442)
!5570 = !DILocation(line: 1414, column: 13, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1414, column: 7)
!5572 = !DILocation(line: 1414, column: 7, scope: !5442)
!5573 = !DILocation(line: 1415, column: 12, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5571, file: !2717, line: 1414, column: 25)
!5575 = !DILocation(line: 1417, column: 14, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5574, file: !2717, line: 1417, column: 8)
!5577 = !DILocation(line: 1417, column: 8, scope: !5574)
!5578 = !DILocation(line: 1418, column: 21, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5576, file: !2717, line: 1417, column: 19)
!5580 = !DILocation(line: 1419, column: 13, scope: !5579)
!5581 = !DILocation(line: 1420, column: 4, scope: !5579)
!5582 = !DILocation(line: 1421, column: 20, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5571, file: !2717, line: 1421, column: 14)
!5584 = !DILocation(line: 1421, column: 14, scope: !5571)
!5585 = !DILocation(line: 1431, column: 13, scope: !5500)
!5586 = !DILocation(line: 1431, column: 7, scope: !5442)
!5587 = !DILocation(line: 1432, column: 14, scope: !5499)
!5588 = !DILocation(line: 0, scope: !5499)
!5589 = !DILocation(line: 1434, column: 12, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5499, file: !2717, line: 1434, column: 8)
!5591 = !DILocation(line: 1434, column: 8, scope: !5499)
!5592 = !DILocation(line: 1435, column: 24, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5590, file: !2717, line: 1434, column: 17)
!5594 = !DILocation(line: 1436, column: 4, scope: !5593)
!5595 = !DILocation(line: 1439, column: 20, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5500, file: !2717, line: 1439, column: 14)
!5597 = !DILocation(line: 1439, column: 14, scope: !5500)
!5598 = !DILocation(line: 1469, column: 37, scope: !5442)
!5599 = !DILocation(line: 1448, column: 20, scope: !5442)
!5600 = !DILocation(line: 1449, column: 22, scope: !5442)
!5601 = !DILocation(line: 1471, column: 34, scope: !5442)
!5602 = !DILocation(line: 1478, column: 7, scope: !5442)
!5603 = !DILocation(line: 1479, column: 4, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5605, file: !2717, line: 1478, column: 40)
!5605 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1478, column: 7)
!5606 = !DILocation(line: 1484, column: 19, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5604, file: !2717, line: 1479, column: 24)
!5608 = !DILocation(line: 1484, column: 17, scope: !5607)
!5609 = !DILocation(line: 1485, column: 5, scope: !5607)
!5610 = !DILocation(line: 1492, column: 20, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5612, file: !2717, line: 1491, column: 12)
!5612 = distinct !DILexicalBlock(scope: !5607, file: !2717, line: 1487, column: 9)
!5613 = !DILocation(line: 1492, column: 18, scope: !5611)
!5614 = !DILocation(line: 1494, column: 5, scope: !5607)
!5615 = !DILocation(line: 1497, column: 23, scope: !5607)
!5616 = !DILocation(line: 1496, column: 17, scope: !5607)
!5617 = !DILocation(line: 1498, column: 5, scope: !5607)
!5618 = !DILocation(line: 1501, column: 23, scope: !5607)
!5619 = !DILocation(line: 1500, column: 17, scope: !5607)
!5620 = !DILocation(line: 1502, column: 5, scope: !5607)
!5621 = !DILocation(line: 1513, column: 23, scope: !5607)
!5622 = !DILocation(line: 1513, column: 6, scope: !5607)
!5623 = !DILocation(line: 1512, column: 17, scope: !5607)
!5624 = !DILocation(line: 1514, column: 5, scope: !5607)
!5625 = !DILocation(line: 0, scope: !5607)
!5626 = !DILocation(line: 1516, column: 8, scope: !5604)
!5627 = !DILocation(line: 1517, column: 19, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5629, file: !2717, line: 1516, column: 33)
!5629 = distinct !DILexicalBlock(scope: !5604, file: !2717, line: 1516, column: 8)
!5630 = !DILocation(line: 1517, column: 17, scope: !5628)
!5631 = !DILocation(line: 1518, column: 4, scope: !5628)
!5632 = !DILocation(line: 1519, column: 19, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !2717, line: 1518, column: 39)
!5634 = distinct !DILexicalBlock(scope: !5629, file: !2717, line: 1518, column: 15)
!5635 = !DILocation(line: 1519, column: 17, scope: !5633)
!5636 = !DILocation(line: 1520, column: 4, scope: !5633)
!5637 = !DILocation(line: 1522, column: 4, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !2717, line: 1521, column: 47)
!5639 = distinct !DILexicalBlock(scope: !5605, file: !2717, line: 1521, column: 14)
!5640 = !DILocation(line: 1527, column: 19, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5638, file: !2717, line: 1522, column: 24)
!5642 = !DILocation(line: 1527, column: 17, scope: !5641)
!5643 = !DILocation(line: 1528, column: 5, scope: !5641)
!5644 = !DILocation(line: 0, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5641, file: !2717, line: 1530, column: 9)
!5646 = !DILocation(line: 1540, column: 23, scope: !5641)
!5647 = !DILocation(line: 1539, column: 17, scope: !5641)
!5648 = !DILocation(line: 1542, column: 5, scope: !5641)
!5649 = !DILocation(line: 1545, column: 23, scope: !5641)
!5650 = !DILocation(line: 1544, column: 17, scope: !5641)
!5651 = !DILocation(line: 1547, column: 5, scope: !5641)
!5652 = !DILocation(line: 1551, column: 23, scope: !5641)
!5653 = !DILocation(line: 1551, column: 6, scope: !5641)
!5654 = !DILocation(line: 1550, column: 17, scope: !5641)
!5655 = !DILocation(line: 1552, column: 5, scope: !5641)
!5656 = !DILocation(line: 0, scope: !5641)
!5657 = !DILocation(line: 1554, column: 8, scope: !5638)
!5658 = !DILocation(line: 1555, column: 19, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5660, file: !2717, line: 1554, column: 33)
!5660 = distinct !DILexicalBlock(scope: !5638, file: !2717, line: 1554, column: 8)
!5661 = !DILocation(line: 1555, column: 17, scope: !5659)
!5662 = !DILocation(line: 1556, column: 4, scope: !5659)
!5663 = !DILocation(line: 1557, column: 19, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5665, file: !2717, line: 1556, column: 39)
!5665 = distinct !DILexicalBlock(scope: !5660, file: !2717, line: 1556, column: 15)
!5666 = !DILocation(line: 1557, column: 17, scope: !5664)
!5667 = !DILocation(line: 1558, column: 4, scope: !5664)
!5668 = !DILocation(line: 0, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !2717, line: 1560, column: 8)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !2717, line: 1559, column: 45)
!5671 = distinct !DILexicalBlock(scope: !5639, file: !2717, line: 1559, column: 14)
!5672 = !DILocation(line: 1566, column: 17, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !2717, line: 1565, column: 46)
!5674 = distinct !DILexicalBlock(scope: !5671, file: !2717, line: 1565, column: 14)
!5675 = !DILocation(line: 1566, column: 15, scope: !5673)
!5676 = !DILocation(line: 1567, column: 3, scope: !5673)
!5677 = !DILocation(line: 1574, column: 21, scope: !5506)
!5678 = !DILocation(line: 1575, column: 4, scope: !5504)
!5679 = !DILocation(line: 0, scope: !5504)
!5680 = !DILocation(line: 1575, column: 4, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5504, file: !2717, line: 1575, column: 4)
!5682 = !DILocation(line: 1582, column: 17, scope: !5442)
!5683 = !DILocation(line: 1582, column: 3, scope: !5442)
!5684 = !DILocation(line: 1584, column: 4, scope: !5508)
!5685 = !DILocation(line: 0, scope: !5508)
!5686 = !DILocation(line: 1584, column: 4, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5508, file: !2717, line: 1584, column: 4)
!5688 = !DILocation(line: 1587, column: 31, scope: !5511)
!5689 = !DILocation(line: 1591, column: 18, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5511, file: !2717, line: 1591, column: 8)
!5691 = !DILocation(line: 1591, column: 8, scope: !5511)
!5692 = !DILocation(line: 1592, column: 11, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5690, file: !2717, line: 1591, column: 24)
!5694 = !DILocation(line: 0, scope: !5511)
!5695 = !DILocation(line: 1593, column: 4, scope: !5693)
!5696 = !DILocation(line: 1594, column: 11, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5690, file: !2717, line: 1593, column: 11)
!5698 = !DILocation(line: 1604, column: 51, scope: !5509)
!5699 = !DILocation(line: 1604, column: 13, scope: !5509)
!5700 = !DILocation(line: 1604, column: 11, scope: !5509)
!5701 = !DILocation(line: 1606, column: 4, scope: !5509)
!5702 = !DILocation(line: 1609, column: 14, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5509, file: !2717, line: 1609, column: 8)
!5704 = !DILocation(line: 1609, column: 8, scope: !5509)
!5705 = !DILocation(line: 1619, column: 18, scope: !5509)
!5706 = !DILocation(line: 1620, column: 13, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5509, file: !2717, line: 1620, column: 8)
!5708 = !DILocation(line: 1620, column: 8, scope: !5509)
!5709 = !DILocation(line: 1622, column: 36, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5707, file: !2717, line: 1620, column: 18)
!5711 = !DILocation(line: 1622, column: 17, scope: !5710)
!5712 = !DILocation(line: 1623, column: 4, scope: !5710)
!5713 = !DILocation(line: 1632, column: 29, scope: !5509)
!5714 = !DILocation(line: 1632, column: 10, scope: !5509)
!5715 = !DILocation(line: 1632, column: 4, scope: !5509)
!5716 = !DILocation(line: 1407, column: 8, scope: !5442)
!5717 = !DILocation(line: 0, scope: !5509)
!5718 = !DILocation(line: 1634, column: 3, scope: !5509)
!5719 = !DILocation(line: 1640, column: 18, scope: !5514)
!5720 = !DILocation(line: 1640, column: 8, scope: !5509)
!5721 = !DILocation(line: 1729, column: 13, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1729, column: 7)
!5723 = !DILocation(line: 1641, column: 22, scope: !5513)
!5724 = !DILocation(line: 0, scope: !5513)
!5725 = !DILocation(line: 1646, column: 21, scope: !5513)
!5726 = !DILocation(line: 1649, column: 13, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5513, file: !2717, line: 1649, column: 9)
!5728 = !DILocation(line: 1649, column: 9, scope: !5513)
!5729 = !DILocation(line: 1650, column: 35, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5727, file: !2717, line: 1649, column: 34)
!5731 = !DILocation(line: 1650, column: 23, scope: !5730)
!5732 = !DILocation(line: 1651, column: 5, scope: !5730)
!5733 = !DILocation(line: 1660, column: 15, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5509, file: !2717, line: 1660, column: 8)
!5735 = !DILocation(line: 1660, column: 19, scope: !5734)
!5736 = !DILocation(line: 1660, column: 8, scope: !5509)
!5737 = !DILocation(line: 1661, column: 23, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5734, file: !2717, line: 1660, column: 28)
!5739 = !DILocation(line: 1661, column: 11, scope: !5738)
!5740 = !DILocation(line: 1665, column: 22, scope: !5738)
!5741 = !DILocation(line: 1666, column: 21, scope: !5738)
!5742 = !DILocation(line: 1668, column: 5, scope: !5738)
!5743 = !DILocation(line: 1677, column: 30, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !2717, line: 1676, column: 49)
!5745 = distinct !DILexicalBlock(scope: !5509, file: !2717, line: 1676, column: 8)
!5746 = !DILocation(line: 1677, column: 5, scope: !5744)
!5747 = !DILocation(line: 1680, column: 4, scope: !5509)
!5748 = !DILocation(line: 0, scope: !5690)
!5749 = !DILocation(line: 1597, column: 14, scope: !5511)
!5750 = !DILocation(line: 1699, column: 11, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1699, column: 7)
!5752 = !DILocation(line: 1699, column: 7, scope: !5442)
!5753 = !DILocation(line: 1725, column: 7, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1725, column: 7)
!5755 = !DILocation(line: 1725, column: 12, scope: !5754)
!5756 = !DILocation(line: 1747, column: 13, scope: !5521)
!5757 = !DILocation(line: 1747, column: 7, scope: !5442)
!5758 = !DILocation(line: 1722, column: 24, scope: !5442)
!5759 = !DILocation(line: 1725, column: 7, scope: !5442)
!5760 = !DILocation(line: 1729, column: 7, scope: !5442)
!5761 = !DILocation(line: 1736, column: 13, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5442, file: !2717, line: 1736, column: 7)
!5763 = !DILocation(line: 1735, column: 19, scope: !5442)
!5764 = !DILocation(line: 1736, column: 7, scope: !5442)
!5765 = !DILocation(line: 1748, column: 10, scope: !5520)
!5766 = !DILocation(line: 1750, column: 15, scope: !5519)
!5767 = !DILocation(line: 1750, column: 8, scope: !5520)
!5768 = !DILocation(line: 0, scope: !5518)
!5769 = !DILocation(line: 1756, column: 15, scope: !5527)
!5770 = !DILocation(line: 1756, column: 9, scope: !5518)
!5771 = !DILocation(line: 1758, column: 7, scope: !5523)
!5772 = !DILocation(line: 0, scope: !5523)
!5773 = !DILocation(line: 1758, column: 7, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5523, file: !2717, line: 1758, column: 7)
!5775 = !DILocation(line: 1764, column: 5, scope: !5518)
!5776 = !DILocation(line: 0, scope: !5520)
!5777 = !DILocation(line: 1764, column: 20, scope: !5518)
!5778 = !DILocation(line: 1764, column: 17, scope: !5518)
!5779 = !DILocation(line: 1765, column: 6, scope: !5529)
!5780 = !DILocation(line: 0, scope: !5529)
!5781 = !DILocation(line: 1765, column: 6, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5529, file: !2717, line: 1765, column: 6)
!5783 = distinct !{!5783, !5775, !5784}
!5784 = !DILocation(line: 1766, column: 5, scope: !5518)
!5785 = !DILocation(line: 1773, column: 12, scope: !5534)
!5786 = !DILocation(line: 1773, column: 7, scope: !5442)
!5787 = !DILocation(line: 1773, column: 7, scope: !5534)
!5788 = !DILocation(line: 1774, column: 4, scope: !5532)
!5789 = !DILocation(line: 0, scope: !5532)
!5790 = !DILocation(line: 1774, column: 4, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5532, file: !2717, line: 1774, column: 4)
!5792 = !DILocation(line: 1818, column: 8, scope: !5538)
!5793 = !DILocation(line: 1818, column: 27, scope: !5538)
!5794 = !DILocation(line: 1818, column: 25, scope: !5538)
!5795 = !DILocation(line: 1818, column: 8, scope: !5539)
!5796 = !DILocation(line: 1819, column: 5, scope: !5536)
!5797 = !DILocation(line: 0, scope: !5536)
!5798 = !DILocation(line: 1819, column: 5, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5536, file: !2717, line: 1819, column: 5)
!5800 = !DILocation(line: 1822, column: 14, scope: !5544)
!5801 = !DILocation(line: 1822, column: 8, scope: !5539)
!5802 = !DILocation(line: 1823, column: 5, scope: !5542)
!5803 = !DILocation(line: 0, scope: !5542)
!5804 = !DILocation(line: 1823, column: 5, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5542, file: !2717, line: 1823, column: 5)
!5806 = !DILocation(line: 1826, column: 20, scope: !5539)
!5807 = !DILocation(line: 1827, column: 4, scope: !5539)
!5808 = !DILocation(line: 0, scope: !5539)
!5809 = !DILocation(line: 1827, column: 21, scope: !5539)
!5810 = !DILocation(line: 1827, column: 18, scope: !5539)
!5811 = !DILocation(line: 1828, column: 5, scope: !5546)
!5812 = !DILocation(line: 0, scope: !5546)
!5813 = !DILocation(line: 1828, column: 5, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5546, file: !2717, line: 1828, column: 5)
!5815 = distinct !{!5815, !5807, !5816}
!5816 = !DILocation(line: 1829, column: 4, scope: !5539)
!5817 = !DILocation(line: 1831, column: 4, scope: !5549)
!5818 = !DILocation(line: 0, scope: !5549)
!5819 = !DILocation(line: 1831, column: 4, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5549, file: !2717, line: 1831, column: 4)
!5821 = !DILocation(line: 1835, column: 16, scope: !5442)
!5822 = !DILocation(line: 1835, column: 3, scope: !5442)
!5823 = !DILocation(line: 1836, column: 4, scope: !5551)
!5824 = !DILocation(line: 0, scope: !5551)
!5825 = !DILocation(line: 1836, column: 4, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5551, file: !2717, line: 1836, column: 4)
!5827 = !DILocation(line: 1837, column: 4, scope: !5552)
!5828 = distinct !{!5828, !5822, !5829}
!5829 = !DILocation(line: 1838, column: 3, scope: !5442)
!5830 = !DILocation(line: 1844, column: 1, scope: !5415)
!5831 = distinct !DISubprogram(name: "extract_conversion", scope: !2717, file: !2717, line: 642, type: !5832, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !5834)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{!140, !5488, !140}
!5834 = !{!5835, !5836}
!5835 = !DILocalVariable(name: "conv", arg: 1, scope: !5831, file: !2717, line: 642, type: !5488)
!5836 = !DILocalVariable(name: "sp", arg: 2, scope: !5831, file: !2717, line: 643, type: !140)
!5837 = !DILocation(line: 0, scope: !5831)
!5838 = !DILocation(line: 645, column: 10, scope: !5831)
!5839 = !DILocation(line: 653, column: 2, scope: !5831)
!5840 = !DILocation(line: 654, column: 6, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5831, file: !2717, line: 654, column: 6)
!5842 = !DILocation(line: 654, column: 10, scope: !5841)
!5843 = !DILocation(line: 654, column: 6, scope: !5831)
!5844 = !DILocation(line: 655, column: 24, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5841, file: !2717, line: 654, column: 18)
!5846 = !DILocation(line: 655, column: 19, scope: !5845)
!5847 = !DILocation(line: 656, column: 3, scope: !5845)
!5848 = !DILocation(line: 659, column: 7, scope: !5831)
!5849 = !DILocation(line: 660, column: 7, scope: !5831)
!5850 = !DILocation(line: 661, column: 7, scope: !5831)
!5851 = !DILocation(line: 662, column: 7, scope: !5831)
!5852 = !DILocation(line: 663, column: 7, scope: !5831)
!5853 = !DILocation(line: 665, column: 2, scope: !5831)
!5854 = !DILocation(line: 666, column: 1, scope: !5831)
!5855 = distinct !DISubprogram(name: "outs", scope: !2717, file: !2717, line: 1319, type: !5856, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !5858)
!5856 = !DISubroutineType(types: !5857)
!5857 = !{!125, !4606, !124, !140, !140}
!5858 = !{!5859, !5860, !5861, !5862, !5863, !5864}
!5859 = !DILocalVariable(name: "out", arg: 1, scope: !5855, file: !2717, line: 1319, type: !4606)
!5860 = !DILocalVariable(name: "ctx", arg: 2, scope: !5855, file: !2717, line: 1320, type: !124)
!5861 = !DILocalVariable(name: "sp", arg: 3, scope: !5855, file: !2717, line: 1321, type: !140)
!5862 = !DILocalVariable(name: "ep", arg: 4, scope: !5855, file: !2717, line: 1322, type: !140)
!5863 = !DILocalVariable(name: "count", scope: !5855, file: !2717, line: 1324, type: !272)
!5864 = !DILocalVariable(name: "rc", scope: !5865, file: !2717, line: 1327, type: !125)
!5865 = distinct !DILexicalBlock(scope: !5855, file: !2717, line: 1326, column: 45)
!5866 = !DILocation(line: 0, scope: !5855)
!5867 = !DILocation(line: 1326, column: 2, scope: !5855)
!5868 = !DILocation(line: 1324, column: 9, scope: !5855)
!5869 = !DILocation(line: 1326, column: 13, scope: !5855)
!5870 = !DILocation(line: 1326, column: 19, scope: !5855)
!5871 = !DILocation(line: 1327, column: 21, scope: !5865)
!5872 = !DILocation(line: 1326, column: 36, scope: !5855)
!5873 = !DILocation(line: 1326, column: 39, scope: !5855)
!5874 = !DILocation(line: 1327, column: 24, scope: !5865)
!5875 = !DILocation(line: 1327, column: 16, scope: !5865)
!5876 = !DILocation(line: 1327, column: 12, scope: !5865)
!5877 = !DILocation(line: 0, scope: !5865)
!5878 = !DILocation(line: 1329, column: 10, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5865, file: !2717, line: 1329, column: 7)
!5880 = !DILocation(line: 1329, column: 7, scope: !5865)
!5881 = distinct !{!5881, !5867, !5882}
!5882 = !DILocation(line: 1333, column: 2, scope: !5855)
!5883 = !DILocation(line: 1336, column: 1, scope: !5855)
!5884 = distinct !DISubprogram(name: "encode_uint", scope: !2717, file: !2717, line: 788, type: !5885, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !5887)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!393, !2739, !5488, !393, !140}
!5887 = !{!5888, !5889, !5890, !5891, !5892, !5893, !5895, !5896}
!5888 = !DILocalVariable(name: "value", arg: 1, scope: !5884, file: !2717, line: 788, type: !2739)
!5889 = !DILocalVariable(name: "conv", arg: 2, scope: !5884, file: !2717, line: 789, type: !5488)
!5890 = !DILocalVariable(name: "bps", arg: 3, scope: !5884, file: !2717, line: 790, type: !393)
!5891 = !DILocalVariable(name: "bpe", arg: 4, scope: !5884, file: !2717, line: 791, type: !140)
!5892 = !DILocalVariable(name: "upcase", scope: !5884, file: !2717, line: 793, type: !153)
!5893 = !DILocalVariable(name: "radix", scope: !5884, file: !2717, line: 794, type: !5894)
!5894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5895 = !DILocalVariable(name: "bp", scope: !5884, file: !2717, line: 795, type: !393)
!5896 = !DILocalVariable(name: "lsv", scope: !5897, file: !2717, line: 798, type: !32)
!5897 = distinct !DILexicalBlock(scope: !5884, file: !2717, line: 797, column: 5)
!5898 = !DILocation(line: 0, scope: !5884)
!5899 = !DILocation(line: 793, column: 35, scope: !5884)
!5900 = !DILocation(line: 793, column: 24, scope: !5884)
!5901 = !DILocation(line: 793, column: 16, scope: !5884)
!5902 = !DILocation(line: 794, column: 29, scope: !5884)
!5903 = !DILocation(line: 795, column: 24, scope: !5884)
!5904 = !DILocation(line: 795, column: 17, scope: !5884)
!5905 = !DILocation(line: 797, column: 2, scope: !5884)
!5906 = !DILocation(line: 802, column: 9, scope: !5897)
!5907 = !DILocation(line: 798, column: 22, scope: !5897)
!5908 = !DILocation(line: 0, scope: !5897)
!5909 = !DILocation(line: 800, column: 16, scope: !5897)
!5910 = !DILocation(line: 800, column: 11, scope: !5897)
!5911 = !DILocation(line: 800, column: 4, scope: !5897)
!5912 = !DILocation(line: 800, column: 9, scope: !5897)
!5913 = !DILocation(line: 803, column: 18, scope: !5884)
!5914 = !DILocation(line: 803, column: 24, scope: !5884)
!5915 = !DILocation(line: 803, column: 2, scope: !5897)
!5916 = distinct !{!5916, !5905, !5917}
!5917 = !DILocation(line: 803, column: 37, scope: !5884)
!5918 = !DILocation(line: 808, column: 12, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5884, file: !2717, line: 808, column: 6)
!5920 = !DILocation(line: 808, column: 6, scope: !5884)
!5921 = !DILocation(line: 809, column: 7, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5919, file: !2717, line: 808, column: 23)
!5923 = !DILocation(line: 813, column: 3, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !2717, line: 811, column: 27)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !2717, line: 811, column: 14)
!5926 = distinct !DILexicalBlock(scope: !5922, file: !2717, line: 809, column: 7)
!5927 = !DILocation(line: 0, scope: !5926)
!5928 = !DILocation(line: 818, column: 2, scope: !5884)
!5929 = distinct !DISubprogram(name: "store_count", scope: !2717, file: !2717, line: 1280, type: !5930, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !5934)
!5930 = !DISubroutineType(types: !5931)
!5931 = !{null, !5932, !124, !125}
!5932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5933, size: 32)
!5933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5455)
!5934 = !{!5935, !5936, !5937}
!5935 = !DILocalVariable(name: "conv", arg: 1, scope: !5929, file: !2717, line: 1280, type: !5932)
!5936 = !DILocalVariable(name: "dp", arg: 2, scope: !5929, file: !2717, line: 1281, type: !124)
!5937 = !DILocalVariable(name: "count", arg: 3, scope: !5929, file: !2717, line: 1282, type: !125)
!5938 = !DILocation(line: 0, scope: !5929)
!5939 = !DILocation(line: 1284, column: 38, scope: !5929)
!5940 = !DILocation(line: 1284, column: 2, scope: !5929)
!5941 = !DILocation(line: 1286, column: 4, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5929, file: !2717, line: 1284, column: 50)
!5943 = !DILocation(line: 1286, column: 14, scope: !5942)
!5944 = !DILocation(line: 1287, column: 3, scope: !5942)
!5945 = !DILocation(line: 1289, column: 24, scope: !5942)
!5946 = !DILocation(line: 1289, column: 22, scope: !5942)
!5947 = !DILocation(line: 1290, column: 3, scope: !5942)
!5948 = !DILocation(line: 1292, column: 18, scope: !5942)
!5949 = !DILocation(line: 1292, column: 4, scope: !5942)
!5950 = !DILocation(line: 1292, column: 16, scope: !5942)
!5951 = !DILocation(line: 1293, column: 3, scope: !5942)
!5952 = !DILocation(line: 1295, column: 4, scope: !5942)
!5953 = !DILocation(line: 1295, column: 15, scope: !5942)
!5954 = !DILocation(line: 1296, column: 3, scope: !5942)
!5955 = !DILocation(line: 1298, column: 22, scope: !5942)
!5956 = !DILocation(line: 1298, column: 4, scope: !5942)
!5957 = !DILocation(line: 1298, column: 20, scope: !5942)
!5958 = !DILocation(line: 1299, column: 3, scope: !5942)
!5959 = !DILocation(line: 1301, column: 21, scope: !5942)
!5960 = !DILocation(line: 1301, column: 4, scope: !5942)
!5961 = !DILocation(line: 1301, column: 19, scope: !5942)
!5962 = !DILocation(line: 1302, column: 3, scope: !5942)
!5963 = !DILocation(line: 1304, column: 4, scope: !5942)
!5964 = !DILocation(line: 1304, column: 17, scope: !5942)
!5965 = !DILocation(line: 1305, column: 3, scope: !5942)
!5966 = !DILocation(line: 1307, column: 4, scope: !5942)
!5967 = !DILocation(line: 1307, column: 20, scope: !5942)
!5968 = !DILocation(line: 1308, column: 3, scope: !5942)
!5969 = !DILocation(line: 1316, column: 1, scope: !5929)
!5970 = distinct !DISubprogram(name: "isupper", scope: !5971, file: !5971, line: 16, type: !410, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !5972)
!5971 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5972 = !{!5973}
!5973 = !DILocalVariable(name: "a", arg: 1, scope: !5970, file: !5971, line: 16, type: !125)
!5974 = !DILocation(line: 0, scope: !5970)
!5975 = !DILocation(line: 18, column: 29, scope: !5970)
!5976 = !DILocation(line: 18, column: 45, scope: !5970)
!5977 = !DILocation(line: 18, column: 2, scope: !5970)
!5978 = distinct !DISubprogram(name: "conversion_radix", scope: !2717, file: !2717, line: 761, type: !5979, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !5981)
!5979 = !DISubroutineType(types: !5980)
!5980 = !{!272, !142}
!5981 = !{!5982}
!5982 = !DILocalVariable(name: "specifier", arg: 1, scope: !5978, file: !2717, line: 761, type: !142)
!5983 = !DILocation(line: 0, scope: !5978)
!5984 = !DILocation(line: 763, column: 2, scope: !5978)
!5985 = !DILocation(line: 770, column: 3, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5978, file: !2717, line: 763, column: 21)
!5987 = !DILocation(line: 774, column: 3, scope: !5986)
!5988 = !DILocation(line: 0, scope: !5986)
!5989 = !DILocation(line: 776, column: 1, scope: !5978)
!5990 = distinct !DISubprogram(name: "extract_flags", scope: !2717, file: !2717, line: 339, type: !5832, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !5991)
!5991 = !{!5992, !5993, !5994}
!5992 = !DILocalVariable(name: "conv", arg: 1, scope: !5990, file: !2717, line: 339, type: !5488)
!5993 = !DILocalVariable(name: "sp", arg: 2, scope: !5990, file: !2717, line: 340, type: !140)
!5994 = !DILocalVariable(name: "loop", scope: !5990, file: !2717, line: 342, type: !153)
!5995 = !DILocation(line: 0, scope: !5990)
!5996 = !DILocation(line: 344, column: 2, scope: !5990)
!5997 = !DILocation(line: 345, column: 11, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5990, file: !2717, line: 344, column: 5)
!5999 = !DILocation(line: 345, column: 3, scope: !5998)
!6000 = !DILocation(line: 351, column: 4, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5998, file: !2717, line: 345, column: 16)
!6002 = !DILocation(line: 354, column: 4, scope: !6001)
!6003 = !DILocation(line: 357, column: 4, scope: !6001)
!6004 = !DILocation(line: 360, column: 4, scope: !6001)
!6005 = !DILocation(line: 0, scope: !6001)
!6006 = !DILocation(line: 370, column: 12, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5990, file: !2717, line: 370, column: 6)
!6008 = !DILocation(line: 370, column: 22, scope: !6007)
!6009 = !DILocation(line: 371, column: 19, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6007, file: !2717, line: 370, column: 42)
!6011 = !DILocation(line: 372, column: 2, scope: !6010)
!6012 = !DILocation(line: 376, column: 2, scope: !5990)
!6013 = distinct !DISubprogram(name: "extract_width", scope: !2717, file: !2717, line: 388, type: !5832, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6014)
!6014 = !{!6015, !6016, !6017, !6018}
!6015 = !DILocalVariable(name: "conv", arg: 1, scope: !6013, file: !2717, line: 388, type: !5488)
!6016 = !DILocalVariable(name: "sp", arg: 2, scope: !6013, file: !2717, line: 389, type: !140)
!6017 = !DILocalVariable(name: "wp", scope: !6013, file: !2717, line: 398, type: !140)
!6018 = !DILocalVariable(name: "width", scope: !6013, file: !2717, line: 399, type: !272)
!6019 = !DILocation(line: 0, scope: !6013)
!6020 = !DILocation(line: 391, column: 8, scope: !6013)
!6021 = !DILocation(line: 391, column: 22, scope: !6013)
!6022 = !DILocation(line: 393, column: 6, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6013, file: !2717, line: 393, column: 6)
!6024 = !DILocation(line: 393, column: 10, scope: !6023)
!6025 = !DILocation(line: 393, column: 6, scope: !6013)
!6026 = !DILocation(line: 394, column: 20, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6023, file: !2717, line: 393, column: 18)
!6028 = !DILocation(line: 395, column: 10, scope: !6027)
!6029 = !DILocation(line: 395, column: 3, scope: !6027)
!6030 = !DILocation(line: 399, column: 17, scope: !6013)
!6031 = !DILocation(line: 401, column: 6, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6013, file: !2717, line: 401, column: 6)
!6033 = !DILocation(line: 401, column: 9, scope: !6032)
!6034 = !DILocation(line: 401, column: 6, scope: !6013)
!6035 = !DILocation(line: 402, column: 23, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6032, file: !2717, line: 401, column: 16)
!6037 = !DILocation(line: 403, column: 9, scope: !6036)
!6038 = !DILocation(line: 403, column: 21, scope: !6036)
!6039 = !DILocation(line: 405, column: 11, scope: !6036)
!6040 = !DILocation(line: 404, column: 21, scope: !6036)
!6041 = !DILocation(line: 406, column: 2, scope: !6036)
!6042 = !DILocation(line: 409, column: 1, scope: !6013)
!6043 = distinct !DISubprogram(name: "extract_prec", scope: !2717, file: !2717, line: 420, type: !5832, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6044)
!6044 = !{!6045, !6046, !6047}
!6045 = !DILocalVariable(name: "conv", arg: 1, scope: !6043, file: !2717, line: 420, type: !5488)
!6046 = !DILocalVariable(name: "sp", arg: 2, scope: !6043, file: !2717, line: 421, type: !140)
!6047 = !DILocalVariable(name: "prec", scope: !6043, file: !2717, line: 435, type: !272)
!6048 = !DILocation(line: 0, scope: !6043)
!6049 = !DILocation(line: 423, column: 24, scope: !6043)
!6050 = !DILocation(line: 423, column: 28, scope: !6043)
!6051 = !DILocation(line: 423, column: 8, scope: !6043)
!6052 = !DILocation(line: 423, column: 21, scope: !6043)
!6053 = !DILocation(line: 425, column: 6, scope: !6043)
!6054 = !DILocation(line: 428, column: 2, scope: !6043)
!6055 = !DILocation(line: 430, column: 6, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6043, file: !2717, line: 430, column: 6)
!6057 = !DILocation(line: 430, column: 10, scope: !6056)
!6058 = !DILocation(line: 430, column: 6, scope: !6043)
!6059 = !DILocation(line: 431, column: 19, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6056, file: !2717, line: 430, column: 18)
!6061 = !DILocation(line: 432, column: 10, scope: !6060)
!6062 = !DILocation(line: 432, column: 3, scope: !6060)
!6063 = !DILocation(line: 435, column: 16, scope: !6043)
!6064 = !DILocation(line: 437, column: 8, scope: !6043)
!6065 = !DILocation(line: 437, column: 19, scope: !6043)
!6066 = !DILocation(line: 439, column: 10, scope: !6043)
!6067 = !DILocation(line: 438, column: 20, scope: !6043)
!6068 = !DILocation(line: 441, column: 9, scope: !6043)
!6069 = !DILocation(line: 442, column: 1, scope: !6043)
!6070 = distinct !DISubprogram(name: "extract_length", scope: !2717, file: !2717, line: 453, type: !5832, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6071)
!6071 = !{!6072, !6073}
!6072 = !DILocalVariable(name: "conv", arg: 1, scope: !6070, file: !2717, line: 453, type: !5488)
!6073 = !DILocalVariable(name: "sp", arg: 2, scope: !6070, file: !2717, line: 454, type: !140)
!6074 = !DILocation(line: 0, scope: !6070)
!6075 = !DILocation(line: 456, column: 10, scope: !6070)
!6076 = !DILocation(line: 456, column: 2, scope: !6070)
!6077 = !DILocation(line: 458, column: 8, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !2717, line: 458, column: 7)
!6079 = distinct !DILexicalBlock(scope: !6070, file: !2717, line: 456, column: 15)
!6080 = !DILocation(line: 458, column: 7, scope: !6078)
!6081 = !DILocation(line: 458, column: 13, scope: !6078)
!6082 = !DILocation(line: 0, scope: !6078)
!6083 = !DILocation(line: 458, column: 7, scope: !6079)
!6084 = !DILocation(line: 459, column: 21, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6078, file: !2717, line: 458, column: 21)
!6086 = !DILocation(line: 460, column: 4, scope: !6085)
!6087 = !DILocation(line: 461, column: 3, scope: !6085)
!6088 = !DILocation(line: 462, column: 21, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6078, file: !2717, line: 461, column: 10)
!6090 = !DILocation(line: 466, column: 8, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6079, file: !2717, line: 466, column: 7)
!6092 = !DILocation(line: 466, column: 7, scope: !6091)
!6093 = !DILocation(line: 466, column: 13, scope: !6091)
!6094 = !DILocation(line: 0, scope: !6091)
!6095 = !DILocation(line: 466, column: 7, scope: !6079)
!6096 = !DILocation(line: 467, column: 21, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6091, file: !2717, line: 466, column: 21)
!6098 = !DILocation(line: 468, column: 4, scope: !6097)
!6099 = !DILocation(line: 469, column: 3, scope: !6097)
!6100 = !DILocation(line: 470, column: 21, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6091, file: !2717, line: 469, column: 10)
!6102 = !DILocation(line: 474, column: 9, scope: !6079)
!6103 = !DILocation(line: 474, column: 20, scope: !6079)
!6104 = !DILocation(line: 475, column: 3, scope: !6079)
!6105 = !DILocation(line: 476, column: 3, scope: !6079)
!6106 = !DILocation(line: 478, column: 9, scope: !6079)
!6107 = !DILocation(line: 478, column: 20, scope: !6079)
!6108 = !DILocation(line: 479, column: 3, scope: !6079)
!6109 = !DILocation(line: 480, column: 3, scope: !6079)
!6110 = !DILocation(line: 482, column: 9, scope: !6079)
!6111 = !DILocation(line: 482, column: 20, scope: !6079)
!6112 = !DILocation(line: 483, column: 3, scope: !6079)
!6113 = !DILocation(line: 484, column: 3, scope: !6079)
!6114 = !DILocation(line: 486, column: 9, scope: !6079)
!6115 = !DILocation(line: 486, column: 20, scope: !6079)
!6116 = !DILocation(line: 487, column: 3, scope: !6079)
!6117 = !DILocation(line: 492, column: 21, scope: !6079)
!6118 = !DILocation(line: 493, column: 3, scope: !6079)
!6119 = !DILocation(line: 495, column: 9, scope: !6079)
!6120 = !DILocation(line: 495, column: 20, scope: !6079)
!6121 = !DILocation(line: 496, column: 3, scope: !6079)
!6122 = !DILocation(line: 498, column: 2, scope: !6070)
!6123 = distinct !DISubprogram(name: "extract_specifier", scope: !2717, file: !2717, line: 513, type: !5832, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6124)
!6124 = !{!6125, !6126, !6127, !6128}
!6125 = !DILocalVariable(name: "conv", arg: 1, scope: !6123, file: !2717, line: 513, type: !5488)
!6126 = !DILocalVariable(name: "sp", arg: 2, scope: !6123, file: !2717, line: 514, type: !140)
!6127 = !DILocalVariable(name: "unsupported", scope: !6123, file: !2717, line: 516, type: !153)
!6128 = !DILabel(scope: !6129, name: "int_conv", file: !2717, line: 526)
!6129 = distinct !DILexicalBlock(scope: !6123, file: !2717, line: 520, column: 27)
!6130 = !DILocation(line: 0, scope: !6123)
!6131 = !DILocation(line: 518, column: 20, scope: !6123)
!6132 = !DILocation(line: 518, column: 8, scope: !6123)
!6133 = !DILocation(line: 518, column: 18, scope: !6123)
!6134 = !DILocation(line: 520, column: 2, scope: !6123)
!6135 = !DILocation(line: 525, column: 3, scope: !6129)
!6136 = !DILocation(line: 0, scope: !6129)
!6137 = !DILocation(line: 526, column: 1, scope: !6129)
!6138 = !DILocation(line: 528, column: 24, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6129, file: !2717, line: 528, column: 7)
!6140 = !DILocation(line: 528, column: 7, scope: !6129)
!6141 = !DILocation(line: 535, column: 23, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6129, file: !2717, line: 535, column: 7)
!6143 = !DILocation(line: 535, column: 7, scope: !6129)
!6144 = !DILocation(line: 536, column: 36, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6142, file: !2717, line: 535, column: 31)
!6146 = !DILocation(line: 537, column: 3, scope: !6145)
!6147 = !DILocation(line: 570, column: 9, scope: !6129)
!6148 = !DILocation(line: 570, column: 23, scope: !6129)
!6149 = !DILocation(line: 575, column: 4, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6151, file: !2717, line: 573, column: 48)
!6151 = distinct !DILexicalBlock(scope: !6129, file: !2717, line: 573, column: 7)
!6152 = !DILocation(line: 603, column: 9, scope: !6129)
!6153 = !DILocation(line: 603, column: 23, scope: !6129)
!6154 = !DILocation(line: 605, column: 24, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6129, file: !2717, line: 605, column: 7)
!6156 = !DILocation(line: 605, column: 7, scope: !6129)
!6157 = !DILocation(line: 612, column: 9, scope: !6129)
!6158 = !DILocation(line: 612, column: 23, scope: !6129)
!6159 = !DILocation(line: 619, column: 24, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6129, file: !2717, line: 619, column: 7)
!6161 = !DILocation(line: 619, column: 7, scope: !6129)
!6162 = !DILocation(line: 625, column: 9, scope: !6129)
!6163 = !DILocation(line: 625, column: 17, scope: !6129)
!6164 = !DILocation(line: 626, column: 3, scope: !6129)
!6165 = !DILocation(line: 629, column: 20, scope: !6123)
!6166 = !DILocation(line: 629, column: 8, scope: !6123)
!6167 = !DILocation(line: 518, column: 23, scope: !6123)
!6168 = !DILocation(line: 631, column: 2, scope: !6123)
!6169 = distinct !DISubprogram(name: "extract_decimal", scope: !2717, file: !2717, line: 318, type: !6170, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6172)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{!272, !386}
!6172 = !{!6173, !6174, !6175}
!6173 = !DILocalVariable(name: "str", arg: 1, scope: !6169, file: !2717, line: 318, type: !386)
!6174 = !DILocalVariable(name: "sp", scope: !6169, file: !2717, line: 320, type: !140)
!6175 = !DILocalVariable(name: "val", scope: !6169, file: !2717, line: 321, type: !272)
!6176 = !DILocation(line: 0, scope: !6169)
!6177 = !DILocation(line: 320, column: 19, scope: !6169)
!6178 = !DILocation(line: 323, column: 37, scope: !6169)
!6179 = !DILocation(line: 323, column: 17, scope: !6169)
!6180 = !DILocation(line: 323, column: 9, scope: !6169)
!6181 = !DILocation(line: 323, column: 2, scope: !6169)
!6182 = !DILocation(line: 324, column: 13, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6169, file: !2717, line: 323, column: 43)
!6184 = !DILocation(line: 324, column: 24, scope: !6183)
!6185 = !DILocation(line: 324, column: 19, scope: !6183)
!6186 = !DILocation(line: 324, column: 27, scope: !6183)
!6187 = distinct !{!6187, !6181, !6188}
!6188 = !DILocation(line: 325, column: 2, scope: !6169)
!6189 = !DILocation(line: 326, column: 7, scope: !6169)
!6190 = !DILocation(line: 327, column: 2, scope: !6169)
!6191 = distinct !DISubprogram(name: "isdigit", scope: !5971, file: !5971, line: 43, type: !410, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6192)
!6192 = !{!6193}
!6193 = !DILocalVariable(name: "a", arg: 1, scope: !6191, file: !5971, line: 43, type: !125)
!6194 = !DILocation(line: 0, scope: !6191)
!6195 = !DILocation(line: 45, column: 29, scope: !6191)
!6196 = !DILocation(line: 45, column: 45, scope: !6191)
!6197 = !DILocation(line: 45, column: 2, scope: !6191)
!6198 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6199, file: !6199, line: 9, type: !3326, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !639)
!6199 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!6200 = !DILocation(line: 11, column: 1, scope: !6198)
!6201 = !{i64 2147565620, i64 2147565663, i64 2147565703}
!6202 = !DILocation(line: 12, column: 1, scope: !6198)
!6203 = !{i64 2147569847, i64 2147569890, i64 2147569930}
!6204 = !DILocation(line: 13, column: 1, scope: !6198)
!6205 = !{i64 2147570056, i64 2147570099, i64 2147570139}
!6206 = !DILocation(line: 14, column: 1, scope: !6198)
!6207 = !{i64 2147570225, i64 2147570268, i64 2147570308}
!6208 = !DILocation(line: 15, column: 1, scope: !6198)
!6209 = !{i64 2147570388, i64 2147570431, i64 2147570471}
!6210 = !DILocation(line: 16, column: 1, scope: !6198)
!6211 = !{i64 2147570572, i64 2147570615, i64 2147570655}
!6212 = !DILocation(line: 17, column: 1, scope: !6198)
!6213 = !{i64 2147570751, i64 2147570794, i64 2147570834}
!6214 = !DILocation(line: 18, column: 1, scope: !6198)
!6215 = !{i64 2147570993, i64 2147571036, i64 2147571076}
!6216 = !DILocation(line: 19, column: 1, scope: !6198)
!6217 = !{i64 2147571228, i64 2147571271, i64 2147571311}
!6218 = !DILocation(line: 20, column: 1, scope: !6198)
!6219 = !{i64 2147571414, i64 2147571457, i64 2147571497}
!6220 = !DILocation(line: 21, column: 1, scope: !6198)
!6221 = !{i64 2147571630, i64 2147571673, i64 2147571713}
!6222 = !DILocation(line: 22, column: 1, scope: !6198)
!6223 = !{i64 2147571833, i64 2147571876, i64 2147571916}
!6224 = !DILocation(line: 23, column: 1, scope: !6198)
!6225 = !{i64 2147572036, i64 2147572079, i64 2147572119}
!6226 = !DILocation(line: 24, column: 1, scope: !6198)
!6227 = !{i64 2147572211, i64 2147572254, i64 2147572294}
!6228 = !DILocation(line: 25, column: 1, scope: !6198)
!6229 = !{i64 2147572419, i64 2147572462, i64 2147572502}
!6230 = !DILocation(line: 26, column: 1, scope: !6198)
!6231 = !{i64 2147572623, i64 2147572666, i64 2147572706}
!6232 = !DILocation(line: 27, column: 1, scope: !6198)
!6233 = !{i64 2147572816, i64 2147572859, i64 2147572899}
!6234 = !DILocation(line: 28, column: 1, scope: !6198)
!6235 = !{i64 2147573018, i64 2147573061, i64 2147573101}
!6236 = !DILocation(line: 29, column: 1, scope: !6198)
!6237 = !{i64 2147573217, i64 2147573260, i64 2147573300}
!6238 = !DILocation(line: 30, column: 1, scope: !6198)
!6239 = !{i64 2147573444, i64 2147573487, i64 2147573527}
!6240 = !DILocation(line: 31, column: 1, scope: !6198)
!6241 = !{i64 2147573646, i64 2147573689, i64 2147573729}
!6242 = !DILocation(line: 32, column: 1, scope: !6198)
!6243 = !{i64 2147573861, i64 2147573904, i64 2147573944}
!6244 = !DILocation(line: 33, column: 1, scope: !6198)
!6245 = !{i64 2147574042, i64 2147574085, i64 2147574125}
!6246 = !DILocation(line: 34, column: 1, scope: !6198)
!6247 = !{i64 2147574214, i64 2147574257, i64 2147574297}
!6248 = !DILocation(line: 35, column: 1, scope: !6198)
!6249 = !{i64 2147574416, i64 2147574459, i64 2147574499}
!6250 = !DILocation(line: 36, column: 1, scope: !6198)
!6251 = !{i64 2147574642, i64 2147574685, i64 2147574725}
!6252 = !DILocation(line: 37, column: 1, scope: !6198)
!6253 = !{i64 2147574841, i64 2147574884, i64 2147574924}
!6254 = !DILocation(line: 38, column: 1, scope: !6198)
!6255 = !{i64 2147575016, i64 2147575059, i64 2147575099}
!6256 = !DILocation(line: 39, column: 1, scope: !6198)
!6257 = !{i64 2147575269, i64 2147575312, i64 2147575352}
!6258 = !DILocation(line: 40, column: 1, scope: !6198)
!6259 = !{i64 2147575510, i64 2147575553, i64 2147575593}
!6260 = !DILocation(line: 41, column: 1, scope: !6198)
!6261 = !{i64 2147575745, i64 2147575788, i64 2147575828}
!6262 = !DILocation(line: 42, column: 1, scope: !6198)
!6263 = !{i64 2147575977, i64 2147576020, i64 2147576060}
!6264 = !DILocation(line: 43, column: 1, scope: !6198)
!6265 = !{i64 2147576224, i64 2147576267, i64 2147576307}
!6266 = !DILocation(line: 44, column: 1, scope: !6198)
!6267 = !{i64 2147576450, i64 2147576493, i64 2147576533}
!6268 = !DILocation(line: 45, column: 1, scope: !6198)
!6269 = !{i64 2147576676, i64 2147576719, i64 2147576759}
!6270 = !DILocation(line: 46, column: 1, scope: !6198)
!6271 = !{i64 2147576935, i64 2147576978, i64 2147577018}
!6272 = !DILocation(line: 47, column: 1, scope: !6198)
!6273 = !{i64 2147577161, i64 2147577204, i64 2147577244}
!6274 = !DILocation(line: 48, column: 1, scope: !6198)
!6275 = !{i64 2147577396, i64 2147577439, i64 2147577479}
!6276 = !DILocation(line: 49, column: 1, scope: !6198)
!6277 = !{i64 2147577634, i64 2147577677, i64 2147577717}
!6278 = !DILocation(line: 50, column: 1, scope: !6198)
!6279 = !{i64 2147577908, i64 2147577951, i64 2147577991}
!6280 = !DILocation(line: 51, column: 1, scope: !6198)
!6281 = !{i64 2147578146, i64 2147578189, i64 2147578229}
!6282 = !DILocation(line: 52, column: 1, scope: !6198)
!6283 = !{i64 2147578399, i64 2147578442, i64 2147578482}
!6284 = !DILocation(line: 53, column: 1, scope: !6198)
!6285 = !{i64 2147582704, i64 2147582747, i64 2147582787}
!6286 = !DILocation(line: 54, column: 1, scope: !6198)
!6287 = !{i64 2147582954, i64 2147582997, i64 2147583037}
!6288 = !DILocation(line: 55, column: 1, scope: !6198)
!6289 = !{i64 2147583195, i64 2147583238, i64 2147583278}
!6290 = !DILocation(line: 56, column: 1, scope: !6198)
!6291 = !{i64 2147583442, i64 2147583485, i64 2147583525}
!6292 = !DILocation(line: 57, column: 1, scope: !6198)
!6293 = !{i64 2147583677, i64 2147583720, i64 2147583760}
!6294 = !DILocation(line: 58, column: 1, scope: !6198)
!6295 = !{i64 2147583912, i64 2147583955, i64 2147583995}
!6296 = !DILocation(line: 59, column: 1, scope: !6198)
!6297 = !{i64 2147584147, i64 2147584190, i64 2147584230}
!6298 = !DILocation(line: 60, column: 1, scope: !6198)
!6299 = !{i64 2147584385, i64 2147584428, i64 2147584468}
!6300 = !DILocation(line: 61, column: 1, scope: !6198)
!6301 = !{i64 2147584626, i64 2147584669, i64 2147584709}
!6302 = !DILocation(line: 62, column: 1, scope: !6198)
!6303 = !{i64 2147584906, i64 2147584949, i64 2147584989}
!6304 = !DILocation(line: 63, column: 1, scope: !6198)
!6305 = !{i64 2147585165, i64 2147585208, i64 2147585248}
!6306 = !DILocation(line: 64, column: 1, scope: !6198)
!6307 = !{i64 2147585403, i64 2147585446, i64 2147585486}
!6308 = !DILocation(line: 65, column: 1, scope: !6198)
!6309 = !{i64 2147585653, i64 2147585696, i64 2147585736}
!6310 = !DILocation(line: 66, column: 1, scope: !6198)
!6311 = !{i64 2147585882, i64 2147585925, i64 2147585965}
!6312 = !DILocation(line: 67, column: 1, scope: !6198)
!6313 = !{i64 2147586090, i64 2147586133, i64 2147586173}
!6314 = !DILocation(line: 68, column: 1, scope: !6198)
!6315 = !{i64 2147586301, i64 2147586344, i64 2147586384}
!6316 = !DILocation(line: 69, column: 1, scope: !6198)
!6317 = !{i64 2147586536, i64 2147586579, i64 2147586619}
!6318 = !DILocation(line: 70, column: 1, scope: !6198)
!6319 = !{i64 2147586765, i64 2147586808, i64 2147586848}
!6320 = !DILocation(line: 71, column: 1, scope: !6198)
!6321 = !{i64 2147586982, i64 2147587025, i64 2147587065}
!6322 = !DILocation(line: 72, column: 1, scope: !6198)
!6323 = !{i64 2147587211, i64 2147587254, i64 2147587294}
!6324 = !DILocation(line: 73, column: 1, scope: !6198)
!6325 = !{i64 2147587449, i64 2147587492, i64 2147587532}
!6326 = !DILocation(line: 74, column: 1, scope: !6198)
!6327 = !{i64 2147587681, i64 2147587724, i64 2147587764}
!6328 = !DILocation(line: 75, column: 1, scope: !6198)
!6329 = !{i64 2147587907, i64 2147587950, i64 2147587990}
!6330 = !DILocation(line: 76, column: 1, scope: !6198)
!6331 = !{i64 2147588124, i64 2147588167, i64 2147588207}
!6332 = !DILocation(line: 77, column: 1, scope: !6198)
!6333 = !{i64 2147588356, i64 2147588399, i64 2147588439}
!6334 = !DILocation(line: 78, column: 1, scope: !6198)
!6335 = !{i64 2147588582, i64 2147588625, i64 2147588665}
!6336 = !DILocation(line: 79, column: 1, scope: !6198)
!6337 = !{i64 2147588796, i64 2147588839, i64 2147588879}
!6338 = !DILocation(line: 80, column: 1, scope: !6198)
!6339 = !{i64 2147589016, i64 2147589059, i64 2147589099}
!6340 = !DILocation(line: 81, column: 1, scope: !6198)
!6341 = !{i64 2147589248, i64 2147589291, i64 2147589331}
!6342 = !DILocation(line: 82, column: 1, scope: !6198)
!6343 = !{i64 2147589456, i64 2147589499, i64 2147589539}
!6344 = !DILocation(line: 83, column: 1, scope: !6198)
!6345 = !{i64 2147589661, i64 2147589704, i64 2147589744}
!6346 = !DILocation(line: 84, column: 1, scope: !6198)
!6347 = !{i64 2147589878, i64 2147589921, i64 2147589961}
!6348 = !DILocation(line: 85, column: 1, scope: !6198)
!6349 = !{i64 2147590092, i64 2147590135, i64 2147590175}
!6350 = !DILocation(line: 86, column: 1, scope: !6198)
!6351 = !{i64 2147590318, i64 2147590361, i64 2147590401}
!6352 = !DILocation(line: 87, column: 1, scope: !6198)
!6353 = !{i64 2147590538, i64 2147590581, i64 2147590621}
!6354 = !DILocation(line: 88, column: 1, scope: !6198)
!6355 = !{i64 2147590743, i64 2147590786, i64 2147590826}
!6356 = !DILocation(line: 89, column: 1, scope: !6198)
!6357 = !{i64 2147595036, i64 2147595079, i64 2147595119}
!6358 = !DILocation(line: 90, column: 1, scope: !6198)
!6359 = !{i64 2147595271, i64 2147595314, i64 2147595354}
!6360 = !DILocation(line: 91, column: 1, scope: !6198)
!6361 = !{i64 2147595521, i64 2147595564, i64 2147595604}
!6362 = !DILocation(line: 92, column: 1, scope: !6198)
!6363 = !{i64 2147595771, i64 2147595814, i64 2147595854}
!6364 = !DILocation(line: 93, column: 1, scope: !6198)
!6365 = !{i64 2147596009, i64 2147596052, i64 2147596092}
!6366 = !DILocation(line: 94, column: 1, scope: !6198)
!6367 = !{i64 2147596220, i64 2147596263, i64 2147596303}
!6368 = !DILocation(line: 95, column: 1, scope: !6198)
!6369 = !{i64 2147596437, i64 2147596480, i64 2147596520}
!6370 = !DILocation(line: 96, column: 1, scope: !6198)
!6371 = !{i64 2147596633, i64 2147596676, i64 2147596716}
!6372 = !DILocation(line: 97, column: 1, scope: !6198)
!6373 = !{i64 2147596835, i64 2147596878, i64 2147596918}
!6374 = !DILocation(line: 98, column: 1, scope: !6198)
!6375 = !{i64 2147597028, i64 2147597071, i64 2147597111}
!6376 = !DILocation(line: 99, column: 1, scope: !6198)
!6377 = !{i64 2147597236, i64 2147597279, i64 2147597319}
!6378 = !DILocation(line: 100, column: 1, scope: !6198)
!6379 = !{i64 2147597429, i64 2147597472, i64 2147597512}
!6380 = !DILocation(line: 101, column: 1, scope: !6198)
!6381 = !{i64 2147597634, i64 2147597677, i64 2147597717}
!6382 = !DILocation(line: 102, column: 1, scope: !6198)
!6383 = !{i64 2147597839, i64 2147597882, i64 2147597922}
!6384 = !DILocation(line: 103, column: 1, scope: !6198)
!6385 = !{i64 2147598044, i64 2147598087, i64 2147598127}
!6386 = !DILocation(line: 104, column: 1, scope: !6198)
!6387 = !{i64 2147598252, i64 2147598295, i64 2147598335}
!6388 = !DILocation(line: 105, column: 1, scope: !6198)
!6389 = !{i64 2147598448, i64 2147598491, i64 2147598531}
!6390 = !DILocation(line: 106, column: 1, scope: !6198)
!6391 = !{i64 2147598650, i64 2147598693, i64 2147598733}
!6392 = !DILocation(line: 107, column: 1, scope: !6198)
!6393 = !{i64 2147598861, i64 2147598904, i64 2147598944}
!6394 = !DILocation(line: 108, column: 1, scope: !6198)
!6395 = !{i64 2147599060, i64 2147599103, i64 2147599143}
!6396 = !DILocation(line: 109, column: 1, scope: !6198)
!6397 = !{i64 2147599235, i64 2147599278, i64 2147599318}
!6398 = !DILocation(line: 110, column: 1, scope: !6198)
!6399 = !{i64 2147599419, i64 2147599462, i64 2147599502}
!6400 = !DILocation(line: 111, column: 1, scope: !6198)
!6401 = !{i64 2147599621, i64 2147599664, i64 2147599704}
!6402 = !DILocation(line: 112, column: 1, scope: !6198)
!6403 = !{i64 2147599820, i64 2147599863, i64 2147599903}
!6404 = !DILocation(line: 113, column: 1, scope: !6198)
!6405 = !{i64 2147600025, i64 2147600068, i64 2147600108}
!6406 = !DILocation(line: 114, column: 1, scope: !6198)
!6407 = !{i64 2147600218, i64 2147600261, i64 2147600301}
!6408 = !DILocation(line: 115, column: 1, scope: !6198)
!6409 = !{i64 2147600384, i64 2147600427, i64 2147600467}
!6410 = !DILocation(line: 116, column: 1, scope: !6198)
!6411 = !{i64 2147600568, i64 2147600611, i64 2147600651}
!6412 = !DILocation(line: 117, column: 1, scope: !6198)
!6413 = !{i64 2147600758, i64 2147600801, i64 2147600841}
!6414 = !DILocation(line: 118, column: 1, scope: !6198)
!6415 = !{i64 2147600942, i64 2147600985, i64 2147601025}
!6416 = !DILocation(line: 119, column: 1, scope: !6198)
!6417 = !{i64 2147601156, i64 2147601199, i64 2147601239}
!6418 = !DILocation(line: 120, column: 1, scope: !6198)
!6419 = !{i64 2147601367, i64 2147601410, i64 2147601450}
!6420 = !DILocation(line: 121, column: 1, scope: !6198)
!6421 = !{i64 2147601590, i64 2147601633, i64 2147601673}
!6422 = !DILocation(line: 122, column: 1, scope: !6198)
!6423 = !{i64 2147601774, i64 2147601817, i64 2147601857}
!6424 = !DILocation(line: 123, column: 1, scope: !6198)
!6425 = !{i64 2147601988, i64 2147602031, i64 2147602071}
!6426 = !DILocation(line: 124, column: 1, scope: !6198)
!6427 = !{i64 2147602154, i64 2147602197, i64 2147602237}
!6428 = !DILocation(line: 125, column: 1, scope: !6198)
!6429 = !{i64 2147602335, i64 2147602378, i64 2147602418}
!6430 = !DILocation(line: 126, column: 1, scope: !6198)
!6431 = !{i64 2147602528, i64 2147602571, i64 2147602611}
!6432 = !DILocation(line: 127, column: 1, scope: !6198)
!6433 = !{i64 2147602754, i64 2147602797, i64 2147602837}
!6434 = !DILocation(line: 128, column: 1, scope: !6198)
!6435 = !{i64 2147602968, i64 2147603011, i64 2147603051}
!6436 = !DILocation(line: 129, column: 1, scope: !6198)
!6437 = !{i64 2147603194, i64 2147603237, i64 2147603277}
!6438 = !DILocation(line: 130, column: 1, scope: !6198)
!6439 = !{i64 2147603411, i64 2147603454, i64 2147603494}
!6440 = !DILocation(line: 131, column: 1, scope: !6198)
!6441 = !{i64 2147603688, i64 2147603731, i64 2147603771}
!6442 = !DILocation(line: 132, column: 1, scope: !6198)
!6443 = !{i64 2147603914, i64 2147603957, i64 2147603997}
!6444 = !DILocation(line: 133, column: 1, scope: !6198)
!6445 = !{i64 2147608183, i64 2147608226, i64 2147608266}
!6446 = !DILocation(line: 134, column: 1, scope: !6198)
!6447 = !{i64 2147608379, i64 2147608422, i64 2147608462}
!6448 = !DILocation(line: 135, column: 1, scope: !6198)
!6449 = !{i64 2147608644, i64 2147608687, i64 2147608727}
!6450 = !DILocation(line: 136, column: 1, scope: !6198)
!6451 = !{i64 2147608858, i64 2147608901, i64 2147608941}
!6452 = !DILocation(line: 137, column: 1, scope: !6198)
!6453 = !{i64 2147609033, i64 2147609076, i64 2147609116}
!6454 = !DILocation(line: 138, column: 1, scope: !6198)
!6455 = !{i64 2147609287, i64 2147609330, i64 2147609370}
!6456 = !DILocation(line: 139, column: 1, scope: !6198)
!6457 = !{i64 2147609486, i64 2147609529, i64 2147609569}
!6458 = !DILocation(line: 140, column: 1, scope: !6198)
!6459 = !{i64 2147609728, i64 2147609771, i64 2147609811}
!6460 = !DILocation(line: 141, column: 1, scope: !6198)
!6461 = !{i64 2147609891, i64 2147609934, i64 2147609974}
!6462 = !DILocation(line: 142, column: 1, scope: !6198)
!6463 = !{i64 2147610078, i64 2147610121, i64 2147610161}
!6464 = !DILocation(line: 143, column: 1, scope: !6198)
!6465 = !{i64 2147610286, i64 2147610329, i64 2147610369}
!6466 = !DILocation(line: 144, column: 1, scope: !6198)
!6467 = !{i64 2147610482, i64 2147610525, i64 2147610565}
!6468 = !DILocation(line: 145, column: 1, scope: !6198)
!6469 = !{i64 2147610675, i64 2147610718, i64 2147610758}
!6470 = !DILocation(line: 146, column: 1, scope: !6198)
!6471 = !{i64 2147610857, i64 2147610900, i64 2147610940}
!6472 = !DILocation(line: 147, column: 1, scope: !6198)
!6473 = !{i64 2147611071, i64 2147611114, i64 2147611154}
!6474 = !DILocation(line: 148, column: 1, scope: !6198)
!6475 = !{i64 2147611282, i64 2147611325, i64 2147611365}
!6476 = !DILocation(line: 149, column: 1, scope: !6198)
!6477 = !{i64 2147611502, i64 2147611545, i64 2147611585}
!6478 = !DILocation(line: 150, column: 1, scope: !6198)
!6479 = !{i64 2147611709, i64 2147611752, i64 2147611792}
!6480 = !DILocation(line: 151, column: 1, scope: !6198)
!6481 = !{i64 2147611982, i64 2147612025, i64 2147612065}
!6482 = !DILocation(line: 152, column: 1, scope: !6198)
!6483 = !{i64 2147612230, i64 2147612273, i64 2147612313}
!6484 = !DILocation(line: 153, column: 1, scope: !6198)
!6485 = !{i64 2147612429, i64 2147612472, i64 2147612512}
!6486 = !DILocation(line: 154, column: 1, scope: !6198)
!6487 = !{i64 2147612664, i64 2147612707, i64 2147612747}
!6488 = !DILocation(line: 155, column: 1, scope: !6198)
!6489 = !{i64 2147612914, i64 2147612957, i64 2147612997}
!6490 = !DILocation(line: 156, column: 1, scope: !6198)
!6491 = !{i64 2147613116, i64 2147613159, i64 2147613199}
!6492 = !DILocation(line: 157, column: 1, scope: !6198)
!6493 = !{i64 2147613339, i64 2147613382, i64 2147613422}
!6494 = !DILocation(line: 158, column: 1, scope: !6198)
!6495 = !{i64 2147613553, i64 2147613596, i64 2147613636}
!6496 = !DILocation(line: 159, column: 1, scope: !6198)
!6497 = !{i64 2147613797, i64 2147613840, i64 2147613880}
!6498 = !DILocation(line: 160, column: 1, scope: !6198)
!6499 = !{i64 2147614026, i64 2147614069, i64 2147614109}
!6500 = !DILocation(line: 161, column: 1, scope: !6198)
!6501 = !{i64 2147614255, i64 2147614298, i64 2147614338}
!6502 = !DILocation(line: 162, column: 1, scope: !6198)
!6503 = !{i64 2147614463, i64 2147614506, i64 2147614546}
!6504 = !DILocation(line: 163, column: 1, scope: !6198)
!6505 = !{i64 2147614701, i64 2147614744, i64 2147614784}
!6506 = !DILocation(line: 164, column: 1, scope: !6198)
!6507 = !{i64 2147614927, i64 2147614970, i64 2147615010}
!6508 = !DILocation(line: 165, column: 1, scope: !6198)
!6509 = !{i64 2147615186, i64 2147615229, i64 2147615269}
!6510 = !DILocation(line: 166, column: 1, scope: !6198)
!6511 = !{i64 2147615406, i64 2147615449, i64 2147615489}
!6512 = !DILocation(line: 167, column: 1, scope: !6198)
!6513 = !{i64 2147615638, i64 2147615681, i64 2147615721}
!6514 = !DILocation(line: 168, column: 1, scope: !6198)
!6515 = !{i64 2147615879, i64 2147615922, i64 2147615962}
!6516 = !DILocation(line: 169, column: 1, scope: !6198)
!6517 = !{i64 2147616120, i64 2147616163, i64 2147616203}
!6518 = !DILocation(line: 170, column: 1, scope: !6198)
!6519 = !{i64 2147616343, i64 2147616386, i64 2147616426}
!6520 = !DILocation(line: 171, column: 1, scope: !6198)
!6521 = !{i64 2147616560, i64 2147616603, i64 2147616643}
!6522 = !DILocation(line: 172, column: 1, scope: !6198)
!6523 = !{i64 2147620862, i64 2147620905, i64 2147620945}
!6524 = !DILocation(line: 173, column: 1, scope: !6198)
!6525 = !{i64 2147621049, i64 2147621092, i64 2147621132}
!6526 = !DILocation(line: 174, column: 1, scope: !6198)
!6527 = !{i64 2147621236, i64 2147621279, i64 2147621319}
!6528 = !DILocation(line: 175, column: 1, scope: !6198)
!6529 = !{i64 2147621399, i64 2147621442, i64 2147621482}
!6530 = !DILocation(line: 176, column: 1, scope: !6198)
!6531 = !{i64 2147621604, i64 2147621647, i64 2147621687}
!6532 = !DILocation(line: 177, column: 1, scope: !6198)
!6533 = !{i64 2147621797, i64 2147621840, i64 2147621880}
!6534 = !DILocation(line: 178, column: 1, scope: !6198)
!6535 = !{i64 2147622056, i64 2147622099, i64 2147622139}
!6536 = !DILocation(line: 179, column: 1, scope: !6198)
!6537 = !{i64 2147622279, i64 2147622322, i64 2147622362}
!6538 = !DILocation(line: 180, column: 1, scope: !6198)
!6539 = !{i64 2147622508, i64 2147622551, i64 2147622591}
!6540 = !DILocation(line: 181, column: 1, scope: !6198)
!6541 = !{i64 2147622722, i64 2147622765, i64 2147622805}
!6542 = !DILocation(line: 182, column: 1, scope: !6198)
!6543 = !{i64 2147622924, i64 2147622967, i64 2147623007}
!6544 = !DILocation(line: 183, column: 1, scope: !6198)
!6545 = !{i64 2147623120, i64 2147623163, i64 2147623203}
!6546 = !DILocation(line: 184, column: 1, scope: !6198)
!6547 = !{i64 2147623332, i64 2147623375, i64 2147623415}
!6548 = !DILocation(line: 185, column: 1, scope: !6198)
!6549 = !{i64 2147623553, i64 2147623596, i64 2147623636}
!6550 = !DILocation(line: 186, column: 1, scope: !6198)
!6551 = !{i64 2147623767, i64 2147623810, i64 2147623850}
!6552 = !DILocation(line: 187, column: 1, scope: !6198)
!6553 = !{i64 2147623957, i64 2147624000, i64 2147624040}
!6554 = !DILocation(line: 188, column: 1, scope: !6198)
!6555 = !{i64 2147624156, i64 2147624199, i64 2147624239}
!6556 = !DILocation(line: 189, column: 1, scope: !6198)
!6557 = !{i64 2147624361, i64 2147624404, i64 2147624444}
!6558 = !DILocation(line: 190, column: 1, scope: !6198)
!6559 = !{i64 2147624581, i64 2147624624, i64 2147624664}
!6560 = !DILocation(line: 191, column: 1, scope: !6198)
!6561 = !{i64 2147624782, i64 2147624825, i64 2147624865}
!6562 = !DILocation(line: 192, column: 1, scope: !6198)
!6563 = !{i64 2147624981, i64 2147625024, i64 2147625064}
!6564 = !DILocation(line: 193, column: 1, scope: !6198)
!6565 = !{i64 2147625186, i64 2147625229, i64 2147625269}
!6566 = !DILocation(line: 194, column: 1, scope: !6198)
!6567 = !{i64 2147625355, i64 2147625398, i64 2147625438}
!6568 = !DILocation(line: 195, column: 1, scope: !6198)
!6569 = !{i64 2147625539, i64 2147625582, i64 2147625622}
!6570 = !DILocation(line: 196, column: 1, scope: !6198)
!6571 = !{i64 2147625723, i64 2147625766, i64 2147625806}
!6572 = !DILocation(line: 197, column: 1, scope: !6198)
!6573 = !{i64 2147625910, i64 2147625953, i64 2147625993}
!6574 = !DILocation(line: 198, column: 1, scope: !6198)
!6575 = !{i64 2147626094, i64 2147626137, i64 2147626177}
!6576 = !DILocation(line: 199, column: 1, scope: !6198)
!6577 = !{i64 2147626332, i64 2147626375, i64 2147626415}
!6578 = !DILocation(line: 200, column: 1, scope: !6198)
!6579 = !{i64 2147626562, i64 2147626605, i64 2147626645}
!6580 = !DILocation(line: 201, column: 1, scope: !6198)
!6581 = !{i64 2147626791, i64 2147626834, i64 2147626874}
!6582 = !DILocation(line: 202, column: 1, scope: !6198)
!6583 = !{i64 2147626978, i64 2147627021, i64 2147627061}
!6584 = !DILocation(line: 203, column: 1, scope: !6198)
!6585 = !{i64 2147627174, i64 2147627217, i64 2147627257}
!6586 = !DILocation(line: 204, column: 1, scope: !6198)
!6587 = !{i64 2147627382, i64 2147627425, i64 2147627465}
!6588 = !DILocation(line: 205, column: 1, scope: !6198)
!6589 = !{i64 2147627594, i64 2147627637, i64 2147627677}
!6590 = !DILocation(line: 206, column: 1, scope: !6198)
!6591 = !{i64 2147627793, i64 2147627836, i64 2147627876}
!6592 = !DILocation(line: 207, column: 1, scope: !6198)
!6593 = !{i64 2147628031, i64 2147628074, i64 2147628114}
!6594 = !DILocation(line: 208, column: 1, scope: !6198)
!6595 = !{i64 2147628227, i64 2147628270, i64 2147628310}
!6596 = !DILocation(line: 209, column: 1, scope: !6198)
!6597 = !{i64 2147628429, i64 2147628472, i64 2147628512}
!6598 = !DILocation(line: 210, column: 1, scope: !6198)
!6599 = !{i64 2147628622, i64 2147628665, i64 2147628705}
!6600 = !DILocation(line: 211, column: 1, scope: !6198)
!6601 = !{i64 2147628856, i64 2147628899, i64 2147628939}
!6602 = !DILocation(line: 212, column: 1, scope: !6198)
!6603 = !{i64 2147629019, i64 2147629062, i64 2147629102}
!6604 = !DILocation(line: 213, column: 1, scope: !6198)
!6605 = !{i64 2147629258, i64 2147629301, i64 2147629341}
!6606 = !DILocation(line: 214, column: 1, scope: !6198)
!6607 = !{i64 2147629497, i64 2147629540, i64 2147629580}
!6608 = !DILocation(line: 215, column: 1, scope: !6198)
!6609 = !{i64 2147629733, i64 2147629776, i64 2147629816}
!6610 = !DILocation(line: 216, column: 1, scope: !6198)
!6611 = !{i64 2147634024, i64 2147634067, i64 2147634107}
!6612 = !DILocation(line: 217, column: 1, scope: !6198)
!6613 = !{i64 2147634211, i64 2147634254, i64 2147634294}
!6614 = !DILocation(line: 218, column: 1, scope: !6198)
!6615 = !{i64 2147634410, i64 2147634453, i64 2147634493}
!6616 = !DILocation(line: 219, column: 1, scope: !6198)
!6617 = !{i64 2147634681, i64 2147634724, i64 2147634764}
!6618 = !DILocation(line: 220, column: 1, scope: !6198)
!6619 = !{i64 2147634856, i64 2147634899, i64 2147634939}
!6620 = !DILocation(line: 221, column: 1, scope: !6198)
!6621 = !{i64 2147635090, i64 2147635133, i64 2147635173}
!6622 = !DILocation(line: 222, column: 1, scope: !6198)
!6623 = !{i64 2147635298, i64 2147635341, i64 2147635381}
!6624 = !DILocation(line: 223, column: 1, scope: !6198)
!6625 = !{i64 2147635516, i64 2147635559, i64 2147635599}
!6626 = !DILocation(line: 224, column: 1, scope: !6198)
!6627 = !{i64 2147635706, i64 2147635749, i64 2147635789}
!6628 = !DILocation(line: 225, column: 1, scope: !6198)
!6629 = !{i64 2147635938, i64 2147635981, i64 2147636021}
!6630 = !DILocation(line: 226, column: 1, scope: !6198)
!6631 = !{i64 2147636158, i64 2147636201, i64 2147636241}
!6632 = !DILocation(line: 227, column: 1, scope: !6198)
!6633 = !{i64 2147636354, i64 2147636397, i64 2147636437}
!6634 = !DILocation(line: 228, column: 1, scope: !6198)
!6635 = !{i64 2147636560, i64 2147636603, i64 2147636643}
!6636 = !DILocation(line: 229, column: 1, scope: !6198)
!6637 = !{i64 2147636765, i64 2147636808, i64 2147636848}
!6638 = !DILocation(line: 230, column: 1, scope: !6198)
!6639 = !{i64 2147636991, i64 2147637034, i64 2147637074}
!6640 = !DILocation(line: 231, column: 1, scope: !6198)
!6641 = !{i64 2147637199, i64 2147637242, i64 2147637282}
!6642 = !DILocation(line: 232, column: 1, scope: !6198)
!6643 = !{i64 2147637395, i64 2147637438, i64 2147637478}
!6644 = !DILocation(line: 233, column: 1, scope: !6198)
!6645 = !{i64 2147637627, i64 2147637670, i64 2147637710}
!6646 = !DILocation(line: 234, column: 1, scope: !6198)
!6647 = !{i64 2147637811, i64 2147637854, i64 2147637894}
!6648 = !DILocation(line: 235, column: 1, scope: !6198)
!6649 = !{i64 2147638020, i64 2147638063, i64 2147638103}
!6650 = !DILocation(line: 236, column: 1, scope: !6198)
!6651 = !{i64 2147638228, i64 2147638271, i64 2147638311}
!6652 = !DILocation(line: 237, column: 1, scope: !6198)
!6653 = !{i64 2147638424, i64 2147638467, i64 2147638507}
!6654 = !DILocation(line: 238, column: 1, scope: !6198)
!6655 = !{i64 2147638608, i64 2147638651, i64 2147638691}
!6656 = !DILocation(line: 239, column: 1, scope: !6198)
!6657 = !{i64 2147638834, i64 2147638877, i64 2147638917}
!6658 = !DILocation(line: 240, column: 1, scope: !6198)
!6659 = !{i64 2147639060, i64 2147639103, i64 2147639143}
!6660 = !DILocation(line: 241, column: 1, scope: !6198)
!6661 = !{i64 2147639286, i64 2147639329, i64 2147639369}
!6662 = !DILocation(line: 242, column: 1, scope: !6198)
!6663 = !{i64 2147639512, i64 2147639555, i64 2147639595}
!6664 = !DILocation(line: 243, column: 1, scope: !6198)
!6665 = !{i64 2147639738, i64 2147639781, i64 2147639821}
!6666 = !DILocation(line: 244, column: 1, scope: !6198)
!6667 = !{i64 2147639970, i64 2147640013, i64 2147640053}
!6668 = !DILocation(line: 245, column: 1, scope: !6198)
!6669 = !{i64 2147640208, i64 2147640251, i64 2147640291}
!6670 = !DILocation(line: 246, column: 1, scope: !6198)
!6671 = !{i64 2147640428, i64 2147640471, i64 2147640511}
!6672 = !DILocation(line: 247, column: 1, scope: !6198)
!6673 = !{i64 2147640672, i64 2147640715, i64 2147640755}
!6674 = !DILocation(line: 248, column: 1, scope: !6198)
!6675 = !{i64 2147640913, i64 2147640956, i64 2147640996}
!6676 = !DILocation(line: 249, column: 1, scope: !6198)
!6677 = !{i64 2147641148, i64 2147641191, i64 2147641231}
!6678 = !DILocation(line: 250, column: 1, scope: !6198)
!6679 = !{i64 2147641380, i64 2147641423, i64 2147641463}
!6680 = !DILocation(line: 251, column: 1, scope: !6198)
!6681 = !{i64 2147641582, i64 2147641625, i64 2147641665}
!6682 = !DILocation(line: 252, column: 1, scope: !6198)
!6683 = !{i64 2147641832, i64 2147641875, i64 2147641915}
!6684 = !DILocation(line: 253, column: 1, scope: !6198)
!6685 = !{i64 2147642070, i64 2147642113, i64 2147642153}
!6686 = !DILocation(line: 254, column: 1, scope: !6198)
!6687 = !{i64 2147642278, i64 2147642321, i64 2147642361}
!6688 = !DILocation(line: 255, column: 1, scope: !6198)
!6689 = !{i64 2147642474, i64 2147642517, i64 2147642557}
!6690 = !DILocation(line: 256, column: 1, scope: !6198)
!6691 = !{i64 2147642658, i64 2147642701, i64 2147642741}
!6692 = !DILocation(line: 257, column: 1, scope: !6198)
!6693 = !{i64 2147646936, i64 2147646979, i64 2147647019}
!6694 = !DILocation(line: 258, column: 1, scope: !6198)
!6695 = !{i64 2147647141, i64 2147647184, i64 2147647224}
!6696 = !DILocation(line: 259, column: 1, scope: !6198)
!6697 = !{i64 2147647376, i64 2147647419, i64 2147647459}
!6698 = !DILocation(line: 260, column: 1, scope: !6198)
!6699 = !{i64 2147647599, i64 2147647642, i64 2147647682}
!6700 = !DILocation(line: 261, column: 1, scope: !6198)
!6701 = !{i64 2147647823, i64 2147647866, i64 2147647906}
!6702 = !DILocation(line: 262, column: 1, scope: !6198)
!6703 = !{i64 2147648061, i64 2147648104, i64 2147648144}
!6704 = !DILocation(line: 263, column: 1, scope: !6198)
!6705 = !{i64 2147648299, i64 2147648342, i64 2147648382}
!6706 = !DILocation(line: 264, column: 1, scope: !6198)
!6707 = !{i64 2147648471, i64 2147648514, i64 2147648554}
!6708 = !DILocation(line: 265, column: 1, scope: !6198)
!6709 = !{i64 2147648686, i64 2147648729, i64 2147648769}
!6710 = !DILocation(line: 266, column: 1, scope: !6198)
!6711 = !{i64 2147648900, i64 2147648943, i64 2147648983}
!6712 = !DILocation(line: 267, column: 1, scope: !6198)
!6713 = !{i64 2147649102, i64 2147649145, i64 2147649185}
!6714 = !DILocation(line: 268, column: 1, scope: !6198)
!6715 = !{i64 2147649319, i64 2147649362, i64 2147649402}
!6716 = !DILocation(line: 269, column: 1, scope: !6198)
!6717 = !{i64 2147649572, i64 2147649615, i64 2147649655}
!6718 = !DILocation(line: 270, column: 1, scope: !6198)
!6719 = !{i64 2147649816, i64 2147649859, i64 2147649899}
!6720 = !DILocation(line: 271, column: 1, scope: !6198)
!6721 = !{i64 2147650033, i64 2147650076, i64 2147650116}
!6722 = !DILocation(line: 272, column: 1, scope: !6198)
!6723 = !{i64 2147650238, i64 2147650281, i64 2147650321}
!6724 = !DILocation(line: 273, column: 1, scope: !6198)
!6725 = !{i64 2147650431, i64 2147650474, i64 2147650514}
!6726 = !DILocation(line: 274, column: 1, scope: !6198)
!6727 = !{i64 2147650684, i64 2147650727, i64 2147650767}
!6728 = !DILocation(line: 275, column: 1, scope: !6198)
!6729 = !{i64 2147650892, i64 2147650935, i64 2147650975}
!6730 = !DILocation(line: 276, column: 1, scope: !6198)
!6731 = !{i64 2147651088, i64 2147651131, i64 2147651171}
!6732 = !DILocation(line: 277, column: 1, scope: !6198)
!6733 = !{i64 2147651302, i64 2147651345, i64 2147651385}
!6734 = !DILocation(line: 278, column: 1, scope: !6198)
!6735 = !{i64 2147651510, i64 2147651553, i64 2147651593}
!6736 = !DILocation(line: 279, column: 1, scope: !6198)
!6737 = !{i64 2147651700, i64 2147651743, i64 2147651783}
!6738 = !DILocation(line: 280, column: 1, scope: !6198)
!6739 = !{i64 2147651914, i64 2147651957, i64 2147651997}
!6740 = !DILocation(line: 281, column: 1, scope: !6198)
!6741 = !{i64 2147652176, i64 2147652219, i64 2147652259}
!6742 = !DILocation(line: 282, column: 1, scope: !6198)
!6743 = !{i64 2147652387, i64 2147652430, i64 2147652470}
!6744 = !DILocation(line: 283, column: 1, scope: !6198)
!6745 = !{i64 2147652631, i64 2147652674, i64 2147652714}
!6746 = !DILocation(line: 284, column: 1, scope: !6198)
!6747 = !{i64 2147652842, i64 2147652885, i64 2147652925}
!6748 = !DILocation(line: 285, column: 1, scope: !6198)
!6749 = !{i64 2147653071, i64 2147653114, i64 2147653154}
!6750 = !DILocation(line: 286, column: 1, scope: !6198)
!6751 = !{i64 2147653336, i64 2147653379, i64 2147653419}
!6752 = !DILocation(line: 287, column: 1, scope: !6198)
!6753 = !{i64 2147653541, i64 2147653584, i64 2147653624}
!6754 = !DILocation(line: 288, column: 1, scope: !6198)
!6755 = !{i64 2147653737, i64 2147653780, i64 2147653820}
!6756 = !DILocation(line: 289, column: 1, scope: !6198)
!6757 = !{i64 2147653960, i64 2147654003, i64 2147654043}
!6758 = !DILocation(line: 290, column: 1, scope: !6198)
!6759 = !{i64 2147654123, i64 2147654166, i64 2147654206}
!6760 = !DILocation(line: 291, column: 1, scope: !6198)
!6761 = !{i64 2147654328, i64 2147654371, i64 2147654411}
!6762 = !DILocation(line: 292, column: 1, scope: !6198)
!6763 = !{i64 2147654548, i64 2147654591, i64 2147654631}
!6764 = !DILocation(line: 293, column: 1, scope: !6198)
!6765 = !{i64 2147654762, i64 2147654805, i64 2147654845}
!6766 = !DILocation(line: 294, column: 1, scope: !6198)
!6767 = !{i64 2147655006, i64 2147655049, i64 2147655089}
!6768 = !DILocation(line: 295, column: 1, scope: !6198)
!6769 = !{i64 2147655238, i64 2147655281, i64 2147655321}
!6770 = !DILocation(line: 296, column: 1, scope: !6198)
!6771 = !{i64 2147659513, i64 2147659556, i64 2147659596}
!6772 = !DILocation(line: 297, column: 1, scope: !6198)
!6773 = !{i64 2147659724, i64 2147659767, i64 2147659807}
!6774 = !DILocation(line: 298, column: 1, scope: !6198)
!6775 = !{i64 2147659917, i64 2147659960, i64 2147660000}
!6776 = !DILocation(line: 299, column: 1, scope: !6198)
!6777 = !{i64 2147660116, i64 2147660159, i64 2147660199}
!6778 = !DILocation(line: 300, column: 1, scope: !6198)
!6779 = !{i64 2147660288, i64 2147660331, i64 2147660371}
!6780 = !DILocation(line: 301, column: 1, scope: !6198)
!6781 = !{i64 2147660481, i64 2147660524, i64 2147660564}
!6782 = !DILocation(line: 302, column: 1, scope: !6198)
!6783 = !{i64 2147660677, i64 2147660720, i64 2147660760}
!6784 = !DILocation(line: 303, column: 1, scope: !6198)
!6785 = !{i64 2147660840, i64 2147660883, i64 2147660923}
!6786 = !DILocation(line: 304, column: 1, scope: !6198)
!6787 = !{i64 2147661042, i64 2147661085, i64 2147661125}
!6788 = !DILocation(line: 305, column: 1, scope: !6198)
!6789 = !{i64 2147661247, i64 2147661290, i64 2147661330}
!6790 = !DILocation(line: 306, column: 1, scope: !6198)
!6791 = !{i64 2147661455, i64 2147661498, i64 2147661538}
!6792 = !DILocation(line: 307, column: 1, scope: !6198)
!6793 = !{i64 2147661648, i64 2147661691, i64 2147661731}
!6794 = !DILocation(line: 308, column: 1, scope: !6198)
!6795 = !{i64 2147661835, i64 2147661878, i64 2147661918}
!6796 = !DILocation(line: 309, column: 1, scope: !6198)
!6797 = !{i64 2147662062, i64 2147662105, i64 2147662145}
!6798 = !DILocation(line: 310, column: 1, scope: !6198)
!6799 = !{i64 2147662279, i64 2147662322, i64 2147662362}
!6800 = !DILocation(line: 311, column: 1, scope: !6198)
!6801 = !{i64 2147662571, i64 2147662614, i64 2147662654}
!6802 = !DILocation(line: 312, column: 1, scope: !6198)
!6803 = !{i64 2147662803, i64 2147662846, i64 2147662886}
!6804 = !DILocation(line: 313, column: 1, scope: !6198)
!6805 = !{i64 2147663020, i64 2147663063, i64 2147663103}
!6806 = !DILocation(line: 314, column: 1, scope: !6198)
!6807 = !{i64 2147663227, i64 2147663270, i64 2147663310}
!6808 = !DILocation(line: 315, column: 1, scope: !6198)
!6809 = !{i64 2147663428, i64 2147663471, i64 2147663511}
!6810 = !DILocation(line: 316, column: 1, scope: !6198)
!6811 = !{i64 2147663660, i64 2147663703, i64 2147663743}
!6812 = !DILocation(line: 317, column: 1, scope: !6198)
!6813 = !{i64 2147663868, i64 2147663911, i64 2147663951}
!6814 = !DILocation(line: 318, column: 1, scope: !6198)
!6815 = !{i64 2147664058, i64 2147664101, i64 2147664141}
!6816 = !DILocation(line: 319, column: 1, scope: !6198)
!6817 = !{i64 2147664284, i64 2147664327, i64 2147664367}
!6818 = !DILocation(line: 320, column: 1, scope: !6198)
!6819 = !{i64 2147664473, i64 2147664516, i64 2147664556}
!6820 = !DILocation(line: 321, column: 1, scope: !6198)
!6821 = !{i64 2147664744, i64 2147664787, i64 2147664827}
!6822 = !DILocation(line: 322, column: 1, scope: !6198)
!6823 = !{i64 2147664964, i64 2147665007, i64 2147665047}
!6824 = !DILocation(line: 323, column: 1, scope: !6198)
!6825 = !{i64 2147665217, i64 2147665260, i64 2147665300}
!6826 = !DILocation(line: 324, column: 1, scope: !6198)
!6827 = !{i64 2147665425, i64 2147665468, i64 2147665508}
!6828 = !DILocation(line: 325, column: 1, scope: !6198)
!6829 = !{i64 2147665657, i64 2147665700, i64 2147665740}
!6830 = !DILocation(line: 326, column: 1, scope: !6198)
!6831 = !{i64 2147665868, i64 2147665911, i64 2147665951}
!6832 = !DILocation(line: 327, column: 1, scope: !6198)
!6833 = !{i64 2147666058, i64 2147666101, i64 2147666141}
!6834 = !DILocation(line: 328, column: 1, scope: !6198)
!6835 = !{i64 2147666272, i64 2147666315, i64 2147666355}
!6836 = !DILocation(line: 329, column: 1, scope: !6198)
!6837 = !{i64 2147666471, i64 2147666514, i64 2147666554}
!6838 = !DILocation(line: 330, column: 1, scope: !6198)
!6839 = !{i64 2147666658, i64 2147666701, i64 2147666741}
!6840 = !DILocation(line: 331, column: 1, scope: !6198)
!6841 = !{i64 2147666866, i64 2147666909, i64 2147666949}
!6842 = !DILocation(line: 332, column: 1, scope: !6198)
!6843 = !{i64 2147667095, i64 2147667138, i64 2147667178}
!6844 = !DILocation(line: 333, column: 1, scope: !6198)
!6845 = !{i64 2147667297, i64 2147667340, i64 2147667380}
!6846 = !DILocation(line: 334, column: 1, scope: !6198)
!6847 = !{i64 2147667496, i64 2147667539, i64 2147667579}
!6848 = !DILocation(line: 335, column: 1, scope: !6198)
!6849 = !{i64 2147667686, i64 2147667729, i64 2147667769}
!6850 = !DILocation(line: 336, column: 1, scope: !6198)
!6851 = !{i64 2147667903, i64 2147667946, i64 2147667986}
!6852 = !DILocation(line: 338, column: 1, scope: !6198)
!6853 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !431, file: !431, line: 30, type: !438, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6854)
!6854 = !{!6855, !6856}
!6855 = !DILocalVariable(name: "arg", arg: 1, scope: !6853, file: !431, line: 30, type: !440)
!6856 = !DILocalVariable(name: "key", scope: !6853, file: !431, line: 32, type: !208)
!6857 = !DILocation(line: 0, scope: !6853)
!6858 = !DILocation(line: 37, column: 2, scope: !6853)
!6859 = !DILocation(line: 38, column: 2, scope: !6853)
!6860 = !DILocation(line: 55, column: 2, scope: !6861, inlinedAt: !6868)
!6861 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6862, file: !6862, line: 42, type: !6863, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6865)
!6862 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6863 = !DISubroutineType(types: !6864)
!6864 = !{!32}
!6865 = !{!6866, !6867}
!6866 = !DILocalVariable(name: "key", scope: !6861, file: !6862, line: 44, type: !32)
!6867 = !DILocalVariable(name: "tmp", scope: !6861, file: !6862, line: 53, type: !32)
!6868 = distinct !DILocation(line: 40, column: 8, scope: !6853)
!6869 = !{i64 1934423}
!6870 = !DILocation(line: 0, scope: !6861, inlinedAt: !6868)
!6871 = !DILocalVariable(name: "key", arg: 1, scope: !6872, file: !6862, line: 84, type: !32)
!6872 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6862, file: !6862, line: 84, type: !6873, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6875)
!6873 = !DISubroutineType(types: !6874)
!6874 = !{null, !32}
!6875 = !{!6871}
!6876 = !DILocation(line: 0, scope: !6872, inlinedAt: !6877)
!6877 = distinct !DILocation(line: 47, column: 2, scope: !6853)
!6878 = !DILocation(line: 95, column: 2, scope: !6872, inlinedAt: !6877)
!6879 = !{i64 1935240}
!6880 = !DILocation(line: 51, column: 18, scope: !6853)
!6881 = !DILocation(line: 53, column: 2, scope: !6853)
!6882 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6883, file: !6883, line: 1609, type: !3326, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6883 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6884 = !DILocation(line: 1611, column: 3, scope: !6882)
!6885 = !DILocation(line: 1612, column: 1, scope: !6882)
!6886 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6883, file: !6883, line: 1629, type: !3326, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6887 = !DILocation(line: 1631, column: 3, scope: !6886)
!6888 = !DILocation(line: 1632, column: 1, scope: !6886)
!6889 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !461, file: !461, line: 26, type: !467, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !6890)
!6890 = !{!6891}
!6891 = !DILocalVariable(name: "dev", arg: 1, scope: !6889, file: !461, line: 26, type: !469)
!6892 = !DILocation(line: 0, scope: !6889)
!6893 = !DILocation(line: 68, column: 2, scope: !6889)
!6894 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6895, file: !6895, line: 14, type: !5178, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6896)
!6895 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6896 = !{!6897, !6898}
!6897 = !DILocalVariable(name: "fmt", arg: 1, scope: !6894, file: !6895, line: 14, type: !140)
!6898 = !DILocalVariable(name: "ap", scope: !6894, file: !6895, line: 16, type: !6899)
!6899 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4246, line: 99, baseType: !6900)
!6900 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4246, line: 40, baseType: !6901)
!6901 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6895, baseType: !6902)
!6902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6903)
!6903 = !{!6904}
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6902, file: !6895, line: 16, baseType: !124, size: 32)
!6905 = !DILocation(line: 0, scope: !6894)
!6906 = !DILocation(line: 16, column: 2, scope: !6894)
!6907 = !DILocation(line: 16, column: 10, scope: !6894)
!6908 = !DILocation(line: 18, column: 2, scope: !6894)
!6909 = !DILocation(line: 19, column: 2, scope: !6894)
!6910 = !DILocation(line: 20, column: 2, scope: !6894)
!6911 = !DILocation(line: 21, column: 1, scope: !6894)
!6912 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6895, file: !6895, line: 23, type: !6913, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6915)
!6913 = !DISubroutineType(types: !6914)
!6914 = !{null, !140, !6899}
!6915 = !{!6916, !6917}
!6916 = !DILocalVariable(name: "fmt", arg: 1, scope: !6912, file: !6895, line: 23, type: !140)
!6917 = !DILocalVariable(name: "ap", arg: 2, scope: !6912, file: !6895, line: 23, type: !6899)
!6918 = !DILocation(line: 0, scope: !6912)
!6919 = !DILocation(line: 25, column: 2, scope: !6912)
!6920 = !DILocation(line: 26, column: 1, scope: !6912)
!6921 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6895, file: !6895, line: 52, type: !6922, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6924)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{null, !125, !13, !272}
!6924 = !{!6925, !6926, !6927, !6928}
!6925 = !DILocalVariable(name: "level", arg: 1, scope: !6921, file: !6895, line: 52, type: !125)
!6926 = !DILocalVariable(name: "data", arg: 2, scope: !6921, file: !6895, line: 52, type: !13)
!6927 = !DILocalVariable(name: "size", arg: 3, scope: !6921, file: !6895, line: 52, type: !272)
!6928 = !DILocalVariable(name: "data_buffer", scope: !6921, file: !6895, line: 54, type: !140)
!6929 = !DILocation(line: 0, scope: !6921)
!6930 = !DILocation(line: 55, column: 14, scope: !6921)
!6931 = !DILocation(line: 55, column: 2, scope: !6921)
!6932 = !DILocation(line: 56, column: 3, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6921, file: !6895, line: 55, column: 20)
!6934 = !DILocation(line: 57, column: 3, scope: !6933)
!6935 = !DILocation(line: 59, column: 7, scope: !6933)
!6936 = distinct !{!6936, !6931, !6937}
!6937 = !DILocation(line: 65, column: 2, scope: !6921)
!6938 = !DILocation(line: 66, column: 1, scope: !6921)
!6939 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3490, file: !3490, line: 175, type: !3491, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6940)
!6940 = !{!6941}
!6941 = !DILocalVariable(name: "level", arg: 1, scope: !6939, file: !3490, line: 175, type: !125)
!6942 = !DILocation(line: 0, scope: !6939)
!6943 = !DILocation(line: 177, column: 2, scope: !6939)
!6944 = !DILocation(line: 189, column: 1, scope: !6939)
!6945 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6895, file: !6895, line: 28, type: !6946, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6948)
!6946 = !DISubroutineType(types: !6947)
!6947 = !{null, !140, !272}
!6948 = !{!6949, !6950, !6951, !6953, !6955}
!6949 = !DILocalVariable(name: "data", arg: 1, scope: !6945, file: !6895, line: 28, type: !140)
!6950 = !DILocalVariable(name: "length", arg: 2, scope: !6945, file: !6895, line: 28, type: !272)
!6951 = !DILocalVariable(name: "i", scope: !6952, file: !6895, line: 30, type: !272)
!6952 = distinct !DILexicalBlock(scope: !6945, file: !6895, line: 30, column: 2)
!6953 = !DILocalVariable(name: "i", scope: !6954, file: !6895, line: 40, type: !272)
!6954 = distinct !DILexicalBlock(scope: !6945, file: !6895, line: 40, column: 2)
!6955 = !DILocalVariable(name: "c", scope: !6956, file: !6895, line: 42, type: !151)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !6895, line: 41, column: 19)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6895, line: 41, column: 7)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6895, line: 40, column: 54)
!6959 = distinct !DILexicalBlock(scope: !6954, file: !6895, line: 40, column: 2)
!6960 = !DILocation(line: 0, scope: !6945)
!6961 = !DILocation(line: 0, scope: !6952)
!6962 = !DILocation(line: 30, column: 2, scope: !6952)
!6963 = !DILocation(line: 38, column: 2, scope: !6945)
!6964 = !DILocation(line: 0, scope: !6954)
!6965 = !DILocation(line: 40, column: 2, scope: !6954)
!6966 = !DILocation(line: 31, column: 9, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6895, line: 31, column: 7)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6895, line: 30, column: 54)
!6969 = distinct !DILexicalBlock(scope: !6952, file: !6895, line: 30, column: 2)
!6970 = !DILocation(line: 31, column: 7, scope: !6968)
!6971 = !DILocation(line: 32, column: 35, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6967, file: !6895, line: 31, column: 19)
!6973 = !DILocation(line: 32, column: 20, scope: !6972)
!6974 = !DILocation(line: 32, column: 4, scope: !6972)
!6975 = !DILocation(line: 33, column: 3, scope: !6972)
!6976 = !DILocation(line: 34, column: 4, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6967, file: !6895, line: 33, column: 10)
!6978 = !DILocation(line: 30, column: 50, scope: !6969)
!6979 = !DILocation(line: 30, column: 24, scope: !6969)
!6980 = distinct !{!6980, !6962, !6981}
!6981 = !DILocation(line: 36, column: 2, scope: !6952)
!6982 = !DILocation(line: 49, column: 2, scope: !6945)
!6983 = !DILocation(line: 50, column: 1, scope: !6945)
!6984 = !DILocation(line: 41, column: 9, scope: !6957)
!6985 = !DILocation(line: 41, column: 7, scope: !6958)
!6986 = !DILocation(line: 42, column: 22, scope: !6956)
!6987 = !DILocation(line: 0, scope: !6956)
!6988 = !DILocation(line: 44, column: 25, scope: !6956)
!6989 = !DILocation(line: 44, column: 17, scope: !6956)
!6990 = !DILocation(line: 44, column: 33, scope: !6956)
!6991 = !DILocation(line: 44, column: 4, scope: !6956)
!6992 = !DILocation(line: 45, column: 3, scope: !6956)
!6993 = !DILocation(line: 46, column: 4, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6957, file: !6895, line: 45, column: 10)
!6995 = !DILocation(line: 40, column: 50, scope: !6959)
!6996 = !DILocation(line: 40, column: 24, scope: !6959)
!6997 = distinct !{!6997, !6965, !6998}
!6998 = !DILocation(line: 48, column: 2, scope: !6954)
!6999 = distinct !DISubprogram(name: "isprint", scope: !5971, file: !5971, line: 37, type: !410, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !7000)
!7000 = !{!7001}
!7001 = !DILocalVariable(name: "c", arg: 1, scope: !6999, file: !5971, line: 37, type: !125)
!7002 = !DILocation(line: 0, scope: !6999)
!7003 = !DILocation(line: 39, column: 38, scope: !6999)
!7004 = !DILocation(line: 39, column: 2, scope: !6999)
!7005 = distinct !DISubprogram(name: "_copy", scope: !7006, file: !7006, line: 40, type: !7007, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !7009)
!7006 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7007 = !DISubroutineType(types: !7008)
!7008 = !{!32, !184, !32, !490, !32}
!7009 = !{!7010, !7011, !7012, !7013}
!7010 = !DILocalVariable(name: "to", arg: 1, scope: !7005, file: !7006, line: 40, type: !184)
!7011 = !DILocalVariable(name: "to_len", arg: 2, scope: !7005, file: !7006, line: 40, type: !32)
!7012 = !DILocalVariable(name: "from", arg: 3, scope: !7005, file: !7006, line: 41, type: !490)
!7013 = !DILocalVariable(name: "from_len", arg: 4, scope: !7005, file: !7006, line: 41, type: !32)
!7014 = !DILocation(line: 0, scope: !7005)
!7015 = !DILocation(line: 43, column: 15, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7005, file: !7006, line: 43, column: 6)
!7017 = !DILocation(line: 43, column: 6, scope: !7005)
!7018 = !DILocation(line: 44, column: 9, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7016, file: !7006, line: 43, column: 26)
!7020 = !DILocation(line: 45, column: 3, scope: !7019)
!7021 = !DILocation(line: 0, scope: !7016)
!7022 = !DILocation(line: 49, column: 1, scope: !7005)
!7023 = distinct !DISubprogram(name: "_set", scope: !7006, file: !7006, line: 51, type: !7024, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !7026)
!7024 = !DISubroutineType(types: !7025)
!7025 = !{null, !124, !150, !32}
!7026 = !{!7027, !7028, !7029}
!7027 = !DILocalVariable(name: "to", arg: 1, scope: !7023, file: !7006, line: 51, type: !124)
!7028 = !DILocalVariable(name: "val", arg: 2, scope: !7023, file: !7006, line: 51, type: !150)
!7029 = !DILocalVariable(name: "len", arg: 3, scope: !7023, file: !7006, line: 51, type: !32)
!7030 = !DILocation(line: 0, scope: !7023)
!7031 = !DILocation(line: 53, column: 19, scope: !7023)
!7032 = !DILocation(line: 53, column: 8, scope: !7023)
!7033 = !DILocation(line: 54, column: 1, scope: !7023)
!7034 = distinct !DISubprogram(name: "_double_byte", scope: !7006, file: !7006, line: 59, type: !7035, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !7037)
!7035 = !DISubroutineType(types: !7036)
!7036 = !{!150, !150}
!7037 = !{!7038}
!7038 = !DILocalVariable(name: "a", arg: 1, scope: !7034, file: !7006, line: 59, type: !150)
!7039 = !DILocation(line: 0, scope: !7034)
!7040 = !DILocation(line: 61, column: 12, scope: !7034)
!7041 = !DILocation(line: 61, column: 27, scope: !7034)
!7042 = !DILocation(line: 61, column: 17, scope: !7034)
!7043 = !DILocation(line: 61, column: 2, scope: !7034)
!7044 = distinct !DISubprogram(name: "_compare", scope: !7006, file: !7006, line: 64, type: !7045, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !7047)
!7045 = !DISubroutineType(types: !7046)
!7046 = !{!125, !490, !490, !272}
!7047 = !{!7048, !7049, !7050, !7051, !7052, !7053, !7054}
!7048 = !DILocalVariable(name: "a", arg: 1, scope: !7044, file: !7006, line: 64, type: !490)
!7049 = !DILocalVariable(name: "b", arg: 2, scope: !7044, file: !7006, line: 64, type: !490)
!7050 = !DILocalVariable(name: "size", arg: 3, scope: !7044, file: !7006, line: 64, type: !272)
!7051 = !DILocalVariable(name: "tempa", scope: !7044, file: !7006, line: 66, type: !490)
!7052 = !DILocalVariable(name: "tempb", scope: !7044, file: !7006, line: 67, type: !490)
!7053 = !DILocalVariable(name: "result", scope: !7044, file: !7006, line: 68, type: !150)
!7054 = !DILocalVariable(name: "i", scope: !7055, file: !7006, line: 70, type: !32)
!7055 = distinct !DILexicalBlock(scope: !7044, file: !7006, line: 70, column: 2)
!7056 = !DILocation(line: 0, scope: !7044)
!7057 = !DILocation(line: 0, scope: !7055)
!7058 = !DILocation(line: 70, column: 29, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7055, file: !7006, line: 70, column: 2)
!7060 = !DILocation(line: 70, column: 2, scope: !7055)
!7061 = !DILocation(line: 73, column: 2, scope: !7044)
!7062 = !DILocation(line: 71, column: 13, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7059, file: !7006, line: 70, column: 42)
!7064 = !DILocation(line: 71, column: 24, scope: !7063)
!7065 = !DILocation(line: 71, column: 22, scope: !7063)
!7066 = !DILocation(line: 71, column: 10, scope: !7063)
!7067 = !DILocation(line: 70, column: 38, scope: !7059)
!7068 = distinct !{!7068, !7060, !7069}
!7069 = !DILocation(line: 72, column: 2, scope: !7055)
!7070 = distinct !DISubprogram(name: "tc_aes128_set_decrypt_key", scope: !501, file: !501, line: 62, type: !7071, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7073)
!7071 = !DISubroutineType(types: !7072)
!7072 = !{!125, !491, !490}
!7073 = !{!7074, !7075}
!7074 = !DILocalVariable(name: "s", arg: 1, scope: !7070, file: !501, line: 62, type: !491)
!7075 = !DILocalVariable(name: "k", arg: 2, scope: !7070, file: !501, line: 62, type: !490)
!7076 = !DILocation(line: 0, scope: !7070)
!7077 = !DILocation(line: 64, column: 9, scope: !7070)
!7078 = !DILocation(line: 64, column: 2, scope: !7070)
!7079 = distinct !DISubprogram(name: "tc_aes_decrypt", scope: !501, file: !501, line: 129, type: !7080, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7083)
!7080 = !DISubroutineType(types: !7081)
!7081 = !{!125, !184, !490, !7082}
!7082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !491)
!7083 = !{!7084, !7085, !7086, !7087, !7088}
!7084 = !DILocalVariable(name: "out", arg: 1, scope: !7079, file: !501, line: 129, type: !184)
!7085 = !DILocalVariable(name: "in", arg: 2, scope: !7079, file: !501, line: 129, type: !490)
!7086 = !DILocalVariable(name: "s", arg: 3, scope: !7079, file: !501, line: 129, type: !7082)
!7087 = !DILocalVariable(name: "state", scope: !7079, file: !501, line: 131, type: !311)
!7088 = !DILocalVariable(name: "i", scope: !7079, file: !501, line: 132, type: !32)
!7089 = !DILocation(line: 0, scope: !7079)
!7090 = !DILocation(line: 131, column: 2, scope: !7079)
!7091 = !DILocation(line: 131, column: 10, scope: !7079)
!7092 = !DILocation(line: 134, column: 10, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7079, file: !501, line: 134, column: 6)
!7094 = !DILocation(line: 134, column: 6, scope: !7079)
!7095 = !DILocation(line: 142, column: 8, scope: !7079)
!7096 = !DILocation(line: 144, column: 32, scope: !7079)
!7097 = !DILocation(line: 144, column: 2, scope: !7079)
!7098 = !DILocation(line: 146, column: 2, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7079, file: !501, line: 146, column: 2)
!7100 = !DILocation(line: 147, column: 3, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !501, line: 146, column: 31)
!7102 = distinct !DILexicalBlock(scope: !7099, file: !501, line: 146, column: 2)
!7103 = !DILocation(line: 148, column: 3, scope: !7101)
!7104 = !DILocation(line: 149, column: 37, scope: !7101)
!7105 = !DILocation(line: 149, column: 33, scope: !7101)
!7106 = !DILocation(line: 149, column: 3, scope: !7101)
!7107 = !DILocation(line: 150, column: 3, scope: !7101)
!7108 = !DILocation(line: 146, column: 26, scope: !7102)
!7109 = !DILocation(line: 146, column: 21, scope: !7102)
!7110 = distinct !{!7110, !7098, !7111}
!7111 = !DILocation(line: 151, column: 2, scope: !7099)
!7112 = !DILocation(line: 144, column: 23, scope: !7079)
!7113 = !DILocation(line: 153, column: 2, scope: !7079)
!7114 = !DILocation(line: 154, column: 2, scope: !7079)
!7115 = !DILocation(line: 155, column: 2, scope: !7079)
!7116 = !DILocation(line: 157, column: 8, scope: !7079)
!7117 = !DILocation(line: 160, column: 2, scope: !7079)
!7118 = !DILocation(line: 163, column: 2, scope: !7079)
!7119 = !DILocation(line: 164, column: 1, scope: !7079)
!7120 = distinct !DISubprogram(name: "add_round_key", scope: !501, file: !501, line: 92, type: !7121, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7124)
!7121 = !DISubroutineType(types: !7122)
!7122 = !{null, !184, !7123}
!7123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5894, size: 32)
!7124 = !{!7125, !7126}
!7125 = !DILocalVariable(name: "s", arg: 1, scope: !7120, file: !501, line: 92, type: !184)
!7126 = !DILocalVariable(name: "k", arg: 2, scope: !7120, file: !501, line: 92, type: !7123)
!7127 = !DILocation(line: 0, scope: !7120)
!7128 = !DILocation(line: 94, column: 20, scope: !7120)
!7129 = !DILocation(line: 94, column: 25, scope: !7120)
!7130 = !DILocation(line: 94, column: 7, scope: !7120)
!7131 = !DILocation(line: 94, column: 51, scope: !7120)
!7132 = !DILocation(line: 94, column: 56, scope: !7120)
!7133 = !DILocation(line: 94, column: 33, scope: !7120)
!7134 = !DILocation(line: 94, column: 38, scope: !7120)
!7135 = !DILocation(line: 95, column: 20, scope: !7120)
!7136 = !DILocation(line: 95, column: 25, scope: !7120)
!7137 = !DILocation(line: 95, column: 2, scope: !7120)
!7138 = !DILocation(line: 95, column: 7, scope: !7120)
!7139 = !DILocation(line: 95, column: 50, scope: !7120)
!7140 = !DILocation(line: 95, column: 32, scope: !7120)
!7141 = !DILocation(line: 95, column: 37, scope: !7120)
!7142 = !DILocation(line: 96, column: 20, scope: !7120)
!7143 = !DILocation(line: 96, column: 25, scope: !7120)
!7144 = !DILocation(line: 96, column: 2, scope: !7120)
!7145 = !DILocation(line: 96, column: 7, scope: !7120)
!7146 = !DILocation(line: 96, column: 51, scope: !7120)
!7147 = !DILocation(line: 96, column: 56, scope: !7120)
!7148 = !DILocation(line: 96, column: 33, scope: !7120)
!7149 = !DILocation(line: 96, column: 38, scope: !7120)
!7150 = !DILocation(line: 97, column: 20, scope: !7120)
!7151 = !DILocation(line: 97, column: 25, scope: !7120)
!7152 = !DILocation(line: 97, column: 2, scope: !7120)
!7153 = !DILocation(line: 97, column: 7, scope: !7120)
!7154 = !DILocation(line: 97, column: 50, scope: !7120)
!7155 = !DILocation(line: 97, column: 32, scope: !7120)
!7156 = !DILocation(line: 97, column: 37, scope: !7120)
!7157 = !DILocation(line: 98, column: 20, scope: !7120)
!7158 = !DILocation(line: 98, column: 25, scope: !7120)
!7159 = !DILocation(line: 98, column: 2, scope: !7120)
!7160 = !DILocation(line: 98, column: 7, scope: !7120)
!7161 = !DILocation(line: 98, column: 51, scope: !7120)
!7162 = !DILocation(line: 98, column: 56, scope: !7120)
!7163 = !DILocation(line: 98, column: 33, scope: !7120)
!7164 = !DILocation(line: 98, column: 38, scope: !7120)
!7165 = !DILocation(line: 99, column: 21, scope: !7120)
!7166 = !DILocation(line: 99, column: 26, scope: !7120)
!7167 = !DILocation(line: 99, column: 2, scope: !7120)
!7168 = !DILocation(line: 99, column: 8, scope: !7120)
!7169 = !DILocation(line: 99, column: 52, scope: !7120)
!7170 = !DILocation(line: 99, column: 33, scope: !7120)
!7171 = !DILocation(line: 99, column: 39, scope: !7120)
!7172 = !DILocation(line: 100, column: 21, scope: !7120)
!7173 = !DILocation(line: 100, column: 26, scope: !7120)
!7174 = !DILocation(line: 100, column: 2, scope: !7120)
!7175 = !DILocation(line: 100, column: 8, scope: !7120)
!7176 = !DILocation(line: 100, column: 53, scope: !7120)
!7177 = !DILocation(line: 100, column: 58, scope: !7120)
!7178 = !DILocation(line: 100, column: 34, scope: !7120)
!7179 = !DILocation(line: 100, column: 40, scope: !7120)
!7180 = !DILocation(line: 101, column: 21, scope: !7120)
!7181 = !DILocation(line: 101, column: 26, scope: !7120)
!7182 = !DILocation(line: 101, column: 2, scope: !7120)
!7183 = !DILocation(line: 101, column: 8, scope: !7120)
!7184 = !DILocation(line: 101, column: 52, scope: !7120)
!7185 = !DILocation(line: 101, column: 33, scope: !7120)
!7186 = !DILocation(line: 101, column: 39, scope: !7120)
!7187 = !DILocation(line: 102, column: 1, scope: !7120)
!7188 = distinct !DISubprogram(name: "inv_shift_rows", scope: !501, file: !501, line: 118, type: !7189, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7191)
!7189 = !DISubroutineType(types: !7190)
!7190 = !{null, !184}
!7191 = !{!7192, !7193}
!7192 = !DILocalVariable(name: "s", arg: 1, scope: !7188, file: !501, line: 118, type: !184)
!7193 = !DILocalVariable(name: "t", scope: !7188, file: !501, line: 120, type: !311)
!7194 = !DILocation(line: 0, scope: !7188)
!7195 = !DILocation(line: 120, column: 2, scope: !7188)
!7196 = !DILocation(line: 120, column: 10, scope: !7188)
!7197 = !DILocation(line: 122, column: 10, scope: !7188)
!7198 = !DILocation(line: 122, column: 8, scope: !7188)
!7199 = !DILocation(line: 122, column: 23, scope: !7188)
!7200 = !DILocation(line: 122, column: 16, scope: !7188)
!7201 = !DILocation(line: 122, column: 21, scope: !7188)
!7202 = !DILocation(line: 122, column: 37, scope: !7188)
!7203 = !DILocation(line: 122, column: 30, scope: !7188)
!7204 = !DILocation(line: 122, column: 35, scope: !7188)
!7205 = !DILocation(line: 122, column: 51, scope: !7188)
!7206 = !DILocation(line: 122, column: 44, scope: !7188)
!7207 = !DILocation(line: 122, column: 49, scope: !7188)
!7208 = !DILocation(line: 123, column: 10, scope: !7188)
!7209 = !DILocation(line: 123, column: 2, scope: !7188)
!7210 = !DILocation(line: 123, column: 8, scope: !7188)
!7211 = !DILocation(line: 123, column: 23, scope: !7188)
!7212 = !DILocation(line: 123, column: 16, scope: !7188)
!7213 = !DILocation(line: 123, column: 21, scope: !7188)
!7214 = !DILocation(line: 123, column: 36, scope: !7188)
!7215 = !DILocation(line: 123, column: 29, scope: !7188)
!7216 = !DILocation(line: 123, column: 34, scope: !7188)
!7217 = !DILocation(line: 123, column: 50, scope: !7188)
!7218 = !DILocation(line: 123, column: 43, scope: !7188)
!7219 = !DILocation(line: 123, column: 48, scope: !7188)
!7220 = !DILocation(line: 124, column: 10, scope: !7188)
!7221 = !DILocation(line: 124, column: 2, scope: !7188)
!7222 = !DILocation(line: 124, column: 8, scope: !7188)
!7223 = !DILocation(line: 124, column: 23, scope: !7188)
!7224 = !DILocation(line: 124, column: 16, scope: !7188)
!7225 = !DILocation(line: 124, column: 21, scope: !7188)
!7226 = !DILocation(line: 124, column: 37, scope: !7188)
!7227 = !DILocation(line: 124, column: 29, scope: !7188)
!7228 = !DILocation(line: 124, column: 35, scope: !7188)
!7229 = !DILocation(line: 124, column: 51, scope: !7188)
!7230 = !DILocation(line: 124, column: 43, scope: !7188)
!7231 = !DILocation(line: 124, column: 49, scope: !7188)
!7232 = !DILocation(line: 125, column: 10, scope: !7188)
!7233 = !DILocation(line: 125, column: 2, scope: !7188)
!7234 = !DILocation(line: 125, column: 8, scope: !7188)
!7235 = !DILocation(line: 125, column: 25, scope: !7188)
!7236 = !DILocation(line: 125, column: 17, scope: !7188)
!7237 = !DILocation(line: 125, column: 23, scope: !7188)
!7238 = !DILocation(line: 125, column: 39, scope: !7188)
!7239 = !DILocation(line: 125, column: 31, scope: !7188)
!7240 = !DILocation(line: 125, column: 37, scope: !7188)
!7241 = !DILocation(line: 125, column: 53, scope: !7188)
!7242 = !DILocation(line: 125, column: 45, scope: !7188)
!7243 = !DILocation(line: 125, column: 51, scope: !7188)
!7244 = !DILocation(line: 126, column: 8, scope: !7188)
!7245 = !DILocation(line: 127, column: 1, scope: !7188)
!7246 = distinct !DISubprogram(name: "inv_sub_bytes", scope: !501, file: !501, line: 104, type: !7189, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7247)
!7247 = !{!7248, !7249}
!7248 = !DILocalVariable(name: "s", arg: 1, scope: !7246, file: !501, line: 104, type: !184)
!7249 = !DILocalVariable(name: "i", scope: !7246, file: !501, line: 106, type: !32)
!7250 = !DILocation(line: 0, scope: !7246)
!7251 = !DILocation(line: 108, column: 2, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7246, file: !501, line: 108, column: 2)
!7253 = !DILocation(line: 109, column: 19, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !501, line: 108, column: 32)
!7255 = distinct !DILexicalBlock(scope: !7252, file: !501, line: 108, column: 2)
!7256 = !DILocation(line: 109, column: 10, scope: !7254)
!7257 = !DILocation(line: 109, column: 8, scope: !7254)
!7258 = !DILocation(line: 108, column: 27, scope: !7255)
!7259 = !DILocation(line: 108, column: 16, scope: !7255)
!7260 = distinct !{!7260, !7251, !7261}
!7261 = !DILocation(line: 110, column: 2, scope: !7252)
!7262 = !DILocation(line: 111, column: 1, scope: !7246)
!7263 = distinct !DISubprogram(name: "inv_mix_columns", scope: !501, file: !501, line: 81, type: !7189, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7264)
!7264 = !{!7265, !7266}
!7265 = !DILocalVariable(name: "s", arg: 1, scope: !7263, file: !501, line: 81, type: !184)
!7266 = !DILocalVariable(name: "t", scope: !7263, file: !501, line: 83, type: !311)
!7267 = !DILocation(line: 0, scope: !7263)
!7268 = !DILocation(line: 83, column: 2, scope: !7263)
!7269 = !DILocation(line: 83, column: 10, scope: !7263)
!7270 = !DILocation(line: 85, column: 2, scope: !7263)
!7271 = !DILocation(line: 86, column: 19, scope: !7263)
!7272 = !DILocation(line: 86, column: 27, scope: !7263)
!7273 = !DILocation(line: 86, column: 2, scope: !7263)
!7274 = !DILocation(line: 87, column: 19, scope: !7263)
!7275 = !DILocation(line: 87, column: 29, scope: !7263)
!7276 = !DILocation(line: 87, column: 2, scope: !7263)
!7277 = !DILocation(line: 88, column: 19, scope: !7263)
!7278 = !DILocation(line: 88, column: 29, scope: !7263)
!7279 = !DILocation(line: 88, column: 2, scope: !7263)
!7280 = !DILocation(line: 89, column: 8, scope: !7263)
!7281 = !DILocation(line: 90, column: 1, scope: !7263)
!7282 = distinct !DISubprogram(name: "mult_row_column", scope: !501, file: !501, line: 73, type: !7283, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7285)
!7283 = !DISubroutineType(types: !7284)
!7284 = !{null, !184, !490}
!7285 = !{!7286, !7287}
!7286 = !DILocalVariable(name: "out", arg: 1, scope: !7282, file: !501, line: 73, type: !184)
!7287 = !DILocalVariable(name: "in", arg: 2, scope: !7282, file: !501, line: 73, type: !490)
!7288 = !DILocation(line: 0, scope: !7282)
!7289 = !DILocation(line: 75, column: 11, scope: !7282)
!7290 = !DILocation(line: 75, column: 26, scope: !7282)
!7291 = !DILocation(line: 75, column: 41, scope: !7282)
!7292 = !DILocation(line: 75, column: 56, scope: !7282)
!7293 = !DILocation(line: 75, column: 24, scope: !7282)
!7294 = !DILocation(line: 75, column: 39, scope: !7282)
!7295 = !DILocation(line: 75, column: 54, scope: !7282)
!7296 = !DILocation(line: 75, column: 9, scope: !7282)
!7297 = !DILocation(line: 76, column: 11, scope: !7282)
!7298 = !DILocation(line: 76, column: 26, scope: !7282)
!7299 = !DILocation(line: 76, column: 41, scope: !7282)
!7300 = !DILocation(line: 76, column: 56, scope: !7282)
!7301 = !DILocation(line: 76, column: 24, scope: !7282)
!7302 = !DILocation(line: 76, column: 39, scope: !7282)
!7303 = !DILocation(line: 76, column: 54, scope: !7282)
!7304 = !DILocation(line: 76, column: 2, scope: !7282)
!7305 = !DILocation(line: 76, column: 9, scope: !7282)
!7306 = !DILocation(line: 77, column: 11, scope: !7282)
!7307 = !DILocation(line: 77, column: 26, scope: !7282)
!7308 = !DILocation(line: 77, column: 41, scope: !7282)
!7309 = !DILocation(line: 77, column: 56, scope: !7282)
!7310 = !DILocation(line: 77, column: 24, scope: !7282)
!7311 = !DILocation(line: 77, column: 39, scope: !7282)
!7312 = !DILocation(line: 77, column: 54, scope: !7282)
!7313 = !DILocation(line: 77, column: 2, scope: !7282)
!7314 = !DILocation(line: 77, column: 9, scope: !7282)
!7315 = !DILocation(line: 78, column: 11, scope: !7282)
!7316 = !DILocation(line: 78, column: 26, scope: !7282)
!7317 = !DILocation(line: 78, column: 41, scope: !7282)
!7318 = !DILocation(line: 78, column: 56, scope: !7282)
!7319 = !DILocation(line: 78, column: 24, scope: !7282)
!7320 = !DILocation(line: 78, column: 39, scope: !7282)
!7321 = !DILocation(line: 78, column: 54, scope: !7282)
!7322 = !DILocation(line: 78, column: 2, scope: !7282)
!7323 = !DILocation(line: 78, column: 9, scope: !7282)
!7324 = !DILocation(line: 79, column: 1, scope: !7282)
!7325 = distinct !DISubprogram(name: "tc_aes128_set_encrypt_key", scope: !516, file: !516, line: 70, type: !7326, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7328)
!7326 = !DISubroutineType(types: !7327)
!7327 = !{!125, !510, !490}
!7328 = !{!7329, !7330, !7331, !7333, !7334}
!7329 = !DILocalVariable(name: "s", arg: 1, scope: !7325, file: !516, line: 70, type: !510)
!7330 = !DILocalVariable(name: "k", arg: 2, scope: !7325, file: !516, line: 70, type: !490)
!7331 = !DILocalVariable(name: "rconst", scope: !7325, file: !516, line: 72, type: !7332)
!7332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5894, size: 352, elements: !2109)
!7333 = !DILocalVariable(name: "i", scope: !7325, file: !516, line: 76, type: !32)
!7334 = !DILocalVariable(name: "t", scope: !7325, file: !516, line: 77, type: !32)
!7335 = !DILocation(line: 0, scope: !7325)
!7336 = !DILocation(line: 72, column: 21, scope: !7325)
!7337 = !DILocation(line: 79, column: 8, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7325, file: !516, line: 79, column: 6)
!7339 = !DILocation(line: 79, column: 6, scope: !7325)
!7340 = !DILocation(line: 91, column: 7, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !516, line: 90, column: 35)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !516, line: 90, column: 2)
!7343 = distinct !DILexicalBlock(scope: !7325, file: !516, line: 90, column: 2)
!7344 = !DILocation(line: 90, column: 2, scope: !7343)
!7345 = !DILocation(line: 86, column: 22, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !516, line: 85, column: 27)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !516, line: 85, column: 2)
!7348 = distinct !DILexicalBlock(scope: !7325, file: !516, line: 85, column: 2)
!7349 = !DILocation(line: 86, column: 18, scope: !7346)
!7350 = !DILocation(line: 86, column: 25, scope: !7346)
!7351 = !DILocation(line: 86, column: 40, scope: !7346)
!7352 = !DILocation(line: 86, column: 34, scope: !7346)
!7353 = !DILocation(line: 86, column: 43, scope: !7346)
!7354 = !DILocation(line: 86, column: 31, scope: !7346)
!7355 = !DILocation(line: 87, column: 17, scope: !7346)
!7356 = !DILocation(line: 87, column: 11, scope: !7346)
!7357 = !DILocation(line: 87, column: 20, scope: !7346)
!7358 = !DILocation(line: 86, column: 49, scope: !7346)
!7359 = !DILocation(line: 87, column: 34, scope: !7346)
!7360 = !DILocation(line: 87, column: 28, scope: !7346)
!7361 = !DILocation(line: 87, column: 27, scope: !7346)
!7362 = !DILocation(line: 87, column: 25, scope: !7346)
!7363 = !DILocation(line: 86, column: 3, scope: !7346)
!7364 = !DILocation(line: 86, column: 15, scope: !7346)
!7365 = !DILocation(line: 85, column: 22, scope: !7347)
!7366 = !DILocation(line: 85, column: 16, scope: !7347)
!7367 = !DILocation(line: 85, column: 2, scope: !7348)
!7368 = distinct !{!7368, !7367, !7369}
!7369 = !DILocation(line: 88, column: 2, scope: !7348)
!7370 = !DILocation(line: 92, column: 10, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7341, file: !516, line: 92, column: 7)
!7372 = !DILocation(line: 92, column: 16, scope: !7371)
!7373 = !DILocation(line: 92, column: 7, scope: !7341)
!7374 = !DILocation(line: 93, column: 8, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7371, file: !516, line: 92, column: 22)
!7376 = !DILocation(line: 93, column: 38, scope: !7375)
!7377 = !DILocation(line: 93, column: 30, scope: !7375)
!7378 = !DILocation(line: 93, column: 28, scope: !7375)
!7379 = !DILocation(line: 94, column: 3, scope: !7375)
!7380 = !DILocation(line: 0, scope: !7341)
!7381 = !DILocation(line: 95, column: 27, scope: !7341)
!7382 = !DILocation(line: 95, column: 17, scope: !7341)
!7383 = !DILocation(line: 95, column: 32, scope: !7341)
!7384 = !DILocation(line: 95, column: 3, scope: !7341)
!7385 = !DILocation(line: 95, column: 15, scope: !7341)
!7386 = !DILocation(line: 90, column: 30, scope: !7342)
!7387 = !DILocation(line: 90, column: 11, scope: !7342)
!7388 = distinct !{!7388, !7344, !7389}
!7389 = !DILocation(line: 96, column: 2, scope: !7343)
!7390 = !DILocation(line: 99, column: 1, scope: !7325)
!7391 = distinct !DISubprogram(name: "rotword", scope: !516, file: !516, line: 62, type: !7392, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7394)
!7392 = !DISubroutineType(types: !7393)
!7393 = !{!32, !32}
!7394 = !{!7395}
!7395 = !DILocalVariable(name: "a", arg: 1, scope: !7391, file: !516, line: 62, type: !32)
!7396 = !DILocation(line: 0, scope: !7391)
!7397 = !DILocation(line: 64, column: 21, scope: !7391)
!7398 = !DILocation(line: 64, column: 2, scope: !7391)
!7399 = distinct !DISubprogram(name: "tc_aes_encrypt", scope: !516, file: !516, line: 158, type: !7400, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7403)
!7400 = !DISubroutineType(types: !7401)
!7401 = !{!125, !184, !490, !7402}
!7402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!7403 = !{!7404, !7405, !7406, !7407, !7408}
!7404 = !DILocalVariable(name: "out", arg: 1, scope: !7399, file: !516, line: 158, type: !184)
!7405 = !DILocalVariable(name: "in", arg: 2, scope: !7399, file: !516, line: 158, type: !490)
!7406 = !DILocalVariable(name: "s", arg: 3, scope: !7399, file: !516, line: 158, type: !7402)
!7407 = !DILocalVariable(name: "state", scope: !7399, file: !516, line: 160, type: !311)
!7408 = !DILocalVariable(name: "i", scope: !7399, file: !516, line: 161, type: !32)
!7409 = !DILocation(line: 0, scope: !7399)
!7410 = !DILocation(line: 160, column: 2, scope: !7399)
!7411 = !DILocation(line: 160, column: 10, scope: !7399)
!7412 = !DILocation(line: 163, column: 10, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7399, file: !516, line: 163, column: 6)
!7414 = !DILocation(line: 163, column: 6, scope: !7399)
!7415 = !DILocation(line: 171, column: 8, scope: !7399)
!7416 = !DILocation(line: 172, column: 23, scope: !7399)
!7417 = !DILocation(line: 172, column: 2, scope: !7399)
!7418 = !DILocation(line: 174, column: 2, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7399, file: !516, line: 174, column: 2)
!7420 = !DILocation(line: 175, column: 3, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !516, line: 174, column: 33)
!7422 = distinct !DILexicalBlock(scope: !7419, file: !516, line: 174, column: 2)
!7423 = !DILocation(line: 176, column: 3, scope: !7421)
!7424 = !DILocation(line: 177, column: 3, scope: !7421)
!7425 = !DILocation(line: 178, column: 40, scope: !7421)
!7426 = !DILocation(line: 178, column: 37, scope: !7421)
!7427 = !DILocation(line: 178, column: 33, scope: !7421)
!7428 = !DILocation(line: 178, column: 3, scope: !7421)
!7429 = !DILocation(line: 174, column: 16, scope: !7422)
!7430 = distinct !{!7430, !7418, !7431}
!7431 = !DILocation(line: 179, column: 2, scope: !7419)
!7432 = !DILocation(line: 181, column: 2, scope: !7399)
!7433 = !DILocation(line: 182, column: 2, scope: !7399)
!7434 = !DILocation(line: 183, column: 32, scope: !7399)
!7435 = !DILocation(line: 183, column: 2, scope: !7399)
!7436 = !DILocation(line: 185, column: 8, scope: !7399)
!7437 = !DILocation(line: 188, column: 2, scope: !7399)
!7438 = !DILocation(line: 190, column: 2, scope: !7399)
!7439 = !DILocation(line: 191, column: 1, scope: !7399)
!7440 = distinct !DISubprogram(name: "add_round_key", scope: !516, file: !516, line: 101, type: !7121, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7441)
!7441 = !{!7442, !7443}
!7442 = !DILocalVariable(name: "s", arg: 1, scope: !7440, file: !516, line: 101, type: !184)
!7443 = !DILocalVariable(name: "k", arg: 2, scope: !7440, file: !516, line: 101, type: !7123)
!7444 = !DILocation(line: 0, scope: !7440)
!7445 = !DILocation(line: 103, column: 20, scope: !7440)
!7446 = !DILocation(line: 103, column: 25, scope: !7440)
!7447 = !DILocation(line: 103, column: 7, scope: !7440)
!7448 = !DILocation(line: 103, column: 51, scope: !7440)
!7449 = !DILocation(line: 103, column: 56, scope: !7440)
!7450 = !DILocation(line: 103, column: 33, scope: !7440)
!7451 = !DILocation(line: 103, column: 38, scope: !7440)
!7452 = !DILocation(line: 104, column: 20, scope: !7440)
!7453 = !DILocation(line: 104, column: 25, scope: !7440)
!7454 = !DILocation(line: 104, column: 2, scope: !7440)
!7455 = !DILocation(line: 104, column: 7, scope: !7440)
!7456 = !DILocation(line: 104, column: 50, scope: !7440)
!7457 = !DILocation(line: 104, column: 32, scope: !7440)
!7458 = !DILocation(line: 104, column: 37, scope: !7440)
!7459 = !DILocation(line: 105, column: 20, scope: !7440)
!7460 = !DILocation(line: 105, column: 25, scope: !7440)
!7461 = !DILocation(line: 105, column: 2, scope: !7440)
!7462 = !DILocation(line: 105, column: 7, scope: !7440)
!7463 = !DILocation(line: 105, column: 51, scope: !7440)
!7464 = !DILocation(line: 105, column: 56, scope: !7440)
!7465 = !DILocation(line: 105, column: 33, scope: !7440)
!7466 = !DILocation(line: 105, column: 38, scope: !7440)
!7467 = !DILocation(line: 106, column: 20, scope: !7440)
!7468 = !DILocation(line: 106, column: 25, scope: !7440)
!7469 = !DILocation(line: 106, column: 2, scope: !7440)
!7470 = !DILocation(line: 106, column: 7, scope: !7440)
!7471 = !DILocation(line: 106, column: 50, scope: !7440)
!7472 = !DILocation(line: 106, column: 32, scope: !7440)
!7473 = !DILocation(line: 106, column: 37, scope: !7440)
!7474 = !DILocation(line: 107, column: 20, scope: !7440)
!7475 = !DILocation(line: 107, column: 25, scope: !7440)
!7476 = !DILocation(line: 107, column: 2, scope: !7440)
!7477 = !DILocation(line: 107, column: 7, scope: !7440)
!7478 = !DILocation(line: 107, column: 51, scope: !7440)
!7479 = !DILocation(line: 107, column: 56, scope: !7440)
!7480 = !DILocation(line: 107, column: 33, scope: !7440)
!7481 = !DILocation(line: 107, column: 38, scope: !7440)
!7482 = !DILocation(line: 108, column: 21, scope: !7440)
!7483 = !DILocation(line: 108, column: 26, scope: !7440)
!7484 = !DILocation(line: 108, column: 2, scope: !7440)
!7485 = !DILocation(line: 108, column: 8, scope: !7440)
!7486 = !DILocation(line: 108, column: 52, scope: !7440)
!7487 = !DILocation(line: 108, column: 33, scope: !7440)
!7488 = !DILocation(line: 108, column: 39, scope: !7440)
!7489 = !DILocation(line: 109, column: 21, scope: !7440)
!7490 = !DILocation(line: 109, column: 26, scope: !7440)
!7491 = !DILocation(line: 109, column: 2, scope: !7440)
!7492 = !DILocation(line: 109, column: 8, scope: !7440)
!7493 = !DILocation(line: 109, column: 53, scope: !7440)
!7494 = !DILocation(line: 109, column: 58, scope: !7440)
!7495 = !DILocation(line: 109, column: 34, scope: !7440)
!7496 = !DILocation(line: 109, column: 40, scope: !7440)
!7497 = !DILocation(line: 110, column: 21, scope: !7440)
!7498 = !DILocation(line: 110, column: 26, scope: !7440)
!7499 = !DILocation(line: 110, column: 2, scope: !7440)
!7500 = !DILocation(line: 110, column: 8, scope: !7440)
!7501 = !DILocation(line: 110, column: 52, scope: !7440)
!7502 = !DILocation(line: 110, column: 33, scope: !7440)
!7503 = !DILocation(line: 110, column: 39, scope: !7440)
!7504 = !DILocation(line: 111, column: 1, scope: !7440)
!7505 = distinct !DISubprogram(name: "sub_bytes", scope: !516, file: !516, line: 113, type: !7189, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7506)
!7506 = !{!7507, !7508}
!7507 = !DILocalVariable(name: "s", arg: 1, scope: !7505, file: !516, line: 113, type: !184)
!7508 = !DILocalVariable(name: "i", scope: !7505, file: !516, line: 115, type: !32)
!7509 = !DILocation(line: 0, scope: !7505)
!7510 = !DILocation(line: 117, column: 2, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7505, file: !516, line: 117, column: 2)
!7512 = !DILocation(line: 118, column: 15, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !516, line: 117, column: 34)
!7514 = distinct !DILexicalBlock(scope: !7511, file: !516, line: 117, column: 2)
!7515 = !DILocation(line: 118, column: 10, scope: !7513)
!7516 = !DILocation(line: 118, column: 8, scope: !7513)
!7517 = !DILocation(line: 117, column: 29, scope: !7514)
!7518 = !DILocation(line: 117, column: 16, scope: !7514)
!7519 = distinct !{!7519, !7510, !7520}
!7520 = !DILocation(line: 119, column: 2, scope: !7511)
!7521 = !DILocation(line: 120, column: 1, scope: !7505)
!7522 = distinct !DISubprogram(name: "shift_rows", scope: !516, file: !516, line: 147, type: !7189, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7523)
!7523 = !{!7524, !7525}
!7524 = !DILocalVariable(name: "s", arg: 1, scope: !7522, file: !516, line: 147, type: !184)
!7525 = !DILocalVariable(name: "t", scope: !7522, file: !516, line: 149, type: !311)
!7526 = !DILocation(line: 0, scope: !7522)
!7527 = !DILocation(line: 149, column: 2, scope: !7522)
!7528 = !DILocation(line: 149, column: 10, scope: !7522)
!7529 = !DILocation(line: 151, column: 10, scope: !7522)
!7530 = !DILocation(line: 151, column: 8, scope: !7522)
!7531 = !DILocation(line: 151, column: 23, scope: !7522)
!7532 = !DILocation(line: 151, column: 16, scope: !7522)
!7533 = !DILocation(line: 151, column: 21, scope: !7522)
!7534 = !DILocation(line: 151, column: 36, scope: !7522)
!7535 = !DILocation(line: 151, column: 29, scope: !7522)
!7536 = !DILocation(line: 151, column: 34, scope: !7522)
!7537 = !DILocation(line: 151, column: 50, scope: !7522)
!7538 = !DILocation(line: 151, column: 43, scope: !7522)
!7539 = !DILocation(line: 151, column: 48, scope: !7522)
!7540 = !DILocation(line: 152, column: 10, scope: !7522)
!7541 = !DILocation(line: 152, column: 2, scope: !7522)
!7542 = !DILocation(line: 152, column: 8, scope: !7522)
!7543 = !DILocation(line: 152, column: 23, scope: !7522)
!7544 = !DILocation(line: 152, column: 16, scope: !7522)
!7545 = !DILocation(line: 152, column: 21, scope: !7522)
!7546 = !DILocation(line: 152, column: 36, scope: !7522)
!7547 = !DILocation(line: 152, column: 29, scope: !7522)
!7548 = !DILocation(line: 152, column: 34, scope: !7522)
!7549 = !DILocation(line: 152, column: 50, scope: !7522)
!7550 = !DILocation(line: 152, column: 43, scope: !7522)
!7551 = !DILocation(line: 152, column: 48, scope: !7522)
!7552 = !DILocation(line: 153, column: 10, scope: !7522)
!7553 = !DILocation(line: 153, column: 2, scope: !7522)
!7554 = !DILocation(line: 153, column: 8, scope: !7522)
!7555 = !DILocation(line: 153, column: 23, scope: !7522)
!7556 = !DILocation(line: 153, column: 16, scope: !7522)
!7557 = !DILocation(line: 153, column: 21, scope: !7522)
!7558 = !DILocation(line: 153, column: 38, scope: !7522)
!7559 = !DILocation(line: 153, column: 30, scope: !7522)
!7560 = !DILocation(line: 153, column: 36, scope: !7522)
!7561 = !DILocation(line: 153, column: 52, scope: !7522)
!7562 = !DILocation(line: 153, column: 44, scope: !7522)
!7563 = !DILocation(line: 153, column: 50, scope: !7522)
!7564 = !DILocation(line: 154, column: 10, scope: !7522)
!7565 = !DILocation(line: 154, column: 2, scope: !7522)
!7566 = !DILocation(line: 154, column: 8, scope: !7522)
!7567 = !DILocation(line: 154, column: 25, scope: !7522)
!7568 = !DILocation(line: 154, column: 17, scope: !7522)
!7569 = !DILocation(line: 154, column: 23, scope: !7522)
!7570 = !DILocation(line: 154, column: 39, scope: !7522)
!7571 = !DILocation(line: 154, column: 31, scope: !7522)
!7572 = !DILocation(line: 154, column: 37, scope: !7522)
!7573 = !DILocation(line: 154, column: 53, scope: !7522)
!7574 = !DILocation(line: 154, column: 45, scope: !7522)
!7575 = !DILocation(line: 154, column: 51, scope: !7522)
!7576 = !DILocation(line: 155, column: 9, scope: !7522)
!7577 = !DILocation(line: 156, column: 1, scope: !7522)
!7578 = distinct !DISubprogram(name: "mix_columns", scope: !516, file: !516, line: 132, type: !7189, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7579)
!7579 = !{!7580, !7581}
!7580 = !DILocalVariable(name: "s", arg: 1, scope: !7578, file: !516, line: 132, type: !184)
!7581 = !DILocalVariable(name: "t", scope: !7578, file: !516, line: 134, type: !311)
!7582 = !DILocation(line: 0, scope: !7578)
!7583 = !DILocation(line: 134, column: 2, scope: !7578)
!7584 = !DILocation(line: 134, column: 10, scope: !7578)
!7585 = !DILocation(line: 136, column: 2, scope: !7578)
!7586 = !DILocation(line: 137, column: 19, scope: !7578)
!7587 = !DILocation(line: 137, column: 27, scope: !7578)
!7588 = !DILocation(line: 137, column: 2, scope: !7578)
!7589 = !DILocation(line: 138, column: 19, scope: !7578)
!7590 = !DILocation(line: 138, column: 32, scope: !7578)
!7591 = !DILocation(line: 138, column: 2, scope: !7578)
!7592 = !DILocation(line: 139, column: 19, scope: !7578)
!7593 = !DILocation(line: 139, column: 32, scope: !7578)
!7594 = !DILocation(line: 139, column: 2, scope: !7578)
!7595 = !DILocation(line: 140, column: 9, scope: !7578)
!7596 = !DILocation(line: 141, column: 1, scope: !7578)
!7597 = distinct !DISubprogram(name: "mult_row_column", scope: !516, file: !516, line: 124, type: !7283, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7598)
!7598 = !{!7599, !7600}
!7599 = !DILocalVariable(name: "out", arg: 1, scope: !7597, file: !516, line: 124, type: !184)
!7600 = !DILocalVariable(name: "in", arg: 2, scope: !7597, file: !516, line: 124, type: !490)
!7601 = !DILocation(line: 0, scope: !7597)
!7602 = !DILocation(line: 126, column: 24, scope: !7597)
!7603 = !DILocation(line: 126, column: 11, scope: !7597)
!7604 = !DILocation(line: 126, column: 33, scope: !7597)
!7605 = !DILocation(line: 126, column: 49, scope: !7597)
!7606 = !DILocation(line: 126, column: 57, scope: !7597)
!7607 = !DILocation(line: 126, column: 31, scope: !7597)
!7608 = !DILocation(line: 126, column: 47, scope: !7597)
!7609 = !DILocation(line: 126, column: 55, scope: !7597)
!7610 = !DILocation(line: 126, column: 9, scope: !7597)
!7611 = !DILocation(line: 127, column: 11, scope: !7597)
!7612 = !DILocation(line: 127, column: 32, scope: !7597)
!7613 = !DILocation(line: 127, column: 19, scope: !7597)
!7614 = !DILocation(line: 127, column: 41, scope: !7597)
!7615 = !DILocation(line: 127, column: 57, scope: !7597)
!7616 = !DILocation(line: 127, column: 17, scope: !7597)
!7617 = !DILocation(line: 127, column: 39, scope: !7597)
!7618 = !DILocation(line: 127, column: 55, scope: !7597)
!7619 = !DILocation(line: 127, column: 2, scope: !7597)
!7620 = !DILocation(line: 127, column: 9, scope: !7597)
!7621 = !DILocation(line: 128, column: 11, scope: !7597)
!7622 = !DILocation(line: 128, column: 19, scope: !7597)
!7623 = !DILocation(line: 128, column: 40, scope: !7597)
!7624 = !DILocation(line: 128, column: 27, scope: !7597)
!7625 = !DILocation(line: 128, column: 49, scope: !7597)
!7626 = !DILocation(line: 128, column: 17, scope: !7597)
!7627 = !DILocation(line: 128, column: 25, scope: !7597)
!7628 = !DILocation(line: 128, column: 47, scope: !7597)
!7629 = !DILocation(line: 128, column: 2, scope: !7597)
!7630 = !DILocation(line: 128, column: 9, scope: !7597)
!7631 = !DILocation(line: 129, column: 11, scope: !7597)
!7632 = !DILocation(line: 129, column: 27, scope: !7597)
!7633 = !DILocation(line: 129, column: 25, scope: !7597)
!7634 = !DILocation(line: 129, column: 35, scope: !7597)
!7635 = !DILocation(line: 129, column: 33, scope: !7597)
!7636 = !DILocation(line: 129, column: 56, scope: !7597)
!7637 = !DILocation(line: 129, column: 43, scope: !7597)
!7638 = !DILocation(line: 129, column: 41, scope: !7597)
!7639 = !DILocation(line: 129, column: 2, scope: !7597)
!7640 = !DILocation(line: 129, column: 9, scope: !7597)
!7641 = !DILocation(line: 130, column: 1, scope: !7597)
!7642 = distinct !DISubprogram(name: "tc_cbc_mode_encrypt", scope: !7643, file: !7643, line: 37, type: !7644, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !7647)
!7643 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7644 = !DISubroutineType(types: !7645)
!7645 = !{!125, !184, !32, !490, !32, !490, !7646}
!7646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2757)
!7647 = !{!7648, !7649, !7650, !7651, !7652, !7653, !7654, !7655, !7656}
!7648 = !DILocalVariable(name: "out", arg: 1, scope: !7642, file: !7643, line: 37, type: !184)
!7649 = !DILocalVariable(name: "outlen", arg: 2, scope: !7642, file: !7643, line: 37, type: !32)
!7650 = !DILocalVariable(name: "in", arg: 3, scope: !7642, file: !7643, line: 37, type: !490)
!7651 = !DILocalVariable(name: "inlen", arg: 4, scope: !7642, file: !7643, line: 38, type: !32)
!7652 = !DILocalVariable(name: "iv", arg: 5, scope: !7642, file: !7643, line: 38, type: !490)
!7653 = !DILocalVariable(name: "sched", arg: 6, scope: !7642, file: !7643, line: 39, type: !7646)
!7654 = !DILocalVariable(name: "buffer", scope: !7642, file: !7643, line: 42, type: !311)
!7655 = !DILocalVariable(name: "n", scope: !7642, file: !7643, line: 43, type: !32)
!7656 = !DILocalVariable(name: "m", scope: !7642, file: !7643, line: 43, type: !32)
!7657 = !DILocation(line: 0, scope: !7642)
!7658 = !DILocation(line: 42, column: 2, scope: !7642)
!7659 = !DILocation(line: 42, column: 10, scope: !7642)
!7660 = !DILocation(line: 46, column: 10, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7642, file: !7643, line: 46, column: 6)
!7662 = !DILocation(line: 46, column: 27, scope: !7661)
!7663 = !DILocation(line: 58, column: 8, scope: !7642)
!7664 = !DILocation(line: 60, column: 8, scope: !7642)
!7665 = !DILocation(line: 63, column: 2, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7642, file: !7643, line: 63, column: 2)
!7667 = !DILocation(line: 61, column: 6, scope: !7642)
!7668 = !DILocation(line: 64, column: 21, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !7643, line: 63, column: 34)
!7670 = distinct !DILexicalBlock(scope: !7666, file: !7643, line: 63, column: 2)
!7671 = !DILocation(line: 64, column: 18, scope: !7669)
!7672 = !DILocation(line: 64, column: 11, scope: !7669)
!7673 = !DILocation(line: 64, column: 3, scope: !7669)
!7674 = !DILocation(line: 64, column: 15, scope: !7669)
!7675 = !DILocation(line: 65, column: 9, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7669, file: !7643, line: 65, column: 7)
!7677 = !DILocation(line: 65, column: 7, scope: !7669)
!7678 = !DILocation(line: 66, column: 10, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7676, file: !7643, line: 65, column: 31)
!7680 = !DILocation(line: 67, column: 10, scope: !7679)
!7681 = !DILocation(line: 69, column: 8, scope: !7679)
!7682 = !DILocation(line: 71, column: 3, scope: !7679)
!7683 = !DILocation(line: 0, scope: !7669)
!7684 = !DILocation(line: 63, column: 29, scope: !7670)
!7685 = !DILocation(line: 63, column: 20, scope: !7670)
!7686 = distinct !{!7686, !7665, !7687}
!7687 = !DILocation(line: 72, column: 2, scope: !7666)
!7688 = !DILocation(line: 75, column: 1, scope: !7642)
!7689 = distinct !DISubprogram(name: "tc_cbc_mode_decrypt", scope: !7643, file: !7643, line: 77, type: !7644, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !7690)
!7690 = !{!7691, !7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700}
!7691 = !DILocalVariable(name: "out", arg: 1, scope: !7689, file: !7643, line: 77, type: !184)
!7692 = !DILocalVariable(name: "outlen", arg: 2, scope: !7689, file: !7643, line: 77, type: !32)
!7693 = !DILocalVariable(name: "in", arg: 3, scope: !7689, file: !7643, line: 77, type: !490)
!7694 = !DILocalVariable(name: "inlen", arg: 4, scope: !7689, file: !7643, line: 78, type: !32)
!7695 = !DILocalVariable(name: "iv", arg: 5, scope: !7689, file: !7643, line: 78, type: !490)
!7696 = !DILocalVariable(name: "sched", arg: 6, scope: !7689, file: !7643, line: 79, type: !7646)
!7697 = !DILocalVariable(name: "buffer", scope: !7689, file: !7643, line: 82, type: !311)
!7698 = !DILocalVariable(name: "p", scope: !7689, file: !7643, line: 83, type: !490)
!7699 = !DILocalVariable(name: "n", scope: !7689, file: !7643, line: 84, type: !32)
!7700 = !DILocalVariable(name: "m", scope: !7689, file: !7643, line: 84, type: !32)
!7701 = !DILocation(line: 0, scope: !7689)
!7702 = !DILocation(line: 82, column: 2, scope: !7689)
!7703 = !DILocation(line: 82, column: 10, scope: !7689)
!7704 = !DILocation(line: 87, column: 10, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7689, file: !7643, line: 87, column: 6)
!7706 = !DILocation(line: 87, column: 27, scope: !7705)
!7707 = !DILocation(line: 105, column: 10, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7709, file: !7643, line: 105, column: 7)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !7643, line: 104, column: 35)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !7643, line: 104, column: 2)
!7711 = distinct !DILexicalBlock(scope: !7689, file: !7643, line: 104, column: 2)
!7712 = !DILocation(line: 105, column: 31, scope: !7708)
!7713 = !DILocation(line: 105, column: 7, scope: !7709)
!7714 = !DILocation(line: 106, column: 10, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7708, file: !7643, line: 105, column: 37)
!7716 = !DILocation(line: 107, column: 7, scope: !7715)
!7717 = !DILocation(line: 109, column: 3, scope: !7715)
!7718 = !DILocation(line: 0, scope: !7711)
!7719 = !DILocation(line: 110, column: 20, scope: !7709)
!7720 = !DILocation(line: 110, column: 12, scope: !7709)
!7721 = !DILocation(line: 110, column: 28, scope: !7709)
!7722 = !DILocation(line: 110, column: 26, scope: !7709)
!7723 = !DILocation(line: 110, column: 24, scope: !7709)
!7724 = !DILocation(line: 110, column: 7, scope: !7709)
!7725 = !DILocation(line: 110, column: 10, scope: !7709)
!7726 = !DILocation(line: 104, column: 30, scope: !7710)
!7727 = !DILocation(line: 104, column: 20, scope: !7710)
!7728 = !DILocation(line: 104, column: 2, scope: !7711)
!7729 = distinct !{!7729, !7728, !7730}
!7730 = !DILocation(line: 111, column: 2, scope: !7711)
!7731 = !DILocation(line: 114, column: 1, scope: !7689)
!7732 = distinct !DISubprogram(name: "tc_ctr_mode", scope: !7733, file: !7733, line: 37, type: !7734, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7737)
!7733 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7734 = !DISubroutineType(types: !7735)
!7735 = !{!125, !184, !32, !490, !32, !184, !7736}
!7736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2765)
!7737 = !{!7738, !7739, !7740, !7741, !7742, !7743, !7744, !7745, !7746, !7747}
!7738 = !DILocalVariable(name: "out", arg: 1, scope: !7732, file: !7733, line: 37, type: !184)
!7739 = !DILocalVariable(name: "outlen", arg: 2, scope: !7732, file: !7733, line: 37, type: !32)
!7740 = !DILocalVariable(name: "in", arg: 3, scope: !7732, file: !7733, line: 37, type: !490)
!7741 = !DILocalVariable(name: "inlen", arg: 4, scope: !7732, file: !7733, line: 38, type: !32)
!7742 = !DILocalVariable(name: "ctr", arg: 5, scope: !7732, file: !7733, line: 38, type: !184)
!7743 = !DILocalVariable(name: "sched", arg: 6, scope: !7732, file: !7733, line: 38, type: !7736)
!7744 = !DILocalVariable(name: "buffer", scope: !7732, file: !7733, line: 41, type: !311)
!7745 = !DILocalVariable(name: "nonce", scope: !7732, file: !7733, line: 42, type: !311)
!7746 = !DILocalVariable(name: "block_num", scope: !7732, file: !7733, line: 43, type: !32)
!7747 = !DILocalVariable(name: "i", scope: !7732, file: !7733, line: 44, type: !32)
!7748 = !DILocation(line: 0, scope: !7732)
!7749 = !DILocation(line: 41, column: 2, scope: !7732)
!7750 = !DILocation(line: 41, column: 10, scope: !7732)
!7751 = !DILocation(line: 42, column: 2, scope: !7732)
!7752 = !DILocation(line: 42, column: 10, scope: !7732)
!7753 = !DILocation(line: 47, column: 10, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7732, file: !7733, line: 47, column: 6)
!7755 = !DILocation(line: 47, column: 27, scope: !7754)
!7756 = !DILocation(line: 58, column: 8, scope: !7732)
!7757 = !DILocation(line: 61, column: 15, scope: !7732)
!7758 = !DILocation(line: 61, column: 35, scope: !7732)
!7759 = !DILocation(line: 62, column: 8, scope: !7732)
!7760 = !DILocation(line: 62, column: 27, scope: !7732)
!7761 = !DILocation(line: 61, column: 45, scope: !7732)
!7762 = !DILocation(line: 61, column: 25, scope: !7732)
!7763 = !DILocation(line: 61, column: 32, scope: !7732)
!7764 = !DILocation(line: 62, column: 18, scope: !7732)
!7765 = !DILocation(line: 61, column: 52, scope: !7732)
!7766 = !DILocation(line: 62, column: 26, scope: !7732)
!7767 = !DILocation(line: 62, column: 24, scope: !7732)
!7768 = !DILocation(line: 63, column: 2, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7732, file: !7733, line: 63, column: 2)
!7770 = !DILocation(line: 64, column: 10, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !7733, line: 64, column: 7)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !7733, line: 63, column: 30)
!7773 = distinct !DILexicalBlock(scope: !7769, file: !7733, line: 63, column: 2)
!7774 = !DILocation(line: 64, column: 33, scope: !7771)
!7775 = !DILocation(line: 64, column: 7, scope: !7772)
!7776 = !DILocation(line: 66, column: 8, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !7733, line: 66, column: 8)
!7778 = distinct !DILexicalBlock(scope: !7771, file: !7733, line: 64, column: 39)
!7779 = !DILocation(line: 66, column: 8, scope: !7778)
!7780 = !DILocation(line: 67, column: 14, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7777, file: !7733, line: 66, column: 46)
!7782 = !DILocation(line: 68, column: 37, scope: !7781)
!7783 = !DILocation(line: 68, column: 17, scope: !7781)
!7784 = !DILocation(line: 68, column: 15, scope: !7781)
!7785 = !DILocation(line: 69, column: 37, scope: !7781)
!7786 = !DILocation(line: 69, column: 17, scope: !7781)
!7787 = !DILocation(line: 69, column: 15, scope: !7781)
!7788 = !DILocation(line: 70, column: 37, scope: !7781)
!7789 = !DILocation(line: 70, column: 17, scope: !7781)
!7790 = !DILocation(line: 70, column: 15, scope: !7781)
!7791 = !DILocation(line: 71, column: 17, scope: !7781)
!7792 = !DILocation(line: 71, column: 15, scope: !7781)
!7793 = !DILocation(line: 75, column: 3, scope: !7778)
!7794 = !DILocation(line: 77, column: 12, scope: !7772)
!7795 = !DILocation(line: 77, column: 47, scope: !7772)
!7796 = !DILocation(line: 77, column: 44, scope: !7772)
!7797 = !DILocation(line: 77, column: 42, scope: !7772)
!7798 = !DILocation(line: 77, column: 7, scope: !7772)
!7799 = !DILocation(line: 77, column: 10, scope: !7772)
!7800 = !DILocation(line: 63, column: 25, scope: !7773)
!7801 = !DILocation(line: 63, column: 16, scope: !7773)
!7802 = distinct !{!7802, !7768, !7803}
!7803 = !DILocation(line: 78, column: 2, scope: !7769)
!7804 = !DILocation(line: 81, column: 2, scope: !7732)
!7805 = !DILocation(line: 81, column: 10, scope: !7732)
!7806 = !DILocation(line: 81, column: 23, scope: !7732)
!7807 = !DILocation(line: 81, column: 31, scope: !7732)
!7808 = !DILocation(line: 82, column: 2, scope: !7732)
!7809 = !DILocation(line: 82, column: 10, scope: !7732)
!7810 = !DILocation(line: 82, column: 23, scope: !7732)
!7811 = !DILocation(line: 82, column: 31, scope: !7732)
!7812 = !DILocation(line: 84, column: 2, scope: !7732)
!7813 = !DILocation(line: 85, column: 1, scope: !7732)
!7814 = distinct !DISubprogram(name: "tc_ccm_config", scope: !7815, file: !7815, line: 39, type: !7816, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7818)
!7815 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7816 = !DISubroutineType(types: !7817)
!7817 = !{!125, !2773, !2779, !184, !32, !32}
!7818 = !{!7819, !7820, !7821, !7822, !7823}
!7819 = !DILocalVariable(name: "c", arg: 1, scope: !7814, file: !7815, line: 39, type: !2773)
!7820 = !DILocalVariable(name: "sched", arg: 2, scope: !7814, file: !7815, line: 39, type: !2779)
!7821 = !DILocalVariable(name: "nonce", arg: 3, scope: !7814, file: !7815, line: 39, type: !184)
!7822 = !DILocalVariable(name: "nlen", arg: 4, scope: !7814, file: !7815, line: 40, type: !32)
!7823 = !DILocalVariable(name: "mlen", arg: 5, scope: !7814, file: !7815, line: 40, type: !32)
!7824 = !DILocation(line: 0, scope: !7814)
!7825 = !DILocation(line: 44, column: 8, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7814, file: !7815, line: 44, column: 6)
!7827 = !DILocation(line: 44, column: 27, scope: !7826)
!7828 = !DILocation(line: 50, column: 24, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !7815, line: 50, column: 13)
!7830 = distinct !DILexicalBlock(scope: !7826, file: !7815, line: 48, column: 13)
!7831 = !DILocation(line: 54, column: 5, scope: !7814)
!7832 = !DILocation(line: 54, column: 10, scope: !7814)
!7833 = !DILocation(line: 55, column: 5, scope: !7814)
!7834 = !DILocation(line: 55, column: 11, scope: !7814)
!7835 = !DILocation(line: 56, column: 5, scope: !7814)
!7836 = !DILocation(line: 56, column: 11, scope: !7814)
!7837 = !DILocation(line: 58, column: 2, scope: !7814)
!7838 = !DILocation(line: 59, column: 1, scope: !7814)
!7839 = distinct !DISubprogram(name: "tc_ccm_generation_encryption", scope: !7815, file: !7815, line: 137, type: !7840, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7842)
!7840 = !DISubroutineType(types: !7841)
!7841 = !{!125, !184, !32, !490, !32, !490, !32, !2773}
!7842 = !{!7843, !7844, !7845, !7846, !7847, !7848, !7849, !7850, !7851, !7852}
!7843 = !DILocalVariable(name: "out", arg: 1, scope: !7839, file: !7815, line: 137, type: !184)
!7844 = !DILocalVariable(name: "olen", arg: 2, scope: !7839, file: !7815, line: 137, type: !32)
!7845 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7839, file: !7815, line: 138, type: !490)
!7846 = !DILocalVariable(name: "alen", arg: 4, scope: !7839, file: !7815, line: 139, type: !32)
!7847 = !DILocalVariable(name: "payload", arg: 5, scope: !7839, file: !7815, line: 139, type: !490)
!7848 = !DILocalVariable(name: "plen", arg: 6, scope: !7839, file: !7815, line: 140, type: !32)
!7849 = !DILocalVariable(name: "c", arg: 7, scope: !7839, file: !7815, line: 140, type: !2773)
!7850 = !DILocalVariable(name: "b", scope: !7839, file: !7815, line: 154, type: !311)
!7851 = !DILocalVariable(name: "tag", scope: !7839, file: !7815, line: 155, type: !311)
!7852 = !DILocalVariable(name: "i", scope: !7839, file: !7815, line: 156, type: !32)
!7853 = !DILocation(line: 0, scope: !7839)
!7854 = !DILocation(line: 144, column: 11, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7839, file: !7815, line: 144, column: 6)
!7856 = !DILocation(line: 144, column: 29, scope: !7855)
!7857 = !DILocation(line: 146, column: 10, scope: !7855)
!7858 = !DILocation(line: 146, column: 15, scope: !7855)
!7859 = !DILocation(line: 147, column: 10, scope: !7855)
!7860 = !DILocation(line: 147, column: 15, scope: !7855)
!7861 = !DILocation(line: 150, column: 22, scope: !7855)
!7862 = !DILocation(line: 150, column: 17, scope: !7855)
!7863 = !DILocation(line: 150, column: 9, scope: !7855)
!7864 = !DILocation(line: 144, column: 6, scope: !7839)
!7865 = !DILocation(line: 154, column: 2, scope: !7839)
!7866 = !DILocation(line: 154, column: 10, scope: !7839)
!7867 = !DILocation(line: 155, column: 2, scope: !7839)
!7868 = !DILocation(line: 155, column: 10, scope: !7839)
!7869 = !DILocation(line: 161, column: 10, scope: !7839)
!7870 = !DILocation(line: 161, column: 53, scope: !7839)
!7871 = !DILocation(line: 161, column: 31, scope: !7839)
!7872 = !DILocation(line: 161, column: 9, scope: !7839)
!7873 = !DILocation(line: 161, column: 7, scope: !7839)
!7874 = !DILocation(line: 162, column: 2, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7839, file: !7815, line: 162, column: 2)
!7876 = !DILocation(line: 163, column: 21, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7878, file: !7815, line: 162, column: 28)
!7878 = distinct !DILexicalBlock(scope: !7875, file: !7815, line: 162, column: 2)
!7879 = !DILocation(line: 163, column: 10, scope: !7877)
!7880 = !DILocation(line: 163, column: 3, scope: !7877)
!7881 = !DILocation(line: 163, column: 8, scope: !7877)
!7882 = !DILocation(line: 162, column: 23, scope: !7878)
!7883 = !DILocation(line: 162, column: 16, scope: !7878)
!7884 = distinct !{!7884, !7874, !7885}
!7885 = !DILocation(line: 164, column: 2, scope: !7875)
!7886 = !DILocation(line: 165, column: 25, scope: !7839)
!7887 = !DILocation(line: 165, column: 10, scope: !7839)
!7888 = !DILocation(line: 165, column: 2, scope: !7839)
!7889 = !DILocation(line: 165, column: 8, scope: !7839)
!7890 = !DILocation(line: 166, column: 10, scope: !7839)
!7891 = !DILocation(line: 166, column: 2, scope: !7839)
!7892 = !DILocation(line: 166, column: 8, scope: !7839)
!7893 = !DILocation(line: 169, column: 35, scope: !7839)
!7894 = !DILocation(line: 169, column: 9, scope: !7839)
!7895 = !DILocation(line: 170, column: 6, scope: !7839)
!7896 = !DILocation(line: 171, column: 49, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7898, file: !7815, line: 170, column: 16)
!7898 = distinct !DILexicalBlock(scope: !7839, file: !7815, line: 170, column: 6)
!7899 = !DILocation(line: 171, column: 3, scope: !7897)
!7900 = !DILocation(line: 172, column: 2, scope: !7897)
!7901 = !DILocation(line: 173, column: 6, scope: !7839)
!7902 = !DILocation(line: 174, column: 41, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !7815, line: 173, column: 16)
!7904 = distinct !DILexicalBlock(scope: !7839, file: !7815, line: 173, column: 6)
!7905 = !DILocation(line: 174, column: 3, scope: !7903)
!7906 = !DILocation(line: 175, column: 2, scope: !7903)
!7907 = !DILocation(line: 180, column: 7, scope: !7839)
!7908 = !DILocation(line: 181, column: 16, scope: !7839)
!7909 = !DILocation(line: 181, column: 8, scope: !7839)
!7910 = !DILocation(line: 184, column: 47, scope: !7839)
!7911 = !DILocation(line: 184, column: 2, scope: !7839)
!7912 = !DILocation(line: 186, column: 16, scope: !7839)
!7913 = !DILocation(line: 186, column: 8, scope: !7839)
!7914 = !DILocation(line: 189, column: 33, scope: !7839)
!7915 = !DILocation(line: 189, column: 9, scope: !7839)
!7916 = !DILocation(line: 191, column: 21, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7918, file: !7815, line: 191, column: 2)
!7918 = distinct !DILexicalBlock(scope: !7839, file: !7815, line: 191, column: 2)
!7919 = !DILocation(line: 191, column: 16, scope: !7917)
!7920 = !DILocation(line: 191, column: 2, scope: !7918)
!7921 = !DILocation(line: 190, column: 6, scope: !7839)
!7922 = !DILocation(line: 192, column: 12, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7917, file: !7815, line: 191, column: 32)
!7924 = !DILocation(line: 192, column: 21, scope: !7923)
!7925 = !DILocation(line: 192, column: 19, scope: !7923)
!7926 = !DILocation(line: 192, column: 7, scope: !7923)
!7927 = !DILocation(line: 192, column: 10, scope: !7923)
!7928 = !DILocation(line: 191, column: 27, scope: !7917)
!7929 = distinct !{!7929, !7920, !7930}
!7930 = !DILocation(line: 193, column: 2, scope: !7918)
!7931 = !DILocation(line: 196, column: 1, scope: !7839)
!7932 = distinct !DISubprogram(name: "ccm_cbc_mac", scope: !7815, file: !7815, line: 64, type: !7933, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7935)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{null, !184, !490, !32, !32, !2779}
!7935 = !{!7936, !7937, !7938, !7939, !7940, !7941}
!7936 = !DILocalVariable(name: "T", arg: 1, scope: !7932, file: !7815, line: 64, type: !184)
!7937 = !DILocalVariable(name: "data", arg: 2, scope: !7932, file: !7815, line: 64, type: !490)
!7938 = !DILocalVariable(name: "dlen", arg: 3, scope: !7932, file: !7815, line: 64, type: !32)
!7939 = !DILocalVariable(name: "flag", arg: 4, scope: !7932, file: !7815, line: 65, type: !32)
!7940 = !DILocalVariable(name: "sched", arg: 5, scope: !7932, file: !7815, line: 65, type: !2779)
!7941 = !DILocalVariable(name: "i", scope: !7932, file: !7815, line: 68, type: !32)
!7942 = !DILocation(line: 0, scope: !7932)
!7943 = !DILocation(line: 70, column: 11, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7932, file: !7815, line: 70, column: 6)
!7945 = !DILocation(line: 70, column: 6, scope: !7932)
!7946 = !DILocation(line: 71, column: 26, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7944, file: !7815, line: 70, column: 16)
!7948 = !DILocation(line: 71, column: 8, scope: !7947)
!7949 = !DILocation(line: 72, column: 3, scope: !7947)
!7950 = !DILocation(line: 72, column: 8, scope: !7947)
!7951 = !DILocation(line: 73, column: 8, scope: !7947)
!7952 = !DILocation(line: 74, column: 2, scope: !7947)
!7953 = !DILocation(line: 0, scope: !7944)
!7954 = !DILocation(line: 78, column: 11, scope: !7932)
!7955 = !DILocation(line: 78, column: 2, scope: !7932)
!7956 = !DILocation(line: 79, column: 30, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7932, file: !7815, line: 78, column: 19)
!7958 = !DILocation(line: 79, column: 25, scope: !7957)
!7959 = !DILocation(line: 79, column: 6, scope: !7957)
!7960 = !DILocation(line: 79, column: 9, scope: !7957)
!7961 = !DILocation(line: 79, column: 3, scope: !7957)
!7962 = !DILocation(line: 79, column: 22, scope: !7957)
!7963 = !DILocation(line: 80, column: 11, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7957, file: !7815, line: 80, column: 7)
!7965 = !DILocation(line: 80, column: 24, scope: !7964)
!7966 = !DILocation(line: 80, column: 30, scope: !7964)
!7967 = !DILocation(line: 81, column: 11, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7964, file: !7815, line: 80, column: 44)
!7969 = !DILocation(line: 82, column: 3, scope: !7968)
!7970 = distinct !{!7970, !7955, !7971}
!7971 = !DILocation(line: 83, column: 2, scope: !7932)
!7972 = !DILocation(line: 84, column: 1, scope: !7932)
!7973 = distinct !DISubprogram(name: "ccm_ctr_mode", scope: !7815, file: !7815, line: 93, type: !7974, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7977)
!7974 = !DISubroutineType(types: !7975)
!7975 = !{!125, !184, !32, !490, !32, !184, !7976}
!7976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2779)
!7977 = !{!7978, !7979, !7980, !7981, !7982, !7983, !7984, !7985, !7986, !7987}
!7978 = !DILocalVariable(name: "out", arg: 1, scope: !7973, file: !7815, line: 93, type: !184)
!7979 = !DILocalVariable(name: "outlen", arg: 2, scope: !7973, file: !7815, line: 93, type: !32)
!7980 = !DILocalVariable(name: "in", arg: 3, scope: !7973, file: !7815, line: 93, type: !490)
!7981 = !DILocalVariable(name: "inlen", arg: 4, scope: !7973, file: !7815, line: 94, type: !32)
!7982 = !DILocalVariable(name: "ctr", arg: 5, scope: !7973, file: !7815, line: 94, type: !184)
!7983 = !DILocalVariable(name: "sched", arg: 6, scope: !7973, file: !7815, line: 94, type: !7976)
!7984 = !DILocalVariable(name: "buffer", scope: !7973, file: !7815, line: 97, type: !311)
!7985 = !DILocalVariable(name: "nonce", scope: !7973, file: !7815, line: 98, type: !311)
!7986 = !DILocalVariable(name: "block_num", scope: !7973, file: !7815, line: 99, type: !227)
!7987 = !DILocalVariable(name: "i", scope: !7973, file: !7815, line: 100, type: !32)
!7988 = !DILocation(line: 0, scope: !7973)
!7989 = !DILocation(line: 97, column: 2, scope: !7973)
!7990 = !DILocation(line: 97, column: 10, scope: !7973)
!7991 = !DILocation(line: 98, column: 2, scope: !7973)
!7992 = !DILocation(line: 98, column: 10, scope: !7973)
!7993 = !DILocation(line: 103, column: 10, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7973, file: !7815, line: 103, column: 6)
!7995 = !DILocation(line: 103, column: 27, scope: !7994)
!7996 = !DILocation(line: 114, column: 9, scope: !7973)
!7997 = !DILocation(line: 117, column: 27, scope: !7973)
!7998 = !DILocation(line: 117, column: 44, scope: !7973)
!7999 = !DILocation(line: 117, column: 37, scope: !7973)
!8000 = !DILocation(line: 117, column: 43, scope: !7973)
!8001 = !DILocation(line: 117, column: 42, scope: !7973)
!8002 = !DILocation(line: 118, column: 2, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7973, file: !7815, line: 118, column: 2)
!8004 = !DILocation(line: 119, column: 10, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !7815, line: 119, column: 7)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !7815, line: 118, column: 30)
!8007 = distinct !DILexicalBlock(scope: !8003, file: !7815, line: 118, column: 2)
!8008 = !DILocation(line: 119, column: 33, scope: !8005)
!8009 = !DILocation(line: 119, column: 7, scope: !8006)
!8010 = !DILocation(line: 120, column: 13, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8005, file: !7815, line: 119, column: 39)
!8012 = !DILocation(line: 121, column: 36, scope: !8011)
!8013 = !DILocation(line: 121, column: 16, scope: !8011)
!8014 = !DILocation(line: 121, column: 14, scope: !8011)
!8015 = !DILocation(line: 122, column: 16, scope: !8011)
!8016 = !DILocation(line: 122, column: 14, scope: !8011)
!8017 = !DILocation(line: 123, column: 9, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8011, file: !7815, line: 123, column: 8)
!8019 = !DILocation(line: 123, column: 8, scope: !8011)
!8020 = !DILocation(line: 128, column: 12, scope: !8006)
!8021 = !DILocation(line: 128, column: 49, scope: !8006)
!8022 = !DILocation(line: 128, column: 46, scope: !8006)
!8023 = !DILocation(line: 128, column: 44, scope: !8006)
!8024 = !DILocation(line: 128, column: 7, scope: !8006)
!8025 = !DILocation(line: 128, column: 10, scope: !8006)
!8026 = !DILocation(line: 118, column: 25, scope: !8007)
!8027 = !DILocation(line: 118, column: 16, scope: !8007)
!8028 = distinct !{!8028, !8002, !8029}
!8029 = !DILocation(line: 129, column: 2, scope: !8003)
!8030 = !DILocation(line: 132, column: 12, scope: !7973)
!8031 = !DILocation(line: 132, column: 33, scope: !7973)
!8032 = !DILocation(line: 132, column: 2, scope: !7973)
!8033 = !DILocation(line: 132, column: 10, scope: !7973)
!8034 = !DILocation(line: 132, column: 23, scope: !7973)
!8035 = !DILocation(line: 132, column: 31, scope: !7973)
!8036 = !DILocation(line: 134, column: 2, scope: !7973)
!8037 = !DILocation(line: 135, column: 1, scope: !7973)
!8038 = distinct !DISubprogram(name: "tc_ccm_decryption_verification", scope: !7815, file: !7815, line: 198, type: !7840, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !8039)
!8039 = !{!8040, !8041, !8042, !8043, !8044, !8045, !8046, !8047, !8048, !8049}
!8040 = !DILocalVariable(name: "out", arg: 1, scope: !8038, file: !7815, line: 198, type: !184)
!8041 = !DILocalVariable(name: "olen", arg: 2, scope: !8038, file: !7815, line: 198, type: !32)
!8042 = !DILocalVariable(name: "associated_data", arg: 3, scope: !8038, file: !7815, line: 199, type: !490)
!8043 = !DILocalVariable(name: "alen", arg: 4, scope: !8038, file: !7815, line: 200, type: !32)
!8044 = !DILocalVariable(name: "payload", arg: 5, scope: !8038, file: !7815, line: 200, type: !490)
!8045 = !DILocalVariable(name: "plen", arg: 6, scope: !8038, file: !7815, line: 201, type: !32)
!8046 = !DILocalVariable(name: "c", arg: 7, scope: !8038, file: !7815, line: 201, type: !2773)
!8047 = !DILocalVariable(name: "b", scope: !8038, file: !7815, line: 215, type: !311)
!8048 = !DILocalVariable(name: "tag", scope: !8038, file: !7815, line: 216, type: !311)
!8049 = !DILocalVariable(name: "i", scope: !8038, file: !7815, line: 217, type: !32)
!8050 = !DILocation(line: 0, scope: !8038)
!8051 = !DILocation(line: 205, column: 11, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8038, file: !7815, line: 205, column: 6)
!8053 = !DILocation(line: 205, column: 29, scope: !8052)
!8054 = !DILocation(line: 207, column: 13, scope: !8052)
!8055 = !DILocation(line: 207, column: 18, scope: !8052)
!8056 = !DILocation(line: 208, column: 13, scope: !8052)
!8057 = !DILocation(line: 208, column: 18, scope: !8052)
!8058 = !DILocation(line: 211, column: 24, scope: !8052)
!8059 = !DILocation(line: 211, column: 19, scope: !8052)
!8060 = !DILocation(line: 211, column: 12, scope: !8052)
!8061 = !DILocation(line: 205, column: 6, scope: !8038)
!8062 = !DILocation(line: 215, column: 2, scope: !8038)
!8063 = !DILocation(line: 215, column: 10, scope: !8038)
!8064 = !DILocation(line: 216, column: 2, scope: !8038)
!8065 = !DILocation(line: 216, column: 10, scope: !8038)
!8066 = !DILocation(line: 222, column: 7, scope: !8038)
!8067 = !DILocation(line: 223, column: 2, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8038, file: !7815, line: 223, column: 2)
!8069 = !DILocation(line: 224, column: 21, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !7815, line: 223, column: 27)
!8071 = distinct !DILexicalBlock(scope: !8068, file: !7815, line: 223, column: 2)
!8072 = !DILocation(line: 224, column: 10, scope: !8070)
!8073 = !DILocation(line: 224, column: 3, scope: !8070)
!8074 = !DILocation(line: 224, column: 8, scope: !8070)
!8075 = !DILocation(line: 223, column: 22, scope: !8071)
!8076 = !DILocation(line: 223, column: 16, scope: !8071)
!8077 = distinct !{!8077, !8067, !8078}
!8078 = !DILocation(line: 225, column: 2, scope: !8068)
!8079 = !DILocation(line: 226, column: 10, scope: !8038)
!8080 = !DILocation(line: 226, column: 16, scope: !8038)
!8081 = !DILocation(line: 226, column: 2, scope: !8038)
!8082 = !DILocation(line: 226, column: 8, scope: !8038)
!8083 = !DILocation(line: 229, column: 67, scope: !8038)
!8084 = !DILocation(line: 229, column: 2, scope: !8038)
!8085 = !DILocation(line: 231, column: 16, scope: !8038)
!8086 = !DILocation(line: 231, column: 8, scope: !8038)
!8087 = !DILocation(line: 234, column: 33, scope: !8038)
!8088 = !DILocation(line: 234, column: 9, scope: !8038)
!8089 = !DILocation(line: 235, column: 16, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !7815, line: 235, column: 2)
!8091 = distinct !DILexicalBlock(scope: !8038, file: !7815, line: 235, column: 2)
!8092 = !DILocation(line: 235, column: 2, scope: !8091)
!8093 = !DILocation(line: 236, column: 39, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8090, file: !7815, line: 235, column: 32)
!8095 = !DILocation(line: 236, column: 12, scope: !8094)
!8096 = !DILocation(line: 236, column: 46, scope: !8094)
!8097 = !DILocation(line: 236, column: 44, scope: !8094)
!8098 = !DILocation(line: 236, column: 3, scope: !8094)
!8099 = !DILocation(line: 236, column: 10, scope: !8094)
!8100 = !DILocation(line: 235, column: 27, scope: !8090)
!8101 = distinct !{!8101, !8092, !8102}
!8102 = !DILocation(line: 237, column: 2, scope: !8091)
!8103 = !DILocation(line: 242, column: 10, scope: !8038)
!8104 = !DILocation(line: 242, column: 51, scope: !8038)
!8105 = !DILocation(line: 242, column: 30, scope: !8038)
!8106 = !DILocation(line: 242, column: 9, scope: !8038)
!8107 = !DILocation(line: 242, column: 7, scope: !8038)
!8108 = !DILocation(line: 243, column: 2, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8038, file: !7815, line: 243, column: 2)
!8110 = !DILocation(line: 244, column: 21, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !7815, line: 243, column: 27)
!8112 = distinct !DILexicalBlock(scope: !8109, file: !7815, line: 243, column: 2)
!8113 = !DILocation(line: 244, column: 10, scope: !8111)
!8114 = !DILocation(line: 244, column: 3, scope: !8111)
!8115 = !DILocation(line: 244, column: 8, scope: !8111)
!8116 = !DILocation(line: 243, column: 22, scope: !8112)
!8117 = !DILocation(line: 243, column: 16, scope: !8112)
!8118 = distinct !{!8118, !8108, !8119}
!8119 = !DILocation(line: 245, column: 2, scope: !8109)
!8120 = !DILocation(line: 246, column: 26, scope: !8038)
!8121 = !DILocation(line: 246, column: 37, scope: !8038)
!8122 = !DILocation(line: 246, column: 10, scope: !8038)
!8123 = !DILocation(line: 246, column: 8, scope: !8038)
!8124 = !DILocation(line: 247, column: 10, scope: !8038)
!8125 = !DILocation(line: 247, column: 8, scope: !8038)
!8126 = !DILocation(line: 250, column: 33, scope: !8038)
!8127 = !DILocation(line: 250, column: 9, scope: !8038)
!8128 = !DILocation(line: 251, column: 6, scope: !8038)
!8129 = !DILocation(line: 252, column: 47, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !7815, line: 251, column: 16)
!8131 = distinct !DILexicalBlock(scope: !8038, file: !7815, line: 251, column: 6)
!8132 = !DILocation(line: 252, column: 3, scope: !8130)
!8133 = !DILocation(line: 253, column: 2, scope: !8130)
!8134 = !DILocation(line: 254, column: 6, scope: !8038)
!8135 = !DILocation(line: 255, column: 33, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !7815, line: 254, column: 16)
!8137 = distinct !DILexicalBlock(scope: !8038, file: !7815, line: 254, column: 6)
!8138 = !DILocation(line: 255, column: 28, scope: !8136)
!8139 = !DILocation(line: 255, column: 45, scope: !8136)
!8140 = !DILocation(line: 255, column: 3, scope: !8136)
!8141 = !DILocation(line: 256, column: 2, scope: !8136)
!8142 = !DILocation(line: 259, column: 26, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8038, file: !7815, line: 259, column: 6)
!8144 = !DILocation(line: 259, column: 6, scope: !8143)
!8145 = !DILocation(line: 259, column: 32, scope: !8143)
!8146 = !DILocation(line: 259, column: 6, scope: !8038)
!8147 = !DILocation(line: 263, column: 26, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8143, file: !7815, line: 261, column: 11)
!8149 = !DILocation(line: 263, column: 21, scope: !8148)
!8150 = !DILocation(line: 263, column: 3, scope: !8148)
!8151 = !DILocation(line: 264, column: 3, scope: !8148)
!8152 = !DILocation(line: 0, scope: !8143)
!8153 = !DILocation(line: 266, column: 1, scope: !8038)
!8154 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !8155, file: !8155, line: 57, type: !8156, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !8202)
!8155 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8156 = !DISubroutineType(types: !8157)
!8157 = !{null, !32, !8158}
!8158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8159, size: 32)
!8159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8160)
!8160 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2906, line: 141, baseType: !8161)
!8161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2906, line: 97, size: 256, elements: !8162)
!8162 = !{!8163}
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8161, file: !2906, line: 107, baseType: !8164, size: 256)
!8164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2906, line: 98, size: 256, elements: !8165)
!8165 = !{!8166, !8171, !8176, !8181, !8186, !8191, !8196, !8201}
!8166 = !DIDerivedType(tag: DW_TAG_member, scope: !8164, file: !2906, line: 99, baseType: !8167, size: 32)
!8167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8164, file: !2906, line: 99, size: 32, elements: !8168)
!8168 = !{!8169, !8170}
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8167, file: !2906, line: 99, baseType: !208, size: 32)
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8167, file: !2906, line: 99, baseType: !208, size: 32)
!8171 = !DIDerivedType(tag: DW_TAG_member, scope: !8164, file: !2906, line: 100, baseType: !8172, size: 32, offset: 32)
!8172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8164, file: !2906, line: 100, size: 32, elements: !8173)
!8173 = !{!8174, !8175}
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8172, file: !2906, line: 100, baseType: !208, size: 32)
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8172, file: !2906, line: 100, baseType: !208, size: 32)
!8176 = !DIDerivedType(tag: DW_TAG_member, scope: !8164, file: !2906, line: 101, baseType: !8177, size: 32, offset: 64)
!8177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8164, file: !2906, line: 101, size: 32, elements: !8178)
!8178 = !{!8179, !8180}
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8177, file: !2906, line: 101, baseType: !208, size: 32)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8177, file: !2906, line: 101, baseType: !208, size: 32)
!8181 = !DIDerivedType(tag: DW_TAG_member, scope: !8164, file: !2906, line: 102, baseType: !8182, size: 32, offset: 96)
!8182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8164, file: !2906, line: 102, size: 32, elements: !8183)
!8183 = !{!8184, !8185}
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8182, file: !2906, line: 102, baseType: !208, size: 32)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8182, file: !2906, line: 102, baseType: !208, size: 32)
!8186 = !DIDerivedType(tag: DW_TAG_member, scope: !8164, file: !2906, line: 103, baseType: !8187, size: 32, offset: 128)
!8187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8164, file: !2906, line: 103, size: 32, elements: !8188)
!8188 = !{!8189, !8190}
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8187, file: !2906, line: 103, baseType: !208, size: 32)
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8187, file: !2906, line: 103, baseType: !208, size: 32)
!8191 = !DIDerivedType(tag: DW_TAG_member, scope: !8164, file: !2906, line: 104, baseType: !8192, size: 32, offset: 160)
!8192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8164, file: !2906, line: 104, size: 32, elements: !8193)
!8193 = !{!8194, !8195}
!8194 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8192, file: !2906, line: 104, baseType: !208, size: 32)
!8195 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8192, file: !2906, line: 104, baseType: !208, size: 32)
!8196 = !DIDerivedType(tag: DW_TAG_member, scope: !8164, file: !2906, line: 105, baseType: !8197, size: 32, offset: 192)
!8197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8164, file: !2906, line: 105, size: 32, elements: !8198)
!8198 = !{!8199, !8200}
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8197, file: !2906, line: 105, baseType: !208, size: 32)
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8197, file: !2906, line: 105, baseType: !208, size: 32)
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8164, file: !2906, line: 106, baseType: !208, size: 32, offset: 224)
!8202 = !{!8203, !8204}
!8203 = !DILocalVariable(name: "reason", arg: 1, scope: !8154, file: !8155, line: 57, type: !32)
!8204 = !DILocalVariable(name: "esf", arg: 2, scope: !8154, file: !8155, line: 57, type: !8158)
!8205 = !DILocation(line: 0, scope: !8154)
!8206 = !DILocation(line: 60, column: 10, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8154, file: !8155, line: 60, column: 6)
!8208 = !DILocation(line: 60, column: 6, scope: !8154)
!8209 = !DILocation(line: 61, column: 3, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8207, file: !8155, line: 60, column: 19)
!8211 = !DILocation(line: 62, column: 2, scope: !8210)
!8212 = !DILocation(line: 63, column: 2, scope: !8154)
!8213 = !DILocation(line: 64, column: 1, scope: !8154)
!8214 = distinct !DISubprogram(name: "esf_dump", scope: !8155, file: !8155, line: 20, type: !8215, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !8217)
!8215 = !DISubroutineType(types: !8216)
!8216 = !{null, !8158}
!8217 = !{!8218}
!8218 = !DILocalVariable(name: "esf", arg: 1, scope: !8214, file: !8155, line: 20, type: !8158)
!8219 = !DILocation(line: 0, scope: !8214)
!8220 = !DILocation(line: 22, column: 2, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8222, file: !8155, line: 22, column: 2)
!8222 = distinct !DILexicalBlock(scope: !8223, file: !8155, line: 22, column: 2)
!8223 = distinct !DILexicalBlock(scope: !8224, file: !8155, line: 22, column: 2)
!8224 = distinct !DILexicalBlock(scope: !8214, file: !8155, line: 22, column: 2)
!8225 = !DILocation(line: 24, column: 2, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8227, file: !8155, line: 24, column: 2)
!8227 = distinct !DILexicalBlock(scope: !8228, file: !8155, line: 24, column: 2)
!8228 = distinct !DILexicalBlock(scope: !8229, file: !8155, line: 24, column: 2)
!8229 = distinct !DILexicalBlock(scope: !8214, file: !8155, line: 24, column: 2)
!8230 = !DILocation(line: 26, column: 2, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !8155, line: 26, column: 2)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !8155, line: 26, column: 2)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !8155, line: 26, column: 2)
!8234 = distinct !DILexicalBlock(scope: !8214, file: !8155, line: 26, column: 2)
!8235 = !DILocation(line: 53, column: 2, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8237, file: !8155, line: 53, column: 2)
!8237 = distinct !DILexicalBlock(scope: !8238, file: !8155, line: 53, column: 2)
!8238 = distinct !DILexicalBlock(scope: !8239, file: !8155, line: 53, column: 2)
!8239 = distinct !DILexicalBlock(scope: !8214, file: !8155, line: 53, column: 2)
!8240 = !DILocation(line: 55, column: 1, scope: !8214)
!8241 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !8155, file: !8155, line: 82, type: !8242, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !8257)
!8242 = !DISubroutineType(types: !8243)
!8243 = !{null, !8158, !8244}
!8244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8245, size: 32)
!8245 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8246)
!8246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8247)
!8247 = !{!8248, !8249, !8250, !8251, !8252, !8253, !8254, !8255, !8256}
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8246, file: !601, line: 26, baseType: !208, size: 32)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8246, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8246, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8246, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8246, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8246, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8246, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8246, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8246, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8257 = !{!8258, !8259, !8260}
!8258 = !DILocalVariable(name: "esf", arg: 1, scope: !8241, file: !8155, line: 82, type: !8158)
!8259 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !8241, file: !8155, line: 82, type: !8244)
!8260 = !DILocalVariable(name: "reason", scope: !8241, file: !8155, line: 88, type: !32)
!8261 = !DILocation(line: 0, scope: !8241)
!8262 = !DILocation(line: 88, column: 35, scope: !8241)
!8263 = !DILocation(line: 108, column: 2, scope: !8241)
!8264 = !DILocation(line: 131, column: 1, scope: !8241)
!8265 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !8155, file: !8155, line: 133, type: !8266, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !8268)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{null, !124}
!8268 = !{!8269, !8270, !8271}
!8269 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8265, file: !8155, line: 133, type: !124)
!8270 = !DILocalVariable(name: "ssf_contents", scope: !8265, file: !8155, line: 135, type: !1014)
!8271 = !DILocalVariable(name: "oops_esf", scope: !8265, file: !8155, line: 136, type: !8160)
!8272 = !DILocation(line: 0, scope: !8265)
!8273 = !DILocation(line: 136, column: 2, scope: !8265)
!8274 = !DILocation(line: 136, column: 15, scope: !8265)
!8275 = !DILocation(line: 139, column: 22, scope: !8265)
!8276 = !DILocation(line: 139, column: 17, scope: !8265)
!8277 = !DILocation(line: 139, column: 20, scope: !8265)
!8278 = !DILocation(line: 141, column: 2, scope: !8265)
!8279 = !DILocation(line: 142, column: 2, scope: !8265)
!8280 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8281, file: !8281, line: 40, type: !6873, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8282)
!8281 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8282 = !{!8283}
!8283 = !DILocalVariable(name: "irq", arg: 1, scope: !8280, file: !8281, line: 40, type: !32)
!8284 = !DILocation(line: 0, scope: !8280)
!8285 = !DILocation(line: 42, column: 2, scope: !8280)
!8286 = !DILocation(line: 43, column: 1, scope: !8280)
!8287 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !680, file: !680, line: 1684, type: !8288, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8290)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{null, !913}
!8290 = !{!8291}
!8291 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8287, file: !680, line: 1684, type: !913)
!8292 = !DILocation(line: 0, scope: !8287)
!8293 = !DILocation(line: 1686, column: 23, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8287, file: !680, line: 1686, column: 7)
!8295 = !DILocation(line: 1686, column: 7, scope: !8287)
!8296 = !DILocation(line: 1688, column: 5, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8294, file: !680, line: 1687, column: 3)
!8298 = !{i64 2150442888}
!8299 = !DILocation(line: 1689, column: 81, scope: !8297)
!8300 = !DILocation(line: 1689, column: 60, scope: !8297)
!8301 = !DILocation(line: 1689, column: 34, scope: !8297)
!8302 = !DILocation(line: 1689, column: 5, scope: !8297)
!8303 = !DILocation(line: 1689, column: 43, scope: !8297)
!8304 = !DILocation(line: 1690, column: 5, scope: !8297)
!8305 = !{i64 2150443002}
!8306 = !DILocation(line: 1691, column: 3, scope: !8297)
!8307 = !DILocation(line: 1692, column: 1, scope: !8287)
!8308 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8281, file: !8281, line: 45, type: !6873, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8309)
!8309 = !{!8310}
!8310 = !DILocalVariable(name: "irq", arg: 1, scope: !8308, file: !8281, line: 45, type: !32)
!8311 = !DILocation(line: 0, scope: !8308)
!8312 = !DILocation(line: 47, column: 2, scope: !8308)
!8313 = !DILocation(line: 48, column: 1, scope: !8308)
!8314 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !680, file: !680, line: 1722, type: !8288, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8315)
!8315 = !{!8316}
!8316 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8314, file: !680, line: 1722, type: !913)
!8317 = !DILocation(line: 0, scope: !8314)
!8318 = !DILocation(line: 1724, column: 23, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8314, file: !680, line: 1724, column: 7)
!8320 = !DILocation(line: 1724, column: 7, scope: !8314)
!8321 = !DILocation(line: 1726, column: 81, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8319, file: !680, line: 1725, column: 3)
!8323 = !DILocation(line: 1726, column: 60, scope: !8322)
!8324 = !DILocation(line: 1726, column: 34, scope: !8322)
!8325 = !DILocation(line: 1726, column: 5, scope: !8322)
!8326 = !DILocation(line: 1726, column: 43, scope: !8322)
!8327 = !DILocation(line: 271, column: 3, scope: !8328, inlinedAt: !8330)
!8328 = distinct !DISubprogram(name: "__DSB", scope: !8329, file: !8329, line: 269, type: !3326, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !639)
!8329 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8330 = distinct !DILocation(line: 1727, column: 5, scope: !8322)
!8331 = !{i64 2897271}
!8332 = !DILocation(line: 260, column: 3, scope: !8333, inlinedAt: !8334)
!8333 = distinct !DISubprogram(name: "__ISB", scope: !8329, file: !8329, line: 258, type: !3326, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !639)
!8334 = distinct !DILocation(line: 1728, column: 5, scope: !8322)
!8335 = !{i64 2896988}
!8336 = !DILocation(line: 1729, column: 3, scope: !8322)
!8337 = !DILocation(line: 1730, column: 1, scope: !8314)
!8338 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8281, file: !8281, line: 50, type: !8339, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8341)
!8339 = !DISubroutineType(types: !8340)
!8340 = !{!125, !32}
!8341 = !{!8342}
!8342 = !DILocalVariable(name: "irq", arg: 1, scope: !8338, file: !8281, line: 50, type: !32)
!8343 = !DILocation(line: 0, scope: !8338)
!8344 = !DILocation(line: 52, column: 20, scope: !8338)
!8345 = !DILocation(line: 52, column: 9, scope: !8338)
!8346 = !DILocation(line: 52, column: 41, scope: !8338)
!8347 = !DILocation(line: 52, column: 39, scope: !8338)
!8348 = !DILocation(line: 52, column: 2, scope: !8338)
!8349 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8281, file: !8281, line: 64, type: !8350, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8352)
!8350 = !DISubroutineType(types: !8351)
!8351 = !{null, !32, !32, !208}
!8352 = !{!8353, !8354, !8355}
!8353 = !DILocalVariable(name: "irq", arg: 1, scope: !8349, file: !8281, line: 64, type: !32)
!8354 = !DILocalVariable(name: "prio", arg: 2, scope: !8349, file: !8281, line: 64, type: !32)
!8355 = !DILocalVariable(name: "flags", arg: 3, scope: !8349, file: !8281, line: 64, type: !208)
!8356 = !DILocation(line: 0, scope: !8349)
!8357 = !DILocation(line: 83, column: 8, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !8281, line: 82, column: 9)
!8359 = distinct !DILexicalBlock(scope: !8349, file: !8281, line: 76, column: 6)
!8360 = !DILocation(line: 95, column: 2, scope: !8349)
!8361 = !DILocation(line: 96, column: 1, scope: !8349)
!8362 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8363, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8365)
!8363 = !DISubroutineType(types: !8364)
!8364 = !{null, !913, !208}
!8365 = !{!8366, !8367}
!8366 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8362, file: !680, line: 1814, type: !913)
!8367 = !DILocalVariable(name: "priority", arg: 2, scope: !8362, file: !680, line: 1814, type: !208)
!8368 = !DILocation(line: 0, scope: !8362)
!8369 = !DILocation(line: 0, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8362, file: !680, line: 1816, column: 7)
!8371 = !DILocation(line: 1816, column: 7, scope: !8362)
!8372 = !DILocation(line: 1824, column: 1, scope: !8362)
!8373 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8281, file: !8281, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8374)
!8374 = !{!8375}
!8375 = !DILocalVariable(name: "unused", arg: 1, scope: !8373, file: !8281, line: 155, type: !13)
!8376 = !DILocation(line: 0, scope: !8373)
!8377 = !DILocation(line: 159, column: 2, scope: !8373)
!8378 = !DILocation(line: 160, column: 1, scope: !8373)
!8379 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8380, file: !8380, line: 87, type: !3326, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2843, retainedNodes: !639)
!8380 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8381 = !DILocation(line: 89, column: 2, scope: !8379)
!8382 = !DILocation(line: 90, column: 2, scope: !8379)
!8383 = !DILocation(line: 91, column: 1, scope: !8379)
!8384 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8380, file: !8380, line: 23, type: !3326, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8385 = !DISubprogram(name: "z_arm_int_exit", scope: !8386, file: !8386, line: 153, type: !3326, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8386 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8387 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8388, file: !8388, line: 256, type: !3326, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !639)
!8388 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8389 = !DILocation(line: 258, column: 2, scope: !8387)
!8390 = !DILocation(line: 260, column: 2, scope: !8387)
!8391 = !DILocation(line: 262, column: 2, scope: !8387)
!8392 = !DILocation(line: 263, column: 2, scope: !8387)
!8393 = !DILocation(line: 267, column: 2, scope: !8387)
!8394 = !DILocation(line: 268, column: 2, scope: !8387)
!8395 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8388, file: !8388, line: 53, type: !3326, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !639)
!8396 = !DILocation(line: 55, column: 12, scope: !8395)
!8397 = !DILocation(line: 271, column: 3, scope: !8398, inlinedAt: !8399)
!8398 = distinct !DISubprogram(name: "__DSB", scope: !8329, file: !8329, line: 269, type: !3326, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !639)
!8399 = distinct !DILocation(line: 56, column: 2, scope: !8395)
!8400 = !{i64 2895942}
!8401 = !DILocation(line: 260, column: 3, scope: !8402, inlinedAt: !8403)
!8402 = distinct !DISubprogram(name: "__ISB", scope: !8329, file: !8329, line: 258, type: !3326, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !639)
!8403 = distinct !DILocation(line: 57, column: 2, scope: !8395)
!8404 = !{i64 2895659}
!8405 = !DILocation(line: 58, column: 1, scope: !8395)
!8406 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !8388, file: !8388, line: 96, type: !3326, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !639)
!8407 = !DILocation(line: 103, column: 13, scope: !8406)
!8408 = !DILocation(line: 975, column: 3, scope: !8409, inlinedAt: !8414)
!8409 = distinct !DISubprogram(name: "__get_CONTROL", scope: !8329, file: !8329, line: 971, type: !8410, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !8412)
!8410 = !DISubroutineType(types: !8411)
!8411 = !{!208}
!8412 = !{!8413}
!8413 = !DILocalVariable(name: "result", scope: !8409, file: !8329, line: 973, type: !208)
!8414 = distinct !DILocation(line: 189, column: 16, scope: !8406)
!8415 = !{i64 2916772}
!8416 = !DILocation(line: 0, scope: !8409, inlinedAt: !8414)
!8417 = !DILocation(line: 189, column: 32, scope: !8406)
!8418 = !DILocalVariable(name: "control", arg: 1, scope: !8419, file: !8329, line: 1001, type: !208)
!8419 = distinct !DISubprogram(name: "__set_CONTROL", scope: !8329, file: !8329, line: 1001, type: !8420, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !8422)
!8420 = !DISubroutineType(types: !8421)
!8421 = !{null, !208}
!8422 = !{!8418}
!8423 = !DILocation(line: 0, scope: !8419, inlinedAt: !8424)
!8424 = distinct !DILocation(line: 189, column: 2, scope: !8406)
!8425 = !DILocation(line: 1003, column: 3, scope: !8419, inlinedAt: !8424)
!8426 = !{i64 2917492}
!8427 = !DILocation(line: 260, column: 3, scope: !8402, inlinedAt: !8428)
!8428 = distinct !DILocation(line: 1004, column: 3, scope: !8419, inlinedAt: !8424)
!8429 = !DILocation(line: 191, column: 1, scope: !8406)
!8430 = distinct !DISubprogram(name: "arch_swap", scope: !8431, file: !8431, line: 33, type: !8339, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !8432)
!8431 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8432 = !{!8433}
!8433 = !DILocalVariable(name: "key", arg: 1, scope: !8430, file: !8431, line: 33, type: !32)
!8434 = !DILocation(line: 0, scope: !8430)
!8435 = !DILocation(line: 36, column: 2, scope: !8430)
!8436 = !DILocation(line: 36, column: 17, scope: !8430)
!8437 = !DILocation(line: 36, column: 25, scope: !8430)
!8438 = !DILocation(line: 37, column: 37, scope: !8430)
!8439 = !DILocation(line: 37, column: 17, scope: !8430)
!8440 = !DILocation(line: 37, column: 35, scope: !8430)
!8441 = !DILocation(line: 41, column: 12, scope: !8430)
!8442 = !DILocalVariable(name: "key", arg: 1, scope: !8443, file: !6862, line: 84, type: !32)
!8443 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6862, file: !6862, line: 84, type: !6873, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !8444)
!8444 = !{!8442}
!8445 = !DILocation(line: 0, scope: !8443, inlinedAt: !8446)
!8446 = distinct !DILocation(line: 44, column: 2, scope: !8430)
!8447 = !DILocation(line: 95, column: 2, scope: !8443, inlinedAt: !8446)
!8448 = !{i64 2038302}
!8449 = !DILocation(line: 53, column: 9, scope: !8430)
!8450 = !DILocation(line: 53, column: 24, scope: !8430)
!8451 = !DILocation(line: 53, column: 2, scope: !8430)
!8452 = distinct !DISubprogram(name: "arch_new_thread", scope: !8453, file: !8453, line: 56, type: !8454, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !8561)
!8453 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8454 = !DISubroutineType(types: !8455)
!8455 = !{null, !8456, !8556, !393, !5276, !124, !124, !124}
!8456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8457, size: 32)
!8457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !8458)
!8458 = !{!8459, !8517, !8529, !8530, !8531, !8532, !8538, !8551}
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8457, file: !531, line: 247, baseType: !8460, size: 384)
!8460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !8461)
!8461 = !{!8462, !8486, !8493, !8494, !8495, !8504, !8505, !8506}
!8462 = !DIDerivedType(tag: DW_TAG_member, scope: !8460, file: !531, line: 60, baseType: !8463, size: 64)
!8463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8460, file: !531, line: 60, size: 64, elements: !8464)
!8464 = !{!8465, !8480}
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8463, file: !531, line: 61, baseType: !8466, size: 64)
!8466 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !8467)
!8467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !8468)
!8468 = !{!8469, !8475}
!8469 = !DIDerivedType(tag: DW_TAG_member, scope: !8467, file: !541, line: 38, baseType: !8470, size: 32)
!8470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8467, file: !541, line: 38, size: 32, elements: !8471)
!8471 = !{!8472, !8474}
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8470, file: !541, line: 39, baseType: !8473, size: 32)
!8473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8467, size: 32)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8470, file: !541, line: 40, baseType: !8473, size: 32)
!8475 = !DIDerivedType(tag: DW_TAG_member, scope: !8467, file: !541, line: 42, baseType: !8476, size: 32, offset: 32)
!8476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8467, file: !541, line: 42, size: 32, elements: !8477)
!8477 = !{!8478, !8479}
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8476, file: !541, line: 43, baseType: !8473, size: 32)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8476, file: !541, line: 44, baseType: !8473, size: 32)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8463, file: !531, line: 62, baseType: !8481, size: 64)
!8481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !8482)
!8482 = !{!8483}
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8481, file: !557, line: 50, baseType: !8484, size: 64)
!8484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8485, size: 64, elements: !562)
!8485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8481, size: 32)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8460, file: !531, line: 68, baseType: !8487, size: 32, offset: 64)
!8487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8488, size: 32)
!8488 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !8489)
!8489 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !8490)
!8490 = !{!8491}
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8489, file: !567, line: 232, baseType: !8492, size: 64)
!8492 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !8467)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8460, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8460, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!8495 = !DIDerivedType(tag: DW_TAG_member, scope: !8460, file: !531, line: 90, baseType: !8496, size: 16, offset: 112)
!8496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8460, file: !531, line: 90, size: 16, elements: !8497)
!8497 = !{!8498, !8503}
!8498 = !DIDerivedType(tag: DW_TAG_member, scope: !8496, file: !531, line: 91, baseType: !8499, size: 16)
!8499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8496, file: !531, line: 91, size: 16, elements: !8500)
!8500 = !{!8501, !8502}
!8501 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8499, file: !531, line: 96, baseType: !581, size: 8)
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8499, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8496, file: !531, line: 100, baseType: !227, size: 16)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8460, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8460, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8460, file: !531, line: 131, baseType: !8507, size: 192, offset: 192)
!8507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !8508)
!8508 = !{!8509, !8510, !8516}
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8507, file: !567, line: 245, baseType: !8466, size: 64)
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8507, file: !567, line: 246, baseType: !8511, size: 32, offset: 64)
!8511 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !8512)
!8512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8513, size: 32)
!8513 = !DISubroutineType(types: !8514)
!8514 = !{null, !8515}
!8515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8507, size: 32)
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8507, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8457, file: !531, line: 250, baseType: !8518, size: 288, offset: 384)
!8518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8519)
!8519 = !{!8520, !8521, !8522, !8523, !8524, !8525, !8526, !8527, !8528}
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8518, file: !601, line: 26, baseType: !208, size: 32)
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8518, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8522 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8518, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8523 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8518, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8518, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8518, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8518, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8518, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8528 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8518, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8457, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8457, file: !531, line: 256, baseType: !8488, size: 64, offset: 704)
!8531 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8457, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!8532 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8457, file: !531, line: 300, baseType: !8533, size: 96, offset: 800)
!8533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !8534)
!8534 = !{!8535, !8536, !8537}
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8533, file: !531, line: 153, baseType: !22, size: 32)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8533, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!8537 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8533, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!8538 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8457, file: !531, line: 325, baseType: !8539, size: 32, offset: 896)
!8539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8540, size: 32)
!8540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !8541)
!8541 = !{!8542, !8548, !8549}
!8542 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8540, file: !624, line: 5074, baseType: !8543, size: 96)
!8543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !8544)
!8544 = !{!8545, !8546, !8547}
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8543, file: !628, line: 57, baseType: !631, size: 32)
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8543, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!8547 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8543, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!8548 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8540, file: !624, line: 5075, baseType: !8488, size: 64, offset: 96)
!8549 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8540, file: !624, line: 5076, baseType: !8550, offset: 160)
!8550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!8551 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8457, file: !531, line: 343, baseType: !8552, size: 64, offset: 928)
!8552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !8553)
!8553 = !{!8554, !8555}
!8554 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8552, file: !601, line: 63, baseType: !208, size: 32)
!8555 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8552, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!8556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8557, size: 32)
!8557 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5277, line: 44, baseType: !8558)
!8558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2380, line: 47, size: 8, elements: !8559)
!8559 = !{!8560}
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8558, file: !2380, line: 48, baseType: !142, size: 8)
!8561 = !{!8562, !8563, !8564, !8565, !8566, !8567, !8568, !8569}
!8562 = !DILocalVariable(name: "thread", arg: 1, scope: !8452, file: !8453, line: 56, type: !8456)
!8563 = !DILocalVariable(name: "stack", arg: 2, scope: !8452, file: !8453, line: 56, type: !8556)
!8564 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8452, file: !8453, line: 57, type: !393)
!8565 = !DILocalVariable(name: "entry", arg: 4, scope: !8452, file: !8453, line: 57, type: !5276)
!8566 = !DILocalVariable(name: "p1", arg: 5, scope: !8452, file: !8453, line: 58, type: !124)
!8567 = !DILocalVariable(name: "p2", arg: 6, scope: !8452, file: !8453, line: 58, type: !124)
!8568 = !DILocalVariable(name: "p3", arg: 7, scope: !8452, file: !8453, line: 58, type: !124)
!8569 = !DILocalVariable(name: "iframe", scope: !8452, file: !8453, line: 60, type: !2904)
!8570 = !DILocation(line: 0, scope: !8452)
!8571 = !DILocation(line: 85, column: 11, scope: !8452)
!8572 = !DILocation(line: 93, column: 10, scope: !8452)
!8573 = !DILocation(line: 98, column: 13, scope: !8452)
!8574 = !DILocation(line: 100, column: 15, scope: !8452)
!8575 = !DILocation(line: 100, column: 10, scope: !8452)
!8576 = !DILocation(line: 100, column: 13, scope: !8452)
!8577 = !DILocation(line: 101, column: 15, scope: !8452)
!8578 = !DILocation(line: 101, column: 10, scope: !8452)
!8579 = !DILocation(line: 101, column: 13, scope: !8452)
!8580 = !DILocation(line: 102, column: 15, scope: !8452)
!8581 = !DILocation(line: 102, column: 10, scope: !8452)
!8582 = !DILocation(line: 102, column: 13, scope: !8452)
!8583 = !DILocation(line: 103, column: 15, scope: !8452)
!8584 = !DILocation(line: 103, column: 10, scope: !8452)
!8585 = !DILocation(line: 103, column: 13, scope: !8452)
!8586 = !DILocation(line: 106, column: 10, scope: !8452)
!8587 = !DILocation(line: 106, column: 15, scope: !8452)
!8588 = !DILocation(line: 122, column: 29, scope: !8452)
!8589 = !DILocation(line: 122, column: 23, scope: !8452)
!8590 = !DILocation(line: 122, column: 27, scope: !8452)
!8591 = !DILocation(line: 123, column: 15, scope: !8452)
!8592 = !DILocation(line: 123, column: 23, scope: !8452)
!8593 = !DILocation(line: 143, column: 1, scope: !8452)
!8594 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !8453, file: !8453, line: 385, type: !8595, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !8598)
!8595 = !DISubroutineType(types: !8596)
!8596 = !{!208, !8597, !8597}
!8597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!8598 = !{!8599, !8600, !8601, !8604}
!8599 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8594, file: !8453, line: 385, type: !8597)
!8600 = !DILocalVariable(name: "psp", arg: 2, scope: !8594, file: !8453, line: 385, type: !8597)
!8601 = !DILocalVariable(name: "thread", scope: !8594, file: !8453, line: 388, type: !8602)
!8602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8603, size: 32)
!8603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8457)
!8604 = !DILocalVariable(name: "guard_len", scope: !8594, file: !8453, line: 405, type: !208)
!8605 = !DILocation(line: 0, scope: !8594)
!8606 = !DILocation(line: 388, column: 34, scope: !8594)
!8607 = !DILocation(line: 390, column: 13, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8594, file: !8453, line: 390, column: 6)
!8609 = !DILocation(line: 390, column: 6, scope: !8594)
!8610 = !DILocation(line: 438, column: 6, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8594, file: !8453, line: 438, column: 6)
!8612 = !DILocation(line: 438, column: 6, scope: !8594)
!8613 = !DILocation(line: 442, column: 3, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8611, file: !8453, line: 440, column: 22)
!8615 = !DILocation(line: 455, column: 1, scope: !8594)
!8616 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8453, file: !8453, line: 530, type: !8617, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !8619)
!8617 = !DISubroutineType(types: !8618)
!8618 = !{null, !8456, !393, !5276}
!8619 = !{!8620, !8621, !8622}
!8620 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8616, file: !8453, line: 530, type: !8456)
!8621 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8616, file: !8453, line: 530, type: !393)
!8622 = !DILocalVariable(name: "_main", arg: 3, scope: !8616, file: !8453, line: 531, type: !5276)
!8623 = !DILocation(line: 0, scope: !8616)
!8624 = !DILocation(line: 535, column: 11, scope: !8616)
!8625 = !DILocation(line: 560, column: 2, scope: !8616)
!8626 = !DILocation(line: 576, column: 2, scope: !8616)
!8627 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8628 = !DILocation(line: 603, column: 2, scope: !8616)
!8629 = distinct !DISubprogram(name: "z_arm_fault", scope: !8630, file: !8630, line: 1036, type: !8631, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !8646)
!8630 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8631 = !DISubroutineType(types: !8632)
!8632 = !{null, !208, !208, !208, !8633}
!8633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8634, size: 32)
!8634 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8635)
!8635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8636)
!8636 = !{!8637, !8638, !8639, !8640, !8641, !8642, !8643, !8644, !8645}
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8635, file: !601, line: 26, baseType: !208, size: 32)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8635, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8635, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8635, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8635, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8635, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8635, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8644 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8635, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8635, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8646 = !{!8647, !8648, !8649, !8650, !8651, !8652, !8653, !8654, !8655, !8656}
!8647 = !DILocalVariable(name: "msp", arg: 1, scope: !8629, file: !8630, line: 1036, type: !208)
!8648 = !DILocalVariable(name: "psp", arg: 2, scope: !8629, file: !8630, line: 1036, type: !208)
!8649 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8629, file: !8630, line: 1036, type: !208)
!8650 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8629, file: !8630, line: 1037, type: !8633)
!8651 = !DILocalVariable(name: "reason", scope: !8629, file: !8630, line: 1039, type: !208)
!8652 = !DILocalVariable(name: "fault", scope: !8629, file: !8630, line: 1040, type: !125)
!8653 = !DILocalVariable(name: "recoverable", scope: !8629, file: !8630, line: 1041, type: !153)
!8654 = !DILocalVariable(name: "nested_exc", scope: !8629, file: !8630, line: 1041, type: !153)
!8655 = !DILocalVariable(name: "esf", scope: !8629, file: !8630, line: 1042, type: !2972)
!8656 = !DILocalVariable(name: "esf_copy", scope: !8629, file: !8630, line: 1047, type: !2973)
!8657 = !DILocation(line: 0, scope: !8629)
!8658 = !DILocation(line: 1040, column: 19, scope: !8629)
!8659 = !DILocation(line: 1040, column: 24, scope: !8629)
!8660 = !DILocation(line: 1041, column: 2, scope: !8629)
!8661 = !DILocation(line: 1047, column: 2, scope: !8629)
!8662 = !DILocation(line: 1047, column: 15, scope: !8629)
!8663 = !DILocalVariable(name: "key", arg: 1, scope: !8664, file: !6862, line: 84, type: !32)
!8664 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6862, file: !6862, line: 84, type: !6873, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !8665)
!8665 = !{!8663}
!8666 = !DILocation(line: 0, scope: !8664, inlinedAt: !8667)
!8667 = distinct !DILocation(line: 1050, column: 2, scope: !8629)
!8668 = !DILocation(line: 95, column: 2, scope: !8664, inlinedAt: !8667)
!8669 = !{i64 2071546}
!8670 = !DILocation(line: 1055, column: 9, scope: !8629)
!8671 = !DILocation(line: 1063, column: 11, scope: !8629)
!8672 = !DILocation(line: 1064, column: 6, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8629, file: !8630, line: 1064, column: 6)
!8674 = !{i8 0, i8 2}
!8675 = !DILocation(line: 1064, column: 6, scope: !8629)
!8676 = !DILocation(line: 1070, column: 20, scope: !8629)
!8677 = !DILocation(line: 1070, column: 2, scope: !8629)
!8678 = !DILocation(line: 1089, column: 6, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8629, file: !8630, line: 1089, column: 6)
!8680 = !DILocation(line: 0, scope: !8679)
!8681 = !DILocation(line: 1089, column: 6, scope: !8629)
!8682 = !DILocation(line: 1090, column: 28, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8684, file: !8630, line: 1090, column: 7)
!8684 = distinct !DILexicalBlock(scope: !8679, file: !8630, line: 1089, column: 18)
!8685 = !DILocation(line: 1090, column: 44, scope: !8683)
!8686 = !DILocation(line: 1090, column: 7, scope: !8684)
!8687 = !DILocation(line: 1091, column: 24, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8683, file: !8630, line: 1090, column: 50)
!8689 = !DILocation(line: 1092, column: 3, scope: !8688)
!8690 = !DILocation(line: 1094, column: 23, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8679, file: !8630, line: 1093, column: 9)
!8692 = !DILocation(line: 1097, column: 2, scope: !8629)
!8693 = !DILocation(line: 1098, column: 1, scope: !8629)
!8694 = distinct !DISubprogram(name: "get_esf", scope: !8630, file: !8630, line: 894, type: !8695, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !8698)
!8695 = !DISubroutineType(types: !8696)
!8696 = !{!2972, !208, !208, !208, !8697}
!8697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!8698 = !{!8699, !8700, !8701, !8702, !8703, !8704}
!8699 = !DILocalVariable(name: "msp", arg: 1, scope: !8694, file: !8630, line: 894, type: !208)
!8700 = !DILocalVariable(name: "psp", arg: 2, scope: !8694, file: !8630, line: 894, type: !208)
!8701 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8694, file: !8630, line: 894, type: !208)
!8702 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8694, file: !8630, line: 895, type: !8697)
!8703 = !DILocalVariable(name: "alternative_state_exc", scope: !8694, file: !8630, line: 897, type: !153)
!8704 = !DILocalVariable(name: "ptr_esf", scope: !8694, file: !8630, line: 898, type: !2972)
!8705 = !DILocation(line: 0, scope: !8694)
!8706 = !DILocation(line: 900, column: 14, scope: !8694)
!8707 = !DILocation(line: 902, column: 49, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8694, file: !8630, line: 902, column: 6)
!8709 = !DILocation(line: 902, column: 6, scope: !8694)
!8710 = !DILocation(line: 983, column: 44, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8694, file: !8630, line: 983, column: 6)
!8712 = !DILocation(line: 985, column: 3, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8714, file: !8630, line: 985, column: 3)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !8630, line: 985, column: 3)
!8715 = distinct !DILexicalBlock(scope: !8716, file: !8630, line: 985, column: 3)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !8630, line: 985, column: 3)
!8717 = distinct !DILexicalBlock(scope: !8711, file: !8630, line: 984, column: 47)
!8718 = !DILocation(line: 986, column: 3, scope: !8717)
!8719 = !DILocation(line: 983, column: 18, scope: !8711)
!8720 = !DILocation(line: 991, column: 7, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !8630, line: 990, column: 30)
!8722 = distinct !DILexicalBlock(scope: !8694, file: !8630, line: 990, column: 6)
!8723 = !DILocation(line: 998, column: 16, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8725, file: !8630, line: 995, column: 10)
!8725 = distinct !DILexicalBlock(scope: !8721, file: !8630, line: 991, column: 7)
!8726 = !DILocation(line: 1002, column: 2, scope: !8694)
!8727 = !DILocation(line: 1003, column: 1, scope: !8694)
!8728 = distinct !DISubprogram(name: "fault_handle", scope: !8630, file: !8630, line: 786, type: !8729, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !8731)
!8729 = !DISubroutineType(types: !8730)
!8730 = !{!208, !2972, !125, !8697}
!8731 = !{!8732, !8733, !8734, !8735}
!8732 = !DILocalVariable(name: "esf", arg: 1, scope: !8728, file: !8630, line: 786, type: !2972)
!8733 = !DILocalVariable(name: "fault", arg: 2, scope: !8728, file: !8630, line: 786, type: !125)
!8734 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8728, file: !8630, line: 786, type: !8697)
!8735 = !DILocalVariable(name: "reason", scope: !8728, file: !8630, line: 788, type: !208)
!8736 = !DILocation(line: 0, scope: !8728)
!8737 = !DILocation(line: 790, column: 15, scope: !8728)
!8738 = !DILocation(line: 792, column: 2, scope: !8728)
!8739 = !DILocation(line: 794, column: 12, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8728, file: !8630, line: 792, column: 17)
!8741 = !DILocation(line: 795, column: 3, scope: !8740)
!8742 = !DILocation(line: 800, column: 12, scope: !8740)
!8743 = !DILocation(line: 801, column: 3, scope: !8740)
!8744 = !DILocation(line: 803, column: 12, scope: !8740)
!8745 = !DILocation(line: 804, column: 3, scope: !8740)
!8746 = !DILocation(line: 806, column: 12, scope: !8740)
!8747 = !DILocation(line: 807, column: 3, scope: !8740)
!8748 = !DILocation(line: 814, column: 3, scope: !8740)
!8749 = !DILocation(line: 815, column: 3, scope: !8740)
!8750 = !DILocation(line: 820, column: 3, scope: !8740)
!8751 = !DILocation(line: 821, column: 3, scope: !8740)
!8752 = !DILocation(line: 829, column: 2, scope: !8728)
!8753 = distinct !DISubprogram(name: "hard_fault", scope: !8630, file: !8630, line: 709, type: !8754, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !8756)
!8754 = !DISubroutineType(types: !8755)
!8755 = !{!208, !2972, !8697}
!8756 = !{!8757, !8758, !8759}
!8757 = !DILocalVariable(name: "esf", arg: 1, scope: !8753, file: !8630, line: 709, type: !2972)
!8758 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8753, file: !8630, line: 709, type: !8697)
!8759 = !DILocalVariable(name: "reason", scope: !8753, file: !8630, line: 711, type: !208)
!8760 = !DILocation(line: 0, scope: !8753)
!8761 = !DILocation(line: 713, column: 2, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8763, file: !8630, line: 713, column: 2)
!8763 = distinct !DILexicalBlock(scope: !8764, file: !8630, line: 713, column: 2)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !8630, line: 713, column: 2)
!8765 = distinct !DILexicalBlock(scope: !8753, file: !8630, line: 713, column: 2)
!8766 = !DILocation(line: 732, column: 15, scope: !8753)
!8767 = !DILocation(line: 734, column: 12, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8753, file: !8630, line: 734, column: 6)
!8769 = !DILocation(line: 734, column: 17, scope: !8768)
!8770 = !DILocation(line: 734, column: 41, scope: !8768)
!8771 = !DILocation(line: 734, column: 6, scope: !8753)
!8772 = !DILocation(line: 735, column: 3, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8774, file: !8630, line: 735, column: 3)
!8774 = distinct !DILexicalBlock(scope: !8775, file: !8630, line: 735, column: 3)
!8775 = distinct !DILexicalBlock(scope: !8776, file: !8630, line: 735, column: 3)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !8630, line: 735, column: 3)
!8777 = distinct !DILexicalBlock(scope: !8768, file: !8630, line: 734, column: 47)
!8778 = !DILocation(line: 736, column: 2, scope: !8777)
!8779 = !DILocation(line: 736, column: 19, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8768, file: !8630, line: 736, column: 13)
!8781 = !DILocation(line: 736, column: 49, scope: !8780)
!8782 = !DILocation(line: 736, column: 13, scope: !8768)
!8783 = !DILocation(line: 737, column: 3, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8785, file: !8630, line: 737, column: 3)
!8785 = distinct !DILexicalBlock(scope: !8786, file: !8630, line: 737, column: 3)
!8786 = distinct !DILexicalBlock(scope: !8787, file: !8630, line: 737, column: 3)
!8787 = distinct !DILexicalBlock(scope: !8788, file: !8630, line: 737, column: 3)
!8788 = distinct !DILexicalBlock(scope: !8780, file: !8630, line: 736, column: 55)
!8789 = !DILocation(line: 738, column: 2, scope: !8788)
!8790 = !DILocation(line: 738, column: 19, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8780, file: !8630, line: 738, column: 13)
!8792 = !DILocation(line: 738, column: 24, scope: !8791)
!8793 = !DILocation(line: 738, column: 47, scope: !8791)
!8794 = !DILocation(line: 738, column: 13, scope: !8780)
!8795 = !DILocation(line: 739, column: 3, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !8630, line: 739, column: 3)
!8797 = distinct !DILexicalBlock(scope: !8798, file: !8630, line: 739, column: 3)
!8798 = distinct !DILexicalBlock(scope: !8799, file: !8630, line: 739, column: 3)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !8630, line: 739, column: 3)
!8800 = distinct !DILexicalBlock(scope: !8791, file: !8630, line: 738, column: 53)
!8801 = !DILocation(line: 740, column: 7, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8800, file: !8630, line: 740, column: 7)
!8803 = !DILocation(line: 740, column: 7, scope: !8800)
!8804 = !DILocation(line: 741, column: 4, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8806, file: !8630, line: 741, column: 4)
!8806 = distinct !DILexicalBlock(scope: !8807, file: !8630, line: 741, column: 4)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !8630, line: 741, column: 4)
!8808 = distinct !DILexicalBlock(scope: !8809, file: !8630, line: 741, column: 4)
!8809 = distinct !DILexicalBlock(scope: !8802, file: !8630, line: 740, column: 38)
!8810 = !DILocation(line: 742, column: 24, scope: !8809)
!8811 = !DILocation(line: 743, column: 3, scope: !8809)
!8812 = !DILocation(line: 743, column: 20, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8802, file: !8630, line: 743, column: 14)
!8814 = !DILocation(line: 743, column: 25, scope: !8813)
!8815 = !DILocation(line: 743, column: 52, scope: !8813)
!8816 = !DILocation(line: 743, column: 14, scope: !8802)
!8817 = !DILocation(line: 744, column: 13, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8813, file: !8630, line: 743, column: 58)
!8819 = !DILocation(line: 745, column: 3, scope: !8818)
!8820 = !DILocation(line: 745, column: 20, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8813, file: !8630, line: 745, column: 14)
!8822 = !DILocation(line: 745, column: 25, scope: !8821)
!8823 = !DILocation(line: 745, column: 52, scope: !8821)
!8824 = !DILocation(line: 745, column: 14, scope: !8813)
!8825 = !DILocation(line: 746, column: 13, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8821, file: !8630, line: 745, column: 58)
!8827 = !DILocation(line: 747, column: 3, scope: !8826)
!8828 = !DILocation(line: 747, column: 20, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8821, file: !8630, line: 747, column: 14)
!8830 = !DILocation(line: 747, column: 52, scope: !8829)
!8831 = !DILocation(line: 747, column: 14, scope: !8821)
!8832 = !DILocation(line: 748, column: 13, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8829, file: !8630, line: 747, column: 58)
!8834 = !DILocation(line: 753, column: 3, scope: !8833)
!8835 = !DILocation(line: 766, column: 2, scope: !8753)
!8836 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8630, file: !8630, line: 229, type: !8729, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !8837)
!8837 = !{!8838, !8839, !8840, !8841, !8842, !8843, !8846}
!8838 = !DILocalVariable(name: "esf", arg: 1, scope: !8836, file: !8630, line: 229, type: !2972)
!8839 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8836, file: !8630, line: 229, type: !125)
!8840 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8836, file: !8630, line: 230, type: !8697)
!8841 = !DILocalVariable(name: "reason", scope: !8836, file: !8630, line: 232, type: !208)
!8842 = !DILocalVariable(name: "mmfar", scope: !8836, file: !8630, line: 233, type: !208)
!8843 = !DILocalVariable(name: "temp", scope: !8844, file: !8630, line: 254, type: !208)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !8630, line: 244, column: 48)
!8845 = distinct !DILexicalBlock(scope: !8836, file: !8630, line: 244, column: 6)
!8846 = !DILocalVariable(name: "min_stack_ptr", scope: !8847, file: !8630, line: 309, type: !208)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !8630, line: 308, column: 43)
!8848 = distinct !DILexicalBlock(scope: !8849, file: !8630, line: 308, column: 7)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !8630, line: 289, column: 40)
!8850 = distinct !DILexicalBlock(scope: !8836, file: !8630, line: 288, column: 6)
!8851 = !DILocation(line: 0, scope: !8836)
!8852 = !DILocation(line: 235, column: 2, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8854, file: !8630, line: 235, column: 2)
!8854 = distinct !DILexicalBlock(scope: !8855, file: !8630, line: 235, column: 2)
!8855 = distinct !DILexicalBlock(scope: !8856, file: !8630, line: 235, column: 2)
!8856 = distinct !DILexicalBlock(scope: !8836, file: !8630, line: 235, column: 2)
!8857 = !DILocation(line: 237, column: 12, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8836, file: !8630, line: 237, column: 6)
!8859 = !DILocation(line: 237, column: 17, scope: !8858)
!8860 = !DILocation(line: 237, column: 41, scope: !8858)
!8861 = !DILocation(line: 237, column: 6, scope: !8836)
!8862 = !DILocation(line: 238, column: 3, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !8630, line: 238, column: 3)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !8630, line: 238, column: 3)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !8630, line: 238, column: 3)
!8866 = distinct !DILexicalBlock(scope: !8867, file: !8630, line: 238, column: 3)
!8867 = distinct !DILexicalBlock(scope: !8858, file: !8630, line: 237, column: 47)
!8868 = !DILocation(line: 240, column: 2, scope: !8867)
!8869 = !DILocation(line: 241, column: 12, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8836, file: !8630, line: 241, column: 6)
!8871 = !DILocation(line: 241, column: 17, scope: !8870)
!8872 = !DILocation(line: 241, column: 43, scope: !8870)
!8873 = !DILocation(line: 241, column: 6, scope: !8836)
!8874 = !DILocation(line: 242, column: 3, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8876, file: !8630, line: 242, column: 3)
!8876 = distinct !DILexicalBlock(scope: !8877, file: !8630, line: 242, column: 3)
!8877 = distinct !DILexicalBlock(scope: !8878, file: !8630, line: 242, column: 3)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !8630, line: 242, column: 3)
!8879 = distinct !DILexicalBlock(scope: !8870, file: !8630, line: 241, column: 49)
!8880 = !DILocation(line: 243, column: 2, scope: !8879)
!8881 = !DILocation(line: 244, column: 12, scope: !8845)
!8882 = !DILocation(line: 244, column: 17, scope: !8845)
!8883 = !DILocation(line: 244, column: 42, scope: !8845)
!8884 = !DILocation(line: 244, column: 6, scope: !8836)
!8885 = !DILocation(line: 245, column: 3, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8887, file: !8630, line: 245, column: 3)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !8630, line: 245, column: 3)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !8630, line: 245, column: 3)
!8889 = distinct !DILexicalBlock(scope: !8844, file: !8630, line: 245, column: 3)
!8890 = !DILocation(line: 254, column: 24, scope: !8844)
!8891 = !DILocation(line: 0, scope: !8844)
!8892 = !DILocation(line: 256, column: 13, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8844, file: !8630, line: 256, column: 7)
!8894 = !DILocation(line: 256, column: 18, scope: !8893)
!8895 = !DILocation(line: 256, column: 44, scope: !8893)
!8896 = !DILocation(line: 256, column: 7, scope: !8844)
!8897 = !DILocation(line: 258, column: 4, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !8630, line: 258, column: 4)
!8899 = distinct !DILexicalBlock(scope: !8900, file: !8630, line: 258, column: 4)
!8900 = distinct !DILexicalBlock(scope: !8901, file: !8630, line: 258, column: 4)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !8630, line: 258, column: 4)
!8902 = distinct !DILexicalBlock(scope: !8893, file: !8630, line: 256, column: 50)
!8903 = !DILocation(line: 259, column: 24, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8902, file: !8630, line: 259, column: 8)
!8905 = !DILocation(line: 259, column: 8, scope: !8902)
!8906 = !DILocation(line: 261, column: 15, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8904, file: !8630, line: 259, column: 30)
!8908 = !DILocation(line: 262, column: 4, scope: !8907)
!8909 = !DILocation(line: 265, column: 12, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8836, file: !8630, line: 265, column: 6)
!8911 = !DILocation(line: 265, column: 17, scope: !8910)
!8912 = !DILocation(line: 265, column: 42, scope: !8910)
!8913 = !DILocation(line: 265, column: 6, scope: !8836)
!8914 = !DILocation(line: 266, column: 3, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !8630, line: 266, column: 3)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !8630, line: 266, column: 3)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !8630, line: 266, column: 3)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !8630, line: 266, column: 3)
!8919 = distinct !DILexicalBlock(scope: !8910, file: !8630, line: 265, column: 48)
!8920 = !DILocation(line: 267, column: 2, scope: !8919)
!8921 = !DILocation(line: 269, column: 12, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8836, file: !8630, line: 269, column: 6)
!8923 = !DILocation(line: 269, column: 17, scope: !8922)
!8924 = !DILocation(line: 269, column: 41, scope: !8922)
!8925 = !DILocation(line: 269, column: 6, scope: !8836)
!8926 = !DILocation(line: 270, column: 3, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8928, file: !8630, line: 270, column: 3)
!8928 = distinct !DILexicalBlock(scope: !8929, file: !8630, line: 270, column: 3)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !8630, line: 270, column: 3)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !8630, line: 270, column: 3)
!8931 = distinct !DILexicalBlock(scope: !8922, file: !8630, line: 269, column: 47)
!8932 = !DILocation(line: 272, column: 2, scope: !8931)
!8933 = !DILocation(line: 288, column: 12, scope: !8850)
!8934 = !DILocation(line: 288, column: 17, scope: !8850)
!8935 = !DILocation(line: 288, column: 41, scope: !8850)
!8936 = !DILocation(line: 289, column: 9, scope: !8850)
!8937 = !DILocation(line: 289, column: 14, scope: !8850)
!8938 = !DILocation(line: 288, column: 6, scope: !8836)
!8939 = !DILocation(line: 308, column: 12, scope: !8848)
!8940 = !DILocation(line: 308, column: 17, scope: !8848)
!8941 = !DILocation(line: 308, column: 7, scope: !8849)
!8942 = !DILocation(line: 310, column: 6, scope: !8847)
!8943 = !DILocation(line: 309, column: 29, scope: !8847)
!8944 = !DILocation(line: 0, scope: !8847)
!8945 = !DILocation(line: 312, column: 8, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8847, file: !8630, line: 312, column: 8)
!8947 = !DILocation(line: 312, column: 8, scope: !8847)
!8948 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8949, file: !8329, line: 1099, type: !208)
!8949 = distinct !DISubprogram(name: "__set_PSP", scope: !8329, file: !8329, line: 1099, type: !8420, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !8950)
!8950 = !{!8948}
!8951 = !DILocation(line: 0, scope: !8949, inlinedAt: !8952)
!8952 = distinct !DILocation(line: 338, column: 5, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8946, file: !8630, line: 312, column: 23)
!8954 = !DILocation(line: 1101, column: 3, scope: !8949, inlinedAt: !8952)
!8955 = !{i64 2946911}
!8956 = !DILocation(line: 341, column: 4, scope: !8953)
!8957 = !DILocation(line: 360, column: 12, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8836, file: !8630, line: 360, column: 6)
!8959 = !DILocation(line: 360, column: 17, scope: !8958)
!8960 = !DILocation(line: 360, column: 41, scope: !8958)
!8961 = !DILocation(line: 360, column: 6, scope: !8836)
!8962 = !DILocation(line: 361, column: 14, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8958, file: !8630, line: 360, column: 47)
!8964 = !DILocation(line: 362, column: 2, scope: !8963)
!8965 = !DILocation(line: 366, column: 12, scope: !8836)
!8966 = !DILocation(line: 369, column: 15, scope: !8836)
!8967 = !DILocation(line: 371, column: 2, scope: !8836)
!8968 = distinct !DISubprogram(name: "bus_fault", scope: !8630, file: !8630, line: 383, type: !8969, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !8971)
!8969 = !DISubroutineType(types: !8970)
!8970 = !{!125, !2972, !125, !8697}
!8971 = !{!8972, !8973, !8974, !8975, !8976}
!8972 = !DILocalVariable(name: "esf", arg: 1, scope: !8968, file: !8630, line: 383, type: !2972)
!8973 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8968, file: !8630, line: 383, type: !125)
!8974 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8968, file: !8630, line: 383, type: !8697)
!8975 = !DILocalVariable(name: "reason", scope: !8968, file: !8630, line: 385, type: !208)
!8976 = !DILocalVariable(name: "bfar", scope: !8977, file: !8630, line: 405, type: !208)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !8630, line: 395, column: 42)
!8978 = distinct !DILexicalBlock(scope: !8968, file: !8630, line: 395, column: 6)
!8979 = !DILocation(line: 0, scope: !8968)
!8980 = !DILocation(line: 387, column: 2, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8982, file: !8630, line: 387, column: 2)
!8982 = distinct !DILexicalBlock(scope: !8983, file: !8630, line: 387, column: 2)
!8983 = distinct !DILexicalBlock(scope: !8984, file: !8630, line: 387, column: 2)
!8984 = distinct !DILexicalBlock(scope: !8968, file: !8630, line: 387, column: 2)
!8985 = !DILocation(line: 389, column: 11, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8968, file: !8630, line: 389, column: 6)
!8987 = !DILocation(line: 389, column: 16, scope: !8986)
!8988 = !DILocation(line: 389, column: 6, scope: !8968)
!8989 = !DILocation(line: 390, column: 3, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8991, file: !8630, line: 390, column: 3)
!8991 = distinct !DILexicalBlock(scope: !8992, file: !8630, line: 390, column: 3)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !8630, line: 390, column: 3)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !8630, line: 390, column: 3)
!8994 = distinct !DILexicalBlock(scope: !8986, file: !8630, line: 389, column: 39)
!8995 = !DILocation(line: 391, column: 2, scope: !8994)
!8996 = !DILocation(line: 392, column: 11, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8968, file: !8630, line: 392, column: 6)
!8998 = !DILocation(line: 392, column: 16, scope: !8997)
!8999 = !DILocation(line: 392, column: 6, scope: !8968)
!9000 = !DILocation(line: 393, column: 3, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !8630, line: 393, column: 3)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !8630, line: 393, column: 3)
!9003 = distinct !DILexicalBlock(scope: !9004, file: !8630, line: 393, column: 3)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !8630, line: 393, column: 3)
!9005 = distinct !DILexicalBlock(scope: !8997, file: !8630, line: 392, column: 41)
!9006 = !DILocation(line: 394, column: 2, scope: !9005)
!9007 = !DILocation(line: 395, column: 11, scope: !8978)
!9008 = !DILocation(line: 395, column: 16, scope: !8978)
!9009 = !DILocation(line: 395, column: 6, scope: !8968)
!9010 = !DILocation(line: 396, column: 3, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !8630, line: 396, column: 3)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !8630, line: 396, column: 3)
!9013 = distinct !DILexicalBlock(scope: !9014, file: !8630, line: 396, column: 3)
!9014 = distinct !DILexicalBlock(scope: !8977, file: !8630, line: 396, column: 3)
!9015 = !DILocation(line: 405, column: 3, scope: !8977)
!9016 = !DILocation(line: 0, scope: !8977)
!9017 = !DILocation(line: 407, column: 13, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !8977, file: !8630, line: 407, column: 7)
!9019 = !DILocation(line: 407, column: 18, scope: !9018)
!9020 = !DILocation(line: 407, column: 44, scope: !9018)
!9021 = !DILocation(line: 407, column: 7, scope: !8977)
!9022 = !DILocation(line: 408, column: 4, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !8630, line: 408, column: 4)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !8630, line: 408, column: 4)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !8630, line: 408, column: 4)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !8630, line: 408, column: 4)
!9027 = distinct !DILexicalBlock(scope: !9018, file: !8630, line: 407, column: 50)
!9028 = !DILocation(line: 409, column: 24, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9027, file: !8630, line: 409, column: 8)
!9030 = !DILocation(line: 409, column: 8, scope: !9027)
!9031 = !DILocation(line: 411, column: 15, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9029, file: !8630, line: 409, column: 30)
!9033 = !DILocation(line: 412, column: 4, scope: !9032)
!9034 = !DILocation(line: 415, column: 11, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !8968, file: !8630, line: 415, column: 6)
!9036 = !DILocation(line: 415, column: 16, scope: !9035)
!9037 = !DILocation(line: 415, column: 6, scope: !8968)
!9038 = !DILocation(line: 416, column: 3, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9040, file: !8630, line: 416, column: 3)
!9040 = distinct !DILexicalBlock(scope: !9041, file: !8630, line: 416, column: 3)
!9041 = distinct !DILexicalBlock(scope: !9042, file: !8630, line: 416, column: 3)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !8630, line: 416, column: 3)
!9043 = distinct !DILexicalBlock(scope: !9035, file: !8630, line: 415, column: 44)
!9044 = !DILocation(line: 417, column: 2, scope: !9043)
!9045 = !DILocation(line: 418, column: 12, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !8968, file: !8630, line: 418, column: 6)
!9047 = !DILocation(line: 418, column: 17, scope: !9046)
!9048 = !DILocation(line: 418, column: 41, scope: !9046)
!9049 = !DILocation(line: 418, column: 6, scope: !8968)
!9050 = !DILocation(line: 423, column: 18, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9046, file: !8630, line: 423, column: 13)
!9052 = !DILocation(line: 423, column: 23, scope: !9051)
!9053 = !DILocation(line: 423, column: 13, scope: !9046)
!9054 = !DILocation(line: 0, scope: !9046)
!9055 = !DILocation(line: 524, column: 12, scope: !8968)
!9056 = !DILocation(line: 526, column: 15, scope: !8968)
!9057 = !DILocation(line: 528, column: 2, scope: !8968)
!9058 = distinct !DISubprogram(name: "usage_fault", scope: !8630, file: !8630, line: 539, type: !9059, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !9063)
!9059 = !DISubroutineType(types: !9060)
!9060 = !{!208, !9061}
!9061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9062, size: 32)
!9062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2973)
!9063 = !{!9064, !9065}
!9064 = !DILocalVariable(name: "esf", arg: 1, scope: !9058, file: !8630, line: 539, type: !9061)
!9065 = !DILocalVariable(name: "reason", scope: !9058, file: !8630, line: 541, type: !208)
!9066 = !DILocation(line: 0, scope: !9058)
!9067 = !DILocation(line: 543, column: 2, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9069, file: !8630, line: 543, column: 2)
!9069 = distinct !DILexicalBlock(scope: !9070, file: !8630, line: 543, column: 2)
!9070 = distinct !DILexicalBlock(scope: !9071, file: !8630, line: 543, column: 2)
!9071 = distinct !DILexicalBlock(scope: !9058, file: !8630, line: 543, column: 2)
!9072 = !DILocation(line: 546, column: 12, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9058, file: !8630, line: 546, column: 6)
!9074 = !DILocation(line: 546, column: 17, scope: !9073)
!9075 = !DILocation(line: 546, column: 43, scope: !9073)
!9076 = !DILocation(line: 546, column: 6, scope: !9058)
!9077 = !DILocation(line: 547, column: 3, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !8630, line: 547, column: 3)
!9079 = distinct !DILexicalBlock(scope: !9080, file: !8630, line: 547, column: 3)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !8630, line: 547, column: 3)
!9081 = distinct !DILexicalBlock(scope: !9082, file: !8630, line: 547, column: 3)
!9082 = distinct !DILexicalBlock(scope: !9073, file: !8630, line: 546, column: 49)
!9083 = !DILocation(line: 548, column: 2, scope: !9082)
!9084 = !DILocation(line: 549, column: 12, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9058, file: !8630, line: 549, column: 6)
!9086 = !DILocation(line: 549, column: 17, scope: !9085)
!9087 = !DILocation(line: 549, column: 43, scope: !9085)
!9088 = !DILocation(line: 549, column: 6, scope: !9058)
!9089 = !DILocation(line: 550, column: 3, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9091, file: !8630, line: 550, column: 3)
!9091 = distinct !DILexicalBlock(scope: !9092, file: !8630, line: 550, column: 3)
!9092 = distinct !DILexicalBlock(scope: !9093, file: !8630, line: 550, column: 3)
!9093 = distinct !DILexicalBlock(scope: !9094, file: !8630, line: 550, column: 3)
!9094 = distinct !DILexicalBlock(scope: !9085, file: !8630, line: 549, column: 49)
!9095 = !DILocation(line: 551, column: 2, scope: !9094)
!9096 = !DILocation(line: 567, column: 12, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9058, file: !8630, line: 567, column: 6)
!9098 = !DILocation(line: 567, column: 17, scope: !9097)
!9099 = !DILocation(line: 567, column: 38, scope: !9097)
!9100 = !DILocation(line: 567, column: 6, scope: !9058)
!9101 = !DILocation(line: 568, column: 3, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !8630, line: 568, column: 3)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !8630, line: 568, column: 3)
!9104 = distinct !DILexicalBlock(scope: !9105, file: !8630, line: 568, column: 3)
!9105 = distinct !DILexicalBlock(scope: !9106, file: !8630, line: 568, column: 3)
!9106 = distinct !DILexicalBlock(scope: !9097, file: !8630, line: 567, column: 44)
!9107 = !DILocation(line: 569, column: 2, scope: !9106)
!9108 = !DILocation(line: 570, column: 12, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9058, file: !8630, line: 570, column: 6)
!9110 = !DILocation(line: 570, column: 17, scope: !9109)
!9111 = !DILocation(line: 570, column: 39, scope: !9109)
!9112 = !DILocation(line: 570, column: 6, scope: !9058)
!9113 = !DILocation(line: 571, column: 3, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !8630, line: 571, column: 3)
!9115 = distinct !DILexicalBlock(scope: !9116, file: !8630, line: 571, column: 3)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !8630, line: 571, column: 3)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !8630, line: 571, column: 3)
!9118 = distinct !DILexicalBlock(scope: !9109, file: !8630, line: 570, column: 45)
!9119 = !DILocation(line: 572, column: 2, scope: !9118)
!9120 = !DILocation(line: 573, column: 12, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9058, file: !8630, line: 573, column: 6)
!9122 = !DILocation(line: 573, column: 17, scope: !9121)
!9123 = !DILocation(line: 573, column: 42, scope: !9121)
!9124 = !DILocation(line: 573, column: 6, scope: !9058)
!9125 = !DILocation(line: 574, column: 3, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9127, file: !8630, line: 574, column: 3)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !8630, line: 574, column: 3)
!9128 = distinct !DILexicalBlock(scope: !9129, file: !8630, line: 574, column: 3)
!9129 = distinct !DILexicalBlock(scope: !9130, file: !8630, line: 574, column: 3)
!9130 = distinct !DILexicalBlock(scope: !9121, file: !8630, line: 573, column: 48)
!9131 = !DILocation(line: 575, column: 2, scope: !9130)
!9132 = !DILocation(line: 576, column: 12, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9058, file: !8630, line: 576, column: 6)
!9134 = !DILocation(line: 576, column: 17, scope: !9133)
!9135 = !DILocation(line: 576, column: 44, scope: !9133)
!9136 = !DILocation(line: 576, column: 6, scope: !9058)
!9137 = !DILocation(line: 577, column: 3, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !8630, line: 577, column: 3)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !8630, line: 577, column: 3)
!9140 = distinct !DILexicalBlock(scope: !9141, file: !8630, line: 577, column: 3)
!9141 = distinct !DILexicalBlock(scope: !9142, file: !8630, line: 577, column: 3)
!9142 = distinct !DILexicalBlock(scope: !9133, file: !8630, line: 576, column: 50)
!9143 = !DILocation(line: 578, column: 2, scope: !9142)
!9144 = !DILocation(line: 581, column: 12, scope: !9058)
!9145 = !DILocation(line: 583, column: 2, scope: !9058)
!9146 = distinct !DISubprogram(name: "debug_monitor", scope: !8630, file: !8630, line: 632, type: !9147, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !9149)
!9147 = !DISubroutineType(types: !9148)
!9148 = !{null, !2972, !8697}
!9149 = !{!9150, !9151}
!9150 = !DILocalVariable(name: "esf", arg: 1, scope: !9146, file: !8630, line: 632, type: !2972)
!9151 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9146, file: !8630, line: 632, type: !8697)
!9152 = !DILocation(line: 0, scope: !9146)
!9153 = !DILocation(line: 634, column: 15, scope: !9146)
!9154 = !DILocation(line: 636, column: 2, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !8630, line: 636, column: 2)
!9156 = distinct !DILexicalBlock(scope: !9157, file: !8630, line: 636, column: 2)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !8630, line: 636, column: 2)
!9158 = distinct !DILexicalBlock(scope: !9146, file: !8630, line: 636, column: 2)
!9159 = !DILocation(line: 652, column: 1, scope: !9146)
!9160 = distinct !DISubprogram(name: "reserved_exception", scope: !8630, file: !8630, line: 776, type: !9161, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !9163)
!9161 = !DISubroutineType(types: !9162)
!9162 = !{null, !9061, !125}
!9163 = !{!9164, !9165}
!9164 = !DILocalVariable(name: "esf", arg: 1, scope: !9160, file: !8630, line: 776, type: !9061)
!9165 = !DILocalVariable(name: "fault", arg: 2, scope: !9160, file: !8630, line: 776, type: !125)
!9166 = !DILocation(line: 0, scope: !9160)
!9167 = !DILocation(line: 780, column: 2, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9169, file: !8630, line: 780, column: 2)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !8630, line: 780, column: 2)
!9170 = distinct !DILexicalBlock(scope: !9171, file: !8630, line: 780, column: 2)
!9171 = distinct !DILexicalBlock(scope: !9160, file: !8630, line: 780, column: 2)
!9172 = !DILocation(line: 783, column: 1, scope: !9160)
!9173 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8630, file: !8630, line: 658, type: !9174, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !9176)
!9174 = !DISubroutineType(types: !9175)
!9175 = !{!153, !2972}
!9176 = !{!9177, !9178, !9179}
!9177 = !DILocalVariable(name: "esf", arg: 1, scope: !9173, file: !8630, line: 658, type: !2972)
!9178 = !DILocalVariable(name: "ret_addr", scope: !9173, file: !8630, line: 660, type: !3015)
!9179 = !DILocalVariable(name: "fault_insn", scope: !9173, file: !8630, line: 686, type: !227)
!9180 = !DILocation(line: 0, scope: !9173)
!9181 = !DILocation(line: 660, column: 46, scope: !9173)
!9182 = !DILocation(line: 660, column: 23, scope: !9173)
!9183 = !DILocation(line: 682, column: 11, scope: !9173)
!9184 = !DILocation(line: 271, column: 3, scope: !9185, inlinedAt: !9186)
!9185 = distinct !DISubprogram(name: "__DSB", scope: !8329, file: !8329, line: 269, type: !3326, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !639)
!9186 = distinct !DILocation(line: 683, column: 2, scope: !9173)
!9187 = !{i64 2923046}
!9188 = !DILocation(line: 260, column: 3, scope: !9189, inlinedAt: !9190)
!9189 = distinct !DISubprogram(name: "__ISB", scope: !8329, file: !8329, line: 258, type: !3326, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !639)
!9190 = distinct !DILocation(line: 684, column: 2, scope: !9173)
!9191 = !{i64 2922763}
!9192 = !DILocation(line: 686, column: 35, scope: !9173)
!9193 = !DILocation(line: 686, column: 24, scope: !9173)
!9194 = !DILocation(line: 688, column: 11, scope: !9173)
!9195 = !DILocation(line: 271, column: 3, scope: !9185, inlinedAt: !9196)
!9196 = distinct !DILocation(line: 689, column: 2, scope: !9173)
!9197 = !DILocation(line: 260, column: 3, scope: !9189, inlinedAt: !9198)
!9198 = distinct !DILocation(line: 690, column: 2, scope: !9173)
!9199 = !DILocation(line: 693, column: 45, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9173, file: !8630, line: 693, column: 6)
!9201 = !DILocation(line: 699, column: 1, scope: !9173)
!9202 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8630, file: !8630, line: 1107, type: !3326, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !639)
!9203 = !DILocation(line: 1111, column: 11, scope: !9202)
!9204 = !DILocation(line: 1136, column: 1, scope: !9202)
!9205 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !9206, file: !9206, line: 26, type: !3326, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !9207)
!9206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9207 = !{!9208}
!9208 = !DILocalVariable(name: "irq", scope: !9205, file: !9206, line: 28, type: !125)
!9209 = !DILocation(line: 0, scope: !9205)
!9210 = !DILocation(line: 30, column: 2, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9205, file: !9206, line: 30, column: 2)
!9212 = !DILocation(line: 31, column: 3, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9214, file: !9206, line: 30, column: 39)
!9214 = distinct !DILexicalBlock(scope: !9211, file: !9206, line: 30, column: 2)
!9215 = !DILocation(line: 30, column: 35, scope: !9214)
!9216 = !DILocation(line: 30, column: 13, scope: !9214)
!9217 = distinct !{!9217, !9210, !9218}
!9218 = !DILocation(line: 32, column: 2, scope: !9211)
!9219 = !DILocation(line: 33, column: 1, scope: !9205)
!9220 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8363, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !9221)
!9221 = !{!9222, !9223}
!9222 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9220, file: !680, line: 1814, type: !913)
!9223 = !DILocalVariable(name: "priority", arg: 2, scope: !9220, file: !680, line: 1814, type: !208)
!9224 = !DILocation(line: 0, scope: !9220)
!9225 = !DILocation(line: 1816, column: 7, scope: !9220)
!9226 = !DILocation(line: 0, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9220, file: !680, line: 1816, column: 7)
!9228 = !DILocation(line: 1824, column: 1, scope: !9220)
!9229 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !9230, file: !9230, line: 27, type: !9231, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !9334)
!9230 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9231 = !DISubroutineType(types: !9232)
!9232 = !{null, !9233}
!9233 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !9234)
!9234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9235, size: 32)
!9235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !9236)
!9236 = !{!9237, !9295, !9307, !9308, !9309, !9310, !9316, !9329}
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9235, file: !531, line: 247, baseType: !9238, size: 384)
!9238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !9239)
!9239 = !{!9240, !9264, !9271, !9272, !9273, !9282, !9283, !9284}
!9240 = !DIDerivedType(tag: DW_TAG_member, scope: !9238, file: !531, line: 60, baseType: !9241, size: 64)
!9241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9238, file: !531, line: 60, size: 64, elements: !9242)
!9242 = !{!9243, !9258}
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9241, file: !531, line: 61, baseType: !9244, size: 64)
!9244 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !9245)
!9245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !9246)
!9246 = !{!9247, !9253}
!9247 = !DIDerivedType(tag: DW_TAG_member, scope: !9245, file: !541, line: 38, baseType: !9248, size: 32)
!9248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9245, file: !541, line: 38, size: 32, elements: !9249)
!9249 = !{!9250, !9252}
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9248, file: !541, line: 39, baseType: !9251, size: 32)
!9251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9245, size: 32)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9248, file: !541, line: 40, baseType: !9251, size: 32)
!9253 = !DIDerivedType(tag: DW_TAG_member, scope: !9245, file: !541, line: 42, baseType: !9254, size: 32, offset: 32)
!9254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9245, file: !541, line: 42, size: 32, elements: !9255)
!9255 = !{!9256, !9257}
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9254, file: !541, line: 43, baseType: !9251, size: 32)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9254, file: !541, line: 44, baseType: !9251, size: 32)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9241, file: !531, line: 62, baseType: !9259, size: 64)
!9259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !9260)
!9260 = !{!9261}
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9259, file: !557, line: 50, baseType: !9262, size: 64)
!9262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9263, size: 64, elements: !562)
!9263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9259, size: 32)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9238, file: !531, line: 68, baseType: !9265, size: 32, offset: 64)
!9265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9266, size: 32)
!9266 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !9267)
!9267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !9268)
!9268 = !{!9269}
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9267, file: !567, line: 232, baseType: !9270, size: 64)
!9270 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !9245)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9238, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9238, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!9273 = !DIDerivedType(tag: DW_TAG_member, scope: !9238, file: !531, line: 90, baseType: !9274, size: 16, offset: 112)
!9274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9238, file: !531, line: 90, size: 16, elements: !9275)
!9275 = !{!9276, !9281}
!9276 = !DIDerivedType(tag: DW_TAG_member, scope: !9274, file: !531, line: 91, baseType: !9277, size: 16)
!9277 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9274, file: !531, line: 91, size: 16, elements: !9278)
!9278 = !{!9279, !9280}
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9277, file: !531, line: 96, baseType: !581, size: 8)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9277, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9274, file: !531, line: 100, baseType: !227, size: 16)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9238, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9238, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9238, file: !531, line: 131, baseType: !9285, size: 192, offset: 192)
!9285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !9286)
!9286 = !{!9287, !9288, !9294}
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9285, file: !567, line: 245, baseType: !9244, size: 64)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9285, file: !567, line: 246, baseType: !9289, size: 32, offset: 64)
!9289 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !9290)
!9290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9291, size: 32)
!9291 = !DISubroutineType(types: !9292)
!9292 = !{null, !9293}
!9293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9285, size: 32)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9285, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9235, file: !531, line: 250, baseType: !9296, size: 288, offset: 384)
!9296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !9297)
!9297 = !{!9298, !9299, !9300, !9301, !9302, !9303, !9304, !9305, !9306}
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9296, file: !601, line: 26, baseType: !208, size: 32)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9296, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9296, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9296, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9296, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9296, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9296, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9296, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9296, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9235, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9235, file: !531, line: 256, baseType: !9266, size: 64, offset: 704)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9235, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9235, file: !531, line: 300, baseType: !9311, size: 96, offset: 800)
!9311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !9312)
!9312 = !{!9313, !9314, !9315}
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9311, file: !531, line: 153, baseType: !22, size: 32)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9311, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9311, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9235, file: !531, line: 325, baseType: !9317, size: 32, offset: 896)
!9317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9318, size: 32)
!9318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !9319)
!9319 = !{!9320, !9326, !9327}
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9318, file: !624, line: 5074, baseType: !9321, size: 96)
!9321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !9322)
!9322 = !{!9323, !9324, !9325}
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9321, file: !628, line: 57, baseType: !631, size: 32)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9321, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9321, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9318, file: !624, line: 5075, baseType: !9266, size: 64, offset: 96)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9318, file: !624, line: 5076, baseType: !9328, offset: 160)
!9328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9235, file: !531, line: 343, baseType: !9330, size: 64, offset: 928)
!9330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !9331)
!9331 = !{!9332, !9333}
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9330, file: !601, line: 63, baseType: !208, size: 32)
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9330, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!9334 = !{!9335}
!9335 = !DILocalVariable(name: "thread", arg: 1, scope: !9229, file: !9230, line: 27, type: !9233)
!9336 = !DILocation(line: 0, scope: !9229)
!9337 = !DILocation(line: 29, column: 6, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9229, file: !9230, line: 29, column: 6)
!9339 = !DILocation(line: 29, column: 15, scope: !9338)
!9340 = !DILocation(line: 29, column: 6, scope: !9229)
!9341 = !DILocation(line: 1031, column: 3, scope: !9342, inlinedAt: !9345)
!9342 = distinct !DISubprogram(name: "__get_IPSR", scope: !8329, file: !8329, line: 1027, type: !8410, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !9343)
!9343 = !{!9344}
!9344 = !DILocalVariable(name: "result", scope: !9342, file: !8329, line: 1029, type: !208)
!9345 = distinct !DILocation(line: 48, column: 10, scope: !9346, inlinedAt: !9350)
!9346 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9347, file: !9347, line: 46, type: !9348, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !639)
!9347 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9348 = !DISubroutineType(types: !9349)
!9349 = !{!153}
!9350 = distinct !DILocation(line: 30, column: 7, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9352, file: !9230, line: 30, column: 7)
!9352 = distinct !DILexicalBlock(scope: !9338, file: !9230, line: 29, column: 26)
!9353 = !{i64 2911894}
!9354 = !DILocation(line: 0, scope: !9342, inlinedAt: !9345)
!9355 = !DILocation(line: 48, column: 9, scope: !9346, inlinedAt: !9350)
!9356 = !DILocation(line: 30, column: 7, scope: !9352)
!9357 = !DILocation(line: 42, column: 14, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9351, file: !9230, line: 30, column: 25)
!9359 = !DILocation(line: 48, column: 15, scope: !9358)
!9360 = !DILocation(line: 49, column: 3, scope: !9358)
!9361 = !DILocation(line: 52, column: 2, scope: !9229)
!9362 = !DILocation(line: 53, column: 1, scope: !9229)
!9363 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !526, file: !526, line: 127, type: !3326, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !639)
!9364 = !DILocation(line: 134, column: 2, scope: !9363)
!9365 = !DILocation(line: 156, column: 1, scope: !9363)
!9366 = !DILocation(line: 0, scope: !525)
!9367 = !DILocation(line: 289, column: 36, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !525, file: !526, line: 285, column: 2)
!9369 = !DILocation(line: 289, column: 42, scope: !9368)
!9370 = !DILocation(line: 300, column: 36, scope: !525)
!9371 = !DILocation(line: 301, column: 35, scope: !525)
!9372 = !DILocation(line: 302, column: 37, scope: !525)
!9373 = !DILocation(line: 311, column: 2, scope: !525)
!9374 = !DILocation(line: 316, column: 1, scope: !525)
!9375 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !708, file: !708, line: 180, type: !3326, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9376 = !DILocation(line: 188, column: 12, scope: !9375)
!9377 = !DILocation(line: 271, column: 3, scope: !9378, inlinedAt: !9379)
!9378 = distinct !DISubprogram(name: "__DSB", scope: !8329, file: !8329, line: 269, type: !3326, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9379 = distinct !DILocation(line: 192, column: 2, scope: !9375)
!9380 = !{i64 3084933}
!9381 = !DILocation(line: 260, column: 3, scope: !9382, inlinedAt: !9383)
!9382 = distinct !DISubprogram(name: "__ISB", scope: !8329, file: !8329, line: 258, type: !3326, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9383 = distinct !DILocation(line: 193, column: 2, scope: !9375)
!9384 = !{i64 3084650}
!9385 = !DILocation(line: 194, column: 1, scope: !9375)
!9386 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !708, file: !708, line: 199, type: !3326, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9387 = !DILocation(line: 282, column: 3, scope: !9388, inlinedAt: !9389)
!9388 = distinct !DISubprogram(name: "__DMB", scope: !8329, file: !8329, line: 280, type: !3326, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9389 = distinct !DILocation(line: 202, column: 2, scope: !9386)
!9390 = !{i64 3085209}
!9391 = !DILocation(line: 205, column: 12, scope: !9386)
!9392 = !DILocation(line: 206, column: 1, scope: !9386)
!9393 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !708, file: !708, line: 275, type: !9394, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9407)
!9394 = !DISubroutineType(types: !9395)
!9395 = !{null, !9396, !323, !8597, !8597}
!9396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9397, size: 32)
!9397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9398)
!9398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !9399)
!9399 = !{!9400, !9401, !9402}
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9398, file: !652, line: 53, baseType: !22, size: 32)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9398, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9398, file: !652, line: 55, baseType: !9403, size: 32, offset: 64)
!9403 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !9404)
!9404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !9405)
!9405 = !{!9406}
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !9404, file: !658, line: 150, baseType: !208, size: 32)
!9407 = !{!9408, !9409, !9410, !9411}
!9408 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9393, file: !708, line: 276, type: !9396)
!9409 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9393, file: !708, line: 276, type: !323)
!9410 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !9393, file: !708, line: 277, type: !8597)
!9411 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9393, file: !708, line: 277, type: !8597)
!9412 = !DILocation(line: 0, scope: !9393)
!9413 = !DILocation(line: 279, column: 6, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9393, file: !708, line: 279, column: 6)
!9415 = !DILocation(line: 285, column: 1, scope: !9393)
!9416 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !9417, file: !9417, line: 220, type: !9418, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9420)
!9417 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9418 = !DISubroutineType(types: !9419)
!9419 = !{!125, !9396, !323, !8597, !8597}
!9420 = !{!9421, !9422, !9423, !9424, !9425}
!9421 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9416, file: !9417, line: 221, type: !9396)
!9422 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9416, file: !9417, line: 221, type: !323)
!9423 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !9416, file: !9417, line: 222, type: !8597)
!9424 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9416, file: !9417, line: 223, type: !8597)
!9425 = !DILocalVariable(name: "mpu_reg_index", scope: !9416, file: !9417, line: 225, type: !125)
!9426 = !DILocation(line: 0, scope: !9416)
!9427 = !DILocation(line: 225, column: 22, scope: !9416)
!9428 = !DILocation(line: 233, column: 18, scope: !9416)
!9429 = !DILocation(line: 236, column: 23, scope: !9416)
!9430 = !DILocation(line: 236, column: 21, scope: !9416)
!9431 = !DILocation(line: 238, column: 2, scope: !9416)
!9432 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !708, file: !708, line: 105, type: !9433, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9435)
!9433 = !DISubroutineType(types: !9434)
!9434 = !{!125, !9396, !150, !150, !153}
!9435 = !{!9436, !9437, !9438, !9439, !9440, !9441}
!9436 = !DILocalVariable(name: "regions", arg: 1, scope: !9432, file: !708, line: 106, type: !9396)
!9437 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9432, file: !708, line: 106, type: !150)
!9438 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9432, file: !708, line: 106, type: !150)
!9439 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9432, file: !708, line: 107, type: !153)
!9440 = !DILocalVariable(name: "i", scope: !9432, file: !708, line: 109, type: !125)
!9441 = !DILocalVariable(name: "reg_index", scope: !9432, file: !708, line: 110, type: !125)
!9442 = !DILocation(line: 0, scope: !9432)
!9443 = !DILocation(line: 110, column: 18, scope: !9432)
!9444 = !DILocation(line: 112, column: 16, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9446, file: !708, line: 112, column: 2)
!9446 = distinct !DILexicalBlock(scope: !9432, file: !708, line: 112, column: 2)
!9447 = !DILocation(line: 112, column: 2, scope: !9446)
!9448 = !DILocation(line: 113, column: 7, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9450, file: !708, line: 113, column: 7)
!9450 = distinct !DILexicalBlock(scope: !9445, file: !708, line: 112, column: 36)
!9451 = !DILocation(line: 113, column: 18, scope: !9449)
!9452 = !DILocation(line: 113, column: 23, scope: !9449)
!9453 = !DILocation(line: 113, column: 7, scope: !9450)
!9454 = !DILocation(line: 118, column: 23, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9450, file: !708, line: 118, column: 7)
!9456 = !DILocation(line: 119, column: 7, scope: !9455)
!9457 = !DILocation(line: 118, column: 7, scope: !9450)
!9458 = !DILocation(line: 120, column: 4, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9460, file: !708, line: 120, column: 4)
!9460 = distinct !DILexicalBlock(scope: !9461, file: !708, line: 120, column: 4)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !708, line: 120, column: 4)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !708, line: 120, column: 4)
!9463 = distinct !DILexicalBlock(scope: !9455, file: !708, line: 119, column: 45)
!9464 = !DILocation(line: 121, column: 4, scope: !9463)
!9465 = !DILocation(line: 124, column: 36, scope: !9450)
!9466 = !DILocation(line: 124, column: 15, scope: !9450)
!9467 = !DILocation(line: 126, column: 17, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9450, file: !708, line: 126, column: 7)
!9469 = !DILocation(line: 126, column: 7, scope: !9450)
!9470 = !DILocation(line: 131, column: 12, scope: !9450)
!9471 = !DILocation(line: 132, column: 2, scope: !9450)
!9472 = !DILocation(line: 112, column: 32, scope: !9445)
!9473 = distinct !{!9473, !9447, !9474}
!9474 = !DILocation(line: 132, column: 2, scope: !9446)
!9475 = !DILocation(line: 135, column: 1, scope: !9432)
!9476 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !9417, file: !9417, line: 63, type: !9477, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9479)
!9477 = !DISubroutineType(types: !9478)
!9478 = !{!125, !9396}
!9479 = !{!9480, !9481}
!9480 = !DILocalVariable(name: "part", arg: 1, scope: !9476, file: !9417, line: 63, type: !9396)
!9481 = !DILocalVariable(name: "partition_is_valid", scope: !9476, file: !9417, line: 70, type: !125)
!9482 = !DILocation(line: 0, scope: !9476)
!9483 = !DILocation(line: 71, column: 11, scope: !9476)
!9484 = !DILocation(line: 71, column: 37, scope: !9476)
!9485 = !{i32 0, i32 33}
!9486 = !DILocation(line: 72, column: 3, scope: !9476)
!9487 = !DILocation(line: 71, column: 30, scope: !9476)
!9488 = !DILocation(line: 75, column: 11, scope: !9476)
!9489 = !DILocation(line: 75, column: 17, scope: !9476)
!9490 = !DILocation(line: 75, column: 38, scope: !9476)
!9491 = !DILocation(line: 77, column: 2, scope: !9476)
!9492 = distinct !DISubprogram(name: "mpu_configure_region", scope: !708, file: !708, line: 79, type: !9493, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9495)
!9493 = !DISubroutineType(types: !9494)
!9494 = !{!125, !323, !9396}
!9495 = !{!9496, !9497, !9498}
!9496 = !DILocalVariable(name: "index", arg: 1, scope: !9492, file: !708, line: 79, type: !323)
!9497 = !DILocalVariable(name: "new_region", arg: 2, scope: !9492, file: !708, line: 80, type: !9396)
!9498 = !DILocalVariable(name: "region_conf", scope: !9492, file: !708, line: 82, type: !697)
!9499 = !DILocation(line: 0, scope: !9492)
!9500 = !DILocation(line: 82, column: 2, scope: !9492)
!9501 = !DILocation(line: 82, column: 24, scope: !9492)
!9502 = !DILocation(line: 87, column: 33, scope: !9492)
!9503 = !DILocation(line: 87, column: 14, scope: !9492)
!9504 = !DILocation(line: 87, column: 19, scope: !9492)
!9505 = !DILocation(line: 91, column: 55, scope: !9492)
!9506 = !DILocation(line: 92, column: 16, scope: !9492)
!9507 = !DILocation(line: 92, column: 53, scope: !9492)
!9508 = !DILocation(line: 91, column: 2, scope: !9492)
!9509 = !DILocation(line: 95, column: 9, scope: !9492)
!9510 = !DILocation(line: 97, column: 1, scope: !9492)
!9511 = !DILocation(line: 95, column: 2, scope: !9492)
!9512 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !9417, file: !9417, line: 113, type: !9513, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9518)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{null, !9515, !9516, !208, !208}
!9515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!9516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9517, size: 32)
!9517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9403)
!9518 = !{!9519, !9520, !9521, !9522}
!9519 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9512, file: !9417, line: 114, type: !9515)
!9520 = !DILocalVariable(name: "attr", arg: 2, scope: !9512, file: !9417, line: 115, type: !9516)
!9521 = !DILocalVariable(name: "base", arg: 3, scope: !9512, file: !9417, line: 115, type: !208)
!9522 = !DILocalVariable(name: "size", arg: 4, scope: !9512, file: !9417, line: 115, type: !208)
!9523 = !DILocation(line: 0, scope: !9512)
!9524 = !DILocation(line: 127, column: 23, scope: !9512)
!9525 = !DILocation(line: 127, column: 35, scope: !9512)
!9526 = !DILocation(line: 127, column: 33, scope: !9512)
!9527 = !DILocation(line: 127, column: 10, scope: !9512)
!9528 = !DILocation(line: 127, column: 15, scope: !9512)
!9529 = !DILocation(line: 129, column: 1, scope: !9512)
!9530 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !708, file: !708, line: 57, type: !9531, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9533)
!9531 = !DISubroutineType(types: !9532)
!9532 = !{!125, !323, !695}
!9533 = !{!9534, !9535}
!9534 = !DILocalVariable(name: "index", arg: 1, scope: !9530, file: !708, line: 57, type: !323)
!9535 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9530, file: !708, line: 58, type: !695)
!9536 = !DILocation(line: 0, scope: !9530)
!9537 = !DILocation(line: 61, column: 6, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9530, file: !708, line: 61, column: 6)
!9539 = !DILocation(line: 61, column: 12, scope: !9538)
!9540 = !DILocation(line: 61, column: 6, scope: !9530)
!9541 = !DILocation(line: 64, column: 3, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9543, file: !708, line: 64, column: 3)
!9543 = distinct !DILexicalBlock(scope: !9544, file: !708, line: 64, column: 3)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !708, line: 64, column: 3)
!9545 = distinct !DILexicalBlock(scope: !9546, file: !708, line: 64, column: 3)
!9546 = distinct !DILexicalBlock(scope: !9538, file: !708, line: 61, column: 40)
!9547 = !DILocation(line: 65, column: 3, scope: !9546)
!9548 = !DILocation(line: 71, column: 2, scope: !9530)
!9549 = !DILocation(line: 73, column: 2, scope: !9530)
!9550 = !DILocation(line: 74, column: 1, scope: !9530)
!9551 = distinct !DISubprogram(name: "region_init", scope: !9417, file: !9417, line: 29, type: !9552, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9554)
!9552 = !DISubroutineType(types: !9553)
!9553 = !{null, !8597, !695}
!9554 = !{!9555, !9556}
!9555 = !DILocalVariable(name: "index", arg: 1, scope: !9551, file: !9417, line: 29, type: !8597)
!9556 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9551, file: !9417, line: 30, type: !695)
!9557 = !DILocation(line: 0, scope: !9551)
!9558 = !DILocation(line: 33, column: 2, scope: !9551)
!9559 = !DILocation(line: 47, column: 28, scope: !9551)
!9560 = !DILocation(line: 47, column: 33, scope: !9551)
!9561 = !DILocation(line: 48, column: 26, scope: !9551)
!9562 = !DILocation(line: 47, column: 12, scope: !9551)
!9563 = !DILocation(line: 49, column: 32, scope: !9551)
!9564 = !DILocation(line: 49, column: 37, scope: !9551)
!9565 = !DILocation(line: 49, column: 12, scope: !9551)
!9566 = !DILocation(line: 53, column: 1, scope: !9551)
!9567 = distinct !DISubprogram(name: "set_region_number", scope: !9568, file: !9568, line: 32, type: !8420, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9569)
!9568 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9569 = !{!9570}
!9570 = !DILocalVariable(name: "index", arg: 1, scope: !9567, file: !9568, line: 32, type: !208)
!9571 = !DILocation(line: 0, scope: !9567)
!9572 = !DILocation(line: 34, column: 11, scope: !9567)
!9573 = !DILocation(line: 35, column: 1, scope: !9567)
!9574 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !9417, file: !9417, line: 88, type: !9575, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9577)
!9575 = !DISubroutineType(types: !9576)
!9576 = !{!208, !208}
!9577 = !{!9578}
!9578 = !DILocalVariable(name: "size", arg: 1, scope: !9574, file: !9417, line: 88, type: !208)
!9579 = !DILocation(line: 0, scope: !9574)
!9580 = !DILocation(line: 91, column: 11, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9574, file: !9417, line: 91, column: 6)
!9582 = !DILocation(line: 91, column: 6, scope: !9574)
!9583 = !DILocation(line: 100, column: 11, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9574, file: !9417, line: 100, column: 6)
!9585 = !DILocation(line: 100, column: 6, scope: !9574)
!9586 = !DILocation(line: 104, column: 35, scope: !9574)
!9587 = !DILocation(line: 104, column: 16, scope: !9574)
!9588 = !DILocation(line: 104, column: 50, scope: !9574)
!9589 = !DILocation(line: 104, column: 72, scope: !9574)
!9590 = !DILocation(line: 104, column: 2, scope: !9574)
!9591 = !DILocation(line: 106, column: 1, scope: !9574)
!9592 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !708, file: !708, line: 307, type: !9593, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9595)
!9593 = !DISubroutineType(types: !9594)
!9594 = !{null, !9396, !150}
!9595 = !{!9596, !9597}
!9596 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9592, file: !708, line: 308, type: !9396)
!9597 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9592, file: !708, line: 308, type: !150)
!9598 = !DILocation(line: 0, scope: !9592)
!9599 = !DILocation(line: 310, column: 6, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9592, file: !708, line: 310, column: 6)
!9601 = !DILocation(line: 316, column: 1, scope: !9592)
!9602 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !9417, file: !9417, line: 249, type: !9603, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9605)
!9603 = !DISubroutineType(types: !9604)
!9604 = !{!125, !9396, !150}
!9605 = !{!9606, !9607, !9608, !9609}
!9606 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9602, file: !9417, line: 250, type: !9396)
!9607 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9602, file: !9417, line: 250, type: !150)
!9608 = !DILocalVariable(name: "mpu_reg_index", scope: !9602, file: !9417, line: 252, type: !125)
!9609 = !DILocalVariable(name: "i", scope: !9610, file: !9417, line: 264, type: !125)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !9417, line: 264, column: 3)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !9417, line: 261, column: 32)
!9612 = distinct !DILexicalBlock(scope: !9602, file: !9417, line: 261, column: 6)
!9613 = !DILocation(line: 0, scope: !9602)
!9614 = !DILocation(line: 252, column: 22, scope: !9602)
!9615 = !DILocation(line: 258, column: 18, scope: !9602)
!9616 = !DILocation(line: 261, column: 20, scope: !9612)
!9617 = !DILocation(line: 261, column: 6, scope: !9602)
!9618 = !DILocation(line: 0, scope: !9610)
!9619 = !DILocation(line: 265, column: 4, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9621, file: !9417, line: 264, column: 59)
!9621 = distinct !DILexicalBlock(scope: !9610, file: !9417, line: 264, column: 3)
!9622 = !DILocation(line: 264, column: 55, scope: !9621)
!9623 = !DILocation(line: 264, column: 33, scope: !9621)
!9624 = !DILocation(line: 264, column: 3, scope: !9610)
!9625 = distinct !{!9625, !9624, !9626}
!9626 = !DILocation(line: 266, column: 3, scope: !9610)
!9627 = !DILocation(line: 269, column: 2, scope: !9602)
!9628 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9629, file: !9629, line: 218, type: !8420, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9630)
!9629 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9630 = !{!9631}
!9631 = !DILocalVariable(name: "rnr", arg: 1, scope: !9628, file: !9629, line: 218, type: !208)
!9632 = !DILocation(line: 0, scope: !9628)
!9633 = !DILocation(line: 220, column: 12, scope: !9628)
!9634 = !DILocation(line: 221, column: 13, scope: !9628)
!9635 = !DILocation(line: 222, column: 1, scope: !9628)
!9636 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !708, file: !708, line: 326, type: !9637, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9639)
!9637 = !DISubroutineType(types: !9638)
!9638 = !{!125}
!9639 = !{!9640}
!9640 = !DILocalVariable(name: "r_index", scope: !9636, file: !708, line: 328, type: !208)
!9641 = !DILocation(line: 330, column: 17, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9636, file: !708, line: 330, column: 6)
!9643 = !DILocation(line: 330, column: 29, scope: !9642)
!9644 = !DILocation(line: 330, column: 6, scope: !9636)
!9645 = !DILocation(line: 347, column: 2, scope: !9636)
!9646 = !DILocation(line: 0, scope: !9636)
!9647 = !DILocation(line: 364, column: 29, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9649, file: !708, line: 364, column: 2)
!9649 = distinct !DILexicalBlock(scope: !9636, file: !708, line: 364, column: 2)
!9650 = !DILocation(line: 364, column: 2, scope: !9649)
!9651 = !DILocation(line: 365, column: 25, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9648, file: !708, line: 364, column: 66)
!9653 = !DILocation(line: 365, column: 3, scope: !9652)
!9654 = !DILocation(line: 364, column: 62, scope: !9648)
!9655 = distinct !{!9655, !9650, !9656}
!9656 = !DILocation(line: 366, column: 2, scope: !9649)
!9657 = !DILocation(line: 369, column: 23, scope: !9636)
!9658 = !DILocation(line: 369, column: 21, scope: !9636)
!9659 = !DILocation(line: 372, column: 2, scope: !9636)
!9660 = !DILocation(line: 443, column: 2, scope: !9636)
!9661 = !DILocation(line: 444, column: 1, scope: !9636)
!9662 = distinct !DISubprogram(name: "strcpy", scope: !9663, file: !9663, line: 20, type: !9664, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9668)
!9663 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9664 = !DISubroutineType(types: !9665)
!9665 = !{!393, !9666, !9667}
!9666 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !393)
!9667 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !140)
!9668 = !{!9669, !9670, !9671}
!9669 = !DILocalVariable(name: "d", arg: 1, scope: !9662, file: !9663, line: 20, type: !9666)
!9670 = !DILocalVariable(name: "s", arg: 2, scope: !9662, file: !9663, line: 20, type: !9667)
!9671 = !DILocalVariable(name: "dest", scope: !9662, file: !9663, line: 22, type: !393)
!9672 = !DILocation(line: 0, scope: !9662)
!9673 = !DILocation(line: 24, column: 9, scope: !9662)
!9674 = !DILocation(line: 24, column: 12, scope: !9662)
!9675 = !DILocation(line: 24, column: 2, scope: !9662)
!9676 = !DILocation(line: 25, column: 6, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9662, file: !9663, line: 24, column: 21)
!9678 = !DILocation(line: 26, column: 4, scope: !9677)
!9679 = !DILocation(line: 27, column: 4, scope: !9677)
!9680 = distinct !{!9680, !9675, !9681}
!9681 = !DILocation(line: 28, column: 2, scope: !9662)
!9682 = !DILocation(line: 30, column: 5, scope: !9662)
!9683 = !DILocation(line: 32, column: 2, scope: !9662)
!9684 = distinct !DISubprogram(name: "strncpy", scope: !9663, file: !9663, line: 42, type: !9685, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9687)
!9685 = !DISubroutineType(types: !9686)
!9686 = !{!393, !9666, !9667, !272}
!9687 = !{!9688, !9689, !9690, !9691}
!9688 = !DILocalVariable(name: "d", arg: 1, scope: !9684, file: !9663, line: 42, type: !9666)
!9689 = !DILocalVariable(name: "s", arg: 2, scope: !9684, file: !9663, line: 42, type: !9667)
!9690 = !DILocalVariable(name: "n", arg: 3, scope: !9684, file: !9663, line: 42, type: !272)
!9691 = !DILocalVariable(name: "dest", scope: !9684, file: !9663, line: 44, type: !393)
!9692 = !DILocation(line: 0, scope: !9684)
!9693 = !DILocation(line: 46, column: 12, scope: !9684)
!9694 = !DILocation(line: 46, column: 17, scope: !9684)
!9695 = !DILocation(line: 46, column: 20, scope: !9684)
!9696 = !DILocation(line: 46, column: 23, scope: !9684)
!9697 = !DILocation(line: 46, column: 2, scope: !9684)
!9698 = !DILocation(line: 47, column: 6, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9684, file: !9663, line: 46, column: 32)
!9700 = !DILocation(line: 48, column: 4, scope: !9699)
!9701 = !DILocation(line: 49, column: 4, scope: !9699)
!9702 = !DILocation(line: 50, column: 4, scope: !9699)
!9703 = distinct !{!9703, !9697, !9704}
!9704 = !DILocation(line: 51, column: 2, scope: !9684)
!9705 = !DILocation(line: 54, column: 6, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9684, file: !9663, line: 53, column: 16)
!9707 = !DILocation(line: 55, column: 4, scope: !9706)
!9708 = !DILocation(line: 56, column: 4, scope: !9706)
!9709 = !DILocation(line: 53, column: 11, scope: !9684)
!9710 = !DILocation(line: 53, column: 2, scope: !9684)
!9711 = distinct !{!9711, !9710, !9712}
!9712 = !DILocation(line: 57, column: 2, scope: !9684)
!9713 = !DILocation(line: 59, column: 2, scope: !9684)
!9714 = distinct !DISubprogram(name: "strchr", scope: !9663, file: !9663, line: 69, type: !9715, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9717)
!9715 = !DISubroutineType(types: !9716)
!9716 = !{!393, !140, !125}
!9717 = !{!9718, !9719, !9720}
!9718 = !DILocalVariable(name: "s", arg: 1, scope: !9714, file: !9663, line: 69, type: !140)
!9719 = !DILocalVariable(name: "c", arg: 2, scope: !9714, file: !9663, line: 69, type: !125)
!9720 = !DILocalVariable(name: "tmp", scope: !9714, file: !9663, line: 71, type: !142)
!9721 = !DILocation(line: 0, scope: !9714)
!9722 = !DILocation(line: 73, column: 2, scope: !9714)
!9723 = !DILocation(line: 73, column: 10, scope: !9714)
!9724 = !DILocation(line: 73, column: 13, scope: !9714)
!9725 = !DILocation(line: 73, column: 21, scope: !9714)
!9726 = !DILocation(line: 74, column: 4, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9714, file: !9663, line: 73, column: 38)
!9728 = distinct !{!9728, !9722, !9729}
!9729 = !DILocation(line: 75, column: 2, scope: !9714)
!9730 = !DILocation(line: 77, column: 9, scope: !9714)
!9731 = !DILocation(line: 77, column: 2, scope: !9714)
!9732 = distinct !DISubprogram(name: "strrchr", scope: !9663, file: !9663, line: 87, type: !9715, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9733)
!9733 = !{!9734, !9735, !9736}
!9734 = !DILocalVariable(name: "s", arg: 1, scope: !9732, file: !9663, line: 87, type: !140)
!9735 = !DILocalVariable(name: "c", arg: 2, scope: !9732, file: !9663, line: 87, type: !125)
!9736 = !DILocalVariable(name: "match", scope: !9732, file: !9663, line: 89, type: !393)
!9737 = !DILocation(line: 0, scope: !9732)
!9738 = !DILocation(line: 91, column: 2, scope: !9732)
!9739 = !DILocation(line: 92, column: 7, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !9663, line: 92, column: 7)
!9741 = distinct !DILexicalBlock(scope: !9732, file: !9663, line: 91, column: 5)
!9742 = !DILocation(line: 92, column: 10, scope: !9740)
!9743 = !DILocation(line: 92, column: 7, scope: !9741)
!9744 = !DILocation(line: 95, column: 13, scope: !9732)
!9745 = !DILocation(line: 95, column: 2, scope: !9741)
!9746 = distinct !{!9746, !9738, !9747}
!9747 = !DILocation(line: 95, column: 15, scope: !9732)
!9748 = !DILocation(line: 97, column: 2, scope: !9732)
!9749 = distinct !DISubprogram(name: "strlen", scope: !9663, file: !9663, line: 107, type: !9750, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9752)
!9750 = !DISubroutineType(types: !9751)
!9751 = !{!272, !140}
!9752 = !{!9753, !9754}
!9753 = !DILocalVariable(name: "s", arg: 1, scope: !9749, file: !9663, line: 107, type: !140)
!9754 = !DILocalVariable(name: "n", scope: !9749, file: !9663, line: 109, type: !272)
!9755 = !DILocation(line: 0, scope: !9749)
!9756 = !DILocation(line: 111, column: 9, scope: !9749)
!9757 = !DILocation(line: 111, column: 12, scope: !9749)
!9758 = !DILocation(line: 111, column: 2, scope: !9749)
!9759 = !DILocation(line: 112, column: 4, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9749, file: !9663, line: 111, column: 21)
!9761 = !DILocation(line: 113, column: 4, scope: !9760)
!9762 = distinct !{!9762, !9758, !9763}
!9763 = !DILocation(line: 114, column: 2, scope: !9749)
!9764 = !DILocation(line: 116, column: 2, scope: !9749)
!9765 = distinct !DISubprogram(name: "strnlen", scope: !9663, file: !9663, line: 126, type: !9766, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9768)
!9766 = !DISubroutineType(types: !9767)
!9767 = !{!272, !140, !272}
!9768 = !{!9769, !9770, !9771}
!9769 = !DILocalVariable(name: "s", arg: 1, scope: !9765, file: !9663, line: 126, type: !140)
!9770 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9765, file: !9663, line: 126, type: !272)
!9771 = !DILocalVariable(name: "n", scope: !9765, file: !9663, line: 128, type: !272)
!9772 = !DILocation(line: 0, scope: !9765)
!9773 = !DILocation(line: 130, column: 9, scope: !9765)
!9774 = !DILocation(line: 130, column: 12, scope: !9765)
!9775 = !DILocation(line: 130, column: 20, scope: !9765)
!9776 = !DILocation(line: 130, column: 2, scope: !9765)
!9777 = !DILocation(line: 131, column: 4, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9765, file: !9663, line: 130, column: 35)
!9779 = !DILocation(line: 132, column: 4, scope: !9778)
!9780 = distinct !{!9780, !9776, !9781}
!9781 = !DILocation(line: 133, column: 2, scope: !9765)
!9782 = !DILocation(line: 135, column: 2, scope: !9765)
!9783 = distinct !DISubprogram(name: "strcmp", scope: !9663, file: !9663, line: 145, type: !9784, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9786)
!9784 = !DISubroutineType(types: !9785)
!9785 = !{!125, !140, !140}
!9786 = !{!9787, !9788}
!9787 = !DILocalVariable(name: "s1", arg: 1, scope: !9783, file: !9663, line: 145, type: !140)
!9788 = !DILocalVariable(name: "s2", arg: 2, scope: !9783, file: !9663, line: 145, type: !140)
!9789 = !DILocation(line: 0, scope: !9783)
!9790 = !DILocation(line: 147, column: 10, scope: !9783)
!9791 = !DILocation(line: 147, column: 17, scope: !9783)
!9792 = !DILocation(line: 147, column: 14, scope: !9783)
!9793 = !DILocation(line: 147, column: 22, scope: !9783)
!9794 = !DILocation(line: 148, column: 5, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9783, file: !9663, line: 147, column: 40)
!9796 = !DILocation(line: 149, column: 5, scope: !9795)
!9797 = distinct !{!9797, !9798, !9799}
!9798 = !DILocation(line: 147, column: 2, scope: !9783)
!9799 = !DILocation(line: 150, column: 2, scope: !9783)
!9800 = !DILocation(line: 152, column: 9, scope: !9783)
!9801 = !DILocation(line: 152, column: 15, scope: !9783)
!9802 = !DILocation(line: 152, column: 13, scope: !9783)
!9803 = !DILocation(line: 152, column: 2, scope: !9783)
!9804 = distinct !DISubprogram(name: "strncmp", scope: !9663, file: !9663, line: 162, type: !9805, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9807)
!9805 = !DISubroutineType(types: !9806)
!9806 = !{!125, !140, !140, !272}
!9807 = !{!9808, !9809, !9810}
!9808 = !DILocalVariable(name: "s1", arg: 1, scope: !9804, file: !9663, line: 162, type: !140)
!9809 = !DILocalVariable(name: "s2", arg: 2, scope: !9804, file: !9663, line: 162, type: !140)
!9810 = !DILocalVariable(name: "n", arg: 3, scope: !9804, file: !9663, line: 162, type: !272)
!9811 = !DILocation(line: 0, scope: !9804)
!9812 = !DILocation(line: 164, column: 17, scope: !9804)
!9813 = !DILocation(line: 164, column: 21, scope: !9804)
!9814 = !DILocation(line: 164, column: 28, scope: !9804)
!9815 = !DILocation(line: 164, column: 25, scope: !9804)
!9816 = !DILocation(line: 164, column: 33, scope: !9804)
!9817 = !DILocation(line: 165, column: 5, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9804, file: !9663, line: 164, column: 51)
!9819 = !DILocation(line: 166, column: 5, scope: !9818)
!9820 = !DILocation(line: 167, column: 4, scope: !9818)
!9821 = distinct !{!9821, !9822, !9823}
!9822 = !DILocation(line: 164, column: 2, scope: !9804)
!9823 = !DILocation(line: 168, column: 2, scope: !9804)
!9824 = !DILocation(line: 170, column: 25, scope: !9804)
!9825 = !DILocation(line: 170, column: 31, scope: !9804)
!9826 = !DILocation(line: 170, column: 29, scope: !9804)
!9827 = !DILocation(line: 170, column: 9, scope: !9804)
!9828 = !DILocation(line: 170, column: 2, scope: !9804)
!9829 = distinct !DISubprogram(name: "strtok_r", scope: !9663, file: !9663, line: 180, type: !9830, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9832)
!9830 = !DISubroutineType(types: !9831)
!9831 = !{!393, !393, !140, !392}
!9832 = !{!9833, !9834, !9835, !9836, !9837}
!9833 = !DILocalVariable(name: "str", arg: 1, scope: !9829, file: !9663, line: 180, type: !393)
!9834 = !DILocalVariable(name: "sep", arg: 2, scope: !9829, file: !9663, line: 180, type: !140)
!9835 = !DILocalVariable(name: "state", arg: 3, scope: !9829, file: !9663, line: 180, type: !392)
!9836 = !DILocalVariable(name: "start", scope: !9829, file: !9663, line: 182, type: !393)
!9837 = !DILocalVariable(name: "end", scope: !9829, file: !9663, line: 182, type: !393)
!9838 = !DILocation(line: 0, scope: !9829)
!9839 = !DILocation(line: 184, column: 10, scope: !9829)
!9840 = !DILocation(line: 184, column: 22, scope: !9829)
!9841 = !DILocation(line: 187, column: 9, scope: !9829)
!9842 = !DILocation(line: 187, column: 16, scope: !9829)
!9843 = !DILocation(line: 187, column: 19, scope: !9829)
!9844 = !DILocation(line: 187, column: 2, scope: !9829)
!9845 = !DILocation(line: 188, column: 8, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9829, file: !9663, line: 187, column: 40)
!9847 = distinct !{!9847, !9844, !9848}
!9848 = !DILocation(line: 189, column: 2, scope: !9829)
!9849 = !DILocation(line: 198, column: 9, scope: !9829)
!9850 = !DILocation(line: 198, column: 18, scope: !9829)
!9851 = !DILocation(line: 198, column: 17, scope: !9829)
!9852 = !DILocation(line: 198, column: 2, scope: !9829)
!9853 = !DILocation(line: 199, column: 6, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9829, file: !9663, line: 198, column: 37)
!9855 = !DILocation(line: 198, column: 14, scope: !9829)
!9856 = distinct !{!9856, !9852, !9857}
!9857 = !DILocation(line: 200, column: 2, scope: !9829)
!9858 = !DILocation(line: 203, column: 8, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9860, file: !9663, line: 202, column: 20)
!9860 = distinct !DILexicalBlock(scope: !9829, file: !9663, line: 202, column: 6)
!9861 = !DILocation(line: 204, column: 16, scope: !9859)
!9862 = !DILocation(line: 205, column: 2, scope: !9859)
!9863 = !DILocation(line: 210, column: 1, scope: !9829)
!9864 = distinct !DISubprogram(name: "strcat", scope: !9663, file: !9663, line: 212, type: !9664, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9865)
!9865 = !{!9866, !9867}
!9866 = !DILocalVariable(name: "dest", arg: 1, scope: !9864, file: !9663, line: 212, type: !9666)
!9867 = !DILocalVariable(name: "src", arg: 2, scope: !9864, file: !9663, line: 212, type: !9667)
!9868 = !DILocation(line: 0, scope: !9864)
!9869 = !DILocation(line: 214, column: 16, scope: !9864)
!9870 = !DILocation(line: 214, column: 14, scope: !9864)
!9871 = !DILocation(line: 214, column: 2, scope: !9864)
!9872 = !DILocation(line: 215, column: 2, scope: !9864)
!9873 = distinct !DISubprogram(name: "strncat", scope: !9663, file: !9663, line: 218, type: !9685, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9874)
!9874 = !{!9875, !9876, !9877, !9878, !9879}
!9875 = !DILocalVariable(name: "dest", arg: 1, scope: !9873, file: !9663, line: 218, type: !9666)
!9876 = !DILocalVariable(name: "src", arg: 2, scope: !9873, file: !9663, line: 218, type: !9667)
!9877 = !DILocalVariable(name: "n", arg: 3, scope: !9873, file: !9663, line: 219, type: !272)
!9878 = !DILocalVariable(name: "orig_dest", scope: !9873, file: !9663, line: 221, type: !393)
!9879 = !DILocalVariable(name: "len", scope: !9873, file: !9663, line: 222, type: !272)
!9880 = !DILocation(line: 0, scope: !9873)
!9881 = !DILocation(line: 222, column: 15, scope: !9873)
!9882 = !DILocation(line: 224, column: 7, scope: !9873)
!9883 = !DILocation(line: 225, column: 14, scope: !9873)
!9884 = !DILocation(line: 225, column: 19, scope: !9873)
!9885 = !DILocation(line: 225, column: 11, scope: !9873)
!9886 = !DILocation(line: 225, column: 23, scope: !9873)
!9887 = !DILocation(line: 225, column: 28, scope: !9873)
!9888 = !DILocation(line: 225, column: 2, scope: !9873)
!9889 = !DILocation(line: 226, column: 17, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9873, file: !9663, line: 225, column: 38)
!9891 = !DILocation(line: 226, column: 8, scope: !9890)
!9892 = !DILocation(line: 226, column: 11, scope: !9890)
!9893 = distinct !{!9893, !9888, !9894}
!9894 = !DILocation(line: 227, column: 2, scope: !9873)
!9895 = !DILocation(line: 228, column: 8, scope: !9873)
!9896 = !DILocation(line: 230, column: 2, scope: !9873)
!9897 = distinct !DISubprogram(name: "memcmp", scope: !9663, file: !9663, line: 239, type: !9898, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9900)
!9898 = !DISubroutineType(types: !9899)
!9899 = !{!125, !13, !13, !272}
!9900 = !{!9901, !9902, !9903, !9904, !9905}
!9901 = !DILocalVariable(name: "m1", arg: 1, scope: !9897, file: !9663, line: 239, type: !13)
!9902 = !DILocalVariable(name: "m2", arg: 2, scope: !9897, file: !9663, line: 239, type: !13)
!9903 = !DILocalVariable(name: "n", arg: 3, scope: !9897, file: !9663, line: 239, type: !272)
!9904 = !DILocalVariable(name: "c1", scope: !9897, file: !9663, line: 241, type: !140)
!9905 = !DILocalVariable(name: "c2", scope: !9897, file: !9663, line: 242, type: !140)
!9906 = !DILocation(line: 0, scope: !9897)
!9907 = !DILocation(line: 244, column: 7, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9897, file: !9663, line: 244, column: 6)
!9909 = !DILocation(line: 244, column: 6, scope: !9897)
!9910 = !DILocation(line: 248, column: 10, scope: !9897)
!9911 = !DILocation(line: 248, column: 14, scope: !9897)
!9912 = !DILocation(line: 248, column: 19, scope: !9897)
!9913 = !DILocation(line: 248, column: 2, scope: !9897)
!9914 = !DILocation(line: 248, column: 23, scope: !9897)
!9915 = !DILocation(line: 248, column: 30, scope: !9897)
!9916 = !DILocation(line: 248, column: 27, scope: !9897)
!9917 = !DILocation(line: 249, column: 5, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9897, file: !9663, line: 248, column: 36)
!9919 = !DILocation(line: 250, column: 5, scope: !9918)
!9920 = distinct !{!9920, !9913, !9921}
!9921 = !DILocation(line: 251, column: 2, scope: !9897)
!9922 = !DILocation(line: 253, column: 9, scope: !9897)
!9923 = !DILocation(line: 253, column: 15, scope: !9897)
!9924 = !DILocation(line: 253, column: 13, scope: !9897)
!9925 = !DILocation(line: 253, column: 2, scope: !9897)
!9926 = !DILocation(line: 254, column: 1, scope: !9897)
!9927 = distinct !DISubprogram(name: "memmove", scope: !9663, file: !9663, line: 263, type: !9928, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9930)
!9928 = !DISubroutineType(types: !9929)
!9929 = !{!124, !124, !13, !272}
!9930 = !{!9931, !9932, !9933, !9934, !9935}
!9931 = !DILocalVariable(name: "d", arg: 1, scope: !9927, file: !9663, line: 263, type: !124)
!9932 = !DILocalVariable(name: "s", arg: 2, scope: !9927, file: !9663, line: 263, type: !13)
!9933 = !DILocalVariable(name: "n", arg: 3, scope: !9927, file: !9663, line: 263, type: !272)
!9934 = !DILocalVariable(name: "dest", scope: !9927, file: !9663, line: 265, type: !393)
!9935 = !DILocalVariable(name: "src", scope: !9927, file: !9663, line: 266, type: !140)
!9936 = !DILocation(line: 0, scope: !9927)
!9937 = !DILocation(line: 268, column: 21, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9927, file: !9663, line: 268, column: 6)
!9939 = !DILocation(line: 268, column: 28, scope: !9938)
!9940 = !DILocation(line: 268, column: 6, scope: !9927)
!9941 = !DILocation(line: 280, column: 12, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9938, file: !9663, line: 278, column: 9)
!9943 = !DILocation(line: 280, column: 3, scope: !9942)
!9944 = !DILocation(line: 275, column: 5, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !9663, line: 274, column: 17)
!9946 = distinct !DILexicalBlock(scope: !9938, file: !9663, line: 268, column: 33)
!9947 = !DILocation(line: 276, column: 14, scope: !9945)
!9948 = !DILocation(line: 276, column: 4, scope: !9945)
!9949 = !DILocation(line: 276, column: 12, scope: !9945)
!9950 = !DILocation(line: 274, column: 12, scope: !9946)
!9951 = !DILocation(line: 274, column: 3, scope: !9946)
!9952 = distinct !{!9952, !9951, !9953}
!9953 = !DILocation(line: 277, column: 3, scope: !9946)
!9954 = !DILocation(line: 281, column: 12, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9942, file: !9663, line: 280, column: 17)
!9956 = !DILocation(line: 281, column: 10, scope: !9955)
!9957 = !DILocation(line: 282, column: 8, scope: !9955)
!9958 = !DILocation(line: 283, column: 7, scope: !9955)
!9959 = !DILocation(line: 284, column: 5, scope: !9955)
!9960 = distinct !{!9960, !9943, !9961}
!9961 = !DILocation(line: 285, column: 3, scope: !9942)
!9962 = !DILocation(line: 288, column: 2, scope: !9927)
!9963 = distinct !DISubprogram(name: "memcpy", scope: !9663, file: !9663, line: 298, type: !9964, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9968)
!9964 = !DISubroutineType(types: !9965)
!9965 = !{!124, !9966, !9967, !272}
!9966 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!9967 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9968 = !{!9969, !9970, !9971, !9972, !9973}
!9969 = !DILocalVariable(name: "d", arg: 1, scope: !9963, file: !9663, line: 298, type: !9966)
!9970 = !DILocalVariable(name: "s", arg: 2, scope: !9963, file: !9663, line: 298, type: !9967)
!9971 = !DILocalVariable(name: "n", arg: 3, scope: !9963, file: !9663, line: 298, type: !272)
!9972 = !DILocalVariable(name: "d_byte", scope: !9963, file: !9663, line: 302, type: !1119)
!9973 = !DILocalVariable(name: "s_byte", scope: !9963, file: !9663, line: 303, type: !3092)
!9974 = !DILocation(line: 0, scope: !9963)
!9975 = !DILocation(line: 337, column: 11, scope: !9963)
!9976 = !DILocation(line: 337, column: 2, scope: !9963)
!9977 = !DILocation(line: 338, column: 25, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9963, file: !9663, line: 337, column: 16)
!9979 = !DILocation(line: 338, column: 17, scope: !9978)
!9980 = !DILocation(line: 338, column: 11, scope: !9978)
!9981 = !DILocation(line: 338, column: 15, scope: !9978)
!9982 = !DILocation(line: 339, column: 4, scope: !9978)
!9983 = distinct !{!9983, !9976, !9984}
!9984 = !DILocation(line: 340, column: 2, scope: !9963)
!9985 = !DILocation(line: 342, column: 2, scope: !9963)
!9986 = distinct !DISubprogram(name: "memset", scope: !9663, file: !9663, line: 352, type: !9987, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !9989)
!9987 = !DISubroutineType(types: !9988)
!9988 = !{!124, !124, !125, !272}
!9989 = !{!9990, !9991, !9992, !9993, !9994}
!9990 = !DILocalVariable(name: "buf", arg: 1, scope: !9986, file: !9663, line: 352, type: !124)
!9991 = !DILocalVariable(name: "c", arg: 2, scope: !9986, file: !9663, line: 352, type: !125)
!9992 = !DILocalVariable(name: "n", arg: 3, scope: !9986, file: !9663, line: 352, type: !272)
!9993 = !DILocalVariable(name: "d_byte", scope: !9986, file: !9663, line: 356, type: !1119)
!9994 = !DILocalVariable(name: "c_byte", scope: !9986, file: !9663, line: 357, type: !151)
!9995 = !DILocation(line: 0, scope: !9986)
!9996 = !DILocation(line: 357, column: 25, scope: !9986)
!9997 = !DILocation(line: 389, column: 11, scope: !9986)
!9998 = !DILocation(line: 389, column: 2, scope: !9986)
!9999 = !DILocation(line: 390, column: 11, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9986, file: !9663, line: 389, column: 16)
!10001 = !DILocation(line: 390, column: 15, scope: !10000)
!10002 = !DILocation(line: 391, column: 4, scope: !10000)
!10003 = distinct !{!10003, !9998, !10004}
!10004 = !DILocation(line: 392, column: 2, scope: !9986)
!10005 = !DILocation(line: 394, column: 2, scope: !9986)
!10006 = distinct !DISubprogram(name: "memchr", scope: !9663, file: !9663, line: 404, type: !10007, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !10009)
!10007 = !DISubroutineType(types: !10008)
!10008 = !{!124, !13, !125, !272}
!10009 = !{!10010, !10011, !10012, !10013}
!10010 = !DILocalVariable(name: "s", arg: 1, scope: !10006, file: !9663, line: 404, type: !13)
!10011 = !DILocalVariable(name: "c", arg: 2, scope: !10006, file: !9663, line: 404, type: !125)
!10012 = !DILocalVariable(name: "n", arg: 3, scope: !10006, file: !9663, line: 404, type: !272)
!10013 = !DILocalVariable(name: "p", scope: !10014, file: !9663, line: 407, type: !3092)
!10014 = distinct !DILexicalBlock(scope: !10015, file: !9663, line: 406, column: 14)
!10015 = distinct !DILexicalBlock(scope: !10006, file: !9663, line: 406, column: 6)
!10016 = !DILocation(line: 0, scope: !10006)
!10017 = !DILocation(line: 406, column: 8, scope: !10015)
!10018 = !DILocation(line: 406, column: 6, scope: !10006)
!10019 = !DILocation(line: 409, column: 3, scope: !10014)
!10020 = !DILocation(line: 0, scope: !10014)
!10021 = !DILocation(line: 410, column: 8, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10023, file: !9663, line: 410, column: 8)
!10023 = distinct !DILexicalBlock(scope: !10014, file: !9663, line: 409, column: 6)
!10024 = !DILocation(line: 410, column: 13, scope: !10022)
!10025 = !DILocation(line: 410, column: 8, scope: !10023)
!10026 = distinct !{!10026, !10019, !10027}
!10027 = !DILocation(line: 414, column: 20, scope: !10014)
!10028 = !DILocation(line: 417, column: 2, scope: !10006)
!10029 = !DILocation(line: 418, column: 1, scope: !10006)
!10030 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !718, file: !718, line: 23, type: !5100, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10031)
!10031 = !{!10032}
!10032 = !DILocalVariable(name: "hook", arg: 1, scope: !10030, file: !718, line: 23, type: !409)
!10033 = !DILocation(line: 0, scope: !10030)
!10034 = !DILocation(line: 25, column: 15, scope: !10030)
!10035 = !DILocation(line: 26, column: 1, scope: !10030)
!10036 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !718, file: !718, line: 14, type: !410, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10037)
!10037 = !{!10038}
!10038 = !DILocalVariable(name: "c", arg: 1, scope: !10036, file: !718, line: 14, type: !125)
!10039 = !DILocation(line: 0, scope: !10036)
!10040 = !DILocation(line: 18, column: 2, scope: !10036)
!10041 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !718, file: !718, line: 28, type: !10042, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10044)
!10042 = !DISubroutineType(types: !10043)
!10043 = !{!125, !125, !714}
!10044 = !{!10045, !10046}
!10045 = !DILocalVariable(name: "c", arg: 1, scope: !10041, file: !718, line: 28, type: !125)
!10046 = !DILocalVariable(name: "stream", arg: 2, scope: !10041, file: !718, line: 28, type: !714)
!10047 = !DILocation(line: 0, scope: !10041)
!10048 = !DILocation(line: 30, column: 27, scope: !10041)
!10049 = !DILocation(line: 30, column: 50, scope: !10041)
!10050 = !DILocation(line: 30, column: 9, scope: !10041)
!10051 = !DILocation(line: 30, column: 2, scope: !10041)
!10052 = distinct !DISubprogram(name: "fputc", scope: !718, file: !718, line: 41, type: !10042, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10053)
!10053 = !{!10054, !10055}
!10054 = !DILocalVariable(name: "c", arg: 1, scope: !10052, file: !718, line: 41, type: !125)
!10055 = !DILocalVariable(name: "stream", arg: 2, scope: !10052, file: !718, line: 41, type: !714)
!10056 = !DILocation(line: 0, scope: !10052)
!10057 = !DILocation(line: 43, column: 9, scope: !10052)
!10058 = !DILocation(line: 43, column: 2, scope: !10052)
!10059 = distinct !DISubprogram(name: "zephyr_fputc", scope: !10060, file: !10060, line: 72, type: !10042, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10061)
!10060 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!10061 = !{!10062, !10063}
!10062 = !DILocalVariable(name: "c", arg: 1, scope: !10059, file: !10060, line: 72, type: !125)
!10063 = !DILocalVariable(name: "stream", arg: 2, scope: !10059, file: !10060, line: 72, type: !714)
!10064 = !DILocation(line: 0, scope: !10059)
!10065 = !DILocation(line: 81, column: 2, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10059, file: !10060, line: 81, column: 2)
!10067 = !{i64 2154214035}
!10068 = !DILocation(line: 82, column: 9, scope: !10059)
!10069 = !DILocation(line: 82, column: 2, scope: !10059)
!10070 = distinct !DISubprogram(name: "fputs", scope: !718, file: !718, line: 46, type: !10071, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10074)
!10071 = !DISubroutineType(types: !10072)
!10072 = !{!125, !9667, !10073}
!10073 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !714)
!10074 = !{!10075, !10076, !10077, !10078}
!10075 = !DILocalVariable(name: "s", arg: 1, scope: !10070, file: !718, line: 46, type: !9667)
!10076 = !DILocalVariable(name: "stream", arg: 2, scope: !10070, file: !718, line: 46, type: !10073)
!10077 = !DILocalVariable(name: "len", scope: !10070, file: !718, line: 48, type: !125)
!10078 = !DILocalVariable(name: "ret", scope: !10070, file: !718, line: 49, type: !125)
!10079 = !DILocation(line: 0, scope: !10070)
!10080 = !DILocation(line: 48, column: 12, scope: !10070)
!10081 = !DILocation(line: 51, column: 8, scope: !10070)
!10082 = !DILocation(line: 53, column: 13, scope: !10070)
!10083 = !DILocation(line: 53, column: 9, scope: !10070)
!10084 = !DILocation(line: 53, column: 2, scope: !10070)
!10085 = distinct !DISubprogram(name: "fwrite", scope: !718, file: !718, line: 99, type: !10086, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10088)
!10086 = !DISubroutineType(types: !10087)
!10087 = !{!272, !9967, !272, !272, !10073}
!10088 = !{!10089, !10090, !10091, !10092}
!10089 = !DILocalVariable(name: "ptr", arg: 1, scope: !10085, file: !718, line: 99, type: !9967)
!10090 = !DILocalVariable(name: "size", arg: 2, scope: !10085, file: !718, line: 99, type: !272)
!10091 = !DILocalVariable(name: "nitems", arg: 3, scope: !10085, file: !718, line: 99, type: !272)
!10092 = !DILocalVariable(name: "stream", arg: 4, scope: !10085, file: !718, line: 100, type: !10073)
!10093 = !DILocation(line: 0, scope: !10085)
!10094 = !DILocation(line: 102, column: 9, scope: !10085)
!10095 = !DILocation(line: 102, column: 2, scope: !10085)
!10096 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !10060, file: !10060, line: 96, type: !10086, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10097)
!10097 = !{!10098, !10099, !10100, !10101}
!10098 = !DILocalVariable(name: "ptr", arg: 1, scope: !10096, file: !10060, line: 96, type: !9967)
!10099 = !DILocalVariable(name: "size", arg: 2, scope: !10096, file: !10060, line: 96, type: !272)
!10100 = !DILocalVariable(name: "nitems", arg: 3, scope: !10096, file: !10060, line: 96, type: !272)
!10101 = !DILocalVariable(name: "stream", arg: 4, scope: !10096, file: !10060, line: 96, type: !10073)
!10102 = !DILocation(line: 0, scope: !10096)
!10103 = !DILocation(line: 107, column: 2, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10096, file: !10060, line: 107, column: 2)
!10105 = !{i64 2154214139}
!10106 = !DILocation(line: 108, column: 9, scope: !10096)
!10107 = !DILocation(line: 108, column: 2, scope: !10096)
!10108 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !718, file: !718, line: 56, type: !10086, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10109)
!10109 = !{!10110, !10111, !10112, !10113, !10114, !10115, !10116, !10117}
!10110 = !DILocalVariable(name: "ptr", arg: 1, scope: !10108, file: !718, line: 56, type: !9967)
!10111 = !DILocalVariable(name: "size", arg: 2, scope: !10108, file: !718, line: 56, type: !272)
!10112 = !DILocalVariable(name: "nitems", arg: 3, scope: !10108, file: !718, line: 57, type: !272)
!10113 = !DILocalVariable(name: "stream", arg: 4, scope: !10108, file: !718, line: 57, type: !10073)
!10114 = !DILocalVariable(name: "i", scope: !10108, file: !718, line: 59, type: !272)
!10115 = !DILocalVariable(name: "j", scope: !10108, file: !718, line: 60, type: !272)
!10116 = !DILocalVariable(name: "p", scope: !10108, file: !718, line: 61, type: !3092)
!10117 = !DILabel(scope: !10108, name: "done", file: !718, line: 82)
!10118 = !DILocation(line: 0, scope: !10108)
!10119 = !DILocation(line: 63, column: 14, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10108, file: !718, line: 63, column: 6)
!10121 = !DILocation(line: 63, column: 24, scope: !10120)
!10122 = !DILocation(line: 72, column: 3, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10108, file: !718, line: 70, column: 5)
!10124 = !DILocation(line: 0, scope: !10123)
!10125 = !DILocation(line: 73, column: 8, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10127, file: !718, line: 73, column: 8)
!10127 = distinct !DILexicalBlock(scope: !10123, file: !718, line: 72, column: 6)
!10128 = !DILocation(line: 73, column: 29, scope: !10126)
!10129 = !DILocation(line: 73, column: 27, scope: !10126)
!10130 = !DILocation(line: 73, column: 21, scope: !10126)
!10131 = !DILocation(line: 73, column: 33, scope: !10126)
!10132 = !DILocation(line: 73, column: 8, scope: !10127)
!10133 = !DILocation(line: 76, column: 5, scope: !10127)
!10134 = !DILocation(line: 77, column: 14, scope: !10123)
!10135 = !DILocation(line: 77, column: 3, scope: !10127)
!10136 = distinct !{!10136, !10122, !10137}
!10137 = !DILocation(line: 77, column: 17, scope: !10123)
!10138 = !DILocation(line: 79, column: 4, scope: !10123)
!10139 = !DILocation(line: 80, column: 13, scope: !10108)
!10140 = !DILocation(line: 80, column: 2, scope: !10123)
!10141 = distinct !{!10141, !10142, !10143}
!10142 = !DILocation(line: 70, column: 2, scope: !10108)
!10143 = !DILocation(line: 80, column: 16, scope: !10108)
!10144 = !DILocation(line: 82, column: 1, scope: !10108)
!10145 = !DILocation(line: 83, column: 17, scope: !10108)
!10146 = !DILocation(line: 83, column: 2, scope: !10108)
!10147 = !DILocation(line: 84, column: 1, scope: !10108)
!10148 = distinct !DISubprogram(name: "puts", scope: !718, file: !718, line: 106, type: !10149, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10151)
!10149 = !DISubroutineType(types: !10150)
!10150 = !{!125, !140}
!10151 = !{!10152}
!10152 = !DILocalVariable(name: "s", arg: 1, scope: !10148, file: !718, line: 106, type: !140)
!10153 = !DILocation(line: 0, scope: !10148)
!10154 = !DILocation(line: 108, column: 6, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10148, file: !718, line: 108, column: 6)
!10156 = !DILocation(line: 108, column: 23, scope: !10155)
!10157 = !DILocation(line: 108, column: 6, scope: !10148)
!10158 = !DILocation(line: 112, column: 9, scope: !10148)
!10159 = !DILocation(line: 112, column: 29, scope: !10148)
!10160 = !DILocation(line: 112, column: 2, scope: !10148)
!10161 = !DILocation(line: 113, column: 1, scope: !10148)
!10162 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !829, file: !829, line: 368, type: !880, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10163)
!10163 = !{!10164}
!10164 = !DILocalVariable(name: "dev", arg: 1, scope: !10162, file: !829, line: 368, type: !858)
!10165 = !DILocation(line: 0, scope: !10162)
!10166 = !DILocation(line: 370, column: 2, scope: !10162)
!10167 = !DILocation(line: 371, column: 1, scope: !10162)
!10168 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !829, file: !829, line: 243, type: !10169, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{null, !125, !125, !858}
!10171 = !{!10172, !10173, !10174, !10175, !10177}
!10172 = !DILocalVariable(name: "min", arg: 1, scope: !10168, file: !829, line: 243, type: !125)
!10173 = !DILocalVariable(name: "max", arg: 2, scope: !10168, file: !829, line: 243, type: !125)
!10174 = !DILocalVariable(name: "dev", arg: 3, scope: !10168, file: !829, line: 243, type: !858)
!10175 = !DILocalVariable(name: "data", scope: !10168, file: !829, line: 245, type: !10176)
!10176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!10177 = !DILocalVariable(name: "line", scope: !10168, file: !829, line: 246, type: !125)
!10178 = !DILocation(line: 0, scope: !10168)
!10179 = !DILocation(line: 245, column: 38, scope: !10168)
!10180 = !DILocation(line: 249, column: 24, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10182, file: !829, line: 249, column: 2)
!10182 = distinct !DILexicalBlock(scope: !10168, file: !829, line: 249, column: 2)
!10183 = !DILocation(line: 249, column: 2, scope: !10182)
!10184 = !DILocation(line: 251, column: 7, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10186, file: !829, line: 251, column: 7)
!10186 = distinct !DILexicalBlock(scope: !10181, file: !829, line: 249, column: 39)
!10187 = !DILocation(line: 251, column: 7, scope: !10186)
!10188 = !DILocation(line: 253, column: 4, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10185, file: !829, line: 251, column: 36)
!10190 = !DILocation(line: 256, column: 24, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10189, file: !829, line: 256, column: 8)
!10192 = !DILocation(line: 256, column: 9, scope: !10191)
!10193 = !DILocation(line: 256, column: 8, scope: !10189)
!10194 = !DILocation(line: 260, column: 43, scope: !10189)
!10195 = !DILocation(line: 260, column: 4, scope: !10189)
!10196 = !DILocation(line: 261, column: 3, scope: !10189)
!10197 = !DILocation(line: 249, column: 35, scope: !10181)
!10198 = distinct !{!10198, !10183, !10199}
!10199 = !DILocation(line: 262, column: 2, scope: !10182)
!10200 = !DILocation(line: 263, column: 1, scope: !10168)
!10201 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !829, file: !829, line: 158, type: !410, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10202)
!10202 = !{!10203}
!10203 = !DILocalVariable(name: "line", arg: 1, scope: !10201, file: !829, line: 158, type: !125)
!10204 = !DILocation(line: 0, scope: !10201)
!10205 = !DILocation(line: 170, column: 38, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10207, file: !829, line: 160, column: 17)
!10207 = distinct !DILexicalBlock(scope: !10201, file: !829, line: 160, column: 6)
!10208 = !DILocation(line: 170, column: 10, scope: !10206)
!10209 = !DILocation(line: 176, column: 1, scope: !10201)
!10210 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !829, file: !829, line: 183, type: !10211, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10213)
!10211 = !DISubroutineType(types: !10212)
!10212 = !{null, !125}
!10213 = !{!10214}
!10214 = !DILocalVariable(name: "line", arg: 1, scope: !10210, file: !829, line: 183, type: !125)
!10215 = !DILocation(line: 0, scope: !10210)
!10216 = !DILocation(line: 195, column: 28, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !829, line: 185, column: 17)
!10218 = distinct !DILexicalBlock(scope: !10210, file: !829, line: 185, column: 6)
!10219 = !DILocation(line: 195, column: 3, scope: !10217)
!10220 = !DILocation(line: 200, column: 1, scope: !10210)
!10221 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10222, file: !10222, line: 910, type: !8420, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10223)
!10222 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10223 = !{!10224}
!10224 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10221, file: !10222, line: 910, type: !208)
!10225 = !DILocation(line: 0, scope: !10221)
!10226 = !DILocation(line: 912, column: 3, scope: !10221)
!10227 = !DILocation(line: 913, column: 1, scope: !10221)
!10228 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10222, file: !10222, line: 834, type: !9575, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10229)
!10229 = !{!10230}
!10230 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10228, file: !10222, line: 834, type: !208)
!10231 = !DILocation(line: 0, scope: !10228)
!10232 = !DILocation(line: 836, column: 11, scope: !10228)
!10233 = !DILocation(line: 836, column: 40, scope: !10228)
!10234 = !DILocation(line: 836, column: 3, scope: !10228)
!10235 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !829, file: !829, line: 304, type: !880, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10236)
!10236 = !{!10237}
!10237 = !DILocalVariable(name: "dev", arg: 1, scope: !10235, file: !829, line: 304, type: !858)
!10238 = !DILocation(line: 0, scope: !10235)
!10239 = !DILocation(line: 306, column: 2, scope: !10235)
!10240 = !DILocation(line: 307, column: 1, scope: !10235)
!10241 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !829, file: !829, line: 299, type: !880, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10242)
!10242 = !{!10243}
!10243 = !DILocalVariable(name: "dev", arg: 1, scope: !10241, file: !829, line: 299, type: !858)
!10244 = !DILocation(line: 0, scope: !10241)
!10245 = !DILocation(line: 301, column: 2, scope: !10241)
!10246 = !DILocation(line: 302, column: 1, scope: !10241)
!10247 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !829, file: !829, line: 294, type: !880, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10248)
!10248 = !{!10249}
!10249 = !DILocalVariable(name: "dev", arg: 1, scope: !10247, file: !829, line: 294, type: !858)
!10250 = !DILocation(line: 0, scope: !10247)
!10251 = !DILocation(line: 296, column: 2, scope: !10247)
!10252 = !DILocation(line: 297, column: 1, scope: !10247)
!10253 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !829, file: !829, line: 397, type: !880, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10254)
!10254 = !{!10255}
!10255 = !DILocalVariable(name: "dev", arg: 1, scope: !10253, file: !829, line: 397, type: !858)
!10256 = !DILocation(line: 0, scope: !10253)
!10257 = !DILocation(line: 399, column: 2, scope: !10253)
!10258 = !DILocation(line: 400, column: 1, scope: !10253)
!10259 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !829, file: !829, line: 392, type: !880, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10260)
!10260 = !{!10261}
!10261 = !DILocalVariable(name: "dev", arg: 1, scope: !10259, file: !829, line: 392, type: !858)
!10262 = !DILocation(line: 0, scope: !10259)
!10263 = !DILocation(line: 394, column: 2, scope: !10259)
!10264 = !DILocation(line: 395, column: 1, scope: !10259)
!10265 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !829, file: !829, line: 289, type: !880, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10266)
!10266 = !{!10267}
!10267 = !DILocalVariable(name: "dev", arg: 1, scope: !10265, file: !829, line: 289, type: !858)
!10268 = !DILocation(line: 0, scope: !10265)
!10269 = !DILocation(line: 291, column: 2, scope: !10265)
!10270 = !DILocation(line: 292, column: 1, scope: !10265)
!10271 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !829, file: !829, line: 387, type: !880, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10272)
!10272 = !{!10273}
!10273 = !DILocalVariable(name: "dev", arg: 1, scope: !10271, file: !829, line: 387, type: !858)
!10274 = !DILocation(line: 0, scope: !10271)
!10275 = !DILocation(line: 389, column: 2, scope: !10271)
!10276 = !DILocation(line: 390, column: 1, scope: !10271)
!10277 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !829, file: !829, line: 382, type: !880, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10278)
!10278 = !{!10279}
!10279 = !DILocalVariable(name: "dev", arg: 1, scope: !10277, file: !829, line: 382, type: !858)
!10280 = !DILocation(line: 0, scope: !10277)
!10281 = !DILocation(line: 384, column: 2, scope: !10277)
!10282 = !DILocation(line: 385, column: 1, scope: !10277)
!10283 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !829, file: !829, line: 373, type: !880, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10284)
!10284 = !{!10285}
!10285 = !DILocalVariable(name: "dev", arg: 1, scope: !10283, file: !829, line: 373, type: !858)
!10286 = !DILocation(line: 0, scope: !10283)
!10287 = !DILocation(line: 375, column: 2, scope: !10283)
!10288 = !DILocation(line: 376, column: 1, scope: !10283)
!10289 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !829, file: !829, line: 284, type: !880, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10290)
!10290 = !{!10291}
!10291 = !DILocalVariable(name: "dev", arg: 1, scope: !10289, file: !829, line: 284, type: !858)
!10292 = !DILocation(line: 0, scope: !10289)
!10293 = !DILocation(line: 286, column: 2, scope: !10289)
!10294 = !DILocation(line: 287, column: 1, scope: !10289)
!10295 = distinct !DISubprogram(name: "stm32_exti_init", scope: !829, file: !829, line: 416, type: !856, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10296)
!10296 = !{!10297}
!10297 = !DILocalVariable(name: "dev", arg: 1, scope: !10295, file: !829, line: 416, type: !858)
!10298 = !DILocation(line: 0, scope: !10295)
!10299 = !DILocation(line: 418, column: 2, scope: !10295)
!10300 = !DILocation(line: 420, column: 2, scope: !10295)
!10301 = !DILocation(line: 0, scope: !879)
!10302 = !DILocation(line: 493, column: 2, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !879, file: !829, line: 493, column: 2)
!10304 = !DILocation(line: 497, column: 2, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !879, file: !829, line: 497, column: 2)
!10306 = !DILocation(line: 507, column: 2, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !879, file: !829, line: 507, column: 2)
!10308 = !DILocation(line: 512, column: 2, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !879, file: !829, line: 512, column: 2)
!10310 = !DILocation(line: 516, column: 2, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !879, file: !829, line: 516, column: 2)
!10312 = !DILocation(line: 523, column: 2, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !879, file: !829, line: 523, column: 2)
!10314 = !DILocation(line: 527, column: 2, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !879, file: !829, line: 527, column: 2)
!10316 = !DILocation(line: 581, column: 2, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !879, file: !829, line: 581, column: 2)
!10318 = !DILocation(line: 586, column: 2, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !879, file: !829, line: 586, column: 2)
!10320 = !DILocation(line: 591, column: 2, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !879, file: !829, line: 591, column: 2)
!10322 = !DILocation(line: 595, column: 2, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !879, file: !829, line: 595, column: 2)
!10324 = !DILocation(line: 607, column: 1, scope: !879)
!10325 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !829, file: !829, line: 112, type: !10211, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10326)
!10326 = !{!10327, !10328}
!10327 = !DILocalVariable(name: "line", arg: 1, scope: !10325, file: !829, line: 112, type: !125)
!10328 = !DILocalVariable(name: "irqnum", scope: !10325, file: !829, line: 114, type: !125)
!10329 = !DILocation(line: 0, scope: !10325)
!10330 = !DILocation(line: 121, column: 11, scope: !10325)
!10331 = !DILocation(line: 130, column: 26, scope: !10325)
!10332 = !DILocation(line: 130, column: 2, scope: !10325)
!10333 = !DILocation(line: 134, column: 2, scope: !10325)
!10334 = !DILocation(line: 135, column: 1, scope: !10325)
!10335 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10222, file: !10222, line: 268, type: !8420, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10336)
!10336 = !{!10337}
!10337 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10335, file: !10222, line: 268, type: !208)
!10338 = !DILocation(line: 0, scope: !10335)
!10339 = !DILocation(line: 270, column: 3, scope: !10335)
!10340 = !DILocation(line: 271, column: 1, scope: !10335)
!10341 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !829, file: !829, line: 137, type: !10211, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10342)
!10342 = !{!10343}
!10343 = !DILocalVariable(name: "line", arg: 1, scope: !10341, file: !829, line: 137, type: !125)
!10344 = !DILocation(line: 0, scope: !10341)
!10345 = !DILocation(line: 141, column: 11, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10341, file: !829, line: 141, column: 6)
!10347 = !DILocation(line: 141, column: 6, scope: !10341)
!10348 = !DILocation(line: 145, column: 28, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10346, file: !829, line: 141, column: 17)
!10350 = !DILocation(line: 145, column: 3, scope: !10349)
!10351 = !DILocation(line: 147, column: 2, scope: !10349)
!10352 = !DILocation(line: 151, column: 1, scope: !10341)
!10353 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10222, file: !10222, line: 309, type: !8420, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10354)
!10354 = !{!10355}
!10355 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10353, file: !10222, line: 309, type: !208)
!10356 = !DILocation(line: 0, scope: !10353)
!10357 = !DILocation(line: 311, column: 3, scope: !10353)
!10358 = !DILocation(line: 312, column: 1, scope: !10353)
!10359 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !829, file: !829, line: 202, type: !10360, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10362)
!10360 = !DISubroutineType(types: !10361)
!10361 = !{null, !125, !125}
!10362 = !{!10363, !10364}
!10363 = !DILocalVariable(name: "line", arg: 1, scope: !10359, file: !829, line: 202, type: !125)
!10364 = !DILocalVariable(name: "trigger", arg: 2, scope: !10359, file: !829, line: 202, type: !125)
!10365 = !DILocation(line: 0, scope: !10359)
!10366 = !DILocation(line: 211, column: 2, scope: !10359)
!10367 = !DILocation(line: 213, column: 36, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10359, file: !829, line: 211, column: 19)
!10369 = !DILocation(line: 213, column: 3, scope: !10368)
!10370 = !DILocation(line: 214, column: 3, scope: !10368)
!10371 = !DILocation(line: 215, column: 3, scope: !10368)
!10372 = !DILocation(line: 217, column: 35, scope: !10368)
!10373 = !DILocation(line: 217, column: 3, scope: !10368)
!10374 = !DILocation(line: 218, column: 3, scope: !10368)
!10375 = !DILocation(line: 219, column: 3, scope: !10368)
!10376 = !DILocation(line: 221, column: 36, scope: !10368)
!10377 = !DILocation(line: 221, column: 3, scope: !10368)
!10378 = !DILocation(line: 222, column: 3, scope: !10368)
!10379 = !DILocation(line: 223, column: 3, scope: !10368)
!10380 = !DILocation(line: 225, column: 35, scope: !10368)
!10381 = !DILocation(line: 225, column: 3, scope: !10368)
!10382 = !DILocation(line: 226, column: 3, scope: !10368)
!10383 = !DILocation(line: 227, column: 3, scope: !10368)
!10384 = !DILocation(line: 232, column: 1, scope: !10359)
!10385 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10222, file: !10222, line: 573, type: !8420, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10386)
!10386 = !{!10387}
!10387 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10385, file: !10222, line: 573, type: !208)
!10388 = !DILocation(line: 0, scope: !10385)
!10389 = !DILocation(line: 575, column: 3, scope: !10385)
!10390 = !DILocation(line: 577, column: 1, scope: !10385)
!10391 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10222, file: !10222, line: 703, type: !8420, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10392)
!10392 = !{!10393}
!10393 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10391, file: !10222, line: 703, type: !208)
!10394 = !DILocation(line: 0, scope: !10391)
!10395 = !DILocation(line: 705, column: 3, scope: !10391)
!10396 = !DILocation(line: 706, column: 1, scope: !10391)
!10397 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10222, file: !10222, line: 529, type: !8420, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10398)
!10398 = !{!10399}
!10399 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10397, file: !10222, line: 529, type: !208)
!10400 = !DILocation(line: 0, scope: !10397)
!10401 = !DILocation(line: 531, column: 3, scope: !10397)
!10402 = !DILocation(line: 533, column: 1, scope: !10397)
!10403 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10222, file: !10222, line: 661, type: !8420, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10404)
!10404 = !{!10405}
!10405 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10403, file: !10222, line: 661, type: !208)
!10406 = !DILocation(line: 0, scope: !10403)
!10407 = !DILocation(line: 663, column: 3, scope: !10403)
!10408 = !DILocation(line: 664, column: 1, scope: !10403)
!10409 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !829, file: !829, line: 433, type: !10410, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10412)
!10410 = !DISubroutineType(types: !10411)
!10411 = !{!125, !125, !869, !124}
!10412 = !{!10413, !10414, !10415, !10416, !10418}
!10413 = !DILocalVariable(name: "line", arg: 1, scope: !10409, file: !829, line: 433, type: !125)
!10414 = !DILocalVariable(name: "cb", arg: 2, scope: !10409, file: !829, line: 433, type: !869)
!10415 = !DILocalVariable(name: "arg", arg: 3, scope: !10409, file: !829, line: 433, type: !124)
!10416 = !DILocalVariable(name: "dev", scope: !10409, file: !829, line: 435, type: !10417)
!10417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!10418 = !DILocalVariable(name: "data", scope: !10409, file: !829, line: 436, type: !10176)
!10419 = !DILocation(line: 0, scope: !10409)
!10420 = !DILocation(line: 438, column: 21, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10409, file: !829, line: 438, column: 6)
!10422 = !DILocation(line: 438, column: 6, scope: !10421)
!10423 = !DILocation(line: 438, column: 6, scope: !10409)
!10424 = !DILocation(line: 442, column: 20, scope: !10409)
!10425 = !DILocation(line: 443, column: 17, scope: !10409)
!10426 = !DILocation(line: 443, column: 22, scope: !10409)
!10427 = !DILocation(line: 445, column: 2, scope: !10409)
!10428 = !DILocation(line: 446, column: 1, scope: !10409)
!10429 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !829, file: !829, line: 448, type: !10211, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10430)
!10430 = !{!10431, !10432, !10433}
!10431 = !DILocalVariable(name: "line", arg: 1, scope: !10429, file: !829, line: 448, type: !125)
!10432 = !DILocalVariable(name: "dev", scope: !10429, file: !829, line: 450, type: !10417)
!10433 = !DILocalVariable(name: "data", scope: !10429, file: !829, line: 451, type: !10176)
!10434 = !DILocation(line: 0, scope: !10429)
!10435 = !DILocation(line: 453, column: 17, scope: !10429)
!10436 = !DILocation(line: 453, column: 20, scope: !10429)
!10437 = !DILocation(line: 454, column: 17, scope: !10429)
!10438 = !DILocation(line: 454, column: 22, scope: !10429)
!10439 = !DILocation(line: 455, column: 1, scope: !10429)
!10440 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1018, file: !1018, line: 183, type: !1056, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10441)
!10441 = !{!10442, !10443, !10444, !10445, !10446}
!10442 = !DILocalVariable(name: "dev", arg: 1, scope: !10440, file: !1018, line: 183, type: !1047)
!10443 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10440, file: !1018, line: 184, type: !1058)
!10444 = !DILocalVariable(name: "pclken", scope: !10440, file: !1018, line: 186, type: !1008)
!10445 = !DILocalVariable(name: "reg", scope: !10440, file: !1018, line: 187, type: !1783)
!10446 = !DILocalVariable(name: "reg_val", scope: !10440, file: !1018, line: 188, type: !208)
!10447 = !DILocation(line: 0, scope: !10440)
!10448 = !DILocation(line: 192, column: 6, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10440, file: !1018, line: 192, column: 6)
!10450 = !DILocation(line: 192, column: 6, scope: !10440)
!10451 = !DILocation(line: 197, column: 52, scope: !10440)
!10452 = !DILocation(line: 197, column: 8, scope: !10440)
!10453 = !DILocation(line: 198, column: 12, scope: !10440)
!10454 = !DILocation(line: 199, column: 21, scope: !10440)
!10455 = !DILocation(line: 199, column: 10, scope: !10440)
!10456 = !DILocation(line: 200, column: 7, scope: !10440)
!10457 = !DILocation(line: 202, column: 2, scope: !10440)
!10458 = !DILocation(line: 203, column: 1, scope: !10440)
!10459 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1018, file: !1018, line: 205, type: !1056, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10460)
!10460 = !{!10461, !10462, !10463, !10464, !10465}
!10461 = !DILocalVariable(name: "dev", arg: 1, scope: !10459, file: !1018, line: 205, type: !1047)
!10462 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10459, file: !1018, line: 206, type: !1058)
!10463 = !DILocalVariable(name: "pclken", scope: !10459, file: !1018, line: 208, type: !1008)
!10464 = !DILocalVariable(name: "reg", scope: !10459, file: !1018, line: 209, type: !1783)
!10465 = !DILocalVariable(name: "reg_val", scope: !10459, file: !1018, line: 210, type: !208)
!10466 = !DILocation(line: 0, scope: !10459)
!10467 = !DILocation(line: 214, column: 6, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10459, file: !1018, line: 214, column: 6)
!10469 = !DILocation(line: 214, column: 6, scope: !10459)
!10470 = !DILocation(line: 219, column: 52, scope: !10459)
!10471 = !DILocation(line: 219, column: 8, scope: !10459)
!10472 = !DILocation(line: 220, column: 12, scope: !10459)
!10473 = !DILocation(line: 221, column: 22, scope: !10459)
!10474 = !DILocation(line: 221, column: 13, scope: !10459)
!10475 = !DILocation(line: 221, column: 10, scope: !10459)
!10476 = !DILocation(line: 222, column: 7, scope: !10459)
!10477 = !DILocation(line: 224, column: 2, scope: !10459)
!10478 = !DILocation(line: 225, column: 1, scope: !10459)
!10479 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1018, file: !1018, line: 262, type: !1072, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10480)
!10480 = !{!10481, !10482, !10483, !10484, !10485, !10486, !10487, !10488}
!10481 = !DILocalVariable(name: "clock", arg: 1, scope: !10479, file: !1018, line: 262, type: !1047)
!10482 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10479, file: !1018, line: 263, type: !1058)
!10483 = !DILocalVariable(name: "rate", arg: 3, scope: !10479, file: !1018, line: 264, type: !1014)
!10484 = !DILocalVariable(name: "pclken", scope: !10479, file: !1018, line: 266, type: !1008)
!10485 = !DILocalVariable(name: "ahb_clock", scope: !10479, file: !1018, line: 273, type: !208)
!10486 = !DILocalVariable(name: "apb1_clock", scope: !10479, file: !1018, line: 274, type: !208)
!10487 = !DILocalVariable(name: "apb2_clock", scope: !10479, file: !1018, line: 276, type: !208)
!10488 = !DILocalVariable(name: "ahb3_clock", scope: !10479, file: !1018, line: 286, type: !208)
!10489 = !DILocation(line: 0, scope: !10479)
!10490 = !DILocation(line: 273, column: 23, scope: !10479)
!10491 = !DILocation(line: 299, column: 18, scope: !10479)
!10492 = !DILocation(line: 299, column: 2, scope: !10479)
!10493 = !DILocation(line: 274, column: 24, scope: !10479)
!10494 = !DILocation(line: 319, column: 3, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10479, file: !1018, line: 299, column: 23)
!10496 = !DILocation(line: 276, column: 24, scope: !10479)
!10497 = !DILocation(line: 323, column: 3, scope: !10495)
!10498 = !DILocation(line: 346, column: 33, scope: !10495)
!10499 = !DILocation(line: 346, column: 11, scope: !10495)
!10500 = !DILocation(line: 350, column: 3, scope: !10495)
!10501 = !DILocation(line: 354, column: 33, scope: !10495)
!10502 = !DILocation(line: 354, column: 11, scope: !10495)
!10503 = !DILocation(line: 358, column: 3, scope: !10495)
!10504 = !DILocation(line: 374, column: 3, scope: !10495)
!10505 = !DILocation(line: 379, column: 3, scope: !10495)
!10506 = !DILocation(line: 0, scope: !10495)
!10507 = !DILocation(line: 396, column: 1, scope: !10479)
!10508 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1018, file: !1018, line: 227, type: !1088, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10509)
!10509 = !{!10510, !10511, !10512, !10513, !10514, !10515, !10516, !10517}
!10510 = !DILocalVariable(name: "dev", arg: 1, scope: !10508, file: !1018, line: 227, type: !1047)
!10511 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10508, file: !1018, line: 228, type: !1058)
!10512 = !DILocalVariable(name: "data", arg: 3, scope: !10508, file: !1018, line: 229, type: !124)
!10513 = !DILocalVariable(name: "pclken", scope: !10508, file: !1018, line: 233, type: !1008)
!10514 = !DILocalVariable(name: "reg", scope: !10508, file: !1018, line: 234, type: !1783)
!10515 = !DILocalVariable(name: "reg_val", scope: !10508, file: !1018, line: 235, type: !208)
!10516 = !DILocalVariable(name: "dt_val", scope: !10508, file: !1018, line: 235, type: !208)
!10517 = !DILocalVariable(name: "err", scope: !10508, file: !1018, line: 236, type: !125)
!10518 = !DILocation(line: 0, scope: !10508)
!10519 = !DILocation(line: 241, column: 30, scope: !10508)
!10520 = !DILocation(line: 241, column: 8, scope: !10508)
!10521 = !DILocation(line: 242, column: 10, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10508, file: !1018, line: 242, column: 6)
!10523 = !DILocation(line: 242, column: 6, scope: !10508)
!10524 = !DILocation(line: 247, column: 11, scope: !10508)
!10525 = !DILocation(line: 248, column: 6, scope: !10508)
!10526 = !DILocation(line: 247, column: 44, scope: !10508)
!10527 = !DILocation(line: 250, column: 6, scope: !10508)
!10528 = !DILocation(line: 249, column: 52, scope: !10508)
!10529 = !DILocation(line: 249, column: 8, scope: !10508)
!10530 = !DILocation(line: 251, column: 12, scope: !10508)
!10531 = !DILocation(line: 252, column: 10, scope: !10508)
!10532 = !DILocation(line: 253, column: 7, scope: !10508)
!10533 = !DILocation(line: 255, column: 2, scope: !10508)
!10534 = !DILocation(line: 260, column: 1, scope: !10508)
!10535 = distinct !DISubprogram(name: "enabled_clock", scope: !1018, file: !1018, line: 100, type: !10536, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10538)
!10536 = !DISubroutineType(types: !10537)
!10537 = !{!125, !208}
!10538 = !{!10539, !10540}
!10539 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10535, file: !1018, line: 100, type: !208)
!10540 = !DILocalVariable(name: "r", scope: !10535, file: !1018, line: 102, type: !125)
!10541 = !DILocation(line: 0, scope: !10535)
!10542 = !DILocation(line: 104, column: 2, scope: !10535)
!10543 = !DILocation(line: 180, column: 2, scope: !10535)
!10544 = !DILocation(line: 181, column: 1, scope: !10535)
!10545 = distinct !DISubprogram(name: "get_bus_clock", scope: !1018, file: !1018, line: 79, type: !10546, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10548)
!10546 = !DISubroutineType(types: !10547)
!10547 = !{!208, !208, !208}
!10548 = !{!10549, !10550}
!10549 = !DILocalVariable(name: "clock", arg: 1, scope: !10545, file: !1018, line: 79, type: !208)
!10550 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10545, file: !1018, line: 79, type: !208)
!10551 = !DILocation(line: 0, scope: !10545)
!10552 = !DILocation(line: 81, column: 15, scope: !10545)
!10553 = !DILocation(line: 81, column: 2, scope: !10545)
!10554 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1018, file: !1018, line: 68, type: !10555, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10557)
!10555 = !DISubroutineType(types: !10556)
!10556 = !{!208, !208, !125, !125, !125}
!10557 = !{!10558, !10559, !10560, !10561}
!10558 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10554, file: !1018, line: 68, type: !208)
!10559 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10554, file: !1018, line: 69, type: !125)
!10560 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10554, file: !1018, line: 70, type: !125)
!10561 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10554, file: !1018, line: 71, type: !125)
!10562 = !DILocation(line: 0, scope: !10554)
!10563 = !DILocation(line: 75, column: 22, scope: !10554)
!10564 = !DILocation(line: 76, column: 13, scope: !10554)
!10565 = !DILocation(line: 75, column: 34, scope: !10554)
!10566 = !DILocation(line: 75, column: 2, scope: !10554)
!10567 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1018, file: !1018, line: 641, type: !1045, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10568)
!10568 = !{!10569, !10570, !10571}
!10569 = !DILocalVariable(name: "dev", arg: 1, scope: !10567, file: !1018, line: 641, type: !1047)
!10570 = !DILocalVariable(name: "old_flash_freq", scope: !10567, file: !1018, line: 664, type: !208)
!10571 = !DILocalVariable(name: "new_flash_freq", scope: !10567, file: !1018, line: 665, type: !208)
!10572 = !DILocation(line: 0, scope: !10567)
!10573 = !DILocation(line: 646, column: 2, scope: !10567)
!10574 = !DILocation(line: 667, column: 19, scope: !10567)
!10575 = !DILocation(line: 674, column: 21, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10567, file: !1018, line: 674, column: 6)
!10577 = !DILocation(line: 674, column: 6, scope: !10567)
!10578 = !DILocation(line: 675, column: 3, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10576, file: !1018, line: 674, column: 59)
!10580 = !DILocation(line: 676, column: 2, scope: !10579)
!10581 = !DILocation(line: 680, column: 2, scope: !10567)
!10582 = !DILocation(line: 683, column: 2, scope: !10567)
!10583 = !DILocation(line: 690, column: 3, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10585, file: !1018, line: 689, column: 9)
!10585 = distinct !DILexicalBlock(scope: !10567, file: !1018, line: 685, column: 6)
!10586 = !DILocation(line: 695, column: 2, scope: !10567)
!10587 = !DILocation(line: 696, column: 2, scope: !10567)
!10588 = !DILocation(line: 696, column: 9, scope: !10567)
!10589 = !DILocation(line: 696, column: 34, scope: !10567)
!10590 = distinct !{!10590, !10587, !10591}
!10591 = !DILocation(line: 697, column: 2, scope: !10567)
!10592 = !DILocation(line: 720, column: 21, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10567, file: !1018, line: 720, column: 6)
!10594 = !DILocation(line: 720, column: 6, scope: !10567)
!10595 = !DILocation(line: 721, column: 3, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10593, file: !1018, line: 720, column: 60)
!10597 = !DILocation(line: 722, column: 2, scope: !10596)
!10598 = !DILocation(line: 725, column: 18, scope: !10567)
!10599 = !DILocation(line: 728, column: 2, scope: !10567)
!10600 = !DILocation(line: 730, column: 2, scope: !10567)
!10601 = !DILocation(line: 745, column: 2, scope: !10567)
!10602 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10603, file: !10603, line: 3275, type: !8410, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10603 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10604 = !DILocation(line: 3277, column: 21, scope: !10602)
!10605 = !DILocation(line: 3277, column: 3, scope: !10602)
!10606 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1018, file: !1018, line: 507, type: !3326, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10607 = !DILocation(line: 516, column: 4, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10609, file: !1018, line: 515, column: 10)
!10609 = distinct !DILexicalBlock(scope: !10610, file: !1018, line: 513, column: 7)
!10610 = distinct !DILexicalBlock(scope: !10611, file: !1018, line: 510, column: 37)
!10611 = distinct !DILexicalBlock(scope: !10606, file: !1018, line: 510, column: 6)
!10612 = !DILocation(line: 526, column: 3, scope: !10610)
!10613 = !DILocation(line: 527, column: 3, scope: !10610)
!10614 = !DILocation(line: 527, column: 10, scope: !10610)
!10615 = !DILocation(line: 527, column: 31, scope: !10610)
!10616 = distinct !{!10616, !10613, !10617}
!10617 = !DILocation(line: 529, column: 3, scope: !10610)
!10618 = !DILocation(line: 583, column: 3, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !1018, line: 577, column: 37)
!10620 = distinct !DILexicalBlock(scope: !10606, file: !1018, line: 577, column: 6)
!10621 = !DILocation(line: 584, column: 3, scope: !10619)
!10622 = !DILocation(line: 584, column: 10, scope: !10619)
!10623 = !DILocation(line: 584, column: 31, scope: !10619)
!10624 = distinct !{!10624, !10621, !10625}
!10625 = !DILocation(line: 585, column: 3, scope: !10619)
!10626 = !DILocation(line: 627, column: 1, scope: !10606)
!10627 = distinct !DISubprogram(name: "set_up_plls", scope: !1018, file: !1018, line: 448, type: !3326, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10628 = !DILocation(line: 460, column: 6, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10627, file: !1018, line: 460, column: 6)
!10630 = !DILocation(line: 460, column: 31, scope: !10629)
!10631 = !DILocation(line: 460, column: 6, scope: !10627)
!10632 = !DILocation(line: 461, column: 3, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10629, file: !1018, line: 460, column: 67)
!10634 = !DILocation(line: 462, column: 3, scope: !10633)
!10635 = !DILocation(line: 463, column: 2, scope: !10633)
!10636 = !DILocation(line: 464, column: 2, scope: !10627)
!10637 = !DILocation(line: 488, column: 2, scope: !10627)
!10638 = !DILocation(line: 492, column: 2, scope: !10627)
!10639 = !DILocation(line: 496, column: 2, scope: !10627)
!10640 = !DILocation(line: 499, column: 2, scope: !10627)
!10641 = !DILocation(line: 500, column: 2, scope: !10627)
!10642 = !DILocation(line: 500, column: 9, scope: !10627)
!10643 = !DILocation(line: 500, column: 30, scope: !10627)
!10644 = distinct !{!10644, !10641, !10645}
!10645 = !DILocation(line: 502, column: 2, scope: !10627)
!10646 = !DILocation(line: 505, column: 1, scope: !10627)
!10647 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10603, file: !10603, line: 3224, type: !8420, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10648)
!10648 = !{!10649}
!10649 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10647, file: !10603, line: 3224, type: !208)
!10650 = !DILocation(line: 0, scope: !10647)
!10651 = !DILocation(line: 3226, column: 3, scope: !10647)
!10652 = !DILocation(line: 3227, column: 1, scope: !10647)
!10653 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10603, file: !10603, line: 3188, type: !8420, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10654)
!10654 = !{!10655}
!10655 = !DILocalVariable(name: "Source", arg: 1, scope: !10653, file: !10603, line: 3188, type: !208)
!10656 = !DILocation(line: 0, scope: !10653)
!10657 = !DILocation(line: 3190, column: 3, scope: !10653)
!10658 = !DILocation(line: 3191, column: 1, scope: !10653)
!10659 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10603, file: !10603, line: 3204, type: !8410, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10660 = !DILocation(line: 3206, column: 21, scope: !10659)
!10661 = !DILocation(line: 3206, column: 3, scope: !10659)
!10662 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10603, file: !10603, line: 3240, type: !8420, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10663)
!10663 = !{!10664}
!10664 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10662, file: !10603, line: 3240, type: !208)
!10665 = !DILocation(line: 0, scope: !10662)
!10666 = !DILocation(line: 3242, column: 3, scope: !10662)
!10667 = !DILocation(line: 3243, column: 1, scope: !10662)
!10668 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10603, file: !10603, line: 3256, type: !8420, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !10669)
!10669 = !{!10670}
!10670 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10668, file: !10603, line: 3256, type: !208)
!10671 = !DILocation(line: 0, scope: !10668)
!10672 = !DILocation(line: 3258, column: 3, scope: !10668)
!10673 = !DILocation(line: 3259, column: 1, scope: !10668)
!10674 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1018, file: !1018, line: 409, type: !3326, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10675 = !DILocation(line: 412, column: 6, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10674, file: !1018, line: 412, column: 6)
!10677 = !DILocation(line: 412, column: 27, scope: !10676)
!10678 = !DILocation(line: 412, column: 6, scope: !10674)
!10679 = !DILocation(line: 414, column: 3, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10676, file: !1018, line: 412, column: 33)
!10681 = !DILocation(line: 415, column: 3, scope: !10680)
!10682 = !DILocation(line: 415, column: 10, scope: !10680)
!10683 = !DILocation(line: 415, column: 31, scope: !10680)
!10684 = distinct !{!10684, !10681, !10685}
!10685 = !DILocation(line: 417, column: 3, scope: !10680)
!10686 = !DILocation(line: 421, column: 2, scope: !10674)
!10687 = !DILocation(line: 422, column: 2, scope: !10674)
!10688 = !DILocation(line: 422, column: 9, scope: !10674)
!10689 = !DILocation(line: 422, column: 34, scope: !10674)
!10690 = distinct !{!10690, !10687, !10691}
!10691 = !DILocation(line: 423, column: 2, scope: !10674)
!10692 = !DILocation(line: 424, column: 1, scope: !10674)
!10693 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10603, file: !10603, line: 4195, type: !3326, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10694 = !DILocation(line: 4197, column: 3, scope: !10693)
!10695 = !DILocation(line: 4198, column: 1, scope: !10693)
!10696 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10603, file: !10603, line: 4184, type: !3326, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10697 = !DILocation(line: 4186, column: 3, scope: !10696)
!10698 = !DILocation(line: 4187, column: 1, scope: !10696)
!10699 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10603, file: !10603, line: 4205, type: !8410, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10700 = !DILocation(line: 4207, column: 11, scope: !10699)
!10701 = !DILocation(line: 4207, column: 44, scope: !10699)
!10702 = !DILocation(line: 4207, column: 3, scope: !10699)
!10703 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10603, file: !10603, line: 3007, type: !8410, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10704 = !DILocation(line: 3009, column: 11, scope: !10703)
!10705 = !DILocation(line: 3009, column: 44, scope: !10703)
!10706 = !DILocation(line: 3009, column: 3, scope: !10703)
!10707 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10603, file: !10603, line: 2987, type: !3326, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10708 = !DILocation(line: 2989, column: 3, scope: !10707)
!10709 = !DILocation(line: 2990, column: 1, scope: !10707)
!10710 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10603, file: !10603, line: 2939, type: !3326, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10711 = !DILocation(line: 2941, column: 3, scope: !10710)
!10712 = !DILocation(line: 2942, column: 1, scope: !10710)
!10713 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10603, file: !10603, line: 2949, type: !3326, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10714 = !DILocation(line: 2951, column: 3, scope: !10713)
!10715 = !DILocation(line: 2952, column: 1, scope: !10713)
!10716 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10603, file: !10603, line: 2969, type: !8410, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10717 = !DILocation(line: 2971, column: 11, scope: !10716)
!10718 = !DILocation(line: 2971, column: 44, scope: !10716)
!10719 = !DILocation(line: 2971, column: 3, scope: !10716)
!10720 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10603, file: !10603, line: 3143, type: !3326, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10721 = !DILocation(line: 3145, column: 3, scope: !10720)
!10722 = !DILocation(line: 3146, column: 1, scope: !10720)
!10723 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10603, file: !10603, line: 3163, type: !8410, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !954, retainedNodes: !639)
!10724 = !DILocation(line: 3165, column: 11, scope: !10723)
!10725 = !DILocation(line: 3165, column: 46, scope: !10723)
!10726 = !DILocation(line: 3165, column: 3, scope: !10723)
!10727 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10728, file: !10728, line: 40, type: !8410, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !639)
!10728 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10729 = !DILocation(line: 45, column: 3, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10731, file: !10728, line: 44, column: 44)
!10731 = distinct !DILexicalBlock(scope: !10732, file: !10728, line: 44, column: 13)
!10732 = distinct !DILexicalBlock(scope: !10727, file: !10728, line: 42, column: 6)
!10733 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10728, file: !10728, line: 56, type: !3326, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !639)
!10734 = !DILocation(line: 58, column: 2, scope: !10733)
!10735 = !DILocation(line: 62, column: 1, scope: !10733)
!10736 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10603, file: !10603, line: 4304, type: !10737, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !10739)
!10737 = !DISubroutineType(types: !10738)
!10738 = !{null, !208, !208, !208, !208}
!10739 = !{!10740, !10741, !10742, !10743}
!10740 = !DILocalVariable(name: "Source", arg: 1, scope: !10736, file: !10603, line: 4304, type: !208)
!10741 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10736, file: !10603, line: 4304, type: !208)
!10742 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10736, file: !10603, line: 4304, type: !208)
!10743 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10736, file: !10603, line: 4304, type: !208)
!10744 = !DILocation(line: 0, scope: !10736)
!10745 = !DILocation(line: 4306, column: 3, scope: !10736)
!10746 = !DILocation(line: 4308, column: 3, scope: !10736)
!10747 = !DILocation(line: 4312, column: 1, scope: !10736)
!10748 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10728, file: !10728, line: 69, type: !3326, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !639)
!10749 = !DILocation(line: 72, column: 2, scope: !10748)
!10750 = !DILocation(line: 73, column: 1, scope: !10748)
!10751 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10752, file: !10752, line: 1185, type: !8420, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !10753)
!10752 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10753 = !{!10754, !10755}
!10754 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10751, file: !10752, line: 1185, type: !208)
!10755 = !DILocalVariable(name: "tmpreg", scope: !10751, file: !10752, line: 1187, type: !423)
!10756 = !DILocation(line: 0, scope: !10751)
!10757 = !DILocation(line: 1187, column: 3, scope: !10751)
!10758 = !DILocation(line: 1187, column: 17, scope: !10751)
!10759 = !DILocation(line: 1188, column: 3, scope: !10751)
!10760 = !DILocation(line: 1190, column: 12, scope: !10751)
!10761 = !DILocation(line: 1190, column: 10, scope: !10751)
!10762 = !DILocation(line: 1191, column: 9, scope: !10751)
!10763 = !DILocation(line: 1192, column: 1, scope: !10751)
!10764 = distinct !DISubprogram(name: "uart_console_init", scope: !1149, file: !1149, line: 588, type: !1126, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !10765)
!10765 = !{!10766}
!10766 = !DILocalVariable(name: "arg", arg: 1, scope: !10764, file: !1149, line: 588, type: !1104)
!10767 = !DILocation(line: 0, scope: !10764)
!10768 = !DILocation(line: 593, column: 7, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10764, file: !1149, line: 593, column: 6)
!10770 = !DILocation(line: 593, column: 6, scope: !10764)
!10771 = !DILocation(line: 597, column: 2, scope: !10764)
!10772 = !DILocation(line: 599, column: 2, scope: !10764)
!10773 = !DILocation(line: 600, column: 1, scope: !10764)
!10774 = distinct !DISubprogram(name: "device_is_ready", scope: !4231, file: !4231, line: 47, type: !10775, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !10777)
!10775 = !DISubroutineType(types: !10776)
!10776 = !{!153, !1104}
!10777 = !{!10778}
!10778 = !DILocalVariable(name: "dev", arg: 1, scope: !10774, file: !4231, line: 47, type: !1104)
!10779 = !DILocation(line: 0, scope: !10774)
!10780 = !DILocation(line: 55, column: 2, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10774, file: !4231, line: 55, column: 2)
!10782 = !{i64 2154366326}
!10783 = !DILocation(line: 56, column: 9, scope: !10774)
!10784 = !DILocation(line: 56, column: 2, scope: !10774)
!10785 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1149, file: !1149, line: 573, type: !3326, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !639)
!10786 = !DILocation(line: 576, column: 2, scope: !10785)
!10787 = !DILocation(line: 579, column: 2, scope: !10785)
!10788 = !DILocation(line: 581, column: 1, scope: !10785)
!10789 = distinct !DISubprogram(name: "console_out", scope: !1149, file: !1149, line: 77, type: !410, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !10790)
!10790 = !{!10791}
!10791 = !DILocalVariable(name: "c", arg: 1, scope: !10789, file: !1149, line: 77, type: !125)
!10792 = !DILocation(line: 0, scope: !10789)
!10793 = !DILocation(line: 89, column: 11, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10789, file: !1149, line: 89, column: 6)
!10795 = !DILocation(line: 89, column: 6, scope: !10789)
!10796 = !DILocation(line: 90, column: 3, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10794, file: !1149, line: 89, column: 17)
!10798 = !DILocation(line: 91, column: 2, scope: !10797)
!10799 = !DILocation(line: 92, column: 34, scope: !10789)
!10800 = !DILocation(line: 92, column: 2, scope: !10789)
!10801 = !DILocation(line: 94, column: 2, scope: !10789)
!10802 = distinct !DISubprogram(name: "uart_poll_out", scope: !10803, file: !10803, line: 95, type: !1122, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !10804)
!10803 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/crypto")
!10804 = !{!10805, !10806}
!10805 = !DILocalVariable(name: "dev", arg: 1, scope: !10802, file: !10803, line: 95, type: !1104)
!10806 = !DILocalVariable(name: "out_char", arg: 2, scope: !10802, file: !10803, line: 95, type: !151)
!10807 = !DILocation(line: 0, scope: !10802)
!10808 = !DILocation(line: 105, column: 2, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10802, file: !10803, line: 105, column: 2)
!10810 = !{i64 2154449717}
!10811 = !DILocation(line: 106, column: 2, scope: !10802)
!10812 = !DILocation(line: 107, column: 1, scope: !10802)
!10813 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1098, file: !1098, line: 574, type: !1122, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !10814)
!10814 = !{!10815, !10816, !10817}
!10815 = !DILocalVariable(name: "dev", arg: 1, scope: !10813, file: !1098, line: 574, type: !1104)
!10816 = !DILocalVariable(name: "out_char", arg: 2, scope: !10813, file: !1098, line: 575, type: !151)
!10817 = !DILocalVariable(name: "api", scope: !10813, file: !1098, line: 577, type: !1095)
!10818 = !DILocation(line: 0, scope: !10813)
!10819 = !DILocation(line: 578, column: 40, scope: !10813)
!10820 = !DILocation(line: 580, column: 7, scope: !10813)
!10821 = !DILocation(line: 580, column: 2, scope: !10813)
!10822 = !DILocation(line: 581, column: 1, scope: !10813)
!10823 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !10775, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !10824)
!10824 = !{!10825}
!10825 = !DILocalVariable(name: "dev", arg: 1, scope: !10823, file: !137, line: 730, type: !1104)
!10826 = !DILocation(line: 0, scope: !10823)
!10827 = !DILocation(line: 732, column: 9, scope: !10823)
!10828 = !DILocation(line: 732, column: 2, scope: !10823)
!10829 = distinct !DISubprogram(name: "uart_register_input", scope: !1149, file: !1149, line: 560, type: !10830, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1092, retainedNodes: !10875)
!10830 = !DISubroutineType(types: !10831)
!10831 = !{null, !10832, !10832, !10872}
!10832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10833, size: 32)
!10833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !624, line: 2208, size: 128, elements: !10834)
!10834 = !{!10835}
!10835 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10833, file: !624, line: 2209, baseType: !10836, size: 128)
!10836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !624, line: 1709, size: 128, elements: !10837)
!10837 = !{!10838, !10851, !10853}
!10838 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10836, file: !624, line: 1710, baseType: !10839, size: 64)
!10839 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10840, line: 46, baseType: !10841)
!10840 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10840, line: 41, size: 64, elements: !10842)
!10842 = !{!10843, !10850}
!10843 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10841, file: !10840, line: 42, baseType: !10844, size: 32)
!10844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10845, size: 32)
!10845 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10840, line: 39, baseType: !10846)
!10846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10840, line: 35, size: 32, elements: !10847)
!10847 = !{!10848}
!10848 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10846, file: !10840, line: 36, baseType: !10849, size: 32)
!10849 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10840, line: 32, baseType: !208)
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10841, file: !10840, line: 43, baseType: !10844, size: 32, offset: 32)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10836, file: !624, line: 1711, baseType: !10852, offset: 64)
!10852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!10853 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10836, file: !624, line: 1712, baseType: !10854, size: 64, offset: 64)
!10854 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !10855)
!10855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !10856)
!10856 = !{!10857}
!10857 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10855, file: !567, line: 232, baseType: !10858, size: 64)
!10858 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !10859)
!10859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !10860)
!10860 = !{!10861, !10867}
!10861 = !DIDerivedType(tag: DW_TAG_member, scope: !10859, file: !541, line: 38, baseType: !10862, size: 32)
!10862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10859, file: !541, line: 38, size: 32, elements: !10863)
!10863 = !{!10864, !10866}
!10864 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10862, file: !541, line: 39, baseType: !10865, size: 32)
!10865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10859, size: 32)
!10866 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10862, file: !541, line: 40, baseType: !10865, size: 32)
!10867 = !DIDerivedType(tag: DW_TAG_member, scope: !10859, file: !541, line: 42, baseType: !10868, size: 32, offset: 32)
!10868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10859, file: !541, line: 42, size: 32, elements: !10869)
!10869 = !{!10870, !10871}
!10870 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10868, file: !541, line: 43, baseType: !10865, size: 32)
!10871 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10868, file: !541, line: 44, baseType: !10865, size: 32)
!10872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10873, size: 32)
!10873 = !DISubroutineType(types: !10874)
!10874 = !{!150, !393, !150}
!10875 = !{!10876, !10877, !10878}
!10876 = !DILocalVariable(name: "avail", arg: 1, scope: !10829, file: !1149, line: 560, type: !10832)
!10877 = !DILocalVariable(name: "lines", arg: 2, scope: !10829, file: !1149, line: 560, type: !10832)
!10878 = !DILocalVariable(name: "completion", arg: 3, scope: !10829, file: !1149, line: 561, type: !10872)
!10879 = !DILocation(line: 0, scope: !10829)
!10880 = !DILocation(line: 566, column: 1, scope: !10829)
!10881 = distinct !DISubprogram(name: "tc_shim_init", scope: !1164, file: !1164, line: 305, type: !1188, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10882)
!10882 = !{!10883, !10884}
!10883 = !DILocalVariable(name: "dev", arg: 1, scope: !10881, file: !1164, line: 305, type: !1190)
!10884 = !DILocalVariable(name: "i", scope: !10881, file: !1164, line: 307, type: !125)
!10885 = !DILocation(line: 0, scope: !10881)
!10886 = !DILocation(line: 311, column: 29, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10888, file: !1164, line: 310, column: 43)
!10888 = distinct !DILexicalBlock(scope: !10889, file: !1164, line: 310, column: 2)
!10889 = distinct !DILexicalBlock(scope: !10881, file: !1164, line: 310, column: 2)
!10890 = !DILocation(line: 314, column: 2, scope: !10881)
!10891 = distinct !DISubprogram(name: "tc_query_caps", scope: !1164, file: !1164, line: 289, type: !1188, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10892)
!10892 = !{!10893}
!10893 = !DILocalVariable(name: "dev", arg: 1, scope: !10891, file: !1164, line: 289, type: !1190)
!10894 = !DILocation(line: 0, scope: !10891)
!10895 = !DILocation(line: 291, column: 2, scope: !10891)
!10896 = distinct !DISubprogram(name: "tc_session_setup", scope: !1164, file: !1164, line: 193, type: !1201, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !10897)
!10897 = !{!10898, !10899, !10900, !10901, !10902, !10903, !10905}
!10898 = !DILocalVariable(name: "dev", arg: 1, scope: !10896, file: !1164, line: 193, type: !1190)
!10899 = !DILocalVariable(name: "ctx", arg: 2, scope: !10896, file: !1164, line: 193, type: !1203)
!10900 = !DILocalVariable(name: "algo", arg: 3, scope: !10896, file: !1164, line: 194, type: !39)
!10901 = !DILocalVariable(name: "mode", arg: 4, scope: !10896, file: !1164, line: 194, type: !30)
!10902 = !DILocalVariable(name: "op_type", arg: 5, scope: !10896, file: !1164, line: 195, type: !42)
!10903 = !DILocalVariable(name: "data", scope: !10896, file: !1164, line: 197, type: !10904)
!10904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!10905 = !DILocalVariable(name: "idx", scope: !10896, file: !1164, line: 198, type: !125)
!10906 = !DILocation(line: 0, scope: !10896)
!10907 = !DILocation(line: 203, column: 11, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10896, file: !1164, line: 203, column: 6)
!10909 = !DILocation(line: 203, column: 6, scope: !10896)
!10910 = !DILocation(line: 204, column: 3, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !1164, line: 204, column: 3)
!10912 = distinct !DILexicalBlock(scope: !10913, file: !1164, line: 204, column: 3)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !1164, line: 204, column: 3)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !1164, line: 204, column: 3)
!10915 = distinct !DILexicalBlock(scope: !10908, file: !1164, line: 203, column: 38)
!10916 = !DILocation(line: 205, column: 3, scope: !10915)
!10917 = !DILocation(line: 211, column: 13, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10896, file: !1164, line: 211, column: 6)
!10919 = !DILocation(line: 211, column: 19, scope: !10918)
!10920 = !DILocation(line: 211, column: 6, scope: !10896)
!10921 = !DILocation(line: 212, column: 3, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10923, file: !1164, line: 212, column: 3)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !1164, line: 212, column: 3)
!10924 = distinct !DILexicalBlock(scope: !10925, file: !1164, line: 212, column: 3)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !1164, line: 212, column: 3)
!10926 = distinct !DILexicalBlock(scope: !10918, file: !1164, line: 211, column: 36)
!10927 = !DILocation(line: 213, column: 3, scope: !10926)
!10928 = !DILocation(line: 216, column: 11, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10896, file: !1164, line: 216, column: 6)
!10930 = !DILocation(line: 216, column: 18, scope: !10929)
!10931 = !DILocation(line: 216, column: 6, scope: !10896)
!10932 = !DILocation(line: 218, column: 3, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10934, file: !1164, line: 218, column: 3)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !1164, line: 218, column: 3)
!10935 = distinct !DILexicalBlock(scope: !10936, file: !1164, line: 218, column: 3)
!10936 = distinct !DILexicalBlock(scope: !10937, file: !1164, line: 218, column: 3)
!10937 = distinct !DILexicalBlock(scope: !10929, file: !1164, line: 216, column: 38)
!10938 = !DILocation(line: 219, column: 3, scope: !10937)
!10939 = !DILocation(line: 222, column: 14, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10896, file: !1164, line: 222, column: 6)
!10941 = !DILocation(line: 222, column: 6, scope: !10896)
!10942 = !DILocation(line: 223, column: 3, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10940, file: !1164, line: 222, column: 43)
!10944 = !DILocation(line: 225, column: 13, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10943, file: !1164, line: 223, column: 17)
!10946 = !DILocation(line: 225, column: 29, scope: !10945)
!10947 = !DILocation(line: 226, column: 4, scope: !10945)
!10948 = !DILocation(line: 228, column: 34, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10945, file: !1164, line: 228, column: 8)
!10950 = !DILocation(line: 228, column: 42, scope: !10949)
!10951 = !DILocation(line: 228, column: 8, scope: !10945)
!10952 = !DILocation(line: 229, column: 5, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !1164, line: 229, column: 5)
!10954 = distinct !DILexicalBlock(scope: !10955, file: !1164, line: 229, column: 5)
!10955 = distinct !DILexicalBlock(scope: !10956, file: !1164, line: 229, column: 5)
!10956 = distinct !DILexicalBlock(scope: !10957, file: !1164, line: 229, column: 5)
!10957 = distinct !DILexicalBlock(scope: !10949, file: !1164, line: 228, column: 50)
!10958 = !DILocation(line: 231, column: 5, scope: !10957)
!10959 = !DILocation(line: 233, column: 13, scope: !10945)
!10960 = !DILocation(line: 233, column: 29, scope: !10945)
!10961 = !DILocation(line: 234, column: 4, scope: !10945)
!10962 = !DILocation(line: 236, column: 13, scope: !10945)
!10963 = !DILocation(line: 236, column: 29, scope: !10945)
!10964 = !DILocation(line: 237, column: 4, scope: !10945)
!10965 = !DILocation(line: 239, column: 4, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !1164, line: 239, column: 4)
!10967 = distinct !DILexicalBlock(scope: !10968, file: !1164, line: 239, column: 4)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !1164, line: 239, column: 4)
!10969 = distinct !DILexicalBlock(scope: !10945, file: !1164, line: 239, column: 4)
!10970 = !DILocation(line: 240, column: 4, scope: !10945)
!10971 = !DILocation(line: 243, column: 3, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10940, file: !1164, line: 242, column: 9)
!10973 = !DILocation(line: 245, column: 13, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10972, file: !1164, line: 243, column: 17)
!10975 = !DILocation(line: 245, column: 29, scope: !10974)
!10976 = !DILocation(line: 246, column: 4, scope: !10974)
!10977 = !DILocation(line: 249, column: 34, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10974, file: !1164, line: 249, column: 8)
!10979 = !DILocation(line: 249, column: 42, scope: !10978)
!10980 = !DILocation(line: 249, column: 8, scope: !10974)
!10981 = !DILocation(line: 250, column: 5, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10983, file: !1164, line: 250, column: 5)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !1164, line: 250, column: 5)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !1164, line: 250, column: 5)
!10985 = distinct !DILexicalBlock(scope: !10986, file: !1164, line: 250, column: 5)
!10986 = distinct !DILexicalBlock(scope: !10978, file: !1164, line: 249, column: 50)
!10987 = !DILocation(line: 252, column: 5, scope: !10986)
!10988 = !DILocation(line: 254, column: 13, scope: !10974)
!10989 = !DILocation(line: 254, column: 29, scope: !10974)
!10990 = !DILocation(line: 255, column: 4, scope: !10974)
!10991 = !DILocation(line: 257, column: 13, scope: !10974)
!10992 = !DILocation(line: 257, column: 29, scope: !10974)
!10993 = !DILocation(line: 258, column: 4, scope: !10974)
!10994 = !DILocation(line: 260, column: 4, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10996, file: !1164, line: 260, column: 4)
!10996 = distinct !DILexicalBlock(scope: !10997, file: !1164, line: 260, column: 4)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !1164, line: 260, column: 4)
!10998 = distinct !DILexicalBlock(scope: !10974, file: !1164, line: 260, column: 4)
!10999 = !DILocation(line: 261, column: 4, scope: !10974)
!11000 = !DILocation(line: 266, column: 11, scope: !10896)
!11001 = !DILocation(line: 266, column: 23, scope: !10896)
!11002 = !DILocation(line: 268, column: 8, scope: !10896)
!11003 = !DILocation(line: 269, column: 10, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !10896, file: !1164, line: 269, column: 6)
!11005 = !DILocation(line: 269, column: 6, scope: !10896)
!11006 = !DILocation(line: 270, column: 3, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11008, file: !1164, line: 270, column: 3)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !1164, line: 270, column: 3)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !1164, line: 270, column: 3)
!11010 = distinct !DILexicalBlock(scope: !11011, file: !1164, line: 270, column: 3)
!11011 = distinct !DILexicalBlock(scope: !11004, file: !1164, line: 269, column: 33)
!11012 = !DILocation(line: 271, column: 3, scope: !11011)
!11013 = !DILocation(line: 274, column: 10, scope: !10896)
!11014 = !DILocation(line: 276, column: 39, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !10896, file: !1164, line: 276, column: 6)
!11016 = !DILocation(line: 276, column: 61, scope: !11015)
!11017 = !DILocation(line: 276, column: 6, scope: !11015)
!11018 = !DILocation(line: 277, column: 5, scope: !11015)
!11019 = !DILocation(line: 276, column: 6, scope: !10896)
!11020 = !DILocation(line: 278, column: 3, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11022, file: !1164, line: 278, column: 3)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !1164, line: 278, column: 3)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !1164, line: 278, column: 3)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !1164, line: 278, column: 3)
!11025 = distinct !DILexicalBlock(scope: !11015, file: !1164, line: 277, column: 24)
!11026 = !DILocation(line: 279, column: 24, scope: !11025)
!11027 = !DILocation(line: 279, column: 31, scope: !11025)
!11028 = !DILocation(line: 281, column: 3, scope: !11025)
!11029 = !DILocation(line: 284, column: 7, scope: !10896)
!11030 = !DILocation(line: 284, column: 23, scope: !10896)
!11031 = !DILocation(line: 286, column: 2, scope: !10896)
!11032 = !DILocation(line: 287, column: 1, scope: !10896)
!11033 = distinct !DISubprogram(name: "tc_session_free", scope: !1164, file: !1164, line: 294, type: !1277, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !11034)
!11034 = !{!11035, !11036, !11037}
!11035 = !DILocalVariable(name: "dev", arg: 1, scope: !11033, file: !1164, line: 294, type: !1190)
!11036 = !DILocalVariable(name: "sessn", arg: 2, scope: !11033, file: !1164, line: 294, type: !1203)
!11037 = !DILocalVariable(name: "data", scope: !11033, file: !1164, line: 296, type: !10904)
!11038 = !DILocation(line: 0, scope: !11033)
!11039 = !DILocation(line: 296, column: 43, scope: !11033)
!11040 = !DILocation(line: 299, column: 8, scope: !11033)
!11041 = !DILocation(line: 300, column: 8, scope: !11033)
!11042 = !DILocation(line: 300, column: 15, scope: !11033)
!11043 = !DILocation(line: 302, column: 2, scope: !11033)
!11044 = distinct !DISubprogram(name: "do_cbc_encrypt", scope: !1164, file: !1164, line: 28, type: !1230, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !11045)
!11045 = !{!11046, !11047, !11048, !11049}
!11046 = !DILocalVariable(name: "ctx", arg: 1, scope: !11044, file: !1164, line: 28, type: !1203)
!11047 = !DILocalVariable(name: "op", arg: 2, scope: !11044, file: !1164, line: 28, type: !1218)
!11048 = !DILocalVariable(name: "iv", arg: 3, scope: !11044, file: !1164, line: 29, type: !184)
!11049 = !DILocalVariable(name: "data", scope: !11044, file: !1164, line: 31, type: !10904)
!11050 = !DILocation(line: 0, scope: !11044)
!11051 = !DILocation(line: 31, column: 41, scope: !11044)
!11052 = !DILocation(line: 33, column: 30, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11044, file: !1164, line: 33, column: 6)
!11054 = !DILocation(line: 34, column: 9, scope: !11053)
!11055 = !DILocation(line: 35, column: 9, scope: !11053)
!11056 = !DILocation(line: 35, column: 21, scope: !11053)
!11057 = !DILocation(line: 37, column: 12, scope: !11053)
!11058 = !DILocation(line: 33, column: 6, scope: !11053)
!11059 = !DILocation(line: 37, column: 25, scope: !11053)
!11060 = !DILocation(line: 33, column: 6, scope: !11044)
!11061 = !DILocation(line: 38, column: 3, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11063, file: !1164, line: 38, column: 3)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !1164, line: 38, column: 3)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !1164, line: 38, column: 3)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !1164, line: 38, column: 3)
!11066 = distinct !DILexicalBlock(scope: !11053, file: !1164, line: 37, column: 44)
!11067 = !DILocation(line: 39, column: 3, scope: !11066)
!11068 = !DILocation(line: 43, column: 20, scope: !11044)
!11069 = !DILocation(line: 43, column: 6, scope: !11044)
!11070 = !DILocation(line: 43, column: 14, scope: !11044)
!11071 = !DILocation(line: 45, column: 2, scope: !11044)
!11072 = !DILocation(line: 46, column: 1, scope: !11044)
!11073 = distinct !DISubprogram(name: "do_ctr_op", scope: !1164, file: !1164, line: 76, type: !1230, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !11074)
!11074 = !{!11075, !11076, !11077, !11078, !11079, !11080}
!11075 = !DILocalVariable(name: "ctx", arg: 1, scope: !11073, file: !1164, line: 76, type: !1203)
!11076 = !DILocalVariable(name: "op", arg: 2, scope: !11073, file: !1164, line: 76, type: !1218)
!11077 = !DILocalVariable(name: "iv", arg: 3, scope: !11073, file: !1164, line: 77, type: !184)
!11078 = !DILocalVariable(name: "data", scope: !11073, file: !1164, line: 79, type: !10904)
!11079 = !DILocalVariable(name: "ctr", scope: !11073, file: !1164, line: 80, type: !311)
!11080 = !DILocalVariable(name: "ivlen", scope: !11073, file: !1164, line: 81, type: !125)
!11081 = !DILocation(line: 0, scope: !11073)
!11082 = !DILocation(line: 79, column: 41, scope: !11073)
!11083 = !DILocation(line: 80, column: 2, scope: !11073)
!11084 = !DILocation(line: 80, column: 10, scope: !11073)
!11085 = !DILocation(line: 81, column: 19, scope: !11073)
!11086 = !DILocation(line: 81, column: 14, scope: !11073)
!11087 = !DILocation(line: 81, column: 55, scope: !11073)
!11088 = !DILocation(line: 81, column: 63, scope: !11073)
!11089 = !DILocation(line: 81, column: 26, scope: !11073)
!11090 = !DILocation(line: 86, column: 2, scope: !11073)
!11091 = !DILocation(line: 88, column: 22, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11073, file: !1164, line: 88, column: 6)
!11093 = !DILocation(line: 88, column: 35, scope: !11092)
!11094 = !DILocation(line: 88, column: 52, scope: !11092)
!11095 = !DILocation(line: 89, column: 8, scope: !11092)
!11096 = !DILocation(line: 90, column: 11, scope: !11092)
!11097 = !DILocation(line: 88, column: 6, scope: !11092)
!11098 = !DILocation(line: 90, column: 24, scope: !11092)
!11099 = !DILocation(line: 88, column: 6, scope: !11073)
!11100 = !DILocation(line: 91, column: 3, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11102, file: !1164, line: 91, column: 3)
!11102 = distinct !DILexicalBlock(scope: !11103, file: !1164, line: 91, column: 3)
!11103 = distinct !DILexicalBlock(scope: !11104, file: !1164, line: 91, column: 3)
!11104 = distinct !DILexicalBlock(scope: !11105, file: !1164, line: 91, column: 3)
!11105 = distinct !DILexicalBlock(scope: !11092, file: !1164, line: 90, column: 43)
!11106 = !DILocation(line: 92, column: 3, scope: !11105)
!11107 = !DILocation(line: 96, column: 20, scope: !11073)
!11108 = !DILocation(line: 96, column: 6, scope: !11073)
!11109 = !DILocation(line: 96, column: 14, scope: !11073)
!11110 = !DILocation(line: 98, column: 2, scope: !11073)
!11111 = !DILocation(line: 99, column: 1, scope: !11073)
!11112 = distinct !DISubprogram(name: "do_ccm_encrypt_mac", scope: !1164, file: !1164, line: 101, type: !1237, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !11113)
!11113 = !{!11114, !11115, !11116, !11117, !11125, !11126, !11128}
!11114 = !DILocalVariable(name: "ctx", arg: 1, scope: !11112, file: !1164, line: 101, type: !1203)
!11115 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11112, file: !1164, line: 102, type: !1239)
!11116 = !DILocalVariable(name: "nonce", arg: 3, scope: !11112, file: !1164, line: 102, type: !184)
!11117 = !DILocalVariable(name: "ccm", scope: !11112, file: !1164, line: 104, type: !11118)
!11118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2774, line: 91, size: 96, elements: !11119)
!11119 = !{!11120, !11123, !11124}
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !11118, file: !2774, line: 92, baseType: !11121, size: 32)
!11121 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !11122)
!11122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !11118, file: !2774, line: 93, baseType: !184, size: 32, offset: 32)
!11124 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !11118, file: !2774, line: 94, baseType: !32, size: 32, offset: 64)
!11125 = !DILocalVariable(name: "data", scope: !11112, file: !1164, line: 105, type: !10904)
!11126 = !DILocalVariable(name: "ccm_param", scope: !11112, file: !1164, line: 106, type: !11127)
!11127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!11128 = !DILocalVariable(name: "op", scope: !11112, file: !1164, line: 107, type: !1218)
!11129 = !DILocation(line: 0, scope: !11112)
!11130 = !DILocation(line: 104, column: 2, scope: !11112)
!11131 = !DILocation(line: 104, column: 28, scope: !11112)
!11132 = !DILocation(line: 105, column: 41, scope: !11112)
!11133 = !DILocation(line: 106, column: 39, scope: !11112)
!11134 = !DILocation(line: 106, column: 51, scope: !11112)
!11135 = !DILocation(line: 107, column: 35, scope: !11112)
!11136 = !DILocation(line: 109, column: 33, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11112, file: !1164, line: 109, column: 6)
!11138 = !DILocation(line: 110, column: 15, scope: !11137)
!11139 = !DILocation(line: 110, column: 4, scope: !11137)
!11140 = !DILocation(line: 111, column: 15, scope: !11137)
!11141 = !DILocation(line: 111, column: 4, scope: !11137)
!11142 = !DILocation(line: 109, column: 6, scope: !11137)
!11143 = !DILocation(line: 111, column: 24, scope: !11137)
!11144 = !DILocation(line: 109, column: 6, scope: !11112)
!11145 = !DILocation(line: 112, column: 3, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !1164, line: 112, column: 3)
!11147 = distinct !DILexicalBlock(scope: !11148, file: !1164, line: 112, column: 3)
!11148 = distinct !DILexicalBlock(scope: !11149, file: !1164, line: 112, column: 3)
!11149 = distinct !DILexicalBlock(scope: !11150, file: !1164, line: 112, column: 3)
!11150 = distinct !DILexicalBlock(scope: !11137, file: !1164, line: 111, column: 43)
!11151 = !DILocation(line: 113, column: 3, scope: !11150)
!11152 = !DILocation(line: 116, column: 39, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11112, file: !1164, line: 116, column: 6)
!11154 = !DILocation(line: 116, column: 52, scope: !11153)
!11155 = !DILocation(line: 117, column: 16, scope: !11153)
!11156 = !DILocation(line: 117, column: 29, scope: !11153)
!11157 = !DILocation(line: 117, column: 41, scope: !11153)
!11158 = !DILocation(line: 118, column: 11, scope: !11153)
!11159 = !DILocation(line: 116, column: 6, scope: !11153)
!11160 = !DILocation(line: 118, column: 25, scope: !11153)
!11161 = !DILocation(line: 116, column: 6, scope: !11112)
!11162 = !DILocation(line: 119, column: 3, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !1164, line: 119, column: 3)
!11164 = distinct !DILexicalBlock(scope: !11165, file: !1164, line: 119, column: 3)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !1164, line: 119, column: 3)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !1164, line: 119, column: 3)
!11167 = distinct !DILexicalBlock(scope: !11153, file: !1164, line: 118, column: 44)
!11168 = !DILocation(line: 120, column: 3, scope: !11167)
!11169 = !DILocation(line: 128, column: 15, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11112, file: !1164, line: 128, column: 6)
!11171 = !DILocation(line: 128, column: 6, scope: !11170)
!11172 = !DILocation(line: 128, column: 6, scope: !11112)
!11173 = !DILocation(line: 129, column: 28, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11170, file: !1164, line: 128, column: 20)
!11175 = !DILocation(line: 129, column: 42, scope: !11174)
!11176 = !DILocation(line: 129, column: 36, scope: !11174)
!11177 = !DILocation(line: 129, column: 54, scope: !11174)
!11178 = !DILocation(line: 129, column: 3, scope: !11174)
!11179 = !DILocation(line: 130, column: 2, scope: !11174)
!11180 = !DILocation(line: 136, column: 20, scope: !11112)
!11181 = !DILocation(line: 136, column: 33, scope: !11112)
!11182 = !DILocation(line: 136, column: 27, scope: !11112)
!11183 = !DILocation(line: 136, column: 6, scope: !11112)
!11184 = !DILocation(line: 136, column: 14, scope: !11112)
!11185 = !DILocation(line: 138, column: 2, scope: !11112)
!11186 = !DILocation(line: 139, column: 1, scope: !11112)
!11187 = distinct !DISubprogram(name: "do_cbc_decrypt", scope: !1164, file: !1164, line: 48, type: !1230, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !11188)
!11188 = !{!11189, !11190, !11191, !11192}
!11189 = !DILocalVariable(name: "ctx", arg: 1, scope: !11187, file: !1164, line: 48, type: !1203)
!11190 = !DILocalVariable(name: "op", arg: 2, scope: !11187, file: !1164, line: 48, type: !1218)
!11191 = !DILocalVariable(name: "iv", arg: 3, scope: !11187, file: !1164, line: 49, type: !184)
!11192 = !DILocalVariable(name: "data", scope: !11187, file: !1164, line: 51, type: !10904)
!11193 = !DILocation(line: 0, scope: !11187)
!11194 = !DILocation(line: 56, column: 16, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11187, file: !1164, line: 56, column: 6)
!11196 = !DILocation(line: 56, column: 9, scope: !11195)
!11197 = !DILocation(line: 56, column: 6, scope: !11187)
!11198 = !DILocation(line: 57, column: 3, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11200, file: !1164, line: 57, column: 3)
!11200 = distinct !DILexicalBlock(scope: !11201, file: !1164, line: 57, column: 3)
!11201 = distinct !DILexicalBlock(scope: !11202, file: !1164, line: 57, column: 3)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !1164, line: 57, column: 3)
!11203 = distinct !DILexicalBlock(scope: !11195, file: !1164, line: 56, column: 24)
!11204 = !DILocation(line: 58, column: 3, scope: !11203)
!11205 = !DILocation(line: 51, column: 41, scope: !11187)
!11206 = !DILocation(line: 61, column: 30, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11187, file: !1164, line: 61, column: 6)
!11208 = !DILocation(line: 62, column: 8, scope: !11207)
!11209 = !DILocation(line: 63, column: 15, scope: !11207)
!11210 = !DILocation(line: 64, column: 8, scope: !11207)
!11211 = !DILocation(line: 64, column: 15, scope: !11207)
!11212 = !DILocation(line: 65, column: 23, scope: !11207)
!11213 = !DILocation(line: 61, column: 6, scope: !11207)
!11214 = !DILocation(line: 65, column: 36, scope: !11207)
!11215 = !DILocation(line: 61, column: 6, scope: !11187)
!11216 = !DILocation(line: 66, column: 3, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11218, file: !1164, line: 66, column: 3)
!11218 = distinct !DILexicalBlock(scope: !11219, file: !1164, line: 66, column: 3)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !1164, line: 66, column: 3)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !1164, line: 66, column: 3)
!11221 = distinct !DILexicalBlock(scope: !11207, file: !1164, line: 65, column: 55)
!11222 = !DILocation(line: 67, column: 3, scope: !11221)
!11223 = !DILocation(line: 71, column: 20, scope: !11187)
!11224 = !DILocation(line: 71, column: 6, scope: !11187)
!11225 = !DILocation(line: 71, column: 14, scope: !11187)
!11226 = !DILocation(line: 73, column: 2, scope: !11187)
!11227 = !DILocation(line: 74, column: 1, scope: !11187)
!11228 = distinct !DISubprogram(name: "do_ccm_decrypt_auth", scope: !1164, file: !1164, line: 141, type: !1237, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !11229)
!11229 = !{!11230, !11231, !11232, !11233, !11234, !11235, !11236}
!11230 = !DILocalVariable(name: "ctx", arg: 1, scope: !11228, file: !1164, line: 141, type: !1203)
!11231 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11228, file: !1164, line: 142, type: !1239)
!11232 = !DILocalVariable(name: "nonce", arg: 3, scope: !11228, file: !1164, line: 142, type: !184)
!11233 = !DILocalVariable(name: "ccm", scope: !11228, file: !1164, line: 144, type: !11118)
!11234 = !DILocalVariable(name: "data", scope: !11228, file: !1164, line: 145, type: !10904)
!11235 = !DILocalVariable(name: "ccm_param", scope: !11228, file: !1164, line: 146, type: !11127)
!11236 = !DILocalVariable(name: "op", scope: !11228, file: !1164, line: 147, type: !1218)
!11237 = !DILocation(line: 0, scope: !11228)
!11238 = !DILocation(line: 144, column: 2, scope: !11228)
!11239 = !DILocation(line: 144, column: 28, scope: !11228)
!11240 = !DILocation(line: 145, column: 41, scope: !11228)
!11241 = !DILocation(line: 146, column: 39, scope: !11228)
!11242 = !DILocation(line: 146, column: 51, scope: !11228)
!11243 = !DILocation(line: 147, column: 35, scope: !11228)
!11244 = !DILocation(line: 149, column: 33, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11228, file: !1164, line: 149, column: 6)
!11246 = !DILocation(line: 150, column: 17, scope: !11245)
!11247 = !DILocation(line: 150, column: 6, scope: !11245)
!11248 = !DILocation(line: 151, column: 17, scope: !11245)
!11249 = !DILocation(line: 151, column: 6, scope: !11245)
!11250 = !DILocation(line: 149, column: 6, scope: !11245)
!11251 = !DILocation(line: 151, column: 26, scope: !11245)
!11252 = !DILocation(line: 149, column: 6, scope: !11228)
!11253 = !DILocation(line: 152, column: 3, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11255, file: !1164, line: 152, column: 3)
!11255 = distinct !DILexicalBlock(scope: !11256, file: !1164, line: 152, column: 3)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !1164, line: 152, column: 3)
!11257 = distinct !DILexicalBlock(scope: !11258, file: !1164, line: 152, column: 3)
!11258 = distinct !DILexicalBlock(scope: !11245, file: !1164, line: 151, column: 45)
!11259 = !DILocation(line: 153, column: 3, scope: !11258)
!11260 = !DILocation(line: 160, column: 15, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11228, file: !1164, line: 160, column: 6)
!11262 = !DILocation(line: 160, column: 26, scope: !11261)
!11263 = !DILocation(line: 160, column: 39, scope: !11261)
!11264 = !DILocation(line: 160, column: 33, scope: !11261)
!11265 = !DILocation(line: 160, column: 19, scope: !11261)
!11266 = !DILocation(line: 160, column: 6, scope: !11228)
!11267 = !DILocation(line: 161, column: 3, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !1164, line: 161, column: 3)
!11269 = distinct !DILexicalBlock(scope: !11270, file: !1164, line: 161, column: 3)
!11270 = distinct !DILexicalBlock(scope: !11271, file: !1164, line: 161, column: 3)
!11271 = distinct !DILexicalBlock(scope: !11272, file: !1164, line: 161, column: 3)
!11272 = distinct !DILexicalBlock(scope: !11261, file: !1164, line: 160, column: 47)
!11273 = !DILocation(line: 162, column: 3, scope: !11272)
!11274 = !DILocation(line: 165, column: 41, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11228, file: !1164, line: 165, column: 6)
!11276 = !DILocation(line: 165, column: 54, scope: !11275)
!11277 = !DILocation(line: 166, column: 18, scope: !11275)
!11278 = !DILocation(line: 166, column: 31, scope: !11275)
!11279 = !DILocation(line: 168, column: 33, scope: !11275)
!11280 = !DILocation(line: 168, column: 22, scope: !11275)
!11281 = !DILocation(line: 168, column: 20, scope: !11275)
!11282 = !DILocation(line: 165, column: 6, scope: !11275)
!11283 = !DILocation(line: 169, column: 15, scope: !11275)
!11284 = !DILocation(line: 165, column: 6, scope: !11228)
!11285 = !DILocation(line: 170, column: 3, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !1164, line: 170, column: 3)
!11287 = distinct !DILexicalBlock(scope: !11288, file: !1164, line: 170, column: 3)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !1164, line: 170, column: 3)
!11289 = distinct !DILexicalBlock(scope: !11290, file: !1164, line: 170, column: 3)
!11290 = distinct !DILexicalBlock(scope: !11275, file: !1164, line: 169, column: 34)
!11291 = !DILocation(line: 171, column: 3, scope: !11290)
!11292 = !DILocation(line: 174, column: 20, scope: !11228)
!11293 = !DILocation(line: 174, column: 40, scope: !11228)
!11294 = !DILocation(line: 174, column: 29, scope: !11228)
!11295 = !DILocation(line: 174, column: 27, scope: !11228)
!11296 = !DILocation(line: 174, column: 6, scope: !11228)
!11297 = !DILocation(line: 174, column: 14, scope: !11228)
!11298 = !DILocation(line: 176, column: 2, scope: !11228)
!11299 = !DILocation(line: 177, column: 1, scope: !11228)
!11300 = distinct !DISubprogram(name: "get_unused_session", scope: !1164, file: !1164, line: 179, type: !9637, scopeLine: 180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !11301)
!11301 = !{!11302}
!11302 = !DILocalVariable(name: "i", scope: !11300, file: !1164, line: 181, type: !125)
!11303 = !DILocation(line: 0, scope: !11300)
!11304 = !DILocation(line: 183, column: 2, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11300, file: !1164, line: 183, column: 2)
!11306 = !DILocation(line: 184, column: 26, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !1164, line: 184, column: 7)
!11308 = distinct !DILexicalBlock(scope: !11309, file: !1164, line: 183, column: 43)
!11309 = distinct !DILexicalBlock(scope: !11305, file: !1164, line: 183, column: 2)
!11310 = !DILocation(line: 184, column: 33, scope: !11307)
!11311 = !DILocation(line: 184, column: 7, scope: !11308)
!11312 = !DILocation(line: 185, column: 30, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11307, file: !1164, line: 184, column: 39)
!11314 = !DILocation(line: 186, column: 4, scope: !11313)
!11315 = distinct !{!11315, !11304, !11316}
!11316 = !DILocation(line: 188, column: 2, scope: !11305)
!11317 = !DILocation(line: 190, column: 2, scope: !11300)
!11318 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1509, file: !1509, line: 523, type: !1367, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11319)
!11319 = !{!11320, !11321, !11322, !11323, !11324}
!11320 = !DILocalVariable(name: "dev", arg: 1, scope: !11318, file: !1509, line: 523, type: !1369)
!11321 = !DILocalVariable(name: "pin", arg: 2, scope: !11318, file: !1509, line: 524, type: !1384)
!11322 = !DILocalVariable(name: "flags", arg: 3, scope: !11318, file: !1509, line: 524, type: !1385)
!11323 = !DILocalVariable(name: "err", scope: !11318, file: !1509, line: 526, type: !125)
!11324 = !DILocalVariable(name: "pincfg", scope: !11318, file: !1509, line: 527, type: !125)
!11325 = !DILocation(line: 0, scope: !11318)
!11326 = !DILocation(line: 527, column: 2, scope: !11318)
!11327 = !DILocation(line: 532, column: 8, scope: !11318)
!11328 = !DILocation(line: 533, column: 10, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11318, file: !1509, line: 533, column: 6)
!11330 = !DILocation(line: 533, column: 6, scope: !11318)
!11331 = !DILocation(line: 543, column: 13, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11318, file: !1509, line: 543, column: 6)
!11333 = !DILocation(line: 543, column: 28, scope: !11332)
!11334 = !DILocation(line: 543, column: 6, scope: !11318)
!11335 = !DILocation(line: 544, column: 14, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !1509, line: 544, column: 7)
!11337 = distinct !DILexicalBlock(scope: !11332, file: !1509, line: 543, column: 34)
!11338 = !DILocation(line: 544, column: 39, scope: !11336)
!11339 = !DILocation(line: 544, column: 7, scope: !11337)
!11340 = !DILocation(line: 545, column: 38, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11336, file: !1509, line: 544, column: 45)
!11342 = !DILocation(line: 545, column: 4, scope: !11341)
!11343 = !DILocation(line: 546, column: 3, scope: !11341)
!11344 = !DILocation(line: 546, column: 21, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11336, file: !1509, line: 546, column: 14)
!11346 = !DILocation(line: 546, column: 45, scope: !11345)
!11347 = !DILocation(line: 546, column: 14, scope: !11336)
!11348 = !DILocation(line: 547, column: 40, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11345, file: !1509, line: 546, column: 51)
!11350 = !DILocation(line: 547, column: 4, scope: !11349)
!11351 = !DILocation(line: 548, column: 3, scope: !11349)
!11352 = !DILocation(line: 551, column: 32, scope: !11318)
!11353 = !DILocation(line: 551, column: 37, scope: !11318)
!11354 = !DILocation(line: 551, column: 2, scope: !11318)
!11355 = !DILocation(line: 554, column: 6, scope: !11318)
!11356 = !DILocation(line: 562, column: 1, scope: !11318)
!11357 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1509, file: !1509, line: 410, type: !11358, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11360)
!11358 = !DISubroutineType(types: !11359)
!11359 = !{!125, !1369, !1014}
!11360 = !{!11361, !11362, !11363, !11365}
!11361 = !DILocalVariable(name: "dev", arg: 1, scope: !11357, file: !1509, line: 410, type: !1369)
!11362 = !DILocalVariable(name: "value", arg: 2, scope: !11357, file: !1509, line: 410, type: !1014)
!11363 = !DILocalVariable(name: "cfg", scope: !11357, file: !1509, line: 412, type: !11364)
!11364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!11365 = !DILocalVariable(name: "gpio", scope: !11357, file: !1509, line: 413, type: !1442)
!11366 = !DILocation(line: 0, scope: !11357)
!11367 = !DILocation(line: 412, column: 45, scope: !11357)
!11368 = !DILocation(line: 413, column: 44, scope: !11357)
!11369 = !DILocation(line: 415, column: 11, scope: !11357)
!11370 = !DILocation(line: 415, column: 9, scope: !11357)
!11371 = !DILocation(line: 417, column: 2, scope: !11357)
!11372 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1509, file: !1509, line: 420, type: !1394, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11373)
!11373 = !{!11374, !11375, !11376, !11377, !11378, !11379}
!11374 = !DILocalVariable(name: "dev", arg: 1, scope: !11372, file: !1509, line: 420, type: !1369)
!11375 = !DILocalVariable(name: "mask", arg: 2, scope: !11372, file: !1509, line: 421, type: !1396)
!11376 = !DILocalVariable(name: "value", arg: 3, scope: !11372, file: !1509, line: 422, type: !1391)
!11377 = !DILocalVariable(name: "cfg", scope: !11372, file: !1509, line: 424, type: !11364)
!11378 = !DILocalVariable(name: "gpio", scope: !11372, file: !1509, line: 425, type: !1442)
!11379 = !DILocalVariable(name: "port_value", scope: !11372, file: !1509, line: 426, type: !208)
!11380 = !DILocation(line: 0, scope: !11372)
!11381 = !DILocation(line: 424, column: 45, scope: !11372)
!11382 = !DILocation(line: 425, column: 44, scope: !11372)
!11383 = !DILocation(line: 430, column: 15, scope: !11372)
!11384 = !DILocation(line: 431, column: 46, scope: !11372)
!11385 = !DILocation(line: 431, column: 44, scope: !11372)
!11386 = !DILocation(line: 431, column: 61, scope: !11372)
!11387 = !DILocation(line: 431, column: 53, scope: !11372)
!11388 = !DILocation(line: 431, column: 2, scope: !11372)
!11389 = !DILocation(line: 435, column: 2, scope: !11372)
!11390 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1509, file: !1509, line: 438, type: !1399, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11391)
!11391 = !{!11392, !11393, !11394, !11395}
!11392 = !DILocalVariable(name: "dev", arg: 1, scope: !11390, file: !1509, line: 438, type: !1369)
!11393 = !DILocalVariable(name: "pins", arg: 2, scope: !11390, file: !1509, line: 439, type: !1396)
!11394 = !DILocalVariable(name: "cfg", scope: !11390, file: !1509, line: 441, type: !11364)
!11395 = !DILocalVariable(name: "gpio", scope: !11390, file: !1509, line: 442, type: !1442)
!11396 = !DILocation(line: 0, scope: !11390)
!11397 = !DILocation(line: 441, column: 45, scope: !11390)
!11398 = !DILocation(line: 442, column: 44, scope: !11390)
!11399 = !DILocation(line: 448, column: 2, scope: !11390)
!11400 = !DILocation(line: 450, column: 2, scope: !11390)
!11401 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1509, file: !1509, line: 453, type: !1399, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11402)
!11402 = !{!11403, !11404, !11405, !11406}
!11403 = !DILocalVariable(name: "dev", arg: 1, scope: !11401, file: !1509, line: 453, type: !1369)
!11404 = !DILocalVariable(name: "pins", arg: 2, scope: !11401, file: !1509, line: 454, type: !1396)
!11405 = !DILocalVariable(name: "cfg", scope: !11401, file: !1509, line: 456, type: !11364)
!11406 = !DILocalVariable(name: "gpio", scope: !11401, file: !1509, line: 457, type: !1442)
!11407 = !DILocation(line: 0, scope: !11401)
!11408 = !DILocation(line: 456, column: 45, scope: !11401)
!11409 = !DILocation(line: 457, column: 44, scope: !11401)
!11410 = !DILocation(line: 467, column: 2, scope: !11401)
!11411 = !DILocation(line: 470, column: 2, scope: !11401)
!11412 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1509, file: !1509, line: 473, type: !1399, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11413)
!11413 = !{!11414, !11415, !11416, !11417}
!11414 = !DILocalVariable(name: "dev", arg: 1, scope: !11412, file: !1509, line: 473, type: !1369)
!11415 = !DILocalVariable(name: "pins", arg: 2, scope: !11412, file: !1509, line: 474, type: !1396)
!11416 = !DILocalVariable(name: "cfg", scope: !11412, file: !1509, line: 476, type: !11364)
!11417 = !DILocalVariable(name: "gpio", scope: !11412, file: !1509, line: 477, type: !1442)
!11418 = !DILocation(line: 0, scope: !11412)
!11419 = !DILocation(line: 476, column: 45, scope: !11412)
!11420 = !DILocation(line: 477, column: 44, scope: !11412)
!11421 = !DILocation(line: 484, column: 2, scope: !11412)
!11422 = !DILocation(line: 487, column: 2, scope: !11412)
!11423 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1509, file: !1509, line: 594, type: !1405, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11424)
!11424 = !{!11425, !11426, !11427, !11428, !11429, !11430, !11432, !11433, !11434}
!11425 = !DILocalVariable(name: "dev", arg: 1, scope: !11423, file: !1509, line: 594, type: !1369)
!11426 = !DILocalVariable(name: "pin", arg: 2, scope: !11423, file: !1509, line: 595, type: !1384)
!11427 = !DILocalVariable(name: "mode", arg: 3, scope: !11423, file: !1509, line: 596, type: !1343)
!11428 = !DILocalVariable(name: "trig", arg: 4, scope: !11423, file: !1509, line: 597, type: !1349)
!11429 = !DILocalVariable(name: "cfg", scope: !11423, file: !1509, line: 599, type: !11364)
!11430 = !DILocalVariable(name: "data", scope: !11423, file: !1509, line: 600, type: !11431)
!11431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!11432 = !DILocalVariable(name: "edge", scope: !11423, file: !1509, line: 601, type: !125)
!11433 = !DILocalVariable(name: "err", scope: !11423, file: !1509, line: 602, type: !125)
!11434 = !DILabel(scope: !11423, name: "exit", file: !1509, line: 643)
!11435 = !DILocation(line: 0, scope: !11423)
!11436 = !DILocation(line: 599, column: 45, scope: !11423)
!11437 = !DILocation(line: 604, column: 6, scope: !11423)
!11438 = !DILocation(line: 605, column: 34, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !1509, line: 605, column: 7)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !1509, line: 604, column: 38)
!11441 = distinct !DILexicalBlock(scope: !11423, file: !1509, line: 604, column: 6)
!11442 = !DILocation(line: 605, column: 7, scope: !11439)
!11443 = !DILocation(line: 605, column: 47, scope: !11439)
!11444 = !DILocation(line: 605, column: 39, scope: !11439)
!11445 = !DILocation(line: 605, column: 7, scope: !11440)
!11446 = !DILocation(line: 606, column: 4, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11439, file: !1509, line: 605, column: 53)
!11448 = !DILocation(line: 607, column: 4, scope: !11447)
!11449 = !DILocation(line: 608, column: 4, scope: !11447)
!11450 = !DILocation(line: 609, column: 3, scope: !11447)
!11451 = !DILocation(line: 600, column: 38, scope: !11423)
!11452 = !DILocation(line: 620, column: 30, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11423, file: !1509, line: 620, column: 6)
!11454 = !DILocation(line: 620, column: 6, scope: !11453)
!11455 = !DILocation(line: 620, column: 57, scope: !11453)
!11456 = !DILocation(line: 620, column: 6, scope: !11423)
!11457 = !DILocation(line: 625, column: 29, scope: !11423)
!11458 = !DILocation(line: 625, column: 2, scope: !11423)
!11459 = !DILocation(line: 627, column: 2, scope: !11423)
!11460 = !DILocation(line: 630, column: 3, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11423, file: !1509, line: 627, column: 16)
!11462 = !DILocation(line: 633, column: 3, scope: !11461)
!11463 = !DILocation(line: 636, column: 3, scope: !11461)
!11464 = !DILocation(line: 639, column: 2, scope: !11423)
!11465 = !DILocation(line: 641, column: 2, scope: !11423)
!11466 = !DILocation(line: 643, column: 1, scope: !11423)
!11467 = !DILocation(line: 644, column: 2, scope: !11423)
!11468 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1509, file: !1509, line: 647, type: !1409, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11469)
!11469 = !{!11470, !11471, !11472, !11473}
!11470 = !DILocalVariable(name: "dev", arg: 1, scope: !11468, file: !1509, line: 647, type: !1369)
!11471 = !DILocalVariable(name: "callback", arg: 2, scope: !11468, file: !1509, line: 648, type: !1411)
!11472 = !DILocalVariable(name: "set", arg: 3, scope: !11468, file: !1509, line: 649, type: !153)
!11473 = !DILocalVariable(name: "data", scope: !11468, file: !1509, line: 651, type: !11431)
!11474 = !DILocation(line: 0, scope: !11468)
!11475 = !DILocation(line: 651, column: 38, scope: !11468)
!11476 = !DILocation(line: 653, column: 37, scope: !11468)
!11477 = !DILocation(line: 653, column: 9, scope: !11468)
!11478 = !DILocation(line: 653, column: 2, scope: !11468)
!11479 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11480, file: !11480, line: 38, type: !11481, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11484)
!11480 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11481 = !DISubroutineType(types: !11482)
!11482 = !{!125, !11483, !1411, !153}
!11483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!11484 = !{!11485, !11486, !11487}
!11485 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11479, file: !11480, line: 38, type: !11483)
!11486 = !DILocalVariable(name: "callback", arg: 2, scope: !11479, file: !11480, line: 39, type: !1411)
!11487 = !DILocalVariable(name: "set", arg: 3, scope: !11479, file: !11480, line: 40, type: !153)
!11488 = !DILocation(line: 0, scope: !11479)
!11489 = !DILocation(line: 45, column: 7, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11479, file: !11480, line: 45, column: 6)
!11491 = !DILocation(line: 45, column: 6, scope: !11479)
!11492 = !DILocation(line: 46, column: 56, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11494, file: !11480, line: 46, column: 7)
!11494 = distinct !DILexicalBlock(scope: !11490, file: !11480, line: 45, column: 38)
!11495 = !DILocation(line: 46, column: 8, scope: !11493)
!11496 = !DILocation(line: 46, column: 7, scope: !11494)
!11497 = !DILocation(line: 51, column: 13, scope: !11490)
!11498 = !DILocation(line: 56, column: 43, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11500, file: !11480, line: 55, column: 11)
!11500 = distinct !DILexicalBlock(scope: !11479, file: !11480, line: 55, column: 6)
!11501 = !DILocation(line: 56, column: 3, scope: !11499)
!11502 = !DILocation(line: 57, column: 2, scope: !11499)
!11503 = !DILocation(line: 60, column: 1, scope: !11479)
!11504 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1416, file: !1416, line: 261, type: !11505, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11507)
!11505 = !DISubroutineType(types: !11506)
!11506 = !{!153, !11483}
!11507 = !{!11508}
!11508 = !DILocalVariable(name: "list", arg: 1, scope: !11504, file: !1416, line: 261, type: !11483)
!11509 = !DILocation(line: 0, scope: !11504)
!11510 = !DILocation(line: 261, column: 1, scope: !11504)
!11511 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1416, file: !1416, line: 417, type: !11512, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11514)
!11512 = !DISubroutineType(types: !11513)
!11513 = !{!153, !11483, !1585}
!11514 = !{!11515, !11516, !11517, !11518}
!11515 = !DILocalVariable(name: "list", arg: 1, scope: !11511, file: !1416, line: 417, type: !11483)
!11516 = !DILocalVariable(name: "node", arg: 2, scope: !11511, file: !1416, line: 417, type: !1585)
!11517 = !DILocalVariable(name: "prev", scope: !11511, file: !1416, line: 417, type: !1585)
!11518 = !DILocalVariable(name: "test", scope: !11511, file: !1416, line: 417, type: !1585)
!11519 = !DILocation(line: 0, scope: !11511)
!11520 = !DILocation(line: 417, column: 1, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11511, file: !1416, line: 417, column: 1)
!11522 = !DILocation(line: 417, column: 1, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11521, file: !1416, line: 417, column: 1)
!11524 = !DILocation(line: 417, column: 1, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11526, file: !1416, line: 417, column: 1)
!11526 = distinct !DILexicalBlock(scope: !11523, file: !1416, line: 417, column: 1)
!11527 = !DILocation(line: 417, column: 1, scope: !11526)
!11528 = distinct !{!11528, !11520, !11520}
!11529 = !DILocation(line: 417, column: 1, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11525, file: !1416, line: 417, column: 1)
!11531 = !DILocation(line: 417, column: 1, scope: !11511)
!11532 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1416, file: !1416, line: 298, type: !11533, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11535)
!11533 = !DISubroutineType(types: !11534)
!11534 = !{null, !11483, !1585}
!11535 = !{!11536, !11537}
!11536 = !DILocalVariable(name: "list", arg: 1, scope: !11532, file: !1416, line: 298, type: !11483)
!11537 = !DILocalVariable(name: "node", arg: 2, scope: !11532, file: !1416, line: 298, type: !1585)
!11538 = !DILocation(line: 0, scope: !11532)
!11539 = !DILocation(line: 298, column: 1, scope: !11532)
!11540 = !DILocation(line: 298, column: 1, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11532, file: !1416, line: 298, column: 1)
!11542 = !DILocation(line: 298, column: 1, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11541, file: !1416, line: 298, column: 1)
!11544 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1416, file: !1416, line: 231, type: !11545, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11547)
!11545 = !DISubroutineType(types: !11546)
!11546 = !{!1585, !11483}
!11547 = !{!11548}
!11548 = !DILocalVariable(name: "list", arg: 1, scope: !11544, file: !1416, line: 231, type: !11483)
!11549 = !DILocation(line: 0, scope: !11544)
!11550 = !DILocation(line: 233, column: 15, scope: !11544)
!11551 = !DILocation(line: 233, column: 2, scope: !11544)
!11552 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1416, file: !1416, line: 209, type: !11553, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11555)
!11553 = !DISubroutineType(types: !11554)
!11554 = !{null, !1585, !1585}
!11555 = !{!11556, !11557}
!11556 = !DILocalVariable(name: "parent", arg: 1, scope: !11552, file: !1416, line: 209, type: !1585)
!11557 = !DILocalVariable(name: "child", arg: 2, scope: !11552, file: !1416, line: 209, type: !1585)
!11558 = !DILocation(line: 0, scope: !11552)
!11559 = !DILocation(line: 211, column: 10, scope: !11552)
!11560 = !DILocation(line: 211, column: 15, scope: !11552)
!11561 = !DILocation(line: 212, column: 1, scope: !11552)
!11562 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1416, file: !1416, line: 214, type: !11533, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11563)
!11563 = !{!11564, !11565}
!11564 = !DILocalVariable(name: "list", arg: 1, scope: !11562, file: !1416, line: 214, type: !11483)
!11565 = !DILocalVariable(name: "node", arg: 2, scope: !11562, file: !1416, line: 214, type: !1585)
!11566 = !DILocation(line: 0, scope: !11562)
!11567 = !DILocation(line: 216, column: 8, scope: !11562)
!11568 = !DILocation(line: 216, column: 13, scope: !11562)
!11569 = !DILocation(line: 217, column: 1, scope: !11562)
!11570 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1416, file: !1416, line: 243, type: !11545, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11571)
!11571 = !{!11572}
!11572 = !DILocalVariable(name: "list", arg: 1, scope: !11570, file: !1416, line: 243, type: !11483)
!11573 = !DILocation(line: 0, scope: !11570)
!11574 = !DILocation(line: 245, column: 15, scope: !11570)
!11575 = !DILocation(line: 245, column: 2, scope: !11570)
!11576 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1416, file: !1416, line: 219, type: !11533, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11577)
!11577 = !{!11578, !11579}
!11578 = !DILocalVariable(name: "list", arg: 1, scope: !11576, file: !1416, line: 219, type: !11483)
!11579 = !DILocalVariable(name: "node", arg: 2, scope: !11576, file: !1416, line: 219, type: !1585)
!11580 = !DILocation(line: 0, scope: !11576)
!11581 = !DILocation(line: 221, column: 8, scope: !11576)
!11582 = !DILocation(line: 221, column: 13, scope: !11576)
!11583 = !DILocation(line: 222, column: 1, scope: !11576)
!11584 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1416, file: !1416, line: 401, type: !11585, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11587)
!11585 = !DISubroutineType(types: !11586)
!11586 = !{null, !11483, !1585, !1585}
!11587 = !{!11588, !11589, !11590}
!11588 = !DILocalVariable(name: "list", arg: 1, scope: !11584, file: !1416, line: 401, type: !11483)
!11589 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11584, file: !1416, line: 401, type: !1585)
!11590 = !DILocalVariable(name: "node", arg: 3, scope: !11584, file: !1416, line: 401, type: !1585)
!11591 = !DILocation(line: 0, scope: !11584)
!11592 = !DILocation(line: 401, column: 1, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11584, file: !1416, line: 401, column: 1)
!11594 = !DILocation(line: 0, scope: !11593)
!11595 = !DILocation(line: 401, column: 1, scope: !11584)
!11596 = !DILocation(line: 401, column: 1, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11593, file: !1416, line: 401, column: 1)
!11598 = !DILocation(line: 401, column: 1, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11597, file: !1416, line: 401, column: 1)
!11600 = !DILocation(line: 401, column: 1, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11599, file: !1416, line: 401, column: 1)
!11602 = !DILocation(line: 401, column: 1, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11593, file: !1416, line: 401, column: 1)
!11604 = !DILocation(line: 401, column: 1, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11603, file: !1416, line: 401, column: 1)
!11606 = !DILocation(line: 401, column: 1, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11605, file: !1416, line: 401, column: 1)
!11608 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1416, file: !1416, line: 285, type: !11609, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11611)
!11609 = !DISubroutineType(types: !11610)
!11610 = !{!1585, !1585}
!11611 = !{!11612}
!11612 = !DILocalVariable(name: "node", arg: 1, scope: !11608, file: !1416, line: 285, type: !1585)
!11613 = !DILocation(line: 0, scope: !11608)
!11614 = !DILocation(line: 285, column: 1, scope: !11608)
!11615 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1416, file: !1416, line: 274, type: !11609, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11616)
!11616 = !{!11617}
!11617 = !DILocalVariable(name: "node", arg: 1, scope: !11615, file: !1416, line: 274, type: !1585)
!11618 = !DILocation(line: 0, scope: !11615)
!11619 = !DILocation(line: 274, column: 1, scope: !11615)
!11620 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1416, file: !1416, line: 204, type: !11609, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11621)
!11621 = !{!11622}
!11622 = !DILocalVariable(name: "node", arg: 1, scope: !11620, file: !1416, line: 204, type: !1585)
!11623 = !DILocation(line: 0, scope: !11620)
!11624 = !DILocation(line: 206, column: 15, scope: !11620)
!11625 = !DILocation(line: 206, column: 2, scope: !11620)
!11626 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1509, file: !1509, line: 342, type: !410, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11627)
!11627 = !{!11628, !11629, !11630}
!11628 = !DILocalVariable(name: "pin", arg: 1, scope: !11626, file: !1509, line: 342, type: !125)
!11629 = !DILocalVariable(name: "line", scope: !11626, file: !1509, line: 344, type: !208)
!11630 = !DILocalVariable(name: "port", scope: !11626, file: !1509, line: 345, type: !125)
!11631 = !DILocation(line: 0, scope: !11626)
!11632 = !DILocation(line: 344, column: 18, scope: !11626)
!11633 = !{i32 983040, i32 0}
!11634 = !DILocation(line: 356, column: 9, scope: !11626)
!11635 = !DILocation(line: 370, column: 2, scope: !11626)
!11636 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1509, file: !1509, line: 37, type: !872, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11637)
!11637 = !{!11638, !11639, !11640}
!11638 = !DILocalVariable(name: "line", arg: 1, scope: !11636, file: !1509, line: 37, type: !125)
!11639 = !DILocalVariable(name: "arg", arg: 2, scope: !11636, file: !1509, line: 37, type: !124)
!11640 = !DILocalVariable(name: "data", scope: !11636, file: !1509, line: 39, type: !11431)
!11641 = !DILocation(line: 0, scope: !11636)
!11642 = !DILocation(line: 41, column: 29, scope: !11636)
!11643 = !DILocation(line: 41, column: 39, scope: !11636)
!11644 = !DILocation(line: 41, column: 44, scope: !11636)
!11645 = !DILocation(line: 41, column: 2, scope: !11636)
!11646 = !DILocation(line: 42, column: 1, scope: !11636)
!11647 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1509, file: !1509, line: 376, type: !11648, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11650)
!11648 = !DISubroutineType(types: !11649)
!11649 = !{!125, !125, !125}
!11650 = !{!11651, !11652, !11653, !11655, !11656}
!11651 = !DILocalVariable(name: "port", arg: 1, scope: !11647, file: !1509, line: 376, type: !125)
!11652 = !DILocalVariable(name: "pin", arg: 2, scope: !11647, file: !1509, line: 376, type: !125)
!11653 = !DILocalVariable(name: "clk", scope: !11647, file: !1509, line: 386, type: !11654)
!11654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1369)
!11655 = !DILocalVariable(name: "pclken", scope: !11647, file: !1509, line: 387, type: !1628)
!11656 = !DILocalVariable(name: "ret", scope: !11647, file: !1509, line: 396, type: !125)
!11657 = !DILocation(line: 0, scope: !11647)
!11658 = !DILocation(line: 387, column: 2, scope: !11647)
!11659 = !DILocation(line: 387, column: 22, scope: !11647)
!11660 = !DILocation(line: 399, column: 8, scope: !11647)
!11661 = !DILocation(line: 400, column: 10, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11647, file: !1509, line: 400, column: 6)
!11663 = !DILocation(line: 400, column: 6, scope: !11647)
!11664 = !DILocation(line: 405, column: 2, scope: !11647)
!11665 = !DILocation(line: 407, column: 2, scope: !11647)
!11666 = !DILocation(line: 408, column: 1, scope: !11647)
!11667 = distinct !DISubprogram(name: "clock_control_on", scope: !963, file: !963, line: 123, type: !1474, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11668)
!11668 = !{!11669, !11670, !11671}
!11669 = !DILocalVariable(name: "dev", arg: 1, scope: !11667, file: !963, line: 123, type: !1369)
!11670 = !DILocalVariable(name: "sys", arg: 2, scope: !11667, file: !963, line: 124, type: !1058)
!11671 = !DILocalVariable(name: "api", scope: !11667, file: !963, line: 126, type: !1467)
!11672 = !DILocation(line: 0, scope: !11667)
!11673 = !DILocation(line: 127, column: 49, scope: !11667)
!11674 = !DILocation(line: 129, column: 14, scope: !11667)
!11675 = !DILocation(line: 129, column: 9, scope: !11667)
!11676 = !DILocation(line: 129, column: 2, scope: !11667)
!11677 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1509, file: !1509, line: 311, type: !10360, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11678)
!11678 = !{!11679, !11680, !11681}
!11679 = !DILocalVariable(name: "port", arg: 1, scope: !11677, file: !1509, line: 311, type: !125)
!11680 = !DILocalVariable(name: "pin", arg: 2, scope: !11677, file: !1509, line: 311, type: !125)
!11681 = !DILocalVariable(name: "line", scope: !11677, file: !1509, line: 313, type: !208)
!11682 = !DILocation(line: 0, scope: !11677)
!11683 = !DILocation(line: 313, column: 18, scope: !11677)
!11684 = !DILocation(line: 337, column: 2, scope: !11677)
!11685 = !DILocation(line: 340, column: 1, scope: !11677)
!11686 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1509, file: !1509, line: 295, type: !11687, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11689)
!11687 = !DISubroutineType(types: !11688)
!11688 = !{!208, !125}
!11689 = !{!11690}
!11690 = !DILocalVariable(name: "pin", arg: 1, scope: !11686, file: !1509, line: 295, type: !125)
!11691 = !DILocation(line: 0, scope: !11686)
!11692 = !DILocation(line: 307, column: 46, scope: !11686)
!11693 = !DILocation(line: 307, column: 27, scope: !11686)
!11694 = !DILocation(line: 307, column: 32, scope: !11686)
!11695 = !DILocation(line: 307, column: 14, scope: !11686)
!11696 = !DILocation(line: 307, column: 39, scope: !11686)
!11697 = !DILocation(line: 307, column: 2, scope: !11686)
!11698 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6883, file: !6883, line: 671, type: !11699, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11701)
!11699 = !DISubroutineType(types: !11700)
!11700 = !{null, !208, !208}
!11701 = !{!11702, !11703}
!11702 = !DILocalVariable(name: "Port", arg: 1, scope: !11698, file: !6883, line: 671, type: !208)
!11703 = !DILocalVariable(name: "Line", arg: 2, scope: !11698, file: !6883, line: 671, type: !208)
!11704 = !DILocation(line: 0, scope: !11698)
!11705 = !DILocation(line: 673, column: 3, scope: !11698)
!11706 = !DILocalVariable(name: "value", arg: 1, scope: !11707, file: !8329, line: 373, type: !208)
!11707 = distinct !DISubprogram(name: "__RBIT", scope: !8329, file: !8329, line: 373, type: !9575, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11708)
!11708 = !{!11706, !11709}
!11709 = !DILocalVariable(name: "result", scope: !11707, file: !8329, line: 375, type: !208)
!11710 = !DILocation(line: 0, scope: !11707, inlinedAt: !11711)
!11711 = distinct !DILocation(line: 673, column: 3, scope: !11698)
!11712 = !DILocation(line: 380, column: 4, scope: !11707, inlinedAt: !11711)
!11713 = !{i64 2919194}
!11714 = !DILocalVariable(name: "value", arg: 1, scope: !11715, file: !8329, line: 403, type: !208)
!11715 = distinct !DISubprogram(name: "__CLZ", scope: !8329, file: !8329, line: 403, type: !11716, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11718)
!11716 = !DISubroutineType(types: !11717)
!11717 = !{!150, !208}
!11718 = !{!11714}
!11719 = !DILocation(line: 0, scope: !11715, inlinedAt: !11720)
!11720 = distinct !DILocation(line: 673, column: 3, scope: !11698)
!11721 = !DILocation(line: 414, column: 7, scope: !11715, inlinedAt: !11720)
!11722 = !DILocation(line: 674, column: 1, scope: !11698)
!11723 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11480, file: !11480, line: 69, type: !11724, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11726)
!11724 = !DISubroutineType(types: !11725)
!11725 = !{null, !11483, !1369, !208}
!11726 = !{!11727, !11728, !11729, !11730, !11731}
!11727 = !DILocalVariable(name: "list", arg: 1, scope: !11723, file: !11480, line: 69, type: !11483)
!11728 = !DILocalVariable(name: "port", arg: 2, scope: !11723, file: !11480, line: 70, type: !1369)
!11729 = !DILocalVariable(name: "pins", arg: 3, scope: !11723, file: !11480, line: 71, type: !208)
!11730 = !DILocalVariable(name: "cb", scope: !11723, file: !11480, line: 73, type: !1411)
!11731 = !DILocalVariable(name: "tmp", scope: !11723, file: !11480, line: 73, type: !1411)
!11732 = !DILocation(line: 0, scope: !11723)
!11733 = !DILocation(line: 75, column: 2, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11723, file: !11480, line: 75, column: 2)
!11735 = !DILocation(line: 0, scope: !11734)
!11736 = !DILocation(line: 76, column: 11, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11738, file: !11480, line: 76, column: 7)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !11480, line: 75, column: 57)
!11739 = distinct !DILexicalBlock(scope: !11734, file: !11480, line: 75, column: 2)
!11740 = !DILocation(line: 76, column: 20, scope: !11737)
!11741 = !DILocation(line: 76, column: 7, scope: !11738)
!11742 = !DILocation(line: 78, column: 8, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11737, file: !11480, line: 76, column: 28)
!11744 = !DILocation(line: 78, column: 4, scope: !11743)
!11745 = !DILocation(line: 79, column: 3, scope: !11743)
!11746 = !DILocation(line: 75, column: 2, scope: !11739)
!11747 = !DILocation(line: 81, column: 1, scope: !11723)
!11748 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6883, file: !6883, line: 710, type: !9575, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11749)
!11749 = !{!11750}
!11750 = !DILocalVariable(name: "Line", arg: 1, scope: !11748, file: !6883, line: 710, type: !208)
!11751 = !DILocation(line: 0, scope: !11748)
!11752 = !DILocation(line: 712, column: 21, scope: !11748)
!11753 = !DILocation(line: 0, scope: !11707, inlinedAt: !11754)
!11754 = distinct !DILocation(line: 712, column: 76, scope: !11748)
!11755 = !DILocation(line: 380, column: 4, scope: !11707, inlinedAt: !11754)
!11756 = !DILocation(line: 0, scope: !11715, inlinedAt: !11757)
!11757 = distinct !DILocation(line: 712, column: 76, scope: !11748)
!11758 = !DILocation(line: 414, column: 7, scope: !11715, inlinedAt: !11757)
!11759 = !DILocation(line: 712, column: 73, scope: !11748)
!11760 = !DILocation(line: 712, column: 3, scope: !11748)
!11761 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11762, file: !11762, line: 910, type: !11763, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11765)
!11762 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11763 = !DISubroutineType(types: !11764)
!11764 = !{null, !1442, !208}
!11765 = !{!11766, !11767}
!11766 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11761, file: !11762, line: 910, type: !1442)
!11767 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11761, file: !11762, line: 910, type: !208)
!11768 = !DILocation(line: 0, scope: !11761)
!11769 = !DILocation(line: 912, column: 3, scope: !11761)
!11770 = !DILocation(line: 913, column: 1, scope: !11761)
!11771 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11762, file: !11762, line: 823, type: !11772, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11774)
!11772 = !DISubroutineType(types: !11773)
!11773 = !{!208, !1442}
!11774 = !{!11775}
!11775 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11771, file: !11762, line: 823, type: !1442)
!11776 = !DILocation(line: 0, scope: !11771)
!11777 = !DILocation(line: 825, column: 21, scope: !11771)
!11778 = !DILocation(line: 825, column: 3, scope: !11771)
!11779 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11762, file: !11762, line: 812, type: !11763, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11780)
!11780 = !{!11781, !11782}
!11781 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11779, file: !11762, line: 812, type: !1442)
!11782 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11779, file: !11762, line: 812, type: !208)
!11783 = !DILocation(line: 0, scope: !11779)
!11784 = !DILocation(line: 814, column: 3, scope: !11779)
!11785 = !DILocation(line: 815, column: 1, scope: !11779)
!11786 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11762, file: !11762, line: 771, type: !11772, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11787)
!11787 = !{!11788}
!11788 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11786, file: !11762, line: 771, type: !1442)
!11789 = !DILocation(line: 0, scope: !11786)
!11790 = !DILocation(line: 773, column: 21, scope: !11786)
!11791 = !DILocation(line: 773, column: 3, scope: !11786)
!11792 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1509, file: !1509, line: 47, type: !11793, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11795)
!11793 = !DISubroutineType(types: !11794)
!11794 = !{!125, !1385, !387}
!11795 = !{!11796, !11797}
!11796 = !DILocalVariable(name: "flags", arg: 1, scope: !11792, file: !1509, line: 47, type: !1385)
!11797 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11792, file: !1509, line: 47, type: !387)
!11798 = !DILocation(line: 0, scope: !11792)
!11799 = !DILocation(line: 50, column: 13, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11792, file: !1509, line: 50, column: 6)
!11801 = !DILocation(line: 50, column: 28, scope: !11800)
!11802 = !DILocation(line: 50, column: 6, scope: !11792)
!11803 = !DILocation(line: 53, column: 11, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11800, file: !1509, line: 50, column: 34)
!11805 = !DILocation(line: 55, column: 14, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11804, file: !1509, line: 55, column: 7)
!11807 = !DILocation(line: 55, column: 35, scope: !11806)
!11808 = !DILocation(line: 55, column: 7, scope: !11804)
!11809 = !DILocation(line: 56, column: 14, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11811, file: !1509, line: 56, column: 8)
!11811 = distinct !DILexicalBlock(scope: !11806, file: !1509, line: 55, column: 41)
!11812 = !DILocation(line: 56, column: 8, scope: !11811)
!11813 = !DILocation(line: 0, scope: !11806)
!11814 = !DILocation(line: 66, column: 14, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11804, file: !1509, line: 66, column: 7)
!11816 = !DILocation(line: 66, column: 30, scope: !11815)
!11817 = !DILocation(line: 66, column: 7, scope: !11804)
!11818 = !DILocation(line: 67, column: 12, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11815, file: !1509, line: 66, column: 36)
!11820 = !DILocation(line: 68, column: 3, scope: !11819)
!11821 = !DILocation(line: 68, column: 21, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11815, file: !1509, line: 68, column: 14)
!11823 = !DILocation(line: 68, column: 39, scope: !11822)
!11824 = !DILocation(line: 68, column: 14, scope: !11815)
!11825 = !DILocation(line: 69, column: 12, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11822, file: !1509, line: 68, column: 45)
!11827 = !DILocation(line: 70, column: 3, scope: !11826)
!11828 = !DILocation(line: 72, column: 21, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11800, file: !1509, line: 72, column: 14)
!11830 = !DILocation(line: 72, column: 35, scope: !11829)
!11831 = !DILocation(line: 72, column: 14, scope: !11800)
!11832 = !DILocation(line: 77, column: 14, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11834, file: !1509, line: 77, column: 7)
!11834 = distinct !DILexicalBlock(scope: !11829, file: !1509, line: 72, column: 41)
!11835 = !DILocation(line: 77, column: 30, scope: !11833)
!11836 = !DILocation(line: 77, column: 7, scope: !11834)
!11837 = !DILocation(line: 0, scope: !11800)
!11838 = !DILocation(line: 90, column: 1, scope: !11792)
!11839 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1509, file: !1509, line: 157, type: !11840, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11842)
!11840 = !DISubroutineType(types: !11841)
!11841 = !{null, !1369, !125, !125, !125}
!11842 = !{!11843, !11844, !11845, !11846, !11847, !11848, !11849, !11850, !11851, !11852, !11853}
!11843 = !DILocalVariable(name: "dev", arg: 1, scope: !11839, file: !1509, line: 157, type: !1369)
!11844 = !DILocalVariable(name: "pin", arg: 2, scope: !11839, file: !1509, line: 157, type: !125)
!11845 = !DILocalVariable(name: "conf", arg: 3, scope: !11839, file: !1509, line: 158, type: !125)
!11846 = !DILocalVariable(name: "func", arg: 4, scope: !11839, file: !1509, line: 158, type: !125)
!11847 = !DILocalVariable(name: "cfg", scope: !11839, file: !1509, line: 160, type: !11364)
!11848 = !DILocalVariable(name: "gpio", scope: !11839, file: !1509, line: 161, type: !1442)
!11849 = !DILocalVariable(name: "pin_ll", scope: !11839, file: !1509, line: 163, type: !125)
!11850 = !DILocalVariable(name: "mode", scope: !11839, file: !1509, line: 227, type: !32)
!11851 = !DILocalVariable(name: "otype", scope: !11839, file: !1509, line: 227, type: !32)
!11852 = !DILocalVariable(name: "ospeed", scope: !11839, file: !1509, line: 227, type: !32)
!11853 = !DILocalVariable(name: "pupd", scope: !11839, file: !1509, line: 227, type: !32)
!11854 = !DILocation(line: 0, scope: !11839)
!11855 = !DILocation(line: 160, column: 45, scope: !11839)
!11856 = !DILocation(line: 161, column: 44, scope: !11839)
!11857 = !DILocation(line: 163, column: 15, scope: !11839)
!11858 = !DILocation(line: 229, column: 14, scope: !11839)
!11859 = !DILocation(line: 246, column: 47, scope: !11839)
!11860 = !DILocation(line: 246, column: 2, scope: !11839)
!11861 = !DILocation(line: 248, column: 43, scope: !11839)
!11862 = !DILocation(line: 248, column: 2, scope: !11839)
!11863 = !DILocation(line: 250, column: 40, scope: !11839)
!11864 = !DILocation(line: 250, column: 2, scope: !11839)
!11865 = !DILocation(line: 252, column: 11, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11839, file: !1509, line: 252, column: 6)
!11867 = !DILocation(line: 252, column: 6, scope: !11839)
!11868 = !DILocation(line: 253, column: 11, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11870, file: !1509, line: 253, column: 7)
!11870 = distinct !DILexicalBlock(scope: !11866, file: !1509, line: 252, column: 36)
!11871 = !DILocation(line: 253, column: 7, scope: !11870)
!11872 = !DILocation(line: 254, column: 4, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11869, file: !1509, line: 253, column: 16)
!11874 = !DILocation(line: 255, column: 3, scope: !11873)
!11875 = !DILocation(line: 256, column: 4, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11869, file: !1509, line: 255, column: 10)
!11877 = !DILocation(line: 260, column: 40, scope: !11839)
!11878 = !DILocation(line: 260, column: 2, scope: !11839)
!11879 = !DILocation(line: 265, column: 1, scope: !11839)
!11880 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1509, file: !1509, line: 137, type: !11687, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11881)
!11881 = !{!11882, !11883}
!11882 = !DILocalVariable(name: "pin", arg: 1, scope: !11880, file: !1509, line: 137, type: !125)
!11883 = !DILocalVariable(name: "pinval", scope: !11880, file: !1509, line: 139, type: !208)
!11884 = !DILocation(line: 0, scope: !11880)
!11885 = !DILocation(line: 149, column: 13, scope: !11880)
!11886 = !DILocation(line: 151, column: 2, scope: !11880)
!11887 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11762, file: !11762, line: 342, type: !11888, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11890)
!11888 = !DISubroutineType(types: !11889)
!11889 = !{null, !1442, !208, !208}
!11890 = !{!11891, !11892, !11893}
!11891 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11887, file: !11762, line: 342, type: !1442)
!11892 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11887, file: !11762, line: 342, type: !208)
!11893 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11887, file: !11762, line: 342, type: !208)
!11894 = !DILocation(line: 0, scope: !11887)
!11895 = !DILocation(line: 344, column: 3, scope: !11887)
!11896 = !DILocation(line: 345, column: 1, scope: !11887)
!11897 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11762, file: !11762, line: 413, type: !11888, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11898)
!11898 = !{!11899, !11900, !11901}
!11899 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11897, file: !11762, line: 413, type: !1442)
!11900 = !DILocalVariable(name: "Pin", arg: 2, scope: !11897, file: !11762, line: 413, type: !208)
!11901 = !DILocalVariable(name: "Speed", arg: 3, scope: !11897, file: !11762, line: 413, type: !208)
!11902 = !DILocation(line: 0, scope: !11897)
!11903 = !DILocation(line: 415, column: 3, scope: !11897)
!11904 = !DILocation(line: 0, scope: !11707, inlinedAt: !11905)
!11905 = distinct !DILocation(line: 415, column: 3, scope: !11897)
!11906 = !DILocation(line: 380, column: 4, scope: !11707, inlinedAt: !11905)
!11907 = !DILocation(line: 0, scope: !11715, inlinedAt: !11908)
!11908 = distinct !DILocation(line: 415, column: 3, scope: !11897)
!11909 = !DILocation(line: 414, column: 7, scope: !11715, inlinedAt: !11908)
!11910 = !DILocation(line: 0, scope: !11707, inlinedAt: !11911)
!11911 = distinct !DILocation(line: 415, column: 3, scope: !11897)
!11912 = !DILocation(line: 0, scope: !11715, inlinedAt: !11913)
!11913 = distinct !DILocation(line: 415, column: 3, scope: !11897)
!11914 = !DILocation(line: 417, column: 1, scope: !11897)
!11915 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11762, file: !11762, line: 484, type: !11888, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11916)
!11916 = !{!11917, !11918, !11919}
!11917 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11915, file: !11762, line: 484, type: !1442)
!11918 = !DILocalVariable(name: "Pin", arg: 2, scope: !11915, file: !11762, line: 484, type: !208)
!11919 = !DILocalVariable(name: "Pull", arg: 3, scope: !11915, file: !11762, line: 484, type: !208)
!11920 = !DILocation(line: 0, scope: !11915)
!11921 = !DILocation(line: 486, column: 3, scope: !11915)
!11922 = !DILocation(line: 0, scope: !11707, inlinedAt: !11923)
!11923 = distinct !DILocation(line: 486, column: 3, scope: !11915)
!11924 = !DILocation(line: 380, column: 4, scope: !11707, inlinedAt: !11923)
!11925 = !DILocation(line: 0, scope: !11715, inlinedAt: !11926)
!11926 = distinct !DILocation(line: 486, column: 3, scope: !11915)
!11927 = !DILocation(line: 414, column: 7, scope: !11715, inlinedAt: !11926)
!11928 = !DILocation(line: 0, scope: !11707, inlinedAt: !11929)
!11929 = distinct !DILocation(line: 486, column: 3, scope: !11915)
!11930 = !DILocation(line: 0, scope: !11715, inlinedAt: !11931)
!11931 = distinct !DILocation(line: 486, column: 3, scope: !11915)
!11932 = !DILocation(line: 487, column: 1, scope: !11915)
!11933 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11762, file: !11762, line: 556, type: !11888, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11934)
!11934 = !{!11935, !11936, !11937}
!11935 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11933, file: !11762, line: 556, type: !1442)
!11936 = !DILocalVariable(name: "Pin", arg: 2, scope: !11933, file: !11762, line: 556, type: !208)
!11937 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11933, file: !11762, line: 556, type: !208)
!11938 = !DILocation(line: 0, scope: !11933)
!11939 = !DILocation(line: 558, column: 3, scope: !11933)
!11940 = !DILocation(line: 0, scope: !11707, inlinedAt: !11941)
!11941 = distinct !DILocation(line: 558, column: 3, scope: !11933)
!11942 = !DILocation(line: 380, column: 4, scope: !11707, inlinedAt: !11941)
!11943 = !DILocation(line: 0, scope: !11715, inlinedAt: !11944)
!11944 = distinct !DILocation(line: 558, column: 3, scope: !11933)
!11945 = !DILocation(line: 414, column: 7, scope: !11715, inlinedAt: !11944)
!11946 = !DILocation(line: 0, scope: !11707, inlinedAt: !11947)
!11947 = distinct !DILocation(line: 558, column: 3, scope: !11933)
!11948 = !DILocation(line: 0, scope: !11715, inlinedAt: !11949)
!11949 = distinct !DILocation(line: 558, column: 3, scope: !11933)
!11950 = !DILocation(line: 560, column: 1, scope: !11933)
!11951 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11762, file: !11762, line: 633, type: !11888, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11952)
!11952 = !{!11953, !11954, !11955}
!11953 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11951, file: !11762, line: 633, type: !1442)
!11954 = !DILocalVariable(name: "Pin", arg: 2, scope: !11951, file: !11762, line: 633, type: !208)
!11955 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11951, file: !11762, line: 633, type: !208)
!11956 = !DILocation(line: 0, scope: !11951)
!11957 = !DILocation(line: 635, column: 3, scope: !11951)
!11958 = !DILocation(line: 0, scope: !11707, inlinedAt: !11959)
!11959 = distinct !DILocation(line: 635, column: 3, scope: !11951)
!11960 = !DILocation(line: 380, column: 4, scope: !11707, inlinedAt: !11959)
!11961 = !DILocation(line: 0, scope: !11715, inlinedAt: !11962)
!11962 = distinct !DILocation(line: 635, column: 3, scope: !11951)
!11963 = !DILocation(line: 414, column: 7, scope: !11715, inlinedAt: !11962)
!11964 = !DILocation(line: 0, scope: !11707, inlinedAt: !11965)
!11965 = distinct !DILocation(line: 635, column: 3, scope: !11951)
!11966 = !DILocation(line: 0, scope: !11715, inlinedAt: !11967)
!11967 = distinct !DILocation(line: 635, column: 3, scope: !11951)
!11968 = !DILocation(line: 637, column: 1, scope: !11951)
!11969 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11762, file: !11762, line: 273, type: !11888, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11970)
!11970 = !{!11971, !11972, !11973}
!11971 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11969, file: !11762, line: 273, type: !1442)
!11972 = !DILocalVariable(name: "Pin", arg: 2, scope: !11969, file: !11762, line: 273, type: !208)
!11973 = !DILocalVariable(name: "Mode", arg: 3, scope: !11969, file: !11762, line: 273, type: !208)
!11974 = !DILocation(line: 0, scope: !11969)
!11975 = !DILocation(line: 275, column: 3, scope: !11969)
!11976 = !DILocation(line: 0, scope: !11707, inlinedAt: !11977)
!11977 = distinct !DILocation(line: 275, column: 3, scope: !11969)
!11978 = !DILocation(line: 380, column: 4, scope: !11707, inlinedAt: !11977)
!11979 = !DILocation(line: 0, scope: !11715, inlinedAt: !11980)
!11980 = distinct !DILocation(line: 275, column: 3, scope: !11969)
!11981 = !DILocation(line: 414, column: 7, scope: !11715, inlinedAt: !11980)
!11982 = !DILocation(line: 0, scope: !11707, inlinedAt: !11983)
!11983 = distinct !DILocation(line: 275, column: 3, scope: !11969)
!11984 = !DILocation(line: 0, scope: !11715, inlinedAt: !11985)
!11985 = distinct !DILocation(line: 275, column: 3, scope: !11969)
!11986 = !DILocation(line: 276, column: 1, scope: !11969)
!11987 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1509, file: !1509, line: 698, type: !1522, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !11988)
!11988 = !{!11989, !11990, !11991}
!11989 = !DILocalVariable(name: "dev", arg: 1, scope: !11987, file: !1509, line: 698, type: !1369)
!11990 = !DILocalVariable(name: "data", scope: !11987, file: !1509, line: 700, type: !11431)
!11991 = !DILocalVariable(name: "ret", scope: !11987, file: !1509, line: 701, type: !125)
!11992 = !DILocation(line: 0, scope: !11987)
!11993 = !DILocation(line: 700, column: 38, scope: !11987)
!11994 = !DILocation(line: 703, column: 8, scope: !11987)
!11995 = !DILocation(line: 703, column: 12, scope: !11987)
!11996 = !DILocation(line: 705, column: 7, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11987, file: !1509, line: 705, column: 6)
!11998 = !DILocation(line: 705, column: 6, scope: !11987)
!11999 = !DILocation(line: 722, column: 8, scope: !11987)
!12000 = !DILocation(line: 723, column: 10, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11987, file: !1509, line: 723, column: 6)
!12002 = !DILocation(line: 723, column: 6, scope: !11987)
!12003 = !DILocation(line: 731, column: 1, scope: !11987)
!12004 = distinct !DISubprogram(name: "device_is_ready", scope: !4231, file: !4231, line: 47, type: !12005, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !12007)
!12005 = !DISubroutineType(types: !12006)
!12006 = !{!153, !1369}
!12007 = !{!12008}
!12008 = !DILocalVariable(name: "dev", arg: 1, scope: !12004, file: !4231, line: 47, type: !1369)
!12009 = !DILocation(line: 0, scope: !12004)
!12010 = !DILocation(line: 55, column: 2, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12004, file: !4231, line: 55, column: 2)
!12012 = !{i64 2154357533}
!12013 = !DILocation(line: 56, column: 9, scope: !12004)
!12014 = !DILocation(line: 56, column: 2, scope: !12004)
!12015 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1509, file: !1509, line: 270, type: !12016, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !12018)
!12016 = !DISubroutineType(types: !12017)
!12017 = !{!125, !1369, !153}
!12018 = !{!12019, !12020, !12021, !12022, !12023}
!12019 = !DILocalVariable(name: "dev", arg: 1, scope: !12015, file: !1509, line: 270, type: !1369)
!12020 = !DILocalVariable(name: "on", arg: 2, scope: !12015, file: !1509, line: 270, type: !153)
!12021 = !DILocalVariable(name: "cfg", scope: !12015, file: !1509, line: 272, type: !11364)
!12022 = !DILocalVariable(name: "ret", scope: !12015, file: !1509, line: 273, type: !125)
!12023 = !DILocalVariable(name: "clk", scope: !12015, file: !1509, line: 278, type: !11654)
!12024 = !DILocation(line: 0, scope: !12015)
!12025 = !DILocation(line: 272, column: 45, scope: !12015)
!12026 = !DILocation(line: 282, column: 38, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12028, file: !1509, line: 280, column: 10)
!12028 = distinct !DILexicalBlock(scope: !12015, file: !1509, line: 280, column: 6)
!12029 = !DILocation(line: 282, column: 6, scope: !12027)
!12030 = !DILocation(line: 281, column: 9, scope: !12027)
!12031 = !DILocation(line: 293, column: 1, scope: !12015)
!12032 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !12005, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !12033)
!12033 = !{!12034}
!12034 = !DILocalVariable(name: "dev", arg: 1, scope: !12032, file: !137, line: 730, type: !1369)
!12035 = !DILocation(line: 0, scope: !12032)
!12036 = !DILocation(line: 732, column: 9, scope: !12032)
!12037 = !DILocation(line: 732, column: 2, scope: !12032)
!12038 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1509, file: !1509, line: 496, type: !12039, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1340, retainedNodes: !12041)
!12039 = !DISubroutineType(types: !12040)
!12040 = !{!125, !1369, !125, !125, !125}
!12041 = !{!12042, !12043, !12044, !12045, !12046, !12047}
!12042 = !DILocalVariable(name: "dev", arg: 1, scope: !12038, file: !1509, line: 496, type: !1369)
!12043 = !DILocalVariable(name: "pin", arg: 2, scope: !12038, file: !1509, line: 496, type: !125)
!12044 = !DILocalVariable(name: "conf", arg: 3, scope: !12038, file: !1509, line: 496, type: !125)
!12045 = !DILocalVariable(name: "func", arg: 4, scope: !12038, file: !1509, line: 496, type: !125)
!12046 = !DILocalVariable(name: "ret", scope: !12038, file: !1509, line: 498, type: !125)
!12047 = !DILocalVariable(name: "gpio_out", scope: !12048, file: !1509, line: 508, type: !208)
!12048 = distinct !DILexicalBlock(scope: !12049, file: !1509, line: 507, column: 27)
!12049 = distinct !DILexicalBlock(scope: !12038, file: !1509, line: 507, column: 6)
!12050 = !DILocation(line: 0, scope: !12038)
!12051 = !DILocation(line: 505, column: 2, scope: !12038)
!12052 = !DILocation(line: 507, column: 11, scope: !12049)
!12053 = !DILocation(line: 507, column: 6, scope: !12038)
!12054 = !DILocation(line: 508, column: 28, scope: !12048)
!12055 = !DILocation(line: 0, scope: !12048)
!12056 = !DILocation(line: 510, column: 16, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12048, file: !1509, line: 510, column: 7)
!12058 = !DILocation(line: 0, scope: !12057)
!12059 = !DILocation(line: 510, column: 7, scope: !12048)
!12060 = !DILocation(line: 511, column: 4, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12057, file: !1509, line: 510, column: 32)
!12062 = !DILocation(line: 512, column: 3, scope: !12061)
!12063 = !DILocation(line: 513, column: 4, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12065, file: !1509, line: 512, column: 39)
!12065 = distinct !DILexicalBlock(scope: !12057, file: !1509, line: 512, column: 14)
!12066 = !DILocation(line: 514, column: 3, scope: !12064)
!12067 = !DILocation(line: 518, column: 1, scope: !12038)
!12068 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1787, file: !1787, line: 526, type: !1688, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12069)
!12069 = !{!12070, !12071, !12072}
!12070 = !DILocalVariable(name: "dev", arg: 1, scope: !12068, file: !1787, line: 526, type: !1690)
!12071 = !DILocalVariable(name: "c", arg: 2, scope: !12068, file: !1787, line: 526, type: !1119)
!12072 = !DILocalVariable(name: "config", scope: !12068, file: !1787, line: 528, type: !12073)
!12073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!12074 = !DILocation(line: 0, scope: !12068)
!12075 = !DILocation(line: 528, column: 48, scope: !12068)
!12076 = !DILocation(line: 531, column: 40, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12068, file: !1787, line: 531, column: 6)
!12078 = !DILocation(line: 531, column: 6, scope: !12077)
!12079 = !DILocation(line: 531, column: 6, scope: !12068)
!12080 = !DILocation(line: 532, column: 34, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12077, file: !1787, line: 531, column: 48)
!12082 = !DILocation(line: 532, column: 3, scope: !12081)
!12083 = !DILocation(line: 533, column: 2, scope: !12081)
!12084 = !DILocation(line: 539, column: 42, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12068, file: !1787, line: 539, column: 6)
!12086 = !DILocation(line: 539, column: 7, scope: !12085)
!12087 = !DILocation(line: 539, column: 6, scope: !12068)
!12088 = !DILocation(line: 543, column: 52, scope: !12068)
!12089 = !DILocation(line: 543, column: 22, scope: !12068)
!12090 = !DILocation(line: 543, column: 5, scope: !12068)
!12091 = !DILocation(line: 545, column: 2, scope: !12068)
!12092 = !DILocation(line: 546, column: 1, scope: !12068)
!12093 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1787, file: !1787, line: 548, type: !1707, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12094)
!12094 = !{!12095, !12096, !12097, !12098}
!12095 = !DILocalVariable(name: "dev", arg: 1, scope: !12093, file: !1787, line: 548, type: !1690)
!12096 = !DILocalVariable(name: "c", arg: 2, scope: !12093, file: !1787, line: 549, type: !151)
!12097 = !DILocalVariable(name: "config", scope: !12093, file: !1787, line: 551, type: !12073)
!12098 = !DILocalVariable(name: "key", scope: !12093, file: !1787, line: 555, type: !32)
!12099 = !DILocation(line: 0, scope: !12093)
!12100 = !DILocation(line: 551, column: 48, scope: !12093)
!12101 = !DILocation(line: 562, column: 2, scope: !12093)
!12102 = !DILocation(line: 563, column: 41, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12104, file: !1787, line: 563, column: 7)
!12104 = distinct !DILexicalBlock(scope: !12093, file: !1787, line: 562, column: 12)
!12105 = !DILocation(line: 563, column: 7, scope: !12103)
!12106 = !DILocation(line: 563, column: 7, scope: !12104)
!12107 = !DILocation(line: 55, column: 2, scope: !12108, inlinedAt: !12112)
!12108 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6862, file: !6862, line: 42, type: !6863, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12109)
!12109 = !{!12110, !12111}
!12110 = !DILocalVariable(name: "key", scope: !12108, file: !6862, line: 44, type: !32)
!12111 = !DILocalVariable(name: "tmp", scope: !12108, file: !6862, line: 53, type: !32)
!12112 = distinct !DILocation(line: 564, column: 10, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12103, file: !1787, line: 563, column: 49)
!12114 = !{i64 2087903}
!12115 = !DILocation(line: 0, scope: !12108, inlinedAt: !12112)
!12116 = !DILocation(line: 565, column: 42, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12113, file: !1787, line: 565, column: 8)
!12118 = !DILocation(line: 565, column: 8, scope: !12117)
!12119 = !DILocation(line: 565, column: 8, scope: !12113)
!12120 = !DILocalVariable(name: "key", arg: 1, scope: !12121, file: !6862, line: 84, type: !32)
!12121 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6862, file: !6862, line: 84, type: !6873, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12122)
!12122 = !{!12120}
!12123 = !DILocation(line: 0, scope: !12121, inlinedAt: !12124)
!12124 = distinct !DILocation(line: 568, column: 4, scope: !12113)
!12125 = !DILocation(line: 95, column: 2, scope: !12121, inlinedAt: !12124)
!12126 = !{i64 2088720}
!12127 = !DILocation(line: 569, column: 3, scope: !12113)
!12128 = distinct !{!12128, !12101, !12129}
!12129 = !DILocation(line: 570, column: 2, scope: !12093)
!12130 = !DILocation(line: 592, column: 33, scope: !12093)
!12131 = !DILocation(line: 592, column: 2, scope: !12093)
!12132 = !DILocation(line: 0, scope: !12121, inlinedAt: !12133)
!12133 = distinct !DILocation(line: 593, column: 2, scope: !12093)
!12134 = !DILocation(line: 95, column: 2, scope: !12121, inlinedAt: !12133)
!12135 = !DILocation(line: 594, column: 1, scope: !12093)
!12136 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1787, file: !1787, line: 596, type: !1711, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12137)
!12137 = !{!12138, !12139, !12140}
!12138 = !DILocalVariable(name: "dev", arg: 1, scope: !12136, file: !1787, line: 596, type: !1690)
!12139 = !DILocalVariable(name: "config", scope: !12136, file: !1787, line: 598, type: !12073)
!12140 = !DILocalVariable(name: "err", scope: !12136, file: !1787, line: 599, type: !208)
!12141 = !DILocation(line: 0, scope: !12136)
!12142 = !DILocation(line: 598, column: 48, scope: !12136)
!12143 = !DILocation(line: 606, column: 40, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12136, file: !1787, line: 606, column: 6)
!12145 = !DILocation(line: 606, column: 6, scope: !12144)
!12146 = !DILocation(line: 606, column: 6, scope: !12136)
!12147 = !DILocation(line: 610, column: 39, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12136, file: !1787, line: 610, column: 6)
!12149 = !DILocation(line: 610, column: 6, scope: !12148)
!12150 = !DILocation(line: 610, column: 6, scope: !12136)
!12151 = !DILocation(line: 614, column: 39, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12136, file: !1787, line: 614, column: 6)
!12153 = !DILocation(line: 614, column: 6, scope: !12152)
!12154 = !DILocation(line: 614, column: 6, scope: !12136)
!12155 = !DILocation(line: 619, column: 40, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12136, file: !1787, line: 619, column: 6)
!12157 = !DILocation(line: 619, column: 6, scope: !12156)
!12158 = !DILocation(line: 619, column: 6, scope: !12136)
!12159 = !DILocation(line: 623, column: 10, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12136, file: !1787, line: 623, column: 6)
!12161 = !DILocation(line: 623, column: 6, scope: !12136)
!12162 = !DILocation(line: 624, column: 34, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12160, file: !1787, line: 623, column: 24)
!12164 = !DILocation(line: 624, column: 3, scope: !12163)
!12165 = !DILocation(line: 625, column: 2, scope: !12163)
!12166 = !DILocation(line: 632, column: 10, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12136, file: !1787, line: 632, column: 6)
!12168 = !DILocation(line: 632, column: 6, scope: !12136)
!12169 = !DILocation(line: 633, column: 34, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12167, file: !1787, line: 632, column: 32)
!12171 = !DILocation(line: 633, column: 3, scope: !12170)
!12172 = !DILocation(line: 634, column: 2, scope: !12170)
!12173 = !DILocation(line: 636, column: 10, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12136, file: !1787, line: 636, column: 6)
!12175 = !DILocation(line: 636, column: 6, scope: !12136)
!12176 = !DILocation(line: 637, column: 33, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12174, file: !1787, line: 636, column: 31)
!12178 = !DILocation(line: 637, column: 3, scope: !12177)
!12179 = !DILocation(line: 638, column: 2, scope: !12177)
!12180 = !DILocation(line: 640, column: 10, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12136, file: !1787, line: 640, column: 6)
!12182 = !DILocation(line: 640, column: 6, scope: !12136)
!12183 = !DILocation(line: 641, column: 33, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12181, file: !1787, line: 640, column: 32)
!12185 = !DILocation(line: 641, column: 3, scope: !12184)
!12186 = !DILocation(line: 642, column: 2, scope: !12184)
!12187 = !DILocation(line: 646, column: 32, scope: !12136)
!12188 = !DILocation(line: 646, column: 2, scope: !12136)
!12189 = !DILocation(line: 648, column: 2, scope: !12136)
!12190 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1787, file: !1787, line: 419, type: !1715, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12191)
!12191 = !{!12192, !12193, !12194, !12195, !12197, !12198, !12199, !12200}
!12192 = !DILocalVariable(name: "dev", arg: 1, scope: !12190, file: !1787, line: 419, type: !1690)
!12193 = !DILocalVariable(name: "cfg", arg: 2, scope: !12190, file: !1787, line: 420, type: !1717)
!12194 = !DILocalVariable(name: "config", scope: !12190, file: !1787, line: 422, type: !12073)
!12195 = !DILocalVariable(name: "data", scope: !12190, file: !1787, line: 423, type: !12196)
!12196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!12197 = !DILocalVariable(name: "parity", scope: !12190, file: !1787, line: 424, type: !8597)
!12198 = !DILocalVariable(name: "stopbits", scope: !12190, file: !1787, line: 425, type: !8597)
!12199 = !DILocalVariable(name: "databits", scope: !12190, file: !1787, line: 426, type: !8597)
!12200 = !DILocalVariable(name: "flowctrl", scope: !12190, file: !1787, line: 428, type: !8597)
!12201 = !DILocation(line: 0, scope: !12190)
!12202 = !DILocation(line: 422, column: 48, scope: !12190)
!12203 = !DILocation(line: 423, column: 38, scope: !12190)
!12204 = !DILocation(line: 424, column: 56, scope: !12190)
!12205 = !DILocation(line: 424, column: 51, scope: !12190)
!12206 = !DILocation(line: 424, column: 26, scope: !12190)
!12207 = !DILocation(line: 425, column: 60, scope: !12190)
!12208 = !DILocation(line: 425, column: 55, scope: !12190)
!12209 = !DILocation(line: 425, column: 28, scope: !12190)
!12210 = !DILocation(line: 426, column: 60, scope: !12190)
!12211 = !DILocation(line: 426, column: 55, scope: !12190)
!12212 = !DILocation(line: 426, column: 28, scope: !12190)
!12213 = !DILocation(line: 428, column: 58, scope: !12190)
!12214 = !DILocation(line: 428, column: 53, scope: !12190)
!12215 = !DILocation(line: 428, column: 28, scope: !12190)
!12216 = !DILocation(line: 431, column: 44, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12190, file: !1787, line: 431, column: 6)
!12218 = !DILocation(line: 438, column: 22, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12190, file: !1787, line: 437, column: 6)
!12220 = !DILocation(line: 437, column: 6, scope: !12190)
!12221 = !DILocation(line: 448, column: 6, scope: !12190)
!12222 = !DILocation(line: 465, column: 47, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12190, file: !1787, line: 465, column: 6)
!12224 = !DILocation(line: 475, column: 21, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12190, file: !1787, line: 475, column: 6)
!12226 = !DILocation(line: 475, column: 6, scope: !12190)
!12227 = !DILocation(line: 476, column: 8, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12229, file: !1787, line: 476, column: 7)
!12229 = distinct !DILexicalBlock(scope: !12225, file: !1787, line: 475, column: 49)
!12230 = !DILocation(line: 477, column: 34, scope: !12228)
!12231 = !DILocation(line: 476, column: 7, scope: !12229)
!12232 = !DILocation(line: 482, column: 27, scope: !12190)
!12233 = !DILocation(line: 482, column: 2, scope: !12190)
!12234 = !DILocation(line: 484, column: 16, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12190, file: !1787, line: 484, column: 6)
!12236 = !DILocation(line: 484, column: 13, scope: !12235)
!12237 = !DILocation(line: 484, column: 6, scope: !12190)
!12238 = !DILocation(line: 485, column: 3, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12235, file: !1787, line: 484, column: 44)
!12240 = !DILocation(line: 486, column: 2, scope: !12239)
!12241 = !DILocation(line: 488, column: 18, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12190, file: !1787, line: 488, column: 6)
!12243 = !DILocation(line: 488, column: 15, scope: !12242)
!12244 = !DILocation(line: 488, column: 6, scope: !12190)
!12245 = !DILocation(line: 489, column: 3, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12242, file: !1787, line: 488, column: 48)
!12247 = !DILocation(line: 490, column: 2, scope: !12246)
!12248 = !DILocation(line: 492, column: 18, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12190, file: !1787, line: 492, column: 6)
!12250 = !DILocation(line: 492, column: 15, scope: !12249)
!12251 = !DILocation(line: 492, column: 6, scope: !12190)
!12252 = !DILocation(line: 493, column: 3, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12249, file: !1787, line: 492, column: 48)
!12254 = !DILocation(line: 494, column: 2, scope: !12253)
!12255 = !DILocation(line: 496, column: 18, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12190, file: !1787, line: 496, column: 6)
!12257 = !DILocation(line: 496, column: 15, scope: !12256)
!12258 = !DILocation(line: 496, column: 6, scope: !12190)
!12259 = !DILocation(line: 497, column: 3, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12256, file: !1787, line: 496, column: 46)
!12261 = !DILocation(line: 498, column: 2, scope: !12260)
!12262 = !DILocation(line: 500, column: 11, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12190, file: !1787, line: 500, column: 6)
!12264 = !DILocation(line: 500, column: 29, scope: !12263)
!12265 = !DILocation(line: 500, column: 20, scope: !12263)
!12266 = !DILocation(line: 500, column: 6, scope: !12190)
!12267 = !DILocation(line: 501, column: 3, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12263, file: !1787, line: 500, column: 40)
!12269 = !DILocation(line: 502, column: 26, scope: !12268)
!12270 = !DILocation(line: 502, column: 19, scope: !12268)
!12271 = !DILocation(line: 503, column: 2, scope: !12268)
!12272 = !DILocation(line: 505, column: 26, scope: !12190)
!12273 = !DILocation(line: 505, column: 2, scope: !12190)
!12274 = !DILocation(line: 506, column: 2, scope: !12190)
!12275 = !DILocation(line: 507, column: 1, scope: !12190)
!12276 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1787, file: !1787, line: 509, type: !1728, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12277)
!12277 = !{!12278, !12279, !12280}
!12278 = !DILocalVariable(name: "dev", arg: 1, scope: !12276, file: !1787, line: 509, type: !1690)
!12279 = !DILocalVariable(name: "cfg", arg: 2, scope: !12276, file: !1787, line: 510, type: !1730)
!12280 = !DILocalVariable(name: "data", scope: !12276, file: !1787, line: 512, type: !12196)
!12281 = !DILocation(line: 0, scope: !12276)
!12282 = !DILocation(line: 512, column: 38, scope: !12276)
!12283 = !DILocation(line: 514, column: 24, scope: !12276)
!12284 = !DILocation(line: 514, column: 7, scope: !12276)
!12285 = !DILocation(line: 514, column: 16, scope: !12276)
!12286 = !DILocation(line: 515, column: 41, scope: !12276)
!12287 = !{i32 0, i32 1537}
!12288 = !DILocation(line: 515, column: 16, scope: !12276)
!12289 = !DILocation(line: 515, column: 7, scope: !12276)
!12290 = !DILocation(line: 515, column: 14, scope: !12276)
!12291 = !DILocation(line: 517, column: 3, scope: !12276)
!12292 = !{i32 0, i32 12289}
!12293 = !DILocation(line: 516, column: 19, scope: !12276)
!12294 = !DILocation(line: 516, column: 7, scope: !12276)
!12295 = !DILocation(line: 516, column: 17, scope: !12276)
!12296 = !DILocation(line: 519, column: 3, scope: !12276)
!12297 = !DILocation(line: 519, column: 33, scope: !12276)
!12298 = !DILocation(line: 518, column: 19, scope: !12276)
!12299 = !DILocation(line: 518, column: 7, scope: !12276)
!12300 = !DILocation(line: 518, column: 17, scope: !12276)
!12301 = !DILocation(line: 521, column: 3, scope: !12276)
!12302 = !{i32 0, i32 769}
!12303 = !DILocation(line: 520, column: 19, scope: !12276)
!12304 = !DILocation(line: 520, column: 7, scope: !12276)
!12305 = !DILocation(line: 520, column: 17, scope: !12276)
!12306 = !DILocation(line: 522, column: 2, scope: !12276)
!12307 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1787, file: !1787, line: 205, type: !12308, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12310)
!12308 = !DISubroutineType(types: !12309)
!12309 = !{!208, !1690}
!12310 = !{!12311, !12312}
!12311 = !DILocalVariable(name: "dev", arg: 1, scope: !12307, file: !1787, line: 205, type: !1690)
!12312 = !DILocalVariable(name: "config", scope: !12307, file: !1787, line: 207, type: !12073)
!12313 = !DILocation(line: 0, scope: !12307)
!12314 = !DILocation(line: 207, column: 48, scope: !12307)
!12315 = !DILocation(line: 209, column: 36, scope: !12307)
!12316 = !DILocation(line: 209, column: 9, scope: !12307)
!12317 = !DILocation(line: 209, column: 2, scope: !12307)
!12318 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1787, file: !1787, line: 270, type: !12319, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12321)
!12319 = !DISubroutineType(types: !12320)
!12320 = !{!1656, !208}
!12321 = !{!12322}
!12322 = !DILocalVariable(name: "parity", arg: 1, scope: !12318, file: !1787, line: 270, type: !208)
!12323 = !DILocation(line: 0, scope: !12318)
!12324 = !DILocation(line: 272, column: 2, scope: !12318)
!12325 = !DILocation(line: 281, column: 1, scope: !12318)
!12326 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1787, file: !1787, line: 220, type: !12308, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12327)
!12327 = !{!12328, !12329}
!12328 = !DILocalVariable(name: "dev", arg: 1, scope: !12326, file: !1787, line: 220, type: !1690)
!12329 = !DILocalVariable(name: "config", scope: !12326, file: !1787, line: 222, type: !12073)
!12330 = !DILocation(line: 0, scope: !12326)
!12331 = !DILocation(line: 222, column: 48, scope: !12326)
!12332 = !DILocation(line: 224, column: 44, scope: !12326)
!12333 = !DILocation(line: 224, column: 9, scope: !12326)
!12334 = !DILocation(line: 224, column: 2, scope: !12326)
!12335 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1787, file: !1787, line: 304, type: !12336, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12338)
!12336 = !DISubroutineType(types: !12337)
!12337 = !{!1670, !208}
!12338 = !{!12339}
!12339 = !DILocalVariable(name: "sb", arg: 1, scope: !12335, file: !1787, line: 304, type: !208)
!12340 = !DILocation(line: 0, scope: !12335)
!12341 = !DILocation(line: 306, column: 2, scope: !12335)
!12342 = !DILocation(line: 0, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12335, file: !1787, line: 306, column: 14)
!12344 = !DILocation(line: 323, column: 1, scope: !12335)
!12345 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1787, file: !1787, line: 235, type: !12308, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12346)
!12346 = !{!12347, !12348}
!12347 = !DILocalVariable(name: "dev", arg: 1, scope: !12345, file: !1787, line: 235, type: !1690)
!12348 = !DILocalVariable(name: "config", scope: !12345, file: !1787, line: 237, type: !12073)
!12349 = !DILocation(line: 0, scope: !12345)
!12350 = !DILocation(line: 237, column: 48, scope: !12345)
!12351 = !DILocation(line: 239, column: 39, scope: !12345)
!12352 = !DILocation(line: 239, column: 9, scope: !12345)
!12353 = !DILocation(line: 239, column: 2, scope: !12345)
!12354 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1787, file: !1787, line: 355, type: !12355, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12357)
!12355 = !DISubroutineType(types: !12356)
!12356 = !{!1663, !208, !208}
!12357 = !{!12358, !12359}
!12358 = !DILocalVariable(name: "db", arg: 1, scope: !12354, file: !1787, line: 355, type: !208)
!12359 = !DILocalVariable(name: "p", arg: 2, scope: !12354, file: !1787, line: 356, type: !208)
!12360 = !DILocation(line: 0, scope: !12354)
!12361 = !DILocation(line: 358, column: 2, scope: !12354)
!12362 = !DILocation(line: 384, column: 1, scope: !12354)
!12363 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1787, file: !1787, line: 250, type: !12308, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12364)
!12364 = !{!12365, !12366}
!12365 = !DILocalVariable(name: "dev", arg: 1, scope: !12363, file: !1787, line: 250, type: !1690)
!12366 = !DILocalVariable(name: "config", scope: !12363, file: !1787, line: 252, type: !12073)
!12367 = !DILocation(line: 0, scope: !12363)
!12368 = !DILocation(line: 252, column: 48, scope: !12363)
!12369 = !DILocation(line: 254, column: 40, scope: !12363)
!12370 = !DILocation(line: 254, column: 9, scope: !12363)
!12371 = !DILocation(line: 254, column: 2, scope: !12363)
!12372 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1787, file: !1787, line: 409, type: !12373, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12375)
!12373 = !DISubroutineType(types: !12374)
!12374 = !{!1676, !208}
!12375 = !{!12376}
!12376 = !DILocalVariable(name: "fc", arg: 1, scope: !12372, file: !1787, line: 409, type: !208)
!12377 = !DILocation(line: 0, scope: !12372)
!12378 = !DILocation(line: 411, column: 9, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12372, file: !1787, line: 411, column: 6)
!12380 = !DILocation(line: 416, column: 1, scope: !12372)
!12381 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12382, file: !12382, line: 967, type: !12383, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12385)
!12382 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12383 = !DISubroutineType(types: !12384)
!12384 = !{!208, !1731}
!12385 = !{!12386}
!12386 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12381, file: !12382, line: 967, type: !1731)
!12387 = !DILocation(line: 0, scope: !12381)
!12388 = !DILocation(line: 969, column: 21, scope: !12381)
!12389 = !DILocation(line: 969, column: 3, scope: !12381)
!12390 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12382, file: !12382, line: 601, type: !12383, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12391)
!12391 = !{!12392}
!12392 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12390, file: !12382, line: 601, type: !1731)
!12393 = !DILocation(line: 0, scope: !12390)
!12394 = !DILocation(line: 603, column: 21, scope: !12390)
!12395 = !DILocation(line: 603, column: 3, scope: !12390)
!12396 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12382, file: !12382, line: 820, type: !12383, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12397)
!12397 = !{!12398}
!12398 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12396, file: !12382, line: 820, type: !1731)
!12399 = !DILocation(line: 0, scope: !12396)
!12400 = !DILocation(line: 822, column: 21, scope: !12396)
!12401 = !DILocation(line: 822, column: 3, scope: !12396)
!12402 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12382, file: !12382, line: 547, type: !12383, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12403)
!12403 = !{!12404}
!12404 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12402, file: !12382, line: 547, type: !1731)
!12405 = !DILocation(line: 0, scope: !12402)
!12406 = !DILocation(line: 549, column: 21, scope: !12402)
!12407 = !DILocation(line: 549, column: 3, scope: !12402)
!12408 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1787, file: !1787, line: 257, type: !12409, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12411)
!12409 = !DISubroutineType(types: !12410)
!12410 = !{!208, !1656}
!12411 = !{!12412}
!12412 = !DILocalVariable(name: "parity", arg: 1, scope: !12408, file: !1787, line: 257, type: !1656)
!12413 = !DILocation(line: 0, scope: !12408)
!12414 = !DILocation(line: 259, column: 2, scope: !12408)
!12415 = !DILocation(line: 268, column: 1, scope: !12408)
!12416 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1787, file: !1787, line: 283, type: !12417, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12419)
!12417 = !DISubroutineType(types: !12418)
!12418 = !{!208, !1670}
!12419 = !{!12420}
!12420 = !DILocalVariable(name: "sb", arg: 1, scope: !12416, file: !1787, line: 283, type: !1670)
!12421 = !DILocation(line: 0, scope: !12416)
!12422 = !DILocation(line: 285, column: 2, scope: !12416)
!12423 = !DILocation(line: 0, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12416, file: !1787, line: 285, column: 14)
!12425 = !DILocation(line: 302, column: 1, scope: !12416)
!12426 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1787, file: !1787, line: 325, type: !12427, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12429)
!12427 = !DISubroutineType(types: !12428)
!12428 = !{!208, !1663, !1656}
!12429 = !{!12430, !12431}
!12430 = !DILocalVariable(name: "db", arg: 1, scope: !12426, file: !1787, line: 325, type: !1663)
!12431 = !DILocalVariable(name: "p", arg: 2, scope: !12426, file: !1787, line: 326, type: !1656)
!12432 = !DILocation(line: 0, scope: !12426)
!12433 = !DILocation(line: 328, column: 2, scope: !12426)
!12434 = !DILocation(line: 353, column: 1, scope: !12426)
!12435 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1787, file: !1787, line: 393, type: !12436, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12438)
!12436 = !DISubroutineType(types: !12437)
!12437 = !{!208, !1676}
!12438 = !{!12439}
!12439 = !DILocalVariable(name: "fc", arg: 1, scope: !12435, file: !1787, line: 393, type: !1676)
!12440 = !DILocation(line: 0, scope: !12435)
!12441 = !DILocation(line: 395, column: 9, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12435, file: !1787, line: 395, column: 6)
!12443 = !DILocation(line: 400, column: 1, scope: !12435)
!12444 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12382, file: !12382, line: 424, type: !12445, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12447)
!12445 = !DISubroutineType(types: !12446)
!12446 = !{null, !1731}
!12447 = !{!12448}
!12448 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12444, file: !12382, line: 424, type: !1731)
!12449 = !DILocation(line: 0, scope: !12444)
!12450 = !DILocation(line: 426, column: 3, scope: !12444)
!12451 = !DILocation(line: 427, column: 1, scope: !12444)
!12452 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1787, file: !1787, line: 197, type: !12453, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12455)
!12453 = !DISubroutineType(types: !12454)
!12454 = !{null, !1690, !208}
!12455 = !{!12456, !12457, !12458}
!12456 = !DILocalVariable(name: "dev", arg: 1, scope: !12452, file: !1787, line: 197, type: !1690)
!12457 = !DILocalVariable(name: "parity", arg: 2, scope: !12452, file: !1787, line: 198, type: !208)
!12458 = !DILocalVariable(name: "config", scope: !12452, file: !1787, line: 200, type: !12073)
!12459 = !DILocation(line: 0, scope: !12452)
!12460 = !DILocation(line: 200, column: 48, scope: !12452)
!12461 = !DILocation(line: 202, column: 29, scope: !12452)
!12462 = !DILocation(line: 202, column: 2, scope: !12452)
!12463 = !DILocation(line: 203, column: 1, scope: !12452)
!12464 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1787, file: !1787, line: 212, type: !12453, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12465)
!12465 = !{!12466, !12467, !12468}
!12466 = !DILocalVariable(name: "dev", arg: 1, scope: !12464, file: !1787, line: 212, type: !1690)
!12467 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12464, file: !1787, line: 213, type: !208)
!12468 = !DILocalVariable(name: "config", scope: !12464, file: !1787, line: 215, type: !12073)
!12469 = !DILocation(line: 0, scope: !12464)
!12470 = !DILocation(line: 215, column: 48, scope: !12464)
!12471 = !DILocation(line: 217, column: 37, scope: !12464)
!12472 = !DILocation(line: 217, column: 2, scope: !12464)
!12473 = !DILocation(line: 218, column: 1, scope: !12464)
!12474 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1787, file: !1787, line: 227, type: !12453, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12475)
!12475 = !{!12476, !12477, !12478}
!12476 = !DILocalVariable(name: "dev", arg: 1, scope: !12474, file: !1787, line: 227, type: !1690)
!12477 = !DILocalVariable(name: "databits", arg: 2, scope: !12474, file: !1787, line: 228, type: !208)
!12478 = !DILocalVariable(name: "config", scope: !12474, file: !1787, line: 230, type: !12073)
!12479 = !DILocation(line: 0, scope: !12474)
!12480 = !DILocation(line: 230, column: 48, scope: !12474)
!12481 = !DILocation(line: 232, column: 32, scope: !12474)
!12482 = !DILocation(line: 232, column: 2, scope: !12474)
!12483 = !DILocation(line: 233, column: 1, scope: !12474)
!12484 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1787, file: !1787, line: 242, type: !12453, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12485)
!12485 = !{!12486, !12487, !12488}
!12486 = !DILocalVariable(name: "dev", arg: 1, scope: !12484, file: !1787, line: 242, type: !1690)
!12487 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12484, file: !1787, line: 243, type: !208)
!12488 = !DILocalVariable(name: "config", scope: !12484, file: !1787, line: 245, type: !12073)
!12489 = !DILocation(line: 0, scope: !12484)
!12490 = !DILocation(line: 245, column: 48, scope: !12484)
!12491 = !DILocation(line: 247, column: 33, scope: !12484)
!12492 = !DILocation(line: 247, column: 2, scope: !12484)
!12493 = !DILocation(line: 248, column: 1, scope: !12484)
!12494 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1787, file: !1787, line: 107, type: !12453, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12495)
!12495 = !{!12496, !12497, !12498, !12499, !12500}
!12496 = !DILocalVariable(name: "dev", arg: 1, scope: !12494, file: !1787, line: 107, type: !1690)
!12497 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12494, file: !1787, line: 107, type: !208)
!12498 = !DILocalVariable(name: "config", scope: !12494, file: !1787, line: 109, type: !12073)
!12499 = !DILocalVariable(name: "data", scope: !12494, file: !1787, line: 110, type: !12196)
!12500 = !DILocalVariable(name: "clock_rate", scope: !12494, file: !1787, line: 112, type: !208)
!12501 = !DILocation(line: 0, scope: !12494)
!12502 = !DILocation(line: 109, column: 48, scope: !12494)
!12503 = !DILocation(line: 110, column: 38, scope: !12494)
!12504 = !DILocation(line: 112, column: 2, scope: !12494)
!12505 = !DILocation(line: 123, column: 36, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !1787, line: 123, column: 7)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !1787, line: 122, column: 9)
!12508 = distinct !DILexicalBlock(scope: !12494, file: !1787, line: 115, column: 6)
!12509 = !DILocation(line: 124, column: 42, scope: !12506)
!12510 = !DILocation(line: 123, column: 7, scope: !12506)
!12511 = !DILocation(line: 125, column: 22, scope: !12506)
!12512 = !DILocation(line: 123, column: 7, scope: !12507)
!12513 = !DILocation(line: 126, column: 4, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !1787, line: 126, column: 4)
!12515 = distinct !DILexicalBlock(scope: !12516, file: !1787, line: 126, column: 4)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !1787, line: 126, column: 4)
!12517 = distinct !DILexicalBlock(scope: !12518, file: !1787, line: 126, column: 4)
!12518 = distinct !DILexicalBlock(scope: !12506, file: !1787, line: 125, column: 27)
!12519 = !DILocation(line: 127, column: 4, scope: !12518)
!12520 = !DILocation(line: 176, column: 36, scope: !12494)
!12521 = !DILocation(line: 176, column: 3, scope: !12494)
!12522 = !DILocation(line: 179, column: 32, scope: !12494)
!12523 = !DILocation(line: 180, column: 10, scope: !12494)
!12524 = !DILocation(line: 179, column: 3, scope: !12494)
!12525 = !DILocation(line: 195, column: 1, scope: !12494)
!12526 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12382, file: !12382, line: 410, type: !12445, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12527)
!12527 = !{!12528}
!12528 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12526, file: !12382, line: 410, type: !1731)
!12529 = !DILocation(line: 0, scope: !12526)
!12530 = !DILocation(line: 412, column: 3, scope: !12526)
!12531 = !DILocation(line: 413, column: 1, scope: !12526)
!12532 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !963, file: !963, line: 216, type: !1764, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12533)
!12533 = !{!12534, !12535, !12536, !12537}
!12534 = !DILocalVariable(name: "dev", arg: 1, scope: !12532, file: !963, line: 216, type: !1690)
!12535 = !DILocalVariable(name: "sys", arg: 2, scope: !12532, file: !963, line: 217, type: !1058)
!12536 = !DILocalVariable(name: "rate", arg: 3, scope: !12532, file: !963, line: 218, type: !1014)
!12537 = !DILocalVariable(name: "api", scope: !12532, file: !963, line: 220, type: !1742)
!12538 = !DILocation(line: 0, scope: !12532)
!12539 = !DILocation(line: 221, column: 49, scope: !12532)
!12540 = !DILocation(line: 223, column: 11, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12532, file: !963, line: 223, column: 6)
!12542 = !DILocation(line: 223, column: 20, scope: !12541)
!12543 = !DILocation(line: 223, column: 6, scope: !12532)
!12544 = !DILocation(line: 227, column: 9, scope: !12532)
!12545 = !DILocation(line: 227, column: 2, scope: !12532)
!12546 = !DILocation(line: 228, column: 1, scope: !12532)
!12547 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3490, file: !3490, line: 175, type: !3491, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12548)
!12548 = !{!12549}
!12549 = !DILocalVariable(name: "level", arg: 1, scope: !12547, file: !3490, line: 175, type: !125)
!12550 = !DILocation(line: 0, scope: !12547)
!12551 = !DILocation(line: 177, column: 2, scope: !12547)
!12552 = !DILocation(line: 189, column: 1, scope: !12547)
!12553 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12382, file: !12382, line: 615, type: !12554, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12556)
!12554 = !DISubroutineType(types: !12555)
!12555 = !{null, !1731, !208}
!12556 = !{!12557, !12558}
!12557 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12553, file: !12382, line: 615, type: !1731)
!12558 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12553, file: !12382, line: 615, type: !208)
!12559 = !DILocation(line: 0, scope: !12553)
!12560 = !DILocation(line: 617, column: 3, scope: !12553)
!12561 = !DILocation(line: 618, column: 1, scope: !12553)
!12562 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12382, file: !12382, line: 1020, type: !12563, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12565)
!12563 = !DISubroutineType(types: !12564)
!12564 = !{null, !1731, !208, !208, !208}
!12565 = !{!12566, !12567, !12568, !12569}
!12566 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12562, file: !12382, line: 1020, type: !1731)
!12567 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12562, file: !12382, line: 1020, type: !208)
!12568 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12562, file: !12382, line: 1020, type: !208)
!12569 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12562, file: !12382, line: 1021, type: !208)
!12570 = !DILocation(line: 0, scope: !12562)
!12571 = !DILocation(line: 1029, column: 30, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12573, file: !12382, line: 1028, column: 3)
!12573 = distinct !DILexicalBlock(scope: !12562, file: !12382, line: 1023, column: 7)
!12574 = !DILocation(line: 1029, column: 19, scope: !12572)
!12575 = !DILocation(line: 1029, column: 13, scope: !12572)
!12576 = !DILocation(line: 1029, column: 17, scope: !12572)
!12577 = !DILocation(line: 1031, column: 1, scope: !12562)
!12578 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12382, file: !12382, line: 949, type: !12554, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12579)
!12579 = !{!12580, !12581}
!12580 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12578, file: !12382, line: 949, type: !1731)
!12581 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12578, file: !12382, line: 949, type: !208)
!12582 = !DILocation(line: 0, scope: !12578)
!12583 = !DILocation(line: 951, column: 3, scope: !12578)
!12584 = !DILocation(line: 952, column: 1, scope: !12578)
!12585 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12382, file: !12382, line: 588, type: !12554, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12586)
!12586 = !{!12587, !12588}
!12587 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12585, file: !12382, line: 588, type: !1731)
!12588 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12585, file: !12382, line: 588, type: !208)
!12589 = !DILocation(line: 0, scope: !12585)
!12590 = !DILocation(line: 590, column: 3, scope: !12585)
!12591 = !DILocation(line: 591, column: 1, scope: !12585)
!12592 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12382, file: !12382, line: 805, type: !12554, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12593)
!12593 = !{!12594, !12595}
!12594 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12592, file: !12382, line: 805, type: !1731)
!12595 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12592, file: !12382, line: 805, type: !208)
!12596 = !DILocation(line: 0, scope: !12592)
!12597 = !DILocation(line: 807, column: 3, scope: !12592)
!12598 = !DILocation(line: 808, column: 1, scope: !12592)
!12599 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12382, file: !12382, line: 532, type: !12554, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12600)
!12600 = !{!12601, !12602}
!12601 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12599, file: !12382, line: 532, type: !1731)
!12602 = !DILocalVariable(name: "Parity", arg: 2, scope: !12599, file: !12382, line: 532, type: !208)
!12603 = !DILocation(line: 0, scope: !12599)
!12604 = !DILocation(line: 534, column: 3, scope: !12599)
!12605 = !DILocation(line: 535, column: 1, scope: !12599)
!12606 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12382, file: !12382, line: 1770, type: !12383, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12607)
!12607 = !{!12608}
!12608 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12606, file: !12382, line: 1770, type: !1731)
!12609 = !DILocation(line: 0, scope: !12606)
!12610 = !DILocation(line: 1772, column: 11, scope: !12606)
!12611 = !DILocation(line: 1772, column: 46, scope: !12606)
!12612 = !DILocation(line: 1772, column: 3, scope: !12606)
!12613 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12382, file: !12382, line: 1737, type: !12383, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12614)
!12614 = !{!12615}
!12615 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12613, file: !12382, line: 1737, type: !1731)
!12616 = !DILocation(line: 0, scope: !12613)
!12617 = !DILocation(line: 1739, column: 11, scope: !12613)
!12618 = !DILocation(line: 1739, column: 3, scope: !12613)
!12619 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12382, file: !12382, line: 1748, type: !12383, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12620)
!12620 = !{!12621}
!12621 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12619, file: !12382, line: 1748, type: !1731)
!12622 = !DILocation(line: 0, scope: !12619)
!12623 = !DILocation(line: 1750, column: 11, scope: !12619)
!12624 = !DILocation(line: 1750, column: 45, scope: !12619)
!12625 = !DILocation(line: 1750, column: 3, scope: !12619)
!12626 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12382, file: !12382, line: 1827, type: !12383, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12627)
!12627 = !{!12628}
!12628 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12626, file: !12382, line: 1827, type: !1731)
!12629 = !DILocation(line: 0, scope: !12626)
!12630 = !DILocation(line: 1829, column: 11, scope: !12626)
!12631 = !DILocation(line: 1829, column: 46, scope: !12626)
!12632 = !DILocation(line: 1829, column: 3, scope: !12626)
!12633 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12382, file: !12382, line: 1992, type: !12445, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12634)
!12634 = !{!12635}
!12635 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12633, file: !12382, line: 1992, type: !1731)
!12636 = !DILocation(line: 0, scope: !12633)
!12637 = !DILocation(line: 1994, column: 3, scope: !12633)
!12638 = !DILocation(line: 1995, column: 1, scope: !12633)
!12639 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12382, file: !12382, line: 1934, type: !12445, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12640)
!12640 = !{!12641, !12642}
!12641 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12639, file: !12382, line: 1934, type: !1731)
!12642 = !DILocalVariable(name: "tmpreg", scope: !12639, file: !12382, line: 1936, type: !423)
!12643 = !DILocation(line: 0, scope: !12639)
!12644 = !DILocation(line: 1936, column: 3, scope: !12639)
!12645 = !DILocation(line: 1936, column: 17, scope: !12639)
!12646 = !DILocation(line: 1937, column: 20, scope: !12639)
!12647 = !DILocation(line: 1937, column: 10, scope: !12639)
!12648 = !DILocation(line: 1938, column: 10, scope: !12639)
!12649 = !DILocation(line: 1939, column: 20, scope: !12639)
!12650 = !DILocation(line: 1939, column: 10, scope: !12639)
!12651 = !DILocation(line: 1940, column: 10, scope: !12639)
!12652 = !DILocation(line: 1941, column: 1, scope: !12639)
!12653 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12382, file: !12382, line: 1877, type: !12445, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12654)
!12654 = !{!12655, !12656}
!12655 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12653, file: !12382, line: 1877, type: !1731)
!12656 = !DILocalVariable(name: "tmpreg", scope: !12653, file: !12382, line: 1879, type: !423)
!12657 = !DILocation(line: 0, scope: !12653)
!12658 = !DILocation(line: 1879, column: 3, scope: !12653)
!12659 = !DILocation(line: 1879, column: 17, scope: !12653)
!12660 = !DILocation(line: 1880, column: 20, scope: !12653)
!12661 = !DILocation(line: 1880, column: 10, scope: !12653)
!12662 = !DILocation(line: 1881, column: 10, scope: !12653)
!12663 = !DILocation(line: 1882, column: 20, scope: !12653)
!12664 = !DILocation(line: 1882, column: 10, scope: !12653)
!12665 = !DILocation(line: 1883, column: 10, scope: !12653)
!12666 = !DILocation(line: 1884, column: 1, scope: !12653)
!12667 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12382, file: !12382, line: 1896, type: !12445, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12668)
!12668 = !{!12669, !12670}
!12669 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12667, file: !12382, line: 1896, type: !1731)
!12670 = !DILocalVariable(name: "tmpreg", scope: !12667, file: !12382, line: 1898, type: !423)
!12671 = !DILocation(line: 0, scope: !12667)
!12672 = !DILocation(line: 1898, column: 3, scope: !12667)
!12673 = !DILocation(line: 1898, column: 17, scope: !12667)
!12674 = !DILocation(line: 1899, column: 20, scope: !12667)
!12675 = !DILocation(line: 1899, column: 10, scope: !12667)
!12676 = !DILocation(line: 1900, column: 10, scope: !12667)
!12677 = !DILocation(line: 1901, column: 20, scope: !12667)
!12678 = !DILocation(line: 1901, column: 10, scope: !12667)
!12679 = !DILocation(line: 1902, column: 10, scope: !12667)
!12680 = !DILocation(line: 1903, column: 1, scope: !12667)
!12681 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12382, file: !12382, line: 1915, type: !12445, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12682)
!12682 = !{!12683, !12684}
!12683 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12681, file: !12382, line: 1915, type: !1731)
!12684 = !DILocalVariable(name: "tmpreg", scope: !12681, file: !12382, line: 1917, type: !423)
!12685 = !DILocation(line: 0, scope: !12681)
!12686 = !DILocation(line: 1917, column: 3, scope: !12681)
!12687 = !DILocation(line: 1917, column: 17, scope: !12681)
!12688 = !DILocation(line: 1918, column: 20, scope: !12681)
!12689 = !DILocation(line: 1918, column: 10, scope: !12681)
!12690 = !DILocation(line: 1919, column: 10, scope: !12681)
!12691 = !DILocation(line: 1920, column: 20, scope: !12681)
!12692 = !DILocation(line: 1920, column: 10, scope: !12681)
!12693 = !DILocation(line: 1921, column: 10, scope: !12681)
!12694 = !DILocation(line: 1922, column: 1, scope: !12681)
!12695 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12382, file: !12382, line: 1814, type: !12383, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12696)
!12696 = !{!12697}
!12697 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12695, file: !12382, line: 1814, type: !1731)
!12698 = !DILocation(line: 0, scope: !12695)
!12699 = !DILocation(line: 1816, column: 11, scope: !12695)
!12700 = !DILocation(line: 1816, column: 46, scope: !12695)
!12701 = !DILocation(line: 1816, column: 3, scope: !12695)
!12702 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12382, file: !12382, line: 2426, type: !12703, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12705)
!12703 = !DISubroutineType(types: !12704)
!12704 = !{null, !1731, !150}
!12705 = !{!12706, !12707}
!12706 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12702, file: !12382, line: 2426, type: !1731)
!12707 = !DILocalVariable(name: "Value", arg: 2, scope: !12702, file: !12382, line: 2426, type: !150)
!12708 = !DILocation(line: 0, scope: !12702)
!12709 = !DILocation(line: 2428, column: 16, scope: !12702)
!12710 = !DILocation(line: 2428, column: 11, scope: !12702)
!12711 = !DILocation(line: 2428, column: 14, scope: !12702)
!12712 = !DILocation(line: 2429, column: 1, scope: !12702)
!12713 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12382, file: !12382, line: 1792, type: !12383, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12714)
!12714 = !{!12715}
!12715 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12713, file: !12382, line: 1792, type: !1731)
!12716 = !DILocation(line: 0, scope: !12713)
!12717 = !DILocation(line: 1794, column: 11, scope: !12713)
!12718 = !DILocation(line: 1794, column: 47, scope: !12713)
!12719 = !DILocation(line: 1794, column: 3, scope: !12713)
!12720 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12382, file: !12382, line: 2403, type: !12721, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12723)
!12721 = !DISubroutineType(types: !12722)
!12722 = !{!150, !1731}
!12723 = !{!12724}
!12724 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12720, file: !12382, line: 2403, type: !1731)
!12725 = !DILocation(line: 0, scope: !12720)
!12726 = !DILocation(line: 2405, column: 20, scope: !12720)
!12727 = !DILocation(line: 2405, column: 10, scope: !12720)
!12728 = !DILocation(line: 2405, column: 3, scope: !12720)
!12729 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1787, file: !1787, line: 1583, type: !1711, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12730)
!12730 = !{!12731, !12732, !12733, !12734, !12735, !12736}
!12731 = !DILocalVariable(name: "dev", arg: 1, scope: !12729, file: !1787, line: 1583, type: !1690)
!12732 = !DILocalVariable(name: "config", scope: !12729, file: !1787, line: 1585, type: !12073)
!12733 = !DILocalVariable(name: "data", scope: !12729, file: !1787, line: 1586, type: !12196)
!12734 = !DILocalVariable(name: "ll_parity", scope: !12729, file: !1787, line: 1587, type: !208)
!12735 = !DILocalVariable(name: "ll_datawidth", scope: !12729, file: !1787, line: 1588, type: !208)
!12736 = !DILocalVariable(name: "err", scope: !12729, file: !1787, line: 1589, type: !125)
!12737 = !DILocation(line: 0, scope: !12729)
!12738 = !DILocation(line: 1585, column: 48, scope: !12729)
!12739 = !DILocation(line: 1586, column: 38, scope: !12729)
!12740 = !DILocation(line: 1591, column: 2, scope: !12729)
!12741 = !DILocation(line: 1593, column: 29, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12729, file: !1787, line: 1593, column: 6)
!12743 = !DILocation(line: 1593, column: 7, scope: !12742)
!12744 = !DILocation(line: 1593, column: 6, scope: !12729)
!12745 = !DILocation(line: 1594, column: 3, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12747, file: !1787, line: 1594, column: 3)
!12747 = distinct !DILexicalBlock(scope: !12748, file: !1787, line: 1594, column: 3)
!12748 = distinct !DILexicalBlock(scope: !12749, file: !1787, line: 1594, column: 3)
!12749 = distinct !DILexicalBlock(scope: !12750, file: !1787, line: 1594, column: 3)
!12750 = distinct !DILexicalBlock(scope: !12742, file: !1787, line: 1593, column: 37)
!12751 = !DILocation(line: 1595, column: 3, scope: !12750)
!12752 = !DILocation(line: 1599, column: 31, scope: !12729)
!12753 = !DILocation(line: 1599, column: 71, scope: !12729)
!12754 = !DILocation(line: 1599, column: 8, scope: !12729)
!12755 = !DILocation(line: 1600, column: 10, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12729, file: !1787, line: 1600, column: 6)
!12757 = !DILocation(line: 1600, column: 6, scope: !12729)
!12758 = !DILocation(line: 1601, column: 3, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !1787, line: 1601, column: 3)
!12760 = distinct !DILexicalBlock(scope: !12761, file: !1787, line: 1601, column: 3)
!12761 = distinct !DILexicalBlock(scope: !12762, file: !1787, line: 1601, column: 3)
!12762 = distinct !DILexicalBlock(scope: !12763, file: !1787, line: 1601, column: 3)
!12763 = distinct !DILexicalBlock(scope: !12756, file: !1787, line: 1600, column: 16)
!12764 = !DILocation(line: 1602, column: 3, scope: !12763)
!12765 = !DILocation(line: 1616, column: 36, scope: !12729)
!12766 = !DILocation(line: 1616, column: 8, scope: !12729)
!12767 = !DILocation(line: 1617, column: 10, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12729, file: !1787, line: 1617, column: 6)
!12769 = !DILocation(line: 1617, column: 6, scope: !12729)
!12770 = !DILocation(line: 1621, column: 27, scope: !12729)
!12771 = !DILocation(line: 1621, column: 2, scope: !12729)
!12772 = !DILocation(line: 1624, column: 40, scope: !12729)
!12773 = !DILocation(line: 1624, column: 2, scope: !12729)
!12774 = !DILocation(line: 1630, column: 14, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12729, file: !1787, line: 1630, column: 6)
!12776 = !DILocation(line: 1630, column: 6, scope: !12729)
!12777 = !DILocation(line: 1640, column: 4, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12779, file: !1787, line: 1640, column: 4)
!12779 = distinct !DILexicalBlock(scope: !12780, file: !1787, line: 1640, column: 4)
!12780 = distinct !DILexicalBlock(scope: !12781, file: !1787, line: 1640, column: 4)
!12781 = distinct !DILexicalBlock(scope: !12782, file: !1787, line: 1640, column: 4)
!12782 = distinct !DILexicalBlock(scope: !12783, file: !1787, line: 1639, column: 28)
!12783 = distinct !DILexicalBlock(scope: !12784, file: !1787, line: 1639, column: 7)
!12784 = distinct !DILexicalBlock(scope: !12785, file: !1787, line: 1638, column: 9)
!12785 = distinct !DILexicalBlock(scope: !12775, file: !1787, line: 1634, column: 13)
!12786 = !DILocation(line: 0, scope: !12775)
!12787 = !DILocation(line: 1649, column: 35, scope: !12729)
!12788 = !DILocation(line: 1649, column: 2, scope: !12729)
!12789 = !DILocation(line: 1654, column: 14, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12729, file: !1787, line: 1654, column: 6)
!12791 = !DILocation(line: 1654, column: 6, scope: !12729)
!12792 = !DILocation(line: 1655, column: 3, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12790, file: !1787, line: 1654, column: 31)
!12794 = !DILocation(line: 1656, column: 2, scope: !12793)
!12795 = !DILocation(line: 1659, column: 37, scope: !12729)
!12796 = !DILocation(line: 1659, column: 2, scope: !12729)
!12797 = !DILocation(line: 1662, column: 14, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12729, file: !1787, line: 1662, column: 6)
!12799 = !DILocation(line: 1662, column: 6, scope: !12729)
!12800 = !DILocation(line: 1663, column: 37, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12798, file: !1787, line: 1662, column: 27)
!12802 = !DILocation(line: 1663, column: 3, scope: !12801)
!12803 = !DILocation(line: 1664, column: 2, scope: !12801)
!12804 = !DILocation(line: 1684, column: 26, scope: !12729)
!12805 = !DILocation(line: 1684, column: 2, scope: !12729)
!12806 = !DILocation(line: 1722, column: 2, scope: !12729)
!12807 = !DILocation(line: 1724, column: 1, scope: !12729)
!12808 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1787, file: !1787, line: 651, type: !12809, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12811)
!12809 = !DISubroutineType(types: !12810)
!12810 = !{null, !1690}
!12811 = !{!12812, !12813, !12814}
!12812 = !DILocalVariable(name: "dev", arg: 1, scope: !12808, file: !1787, line: 651, type: !1690)
!12813 = !DILocalVariable(name: "data", scope: !12808, file: !1787, line: 653, type: !12196)
!12814 = !DILocalVariable(name: "clk", scope: !12808, file: !1787, line: 654, type: !12815)
!12815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1690)
!12816 = !DILocation(line: 0, scope: !12808)
!12817 = !DILocation(line: 653, column: 38, scope: !12808)
!12818 = !DILocation(line: 656, column: 8, scope: !12808)
!12819 = !DILocation(line: 656, column: 14, scope: !12808)
!12820 = !DILocation(line: 657, column: 1, scope: !12808)
!12821 = distinct !DISubprogram(name: "device_is_ready", scope: !4231, file: !4231, line: 47, type: !12822, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12824)
!12822 = !DISubroutineType(types: !12823)
!12823 = !{!153, !1690}
!12824 = !{!12825}
!12825 = !DILocalVariable(name: "dev", arg: 1, scope: !12821, file: !4231, line: 47, type: !1690)
!12826 = !DILocation(line: 0, scope: !12821)
!12827 = !DILocation(line: 55, column: 2, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12821, file: !4231, line: 55, column: 2)
!12829 = !{i64 2154448696}
!12830 = !DILocation(line: 56, column: 9, scope: !12821)
!12831 = !DILocation(line: 56, column: 2, scope: !12821)
!12832 = distinct !DISubprogram(name: "clock_control_on", scope: !963, file: !963, line: 123, type: !1749, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12833)
!12833 = !{!12834, !12835, !12836}
!12834 = !DILocalVariable(name: "dev", arg: 1, scope: !12832, file: !963, line: 123, type: !1690)
!12835 = !DILocalVariable(name: "sys", arg: 2, scope: !12832, file: !963, line: 124, type: !1058)
!12836 = !DILocalVariable(name: "api", scope: !12832, file: !963, line: 126, type: !1742)
!12837 = !DILocation(line: 0, scope: !12832)
!12838 = !DILocation(line: 127, column: 49, scope: !12832)
!12839 = !DILocation(line: 129, column: 14, scope: !12832)
!12840 = !DILocation(line: 129, column: 9, scope: !12832)
!12841 = !DILocation(line: 129, column: 2, scope: !12832)
!12842 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1841, file: !1841, line: 342, type: !12843, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12845)
!12843 = !DISubroutineType(types: !12844)
!12844 = !{!125, !1838, !150}
!12845 = !{!12846, !12847, !12848, !12849}
!12846 = !DILocalVariable(name: "config", arg: 1, scope: !12842, file: !1841, line: 342, type: !1838)
!12847 = !DILocalVariable(name: "id", arg: 2, scope: !12842, file: !1841, line: 343, type: !150)
!12848 = !DILocalVariable(name: "ret", scope: !12842, file: !1841, line: 345, type: !125)
!12849 = !DILocalVariable(name: "state", scope: !12842, file: !1841, line: 346, type: !1844)
!12850 = !DILocation(line: 0, scope: !12842)
!12851 = !DILocation(line: 346, column: 2, scope: !12842)
!12852 = !DILocation(line: 348, column: 8, scope: !12842)
!12853 = !DILocation(line: 349, column: 10, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12842, file: !1841, line: 349, column: 6)
!12855 = !DILocation(line: 349, column: 6, scope: !12842)
!12856 = !DILocation(line: 353, column: 44, scope: !12842)
!12857 = !DILocation(line: 353, column: 9, scope: !12842)
!12858 = !DILocation(line: 353, column: 2, scope: !12842)
!12859 = !DILocation(line: 354, column: 1, scope: !12842)
!12860 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12382, file: !12382, line: 497, type: !12554, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12861)
!12861 = !{!12862, !12863, !12864}
!12862 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12860, file: !12382, line: 497, type: !1731)
!12863 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12860, file: !12382, line: 497, type: !208)
!12864 = !DILocalVariable(name: "val", scope: !12865, file: !12382, line: 499, type: !208)
!12865 = distinct !DILexicalBlock(scope: !12860, file: !12382, line: 499, column: 3)
!12866 = !DILocation(line: 0, scope: !12860)
!12867 = !DILocation(line: 499, column: 3, scope: !12865)
!12868 = !DILocalVariable(name: "addr", arg: 1, scope: !12869, file: !8329, line: 476, type: !1783)
!12869 = distinct !DISubprogram(name: "__LDREXW", scope: !8329, file: !8329, line: 476, type: !12870, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12872)
!12870 = !DISubroutineType(types: !12871)
!12871 = !{!208, !1783}
!12872 = !{!12868, !12873}
!12873 = !DILocalVariable(name: "result", scope: !12869, file: !8329, line: 478, type: !208)
!12874 = !DILocation(line: 0, scope: !12869, inlinedAt: !12875)
!12875 = distinct !DILocation(line: 499, column: 3, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12865, file: !12382, line: 499, column: 3)
!12877 = !DILocation(line: 480, column: 4, scope: !12869, inlinedAt: !12875)
!12878 = !{i64 2946801}
!12879 = !DILocation(line: 499, column: 3, scope: !12876)
!12880 = !DILocation(line: 0, scope: !12865)
!12881 = !DILocalVariable(name: "value", arg: 1, scope: !12882, file: !8329, line: 527, type: !208)
!12882 = distinct !DISubprogram(name: "__STREXW", scope: !8329, file: !8329, line: 527, type: !12883, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12885)
!12883 = !DISubroutineType(types: !12884)
!12884 = !{!208, !208, !1783}
!12885 = !{!12881, !12886, !12887}
!12886 = !DILocalVariable(name: "addr", arg: 2, scope: !12882, file: !8329, line: 527, type: !1783)
!12887 = !DILocalVariable(name: "result", scope: !12882, file: !8329, line: 529, type: !208)
!12888 = !DILocation(line: 0, scope: !12882, inlinedAt: !12889)
!12889 = distinct !DILocation(line: 499, column: 3, scope: !12865)
!12890 = !DILocation(line: 531, column: 4, scope: !12882, inlinedAt: !12889)
!12891 = !{i64 2948237}
!12892 = distinct !{!12892, !12867, !12867}
!12893 = !DILocation(line: 500, column: 1, scope: !12860)
!12894 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12382, file: !12382, line: 850, type: !12563, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12895)
!12895 = !{!12896, !12897, !12898, !12899}
!12896 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12894, file: !12382, line: 850, type: !1731)
!12897 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12894, file: !12382, line: 850, type: !208)
!12898 = !DILocalVariable(name: "Parity", arg: 3, scope: !12894, file: !12382, line: 850, type: !208)
!12899 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12894, file: !12382, line: 851, type: !208)
!12900 = !DILocation(line: 0, scope: !12894)
!12901 = !DILocation(line: 853, column: 3, scope: !12894)
!12902 = !DILocation(line: 854, column: 3, scope: !12894)
!12903 = !DILocation(line: 855, column: 1, scope: !12894)
!12904 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12382, file: !12382, line: 1337, type: !12445, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12905)
!12905 = !{!12906}
!12906 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12904, file: !12382, line: 1337, type: !1731)
!12907 = !DILocation(line: 0, scope: !12904)
!12908 = !DILocation(line: 1339, column: 3, scope: !12904)
!12909 = !DILocation(line: 1340, column: 1, scope: !12904)
!12910 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1841, file: !1841, line: 316, type: !12911, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12913)
!12911 = !DISubroutineType(types: !12912)
!12912 = !{!125, !1838, !1844}
!12913 = !{!12914, !12915, !12916}
!12914 = !DILocalVariable(name: "config", arg: 1, scope: !12910, file: !1841, line: 317, type: !1838)
!12915 = !DILocalVariable(name: "state", arg: 2, scope: !12910, file: !1841, line: 318, type: !1844)
!12916 = !DILocalVariable(name: "reg", scope: !12910, file: !1841, line: 320, type: !22)
!12917 = !DILocation(line: 0, scope: !12910)
!12918 = !DILocation(line: 329, column: 39, scope: !12910)
!12919 = !DILocation(line: 329, column: 52, scope: !12910)
!12920 = !DILocation(line: 329, column: 9, scope: !12910)
!12921 = !DILocation(line: 329, column: 2, scope: !12910)
!12922 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !12822, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1646, retainedNodes: !12923)
!12923 = !{!12924}
!12924 = !DILocalVariable(name: "dev", arg: 1, scope: !12922, file: !137, line: 730, type: !1690)
!12925 = !DILocation(line: 0, scope: !12922)
!12926 = !DILocation(line: 732, column: 9, scope: !12922)
!12927 = !DILocation(line: 732, column: 2, scope: !12922)
!12928 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1988, file: !1988, line: 270, type: !1994, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !12929)
!12929 = !{!12930}
!12930 = !DILocalVariable(name: "dev", arg: 1, scope: !12928, file: !1988, line: 270, type: !1996)
!12931 = !DILocation(line: 0, scope: !12928)
!12932 = !DILocation(line: 274, column: 2, scope: !12928)
!12933 = !DILocation(line: 275, column: 12, scope: !12928)
!12934 = !DILocation(line: 276, column: 15, scope: !12928)
!12935 = !DILocation(line: 277, column: 16, scope: !12928)
!12936 = !DILocation(line: 278, column: 15, scope: !12928)
!12937 = !DILocation(line: 279, column: 16, scope: !12928)
!12938 = !DILocation(line: 282, column: 2, scope: !12928)
!12939 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8363, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !12940)
!12940 = !{!12941, !12942}
!12941 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12939, file: !680, line: 1814, type: !913)
!12942 = !DILocalVariable(name: "priority", arg: 2, scope: !12939, file: !680, line: 1814, type: !208)
!12943 = !DILocation(line: 0, scope: !12939)
!12944 = !DILocation(line: 1822, column: 46, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12946, file: !680, line: 1821, column: 3)
!12946 = distinct !DILexicalBlock(scope: !12939, file: !680, line: 1816, column: 7)
!12947 = !DILocation(line: 1824, column: 1, scope: !12939)
!12948 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1988, file: !1988, line: 118, type: !8266, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !12949)
!12949 = !{!12950, !12951}
!12950 = !DILocalVariable(name: "arg", arg: 1, scope: !12948, file: !1988, line: 118, type: !124)
!12951 = !DILocalVariable(name: "dticks", scope: !12948, file: !1988, line: 121, type: !208)
!12952 = !DILocation(line: 0, scope: !12948)
!12953 = !DILocation(line: 124, column: 2, scope: !12948)
!12954 = !DILocation(line: 129, column: 17, scope: !12948)
!12955 = !DILocation(line: 129, column: 14, scope: !12948)
!12956 = !DILocation(line: 130, column: 15, scope: !12948)
!12957 = !DILocation(line: 145, column: 27, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12959, file: !1988, line: 132, column: 16)
!12959 = distinct !DILexicalBlock(scope: !12948, file: !1988, line: 132, column: 6)
!12960 = !DILocation(line: 145, column: 25, scope: !12958)
!12961 = !DILocation(line: 145, column: 45, scope: !12958)
!12962 = !DILocation(line: 146, column: 30, scope: !12958)
!12963 = !DILocation(line: 146, column: 20, scope: !12958)
!12964 = !DILocation(line: 147, column: 3, scope: !12958)
!12965 = !DILocation(line: 151, column: 2, scope: !12948)
!12966 = !DILocation(line: 152, column: 1, scope: !12948)
!12967 = distinct !DISubprogram(name: "elapsed", scope: !1988, file: !1988, line: 85, type: !8410, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !12968)
!12968 = !{!12969, !12970, !12971}
!12969 = !DILocalVariable(name: "val1", scope: !12967, file: !1988, line: 87, type: !208)
!12970 = !DILocalVariable(name: "ctrl", scope: !12967, file: !1988, line: 88, type: !208)
!12971 = !DILocalVariable(name: "val2", scope: !12967, file: !1988, line: 89, type: !208)
!12972 = !DILocation(line: 87, column: 27, scope: !12967)
!12973 = !DILocation(line: 0, scope: !12967)
!12974 = !DILocation(line: 88, column: 27, scope: !12967)
!12975 = !DILocation(line: 89, column: 27, scope: !12967)
!12976 = !DILocation(line: 105, column: 12, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12967, file: !1988, line: 105, column: 6)
!12978 = !DILocation(line: 106, column: 6, scope: !12977)
!12979 = !DILocation(line: 107, column: 16, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12977, file: !1988, line: 106, column: 24)
!12981 = !DILocation(line: 111, column: 18, scope: !12980)
!12982 = !DILocation(line: 112, column: 2, scope: !12980)
!12983 = !DILocation(line: 114, column: 20, scope: !12967)
!12984 = !DILocation(line: 114, column: 30, scope: !12967)
!12985 = !DILocation(line: 114, column: 28, scope: !12967)
!12986 = !DILocation(line: 114, column: 2, scope: !12967)
!12987 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1988, file: !1988, line: 154, type: !12988, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !12990)
!12988 = !DISubroutineType(types: !12989)
!12989 = !{null, !887, !153}
!12990 = !{!12991, !12992, !12993, !12994, !12995, !12996, !12997, !13002, !13003}
!12991 = !DILocalVariable(name: "ticks", arg: 1, scope: !12987, file: !1988, line: 154, type: !887)
!12992 = !DILocalVariable(name: "idle", arg: 2, scope: !12987, file: !1988, line: 154, type: !153)
!12993 = !DILocalVariable(name: "delay", scope: !12987, file: !1988, line: 169, type: !208)
!12994 = !DILocalVariable(name: "val1", scope: !12987, file: !1988, line: 170, type: !208)
!12995 = !DILocalVariable(name: "val2", scope: !12987, file: !1988, line: 170, type: !208)
!12996 = !DILocalVariable(name: "last_load_", scope: !12987, file: !1988, line: 171, type: !208)
!12997 = !DILocalVariable(name: "key", scope: !12987, file: !1988, line: 176, type: !12998)
!12998 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !12999)
!12999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !13000)
!13000 = !{!13001}
!13001 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12999, file: !638, line: 33, baseType: !125, size: 32)
!13002 = !DILocalVariable(name: "pending", scope: !12987, file: !1988, line: 178, type: !208)
!13003 = !DILocalVariable(name: "unannounced", scope: !12987, file: !1988, line: 185, type: !208)
!13004 = !DILocation(line: 0, scope: !12987)
!13005 = !DILocation(line: 162, column: 49, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !12987, file: !1988, line: 162, column: 6)
!13007 = !DILocation(line: 163, column: 17, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13006, file: !1988, line: 162, column: 78)
!13009 = !DILocation(line: 164, column: 13, scope: !13008)
!13010 = !DILocation(line: 165, column: 3, scope: !13008)
!13011 = !DILocation(line: 171, column: 24, scope: !12987)
!13012 = !DILocation(line: 173, column: 10, scope: !12987)
!13013 = !DILocation(line: 174, column: 10, scope: !12987)
!13014 = !DILocalVariable(name: "l", arg: 1, scope: !13015, file: !638, line: 136, type: !13018)
!13015 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !13016, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !13019)
!13016 = !DISubroutineType(types: !13017)
!13017 = !{!12998, !13018}
!13018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!13019 = !{!13014, !13020}
!13020 = !DILocalVariable(name: "k", scope: !13015, file: !638, line: 139, type: !12998)
!13021 = !DILocation(line: 0, scope: !13015, inlinedAt: !13022)
!13022 = distinct !DILocation(line: 176, column: 25, scope: !12987)
!13023 = !DILocation(line: 55, column: 2, scope: !13024, inlinedAt: !13028)
!13024 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6862, file: !6862, line: 42, type: !6863, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !13025)
!13025 = !{!13026, !13027}
!13026 = !DILocalVariable(name: "key", scope: !13024, file: !6862, line: 44, type: !32)
!13027 = !DILocalVariable(name: "tmp", scope: !13024, file: !6862, line: 53, type: !32)
!13028 = distinct !DILocation(line: 145, column: 10, scope: !13015, inlinedAt: !13022)
!13029 = !{i64 2024649}
!13030 = !DILocation(line: 0, scope: !13024, inlinedAt: !13028)
!13031 = !DILocation(line: 178, column: 21, scope: !12987)
!13032 = !DILocation(line: 180, column: 18, scope: !12987)
!13033 = !DILocation(line: 182, column: 14, scope: !12987)
!13034 = !DILocation(line: 183, column: 15, scope: !12987)
!13035 = !DILocation(line: 185, column: 39, scope: !12987)
!13036 = !DILocation(line: 185, column: 37, scope: !12987)
!13037 = !DILocation(line: 187, column: 27, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !12987, file: !1988, line: 187, column: 6)
!13039 = !DILocation(line: 187, column: 6, scope: !12987)
!13040 = !DILocation(line: 202, column: 27, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13038, file: !1988, line: 195, column: 9)
!13042 = !DILocation(line: 202, column: 48, scope: !13041)
!13043 = !DILocation(line: 203, column: 9, scope: !13041)
!13044 = !DILocation(line: 204, column: 11, scope: !13041)
!13045 = !DILocation(line: 205, column: 13, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13041, file: !1988, line: 205, column: 7)
!13047 = !DILocation(line: 205, column: 7, scope: !13041)
!13048 = !DILocation(line: 0, scope: !13038)
!13049 = !DILocation(line: 212, column: 18, scope: !12987)
!13050 = !DILocation(line: 214, column: 28, scope: !12987)
!13051 = !DILocation(line: 214, column: 16, scope: !12987)
!13052 = !DILocation(line: 215, column: 15, scope: !12987)
!13053 = !DILocation(line: 227, column: 11, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !12987, file: !1988, line: 227, column: 6)
!13055 = !DILocation(line: 227, column: 6, scope: !12987)
!13056 = !DILocation(line: 228, column: 15, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13054, file: !1988, line: 227, column: 19)
!13058 = !DILocation(line: 228, column: 38, scope: !13057)
!13059 = !DILocation(line: 228, column: 24, scope: !13057)
!13060 = !DILocation(line: 229, column: 2, scope: !13057)
!13061 = !DILocation(line: 230, column: 24, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13054, file: !1988, line: 229, column: 9)
!13063 = !DILocation(line: 230, column: 15, scope: !13062)
!13064 = !DILocation(line: 0, scope: !13054)
!13065 = !DILocalVariable(name: "key", arg: 2, scope: !13066, file: !638, line: 190, type: !12998)
!13066 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !13067, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !13069)
!13067 = !DISubroutineType(types: !13068)
!13068 = !{null, !13018, !12998}
!13069 = !{!13070, !13065}
!13070 = !DILocalVariable(name: "l", arg: 1, scope: !13066, file: !638, line: 189, type: !13018)
!13071 = !DILocation(line: 0, scope: !13066, inlinedAt: !13072)
!13072 = distinct !DILocation(line: 232, column: 2, scope: !12987)
!13073 = !DILocalVariable(name: "key", arg: 1, scope: !13074, file: !6862, line: 84, type: !32)
!13074 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6862, file: !6862, line: 84, type: !6873, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !13075)
!13075 = !{!13073}
!13076 = !DILocation(line: 0, scope: !13074, inlinedAt: !13077)
!13077 = distinct !DILocation(line: 215, column: 2, scope: !13066, inlinedAt: !13072)
!13078 = !DILocation(line: 95, column: 2, scope: !13074, inlinedAt: !13077)
!13079 = !{i64 2025466}
!13080 = !DILocation(line: 234, column: 1, scope: !12987)
!13081 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1988, file: !1988, line: 236, type: !8410, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !13082)
!13082 = !{!13083, !13084}
!13083 = !DILocalVariable(name: "key", scope: !13081, file: !1988, line: 242, type: !12998)
!13084 = !DILocalVariable(name: "cyc", scope: !13081, file: !1988, line: 243, type: !208)
!13085 = !DILocation(line: 0, scope: !13015, inlinedAt: !13086)
!13086 = distinct !DILocation(line: 242, column: 25, scope: !13081)
!13087 = !DILocation(line: 55, column: 2, scope: !13024, inlinedAt: !13088)
!13088 = distinct !DILocation(line: 145, column: 10, scope: !13015, inlinedAt: !13086)
!13089 = !DILocation(line: 0, scope: !13024, inlinedAt: !13088)
!13090 = !DILocation(line: 0, scope: !13081)
!13091 = !DILocation(line: 243, column: 17, scope: !13081)
!13092 = !DILocation(line: 243, column: 29, scope: !13081)
!13093 = !DILocation(line: 243, column: 27, scope: !13081)
!13094 = !DILocation(line: 243, column: 43, scope: !13081)
!13095 = !DILocation(line: 243, column: 41, scope: !13081)
!13096 = !DILocation(line: 0, scope: !13066, inlinedAt: !13097)
!13097 = distinct !DILocation(line: 245, column: 2, scope: !13081)
!13098 = !DILocation(line: 0, scope: !13074, inlinedAt: !13099)
!13099 = distinct !DILocation(line: 215, column: 2, scope: !13066, inlinedAt: !13097)
!13100 = !DILocation(line: 95, column: 2, scope: !13074, inlinedAt: !13099)
!13101 = !DILocation(line: 246, column: 13, scope: !13081)
!13102 = !DILocation(line: 246, column: 2, scope: !13081)
!13103 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1988, file: !1988, line: 249, type: !8410, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !13104)
!13104 = !{!13105, !13106}
!13105 = !DILocalVariable(name: "key", scope: !13103, file: !1988, line: 251, type: !12998)
!13106 = !DILocalVariable(name: "ret", scope: !13103, file: !1988, line: 252, type: !208)
!13107 = !DILocation(line: 0, scope: !13015, inlinedAt: !13108)
!13108 = distinct !DILocation(line: 251, column: 25, scope: !13103)
!13109 = !DILocation(line: 55, column: 2, scope: !13024, inlinedAt: !13110)
!13110 = distinct !DILocation(line: 145, column: 10, scope: !13015, inlinedAt: !13108)
!13111 = !DILocation(line: 0, scope: !13024, inlinedAt: !13110)
!13112 = !DILocation(line: 0, scope: !13103)
!13113 = !DILocation(line: 252, column: 17, scope: !13103)
!13114 = !DILocation(line: 252, column: 29, scope: !13103)
!13115 = !DILocation(line: 252, column: 27, scope: !13103)
!13116 = !DILocation(line: 0, scope: !13066, inlinedAt: !13117)
!13117 = distinct !DILocation(line: 254, column: 2, scope: !13103)
!13118 = !DILocation(line: 0, scope: !13074, inlinedAt: !13119)
!13119 = distinct !DILocation(line: 215, column: 2, scope: !13066, inlinedAt: !13117)
!13120 = !DILocation(line: 95, column: 2, scope: !13074, inlinedAt: !13119)
!13121 = !DILocation(line: 255, column: 2, scope: !13103)
!13122 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1988, file: !1988, line: 258, type: !3326, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !639)
!13123 = !DILocation(line: 260, column: 6, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13122, file: !1988, line: 260, column: 6)
!13125 = !DILocation(line: 260, column: 16, scope: !13124)
!13126 = !DILocation(line: 260, column: 6, scope: !13122)
!13127 = !DILocation(line: 261, column: 17, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13124, file: !1988, line: 260, column: 34)
!13129 = !DILocation(line: 262, column: 2, scope: !13128)
!13130 = !DILocation(line: 263, column: 1, scope: !13122)
!13131 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1988, file: !1988, line: 265, type: !3326, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1910, retainedNodes: !639)
!13132 = !DILocation(line: 267, column: 16, scope: !13131)
!13133 = !DILocation(line: 268, column: 1, scope: !13131)
!13134 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !13135, file: !13135, line: 9, type: !13136, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13159)
!13135 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13136 = !DISubroutineType(types: !13137)
!13137 = !{!125, !13138, !150, !13158}
!13138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13139, size: 32)
!13139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13140)
!13140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1841, line: 60, size: 64, elements: !13141)
!13141 = !{!13142, !13157}
!13142 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !13140, file: !1841, line: 69, baseType: !13143, size: 32)
!13143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13144, size: 32)
!13144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13145)
!13145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1841, line: 50, size: 64, elements: !13146)
!13146 = !{!13147, !13155, !13156}
!13147 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !13145, file: !1841, line: 52, baseType: !13148, size: 32)
!13148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13149, size: 32)
!13149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13150)
!13150 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1852, line: 37, baseType: !13151)
!13151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1852, line: 32, size: 64, elements: !13152)
!13152 = !{!13153, !13154}
!13153 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13151, file: !1852, line: 34, baseType: !208, size: 32)
!13154 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13151, file: !1852, line: 36, baseType: !208, size: 32, offset: 32)
!13155 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !13145, file: !1841, line: 54, baseType: !150, size: 8, offset: 32)
!13156 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13145, file: !1841, line: 56, baseType: !150, size: 8, offset: 40)
!13157 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !13140, file: !1841, line: 71, baseType: !150, size: 8, offset: 32)
!13158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13143, size: 32)
!13159 = !{!13160, !13161, !13162}
!13160 = !DILocalVariable(name: "config", arg: 1, scope: !13134, file: !13135, line: 9, type: !13138)
!13161 = !DILocalVariable(name: "id", arg: 2, scope: !13134, file: !13135, line: 9, type: !150)
!13162 = !DILocalVariable(name: "state", arg: 3, scope: !13134, file: !13135, line: 10, type: !13158)
!13163 = !DILocation(line: 0, scope: !13134)
!13164 = !DILocation(line: 12, column: 20, scope: !13134)
!13165 = !DILocation(line: 13, column: 27, scope: !13134)
!13166 = !DILocation(line: 13, column: 42, scope: !13134)
!13167 = !DILocation(line: 13, column: 19, scope: !13134)
!13168 = !DILocation(line: 13, column: 16, scope: !13134)
!13169 = !DILocation(line: 13, column: 2, scope: !13134)
!13170 = distinct !{!13170, !13169, !13171}
!13171 = !DILocation(line: 19, column: 2, scope: !13134)
!13172 = !DILocation(line: 14, column: 23, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13174, file: !13135, line: 14, column: 7)
!13174 = distinct !DILexicalBlock(scope: !13134, file: !13135, line: 13, column: 54)
!13175 = !DILocation(line: 14, column: 10, scope: !13173)
!13176 = !DILocation(line: 18, column: 11, scope: !13174)
!13177 = !DILocation(line: 14, column: 7, scope: !13174)
!13178 = !DILocation(line: 22, column: 1, scope: !13134)
!13179 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2105, file: !2105, line: 193, type: !13180, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2023, retainedNodes: !13189)
!13180 = !DISubroutineType(types: !13181)
!13181 = !{!125, !13182, !150, !22}
!13182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13183, size: 32)
!13183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13184)
!13184 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1852, line: 37, baseType: !13185)
!13185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1852, line: 32, size: 64, elements: !13186)
!13186 = !{!13187, !13188}
!13187 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13185, file: !1852, line: 34, baseType: !208, size: 32)
!13188 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13185, file: !1852, line: 36, baseType: !208, size: 32, offset: 32)
!13189 = !{!13190, !13191, !13192, !13193, !13194, !13195, !13196, !13197, !13199}
!13190 = !DILocalVariable(name: "pins", arg: 1, scope: !13179, file: !2105, line: 193, type: !13182)
!13191 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !13179, file: !2105, line: 193, type: !150)
!13192 = !DILocalVariable(name: "reg", arg: 3, scope: !13179, file: !2105, line: 194, type: !22)
!13193 = !DILocalVariable(name: "pin", scope: !13179, file: !2105, line: 196, type: !208)
!13194 = !DILocalVariable(name: "mux", scope: !13179, file: !2105, line: 196, type: !208)
!13195 = !DILocalVariable(name: "pin_cgf", scope: !13179, file: !2105, line: 197, type: !208)
!13196 = !DILocalVariable(name: "ret", scope: !13179, file: !2105, line: 198, type: !125)
!13197 = !DILocalVariable(name: "i", scope: !13198, file: !2105, line: 209, type: !150)
!13198 = distinct !DILexicalBlock(scope: !13179, file: !2105, line: 209, column: 2)
!13199 = !DILocalVariable(name: "gpio_out", scope: !13200, file: !2105, line: 239, type: !208)
!13200 = distinct !DILexicalBlock(scope: !13201, file: !2105, line: 238, column: 55)
!13201 = distinct !DILexicalBlock(scope: !13202, file: !2105, line: 238, column: 14)
!13202 = distinct !DILexicalBlock(scope: !13203, file: !2105, line: 236, column: 14)
!13203 = distinct !DILexicalBlock(scope: !13204, file: !2105, line: 234, column: 7)
!13204 = distinct !DILexicalBlock(scope: !13205, file: !2105, line: 209, column: 41)
!13205 = distinct !DILexicalBlock(scope: !13198, file: !2105, line: 209, column: 2)
!13206 = !DILocation(line: 0, scope: !13179)
!13207 = !DILocation(line: 0, scope: !13198)
!13208 = !DILocation(line: 209, column: 25, scope: !13205)
!13209 = !DILocation(line: 209, column: 2, scope: !13198)
!13210 = distinct !{!13210, !13209, !13211}
!13211 = !DILocation(line: 259, column: 2, scope: !13198)
!13212 = !DILocation(line: 210, column: 17, scope: !13204)
!13213 = !DILocation(line: 234, column: 7, scope: !13203)
!13214 = !DILocation(line: 234, column: 33, scope: !13203)
!13215 = !DILocation(line: 234, column: 7, scope: !13204)
!13216 = !DILocation(line: 235, column: 22, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13203, file: !2105, line: 234, column: 49)
!13218 = !DILocation(line: 235, column: 29, scope: !13217)
!13219 = !DILocation(line: 236, column: 3, scope: !13217)
!13220 = !DILocation(line: 236, column: 14, scope: !13203)
!13221 = !DILocation(line: 239, column: 32, scope: !13200)
!13222 = !DILocation(line: 0, scope: !13200)
!13223 = !DILocation(line: 241, column: 8, scope: !13200)
!13224 = !DILocation(line: 246, column: 3, scope: !13200)
!13225 = !DILocation(line: 252, column: 9, scope: !13204)
!13226 = !DILocation(line: 255, column: 9, scope: !13204)
!13227 = !DILocation(line: 256, column: 11, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13204, file: !2105, line: 256, column: 7)
!13229 = !DILocation(line: 209, column: 37, scope: !13205)
!13230 = !DILocation(line: 256, column: 7, scope: !13204)
!13231 = !DILocation(line: 262, column: 1, scope: !13179)
!13232 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2105, file: !2105, line: 176, type: !13233, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2023, retainedNodes: !13235)
!13233 = !DISubroutineType(types: !13234)
!13234 = !{!125, !208, !208, !208}
!13235 = !{!13236, !13237, !13238, !13239}
!13236 = !DILocalVariable(name: "pin", arg: 1, scope: !13232, file: !2105, line: 176, type: !208)
!13237 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !13232, file: !2105, line: 176, type: !208)
!13238 = !DILocalVariable(name: "pin_func", arg: 3, scope: !13232, file: !2105, line: 176, type: !208)
!13239 = !DILocalVariable(name: "port_device", scope: !13232, file: !2105, line: 178, type: !2035)
!13240 = !DILocation(line: 0, scope: !13232)
!13241 = !DILocation(line: 180, column: 22, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13232, file: !2105, line: 180, column: 6)
!13243 = !DILocation(line: 180, column: 6, scope: !13232)
!13244 = !DILocation(line: 180, column: 6, scope: !13242)
!13245 = !DILocation(line: 184, column: 16, scope: !13232)
!13246 = !DILocation(line: 186, column: 19, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13232, file: !2105, line: 186, column: 6)
!13248 = !DILocation(line: 186, column: 28, scope: !13247)
!13249 = !DILocation(line: 186, column: 33, scope: !13247)
!13250 = !DILocation(line: 186, column: 6, scope: !13232)
!13251 = !DILocation(line: 190, column: 43, scope: !13232)
!13252 = !DILocation(line: 190, column: 9, scope: !13232)
!13253 = !DILocation(line: 190, column: 2, scope: !13232)
!13254 = !DILocation(line: 191, column: 1, scope: !13232)
!13255 = distinct !DISubprogram(name: "device_is_ready", scope: !4231, file: !4231, line: 47, type: !13256, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2023, retainedNodes: !13258)
!13256 = !DISubroutineType(types: !13257)
!13257 = !{!153, !2035}
!13258 = !{!13259}
!13259 = !DILocalVariable(name: "dev", arg: 1, scope: !13255, file: !4231, line: 47, type: !2035)
!13260 = !DILocation(line: 0, scope: !13255)
!13261 = !DILocation(line: 55, column: 2, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13255, file: !4231, line: 55, column: 2)
!13263 = !{i64 2149262719}
!13264 = !DILocation(line: 56, column: 9, scope: !13255)
!13265 = !DILocation(line: 56, column: 2, scope: !13255)
!13266 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !13256, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2023, retainedNodes: !13267)
!13267 = !{!13268}
!13268 = !DILocalVariable(name: "dev", arg: 1, scope: !13266, file: !137, line: 730, type: !2035)
!13269 = !DILocation(line: 0, scope: !13266)
!13270 = !DILocation(line: 732, column: 9, scope: !13266)
!13271 = !DILocation(line: 732, column: 2, scope: !13266)
!13272 = distinct !DISubprogram(name: "SystemInit", scope: !2155, file: !2155, line: 167, type: !3326, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2113, retainedNodes: !639)
!13273 = !DILocation(line: 182, column: 1, scope: !13272)
!13274 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2155, file: !2155, line: 220, type: !3326, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2113, retainedNodes: !13275)
!13275 = !{!13276, !13277, !13278, !13279, !13280}
!13276 = !DILocalVariable(name: "tmp", scope: !13274, file: !2155, line: 222, type: !208)
!13277 = !DILocalVariable(name: "pllvco", scope: !13274, file: !2155, line: 222, type: !208)
!13278 = !DILocalVariable(name: "pllp", scope: !13274, file: !2155, line: 222, type: !208)
!13279 = !DILocalVariable(name: "pllsource", scope: !13274, file: !2155, line: 222, type: !208)
!13280 = !DILocalVariable(name: "pllm", scope: !13274, file: !2155, line: 222, type: !208)
!13281 = !DILocation(line: 0, scope: !13274)
!13282 = !DILocation(line: 225, column: 14, scope: !13274)
!13283 = !DILocation(line: 225, column: 19, scope: !13274)
!13284 = !DILocation(line: 227, column: 3, scope: !13274)
!13285 = !DILocation(line: 240, column: 25, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13274, file: !2155, line: 228, column: 3)
!13287 = !DILocation(line: 241, column: 19, scope: !13286)
!13288 = !DILocation(line: 241, column: 27, scope: !13286)
!13289 = !DILocation(line: 0, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13286, file: !2155, line: 243, column: 11)
!13291 = !DILocation(line: 254, column: 22, scope: !13286)
!13292 = !DILocation(line: 254, column: 62, scope: !13286)
!13293 = !DILocation(line: 255, column: 31, scope: !13286)
!13294 = !DILocation(line: 256, column: 7, scope: !13286)
!13295 = !DILocation(line: 0, scope: !13286)
!13296 = !DILocation(line: 263, column: 30, scope: !13274)
!13297 = !DILocation(line: 263, column: 52, scope: !13274)
!13298 = !DILocation(line: 263, column: 9, scope: !13274)
!13299 = !DILocation(line: 265, column: 19, scope: !13274)
!13300 = !DILocation(line: 266, column: 1, scope: !13274)
!13301 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !13302, file: !13302, line: 200, type: !13303, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !639)
!13302 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13303 = !DISubroutineType(types: !13304)
!13304 = !{!13305}
!13305 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3139, line: 44, baseType: !3138)
!13306 = !DILocation(line: 202, column: 3, scope: !13301)
!13307 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !13302, file: !13302, line: 219, type: !13308, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !13332)
!13308 = !DISubroutineType(types: !13309)
!13309 = !{!13305, !13310}
!13310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13311, size: 32)
!13311 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13312, line: 70, baseType: !13313)
!13312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13312, line: 49, size: 384, elements: !13314)
!13314 = !{!13315, !13316, !13317, !13318, !13319, !13320, !13321}
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13313, file: !13312, line: 51, baseType: !208, size: 32)
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13313, file: !13312, line: 54, baseType: !208, size: 32, offset: 32)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13313, file: !13312, line: 57, baseType: !208, size: 32, offset: 64)
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13313, file: !13312, line: 60, baseType: !208, size: 32, offset: 96)
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13313, file: !13312, line: 63, baseType: !208, size: 32, offset: 128)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13313, file: !13312, line: 66, baseType: !208, size: 32, offset: 160)
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13313, file: !13312, line: 69, baseType: !13322, size: 192, offset: 192)
!13322 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13323, line: 73, baseType: !13324)
!13323 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13323, line: 45, size: 192, elements: !13325)
!13325 = !{!13326, !13327, !13328, !13329, !13330, !13331}
!13326 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13324, file: !13323, line: 47, baseType: !208, size: 32)
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13324, file: !13323, line: 50, baseType: !208, size: 32, offset: 32)
!13328 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13324, file: !13323, line: 53, baseType: !208, size: 32, offset: 64)
!13329 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13324, file: !13323, line: 56, baseType: !208, size: 32, offset: 96)
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13324, file: !13323, line: 60, baseType: !208, size: 32, offset: 128)
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13324, file: !13323, line: 63, baseType: !208, size: 32, offset: 160)
!13332 = !{!13333, !13334, !13335, !13336, !13340}
!13333 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13307, file: !13302, line: 219, type: !13310)
!13334 = !DILocalVariable(name: "tickstart", scope: !13307, file: !13302, line: 221, type: !208)
!13335 = !DILocalVariable(name: "pll_config", scope: !13307, file: !13302, line: 221, type: !208)
!13336 = !DILocalVariable(name: "pwrclkchanged", scope: !13337, file: !13302, line: 391, type: !13339)
!13337 = distinct !DILexicalBlock(scope: !13338, file: !13302, line: 390, column: 3)
!13338 = distinct !DILexicalBlock(scope: !13307, file: !13302, line: 389, column: 6)
!13339 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !958, line: 188, baseType: !3145)
!13340 = !DILocalVariable(name: "tmpreg", scope: !13341, file: !13302, line: 400, type: !423)
!13341 = distinct !DILexicalBlock(scope: !13342, file: !13302, line: 400, column: 7)
!13342 = distinct !DILexicalBlock(scope: !13343, file: !13302, line: 399, column: 5)
!13343 = distinct !DILexicalBlock(scope: !13337, file: !13302, line: 398, column: 8)
!13344 = !DILocation(line: 0, scope: !13307)
!13345 = !DILocation(line: 224, column: 24, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13307, file: !13302, line: 224, column: 6)
!13347 = !DILocation(line: 224, column: 6, scope: !13307)
!13348 = !DILocation(line: 232, column: 27, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13307, file: !13302, line: 232, column: 6)
!13350 = !DILocation(line: 232, column: 43, scope: !13349)
!13351 = !DILocation(line: 232, column: 69, scope: !13349)
!13352 = !DILocation(line: 232, column: 6, scope: !13307)
!13353 = !DILocation(line: 237, column: 9, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13355, file: !13302, line: 237, column: 8)
!13355 = distinct !DILexicalBlock(scope: !13349, file: !13302, line: 233, column: 3)
!13356 = !DILocation(line: 237, column: 39, scope: !13354)
!13357 = !DILocation(line: 237, column: 60, scope: !13354)
!13358 = !DILocation(line: 238, column: 9, scope: !13354)
!13359 = !DILocation(line: 238, column: 39, scope: !13354)
!13360 = !DILocation(line: 238, column: 60, scope: !13354)
!13361 = !DILocation(line: 238, column: 70, scope: !13354)
!13362 = !DILocation(line: 238, column: 78, scope: !13354)
!13363 = !DILocation(line: 238, column: 100, scope: !13354)
!13364 = !DILocation(line: 237, column: 8, scope: !13355)
!13365 = !DILocation(line: 240, column: 11, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !13302, line: 240, column: 10)
!13367 = distinct !DILexicalBlock(scope: !13354, file: !13302, line: 239, column: 5)
!13368 = !DILocation(line: 240, column: 57, scope: !13366)
!13369 = !DILocation(line: 240, column: 80, scope: !13366)
!13370 = !DILocation(line: 240, column: 89, scope: !13366)
!13371 = !DILocation(line: 240, column: 10, scope: !13367)
!13372 = !DILocation(line: 248, column: 7, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13374, file: !13302, line: 248, column: 7)
!13374 = distinct !DILexicalBlock(scope: !13375, file: !13302, line: 248, column: 7)
!13375 = distinct !DILexicalBlock(scope: !13354, file: !13302, line: 246, column: 5)
!13376 = !DILocation(line: 248, column: 7, scope: !13374)
!13377 = !DILocation(line: 248, column: 7, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13373, file: !13302, line: 248, column: 7)
!13379 = !DILocation(line: 248, column: 7, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13381, file: !13302, line: 248, column: 7)
!13381 = distinct !DILexicalBlock(scope: !13373, file: !13302, line: 248, column: 7)
!13382 = !DILocation(line: 248, column: 7, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13381, file: !13302, line: 248, column: 7)
!13384 = !DILocation(line: 0, scope: !13373)
!13385 = !DILocation(line: 251, column: 30, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13375, file: !13302, line: 251, column: 10)
!13387 = !DILocation(line: 251, column: 40, scope: !13386)
!13388 = !DILocation(line: 0, scope: !13386)
!13389 = !DILocation(line: 251, column: 10, scope: !13375)
!13390 = !DILocation(line: 257, column: 15, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13386, file: !13302, line: 252, column: 7)
!13392 = !DILocation(line: 257, column: 51, scope: !13391)
!13393 = !DILocation(line: 257, column: 9, scope: !13391)
!13394 = !DILocation(line: 259, column: 15, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13396, file: !13302, line: 259, column: 14)
!13396 = distinct !DILexicalBlock(scope: !13391, file: !13302, line: 258, column: 9)
!13397 = !DILocation(line: 259, column: 29, scope: !13395)
!13398 = !DILocation(line: 259, column: 43, scope: !13395)
!13399 = !DILocation(line: 259, column: 14, scope: !13396)
!13400 = distinct !{!13400, !13393, !13401}
!13401 = !DILocation(line: 263, column: 9, scope: !13391)
!13402 = !DILocation(line: 271, column: 15, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13386, file: !13302, line: 266, column: 7)
!13404 = !DILocation(line: 271, column: 9, scope: !13403)
!13405 = !DILocation(line: 273, column: 15, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13407, file: !13302, line: 273, column: 14)
!13407 = distinct !DILexicalBlock(scope: !13403, file: !13302, line: 272, column: 9)
!13408 = !DILocation(line: 273, column: 29, scope: !13406)
!13409 = !DILocation(line: 273, column: 43, scope: !13406)
!13410 = !DILocation(line: 273, column: 14, scope: !13407)
!13411 = distinct !{!13411, !13404, !13412}
!13412 = !DILocation(line: 277, column: 9, scope: !13403)
!13413 = !DILocation(line: 282, column: 27, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13307, file: !13302, line: 282, column: 6)
!13415 = !DILocation(line: 282, column: 43, scope: !13414)
!13416 = !DILocation(line: 282, column: 69, scope: !13414)
!13417 = !DILocation(line: 282, column: 6, scope: !13307)
!13418 = !DILocation(line: 289, column: 9, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13420, file: !13302, line: 289, column: 8)
!13420 = distinct !DILexicalBlock(scope: !13414, file: !13302, line: 283, column: 3)
!13421 = !DILocation(line: 289, column: 39, scope: !13419)
!13422 = !DILocation(line: 289, column: 60, scope: !13419)
!13423 = !DILocation(line: 290, column: 9, scope: !13419)
!13424 = !DILocation(line: 290, column: 39, scope: !13419)
!13425 = !DILocation(line: 290, column: 60, scope: !13419)
!13426 = !DILocation(line: 290, column: 70, scope: !13419)
!13427 = !DILocation(line: 290, column: 78, scope: !13419)
!13428 = !DILocation(line: 290, column: 100, scope: !13419)
!13429 = !DILocation(line: 289, column: 8, scope: !13420)
!13430 = !DILocation(line: 293, column: 11, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13432, file: !13302, line: 293, column: 10)
!13432 = distinct !DILexicalBlock(scope: !13419, file: !13302, line: 291, column: 5)
!13433 = !DILocation(line: 293, column: 57, scope: !13431)
!13434 = !DILocation(line: 293, column: 80, scope: !13431)
!13435 = !DILocation(line: 293, column: 89, scope: !13431)
!13436 = !DILocation(line: 293, column: 10, scope: !13432)
!13437 = !DILocation(line: 307, column: 30, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !13302, line: 307, column: 10)
!13439 = distinct !DILexicalBlock(scope: !13419, file: !13302, line: 305, column: 5)
!13440 = !DILocation(line: 307, column: 39, scope: !13438)
!13441 = !DILocation(line: 307, column: 10, scope: !13439)
!13442 = !DILocation(line: 310, column: 9, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13438, file: !13302, line: 308, column: 7)
!13444 = !DILocation(line: 313, column: 21, scope: !13443)
!13445 = !DILocation(line: 316, column: 9, scope: !13443)
!13446 = !DILocation(line: 316, column: 15, scope: !13443)
!13447 = !DILocation(line: 316, column: 51, scope: !13443)
!13448 = !DILocation(line: 318, column: 15, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13450, file: !13302, line: 318, column: 14)
!13450 = distinct !DILexicalBlock(scope: !13443, file: !13302, line: 317, column: 9)
!13451 = !DILocation(line: 318, column: 29, scope: !13449)
!13452 = !DILocation(line: 318, column: 43, scope: !13449)
!13453 = !DILocation(line: 318, column: 14, scope: !13450)
!13454 = distinct !{!13454, !13445, !13455}
!13455 = !DILocation(line: 322, column: 9, scope: !13443)
!13456 = !DILocation(line: 330, column: 9, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13438, file: !13302, line: 328, column: 7)
!13458 = !DILocation(line: 333, column: 21, scope: !13457)
!13459 = !DILocation(line: 336, column: 9, scope: !13457)
!13460 = !DILocation(line: 336, column: 15, scope: !13457)
!13461 = !DILocation(line: 338, column: 15, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13463, file: !13302, line: 338, column: 14)
!13463 = distinct !DILexicalBlock(scope: !13457, file: !13302, line: 337, column: 9)
!13464 = !DILocation(line: 338, column: 29, scope: !13462)
!13465 = !DILocation(line: 338, column: 43, scope: !13462)
!13466 = !DILocation(line: 338, column: 14, scope: !13463)
!13467 = distinct !{!13467, !13459, !13468}
!13468 = !DILocation(line: 342, column: 9, scope: !13457)
!13469 = !DILocation(line: 0, scope: !13419)
!13470 = !DILocation(line: 347, column: 27, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13307, file: !13302, line: 347, column: 6)
!13472 = !DILocation(line: 347, column: 43, scope: !13471)
!13473 = !DILocation(line: 347, column: 69, scope: !13471)
!13474 = !DILocation(line: 347, column: 6, scope: !13307)
!13475 = !DILocation(line: 353, column: 28, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13477, file: !13302, line: 353, column: 8)
!13477 = distinct !DILexicalBlock(scope: !13471, file: !13302, line: 348, column: 3)
!13478 = !DILocation(line: 353, column: 37, scope: !13476)
!13479 = !DILocation(line: 353, column: 8, scope: !13477)
!13480 = !DILocation(line: 356, column: 7, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13476, file: !13302, line: 354, column: 5)
!13482 = !DILocation(line: 359, column: 19, scope: !13481)
!13483 = !DILocation(line: 362, column: 7, scope: !13481)
!13484 = !DILocation(line: 362, column: 13, scope: !13481)
!13485 = !DILocation(line: 362, column: 49, scope: !13481)
!13486 = !DILocation(line: 364, column: 13, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13488, file: !13302, line: 364, column: 12)
!13488 = distinct !DILexicalBlock(scope: !13481, file: !13302, line: 363, column: 7)
!13489 = !DILocation(line: 364, column: 27, scope: !13487)
!13490 = !DILocation(line: 364, column: 41, scope: !13487)
!13491 = !DILocation(line: 364, column: 12, scope: !13488)
!13492 = distinct !{!13492, !13483, !13493}
!13493 = !DILocation(line: 368, column: 7, scope: !13481)
!13494 = !DILocation(line: 373, column: 7, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13476, file: !13302, line: 371, column: 5)
!13496 = !DILocation(line: 376, column: 19, scope: !13495)
!13497 = !DILocation(line: 379, column: 7, scope: !13495)
!13498 = !DILocation(line: 379, column: 13, scope: !13495)
!13499 = !DILocation(line: 381, column: 13, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13501, file: !13302, line: 381, column: 12)
!13501 = distinct !DILexicalBlock(scope: !13495, file: !13302, line: 380, column: 7)
!13502 = !DILocation(line: 381, column: 27, scope: !13500)
!13503 = !DILocation(line: 381, column: 41, scope: !13500)
!13504 = !DILocation(line: 381, column: 12, scope: !13501)
!13505 = distinct !{!13505, !13497, !13506}
!13506 = !DILocation(line: 385, column: 7, scope: !13495)
!13507 = !DILocation(line: 389, column: 27, scope: !13338)
!13508 = !DILocation(line: 389, column: 43, scope: !13338)
!13509 = !DILocation(line: 389, column: 69, scope: !13338)
!13510 = !DILocation(line: 389, column: 6, scope: !13307)
!13511 = !DILocation(line: 0, scope: !13337)
!13512 = !DILocation(line: 398, column: 8, scope: !13343)
!13513 = !DILocation(line: 398, column: 8, scope: !13337)
!13514 = !DILocation(line: 400, column: 7, scope: !13341)
!13515 = !DILocation(line: 400, column: 7, scope: !13342)
!13516 = !DILocation(line: 402, column: 5, scope: !13342)
!13517 = !DILocation(line: 404, column: 8, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13337, file: !13302, line: 404, column: 8)
!13519 = !DILocation(line: 404, column: 8, scope: !13337)
!13520 = !DILocation(line: 407, column: 7, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13518, file: !13302, line: 405, column: 5)
!13522 = !DILocation(line: 410, column: 19, scope: !13521)
!13523 = !DILocation(line: 412, column: 7, scope: !13521)
!13524 = !DILocation(line: 412, column: 13, scope: !13521)
!13525 = !DILocation(line: 414, column: 13, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13527, file: !13302, line: 414, column: 12)
!13527 = distinct !DILexicalBlock(scope: !13521, file: !13302, line: 413, column: 7)
!13528 = !DILocation(line: 414, column: 27, scope: !13526)
!13529 = !DILocation(line: 414, column: 40, scope: !13526)
!13530 = !DILocation(line: 414, column: 12, scope: !13527)
!13531 = distinct !{!13531, !13523, !13532}
!13532 = !DILocation(line: 418, column: 7, scope: !13521)
!13533 = !DILocation(line: 422, column: 5, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13535, file: !13302, line: 422, column: 5)
!13535 = distinct !DILexicalBlock(scope: !13337, file: !13302, line: 422, column: 5)
!13536 = !DILocation(line: 422, column: 5, scope: !13535)
!13537 = !DILocation(line: 422, column: 5, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13534, file: !13302, line: 422, column: 5)
!13539 = !DILocation(line: 422, column: 5, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13541, file: !13302, line: 422, column: 5)
!13541 = distinct !DILexicalBlock(scope: !13534, file: !13302, line: 422, column: 5)
!13542 = !DILocation(line: 422, column: 5, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13541, file: !13302, line: 422, column: 5)
!13544 = !DILocation(line: 0, scope: !13534)
!13545 = !DILocation(line: 424, column: 28, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13337, file: !13302, line: 424, column: 8)
!13547 = !DILocation(line: 424, column: 38, scope: !13546)
!13548 = !DILocation(line: 0, scope: !13546)
!13549 = !DILocation(line: 424, column: 8, scope: !13337)
!13550 = !DILocation(line: 430, column: 13, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13546, file: !13302, line: 425, column: 5)
!13552 = !DILocation(line: 430, column: 49, scope: !13551)
!13553 = !DILocation(line: 430, column: 7, scope: !13551)
!13554 = !DILocation(line: 432, column: 13, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13556, file: !13302, line: 432, column: 12)
!13556 = distinct !DILexicalBlock(scope: !13551, file: !13302, line: 431, column: 7)
!13557 = !DILocation(line: 432, column: 27, scope: !13555)
!13558 = !DILocation(line: 432, column: 41, scope: !13555)
!13559 = !DILocation(line: 432, column: 12, scope: !13556)
!13560 = distinct !{!13560, !13553, !13561}
!13561 = !DILocation(line: 436, column: 7, scope: !13551)
!13562 = !DILocation(line: 444, column: 13, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13546, file: !13302, line: 439, column: 5)
!13564 = !DILocation(line: 444, column: 7, scope: !13563)
!13565 = !DILocation(line: 446, column: 13, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13567, file: !13302, line: 446, column: 12)
!13567 = distinct !DILexicalBlock(scope: !13563, file: !13302, line: 445, column: 7)
!13568 = !DILocation(line: 446, column: 27, scope: !13566)
!13569 = !DILocation(line: 446, column: 41, scope: !13566)
!13570 = !DILocation(line: 446, column: 12, scope: !13567)
!13571 = distinct !{!13571, !13564, !13572}
!13572 = !DILocation(line: 450, column: 7, scope: !13563)
!13573 = !DILocation(line: 454, column: 8, scope: !13337)
!13574 = !DILocation(line: 456, column: 7, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13576, file: !13302, line: 455, column: 5)
!13576 = distinct !DILexicalBlock(scope: !13337, file: !13302, line: 454, column: 8)
!13577 = !DILocation(line: 457, column: 5, scope: !13575)
!13578 = !DILocation(line: 462, column: 31, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13307, file: !13302, line: 462, column: 7)
!13580 = !DILocation(line: 462, column: 41, scope: !13579)
!13581 = !DILocation(line: 462, column: 7, scope: !13307)
!13582 = !DILocation(line: 465, column: 8, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13584, file: !13302, line: 465, column: 8)
!13584 = distinct !DILexicalBlock(scope: !13579, file: !13302, line: 463, column: 3)
!13585 = !DILocation(line: 465, column: 38, scope: !13583)
!13586 = !DILocation(line: 465, column: 8, scope: !13584)
!13587 = !DILocation(line: 467, column: 44, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13589, file: !13302, line: 467, column: 10)
!13589 = distinct !DILexicalBlock(scope: !13583, file: !13302, line: 466, column: 5)
!13590 = !DILocation(line: 0, scope: !13588)
!13591 = !DILocation(line: 467, column: 10, scope: !13589)
!13592 = !DILocation(line: 483, column: 15, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13588, file: !13302, line: 468, column: 7)
!13594 = !DILocation(line: 483, column: 9, scope: !13593)
!13595 = !DILocation(line: 485, column: 15, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13597, file: !13302, line: 485, column: 14)
!13597 = distinct !DILexicalBlock(scope: !13593, file: !13302, line: 484, column: 9)
!13598 = !DILocation(line: 485, column: 29, scope: !13596)
!13599 = !DILocation(line: 485, column: 43, scope: !13596)
!13600 = !DILocation(line: 485, column: 14, scope: !13597)
!13601 = distinct !{!13601, !13594, !13602}
!13602 = !DILocation(line: 489, column: 9, scope: !13593)
!13603 = !DILocation(line: 492, column: 9, scope: !13593)
!13604 = !DILocation(line: 498, column: 9, scope: !13593)
!13605 = !DILocation(line: 501, column: 21, scope: !13593)
!13606 = !DILocation(line: 504, column: 9, scope: !13593)
!13607 = !DILocation(line: 504, column: 15, scope: !13593)
!13608 = !DILocation(line: 504, column: 51, scope: !13593)
!13609 = !DILocation(line: 506, column: 15, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13611, file: !13302, line: 506, column: 14)
!13611 = distinct !DILexicalBlock(scope: !13593, file: !13302, line: 505, column: 9)
!13612 = !DILocation(line: 506, column: 29, scope: !13610)
!13613 = !DILocation(line: 506, column: 43, scope: !13610)
!13614 = !DILocation(line: 506, column: 14, scope: !13611)
!13615 = distinct !{!13615, !13606, !13616}
!13616 = !DILocation(line: 510, column: 9, scope: !13593)
!13617 = !DILocation(line: 521, column: 15, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13588, file: !13302, line: 513, column: 7)
!13619 = !DILocation(line: 521, column: 9, scope: !13618)
!13620 = !DILocation(line: 523, column: 15, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13622, file: !13302, line: 523, column: 14)
!13622 = distinct !DILexicalBlock(scope: !13618, file: !13302, line: 522, column: 9)
!13623 = !DILocation(line: 523, column: 29, scope: !13621)
!13624 = !DILocation(line: 523, column: 43, scope: !13621)
!13625 = !DILocation(line: 523, column: 14, scope: !13622)
!13626 = distinct !{!13626, !13619, !13627}
!13627 = !DILocation(line: 527, column: 9, scope: !13618)
!13628 = !DILocation(line: 533, column: 44, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13630, file: !13302, line: 533, column: 10)
!13630 = distinct !DILexicalBlock(scope: !13583, file: !13302, line: 531, column: 5)
!13631 = !DILocation(line: 533, column: 10, scope: !13630)
!13632 = !DILocation(line: 540, column: 27, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13629, file: !13302, line: 538, column: 7)
!13634 = !DILocation(line: 551, column: 14, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13633, file: !13302, line: 550, column: 13)
!13636 = !DILocation(line: 551, column: 81, scope: !13635)
!13637 = !DILocation(line: 551, column: 55, scope: !13635)
!13638 = !DILocation(line: 551, column: 92, scope: !13635)
!13639 = !DILocation(line: 552, column: 14, scope: !13635)
!13640 = !DILocation(line: 552, column: 80, scope: !13635)
!13641 = !DILocation(line: 552, column: 53, scope: !13635)
!13642 = !DILocation(line: 552, column: 111, scope: !13635)
!13643 = !DILocation(line: 553, column: 14, scope: !13635)
!13644 = !DILocation(line: 553, column: 80, scope: !13635)
!13645 = !DILocation(line: 553, column: 86, scope: !13635)
!13646 = !DILocation(line: 553, column: 53, scope: !13635)
!13647 = !DILocation(line: 553, column: 111, scope: !13635)
!13648 = !DILocation(line: 554, column: 14, scope: !13635)
!13649 = !DILocation(line: 554, column: 82, scope: !13635)
!13650 = !DILocation(line: 554, column: 101, scope: !13635)
!13651 = !DILocation(line: 554, column: 53, scope: !13635)
!13652 = !DILocation(line: 554, column: 126, scope: !13635)
!13653 = !DILocation(line: 555, column: 14, scope: !13635)
!13654 = !DILocation(line: 555, column: 80, scope: !13635)
!13655 = !DILocation(line: 555, column: 85, scope: !13635)
!13656 = !DILocation(line: 555, column: 53, scope: !13635)
!13657 = !DILocation(line: 550, column: 13, scope: !13633)
!13658 = !DILocation(line: 563, column: 3, scope: !13307)
!13659 = !DILocation(line: 564, column: 1, scope: !13307)
!13660 = !DISubprogram(name: "HAL_GetTick", scope: !13661, file: !13661, line: 234, type: !8410, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13661 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13662 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !13302, file: !13302, line: 591, type: !13663, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !13674)
!13663 = !DISubroutineType(types: !13664)
!13664 = !{!13305, !13665, !208}
!13665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13666, size: 32)
!13666 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !13312, line: 92, baseType: !13667)
!13667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13312, line: 75, size: 160, elements: !13668)
!13668 = !{!13669, !13670, !13671, !13672, !13673}
!13669 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !13667, file: !13312, line: 77, baseType: !208, size: 32)
!13670 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !13667, file: !13312, line: 80, baseType: !208, size: 32, offset: 32)
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13667, file: !13312, line: 83, baseType: !208, size: 32, offset: 64)
!13672 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13667, file: !13312, line: 86, baseType: !208, size: 32, offset: 96)
!13673 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13667, file: !13312, line: 89, baseType: !208, size: 32, offset: 128)
!13674 = !{!13675, !13676, !13677}
!13675 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13662, file: !13302, line: 591, type: !13665)
!13676 = !DILocalVariable(name: "FLatency", arg: 2, scope: !13662, file: !13302, line: 591, type: !208)
!13677 = !DILocalVariable(name: "tickstart", scope: !13662, file: !13302, line: 593, type: !208)
!13678 = !DILocation(line: 0, scope: !13662)
!13679 = !DILocation(line: 596, column: 24, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13662, file: !13302, line: 596, column: 6)
!13681 = !DILocation(line: 596, column: 6, scope: !13662)
!13682 = !DILocation(line: 610, column: 17, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13662, file: !13302, line: 610, column: 6)
!13684 = !DILocation(line: 610, column: 15, scope: !13683)
!13685 = !DILocation(line: 610, column: 6, scope: !13662)
!13686 = !DILocation(line: 613, column: 5, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13683, file: !13302, line: 611, column: 3)
!13688 = !DILocation(line: 617, column: 8, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13687, file: !13302, line: 617, column: 8)
!13690 = !DILocation(line: 617, column: 34, scope: !13689)
!13691 = !DILocation(line: 617, column: 8, scope: !13687)
!13692 = !DILocation(line: 624, column: 27, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13662, file: !13302, line: 624, column: 6)
!13694 = !DILocation(line: 624, column: 38, scope: !13693)
!13695 = !DILocation(line: 624, column: 60, scope: !13693)
!13696 = !DILocation(line: 624, column: 6, scope: !13662)
!13697 = !DILocation(line: 628, column: 40, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13699, file: !13302, line: 628, column: 8)
!13699 = distinct !DILexicalBlock(scope: !13693, file: !13302, line: 625, column: 3)
!13700 = !DILocation(line: 628, column: 63, scope: !13698)
!13701 = !DILocation(line: 628, column: 8, scope: !13699)
!13702 = !DILocation(line: 630, column: 7, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13698, file: !13302, line: 629, column: 5)
!13704 = !DILocation(line: 633, column: 29, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13699, file: !13302, line: 633, column: 8)
!13706 = !DILocation(line: 631, column: 5, scope: !13703)
!13707 = !DILocation(line: 633, column: 40, scope: !13705)
!13708 = !DILocation(line: 633, column: 63, scope: !13705)
!13709 = !DILocation(line: 633, column: 8, scope: !13699)
!13710 = !DILocation(line: 635, column: 7, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13705, file: !13302, line: 634, column: 5)
!13712 = !DILocation(line: 636, column: 5, scope: !13711)
!13713 = !DILocation(line: 639, column: 5, scope: !13699)
!13714 = !DILocation(line: 643, column: 27, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13662, file: !13302, line: 643, column: 6)
!13716 = !DILocation(line: 640, column: 3, scope: !13699)
!13717 = !DILocation(line: 643, column: 38, scope: !13715)
!13718 = !DILocation(line: 643, column: 62, scope: !13715)
!13719 = !DILocation(line: 643, column: 6, scope: !13662)
!13720 = !DILocation(line: 648, column: 27, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13722, file: !13302, line: 648, column: 8)
!13722 = distinct !DILexicalBlock(scope: !13715, file: !13302, line: 644, column: 3)
!13723 = !DILocation(line: 648, column: 8, scope: !13722)
!13724 = !DILocation(line: 651, column: 10, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13726, file: !13302, line: 651, column: 10)
!13726 = distinct !DILexicalBlock(scope: !13721, file: !13302, line: 649, column: 5)
!13727 = !DILocation(line: 651, column: 46, scope: !13725)
!13728 = !DILocation(line: 651, column: 10, scope: !13726)
!13729 = !DILocation(line: 661, column: 10, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !13302, line: 661, column: 10)
!13731 = distinct !DILexicalBlock(scope: !13732, file: !13302, line: 659, column: 5)
!13732 = distinct !DILexicalBlock(scope: !13721, file: !13302, line: 657, column: 13)
!13733 = !DILocation(line: 661, column: 46, scope: !13730)
!13734 = !DILocation(line: 661, column: 10, scope: !13731)
!13735 = !DILocation(line: 670, column: 10, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13737, file: !13302, line: 670, column: 10)
!13737 = distinct !DILexicalBlock(scope: !13732, file: !13302, line: 668, column: 5)
!13738 = !DILocation(line: 670, column: 46, scope: !13736)
!13739 = !DILocation(line: 670, column: 10, scope: !13737)
!13740 = !DILocation(line: 676, column: 5, scope: !13722)
!13741 = !DILocation(line: 679, column: 17, scope: !13722)
!13742 = !DILocation(line: 681, column: 5, scope: !13722)
!13743 = !DILocation(line: 681, column: 12, scope: !13722)
!13744 = !DILocation(line: 681, column: 65, scope: !13722)
!13745 = !DILocation(line: 681, column: 78, scope: !13722)
!13746 = !DILocation(line: 681, column: 42, scope: !13722)
!13747 = !DILocation(line: 683, column: 12, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13749, file: !13302, line: 683, column: 11)
!13749 = distinct !DILexicalBlock(scope: !13722, file: !13302, line: 682, column: 5)
!13750 = !DILocation(line: 683, column: 26, scope: !13748)
!13751 = !DILocation(line: 683, column: 39, scope: !13748)
!13752 = !DILocation(line: 683, column: 11, scope: !13749)
!13753 = distinct !{!13753, !13742, !13754}
!13754 = !DILocation(line: 687, column: 5, scope: !13722)
!13755 = !DILocation(line: 691, column: 17, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13662, file: !13302, line: 691, column: 6)
!13757 = !DILocation(line: 691, column: 15, scope: !13756)
!13758 = !DILocation(line: 691, column: 6, scope: !13662)
!13759 = !DILocation(line: 694, column: 5, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13756, file: !13302, line: 692, column: 3)
!13761 = !DILocation(line: 698, column: 8, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13760, file: !13302, line: 698, column: 8)
!13763 = !DILocation(line: 698, column: 34, scope: !13762)
!13764 = !DILocation(line: 698, column: 8, scope: !13760)
!13765 = !DILocation(line: 705, column: 27, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13662, file: !13302, line: 705, column: 6)
!13767 = !DILocation(line: 705, column: 38, scope: !13766)
!13768 = !DILocation(line: 705, column: 61, scope: !13766)
!13769 = !DILocation(line: 705, column: 6, scope: !13662)
!13770 = !DILocation(line: 708, column: 5, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13766, file: !13302, line: 706, column: 3)
!13772 = !DILocation(line: 712, column: 27, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13662, file: !13302, line: 712, column: 6)
!13774 = !DILocation(line: 709, column: 3, scope: !13771)
!13775 = !DILocation(line: 712, column: 38, scope: !13773)
!13776 = !DILocation(line: 712, column: 61, scope: !13773)
!13777 = !DILocation(line: 712, column: 6, scope: !13662)
!13778 = !DILocation(line: 715, column: 5, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13773, file: !13302, line: 713, column: 3)
!13780 = !DILocation(line: 716, column: 3, scope: !13779)
!13781 = !DILocation(line: 719, column: 21, scope: !13662)
!13782 = !DILocation(line: 719, column: 70, scope: !13662)
!13783 = !DILocation(line: 719, column: 91, scope: !13662)
!13784 = !DILocation(line: 719, column: 50, scope: !13662)
!13785 = !DILocation(line: 719, column: 47, scope: !13662)
!13786 = !DILocation(line: 719, column: 19, scope: !13662)
!13787 = !DILocation(line: 722, column: 17, scope: !13662)
!13788 = !DILocation(line: 722, column: 3, scope: !13662)
!13789 = !DILocation(line: 724, column: 3, scope: !13662)
!13790 = !DILocation(line: 725, column: 1, scope: !13662)
!13791 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !13302, file: !13302, line: 885, type: !8410, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !13792)
!13792 = !{!13793, !13794, !13795, !13796}
!13793 = !DILocalVariable(name: "pllm", scope: !13791, file: !13302, line: 887, type: !208)
!13794 = !DILocalVariable(name: "pllvco", scope: !13791, file: !13302, line: 887, type: !208)
!13795 = !DILocalVariable(name: "pllp", scope: !13791, file: !13302, line: 887, type: !208)
!13796 = !DILocalVariable(name: "sysclockfreq", scope: !13791, file: !13302, line: 888, type: !208)
!13797 = !DILocation(line: 0, scope: !13791)
!13798 = !DILocation(line: 891, column: 16, scope: !13791)
!13799 = !DILocation(line: 891, column: 21, scope: !13791)
!13800 = !DILocation(line: 891, column: 3, scope: !13791)
!13801 = !DILocation(line: 907, column: 19, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13803, file: !13302, line: 904, column: 5)
!13803 = distinct !DILexicalBlock(scope: !13791, file: !13302, line: 892, column: 3)
!13804 = !DILocation(line: 907, column: 27, scope: !13802)
!13805 = !DILocation(line: 908, column: 10, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13802, file: !13302, line: 908, column: 10)
!13807 = !DILocation(line: 0, scope: !13806)
!13808 = !DILocation(line: 918, column: 23, scope: !13802)
!13809 = !DILocation(line: 918, column: 82, scope: !13802)
!13810 = !DILocation(line: 920, column: 28, scope: !13802)
!13811 = !DILocation(line: 921, column: 7, scope: !13802)
!13812 = !DILocation(line: 0, scope: !13803)
!13813 = !DILocation(line: 929, column: 3, scope: !13791)
!13814 = !DISubprogram(name: "HAL_InitTick", scope: !13661, file: !13661, line: 223, type: !13815, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13815 = !DISubroutineType(types: !13816)
!13816 = !{!13305, !208}
!13817 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !13302, file: !13302, line: 775, type: !13818, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !13820)
!13818 = !DISubroutineType(types: !13819)
!13819 = !{null, !208, !208, !208}
!13820 = !{!13821, !13822, !13823, !13824, !13834, !13838}
!13821 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13817, file: !13302, line: 775, type: !208)
!13822 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13817, file: !13302, line: 775, type: !208)
!13823 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13817, file: !13302, line: 775, type: !208)
!13824 = !DILocalVariable(name: "GPIO_InitStruct", scope: !13817, file: !13302, line: 777, type: !13825)
!13825 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13826, line: 62, baseType: !13827)
!13826 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13826, line: 46, size: 160, elements: !13828)
!13828 = !{!13829, !13830, !13831, !13832, !13833}
!13829 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13827, file: !13826, line: 48, baseType: !208, size: 32)
!13830 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13827, file: !13826, line: 51, baseType: !208, size: 32, offset: 32)
!13831 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13827, file: !13826, line: 54, baseType: !208, size: 32, offset: 64)
!13832 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13827, file: !13826, line: 57, baseType: !208, size: 32, offset: 96)
!13833 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13827, file: !13826, line: 60, baseType: !208, size: 32, offset: 128)
!13834 = !DILocalVariable(name: "tmpreg", scope: !13835, file: !13302, line: 787, type: !423)
!13835 = distinct !DILexicalBlock(scope: !13836, file: !13302, line: 787, column: 5)
!13836 = distinct !DILexicalBlock(scope: !13837, file: !13302, line: 783, column: 3)
!13837 = distinct !DILexicalBlock(scope: !13817, file: !13302, line: 782, column: 6)
!13838 = !DILocalVariable(name: "tmpreg", scope: !13839, file: !13302, line: 811, type: !423)
!13839 = distinct !DILexicalBlock(scope: !13840, file: !13302, line: 811, column: 5)
!13840 = distinct !DILexicalBlock(scope: !13837, file: !13302, line: 807, column: 3)
!13841 = !DILocation(line: 0, scope: !13817)
!13842 = !DILocation(line: 777, column: 3, scope: !13817)
!13843 = !DILocation(line: 777, column: 20, scope: !13817)
!13844 = !DILocation(line: 782, column: 15, scope: !13837)
!13845 = !DILocation(line: 782, column: 6, scope: !13817)
!13846 = !DILocation(line: 787, column: 5, scope: !13835)
!13847 = !DILocation(line: 787, column: 5, scope: !13836)
!13848 = !DILocation(line: 790, column: 21, scope: !13836)
!13849 = !DILocation(line: 790, column: 25, scope: !13836)
!13850 = !DILocation(line: 791, column: 21, scope: !13836)
!13851 = !DILocation(line: 791, column: 26, scope: !13836)
!13852 = !DILocation(line: 792, column: 21, scope: !13836)
!13853 = !DILocation(line: 792, column: 27, scope: !13836)
!13854 = !DILocation(line: 793, column: 21, scope: !13836)
!13855 = !DILocation(line: 793, column: 26, scope: !13836)
!13856 = !DILocation(line: 794, column: 21, scope: !13836)
!13857 = !DILocation(line: 794, column: 31, scope: !13836)
!13858 = !DILocation(line: 795, column: 5, scope: !13836)
!13859 = !DILocation(line: 798, column: 5, scope: !13836)
!13860 = !DILocation(line: 804, column: 3, scope: !13836)
!13861 = !DILocation(line: 811, column: 5, scope: !13839)
!13862 = !DILocation(line: 811, column: 5, scope: !13840)
!13863 = !DILocation(line: 814, column: 21, scope: !13840)
!13864 = !DILocation(line: 814, column: 25, scope: !13840)
!13865 = !DILocation(line: 815, column: 21, scope: !13840)
!13866 = !DILocation(line: 815, column: 26, scope: !13840)
!13867 = !DILocation(line: 816, column: 21, scope: !13840)
!13868 = !DILocation(line: 816, column: 27, scope: !13840)
!13869 = !DILocation(line: 817, column: 21, scope: !13840)
!13870 = !DILocation(line: 817, column: 26, scope: !13840)
!13871 = !DILocation(line: 818, column: 21, scope: !13840)
!13872 = !DILocation(line: 818, column: 31, scope: !13840)
!13873 = !DILocation(line: 819, column: 5, scope: !13840)
!13874 = !DILocation(line: 822, column: 5, scope: !13840)
!13875 = !DILocation(line: 0, scope: !13837)
!13876 = !DILocation(line: 830, column: 1, scope: !13817)
!13877 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13826, file: !13826, line: 224, type: !13878, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13878 = !DISubroutineType(types: !13879)
!13879 = !{null, !3208, !13880}
!13880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13825, size: 32)
!13881 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !13302, file: !13302, line: 841, type: !3326, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !639)
!13882 = !DILocation(line: 843, column: 38, scope: !13881)
!13883 = !DILocation(line: 844, column: 1, scope: !13881)
!13884 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !13302, file: !13302, line: 850, type: !3326, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !639)
!13885 = !DILocation(line: 852, column: 38, scope: !13884)
!13886 = !DILocation(line: 853, column: 1, scope: !13884)
!13887 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !13302, file: !13302, line: 941, type: !8410, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !639)
!13888 = !DILocation(line: 943, column: 10, scope: !13887)
!13889 = !DILocation(line: 943, column: 3, scope: !13887)
!13890 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !13302, file: !13302, line: 952, type: !8410, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !639)
!13891 = !DILocation(line: 955, column: 11, scope: !13890)
!13892 = !DILocation(line: 955, column: 56, scope: !13890)
!13893 = !DILocation(line: 955, column: 78, scope: !13890)
!13894 = !DILocation(line: 955, column: 36, scope: !13890)
!13895 = !DILocation(line: 955, column: 33, scope: !13890)
!13896 = !DILocation(line: 955, column: 3, scope: !13890)
!13897 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !13302, file: !13302, line: 964, type: !8410, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !639)
!13898 = !DILocation(line: 967, column: 11, scope: !13897)
!13899 = !DILocation(line: 967, column: 55, scope: !13897)
!13900 = !DILocation(line: 967, column: 77, scope: !13897)
!13901 = !DILocation(line: 967, column: 35, scope: !13897)
!13902 = !DILocation(line: 967, column: 32, scope: !13897)
!13903 = !DILocation(line: 967, column: 3, scope: !13897)
!13904 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !13302, file: !13302, line: 977, type: !13905, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !13907)
!13905 = !DISubroutineType(types: !13906)
!13906 = !{null, !13310}
!13907 = !{!13908}
!13908 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13904, file: !13302, line: 977, type: !13310)
!13909 = !DILocation(line: 0, scope: !13904)
!13910 = !DILocation(line: 980, column: 22, scope: !13904)
!13911 = !DILocation(line: 980, column: 37, scope: !13904)
!13912 = !DILocation(line: 983, column: 12, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13904, file: !13302, line: 983, column: 6)
!13914 = !DILocation(line: 983, column: 15, scope: !13913)
!13915 = !DILocation(line: 983, column: 31, scope: !13913)
!13916 = !DILocation(line: 983, column: 6, scope: !13904)
!13917 = !DILocation(line: 985, column: 24, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13913, file: !13302, line: 984, column: 3)
!13919 = !DILocation(line: 985, column: 33, scope: !13918)
!13920 = !DILocation(line: 986, column: 3, scope: !13918)
!13921 = !DILocation(line: 987, column: 17, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13913, file: !13302, line: 987, column: 11)
!13923 = !DILocation(line: 987, column: 20, scope: !13922)
!13924 = !DILocation(line: 987, column: 35, scope: !13922)
!13925 = !DILocation(line: 0, scope: !13922)
!13926 = !DILocation(line: 987, column: 11, scope: !13913)
!13927 = !DILocation(line: 989, column: 33, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13922, file: !13302, line: 988, column: 3)
!13929 = !DILocation(line: 990, column: 3, scope: !13928)
!13930 = !DILocation(line: 993, column: 33, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13922, file: !13302, line: 992, column: 3)
!13932 = !DILocation(line: 997, column: 12, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13904, file: !13302, line: 997, column: 6)
!13934 = !DILocation(line: 997, column: 15, scope: !13933)
!13935 = !DILocation(line: 1003, column: 24, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13933, file: !13302, line: 1002, column: 3)
!13937 = !DILocation(line: 1003, column: 33, scope: !13936)
!13938 = !DILocation(line: 1006, column: 61, scope: !13904)
!13939 = !DILocation(line: 1006, column: 81, scope: !13904)
!13940 = !DILocation(line: 1006, column: 22, scope: !13904)
!13941 = !DILocation(line: 1006, column: 42, scope: !13904)
!13942 = !DILocation(line: 1009, column: 12, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13904, file: !13302, line: 1009, column: 6)
!13944 = !DILocation(line: 1009, column: 17, scope: !13943)
!13945 = !DILocation(line: 1009, column: 35, scope: !13943)
!13946 = !DILocation(line: 1009, column: 6, scope: !13904)
!13947 = !DILocation(line: 1011, column: 24, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13943, file: !13302, line: 1010, column: 3)
!13949 = !DILocation(line: 1011, column: 33, scope: !13948)
!13950 = !DILocation(line: 1012, column: 3, scope: !13948)
!13951 = !DILocation(line: 1013, column: 17, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13943, file: !13302, line: 1013, column: 11)
!13953 = !DILocation(line: 1013, column: 22, scope: !13952)
!13954 = !DILocation(line: 1013, column: 39, scope: !13952)
!13955 = !DILocation(line: 0, scope: !13952)
!13956 = !DILocation(line: 1013, column: 11, scope: !13943)
!13957 = !DILocation(line: 1015, column: 33, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13952, file: !13302, line: 1014, column: 3)
!13959 = !DILocation(line: 1016, column: 3, scope: !13958)
!13960 = !DILocation(line: 1019, column: 33, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13952, file: !13302, line: 1018, column: 3)
!13962 = !DILocation(line: 1023, column: 12, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13904, file: !13302, line: 1023, column: 6)
!13964 = !DILocation(line: 1023, column: 16, scope: !13963)
!13965 = !DILocation(line: 1029, column: 24, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13963, file: !13302, line: 1028, column: 3)
!13967 = !DILocation(line: 1029, column: 33, scope: !13966)
!13968 = !DILocation(line: 1033, column: 12, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13904, file: !13302, line: 1033, column: 6)
!13970 = !DILocation(line: 1033, column: 15, scope: !13969)
!13971 = !DILocation(line: 1033, column: 30, scope: !13969)
!13972 = !DILocation(line: 1033, column: 6, scope: !13904)
!13973 = !DILocation(line: 1039, column: 28, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13969, file: !13302, line: 1038, column: 3)
!13975 = !DILocation(line: 1039, column: 37, scope: !13974)
!13976 = !DILocation(line: 1041, column: 54, scope: !13904)
!13977 = !DILocation(line: 1041, column: 62, scope: !13904)
!13978 = !DILocation(line: 1041, column: 26, scope: !13904)
!13979 = !DILocation(line: 1041, column: 36, scope: !13904)
!13980 = !DILocation(line: 1042, column: 49, scope: !13904)
!13981 = !DILocation(line: 1042, column: 57, scope: !13904)
!13982 = !DILocation(line: 1042, column: 26, scope: !13904)
!13983 = !DILocation(line: 1042, column: 31, scope: !13904)
!13984 = !DILocation(line: 1043, column: 50, scope: !13904)
!13985 = !DILocation(line: 1043, column: 78, scope: !13904)
!13986 = !DILocation(line: 1043, column: 26, scope: !13904)
!13987 = !DILocation(line: 1043, column: 31, scope: !13904)
!13988 = !DILocation(line: 1044, column: 52, scope: !13904)
!13989 = !DILocation(line: 1044, column: 102, scope: !13904)
!13990 = !DILocation(line: 1044, column: 109, scope: !13904)
!13991 = !DILocation(line: 1044, column: 26, scope: !13904)
!13992 = !DILocation(line: 1044, column: 31, scope: !13904)
!13993 = !DILocation(line: 1045, column: 50, scope: !13904)
!13994 = !DILocation(line: 1045, column: 78, scope: !13904)
!13995 = !DILocation(line: 1045, column: 26, scope: !13904)
!13996 = !DILocation(line: 1045, column: 31, scope: !13904)
!13997 = !DILocation(line: 1046, column: 1, scope: !13904)
!13998 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !13302, file: !13302, line: 1056, type: !13999, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !14001)
!13999 = !DISubroutineType(types: !14000)
!14000 = !{null, !13665, !1014}
!14001 = !{!14002, !14003}
!14002 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13998, file: !13302, line: 1056, type: !13665)
!14003 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13998, file: !13302, line: 1056, type: !1014)
!14004 = !DILocation(line: 0, scope: !13998)
!14005 = !DILocation(line: 1059, column: 22, scope: !13998)
!14006 = !DILocation(line: 1059, column: 32, scope: !13998)
!14007 = !DILocation(line: 1062, column: 53, scope: !13998)
!14008 = !DILocation(line: 1062, column: 58, scope: !13998)
!14009 = !DILocation(line: 1062, column: 22, scope: !13998)
!14010 = !DILocation(line: 1062, column: 35, scope: !13998)
!14011 = !DILocation(line: 1065, column: 54, scope: !13998)
!14012 = !DILocation(line: 1065, column: 59, scope: !13998)
!14013 = !DILocation(line: 1065, column: 22, scope: !13998)
!14014 = !DILocation(line: 1065, column: 36, scope: !13998)
!14015 = !DILocation(line: 1068, column: 55, scope: !13998)
!14016 = !DILocation(line: 1068, column: 60, scope: !13998)
!14017 = !DILocation(line: 1068, column: 22, scope: !13998)
!14018 = !DILocation(line: 1068, column: 37, scope: !13998)
!14019 = !DILocation(line: 1071, column: 56, scope: !13998)
!14020 = !DILocation(line: 1071, column: 79, scope: !13998)
!14021 = !DILocation(line: 1071, column: 22, scope: !13998)
!14022 = !DILocation(line: 1071, column: 37, scope: !13998)
!14023 = !DILocation(line: 1074, column: 34, scope: !13998)
!14024 = !DILocation(line: 1074, column: 38, scope: !13998)
!14025 = !DILocation(line: 1074, column: 14, scope: !13998)
!14026 = !DILocation(line: 1075, column: 1, scope: !13998)
!14027 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !13302, file: !13302, line: 1082, type: !3326, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !639)
!14028 = !DILocation(line: 1085, column: 6, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14027, file: !13302, line: 1085, column: 6)
!14030 = !DILocation(line: 1085, column: 6, scope: !14027)
!14031 = !DILocation(line: 1088, column: 5, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !14029, file: !13302, line: 1086, column: 3)
!14033 = !DILocation(line: 1091, column: 5, scope: !14032)
!14034 = !DILocation(line: 1092, column: 3, scope: !14032)
!14035 = !DILocation(line: 1093, column: 1, scope: !14027)
!14036 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !13302, file: !13302, line: 1099, type: !3326, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !639)
!14037 = !DILocation(line: 1104, column: 1, scope: !14036)
!14038 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !14039, file: !14039, line: 257, type: !8420, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14040)
!14039 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14040 = !{!14041}
!14041 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14038, file: !14039, line: 257, type: !208)
!14042 = !DILocation(line: 0, scope: !14038)
!14043 = !DILocation(line: 260, column: 3, scope: !14038)
!14044 = !DILocation(line: 261, column: 1, scope: !14038)
!14045 = distinct !DISubprogram(name: "LL_InitTick", scope: !14046, file: !14046, line: 260, type: !11699, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14047)
!14046 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14047 = !{!14048, !14049}
!14048 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14045, file: !14046, line: 260, type: !208)
!14049 = !DILocalVariable(name: "Ticks", arg: 2, scope: !14045, file: !14046, line: 260, type: !208)
!14050 = !DILocation(line: 0, scope: !14045)
!14051 = !DILocation(line: 263, column: 46, scope: !14045)
!14052 = !DILocation(line: 263, column: 55, scope: !14045)
!14053 = !DILocation(line: 263, column: 18, scope: !14045)
!14054 = !DILocation(line: 264, column: 18, scope: !14045)
!14055 = !DILocation(line: 265, column: 18, scope: !14045)
!14056 = !DILocation(line: 267, column: 1, scope: !14045)
!14057 = distinct !DISubprogram(name: "LL_mDelay", scope: !14039, file: !14039, line: 273, type: !8420, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14058)
!14058 = !{!14059, !14060}
!14059 = !DILocalVariable(name: "Delay", arg: 1, scope: !14057, file: !14039, line: 273, type: !208)
!14060 = !DILocalVariable(name: "tmp", scope: !14057, file: !14039, line: 275, type: !423)
!14061 = !DILocation(line: 0, scope: !14057)
!14062 = !DILocation(line: 275, column: 3, scope: !14057)
!14063 = !DILocation(line: 275, column: 18, scope: !14057)
!14064 = !DILocation(line: 275, column: 33, scope: !14057)
!14065 = !DILocation(line: 277, column: 10, scope: !14057)
!14066 = !DILocation(line: 280, column: 12, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14057, file: !14039, line: 280, column: 6)
!14068 = !DILocation(line: 285, column: 3, scope: !14057)
!14069 = !DILocation(line: 287, column: 18, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14071, file: !14039, line: 287, column: 8)
!14071 = distinct !DILexicalBlock(scope: !14057, file: !14039, line: 286, column: 3)
!14072 = !DILocation(line: 292, column: 1, scope: !14057)
!14073 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !14039, file: !14039, line: 323, type: !8420, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14074)
!14074 = !{!14075}
!14075 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14073, file: !14039, line: 323, type: !208)
!14076 = !DILocation(line: 0, scope: !14073)
!14077 = !DILocation(line: 326, column: 19, scope: !14073)
!14078 = !DILocation(line: 327, column: 1, scope: !14073)
!14079 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !14039, file: !14039, line: 338, type: !14080, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14083)
!14080 = !DISubroutineType(types: !14081)
!14081 = !{!14082, !208}
!14082 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !958, line: 201, baseType: !957)
!14083 = !{!14084, !14085, !14086, !14087, !14088}
!14084 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !14079, file: !14039, line: 338, type: !208)
!14085 = !DILocalVariable(name: "timeout", scope: !14079, file: !14039, line: 340, type: !208)
!14086 = !DILocalVariable(name: "getlatency", scope: !14079, file: !14039, line: 341, type: !208)
!14087 = !DILocalVariable(name: "latency", scope: !14079, file: !14039, line: 342, type: !208)
!14088 = !DILocalVariable(name: "status", scope: !14079, file: !14039, line: 343, type: !14082)
!14089 = !DILocation(line: 0, scope: !14079)
!14090 = !DILocation(line: 347, column: 21, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14079, file: !14039, line: 347, column: 6)
!14092 = !DILocation(line: 347, column: 6, scope: !14079)
!14093 = !DILocation(line: 353, column: 8, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !14039, line: 353, column: 8)
!14095 = distinct !DILexicalBlock(scope: !14091, file: !14039, line: 352, column: 3)
!14096 = !DILocation(line: 387, column: 8, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14095, file: !14039, line: 387, column: 8)
!14098 = !DILocation(line: 387, column: 40, scope: !14097)
!14099 = !DILocation(line: 387, column: 8, scope: !14095)
!14100 = !DILocation(line: 407, column: 26, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14102, file: !14039, line: 407, column: 10)
!14102 = distinct !DILexicalBlock(scope: !14097, file: !14039, line: 388, column: 5)
!14103 = !DILocation(line: 407, column: 55, scope: !14101)
!14104 = !DILocation(line: 413, column: 28, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14106, file: !14039, line: 413, column: 12)
!14106 = distinct !DILexicalBlock(scope: !14101, file: !14039, line: 412, column: 7)
!14107 = !DILocation(line: 413, column: 57, scope: !14105)
!14108 = !DILocation(line: 420, column: 8, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14095, file: !14039, line: 420, column: 8)
!14110 = !DILocation(line: 420, column: 40, scope: !14109)
!14111 = !DILocation(line: 420, column: 8, scope: !14095)
!14112 = !DILocation(line: 429, column: 26, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14114, file: !14039, line: 429, column: 10)
!14114 = distinct !DILexicalBlock(scope: !14109, file: !14039, line: 421, column: 5)
!14115 = !DILocation(line: 429, column: 55, scope: !14113)
!14116 = !DILocation(line: 435, column: 28, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14118, file: !14039, line: 435, column: 12)
!14118 = distinct !DILexicalBlock(scope: !14113, file: !14039, line: 434, column: 7)
!14119 = !DILocation(line: 435, column: 57, scope: !14117)
!14120 = !DILocation(line: 0, scope: !14095)
!14121 = !DILocation(line: 444, column: 5, scope: !14095)
!14122 = !DILocation(line: 448, column: 5, scope: !14095)
!14123 = !DILocation(line: 451, column: 18, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14095, file: !14039, line: 449, column: 5)
!14125 = !DILocation(line: 452, column: 12, scope: !14124)
!14126 = !DILocation(line: 453, column: 26, scope: !14095)
!14127 = !DILocation(line: 453, column: 38, scope: !14095)
!14128 = !DILocation(line: 453, column: 5, scope: !14124)
!14129 = distinct !{!14129, !14122, !14130}
!14130 = !DILocation(line: 453, column: 54, scope: !14095)
!14131 = !DILocation(line: 0, scope: !14091)
!14132 = !DILocation(line: 464, column: 3, scope: !14079)
!14133 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !14134, file: !14134, line: 519, type: !8410, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14134 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14135 = !DILocation(line: 521, column: 21, scope: !14133)
!14136 = !DILocation(line: 521, column: 3, scope: !14133)
!14137 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6883, file: !6883, line: 1543, type: !8420, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14138)
!14138 = !{!14139}
!14139 = !DILocalVariable(name: "Latency", arg: 1, scope: !14137, file: !6883, line: 1543, type: !208)
!14140 = !DILocation(line: 0, scope: !14137)
!14141 = !DILocation(line: 1545, column: 3, scope: !14137)
!14142 = !DILocation(line: 1546, column: 1, scope: !14137)
!14143 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6883, file: !6883, line: 1569, type: !8410, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14144 = !DILocation(line: 1571, column: 21, scope: !14143)
!14145 = !DILocation(line: 1571, column: 3, scope: !14143)
!14146 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !14039, file: !14039, line: 483, type: !14147, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14163)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{!14082, !14149, !14156}
!14149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14150, size: 32)
!14150 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !14046, line: 114, baseType: !14151)
!14151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14046, line: 94, size: 96, elements: !14152)
!14152 = !{!14153, !14154, !14155}
!14153 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !14151, file: !14046, line: 96, baseType: !208, size: 32)
!14154 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !14151, file: !14046, line: 102, baseType: !208, size: 32, offset: 32)
!14155 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !14151, file: !14046, line: 109, baseType: !208, size: 32, offset: 64)
!14156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14157, size: 32)
!14157 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !14046, line: 139, baseType: !14158)
!14158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14046, line: 119, size: 96, elements: !14159)
!14159 = !{!14160, !14161, !14162}
!14160 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14158, file: !14046, line: 121, baseType: !208, size: 32)
!14161 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14158, file: !14046, line: 127, baseType: !208, size: 32, offset: 32)
!14162 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14158, file: !14046, line: 133, baseType: !208, size: 32, offset: 64)
!14163 = !{!14164, !14165, !14166, !14167}
!14164 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !14146, file: !14039, line: 483, type: !14149)
!14165 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14146, file: !14039, line: 484, type: !14156)
!14166 = !DILocalVariable(name: "status", scope: !14146, file: !14039, line: 486, type: !14082)
!14167 = !DILocalVariable(name: "pllfreq", scope: !14146, file: !14039, line: 487, type: !208)
!14168 = !DILocation(line: 0, scope: !14146)
!14169 = !DILocation(line: 490, column: 6, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14146, file: !14039, line: 490, column: 6)
!14171 = !DILocation(line: 490, column: 25, scope: !14170)
!14172 = !DILocation(line: 490, column: 6, scope: !14146)
!14173 = !DILocation(line: 493, column: 15, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14170, file: !14039, line: 491, column: 3)
!14175 = !DILocation(line: 496, column: 8, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14174, file: !14039, line: 496, column: 8)
!14177 = !DILocation(line: 496, column: 29, scope: !14176)
!14178 = !DILocation(line: 496, column: 8, scope: !14174)
!14179 = !DILocation(line: 498, column: 7, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14176, file: !14039, line: 497, column: 5)
!14181 = !DILocation(line: 499, column: 7, scope: !14180)
!14182 = !DILocation(line: 499, column: 14, scope: !14180)
!14183 = !DILocation(line: 499, column: 35, scope: !14180)
!14184 = distinct !{!14184, !14181, !14185}
!14185 = !DILocation(line: 502, column: 7, scope: !14180)
!14186 = !DILocation(line: 506, column: 76, scope: !14174)
!14187 = !DILocation(line: 506, column: 103, scope: !14174)
!14188 = !DILocation(line: 507, column: 54, scope: !14174)
!14189 = !DILocation(line: 506, column: 5, scope: !14174)
!14190 = !DILocation(line: 510, column: 14, scope: !14174)
!14191 = !DILocation(line: 511, column: 3, scope: !14174)
!14192 = !DILocation(line: 0, scope: !14170)
!14193 = !DILocation(line: 518, column: 3, scope: !14146)
!14194 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !14039, file: !14039, line: 642, type: !14195, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14197)
!14195 = !DISubroutineType(types: !14196)
!14196 = !{!14082}
!14197 = !{!14198}
!14198 = !DILocalVariable(name: "status", scope: !14194, file: !14039, line: 644, type: !14082)
!14199 = !DILocation(line: 0, scope: !14194)
!14200 = !DILocation(line: 647, column: 6, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14194, file: !14039, line: 647, column: 6)
!14202 = !DILocation(line: 647, column: 27, scope: !14201)
!14203 = !DILocation(line: 663, column: 6, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14194, file: !14039, line: 663, column: 6)
!14205 = !DILocation(line: 663, column: 30, scope: !14204)
!14206 = !DILocation(line: 663, column: 6, scope: !14194)
!14207 = !DILocation(line: 669, column: 3, scope: !14194)
!14208 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !14039, file: !14039, line: 611, type: !14209, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14211)
!14209 = !DISubroutineType(types: !14210)
!14210 = !{!208, !208, !14149}
!14211 = !{!14212, !14213, !14214}
!14212 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14208, file: !14039, line: 611, type: !208)
!14213 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14208, file: !14039, line: 611, type: !14149)
!14214 = !DILocalVariable(name: "pllfreq", scope: !14208, file: !14039, line: 613, type: !208)
!14215 = !DILocation(line: 0, scope: !14208)
!14216 = !DILocation(line: 622, column: 56, scope: !14208)
!14217 = !DILocation(line: 622, column: 61, scope: !14208)
!14218 = !DILocation(line: 622, column: 32, scope: !14208)
!14219 = !DILocation(line: 626, column: 45, scope: !14208)
!14220 = !DILocation(line: 626, column: 50, scope: !14208)
!14221 = !DILocation(line: 626, column: 21, scope: !14208)
!14222 = !DILocation(line: 630, column: 47, scope: !14208)
!14223 = !DILocation(line: 630, column: 82, scope: !14208)
!14224 = !DILocation(line: 630, column: 21, scope: !14208)
!14225 = !DILocation(line: 633, column: 3, scope: !14208)
!14226 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10603, file: !10603, line: 3007, type: !8410, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14227 = !DILocation(line: 3009, column: 11, scope: !14226)
!14228 = !DILocation(line: 3009, column: 44, scope: !14226)
!14229 = !DILocation(line: 3009, column: 3, scope: !14226)
!14230 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10603, file: !10603, line: 2987, type: !3326, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14231 = !DILocation(line: 2989, column: 3, scope: !14230)
!14232 = !DILocation(line: 2990, column: 1, scope: !14230)
!14233 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10603, file: !10603, line: 4304, type: !10737, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14234)
!14234 = !{!14235, !14236, !14237, !14238}
!14235 = !DILocalVariable(name: "Source", arg: 1, scope: !14233, file: !10603, line: 4304, type: !208)
!14236 = !DILocalVariable(name: "PLLM", arg: 2, scope: !14233, file: !10603, line: 4304, type: !208)
!14237 = !DILocalVariable(name: "PLLN", arg: 3, scope: !14233, file: !10603, line: 4304, type: !208)
!14238 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !14233, file: !10603, line: 4304, type: !208)
!14239 = !DILocation(line: 0, scope: !14233)
!14240 = !DILocation(line: 4306, column: 3, scope: !14233)
!14241 = !DILocation(line: 4308, column: 3, scope: !14233)
!14242 = !DILocation(line: 4312, column: 1, scope: !14233)
!14243 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !14039, file: !14039, line: 681, type: !14244, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14246)
!14244 = !DISubroutineType(types: !14245)
!14245 = !{!14082, !208, !14156}
!14246 = !{!14247, !14248, !14249, !14250}
!14247 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14243, file: !14039, line: 681, type: !208)
!14248 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14243, file: !14039, line: 681, type: !14156)
!14249 = !DILocalVariable(name: "status", scope: !14243, file: !14039, line: 683, type: !14082)
!14250 = !DILocalVariable(name: "hclk_frequency", scope: !14243, file: !14039, line: 684, type: !208)
!14251 = !DILocation(line: 0, scope: !14243)
!14252 = !DILocation(line: 691, column: 20, scope: !14243)
!14253 = !DILocation(line: 694, column: 6, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14243, file: !14039, line: 694, column: 6)
!14255 = !DILocation(line: 694, column: 22, scope: !14254)
!14256 = !DILocation(line: 694, column: 6, scope: !14243)
!14257 = !DILocation(line: 697, column: 14, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14254, file: !14039, line: 695, column: 3)
!14259 = !DILocation(line: 701, column: 13, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14243, file: !14039, line: 701, column: 6)
!14261 = !DILocation(line: 701, column: 6, scope: !14243)
!14262 = !DILocation(line: 704, column: 5, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14260, file: !14039, line: 702, column: 3)
!14264 = !DILocation(line: 705, column: 5, scope: !14263)
!14265 = !DILocation(line: 705, column: 12, scope: !14263)
!14266 = !DILocation(line: 705, column: 33, scope: !14263)
!14267 = distinct !{!14267, !14264, !14268}
!14268 = !DILocation(line: 708, column: 5, scope: !14263)
!14269 = !DILocation(line: 711, column: 49, scope: !14263)
!14270 = !DILocation(line: 711, column: 5, scope: !14263)
!14271 = !DILocation(line: 712, column: 5, scope: !14263)
!14272 = !DILocation(line: 713, column: 5, scope: !14263)
!14273 = !DILocation(line: 713, column: 12, scope: !14263)
!14274 = !DILocation(line: 713, column: 37, scope: !14263)
!14275 = distinct !{!14275, !14272, !14276}
!14276 = !DILocation(line: 716, column: 5, scope: !14263)
!14277 = !DILocation(line: 719, column: 50, scope: !14263)
!14278 = !DILocation(line: 719, column: 5, scope: !14263)
!14279 = !DILocation(line: 720, column: 50, scope: !14263)
!14280 = !DILocation(line: 720, column: 5, scope: !14263)
!14281 = !DILocation(line: 721, column: 3, scope: !14263)
!14282 = !DILocation(line: 724, column: 6, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14243, file: !14039, line: 724, column: 6)
!14284 = !DILocation(line: 724, column: 22, scope: !14283)
!14285 = !DILocation(line: 724, column: 6, scope: !14243)
!14286 = !DILocation(line: 727, column: 14, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !14283, file: !14039, line: 725, column: 3)
!14288 = !DILocation(line: 728, column: 3, scope: !14287)
!14289 = !DILocation(line: 731, column: 13, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14243, file: !14039, line: 731, column: 6)
!14291 = !DILocation(line: 731, column: 6, scope: !14243)
!14292 = !DILocation(line: 733, column: 5, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14290, file: !14039, line: 732, column: 3)
!14294 = !DILocation(line: 734, column: 3, scope: !14293)
!14295 = !DILocation(line: 736, column: 3, scope: !14243)
!14296 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10603, file: !10603, line: 4184, type: !3326, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14297 = !DILocation(line: 4186, column: 3, scope: !14296)
!14298 = !DILocation(line: 4187, column: 1, scope: !14296)
!14299 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10603, file: !10603, line: 4205, type: !8410, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14300 = !DILocation(line: 4207, column: 11, scope: !14299)
!14301 = !DILocation(line: 4207, column: 44, scope: !14299)
!14302 = !DILocation(line: 4207, column: 3, scope: !14299)
!14303 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10603, file: !10603, line: 3224, type: !8420, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14304)
!14304 = !{!14305}
!14305 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14303, file: !10603, line: 3224, type: !208)
!14306 = !DILocation(line: 0, scope: !14303)
!14307 = !DILocation(line: 3226, column: 3, scope: !14303)
!14308 = !DILocation(line: 3227, column: 1, scope: !14303)
!14309 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10603, file: !10603, line: 3188, type: !8420, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14310)
!14310 = !{!14311}
!14311 = !DILocalVariable(name: "Source", arg: 1, scope: !14309, file: !10603, line: 3188, type: !208)
!14312 = !DILocation(line: 0, scope: !14309)
!14313 = !DILocation(line: 3190, column: 3, scope: !14309)
!14314 = !DILocation(line: 3191, column: 1, scope: !14309)
!14315 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10603, file: !10603, line: 3204, type: !8410, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14316 = !DILocation(line: 3206, column: 21, scope: !14315)
!14317 = !DILocation(line: 3206, column: 3, scope: !14315)
!14318 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10603, file: !10603, line: 3240, type: !8420, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14319)
!14319 = !{!14320}
!14320 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14318, file: !10603, line: 3240, type: !208)
!14321 = !DILocation(line: 0, scope: !14318)
!14322 = !DILocation(line: 3242, column: 3, scope: !14318)
!14323 = !DILocation(line: 3243, column: 1, scope: !14318)
!14324 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10603, file: !10603, line: 3256, type: !8420, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14325)
!14325 = !{!14326}
!14326 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14324, file: !10603, line: 3256, type: !208)
!14327 = !DILocation(line: 0, scope: !14324)
!14328 = !DILocation(line: 3258, column: 3, scope: !14324)
!14329 = !DILocation(line: 3259, column: 1, scope: !14324)
!14330 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10603, file: !10603, line: 5153, type: !8410, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14331 = !DILocation(line: 5155, column: 11, scope: !14330)
!14332 = !DILocation(line: 5155, column: 47, scope: !14330)
!14333 = !DILocation(line: 5155, column: 3, scope: !14330)
!14334 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !14039, file: !14039, line: 540, type: !14335, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !14337)
!14335 = !DISubroutineType(types: !14336)
!14336 = !{!14082, !208, !208, !14149, !14156}
!14337 = !{!14338, !14339, !14340, !14341, !14342, !14343}
!14338 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14334, file: !14039, line: 540, type: !208)
!14339 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14334, file: !14039, line: 540, type: !208)
!14340 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14334, file: !14039, line: 541, type: !14149)
!14341 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14334, file: !14039, line: 541, type: !14156)
!14342 = !DILocalVariable(name: "status", scope: !14334, file: !14039, line: 543, type: !14082)
!14343 = !DILocalVariable(name: "pllfreq", scope: !14334, file: !14039, line: 544, type: !208)
!14344 = !DILocation(line: 0, scope: !14334)
!14345 = !DILocation(line: 551, column: 6, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14334, file: !14039, line: 551, column: 6)
!14347 = !DILocation(line: 551, column: 25, scope: !14346)
!14348 = !DILocation(line: 551, column: 6, scope: !14334)
!14349 = !DILocation(line: 554, column: 15, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14346, file: !14039, line: 552, column: 3)
!14351 = !DILocation(line: 557, column: 8, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14350, file: !14039, line: 557, column: 8)
!14353 = !DILocation(line: 557, column: 29, scope: !14352)
!14354 = !DILocation(line: 557, column: 8, scope: !14350)
!14355 = !DILocation(line: 560, column: 20, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14357, file: !14039, line: 560, column: 10)
!14357 = distinct !DILexicalBlock(scope: !14352, file: !14039, line: 558, column: 5)
!14358 = !DILocation(line: 560, column: 10, scope: !14357)
!14359 = !DILocation(line: 562, column: 9, scope: !14360)
!14360 = distinct !DILexicalBlock(scope: !14356, file: !14039, line: 561, column: 7)
!14361 = !DILocation(line: 563, column: 7, scope: !14360)
!14362 = !DILocation(line: 566, column: 9, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14356, file: !14039, line: 565, column: 7)
!14364 = !DILocation(line: 570, column: 7, scope: !14357)
!14365 = !DILocation(line: 571, column: 7, scope: !14357)
!14366 = !DILocation(line: 571, column: 14, scope: !14357)
!14367 = !DILocation(line: 571, column: 35, scope: !14357)
!14368 = distinct !{!14368, !14365, !14369}
!14369 = !DILocation(line: 574, column: 7, scope: !14357)
!14370 = !DILocation(line: 578, column: 76, scope: !14350)
!14371 = !DILocation(line: 578, column: 103, scope: !14350)
!14372 = !DILocation(line: 579, column: 54, scope: !14350)
!14373 = !DILocation(line: 578, column: 5, scope: !14350)
!14374 = !DILocation(line: 582, column: 14, scope: !14350)
!14375 = !DILocation(line: 583, column: 3, scope: !14350)
!14376 = !DILocation(line: 0, scope: !14346)
!14377 = !DILocation(line: 590, column: 3, scope: !14334)
!14378 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10603, file: !10603, line: 2969, type: !8410, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14379 = !DILocation(line: 2971, column: 11, scope: !14378)
!14380 = !DILocation(line: 2971, column: 44, scope: !14378)
!14381 = !DILocation(line: 2971, column: 3, scope: !14378)
!14382 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10603, file: !10603, line: 2929, type: !3326, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14383 = !DILocation(line: 2931, column: 3, scope: !14382)
!14384 = !DILocation(line: 2932, column: 1, scope: !14382)
!14385 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10603, file: !10603, line: 2939, type: !3326, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14386 = !DILocation(line: 2941, column: 3, scope: !14385)
!14387 = !DILocation(line: 2942, column: 1, scope: !14385)
!14388 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10603, file: !10603, line: 2949, type: !3326, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3221, retainedNodes: !639)
!14389 = !DILocation(line: 2951, column: 3, scope: !14388)
!14390 = !DILocation(line: 2952, column: 1, scope: !14388)
!14391 = distinct !DISubprogram(name: "z_device_state_init", scope: !14392, file: !14392, line: 23, type: !3326, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !14393)
!14392 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14393 = !{!14394}
!14394 = !DILocalVariable(name: "dev", scope: !14391, file: !14392, line: 25, type: !14395)
!14395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14396, size: 32)
!14396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14397)
!14397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !14398)
!14398 = !{!14399, !14400, !14401, !14402, !14408, !14409}
!14399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14397, file: !137, line: 380, baseType: !140, size: 32)
!14400 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14397, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!14401 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14397, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!14402 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14397, file: !137, line: 386, baseType: !14403, size: 32, offset: 96)
!14403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14404, size: 32)
!14404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !14405)
!14405 = !{!14406, !14407}
!14406 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14404, file: !137, line: 359, baseType: !150, size: 8)
!14407 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14404, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14408 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14397, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!14409 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14397, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!14410 = !DILocation(line: 0, scope: !14391)
!14411 = !DILocation(line: 31, column: 1, scope: !14391)
!14412 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14392, file: !14392, line: 33, type: !14413, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !14415)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{!14395, !140}
!14415 = !{!14416, !14417}
!14416 = !DILocalVariable(name: "name", arg: 1, scope: !14412, file: !14392, line: 33, type: !140)
!14417 = !DILocalVariable(name: "dev", scope: !14412, file: !14392, line: 35, type: !14395)
!14418 = !DILocation(line: 0, scope: !14412)
!14419 = !DILocation(line: 40, column: 12, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14412, file: !14392, line: 40, column: 6)
!14421 = !DILocation(line: 40, column: 21, scope: !14420)
!14422 = !DILocation(line: 40, column: 25, scope: !14420)
!14423 = !DILocation(line: 40, column: 33, scope: !14420)
!14424 = !DILocation(line: 40, column: 6, scope: !14412)
!14425 = !DILocation(line: 55, column: 2, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14412, file: !14392, line: 55, column: 2)
!14427 = !DILocation(line: 50, column: 7, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14429, file: !14392, line: 50, column: 7)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !14392, line: 49, column: 57)
!14430 = distinct !DILexicalBlock(scope: !14431, file: !14392, line: 49, column: 2)
!14431 = distinct !DILexicalBlock(scope: !14412, file: !14392, line: 49, column: 2)
!14432 = !DILocation(line: 50, column: 30, scope: !14428)
!14433 = !DILocation(line: 50, column: 39, scope: !14428)
!14434 = !DILocation(line: 50, column: 44, scope: !14428)
!14435 = !DILocation(line: 50, column: 7, scope: !14429)
!14436 = !DILocation(line: 49, column: 53, scope: !14430)
!14437 = !DILocation(line: 49, column: 33, scope: !14430)
!14438 = !DILocation(line: 49, column: 2, scope: !14431)
!14439 = distinct !{!14439, !14438, !14440}
!14440 = !DILocation(line: 53, column: 2, scope: !14431)
!14441 = !DILocation(line: 56, column: 7, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14443, file: !14392, line: 56, column: 7)
!14443 = distinct !DILexicalBlock(scope: !14444, file: !14392, line: 55, column: 57)
!14444 = distinct !DILexicalBlock(scope: !14426, file: !14392, line: 55, column: 2)
!14445 = !DILocation(line: 56, column: 30, scope: !14442)
!14446 = !DILocation(line: 56, column: 52, scope: !14442)
!14447 = !DILocation(line: 56, column: 34, scope: !14442)
!14448 = !DILocation(line: 56, column: 58, scope: !14442)
!14449 = !DILocation(line: 56, column: 7, scope: !14443)
!14450 = !DILocation(line: 55, column: 53, scope: !14444)
!14451 = !DILocation(line: 55, column: 33, scope: !14444)
!14452 = distinct !{!14452, !14425, !14453}
!14453 = !DILocation(line: 59, column: 2, scope: !14426)
!14454 = !DILocation(line: 62, column: 1, scope: !14412)
!14455 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14392, file: !14392, line: 93, type: !14456, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !14458)
!14456 = !DISubroutineType(types: !14457)
!14457 = !{!153, !14395}
!14458 = !{!14459}
!14459 = !DILocalVariable(name: "dev", arg: 1, scope: !14455, file: !14392, line: 93, type: !14395)
!14460 = !DILocation(line: 0, scope: !14455)
!14461 = !DILocation(line: 99, column: 10, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14455, file: !14392, line: 99, column: 6)
!14463 = !DILocation(line: 99, column: 6, scope: !14455)
!14464 = !DILocation(line: 103, column: 14, scope: !14455)
!14465 = !DILocation(line: 103, column: 21, scope: !14455)
!14466 = !DILocation(line: 103, column: 33, scope: !14455)
!14467 = !DILocation(line: 103, column: 49, scope: !14455)
!14468 = !DILocation(line: 103, column: 58, scope: !14455)
!14469 = !DILocation(line: 104, column: 1, scope: !14455)
!14470 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14392, file: !14392, line: 87, type: !14471, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !14474)
!14471 = !DISubroutineType(types: !14472)
!14472 = !{!272, !14473}
!14473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14395, size: 32)
!14474 = !{!14475}
!14475 = !DILocalVariable(name: "devices", arg: 1, scope: !14470, file: !14392, line: 87, type: !14473)
!14476 = !DILocation(line: 0, scope: !14470)
!14477 = !DILocation(line: 89, column: 11, scope: !14470)
!14478 = !DILocation(line: 90, column: 2, scope: !14470)
!14479 = distinct !DISubprogram(name: "device_required_foreach", scope: !14392, file: !14392, line: 125, type: !14480, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !14486)
!14480 = !DISubroutineType(types: !14481)
!14481 = !{!125, !14395, !14482, !124}
!14482 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !137, line: 471, baseType: !14483)
!14483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14484, size: 32)
!14484 = !DISubroutineType(types: !14485)
!14485 = !{!125, !14395, !124}
!14486 = !{!14487, !14488, !14489, !14490, !14491}
!14487 = !DILocalVariable(name: "dev", arg: 1, scope: !14479, file: !14392, line: 125, type: !14395)
!14488 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14479, file: !14392, line: 126, type: !14482)
!14489 = !DILocalVariable(name: "context", arg: 3, scope: !14479, file: !14392, line: 127, type: !124)
!14490 = !DILocalVariable(name: "handle_count", scope: !14479, file: !14392, line: 129, type: !272)
!14491 = !DILocalVariable(name: "handles", scope: !14479, file: !14392, line: 130, type: !156)
!14492 = !DILocation(line: 0, scope: !14479)
!14493 = !DILocation(line: 129, column: 2, scope: !14479)
!14494 = !DILocation(line: 129, column: 9, scope: !14479)
!14495 = !DILocation(line: 130, column: 35, scope: !14479)
!14496 = !DILocation(line: 132, column: 33, scope: !14479)
!14497 = !DILocation(line: 132, column: 9, scope: !14479)
!14498 = !DILocation(line: 133, column: 1, scope: !14479)
!14499 = !DILocation(line: 132, column: 2, scope: !14479)
!14500 = distinct !DISubprogram(name: "device_required_handles_get", scope: !137, file: !137, line: 493, type: !14501, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !14503)
!14501 = !DISubroutineType(types: !14502)
!14502 = !{!156, !14395, !2744}
!14503 = !{!14504, !14505, !14506, !14507}
!14504 = !DILocalVariable(name: "dev", arg: 1, scope: !14500, file: !137, line: 493, type: !14395)
!14505 = !DILocalVariable(name: "count", arg: 2, scope: !14500, file: !137, line: 493, type: !2744)
!14506 = !DILocalVariable(name: "rv", scope: !14500, file: !137, line: 495, type: !156)
!14507 = !DILocalVariable(name: "i", scope: !14508, file: !137, line: 498, type: !272)
!14508 = distinct !DILexicalBlock(scope: !14509, file: !137, line: 497, column: 18)
!14509 = distinct !DILexicalBlock(scope: !14500, file: !137, line: 497, column: 6)
!14510 = !DILocation(line: 0, scope: !14500)
!14511 = !DILocation(line: 495, column: 35, scope: !14500)
!14512 = !DILocation(line: 497, column: 9, scope: !14509)
!14513 = !DILocation(line: 497, column: 6, scope: !14500)
!14514 = !DILocation(line: 0, scope: !14508)
!14515 = !DILocation(line: 500, column: 11, scope: !14508)
!14516 = !DILocation(line: 500, column: 40, scope: !14508)
!14517 = !DILocation(line: 502, column: 4, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14508, file: !137, line: 501, column: 40)
!14519 = distinct !{!14519, !14520, !14521}
!14520 = !DILocation(line: 500, column: 3, scope: !14508)
!14521 = !DILocation(line: 503, column: 3, scope: !14508)
!14522 = !DILocation(line: 504, column: 10, scope: !14508)
!14523 = !DILocation(line: 505, column: 2, scope: !14508)
!14524 = !DILocation(line: 507, column: 2, scope: !14500)
!14525 = distinct !DISubprogram(name: "device_visitor", scope: !14392, file: !14392, line: 106, type: !14526, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !14528)
!14526 = !DISubroutineType(types: !14527)
!14527 = !{!125, !156, !272, !14482, !124}
!14528 = !{!14529, !14530, !14531, !14532, !14533, !14535, !14538, !14539}
!14529 = !DILocalVariable(name: "handles", arg: 1, scope: !14525, file: !14392, line: 106, type: !156)
!14530 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14525, file: !14392, line: 107, type: !272)
!14531 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14525, file: !14392, line: 108, type: !14482)
!14532 = !DILocalVariable(name: "context", arg: 4, scope: !14525, file: !14392, line: 109, type: !124)
!14533 = !DILocalVariable(name: "i", scope: !14534, file: !14392, line: 112, type: !272)
!14534 = distinct !DILexicalBlock(scope: !14525, file: !14392, line: 112, column: 2)
!14535 = !DILocalVariable(name: "dh", scope: !14536, file: !14392, line: 113, type: !158)
!14536 = distinct !DILexicalBlock(scope: !14537, file: !14392, line: 112, column: 44)
!14537 = distinct !DILexicalBlock(scope: !14534, file: !14392, line: 112, column: 2)
!14538 = !DILocalVariable(name: "rdev", scope: !14536, file: !14392, line: 114, type: !14395)
!14539 = !DILocalVariable(name: "rc", scope: !14536, file: !14392, line: 115, type: !125)
!14540 = !DILocation(line: 0, scope: !14525)
!14541 = !DILocation(line: 0, scope: !14534)
!14542 = !DILocation(line: 112, column: 23, scope: !14537)
!14543 = !DILocation(line: 112, column: 2, scope: !14534)
!14544 = distinct !{!14544, !14543, !14545}
!14545 = !DILocation(line: 120, column: 2, scope: !14534)
!14546 = !DILocation(line: 113, column: 24, scope: !14536)
!14547 = !DILocation(line: 0, scope: !14536)
!14548 = !DILocation(line: 114, column: 31, scope: !14536)
!14549 = !DILocation(line: 115, column: 12, scope: !14536)
!14550 = !DILocation(line: 117, column: 10, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14536, file: !14392, line: 117, column: 7)
!14552 = !DILocation(line: 112, column: 39, scope: !14537)
!14553 = !DILocation(line: 123, column: 1, scope: !14525)
!14554 = distinct !DISubprogram(name: "device_from_handle", scope: !137, file: !137, line: 439, type: !14555, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !14557)
!14555 = !DISubroutineType(types: !14556)
!14556 = !{!14395, !158}
!14557 = !{!14558, !14559, !14560}
!14558 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14554, file: !137, line: 439, type: !158)
!14559 = !DILocalVariable(name: "dev", scope: !14554, file: !137, line: 443, type: !14395)
!14560 = !DILocalVariable(name: "numdev", scope: !14554, file: !137, line: 444, type: !272)
!14561 = !DILocation(line: 0, scope: !14554)
!14562 = !DILocation(line: 446, column: 7, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14554, file: !137, line: 446, column: 6)
!14564 = !DILocation(line: 446, column: 18, scope: !14563)
!14565 = !DILocation(line: 446, column: 23, scope: !14563)
!14566 = !DILocation(line: 450, column: 2, scope: !14554)
!14567 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14392, file: !14392, line: 135, type: !14480, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !14568)
!14568 = !{!14569, !14570, !14571, !14572, !14573}
!14569 = !DILocalVariable(name: "dev", arg: 1, scope: !14567, file: !14392, line: 135, type: !14395)
!14570 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14567, file: !14392, line: 136, type: !14482)
!14571 = !DILocalVariable(name: "context", arg: 3, scope: !14567, file: !14392, line: 137, type: !124)
!14572 = !DILocalVariable(name: "handle_count", scope: !14567, file: !14392, line: 139, type: !272)
!14573 = !DILocalVariable(name: "handles", scope: !14567, file: !14392, line: 140, type: !156)
!14574 = !DILocation(line: 0, scope: !14567)
!14575 = !DILocation(line: 139, column: 2, scope: !14567)
!14576 = !DILocation(line: 139, column: 9, scope: !14567)
!14577 = !DILocation(line: 140, column: 35, scope: !14567)
!14578 = !DILocation(line: 142, column: 33, scope: !14567)
!14579 = !DILocation(line: 142, column: 9, scope: !14567)
!14580 = !DILocation(line: 143, column: 1, scope: !14567)
!14581 = !DILocation(line: 142, column: 2, scope: !14567)
!14582 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !137, file: !137, line: 573, type: !14501, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3286, retainedNodes: !14583)
!14583 = !{!14584, !14585, !14586, !14587, !14588}
!14584 = !DILocalVariable(name: "dev", arg: 1, scope: !14582, file: !137, line: 573, type: !14395)
!14585 = !DILocalVariable(name: "count", arg: 2, scope: !14582, file: !137, line: 573, type: !2744)
!14586 = !DILocalVariable(name: "rv", scope: !14582, file: !137, line: 575, type: !156)
!14587 = !DILocalVariable(name: "region", scope: !14582, file: !137, line: 576, type: !272)
!14588 = !DILocalVariable(name: "i", scope: !14582, file: !137, line: 577, type: !272)
!14589 = !DILocation(line: 0, scope: !14582)
!14590 = !DILocation(line: 575, column: 35, scope: !14582)
!14591 = !DILocation(line: 579, column: 9, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14582, file: !137, line: 579, column: 6)
!14593 = !DILocation(line: 579, column: 6, scope: !14582)
!14594 = !DILocation(line: 582, column: 8, scope: !14595)
!14595 = distinct !DILexicalBlock(scope: !14596, file: !137, line: 582, column: 8)
!14596 = distinct !DILexicalBlock(scope: !14597, file: !137, line: 581, column: 23)
!14597 = distinct !DILexicalBlock(scope: !14592, file: !137, line: 579, column: 18)
!14598 = !DILocation(line: 582, column: 12, scope: !14595)
!14599 = !DILocation(line: 585, column: 6, scope: !14596)
!14600 = !DILocation(line: 0, scope: !14597)
!14601 = !DILocation(line: 581, column: 17, scope: !14597)
!14602 = !DILocation(line: 581, column: 3, scope: !14597)
!14603 = !DILocation(line: 588, column: 10, scope: !14597)
!14604 = !DILocation(line: 588, column: 16, scope: !14597)
!14605 = !DILocation(line: 589, column: 4, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14597, file: !137, line: 588, column: 39)
!14607 = !DILocation(line: 588, column: 3, scope: !14597)
!14608 = distinct !{!14608, !14607, !14609}
!14609 = !DILocation(line: 590, column: 3, scope: !14597)
!14610 = !DILocation(line: 591, column: 10, scope: !14597)
!14611 = !DILocation(line: 592, column: 2, scope: !14597)
!14612 = !DILocation(line: 575, column: 25, scope: !14582)
!14613 = !DILocation(line: 594, column: 2, scope: !14582)
!14614 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2165, file: !2165, line: 49, type: !14615, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2162, retainedNodes: !639)
!14615 = !DISubroutineType(types: !14616)
!14616 = !{!387}
!14617 = !DILocation(line: 51, column: 10, scope: !14614)
!14618 = !DILocation(line: 51, column: 20, scope: !14614)
!14619 = !DILocation(line: 51, column: 2, scope: !14614)
!14620 = distinct !DISubprogram(name: "coredump", scope: !3293, file: !3293, line: 209, type: !14621, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14767)
!14621 = !DISubroutineType(types: !14622)
!14622 = !{null, !32, !14623, !14667}
!14623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14624, size: 32)
!14624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14625)
!14625 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2906, line: 141, baseType: !14626)
!14626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2906, line: 97, size: 256, elements: !14627)
!14627 = !{!14628}
!14628 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14626, file: !2906, line: 107, baseType: !14629, size: 256)
!14629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2906, line: 98, size: 256, elements: !14630)
!14630 = !{!14631, !14636, !14641, !14646, !14651, !14656, !14661, !14666}
!14631 = !DIDerivedType(tag: DW_TAG_member, scope: !14629, file: !2906, line: 99, baseType: !14632, size: 32)
!14632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14629, file: !2906, line: 99, size: 32, elements: !14633)
!14633 = !{!14634, !14635}
!14634 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14632, file: !2906, line: 99, baseType: !208, size: 32)
!14635 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14632, file: !2906, line: 99, baseType: !208, size: 32)
!14636 = !DIDerivedType(tag: DW_TAG_member, scope: !14629, file: !2906, line: 100, baseType: !14637, size: 32, offset: 32)
!14637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14629, file: !2906, line: 100, size: 32, elements: !14638)
!14638 = !{!14639, !14640}
!14639 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14637, file: !2906, line: 100, baseType: !208, size: 32)
!14640 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14637, file: !2906, line: 100, baseType: !208, size: 32)
!14641 = !DIDerivedType(tag: DW_TAG_member, scope: !14629, file: !2906, line: 101, baseType: !14642, size: 32, offset: 64)
!14642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14629, file: !2906, line: 101, size: 32, elements: !14643)
!14643 = !{!14644, !14645}
!14644 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14642, file: !2906, line: 101, baseType: !208, size: 32)
!14645 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14642, file: !2906, line: 101, baseType: !208, size: 32)
!14646 = !DIDerivedType(tag: DW_TAG_member, scope: !14629, file: !2906, line: 102, baseType: !14647, size: 32, offset: 96)
!14647 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14629, file: !2906, line: 102, size: 32, elements: !14648)
!14648 = !{!14649, !14650}
!14649 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14647, file: !2906, line: 102, baseType: !208, size: 32)
!14650 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14647, file: !2906, line: 102, baseType: !208, size: 32)
!14651 = !DIDerivedType(tag: DW_TAG_member, scope: !14629, file: !2906, line: 103, baseType: !14652, size: 32, offset: 128)
!14652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14629, file: !2906, line: 103, size: 32, elements: !14653)
!14653 = !{!14654, !14655}
!14654 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14652, file: !2906, line: 103, baseType: !208, size: 32)
!14655 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14652, file: !2906, line: 103, baseType: !208, size: 32)
!14656 = !DIDerivedType(tag: DW_TAG_member, scope: !14629, file: !2906, line: 104, baseType: !14657, size: 32, offset: 160)
!14657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14629, file: !2906, line: 104, size: 32, elements: !14658)
!14658 = !{!14659, !14660}
!14659 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14657, file: !2906, line: 104, baseType: !208, size: 32)
!14660 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14657, file: !2906, line: 104, baseType: !208, size: 32)
!14661 = !DIDerivedType(tag: DW_TAG_member, scope: !14629, file: !2906, line: 105, baseType: !14662, size: 32, offset: 192)
!14662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14629, file: !2906, line: 105, size: 32, elements: !14663)
!14663 = !{!14664, !14665}
!14664 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14662, file: !2906, line: 105, baseType: !208, size: 32)
!14665 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14662, file: !2906, line: 105, baseType: !208, size: 32)
!14666 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14629, file: !2906, line: 106, baseType: !208, size: 32, offset: 224)
!14667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14668, size: 32)
!14668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !14669)
!14669 = !{!14670, !14728, !14740, !14741, !14742, !14743, !14749, !14762}
!14670 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14668, file: !531, line: 247, baseType: !14671, size: 384)
!14671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !14672)
!14672 = !{!14673, !14697, !14704, !14705, !14706, !14715, !14716, !14717}
!14673 = !DIDerivedType(tag: DW_TAG_member, scope: !14671, file: !531, line: 60, baseType: !14674, size: 64)
!14674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14671, file: !531, line: 60, size: 64, elements: !14675)
!14675 = !{!14676, !14691}
!14676 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14674, file: !531, line: 61, baseType: !14677, size: 64)
!14677 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !14678)
!14678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !14679)
!14679 = !{!14680, !14686}
!14680 = !DIDerivedType(tag: DW_TAG_member, scope: !14678, file: !541, line: 38, baseType: !14681, size: 32)
!14681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14678, file: !541, line: 38, size: 32, elements: !14682)
!14682 = !{!14683, !14685}
!14683 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14681, file: !541, line: 39, baseType: !14684, size: 32)
!14684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14678, size: 32)
!14685 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14681, file: !541, line: 40, baseType: !14684, size: 32)
!14686 = !DIDerivedType(tag: DW_TAG_member, scope: !14678, file: !541, line: 42, baseType: !14687, size: 32, offset: 32)
!14687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14678, file: !541, line: 42, size: 32, elements: !14688)
!14688 = !{!14689, !14690}
!14689 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14687, file: !541, line: 43, baseType: !14684, size: 32)
!14690 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14687, file: !541, line: 44, baseType: !14684, size: 32)
!14691 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14674, file: !531, line: 62, baseType: !14692, size: 64)
!14692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !14693)
!14693 = !{!14694}
!14694 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14692, file: !557, line: 50, baseType: !14695, size: 64)
!14695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14696, size: 64, elements: !562)
!14696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14692, size: 32)
!14697 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14671, file: !531, line: 68, baseType: !14698, size: 32, offset: 64)
!14698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14699, size: 32)
!14699 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !14700)
!14700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !14701)
!14701 = !{!14702}
!14702 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14700, file: !567, line: 232, baseType: !14703, size: 64)
!14703 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !14678)
!14704 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14671, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!14705 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14671, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!14706 = !DIDerivedType(tag: DW_TAG_member, scope: !14671, file: !531, line: 90, baseType: !14707, size: 16, offset: 112)
!14707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14671, file: !531, line: 90, size: 16, elements: !14708)
!14708 = !{!14709, !14714}
!14709 = !DIDerivedType(tag: DW_TAG_member, scope: !14707, file: !531, line: 91, baseType: !14710, size: 16)
!14710 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14707, file: !531, line: 91, size: 16, elements: !14711)
!14711 = !{!14712, !14713}
!14712 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14710, file: !531, line: 96, baseType: !581, size: 8)
!14713 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14710, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!14714 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14707, file: !531, line: 100, baseType: !227, size: 16)
!14715 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14671, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!14716 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14671, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!14717 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14671, file: !531, line: 131, baseType: !14718, size: 192, offset: 192)
!14718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !14719)
!14719 = !{!14720, !14721, !14727}
!14720 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14718, file: !567, line: 245, baseType: !14677, size: 64)
!14721 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14718, file: !567, line: 246, baseType: !14722, size: 32, offset: 64)
!14722 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !14723)
!14723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14724, size: 32)
!14724 = !DISubroutineType(types: !14725)
!14725 = !{null, !14726}
!14726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14718, size: 32)
!14727 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14718, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!14728 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14668, file: !531, line: 250, baseType: !14729, size: 288, offset: 384)
!14729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !14730)
!14730 = !{!14731, !14732, !14733, !14734, !14735, !14736, !14737, !14738, !14739}
!14731 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14729, file: !601, line: 26, baseType: !208, size: 32)
!14732 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14729, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!14733 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14729, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!14734 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14729, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!14735 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14729, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!14736 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14729, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!14737 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14729, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!14738 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14729, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!14739 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14729, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!14740 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14668, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!14741 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14668, file: !531, line: 256, baseType: !14699, size: 64, offset: 704)
!14742 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14668, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!14743 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14668, file: !531, line: 300, baseType: !14744, size: 96, offset: 800)
!14744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !14745)
!14745 = !{!14746, !14747, !14748}
!14746 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14744, file: !531, line: 153, baseType: !22, size: 32)
!14747 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14744, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!14748 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14744, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!14749 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14668, file: !531, line: 325, baseType: !14750, size: 32, offset: 896)
!14750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14751, size: 32)
!14751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !14752)
!14752 = !{!14753, !14759, !14760}
!14753 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14751, file: !624, line: 5074, baseType: !14754, size: 96)
!14754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !14755)
!14755 = !{!14756, !14757, !14758}
!14756 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14754, file: !628, line: 57, baseType: !631, size: 32)
!14757 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14754, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!14758 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14754, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!14759 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14751, file: !624, line: 5075, baseType: !14699, size: 64, offset: 96)
!14760 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14751, file: !624, line: 5076, baseType: !14761, offset: 160)
!14761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!14762 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14668, file: !531, line: 343, baseType: !14763, size: 64, offset: 928)
!14763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !14764)
!14764 = !{!14765, !14766}
!14765 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14763, file: !601, line: 63, baseType: !208, size: 32)
!14766 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14763, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!14767 = !{!14768, !14769, !14770}
!14768 = !DILocalVariable(name: "reason", arg: 1, scope: !14620, file: !3293, line: 209, type: !32)
!14769 = !DILocalVariable(name: "esf", arg: 2, scope: !14620, file: !3293, line: 209, type: !14623)
!14770 = !DILocalVariable(name: "thread", arg: 3, scope: !14620, file: !3293, line: 210, type: !14667)
!14771 = !DILocation(line: 0, scope: !14620)
!14772 = !DILocation(line: 212, column: 1, scope: !14620)
!14773 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3293, file: !3293, line: 214, type: !14774, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14776)
!14774 = !DISubroutineType(types: !14775)
!14775 = !{null, !22, !22}
!14776 = !{!14777, !14778}
!14777 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14773, file: !3293, line: 214, type: !22)
!14778 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14773, file: !3293, line: 214, type: !22)
!14779 = !DILocation(line: 0, scope: !14773)
!14780 = !DILocation(line: 216, column: 1, scope: !14773)
!14781 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3293, file: !3293, line: 218, type: !14782, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14784)
!14782 = !DISubroutineType(types: !14783)
!14783 = !{null, !184, !272}
!14784 = !{!14785, !14786}
!14785 = !DILocalVariable(name: "buf", arg: 1, scope: !14781, file: !3293, line: 218, type: !184)
!14786 = !DILocalVariable(name: "buflen", arg: 2, scope: !14781, file: !3293, line: 218, type: !272)
!14787 = !DILocation(line: 0, scope: !14781)
!14788 = !DILocation(line: 220, column: 1, scope: !14781)
!14789 = distinct !DISubprogram(name: "coredump_query", scope: !3293, file: !3293, line: 222, type: !14790, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14792)
!14790 = !DISubroutineType(types: !14791)
!14791 = !{!125, !3292, !124}
!14792 = !{!14793, !14794}
!14793 = !DILocalVariable(name: "query_id", arg: 1, scope: !14789, file: !3293, line: 222, type: !3292)
!14794 = !DILocalVariable(name: "arg", arg: 2, scope: !14789, file: !3293, line: 222, type: !124)
!14795 = !DILocation(line: 0, scope: !14789)
!14796 = !DILocation(line: 224, column: 2, scope: !14789)
!14797 = distinct !DISubprogram(name: "coredump_cmd", scope: !3293, file: !3293, line: 227, type: !14798, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14800)
!14798 = !DISubroutineType(types: !14799)
!14799 = !{!125, !3299, !124}
!14800 = !{!14801, !14802}
!14801 = !DILocalVariable(name: "query_id", arg: 1, scope: !14797, file: !3293, line: 227, type: !3299)
!14802 = !DILocalVariable(name: "arg", arg: 2, scope: !14797, file: !3293, line: 227, type: !124)
!14803 = !DILocation(line: 0, scope: !14797)
!14804 = !DILocation(line: 229, column: 2, scope: !14797)
!14805 = distinct !DISubprogram(name: "arch_system_halt", scope: !14806, file: !14806, line: 23, type: !6873, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14807)
!14806 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14807 = !{!14808}
!14808 = !DILocalVariable(name: "reason", arg: 1, scope: !14805, file: !14806, line: 23, type: !32)
!14809 = !DILocation(line: 0, scope: !14805)
!14810 = !DILocation(line: 55, column: 2, scope: !14811, inlinedAt: !14815)
!14811 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6862, file: !6862, line: 42, type: !6863, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14812)
!14812 = !{!14813, !14814}
!14813 = !DILocalVariable(name: "key", scope: !14811, file: !6862, line: 44, type: !32)
!14814 = !DILocalVariable(name: "tmp", scope: !14811, file: !6862, line: 53, type: !32)
!14815 = distinct !DILocation(line: 31, column: 8, scope: !14805)
!14816 = !{i64 2040463}
!14817 = !DILocation(line: 0, scope: !14811, inlinedAt: !14815)
!14818 = !DILocation(line: 32, column: 2, scope: !14805)
!14819 = !DILocation(line: 32, column: 2, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14821, file: !14806, line: 32, column: 2)
!14821 = distinct !DILexicalBlock(scope: !14805, file: !14806, line: 32, column: 2)
!14822 = distinct !{!14822, !14823, !14824}
!14823 = !DILocation(line: 32, column: 2, scope: !14821)
!14824 = !DILocation(line: 34, column: 2, scope: !14821)
!14825 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14806, file: !14806, line: 39, type: !14826, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14828)
!14826 = !DISubroutineType(types: !14827)
!14827 = !{null, !32, !14623}
!14828 = !{!14829, !14830}
!14829 = !DILocalVariable(name: "reason", arg: 1, scope: !14825, file: !14806, line: 39, type: !32)
!14830 = !DILocalVariable(name: "esf", arg: 2, scope: !14825, file: !14806, line: 40, type: !14623)
!14831 = !DILocation(line: 0, scope: !14825)
!14832 = !DILocation(line: 45, column: 2, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14834, file: !14806, line: 45, column: 2)
!14834 = distinct !DILexicalBlock(scope: !14835, file: !14806, line: 45, column: 2)
!14835 = distinct !DILexicalBlock(scope: !14836, file: !14806, line: 45, column: 2)
!14836 = distinct !DILexicalBlock(scope: !14825, file: !14806, line: 45, column: 2)
!14837 = !DILocation(line: 46, column: 2, scope: !14825)
!14838 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14806, file: !14806, line: 81, type: !6873, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14839)
!14839 = !{!14840}
!14840 = !DILocalVariable(name: "reason", arg: 1, scope: !14838, file: !14806, line: 81, type: !32)
!14841 = !DILocation(line: 0, scope: !14838)
!14842 = !DILocation(line: 83, column: 2, scope: !14838)
!14843 = distinct !DISubprogram(name: "z_fatal_error", scope: !14806, file: !14806, line: 96, type: !14826, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14844)
!14844 = !{!14845, !14846, !14847, !14848}
!14845 = !DILocalVariable(name: "reason", arg: 1, scope: !14843, file: !14806, line: 96, type: !32)
!14846 = !DILocalVariable(name: "esf", arg: 2, scope: !14843, file: !14806, line: 96, type: !14623)
!14847 = !DILocalVariable(name: "key", scope: !14843, file: !14806, line: 102, type: !32)
!14848 = !DILocalVariable(name: "thread", scope: !14843, file: !14806, line: 103, type: !14667)
!14849 = !DILocation(line: 0, scope: !14843)
!14850 = !DILocation(line: 55, column: 2, scope: !14811, inlinedAt: !14851)
!14851 = distinct !DILocation(line: 102, column: 21, scope: !14843)
!14852 = !DILocation(line: 0, scope: !14811, inlinedAt: !14851)
!14853 = !DILocation(line: 104, column: 4, scope: !14843)
!14854 = !DILocation(line: 109, column: 2, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14856, file: !14806, line: 109, column: 2)
!14856 = distinct !DILexicalBlock(scope: !14857, file: !14806, line: 109, column: 2)
!14857 = distinct !DILexicalBlock(scope: !14858, file: !14806, line: 109, column: 2)
!14858 = distinct !DILexicalBlock(scope: !14843, file: !14806, line: 109, column: 2)
!14859 = !DILocation(line: 119, column: 11, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14843, file: !14806, line: 119, column: 6)
!14861 = !DILocation(line: 119, column: 20, scope: !14860)
!14862 = !DILocalVariable(name: "esf", arg: 1, scope: !14863, file: !9347, line: 71, type: !14623)
!14863 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9347, file: !9347, line: 71, type: !14864, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14866)
!14864 = !DISubroutineType(types: !14865)
!14865 = !{!153, !14623}
!14866 = !{!14862}
!14867 = !DILocation(line: 0, scope: !14863, inlinedAt: !14868)
!14868 = distinct !DILocation(line: 119, column: 23, scope: !14860)
!14869 = !DILocation(line: 73, column: 21, scope: !14863, inlinedAt: !14868)
!14870 = !DILocation(line: 73, column: 26, scope: !14863, inlinedAt: !14868)
!14871 = !DILocation(line: 73, column: 9, scope: !14863, inlinedAt: !14868)
!14872 = !DILocation(line: 119, column: 6, scope: !14843)
!14873 = !DILocation(line: 120, column: 3, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14875, file: !14806, line: 120, column: 3)
!14875 = distinct !DILexicalBlock(scope: !14876, file: !14806, line: 120, column: 3)
!14876 = distinct !DILexicalBlock(scope: !14877, file: !14806, line: 120, column: 3)
!14877 = distinct !DILexicalBlock(scope: !14878, file: !14806, line: 120, column: 3)
!14878 = distinct !DILexicalBlock(scope: !14860, file: !14806, line: 119, column: 57)
!14879 = !DILocation(line: 121, column: 2, scope: !14878)
!14880 = !DILocation(line: 124, column: 2, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14882, file: !14806, line: 124, column: 2)
!14882 = distinct !DILexicalBlock(scope: !14883, file: !14806, line: 124, column: 2)
!14883 = distinct !DILexicalBlock(scope: !14884, file: !14806, line: 124, column: 2)
!14884 = distinct !DILexicalBlock(scope: !14843, file: !14806, line: 124, column: 2)
!14885 = !DILocation(line: 131, column: 2, scope: !14843)
!14886 = !DILocation(line: 0, scope: !14863, inlinedAt: !14887)
!14887 = distinct !DILocation(line: 151, column: 24, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14889, file: !14806, line: 151, column: 7)
!14889 = distinct !DILexicalBlock(scope: !14890, file: !14806, line: 146, column: 32)
!14890 = distinct !DILexicalBlock(scope: !14843, file: !14806, line: 146, column: 6)
!14891 = !DILocation(line: 151, column: 7, scope: !14889)
!14892 = !DILocation(line: 151, column: 21, scope: !14888)
!14893 = !DILocalVariable(name: "key", arg: 1, scope: !14894, file: !6862, line: 84, type: !32)
!14894 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6862, file: !6862, line: 84, type: !6873, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14895)
!14895 = !{!14893}
!14896 = !DILocation(line: 0, scope: !14894, inlinedAt: !14897)
!14897 = distinct !DILocation(line: 186, column: 2, scope: !14843)
!14898 = !DILocation(line: 95, column: 2, scope: !14894, inlinedAt: !14897)
!14899 = !{i64 2041280}
!14900 = !DILocation(line: 189, column: 3, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14902, file: !14806, line: 188, column: 41)
!14902 = distinct !DILexicalBlock(scope: !14843, file: !14806, line: 188, column: 6)
!14903 = !DILocation(line: 191, column: 1, scope: !14843)
!14904 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !14905, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !639)
!14905 = !DISubroutineType(types: !14906)
!14906 = !{!14907}
!14907 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !14667)
!14908 = !DILocation(line: 535, column: 9, scope: !14904)
!14909 = !DILocation(line: 535, column: 2, scope: !14904)
!14910 = distinct !DISubprogram(name: "reason_to_str", scope: !14806, file: !14806, line: 62, type: !14911, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14913)
!14911 = !DISubroutineType(types: !14912)
!14912 = !{!140, !32}
!14913 = !{!14914}
!14914 = !DILocalVariable(name: "reason", arg: 1, scope: !14910, file: !14806, line: 62, type: !32)
!14915 = !DILocation(line: 0, scope: !14910)
!14916 = !DILocation(line: 64, column: 2, scope: !14910)
!14917 = !DILocation(line: 0, scope: !14918)
!14918 = distinct !DILexicalBlock(scope: !14910, file: !14806, line: 64, column: 18)
!14919 = !DILocation(line: 78, column: 1, scope: !14910)
!14920 = distinct !DISubprogram(name: "thread_name_get", scope: !14806, file: !14806, line: 51, type: !14921, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14923)
!14921 = !DISubroutineType(types: !14922)
!14922 = !{!140, !14667}
!14923 = !{!14924, !14925}
!14924 = !DILocalVariable(name: "thread", arg: 1, scope: !14920, file: !14806, line: 51, type: !14667)
!14925 = !DILocalVariable(name: "thread_name", scope: !14920, file: !14806, line: 53, type: !140)
!14926 = !DILocation(line: 0, scope: !14920)
!14927 = !DILocation(line: 53, column: 36, scope: !14920)
!14928 = !DILocation(line: 53, column: 28, scope: !14920)
!14929 = !DILocation(line: 53, column: 47, scope: !14920)
!14930 = !DILocation(line: 55, column: 19, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14920, file: !14806, line: 55, column: 6)
!14932 = !DILocation(line: 55, column: 28, scope: !14931)
!14933 = !DILocation(line: 55, column: 32, scope: !14931)
!14934 = !DILocation(line: 55, column: 47, scope: !14931)
!14935 = !DILocation(line: 55, column: 6, scope: !14920)
!14936 = !DILocation(line: 57, column: 2, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14931, file: !14806, line: 55, column: 57)
!14938 = !DILocation(line: 59, column: 2, scope: !14920)
!14939 = distinct !DISubprogram(name: "k_thread_abort", scope: !5398, file: !5398, line: 188, type: !14940, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !14942)
!14940 = !DISubroutineType(types: !14941)
!14941 = !{null, !14907}
!14942 = !{!14943}
!14943 = !DILocalVariable(name: "thread", arg: 1, scope: !14939, file: !5398, line: 188, type: !14907)
!14944 = !DILocation(line: 0, scope: !14939)
!14945 = !DILocation(line: 197, column: 2, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14939, file: !5398, line: 197, column: 2)
!14947 = !{i64 2154152191}
!14948 = !DILocation(line: 198, column: 2, scope: !14939)
!14949 = !DILocation(line: 199, column: 1, scope: !14939)
!14950 = distinct !DISubprogram(name: "z_current_get", scope: !5398, file: !5398, line: 173, type: !14905, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3289, retainedNodes: !639)
!14951 = !DILocation(line: 180, column: 2, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14950, file: !5398, line: 180, column: 2)
!14953 = !{i64 2154152123}
!14954 = !DILocation(line: 181, column: 9, scope: !14950)
!14955 = !DILocation(line: 181, column: 2, scope: !14950)
!14956 = distinct !DISubprogram(name: "z_early_memset", scope: !2173, file: !2173, line: 108, type: !14957, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !14959)
!14957 = !DISubroutineType(types: !14958)
!14958 = !{null, !124, !125, !272}
!14959 = !{!14960, !14961, !14962}
!14960 = !DILocalVariable(name: "dst", arg: 1, scope: !14956, file: !2173, line: 108, type: !124)
!14961 = !DILocalVariable(name: "c", arg: 2, scope: !14956, file: !2173, line: 108, type: !125)
!14962 = !DILocalVariable(name: "n", arg: 3, scope: !14956, file: !2173, line: 108, type: !272)
!14963 = !DILocation(line: 0, scope: !14956)
!14964 = !DILocation(line: 110, column: 9, scope: !14956)
!14965 = !DILocation(line: 111, column: 1, scope: !14956)
!14966 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2173, file: !2173, line: 121, type: !14967, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !14969)
!14967 = !DISubroutineType(types: !14968)
!14968 = !{null, !124, !13, !272}
!14969 = !{!14970, !14971, !14972}
!14970 = !DILocalVariable(name: "dst", arg: 1, scope: !14966, file: !2173, line: 121, type: !124)
!14971 = !DILocalVariable(name: "src", arg: 2, scope: !14966, file: !2173, line: 121, type: !13)
!14972 = !DILocalVariable(name: "n", arg: 3, scope: !14966, file: !2173, line: 121, type: !272)
!14973 = !DILocation(line: 0, scope: !14966)
!14974 = !DILocation(line: 123, column: 9, scope: !14966)
!14975 = !DILocation(line: 124, column: 1, scope: !14966)
!14976 = distinct !DISubprogram(name: "z_bss_zero", scope: !2173, file: !2173, line: 132, type: !3326, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !639)
!14977 = !DILocation(line: 143, column: 2, scope: !14976)
!14978 = !DILocation(line: 168, column: 1, scope: !14976)
!14979 = distinct !DISubprogram(name: "z_init_cpu", scope: !2173, file: !2173, line: 372, type: !10211, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !14980)
!14980 = !{!14981}
!14981 = !DILocalVariable(name: "id", arg: 1, scope: !14979, file: !2173, line: 372, type: !125)
!14982 = !DILocation(line: 0, scope: !14979)
!14983 = !DILocation(line: 374, column: 2, scope: !14979)
!14984 = !DILocation(line: 375, column: 34, scope: !14979)
!14985 = !DILocation(line: 375, column: 19, scope: !14979)
!14986 = !DILocation(line: 375, column: 31, scope: !14979)
!14987 = !DILocation(line: 376, column: 24, scope: !14979)
!14988 = !DILocation(line: 376, column: 19, scope: !14979)
!14989 = !DILocation(line: 376, column: 22, scope: !14979)
!14990 = !DILocation(line: 378, column: 26, scope: !14979)
!14991 = !DILocation(line: 378, column: 4, scope: !14979)
!14992 = !DILocation(line: 378, column: 50, scope: !14979)
!14993 = !DILocation(line: 377, column: 19, scope: !14979)
!14994 = !DILocation(line: 377, column: 29, scope: !14979)
!14995 = !DILocation(line: 384, column: 1, scope: !14979)
!14996 = distinct !DISubprogram(name: "init_idle_thread", scope: !2173, file: !2173, line: 343, type: !10211, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !14997)
!14997 = !{!14998, !14999, !15000, !15003}
!14998 = !DILocalVariable(name: "i", arg: 1, scope: !14996, file: !2173, line: 343, type: !125)
!14999 = !DILocalVariable(name: "thread", scope: !14996, file: !2173, line: 345, type: !2265)
!15000 = !DILocalVariable(name: "stack", scope: !14996, file: !2173, line: 346, type: !15001)
!15001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15002, size: 32)
!15002 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5277, line: 44, baseType: !2379)
!15003 = !DILocalVariable(name: "tname", scope: !14996, file: !2173, line: 358, type: !393)
!15004 = !DILocation(line: 0, scope: !14996)
!15005 = !DILocation(line: 345, column: 29, scope: !14996)
!15006 = !DILocation(line: 346, column: 28, scope: !14996)
!15007 = !DILocation(line: 362, column: 37, scope: !14996)
!15008 = !DILocation(line: 362, column: 36, scope: !14996)
!15009 = !DILocation(line: 361, column: 2, scope: !14996)
!15010 = !DILocation(line: 365, column: 2, scope: !14996)
!15011 = !DILocation(line: 370, column: 1, scope: !14996)
!15012 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2380, file: !2380, line: 331, type: !15013, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !15015)
!15013 = !DISubroutineType(types: !15014)
!15014 = !{!393, !15001}
!15015 = !{!15016}
!15016 = !DILocalVariable(name: "sym", arg: 1, scope: !15012, file: !2380, line: 331, type: !15001)
!15017 = !DILocation(line: 0, scope: !15012)
!15018 = !DILocation(line: 333, column: 21, scope: !15012)
!15019 = !DILocation(line: 333, column: 2, scope: !15012)
!15020 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15021, file: !15021, line: 155, type: !15022, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !15024)
!15021 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15022 = !DISubroutineType(types: !15023)
!15023 = !{null, !2265}
!15024 = !{!15025}
!15025 = !DILocalVariable(name: "thread", arg: 1, scope: !15020, file: !15021, line: 155, type: !2265)
!15026 = !DILocation(line: 0, scope: !15020)
!15027 = !DILocation(line: 157, column: 15, scope: !15020)
!15028 = !DILocation(line: 157, column: 28, scope: !15020)
!15029 = !DILocation(line: 158, column: 1, scope: !15020)
!15030 = distinct !DISubprogram(name: "z_cstart", scope: !2173, file: !2173, line: 501, type: !3326, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !15031)
!15031 = !{!15032}
!15032 = !DILocalVariable(name: "dummy_thread", scope: !15030, file: !2173, line: 518, type: !2266)
!15033 = !DILocation(line: 507, column: 2, scope: !15030)
!15034 = !DILocation(line: 43, column: 14, scope: !15035, inlinedAt: !15039)
!15035 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !15036, file: !15036, line: 40, type: !3326, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !15037)
!15036 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15037 = !{!15038}
!15038 = !DILocalVariable(name: "msp", scope: !15035, file: !15036, line: 42, type: !208)
!15039 = distinct !DILocation(line: 44, column: 2, scope: !15040, inlinedAt: !15042)
!15040 = distinct !DISubprogram(name: "arch_kernel_init", scope: !15041, file: !15041, line: 42, type: !3326, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !639)
!15041 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15042 = distinct !DILocation(line: 510, column: 2, scope: !15030)
!15043 = !DILocation(line: 43, column: 3, scope: !15035, inlinedAt: !15039)
!15044 = !DILocation(line: 43, column: 60, scope: !15035, inlinedAt: !15039)
!15045 = !DILocation(line: 0, scope: !15035, inlinedAt: !15039)
!15046 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !15047, file: !8329, line: 1153, type: !208)
!15047 = distinct !DISubprogram(name: "__set_MSP", scope: !8329, file: !8329, line: 1153, type: !8420, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !15048)
!15048 = !{!15046}
!15049 = !DILocation(line: 0, scope: !15047, inlinedAt: !15050)
!15050 = distinct !DILocation(line: 46, column: 2, scope: !15035, inlinedAt: !15039)
!15051 = !DILocation(line: 1155, column: 3, scope: !15047, inlinedAt: !15050)
!15052 = !{i64 2934543}
!15053 = !DILocation(line: 62, column: 11, scope: !15035, inlinedAt: !15039)
!15054 = !DILocation(line: 102, column: 2, scope: !15055, inlinedAt: !15056)
!15055 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9347, file: !9347, line: 97, type: !3326, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !639)
!15056 = distinct !DILocation(line: 45, column: 2, scope: !15040, inlinedAt: !15042)
!15057 = !DILocation(line: 108, column: 2, scope: !15055, inlinedAt: !15056)
!15058 = !DILocation(line: 112, column: 2, scope: !15055, inlinedAt: !15056)
!15059 = !DILocation(line: 113, column: 2, scope: !15055, inlinedAt: !15056)
!15060 = !DILocation(line: 114, column: 2, scope: !15055, inlinedAt: !15056)
!15061 = !DILocation(line: 116, column: 2, scope: !15055, inlinedAt: !15056)
!15062 = !DILocation(line: 123, column: 13, scope: !15055, inlinedAt: !15056)
!15063 = !DILocation(line: 46, column: 2, scope: !15040, inlinedAt: !15042)
!15064 = !DILocation(line: 47, column: 2, scope: !15040, inlinedAt: !15042)
!15065 = !DILocation(line: 174, column: 12, scope: !15066, inlinedAt: !15067)
!15066 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !9347, file: !9347, line: 169, type: !3326, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !639)
!15067 = distinct !DILocation(line: 48, column: 2, scope: !15040, inlinedAt: !15042)
!15068 = !DILocation(line: 179, column: 12, scope: !15066, inlinedAt: !15067)
!15069 = !DILocation(line: 50, column: 2, scope: !15040, inlinedAt: !15042)
!15070 = !DILocation(line: 57, column: 2, scope: !15040, inlinedAt: !15042)
!15071 = !DILocation(line: 518, column: 2, scope: !15030)
!15072 = !DILocation(line: 518, column: 18, scope: !15030)
!15073 = !DILocation(line: 520, column: 2, scope: !15030)
!15074 = !DILocation(line: 523, column: 2, scope: !15030)
!15075 = !DILocation(line: 526, column: 2, scope: !15030)
!15076 = !DILocation(line: 527, column: 2, scope: !15030)
!15077 = !DILocation(line: 543, column: 24, scope: !15030)
!15078 = !DILocation(line: 543, column: 2, scope: !15030)
!15079 = !DILocation(line: 0, scope: !2404)
!15080 = !DILocation(line: 246, column: 15, scope: !2422)
!15081 = !DILocation(line: 246, column: 36, scope: !2421)
!15082 = !DILocation(line: 246, column: 2, scope: !2422)
!15083 = !DILocation(line: 247, column: 37, scope: !2420)
!15084 = !DILocation(line: 0, scope: !2420)
!15085 = !DILocation(line: 248, column: 19, scope: !2420)
!15086 = !DILocation(line: 248, column: 12, scope: !2420)
!15087 = !DILocation(line: 250, column: 11, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !2420, file: !2173, line: 250, column: 7)
!15089 = !DILocation(line: 250, column: 7, scope: !2420)
!15090 = !DILocation(line: 254, column: 11, scope: !15091)
!15091 = distinct !DILexicalBlock(scope: !15092, file: !2173, line: 254, column: 8)
!15092 = distinct !DILexicalBlock(scope: !15088, file: !2173, line: 250, column: 20)
!15093 = !DILocation(line: 254, column: 8, scope: !15092)
!15094 = !DILocation(line: 255, column: 9, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15091, file: !2173, line: 254, column: 17)
!15096 = !DILocation(line: 258, column: 9, scope: !15095)
!15097 = !DILocation(line: 261, column: 28, scope: !15095)
!15098 = !DILocation(line: 261, column: 10, scope: !15095)
!15099 = !DILocation(line: 261, column: 17, scope: !15095)
!15100 = !DILocation(line: 261, column: 26, scope: !15095)
!15101 = !DILocation(line: 262, column: 4, scope: !15095)
!15102 = !DILocation(line: 263, column: 9, scope: !15092)
!15103 = !DILocation(line: 263, column: 16, scope: !15092)
!15104 = !DILocation(line: 263, column: 28, scope: !15092)
!15105 = !DILocation(line: 264, column: 3, scope: !15092)
!15106 = !DILocation(line: 246, column: 60, scope: !2421)
!15107 = distinct !{!15107, !15082, !15108}
!15108 = !DILocation(line: 265, column: 2, scope: !2422)
!15109 = !DILocation(line: 266, column: 1, scope: !2404)
!15110 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8363, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !15111)
!15111 = !{!15112, !15113}
!15112 = !DILocalVariable(name: "IRQn", arg: 1, scope: !15110, file: !680, line: 1814, type: !913)
!15113 = !DILocalVariable(name: "priority", arg: 2, scope: !15110, file: !680, line: 1814, type: !208)
!15114 = !DILocation(line: 0, scope: !15110)
!15115 = !DILocation(line: 1822, column: 48, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15117, file: !680, line: 1821, column: 3)
!15117 = distinct !DILexicalBlock(scope: !15110, file: !680, line: 1816, column: 7)
!15118 = !DILocation(line: 1822, column: 32, scope: !15116)
!15119 = !DILocation(line: 1822, column: 40, scope: !15116)
!15120 = !DILocation(line: 1822, column: 5, scope: !15116)
!15121 = !DILocation(line: 1822, column: 46, scope: !15116)
!15122 = !DILocation(line: 1824, column: 1, scope: !15110)
!15123 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !15041, file: !15041, line: 32, type: !3326, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15124 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !15125, file: !15125, line: 215, type: !15022, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !15126)
!15125 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15126 = !{!15127}
!15127 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !15124, file: !15125, line: 215, type: !2265)
!15128 = !DILocation(line: 0, scope: !15124)
!15129 = !DILocation(line: 217, column: 21, scope: !15124)
!15130 = !DILocation(line: 217, column: 34, scope: !15124)
!15131 = !DILocation(line: 221, column: 21, scope: !15124)
!15132 = !DILocation(line: 221, column: 34, scope: !15124)
!15133 = !DILocation(line: 223, column: 27, scope: !15124)
!15134 = !DILocation(line: 223, column: 33, scope: !15124)
!15135 = !DILocation(line: 224, column: 27, scope: !15124)
!15136 = !DILocation(line: 224, column: 32, scope: !15124)
!15137 = !DILocation(line: 232, column: 16, scope: !15124)
!15138 = !DILocation(line: 232, column: 30, scope: !15124)
!15139 = !DILocation(line: 239, column: 24, scope: !15124)
!15140 = !DILocation(line: 240, column: 1, scope: !15124)
!15141 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2173, file: !2173, line: 399, type: !15142, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !15144)
!15142 = !DISubroutineType(types: !15143)
!15143 = !{!393}
!15144 = !{!15145}
!15145 = !DILocalVariable(name: "stack_ptr", scope: !15141, file: !2173, line: 401, type: !393)
!15146 = !DILocation(line: 404, column: 2, scope: !15141)
!15147 = !DILocation(line: 416, column: 24, scope: !15141)
!15148 = !DILocation(line: 418, column: 14, scope: !15141)
!15149 = !DILocation(line: 0, scope: !15141)
!15150 = !DILocation(line: 423, column: 2, scope: !15141)
!15151 = !DILocation(line: 424, column: 2, scope: !15141)
!15152 = !DILocation(line: 426, column: 2, scope: !15141)
!15153 = !DILocation(line: 428, column: 2, scope: !15141)
!15154 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2173, file: !2173, line: 432, type: !15155, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !15157)
!15155 = !DISubroutineType(types: !15156)
!15156 = !{null, !393}
!15157 = !{!15158}
!15158 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !15154, file: !2173, line: 432, type: !393)
!15159 = !DILocation(line: 0, scope: !15154)
!15160 = !DILocation(line: 435, column: 2, scope: !15154)
!15161 = !DILocation(line: 445, column: 2, scope: !15154)
!15162 = distinct !DISubprogram(name: "bg_thread_main", scope: !2173, file: !2173, line: 277, type: !5279, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2169, retainedNodes: !15163)
!15163 = !{!15164, !15165, !15166}
!15164 = !DILocalVariable(name: "unused1", arg: 1, scope: !15162, file: !2173, line: 277, type: !124)
!15165 = !DILocalVariable(name: "unused2", arg: 2, scope: !15162, file: !2173, line: 277, type: !124)
!15166 = !DILocalVariable(name: "unused3", arg: 3, scope: !15162, file: !2173, line: 277, type: !124)
!15167 = !DILocation(line: 0, scope: !15162)
!15168 = !DILocation(line: 291, column: 20, scope: !15162)
!15169 = !DILocation(line: 293, column: 2, scope: !15162)
!15170 = !DILocation(line: 297, column: 2, scope: !15162)
!15171 = !DILocation(line: 305, column: 2, scope: !15162)
!15172 = !DILocation(line: 307, column: 2, scope: !15162)
!15173 = !DILocation(line: 330, column: 8, scope: !15162)
!15174 = !DILocation(line: 333, column: 34, scope: !15162)
!15175 = !DILocation(line: 339, column: 1, scope: !15162)
!15176 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2433, file: !2433, line: 45, type: !15177, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15185)
!15177 = !DISubroutineType(types: !15178)
!15178 = !{null, !15179, !124}
!15179 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !624, line: 103, baseType: !15180)
!15180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15181, size: 32)
!15181 = !DISubroutineType(types: !15182)
!15182 = !{null, !15183, !124}
!15183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15184, size: 32)
!15184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2438)
!15185 = !{!15186, !15187}
!15186 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15176, file: !2433, line: 45, type: !15179)
!15187 = !DILocalVariable(name: "user_data", arg: 2, scope: !15176, file: !2433, line: 45, type: !124)
!15188 = !DILocation(line: 0, scope: !15176)
!15189 = !DILocation(line: 71, column: 1, scope: !15176)
!15190 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2433, file: !2433, line: 73, type: !15177, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15191)
!15191 = !{!15192, !15193}
!15192 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15190, file: !2433, line: 73, type: !15179)
!15193 = !DILocalVariable(name: "user_data", arg: 2, scope: !15190, file: !2433, line: 73, type: !124)
!15194 = !DILocation(line: 0, scope: !15190)
!15195 = !DILocation(line: 95, column: 1, scope: !15190)
!15196 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2433, file: !2433, line: 97, type: !9348, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!15197 = !DILocation(line: 1031, column: 3, scope: !15198, inlinedAt: !15201)
!15198 = distinct !DISubprogram(name: "__get_IPSR", scope: !8329, file: !8329, line: 1027, type: !8410, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15199)
!15199 = !{!15200}
!15200 = !DILocalVariable(name: "result", scope: !15198, file: !8329, line: 1029, type: !208)
!15201 = distinct !DILocation(line: 48, column: 10, scope: !15202, inlinedAt: !15203)
!15202 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9347, file: !9347, line: 46, type: !9348, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!15203 = distinct !DILocation(line: 99, column: 9, scope: !15196)
!15204 = !{i64 2940194}
!15205 = !DILocation(line: 0, scope: !15198, inlinedAt: !15201)
!15206 = !DILocation(line: 48, column: 9, scope: !15202, inlinedAt: !15203)
!15207 = !DILocation(line: 99, column: 2, scope: !15196)
!15208 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2433, file: !2433, line: 106, type: !3326, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!15209 = !DILocation(line: 108, column: 2, scope: !15208)
!15210 = !DILocation(line: 108, column: 17, scope: !15208)
!15211 = !DILocation(line: 108, column: 30, scope: !15208)
!15212 = !DILocation(line: 109, column: 1, scope: !15208)
!15213 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2433, file: !2433, line: 116, type: !3326, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!15214 = !DILocation(line: 118, column: 2, scope: !15213)
!15215 = !DILocation(line: 118, column: 17, scope: !15213)
!15216 = !DILocation(line: 118, column: 30, scope: !15213)
!15217 = !DILocation(line: 119, column: 1, scope: !15213)
!15218 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2433, file: !2433, line: 126, type: !9348, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !639)
!15219 = !DILocation(line: 128, column: 10, scope: !15218)
!15220 = !DILocation(line: 128, column: 25, scope: !15218)
!15221 = !DILocation(line: 128, column: 38, scope: !15218)
!15222 = !DILocation(line: 128, column: 53, scope: !15218)
!15223 = !DILocation(line: 128, column: 2, scope: !15218)
!15224 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2433, file: !2433, line: 187, type: !15225, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15227)
!15225 = !DISubroutineType(types: !15226)
!15226 = !{!125, !2437, !140}
!15227 = !{!15228, !15229}
!15228 = !DILocalVariable(name: "thread", arg: 1, scope: !15224, file: !2433, line: 187, type: !2437)
!15229 = !DILocalVariable(name: "value", arg: 2, scope: !15224, file: !2433, line: 187, type: !140)
!15230 = !DILocation(line: 0, scope: !15224)
!15231 = !DILocation(line: 206, column: 2, scope: !15224)
!15232 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2433, file: !2433, line: 238, type: !15233, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15235)
!15233 = !DISubroutineType(types: !15234)
!15234 = !{!140, !2437}
!15235 = !{!15236}
!15236 = !DILocalVariable(name: "thread", arg: 1, scope: !15232, file: !2433, line: 238, type: !2437)
!15237 = !DILocation(line: 0, scope: !15232)
!15238 = !DILocation(line: 244, column: 2, scope: !15232)
!15239 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2433, file: !2433, line: 248, type: !15240, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15242)
!15240 = !DISubroutineType(types: !15241)
!15241 = !{!125, !2436, !393, !272}
!15242 = !{!15243, !15244, !15245}
!15243 = !DILocalVariable(name: "thread", arg: 1, scope: !15239, file: !2433, line: 248, type: !2436)
!15244 = !DILocalVariable(name: "buf", arg: 2, scope: !15239, file: !2433, line: 248, type: !393)
!15245 = !DILocalVariable(name: "size", arg: 3, scope: !15239, file: !2433, line: 248, type: !272)
!15246 = !DILocation(line: 0, scope: !15239)
!15247 = !DILocation(line: 257, column: 2, scope: !15239)
!15248 = !DILocation(line: 0, scope: !2432)
!15249 = !DILocation(line: 281, column: 11, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !2432, file: !2433, line: 281, column: 6)
!15251 = !DILocation(line: 281, column: 20, scope: !15250)
!15252 = !DILocation(line: 275, column: 45, scope: !2432)
!15253 = !DILocation(line: 285, column: 10, scope: !2432)
!15254 = !DILocation(line: 0, scope: !2553)
!15255 = !DILocation(line: 293, column: 39, scope: !15256)
!15256 = distinct !DILexicalBlock(scope: !2553, file: !2433, line: 293, column: 2)
!15257 = !DILocation(line: 293, column: 2, scope: !2553)
!15258 = !DILocation(line: 273, column: 14, scope: !2432)
!15259 = !DILocation(line: 309, column: 2, scope: !2432)
!15260 = !DILocation(line: 309, column: 11, scope: !2432)
!15261 = !DILocation(line: 311, column: 2, scope: !2432)
!15262 = !DILocation(line: 293, column: 26, scope: !15256)
!15263 = !DILocation(line: 294, column: 9, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15256, file: !2433, line: 293, column: 54)
!15265 = !DILocation(line: 295, column: 21, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15264, file: !2433, line: 295, column: 7)
!15267 = !DILocation(line: 295, column: 28, scope: !15266)
!15268 = !DILocation(line: 295, column: 7, scope: !15264)
!15269 = !DILocation(line: 299, column: 25, scope: !15264)
!15270 = !DILocation(line: 299, column: 41, scope: !15264)
!15271 = !DILocation(line: 300, column: 7, scope: !15264)
!15272 = !DILocation(line: 300, column: 26, scope: !15264)
!15273 = !DILocation(line: 299, column: 10, scope: !15264)
!15274 = !DILocation(line: 299, column: 7, scope: !15264)
!15275 = !DILocation(line: 302, column: 16, scope: !15264)
!15276 = !DILocation(line: 304, column: 20, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15264, file: !2433, line: 304, column: 7)
!15278 = !DILocation(line: 304, column: 7, scope: !15264)
!15279 = !DILocation(line: 305, column: 26, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15277, file: !2433, line: 304, column: 26)
!15281 = !DILocation(line: 305, column: 42, scope: !15280)
!15282 = !DILocation(line: 305, column: 11, scope: !15280)
!15283 = !DILocation(line: 305, column: 8, scope: !15280)
!15284 = !DILocation(line: 306, column: 3, scope: !15280)
!15285 = !DILocation(line: 293, column: 50, scope: !15256)
!15286 = !DILocation(line: 312, column: 1, scope: !2432)
!15287 = distinct !DISubprogram(name: "copy_bytes", scope: !2433, file: !2433, line: 261, type: !15288, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15290)
!15288 = !DISubroutineType(types: !15289)
!15289 = !{!272, !393, !272, !140, !272}
!15290 = !{!15291, !15292, !15293, !15294, !15295}
!15291 = !DILocalVariable(name: "dest", arg: 1, scope: !15287, file: !2433, line: 261, type: !393)
!15292 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15287, file: !2433, line: 261, type: !272)
!15293 = !DILocalVariable(name: "src", arg: 3, scope: !15287, file: !2433, line: 261, type: !140)
!15294 = !DILocalVariable(name: "src_size", arg: 4, scope: !15287, file: !2433, line: 261, type: !272)
!15295 = !DILocalVariable(name: "bytes_to_copy", scope: !15287, file: !2433, line: 263, type: !272)
!15296 = !DILocation(line: 0, scope: !15287)
!15297 = !DILocation(line: 265, column: 18, scope: !15287)
!15298 = !DILocation(line: 266, column: 2, scope: !15287)
!15299 = !DILocation(line: 268, column: 2, scope: !15287)
!15300 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2433, file: !2433, line: 383, type: !15301, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15303)
!15301 = !DISubroutineType(types: !15302)
!15302 = !{null, !2437}
!15303 = !{!15304}
!15304 = !DILocalVariable(name: "thread", arg: 1, scope: !15300, file: !2433, line: 383, type: !2437)
!15305 = !DILocation(line: 0, scope: !15300)
!15306 = !DILocation(line: 387, column: 2, scope: !15300)
!15307 = !DILocation(line: 388, column: 1, scope: !15300)
!15308 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2433, file: !2433, line: 528, type: !15309, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15316)
!15309 = !DISubroutineType(types: !15310)
!15310 = !{!393, !2437, !15311, !272, !5276, !124, !124, !124, !125, !208, !140}
!15311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15312, size: 32)
!15312 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5277, line: 44, baseType: !15313)
!15313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2380, line: 47, size: 8, elements: !15314)
!15314 = !{!15315}
!15315 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15313, file: !2380, line: 48, baseType: !142, size: 8)
!15316 = !{!15317, !15318, !15319, !15320, !15321, !15322, !15323, !15324, !15325, !15326, !15327}
!15317 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15308, file: !2433, line: 528, type: !2437)
!15318 = !DILocalVariable(name: "stack", arg: 2, scope: !15308, file: !2433, line: 529, type: !15311)
!15319 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15308, file: !2433, line: 529, type: !272)
!15320 = !DILocalVariable(name: "entry", arg: 4, scope: !15308, file: !2433, line: 530, type: !5276)
!15321 = !DILocalVariable(name: "p1", arg: 5, scope: !15308, file: !2433, line: 531, type: !124)
!15322 = !DILocalVariable(name: "p2", arg: 6, scope: !15308, file: !2433, line: 531, type: !124)
!15323 = !DILocalVariable(name: "p3", arg: 7, scope: !15308, file: !2433, line: 531, type: !124)
!15324 = !DILocalVariable(name: "prio", arg: 8, scope: !15308, file: !2433, line: 532, type: !125)
!15325 = !DILocalVariable(name: "options", arg: 9, scope: !15308, file: !2433, line: 532, type: !208)
!15326 = !DILocalVariable(name: "name", arg: 10, scope: !15308, file: !2433, line: 532, type: !140)
!15327 = !DILocalVariable(name: "stack_ptr", scope: !15308, file: !2433, line: 534, type: !393)
!15328 = !DILocation(line: 0, scope: !15308)
!15329 = !DILocation(line: 550, column: 28, scope: !15308)
!15330 = !DILocation(line: 550, column: 2, scope: !15308)
!15331 = !DILocation(line: 553, column: 34, scope: !15308)
!15332 = !DILocation(line: 553, column: 2, scope: !15308)
!15333 = !DILocation(line: 554, column: 14, scope: !15308)
!15334 = !DILocation(line: 564, column: 2, scope: !15308)
!15335 = !DILocation(line: 567, column: 14, scope: !15308)
!15336 = !DILocation(line: 567, column: 24, scope: !15308)
!15337 = !DILocation(line: 612, column: 7, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15308, file: !2433, line: 612, column: 6)
!15339 = !DILocation(line: 612, column: 6, scope: !15308)
!15340 = !DILocation(line: 627, column: 40, scope: !15308)
!15341 = !DILocation(line: 637, column: 2, scope: !15308)
!15342 = !DILocation(line: 613, column: 15, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15338, file: !2433, line: 612, column: 17)
!15344 = !DILocation(line: 613, column: 29, scope: !15343)
!15345 = !DILocation(line: 638, column: 1, scope: !15308)
!15346 = distinct !DISubprogram(name: "z_waitq_init", scope: !15347, file: !15347, line: 47, type: !15348, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15350)
!15347 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15348 = !DISubroutineType(types: !15349)
!15349 = !{null, !2468}
!15350 = !{!15351}
!15351 = !DILocalVariable(name: "w", arg: 1, scope: !15346, file: !15347, line: 47, type: !2468)
!15352 = !DILocation(line: 0, scope: !15346)
!15353 = !DILocation(line: 49, column: 21, scope: !15346)
!15354 = !DILocation(line: 49, column: 2, scope: !15346)
!15355 = !DILocation(line: 50, column: 1, scope: !15346)
!15356 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2433, file: !2433, line: 791, type: !15357, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15360)
!15357 = !DISubroutineType(types: !15358)
!15358 = !{null, !15359, !125, !208, !32}
!15359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 32)
!15360 = !{!15361, !15362, !15363, !15364}
!15361 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15356, file: !2433, line: 791, type: !15359)
!15362 = !DILocalVariable(name: "priority", arg: 2, scope: !15356, file: !2433, line: 791, type: !125)
!15363 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15356, file: !2433, line: 792, type: !208)
!15364 = !DILocalVariable(name: "options", arg: 4, scope: !15356, file: !2433, line: 792, type: !32)
!15365 = !DILocation(line: 0, scope: !15356)
!15366 = !DILocation(line: 795, column: 15, scope: !15356)
!15367 = !DILocation(line: 795, column: 25, scope: !15356)
!15368 = !DILocation(line: 796, column: 30, scope: !15356)
!15369 = !DILocation(line: 796, column: 15, scope: !15356)
!15370 = !DILocation(line: 796, column: 28, scope: !15356)
!15371 = !DILocation(line: 797, column: 30, scope: !15356)
!15372 = !DILocation(line: 797, column: 15, scope: !15356)
!15373 = !DILocation(line: 797, column: 28, scope: !15356)
!15374 = !DILocation(line: 799, column: 22, scope: !15356)
!15375 = !DILocation(line: 799, column: 15, scope: !15356)
!15376 = !DILocation(line: 799, column: 20, scope: !15356)
!15377 = !DILocation(line: 801, column: 15, scope: !15356)
!15378 = !DILocation(line: 801, column: 28, scope: !15356)
!15379 = !DILocation(line: 814, column: 2, scope: !15356)
!15380 = !DILocation(line: 815, column: 1, scope: !15356)
!15381 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2433, file: !2433, line: 449, type: !15382, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15384)
!15382 = !DISubroutineType(types: !15383)
!15383 = !{!393, !2437, !15311, !272}
!15384 = !{!15385, !15386, !15387, !15388, !15389, !15390, !15391, !15392}
!15385 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15381, file: !2433, line: 449, type: !2437)
!15386 = !DILocalVariable(name: "stack", arg: 2, scope: !15381, file: !2433, line: 450, type: !15311)
!15387 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15381, file: !2433, line: 450, type: !272)
!15388 = !DILocalVariable(name: "stack_obj_size", scope: !15381, file: !2433, line: 452, type: !272)
!15389 = !DILocalVariable(name: "stack_buf_size", scope: !15381, file: !2433, line: 452, type: !272)
!15390 = !DILocalVariable(name: "stack_ptr", scope: !15381, file: !2433, line: 453, type: !393)
!15391 = !DILocalVariable(name: "stack_buf_start", scope: !15381, file: !2433, line: 453, type: !393)
!15392 = !DILocalVariable(name: "delta", scope: !15381, file: !2433, line: 454, type: !272)
!15393 = !DILocation(line: 0, scope: !15381)
!15394 = !DILocation(line: 465, column: 20, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15381, file: !2433, line: 463, column: 2)
!15396 = !DILocation(line: 466, column: 21, scope: !15395)
!15397 = !DILocation(line: 473, column: 28, scope: !15381)
!15398 = !DILocation(line: 514, column: 33, scope: !15381)
!15399 = !DILocation(line: 514, column: 25, scope: !15381)
!15400 = !DILocation(line: 514, column: 31, scope: !15381)
!15401 = !DILocation(line: 515, column: 25, scope: !15381)
!15402 = !DILocation(line: 515, column: 30, scope: !15381)
!15403 = !DILocation(line: 516, column: 25, scope: !15381)
!15404 = !DILocation(line: 516, column: 31, scope: !15381)
!15405 = !DILocation(line: 520, column: 2, scope: !15381)
!15406 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2380, file: !2380, line: 331, type: !15407, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15409)
!15407 = !DISubroutineType(types: !15408)
!15408 = !{!393, !15311}
!15409 = !{!15410}
!15410 = !DILocalVariable(name: "sym", arg: 1, scope: !15406, file: !2380, line: 331, type: !15311)
!15411 = !DILocation(line: 0, scope: !15406)
!15412 = !DILocation(line: 333, column: 21, scope: !15406)
!15413 = !DILocation(line: 333, column: 2, scope: !15406)
!15414 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15415, file: !15415, line: 40, type: !15416, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15418)
!15415 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15416 = !DISubroutineType(types: !15417)
!15417 = !{null, !15359}
!15418 = !{!15419}
!15419 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15414, file: !15415, line: 40, type: !15359)
!15420 = !DILocation(line: 0, scope: !15414)
!15421 = !DILocation(line: 42, column: 31, scope: !15414)
!15422 = !DILocation(line: 42, column: 2, scope: !15414)
!15423 = !DILocation(line: 43, column: 1, scope: !15414)
!15424 = distinct !DISubprogram(name: "z_init_timeout", scope: !15415, file: !15415, line: 25, type: !2494, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15425)
!15425 = !{!15426}
!15426 = !DILocalVariable(name: "to", arg: 1, scope: !15424, file: !15415, line: 25, type: !2496)
!15427 = !DILocation(line: 0, scope: !15424)
!15428 = !DILocation(line: 27, column: 22, scope: !15424)
!15429 = !DILocation(line: 27, column: 2, scope: !15424)
!15430 = !DILocation(line: 28, column: 1, scope: !15424)
!15431 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !15432, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15434)
!15432 = !DISubroutineType(types: !15433)
!15433 = !{null, !2540}
!15434 = !{!15435}
!15435 = !DILocalVariable(name: "node", arg: 1, scope: !15431, file: !541, line: 211, type: !2540)
!15436 = !DILocation(line: 0, scope: !15431)
!15437 = !DILocation(line: 213, column: 8, scope: !15431)
!15438 = !DILocation(line: 213, column: 13, scope: !15431)
!15439 = !DILocation(line: 214, column: 8, scope: !15431)
!15440 = !DILocation(line: 214, column: 13, scope: !15431)
!15441 = !DILocation(line: 215, column: 1, scope: !15431)
!15442 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !15443, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15446)
!15443 = !DISubroutineType(types: !15444)
!15444 = !{null, !15445}
!15445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!15446 = !{!15447}
!15447 = !DILocalVariable(name: "list", arg: 1, scope: !15442, file: !541, line: 197, type: !15445)
!15448 = !DILocation(line: 0, scope: !15442)
!15449 = !DILocation(line: 199, column: 8, scope: !15442)
!15450 = !DILocation(line: 199, column: 13, scope: !15442)
!15451 = !DILocation(line: 200, column: 8, scope: !15442)
!15452 = !DILocation(line: 200, column: 13, scope: !15442)
!15453 = !DILocation(line: 201, column: 1, scope: !15442)
!15454 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2433, file: !2433, line: 641, type: !15455, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15461)
!15455 = !DISubroutineType(types: !15456)
!15456 = !{!2436, !2437, !15311, !272, !5276, !124, !124, !124, !125, !208, !15457}
!15457 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1915, line: 67, baseType: !15458)
!15458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1915, line: 65, size: 64, elements: !15459)
!15459 = !{!15460}
!15460 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15458, file: !1915, line: 66, baseType: !1914, size: 64)
!15461 = !{!15462, !15463, !15464, !15465, !15466, !15467, !15468, !15469, !15470, !15471}
!15462 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15454, file: !2433, line: 641, type: !2437)
!15463 = !DILocalVariable(name: "stack", arg: 2, scope: !15454, file: !2433, line: 642, type: !15311)
!15464 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15454, file: !2433, line: 643, type: !272)
!15465 = !DILocalVariable(name: "entry", arg: 4, scope: !15454, file: !2433, line: 643, type: !5276)
!15466 = !DILocalVariable(name: "p1", arg: 5, scope: !15454, file: !2433, line: 644, type: !124)
!15467 = !DILocalVariable(name: "p2", arg: 6, scope: !15454, file: !2433, line: 644, type: !124)
!15468 = !DILocalVariable(name: "p3", arg: 7, scope: !15454, file: !2433, line: 644, type: !124)
!15469 = !DILocalVariable(name: "prio", arg: 8, scope: !15454, file: !2433, line: 645, type: !125)
!15470 = !DILocalVariable(name: "options", arg: 9, scope: !15454, file: !2433, line: 645, type: !208)
!15471 = !DILocalVariable(name: "delay", arg: 10, scope: !15454, file: !2433, line: 645, type: !15457)
!15472 = !DILocation(line: 0, scope: !15454)
!15473 = !DILocation(line: 649, column: 2, scope: !15454)
!15474 = !DILocation(line: 652, column: 7, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15454, file: !2433, line: 652, column: 6)
!15476 = !DILocation(line: 652, column: 6, scope: !15454)
!15477 = !DILocation(line: 653, column: 3, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15475, file: !2433, line: 652, column: 39)
!15479 = !DILocation(line: 654, column: 2, scope: !15478)
!15480 = !DILocation(line: 656, column: 2, scope: !15454)
!15481 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2433, file: !2433, line: 401, type: !15482, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15484)
!15482 = !DISubroutineType(types: !15483)
!15483 = !{null, !2437, !15457}
!15484 = !{!15485, !15486}
!15485 = !DILocalVariable(name: "thread", arg: 1, scope: !15481, file: !2433, line: 401, type: !2437)
!15486 = !DILocalVariable(name: "delay", arg: 2, scope: !15481, file: !2433, line: 401, type: !15457)
!15487 = !DILocation(line: 0, scope: !15481)
!15488 = !DILocation(line: 404, column: 6, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15481, file: !2433, line: 404, column: 6)
!15490 = !DILocation(line: 404, column: 6, scope: !15481)
!15491 = !DILocation(line: 405, column: 3, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15489, file: !2433, line: 404, column: 38)
!15493 = !DILocation(line: 406, column: 2, scope: !15492)
!15494 = !DILocation(line: 407, column: 3, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15489, file: !2433, line: 406, column: 9)
!15496 = !DILocation(line: 413, column: 1, scope: !15481)
!15497 = distinct !DISubprogram(name: "k_thread_start", scope: !5398, file: !5398, line: 205, type: !15498, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15500)
!15498 = !DISubroutineType(types: !15499)
!15499 = !{null, !2436}
!15500 = !{!15501}
!15501 = !DILocalVariable(name: "thread", arg: 1, scope: !15497, file: !5398, line: 205, type: !2436)
!15502 = !DILocation(line: 0, scope: !15497)
!15503 = !DILocation(line: 214, column: 2, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !15497, file: !5398, line: 214, column: 2)
!15505 = !{i64 2154177415}
!15506 = !DILocation(line: 215, column: 2, scope: !15497)
!15507 = !DILocation(line: 216, column: 1, scope: !15497)
!15508 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15415, file: !15415, line: 47, type: !15482, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15509)
!15509 = !{!15510, !15511}
!15510 = !DILocalVariable(name: "thread", arg: 1, scope: !15508, file: !15415, line: 47, type: !2437)
!15511 = !DILocalVariable(name: "ticks", arg: 2, scope: !15508, file: !15415, line: 47, type: !15457)
!15512 = !DILocation(line: 0, scope: !15508)
!15513 = !DILocation(line: 49, column: 30, scope: !15508)
!15514 = !DILocation(line: 49, column: 2, scope: !15508)
!15515 = !DILocation(line: 50, column: 1, scope: !15508)
!15516 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2433, file: !2433, line: 748, type: !3326, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15517)
!15517 = !{!15518, !15536}
!15518 = !DILocalVariable(name: "thread_data", scope: !15519, file: !2433, line: 750, type: !15520)
!15519 = distinct !DILexicalBlock(scope: !15516, file: !2433, line: 750, column: 2)
!15520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15521, size: 32)
!15521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !624, line: 620, size: 384, elements: !15522)
!15522 = !{!15523, !15524, !15525, !15526, !15527, !15528, !15529, !15530, !15531, !15532, !15533, !15535}
!15523 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15521, file: !624, line: 621, baseType: !2437, size: 32)
!15524 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15521, file: !624, line: 622, baseType: !15311, size: 32, offset: 32)
!15525 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15521, file: !624, line: 623, baseType: !32, size: 32, offset: 64)
!15526 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15521, file: !624, line: 624, baseType: !5276, size: 32, offset: 96)
!15527 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15521, file: !624, line: 625, baseType: !124, size: 32, offset: 128)
!15528 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15521, file: !624, line: 626, baseType: !124, size: 32, offset: 160)
!15529 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15521, file: !624, line: 627, baseType: !124, size: 32, offset: 192)
!15530 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15521, file: !624, line: 628, baseType: !125, size: 32, offset: 224)
!15531 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15521, file: !624, line: 629, baseType: !208, size: 32, offset: 256)
!15532 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15521, file: !624, line: 630, baseType: !887, size: 32, offset: 288)
!15533 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15521, file: !624, line: 631, baseType: !15534, size: 32, offset: 320)
!15534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 32)
!15535 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15521, file: !624, line: 632, baseType: !140, size: 32, offset: 352)
!15536 = !DILocalVariable(name: "thread_data", scope: !15537, file: !2433, line: 781, type: !15520)
!15537 = distinct !DILexicalBlock(scope: !15516, file: !2433, line: 781, column: 2)
!15538 = !DILocation(line: 0, scope: !15519)
!15539 = !DILocation(line: 750, column: 2, scope: !15519)
!15540 = !DILocation(line: 780, column: 2, scope: !15516)
!15541 = !DILocation(line: 0, scope: !15537)
!15542 = !DILocation(line: 781, column: 2, scope: !15537)
!15543 = !DILocation(line: 752, column: 17, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15545, file: !2433, line: 750, column: 38)
!15545 = distinct !DILexicalBlock(scope: !15519, file: !2433, line: 750, column: 2)
!15546 = !DILocation(line: 753, column: 17, scope: !15544)
!15547 = !DILocation(line: 754, column: 17, scope: !15544)
!15548 = !DILocation(line: 755, column: 17, scope: !15544)
!15549 = !DILocation(line: 756, column: 17, scope: !15544)
!15550 = !DILocation(line: 757, column: 17, scope: !15544)
!15551 = !DILocation(line: 758, column: 17, scope: !15544)
!15552 = !DILocation(line: 759, column: 17, scope: !15544)
!15553 = !DILocation(line: 760, column: 17, scope: !15544)
!15554 = !DILocation(line: 751, column: 3, scope: !15544)
!15555 = !DILocation(line: 763, column: 16, scope: !15544)
!15556 = !DILocation(line: 763, column: 29, scope: !15544)
!15557 = !DILocation(line: 763, column: 39, scope: !15544)
!15558 = !DILocation(line: 750, column: 2, scope: !15545)
!15559 = !DILocation(line: 750, column: 2, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15545, file: !2433, line: 750, column: 2)
!15561 = distinct !{!15561, !15539, !15562}
!15562 = !DILocation(line: 764, column: 2, scope: !15519)
!15563 = !DILocation(line: 787, column: 2, scope: !15516)
!15564 = !DILocation(line: 788, column: 1, scope: !15516)
!15565 = !DILocation(line: 782, column: 20, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15567, file: !2433, line: 782, column: 7)
!15567 = distinct !DILexicalBlock(scope: !15568, file: !2433, line: 781, column: 38)
!15568 = distinct !DILexicalBlock(scope: !15537, file: !2433, line: 781, column: 2)
!15569 = !DILocation(line: 782, column: 31, scope: !15566)
!15570 = !DILocation(line: 782, column: 7, scope: !15567)
!15571 = !DILocation(line: 783, column: 37, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15566, file: !2433, line: 782, column: 51)
!15573 = !DILocation(line: 784, column: 10, scope: !15572)
!15574 = !DILocation(line: 783, column: 4, scope: !15572)
!15575 = !DILocation(line: 785, column: 3, scope: !15572)
!15576 = !DILocation(line: 781, column: 2, scope: !15568)
!15577 = !DILocation(line: 781, column: 2, scope: !15578)
!15578 = distinct !DILexicalBlock(scope: !15568, file: !2433, line: 781, column: 2)
!15579 = distinct !{!15579, !15542, !15580}
!15580 = !DILocation(line: 786, column: 2, scope: !15537)
!15581 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !15582, file: !15582, line: 403, type: !15583, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15585)
!15582 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15583 = !DISubroutineType(types: !15584)
!15584 = !{!1781, !1781}
!15585 = !{!15586}
!15586 = !DILocalVariable(name: "t", arg: 1, scope: !15581, file: !15582, line: 403, type: !1781)
!15587 = !DILocation(line: 0, scope: !15581)
!15588 = !DILocalVariable(name: "t", arg: 1, scope: !15589, file: !15582, line: 102, type: !1781)
!15589 = distinct !DISubprogram(name: "z_tmcvt", scope: !15582, file: !15582, line: 102, type: !15590, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15592)
!15590 = !DISubroutineType(types: !15591)
!15591 = !{!1781, !1781, !208, !208, !153, !153, !153, !153}
!15592 = !{!15588, !15593, !15594, !15595, !15596, !15597, !15598, !15599, !15600, !15601, !15602}
!15593 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15589, file: !15582, line: 102, type: !208)
!15594 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15589, file: !15582, line: 103, type: !208)
!15595 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15589, file: !15582, line: 103, type: !153)
!15596 = !DILocalVariable(name: "result32", arg: 5, scope: !15589, file: !15582, line: 104, type: !153)
!15597 = !DILocalVariable(name: "round_up", arg: 6, scope: !15589, file: !15582, line: 104, type: !153)
!15598 = !DILocalVariable(name: "round_off", arg: 7, scope: !15589, file: !15582, line: 105, type: !153)
!15599 = !DILocalVariable(name: "mul_ratio", scope: !15589, file: !15582, line: 107, type: !153)
!15600 = !DILocalVariable(name: "div_ratio", scope: !15589, file: !15582, line: 109, type: !153)
!15601 = !DILocalVariable(name: "off", scope: !15589, file: !15582, line: 116, type: !1781)
!15602 = !DILocalVariable(name: "rdivisor", scope: !15603, file: !15582, line: 119, type: !208)
!15603 = distinct !DILexicalBlock(scope: !15604, file: !15582, line: 118, column: 18)
!15604 = distinct !DILexicalBlock(scope: !15589, file: !15582, line: 118, column: 6)
!15605 = !DILocation(line: 0, scope: !15589, inlinedAt: !15606)
!15606 = distinct !DILocation(line: 406, column: 9, scope: !15581)
!15607 = !DILocation(line: 145, column: 13, scope: !15608, inlinedAt: !15606)
!15608 = distinct !DILexicalBlock(scope: !15609, file: !15582, line: 144, column: 10)
!15609 = distinct !DILexicalBlock(scope: !15610, file: !15582, line: 142, column: 7)
!15610 = distinct !DILexicalBlock(scope: !15611, file: !15582, line: 141, column: 24)
!15611 = distinct !DILexicalBlock(scope: !15612, file: !15582, line: 141, column: 13)
!15612 = distinct !DILexicalBlock(scope: !15589, file: !15582, line: 134, column: 6)
!15613 = !DILocation(line: 406, column: 2, scope: !15581)
!15614 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2433, file: !2433, line: 817, type: !5274, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15615)
!15615 = !{!15616, !15617, !15618, !15619}
!15616 = !DILocalVariable(name: "entry", arg: 1, scope: !15614, file: !2433, line: 817, type: !5276)
!15617 = !DILocalVariable(name: "p1", arg: 2, scope: !15614, file: !2433, line: 818, type: !124)
!15618 = !DILocalVariable(name: "p2", arg: 3, scope: !15614, file: !2433, line: 818, type: !124)
!15619 = !DILocalVariable(name: "p3", arg: 4, scope: !15614, file: !2433, line: 818, type: !124)
!15620 = !DILocation(line: 0, scope: !15614)
!15621 = !DILocation(line: 822, column: 2, scope: !15614)
!15622 = !DILocation(line: 822, column: 17, scope: !15614)
!15623 = !DILocation(line: 822, column: 30, scope: !15614)
!15624 = !DILocation(line: 823, column: 2, scope: !15614)
!15625 = !DILocation(line: 845, column: 2, scope: !15614)
!15626 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2433, file: !2433, line: 888, type: !15627, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15629)
!15627 = !DISubroutineType(types: !15628)
!15628 = !{!125, !2437}
!15629 = !{!15630}
!15630 = !DILocalVariable(name: "thread", arg: 1, scope: !15626, file: !2433, line: 888, type: !2437)
!15631 = !DILocation(line: 0, scope: !15626)
!15632 = !DILocation(line: 893, column: 2, scope: !15626)
!15633 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2433, file: !2433, line: 897, type: !15634, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15636)
!15634 = !DISubroutineType(types: !15635)
!15635 = !{!125, !2437, !32}
!15636 = !{!15637, !15638}
!15637 = !DILocalVariable(name: "thread", arg: 1, scope: !15633, file: !2433, line: 897, type: !2437)
!15638 = !DILocalVariable(name: "options", arg: 2, scope: !15633, file: !2433, line: 897, type: !32)
!15639 = !DILocation(line: 0, scope: !15633)
!15640 = !DILocation(line: 902, column: 2, scope: !15633)
!15641 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2433, file: !2433, line: 1072, type: !15642, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15647)
!15642 = !DISubroutineType(types: !15643)
!15643 = !{!125, !2436, !15644}
!15644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15645, size: 32)
!15645 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !531, line: 234, baseType: !15646)
!15646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !531, line: 192, elements: !639)
!15647 = !{!15648, !15649}
!15648 = !DILocalVariable(name: "thread", arg: 1, scope: !15641, file: !2433, line: 1072, type: !2436)
!15649 = !DILocalVariable(name: "stats", arg: 2, scope: !15641, file: !2433, line: 1073, type: !15644)
!15650 = !DILocation(line: 0, scope: !15641)
!15651 = !DILocation(line: 1075, column: 14, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15641, file: !2433, line: 1075, column: 6)
!15653 = !DILocation(line: 1075, column: 23, scope: !15652)
!15654 = !DILocation(line: 1086, column: 1, scope: !15641)
!15655 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2433, file: !2433, line: 1088, type: !15656, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !15658)
!15656 = !DISubroutineType(types: !15657)
!15657 = !{!125, !15644}
!15658 = !{!15659}
!15659 = !DILocalVariable(name: "stats", arg: 1, scope: !15655, file: !2433, line: 1088, type: !15644)
!15660 = !DILocation(line: 0, scope: !15655)
!15661 = !DILocation(line: 1094, column: 12, scope: !15662)
!15662 = distinct !DILexicalBlock(scope: !15655, file: !2433, line: 1094, column: 6)
!15663 = !DILocation(line: 1120, column: 1, scope: !15655)
!15664 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15665, file: !15665, line: 20, type: !3326, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3307, retainedNodes: !639)
!15665 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15666 = !DILocation(line: 30, column: 2, scope: !15664)
!15667 = !DILocation(line: 31, column: 1, scope: !15664)
!15668 = distinct !DISubprogram(name: "idle", scope: !15665, file: !15665, line: 33, type: !5279, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3307, retainedNodes: !15669)
!15669 = !{!15670, !15671, !15672}
!15670 = !DILocalVariable(name: "unused1", arg: 1, scope: !15668, file: !15665, line: 33, type: !124)
!15671 = !DILocalVariable(name: "unused2", arg: 2, scope: !15668, file: !15665, line: 33, type: !124)
!15672 = !DILocalVariable(name: "unused3", arg: 3, scope: !15668, file: !15665, line: 33, type: !124)
!15673 = !DILocation(line: 0, scope: !15668)
!15674 = !DILocation(line: 41, column: 2, scope: !15668)
!15675 = !DILocation(line: 55, column: 2, scope: !15676, inlinedAt: !15680)
!15676 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6862, file: !6862, line: 42, type: !6863, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3307, retainedNodes: !15677)
!15677 = !{!15678, !15679}
!15678 = !DILocalVariable(name: "key", scope: !15676, file: !6862, line: 44, type: !32)
!15679 = !DILocalVariable(name: "tmp", scope: !15676, file: !6862, line: 53, type: !32)
!15680 = distinct !DILocation(line: 62, column: 10, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !15668, file: !15665, line: 41, column: 15)
!15682 = !{i64 2038805}
!15683 = !DILocation(line: 0, scope: !15676, inlinedAt: !15680)
!15684 = !DILocation(line: 86, column: 3, scope: !15681)
!15685 = distinct !{!15685, !15674, !15686}
!15686 = !DILocation(line: 105, column: 2, scope: !15668)
!15687 = distinct !DISubprogram(name: "k_cpu_idle", scope: !624, file: !624, line: 5627, type: !3326, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3307, retainedNodes: !639)
!15688 = !DILocation(line: 5629, column: 2, scope: !15687)
!15689 = !DILocation(line: 5630, column: 1, scope: !15687)
!15690 = !DISubprogram(name: "arch_cpu_idle", scope: !5277, file: !5277, line: 167, type: !3326, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15691 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2665, file: !2665, line: 93, type: !15692, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15694)
!15692 = !DISubroutineType(types: !15693)
!15693 = !{!887, !2560, !2560}
!15694 = !{!15695, !15696, !15697, !15698}
!15695 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15691, file: !2665, line: 93, type: !2560)
!15696 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15691, file: !2665, line: 94, type: !2560)
!15697 = !DILocalVariable(name: "b1", scope: !15691, file: !2665, line: 97, type: !887)
!15698 = !DILocalVariable(name: "b2", scope: !15691, file: !2665, line: 98, type: !887)
!15699 = !DILocation(line: 0, scope: !15691)
!15700 = !DILocation(line: 97, column: 30, scope: !15691)
!15701 = !DILocation(line: 98, column: 30, scope: !15691)
!15702 = !DILocation(line: 100, column: 9, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15691, file: !2665, line: 100, column: 6)
!15704 = !DILocation(line: 100, column: 6, scope: !15691)
!15705 = !DILocation(line: 125, column: 1, scope: !15691)
!15706 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2665, file: !2665, line: 428, type: !15707, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15709)
!15707 = !DISubroutineType(types: !15708)
!15708 = !{null, !2560}
!15709 = !{!15710}
!15710 = !DILocalVariable(name: "curr", arg: 1, scope: !15706, file: !2665, line: 428, type: !2560)
!15711 = !DILocation(line: 0, scope: !15706)
!15712 = !DILocation(line: 434, column: 6, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15706, file: !2665, line: 434, column: 6)
!15714 = !DILocation(line: 434, column: 23, scope: !15713)
!15715 = !DILocation(line: 434, column: 6, scope: !15706)
!15716 = !DILocation(line: 435, column: 50, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15713, file: !2665, line: 434, column: 29)
!15718 = !DILocation(line: 435, column: 48, scope: !15717)
!15719 = !DILocation(line: 435, column: 29, scope: !15717)
!15720 = !DILocation(line: 436, column: 24, scope: !15717)
!15721 = !DILocation(line: 436, column: 3, scope: !15717)
!15722 = !DILocation(line: 437, column: 2, scope: !15717)
!15723 = !DILocation(line: 438, column: 1, scope: !15706)
!15724 = distinct !DISubprogram(name: "slice_time", scope: !2665, file: !2665, line: 407, type: !15725, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15727)
!15725 = !DISubroutineType(types: !15726)
!15726 = !{!125, !2560}
!15727 = !{!15728, !15729}
!15728 = !DILocalVariable(name: "curr", arg: 1, scope: !15724, file: !2665, line: 407, type: !2560)
!15729 = !DILocalVariable(name: "ret", scope: !15724, file: !2665, line: 409, type: !125)
!15730 = !DILocation(line: 0, scope: !15724)
!15731 = !DILocation(line: 409, column: 12, scope: !15724)
!15732 = !DILocation(line: 416, column: 2, scope: !15724)
!15733 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2665, file: !2665, line: 440, type: !15734, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15736)
!15734 = !DISubroutineType(types: !15735)
!15735 = !{null, !887, !125}
!15736 = !{!15737, !15738, !15739, !15745}
!15737 = !DILocalVariable(name: "slice", arg: 1, scope: !15733, file: !2665, line: 440, type: !887)
!15738 = !DILocalVariable(name: "prio", arg: 2, scope: !15733, file: !2665, line: 440, type: !125)
!15739 = !DILocalVariable(name: "__i", scope: !15740, file: !2665, line: 442, type: !15741)
!15740 = distinct !DILexicalBlock(scope: !15733, file: !2665, line: 442, column: 2)
!15741 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !15742)
!15742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !15743)
!15743 = !{!15744}
!15744 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15742, file: !638, line: 33, baseType: !125, size: 32)
!15745 = !DILocalVariable(name: "__key", scope: !15740, file: !2665, line: 442, type: !15741)
!15746 = !DILocation(line: 0, scope: !15733)
!15747 = !DILocation(line: 0, scope: !15740)
!15748 = !DILocalVariable(name: "l", arg: 1, scope: !15749, file: !638, line: 136, type: !15752)
!15749 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !15750, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15753)
!15750 = !DISubroutineType(types: !15751)
!15751 = !{!15741, !15752}
!15752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 32)
!15753 = !{!15748, !15754}
!15754 = !DILocalVariable(name: "k", scope: !15749, file: !638, line: 139, type: !15741)
!15755 = !DILocation(line: 0, scope: !15749, inlinedAt: !15756)
!15756 = distinct !DILocation(line: 442, column: 2, scope: !15740)
!15757 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !15762)
!15758 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6862, file: !6862, line: 42, type: !6863, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15759)
!15759 = !{!15760, !15761}
!15760 = !DILocalVariable(name: "key", scope: !15758, file: !6862, line: 44, type: !32)
!15761 = !DILocalVariable(name: "tmp", scope: !15758, file: !6862, line: 53, type: !32)
!15762 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !15756)
!15763 = !{i64 2082776}
!15764 = !DILocation(line: 0, scope: !15758, inlinedAt: !15762)
!15765 = !DILocation(line: 443, column: 29, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15767, file: !2665, line: 442, column: 26)
!15767 = distinct !DILexicalBlock(scope: !15740, file: !2665, line: 442, column: 2)
!15768 = !DILocation(line: 444, column: 17, scope: !15766)
!15769 = !DILocation(line: 445, column: 51, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15766, file: !2665, line: 445, column: 7)
!15771 = !DILocation(line: 445, column: 7, scope: !15766)
!15772 = !DILocation(line: 0, scope: !15766)
!15773 = !DILocation(line: 451, column: 18, scope: !15766)
!15774 = !DILocation(line: 452, column: 3, scope: !15766)
!15775 = !DILocalVariable(name: "key", arg: 2, scope: !15776, file: !638, line: 190, type: !15741)
!15776 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !15777, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15779)
!15777 = !DISubroutineType(types: !15778)
!15778 = !{null, !15752, !15741}
!15779 = !{!15780, !15775}
!15780 = !DILocalVariable(name: "l", arg: 1, scope: !15776, file: !638, line: 189, type: !15752)
!15781 = !DILocation(line: 0, scope: !15776, inlinedAt: !15782)
!15782 = distinct !DILocation(line: 442, column: 2, scope: !15767)
!15783 = !DILocalVariable(name: "key", arg: 1, scope: !15784, file: !6862, line: 84, type: !32)
!15784 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6862, file: !6862, line: 84, type: !6873, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15785)
!15785 = !{!15783}
!15786 = !DILocation(line: 0, scope: !15784, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !15782)
!15788 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !15787)
!15789 = !{i64 2083593}
!15790 = !DILocation(line: 454, column: 1, scope: !15733)
!15791 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !15582, file: !15582, line: 389, type: !9575, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15792)
!15792 = !{!15793}
!15793 = !DILocalVariable(name: "t", arg: 1, scope: !15791, file: !15582, line: 389, type: !208)
!15794 = !DILocation(line: 0, scope: !15791)
!15795 = !DILocalVariable(name: "t", arg: 1, scope: !15796, file: !15582, line: 102, type: !1781)
!15796 = distinct !DISubprogram(name: "z_tmcvt", scope: !15582, file: !15582, line: 102, type: !15590, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15797)
!15797 = !{!15795, !15798, !15799, !15800, !15801, !15802, !15803, !15804, !15805, !15806, !15807}
!15798 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15796, file: !15582, line: 102, type: !208)
!15799 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15796, file: !15582, line: 103, type: !208)
!15800 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15796, file: !15582, line: 103, type: !153)
!15801 = !DILocalVariable(name: "result32", arg: 5, scope: !15796, file: !15582, line: 104, type: !153)
!15802 = !DILocalVariable(name: "round_up", arg: 6, scope: !15796, file: !15582, line: 104, type: !153)
!15803 = !DILocalVariable(name: "round_off", arg: 7, scope: !15796, file: !15582, line: 105, type: !153)
!15804 = !DILocalVariable(name: "mul_ratio", scope: !15796, file: !15582, line: 107, type: !153)
!15805 = !DILocalVariable(name: "div_ratio", scope: !15796, file: !15582, line: 109, type: !153)
!15806 = !DILocalVariable(name: "off", scope: !15796, file: !15582, line: 116, type: !1781)
!15807 = !DILocalVariable(name: "rdivisor", scope: !15808, file: !15582, line: 119, type: !208)
!15808 = distinct !DILexicalBlock(scope: !15809, file: !15582, line: 118, column: 18)
!15809 = distinct !DILexicalBlock(scope: !15796, file: !15582, line: 118, column: 6)
!15810 = !DILocation(line: 0, scope: !15796, inlinedAt: !15811)
!15811 = distinct !DILocation(line: 392, column: 9, scope: !15791)
!15812 = !DILocation(line: 143, column: 25, scope: !15813, inlinedAt: !15811)
!15813 = distinct !DILexicalBlock(scope: !15814, file: !15582, line: 142, column: 17)
!15814 = distinct !DILexicalBlock(scope: !15815, file: !15582, line: 142, column: 7)
!15815 = distinct !DILexicalBlock(scope: !15816, file: !15582, line: 141, column: 24)
!15816 = distinct !DILexicalBlock(scope: !15817, file: !15582, line: 141, column: 13)
!15817 = distinct !DILexicalBlock(scope: !15796, file: !15582, line: 134, column: 6)
!15818 = !DILocation(line: 392, column: 2, scope: !15791)
!15819 = distinct !DISubprogram(name: "z_time_slice", scope: !2665, file: !2665, line: 502, type: !10211, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15820)
!15820 = !{!15821, !15822}
!15821 = !DILocalVariable(name: "ticks", arg: 1, scope: !15819, file: !2665, line: 502, type: !125)
!15822 = !DILocalVariable(name: "key", scope: !15819, file: !2665, line: 511, type: !15741)
!15823 = !DILocation(line: 0, scope: !15819)
!15824 = !DILocation(line: 0, scope: !15749, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 511, column: 25, scope: !15819)
!15826 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !15825)
!15828 = !DILocation(line: 0, scope: !15758, inlinedAt: !15827)
!15829 = !DILocation(line: 514, column: 6, scope: !15830)
!15830 = distinct !DILexicalBlock(scope: !15819, file: !2665, line: 514, column: 6)
!15831 = !DILocation(line: 514, column: 25, scope: !15830)
!15832 = !DILocation(line: 514, column: 22, scope: !15830)
!15833 = !DILocation(line: 514, column: 6, scope: !15819)
!15834 = !DILocation(line: 515, column: 3, scope: !15835)
!15835 = distinct !DILexicalBlock(scope: !15830, file: !2665, line: 514, column: 35)
!15836 = !DILocation(line: 0, scope: !15776, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 516, column: 3, scope: !15835)
!15838 = !DILocation(line: 0, scope: !15784, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !15837)
!15840 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !15839)
!15841 = !DILocation(line: 517, column: 3, scope: !15835)
!15842 = !DILocation(line: 519, column: 18, scope: !15819)
!15843 = !DILocation(line: 522, column: 6, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15819, file: !2665, line: 522, column: 6)
!15845 = !DILocation(line: 522, column: 27, scope: !15844)
!15846 = !DILocation(line: 522, column: 30, scope: !15844)
!15847 = !DILocation(line: 522, column: 6, scope: !15819)
!15848 = !DILocation(line: 523, column: 30, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15850, file: !2665, line: 523, column: 7)
!15850 = distinct !DILexicalBlock(scope: !15844, file: !2665, line: 522, column: 51)
!15851 = !DILocation(line: 523, column: 13, scope: !15849)
!15852 = !DILocation(line: 523, column: 7, scope: !15850)
!15853 = !DILocation(line: 530, column: 10, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15849, file: !2665, line: 523, column: 43)
!15855 = !DILocation(line: 531, column: 3, scope: !15854)
!15856 = !DILocation(line: 532, column: 30, scope: !15857)
!15857 = distinct !DILexicalBlock(scope: !15849, file: !2665, line: 531, column: 10)
!15858 = !DILocation(line: 535, column: 29, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15844, file: !2665, line: 534, column: 9)
!15860 = !DILocation(line: 0, scope: !15776, inlinedAt: !15861)
!15861 = distinct !DILocation(line: 537, column: 2, scope: !15819)
!15862 = !DILocation(line: 0, scope: !15784, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !15861)
!15864 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !15863)
!15865 = !DILocation(line: 538, column: 1, scope: !15819)
!15866 = distinct !DISubprogram(name: "sliceable", scope: !2665, file: !2665, line: 468, type: !15867, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15869)
!15867 = !DISubroutineType(types: !15868)
!15868 = !{!153, !2560}
!15869 = !{!15870, !15871}
!15870 = !DILocalVariable(name: "thread", arg: 1, scope: !15866, file: !2665, line: 468, type: !2560)
!15871 = !DILocalVariable(name: "ret", scope: !15866, file: !2665, line: 470, type: !153)
!15872 = !DILocation(line: 0, scope: !15866)
!15873 = !DILocation(line: 470, column: 13, scope: !15866)
!15874 = !DILocation(line: 471, column: 3, scope: !15866)
!15875 = !DILocation(line: 471, column: 7, scope: !15866)
!15876 = !DILocation(line: 472, column: 3, scope: !15866)
!15877 = !DILocation(line: 472, column: 37, scope: !15866)
!15878 = !DILocation(line: 472, column: 24, scope: !15866)
!15879 = !DILocation(line: 472, column: 43, scope: !15866)
!15880 = !DILocation(line: 472, column: 7, scope: !15866)
!15881 = !DILocation(line: 473, column: 3, scope: !15866)
!15882 = !DILocation(line: 473, column: 7, scope: !15866)
!15883 = !DILocation(line: 473, column: 6, scope: !15866)
!15884 = !DILocation(line: 479, column: 2, scope: !15866)
!15885 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2665, file: !2665, line: 482, type: !15886, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15888)
!15886 = !DISubroutineType(types: !15887)
!15887 = !{!15741, !15741}
!15888 = !{!15889, !15890}
!15889 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15885, file: !2665, line: 482, type: !15741)
!15890 = !DILocalVariable(name: "curr", scope: !15885, file: !2665, line: 484, type: !2560)
!15891 = !DILocation(line: 0, scope: !15885)
!15892 = !DILocation(line: 484, column: 26, scope: !15885)
!15893 = !DILocation(line: 493, column: 7, scope: !15894)
!15894 = distinct !DILexicalBlock(scope: !15885, file: !2665, line: 493, column: 6)
!15895 = !DILocation(line: 493, column: 6, scope: !15885)
!15896 = !DILocation(line: 494, column: 3, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15894, file: !2665, line: 493, column: 49)
!15898 = !DILocation(line: 495, column: 2, scope: !15897)
!15899 = !DILocation(line: 496, column: 2, scope: !15885)
!15900 = !DILocation(line: 499, column: 1, scope: !15885)
!15901 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !15021, file: !15021, line: 106, type: !15867, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15902)
!15902 = !{!15903, !15904}
!15903 = !DILocalVariable(name: "thread", arg: 1, scope: !15901, file: !15021, line: 106, type: !2560)
!15904 = !DILocalVariable(name: "state", scope: !15901, file: !15021, line: 108, type: !150)
!15905 = !DILocation(line: 0, scope: !15901)
!15906 = !DILocation(line: 108, column: 31, scope: !15901)
!15907 = !DILocation(line: 110, column: 16, scope: !15901)
!15908 = !DILocation(line: 111, column: 41, scope: !15901)
!15909 = !DILocation(line: 110, column: 2, scope: !15901)
!15910 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2665, file: !2665, line: 393, type: !15707, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15911)
!15911 = !{!15912}
!15912 = !DILocalVariable(name: "thread", arg: 1, scope: !15910, file: !2665, line: 393, type: !2560)
!15913 = !DILocation(line: 0, scope: !15910)
!15914 = !DILocation(line: 395, column: 6, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15910, file: !2665, line: 395, column: 6)
!15916 = !DILocation(line: 395, column: 6, scope: !15910)
!15917 = !DILocalVariable(name: "thread", arg: 1, scope: !15918, file: !2665, line: 264, type: !2560)
!15918 = distinct !DISubprogram(name: "dequeue_thread", scope: !2665, file: !2665, line: 264, type: !15707, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15919)
!15919 = !{!15917}
!15920 = !DILocation(line: 0, scope: !15918, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 396, column: 3, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15915, file: !2665, line: 395, column: 34)
!15923 = !DILocation(line: 266, column: 15, scope: !15918, inlinedAt: !15921)
!15924 = !DILocation(line: 266, column: 28, scope: !15918, inlinedAt: !15921)
!15925 = !DILocalVariable(name: "thread", arg: 1, scope: !15926, file: !2665, line: 232, type: !2560)
!15926 = distinct !DISubprogram(name: "runq_remove", scope: !2665, file: !2665, line: 232, type: !15707, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15927)
!15927 = !{!15925}
!15928 = !DILocation(line: 0, scope: !15926, inlinedAt: !15929)
!15929 = distinct !DILocation(line: 268, column: 3, scope: !15930, inlinedAt: !15921)
!15930 = distinct !DILexicalBlock(scope: !15931, file: !2665, line: 267, column: 35)
!15931 = distinct !DILexicalBlock(scope: !15918, file: !2665, line: 267, column: 6)
!15932 = !DILocation(line: 234, column: 2, scope: !15926, inlinedAt: !15929)
!15933 = !DILocation(line: 397, column: 2, scope: !15922)
!15934 = !DILocalVariable(name: "thread", arg: 1, scope: !15935, file: !2665, line: 250, type: !2560)
!15935 = distinct !DISubprogram(name: "queue_thread", scope: !2665, file: !2665, line: 250, type: !15707, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15936)
!15936 = !{!15934}
!15937 = !DILocation(line: 0, scope: !15935, inlinedAt: !15938)
!15938 = distinct !DILocation(line: 398, column: 2, scope: !15910)
!15939 = !DILocation(line: 252, column: 15, scope: !15935, inlinedAt: !15938)
!15940 = !DILocation(line: 252, column: 28, scope: !15935, inlinedAt: !15938)
!15941 = !DILocalVariable(name: "thread", arg: 1, scope: !15942, file: !2665, line: 227, type: !2560)
!15942 = distinct !DISubprogram(name: "runq_add", scope: !2665, file: !2665, line: 227, type: !15707, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15943)
!15943 = !{!15941}
!15944 = !DILocation(line: 0, scope: !15942, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 254, column: 3, scope: !15946, inlinedAt: !15938)
!15946 = distinct !DILexicalBlock(scope: !15947, file: !2665, line: 253, column: 35)
!15947 = distinct !DILexicalBlock(scope: !15935, file: !2665, line: 253, column: 6)
!15948 = !DILocalVariable(name: "pq", arg: 1, scope: !15949, file: !2665, line: 181, type: !15952)
!15949 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2665, file: !2665, line: 181, type: !15950, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15953)
!15950 = !DISubroutineType(types: !15951)
!15951 = !{null, !15952, !2560}
!15952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 32)
!15953 = !{!15948, !15954, !15955}
!15954 = !DILocalVariable(name: "thread", arg: 2, scope: !15949, file: !2665, line: 182, type: !2560)
!15955 = !DILocalVariable(name: "t", scope: !15949, file: !2665, line: 184, type: !2560)
!15956 = !DILocation(line: 0, scope: !15949, inlinedAt: !15957)
!15957 = distinct !DILocation(line: 229, column: 2, scope: !15942, inlinedAt: !15945)
!15958 = !DILocation(line: 188, column: 2, scope: !15959, inlinedAt: !15957)
!15959 = distinct !DILexicalBlock(scope: !15949, file: !2665, line: 188, column: 2)
!15960 = !DILocation(line: 188, column: 2, scope: !15961, inlinedAt: !15957)
!15961 = distinct !DILexicalBlock(scope: !15959, file: !2665, line: 188, column: 2)
!15962 = !DILocation(line: 0, scope: !15959, inlinedAt: !15957)
!15963 = !DILocation(line: 189, column: 7, scope: !15964, inlinedAt: !15957)
!15964 = distinct !DILexicalBlock(scope: !15965, file: !2665, line: 189, column: 7)
!15965 = distinct !DILexicalBlock(scope: !15961, file: !2665, line: 188, column: 56)
!15966 = !DILocation(line: 189, column: 35, scope: !15964, inlinedAt: !15957)
!15967 = !DILocation(line: 189, column: 7, scope: !15965, inlinedAt: !15957)
!15968 = !DILocation(line: 191, column: 21, scope: !15969, inlinedAt: !15957)
!15969 = distinct !DILexicalBlock(scope: !15964, file: !2665, line: 189, column: 40)
!15970 = !DILocation(line: 190, column: 4, scope: !15969, inlinedAt: !15957)
!15971 = !DILocation(line: 192, column: 4, scope: !15969, inlinedAt: !15957)
!15972 = distinct !{!15972, !15958, !15973}
!15973 = !DILocation(line: 194, column: 2, scope: !15959, inlinedAt: !15957)
!15974 = !DILocation(line: 196, column: 37, scope: !15949, inlinedAt: !15957)
!15975 = !DILocation(line: 196, column: 2, scope: !15949, inlinedAt: !15957)
!15976 = !DILocation(line: 197, column: 1, scope: !15949, inlinedAt: !15957)
!15977 = !DILocation(line: 399, column: 25, scope: !15910)
!15978 = !DILocation(line: 399, column: 22, scope: !15910)
!15979 = !DILocation(line: 399, column: 2, scope: !15910)
!15980 = !DILocation(line: 400, column: 1, scope: !15910)
!15981 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !15021, file: !15021, line: 136, type: !15867, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15982)
!15982 = !{!15983}
!15983 = !DILocalVariable(name: "thread", arg: 1, scope: !15981, file: !15021, line: 136, type: !2560)
!15984 = !DILocation(line: 0, scope: !15981)
!15985 = !DILocation(line: 138, column: 9, scope: !15981)
!15986 = !DILocation(line: 138, column: 2, scope: !15981)
!15987 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2665, file: !2665, line: 1137, type: !15950, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15988)
!15988 = !{!15989, !15990}
!15989 = !DILocalVariable(name: "pq", arg: 1, scope: !15987, file: !2665, line: 1137, type: !15952)
!15990 = !DILocalVariable(name: "thread", arg: 2, scope: !15987, file: !2665, line: 1137, type: !2560)
!15991 = !DILocation(line: 0, scope: !15987)
!15992 = !DILocation(line: 1141, column: 33, scope: !15987)
!15993 = !DILocation(line: 1141, column: 2, scope: !15987)
!15994 = !DILocation(line: 1142, column: 1, scope: !15987)
!15995 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !15996, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !15998)
!15996 = !DISubroutineType(types: !15997)
!15997 = !{!2661, !15952}
!15998 = !{!15999}
!15999 = !DILocalVariable(name: "list", arg: 1, scope: !15995, file: !541, line: 294, type: !15952)
!16000 = !DILocation(line: 0, scope: !15995)
!16001 = !DILocation(line: 296, column: 9, scope: !15995)
!16002 = !DILocation(line: 296, column: 49, scope: !15995)
!16003 = !DILocation(line: 296, column: 2, scope: !15995)
!16004 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !16005, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16007)
!16005 = !DISubroutineType(types: !16006)
!16006 = !{null, !2661, !2661}
!16007 = !{!16008, !16009, !16010}
!16008 = !DILocalVariable(name: "successor", arg: 1, scope: !16004, file: !541, line: 443, type: !2661)
!16009 = !DILocalVariable(name: "node", arg: 2, scope: !16004, file: !541, line: 443, type: !2661)
!16010 = !DILocalVariable(name: "prev", scope: !16004, file: !541, line: 445, type: !16011)
!16011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2661)
!16012 = !DILocation(line: 0, scope: !16004)
!16013 = !DILocation(line: 445, column: 39, scope: !16004)
!16014 = !DILocation(line: 447, column: 8, scope: !16004)
!16015 = !DILocation(line: 447, column: 13, scope: !16004)
!16016 = !DILocation(line: 448, column: 8, scope: !16004)
!16017 = !DILocation(line: 448, column: 13, scope: !16004)
!16018 = !DILocation(line: 449, column: 8, scope: !16004)
!16019 = !DILocation(line: 449, column: 13, scope: !16004)
!16020 = !DILocation(line: 450, column: 18, scope: !16004)
!16021 = !DILocation(line: 451, column: 1, scope: !16004)
!16022 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !16023, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16025)
!16023 = !DISubroutineType(types: !16024)
!16024 = !{!2661, !15952, !2661}
!16025 = !{!16026, !16027}
!16026 = !DILocalVariable(name: "list", arg: 1, scope: !16022, file: !541, line: 341, type: !15952)
!16027 = !DILocalVariable(name: "node", arg: 2, scope: !16022, file: !541, line: 342, type: !2661)
!16028 = !DILocation(line: 0, scope: !16022)
!16029 = !DILocation(line: 344, column: 15, scope: !16022)
!16030 = !DILocation(line: 344, column: 9, scope: !16022)
!16031 = !DILocation(line: 344, column: 26, scope: !16022)
!16032 = !DILocation(line: 344, column: 2, scope: !16022)
!16033 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !16034, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16036)
!16034 = !DISubroutineType(types: !16035)
!16035 = !{null, !15952, !2661}
!16036 = !{!16037, !16038, !16039}
!16037 = !DILocalVariable(name: "list", arg: 1, scope: !16033, file: !541, line: 404, type: !15952)
!16038 = !DILocalVariable(name: "node", arg: 2, scope: !16033, file: !541, line: 404, type: !2661)
!16039 = !DILocalVariable(name: "tail", scope: !16033, file: !541, line: 406, type: !16011)
!16040 = !DILocation(line: 0, scope: !16033)
!16041 = !DILocation(line: 406, column: 34, scope: !16033)
!16042 = !DILocation(line: 408, column: 8, scope: !16033)
!16043 = !DILocation(line: 408, column: 13, scope: !16033)
!16044 = !DILocation(line: 409, column: 8, scope: !16033)
!16045 = !DILocation(line: 409, column: 13, scope: !16033)
!16046 = !DILocation(line: 411, column: 8, scope: !16033)
!16047 = !DILocation(line: 411, column: 13, scope: !16033)
!16048 = !DILocation(line: 412, column: 13, scope: !16033)
!16049 = !DILocation(line: 413, column: 1, scope: !16033)
!16050 = distinct !DISubprogram(name: "update_cache", scope: !2665, file: !2665, line: 559, type: !10211, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16051)
!16051 = !{!16052, !16053}
!16052 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16050, file: !2665, line: 559, type: !125)
!16053 = !DILocalVariable(name: "thread", scope: !16050, file: !2665, line: 562, type: !2560)
!16054 = !DILocation(line: 0, scope: !16050)
!16055 = !DILocation(line: 239, column: 9, scope: !16056, inlinedAt: !16059)
!16056 = distinct !DISubprogram(name: "runq_best", scope: !2665, file: !2665, line: 237, type: !16057, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !639)
!16057 = !DISubroutineType(types: !16058)
!16058 = !{!2560}
!16059 = distinct !DILocation(line: 314, column: 28, scope: !16060, inlinedAt: !16063)
!16060 = distinct !DISubprogram(name: "next_up", scope: !2665, file: !2665, line: 312, type: !16057, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16061)
!16061 = !{!16062}
!16062 = !DILocalVariable(name: "thread", scope: !16060, file: !2665, line: 314, type: !2560)
!16063 = distinct !DILocation(line: 562, column: 28, scope: !16050)
!16064 = !DILocation(line: 0, scope: !16060, inlinedAt: !16063)
!16065 = !DILocation(line: 340, column: 17, scope: !16060, inlinedAt: !16063)
!16066 = !DILocation(line: 340, column: 9, scope: !16060, inlinedAt: !16063)
!16067 = !DILocalVariable(name: "thread", arg: 1, scope: !16068, file: !2665, line: 127, type: !2560)
!16068 = distinct !DISubprogram(name: "should_preempt", scope: !2665, file: !2665, line: 127, type: !16069, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16071)
!16069 = !DISubroutineType(types: !16070)
!16070 = !{!153, !2560, !125}
!16071 = !{!16067, !16072}
!16072 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16068, file: !2665, line: 128, type: !125)
!16073 = !DILocation(line: 0, scope: !16068, inlinedAt: !16074)
!16074 = distinct !DILocation(line: 564, column: 6, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16050, file: !2665, line: 564, column: 6)
!16076 = !DILocation(line: 133, column: 17, scope: !16077, inlinedAt: !16074)
!16077 = distinct !DILexicalBlock(scope: !16068, file: !2665, line: 133, column: 6)
!16078 = !DILocation(line: 0, scope: !16075)
!16079 = !DILocation(line: 133, column: 6, scope: !16068, inlinedAt: !16074)
!16080 = !DILocation(line: 140, column: 6, scope: !16081, inlinedAt: !16074)
!16081 = distinct !DILexicalBlock(scope: !16068, file: !2665, line: 140, column: 6)
!16082 = !DILocation(line: 140, column: 6, scope: !16068, inlinedAt: !16074)
!16083 = !DILocation(line: 150, column: 9, scope: !16084, inlinedAt: !16074)
!16084 = distinct !DILexicalBlock(scope: !16068, file: !2665, line: 149, column: 6)
!16085 = !DILocation(line: 149, column: 6, scope: !16068, inlinedAt: !16074)
!16086 = !DILocation(line: 157, column: 6, scope: !16087, inlinedAt: !16074)
!16087 = distinct !DILexicalBlock(scope: !16068, file: !2665, line: 157, column: 6)
!16088 = !DILocation(line: 564, column: 6, scope: !16050)
!16089 = !DILocation(line: 566, column: 14, scope: !16090)
!16090 = distinct !DILexicalBlock(scope: !16091, file: !2665, line: 566, column: 7)
!16091 = distinct !DILexicalBlock(scope: !16075, file: !2665, line: 564, column: 42)
!16092 = !DILocation(line: 566, column: 7, scope: !16091)
!16093 = !DILocation(line: 567, column: 4, scope: !16094)
!16094 = distinct !DILexicalBlock(scope: !16090, file: !2665, line: 566, column: 27)
!16095 = !DILocation(line: 568, column: 3, scope: !16094)
!16096 = !DILocation(line: 585, column: 1, scope: !16050)
!16097 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2665, file: !2665, line: 1144, type: !16098, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16100)
!16098 = !DISubroutineType(types: !16099)
!16099 = !{!2560, !15952}
!16100 = !{!16101, !16102, !16103}
!16101 = !DILocalVariable(name: "pq", arg: 1, scope: !16097, file: !2665, line: 1144, type: !15952)
!16102 = !DILocalVariable(name: "thread", scope: !16097, file: !2665, line: 1146, type: !2560)
!16103 = !DILocalVariable(name: "n", scope: !16097, file: !2665, line: 1147, type: !2661)
!16104 = !DILocation(line: 0, scope: !16097)
!16105 = !DILocation(line: 1147, column: 19, scope: !16097)
!16106 = !DILocation(line: 1152, column: 2, scope: !16097)
!16107 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !15021, file: !15021, line: 115, type: !15867, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16108)
!16108 = !{!16109}
!16109 = !DILocalVariable(name: "thread", arg: 1, scope: !16107, file: !15021, line: 115, type: !2560)
!16110 = !DILocation(line: 0, scope: !16107)
!16111 = !DILocation(line: 117, column: 46, scope: !16107)
!16112 = !DILocation(line: 117, column: 10, scope: !16107)
!16113 = !DILocation(line: 117, column: 9, scope: !16107)
!16114 = !DILocation(line: 117, column: 2, scope: !16107)
!16115 = distinct !DISubprogram(name: "is_preempt", scope: !2665, file: !2665, line: 62, type: !15725, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16116)
!16116 = !{!16117}
!16117 = !DILocalVariable(name: "thread", arg: 1, scope: !16115, file: !2665, line: 62, type: !2560)
!16118 = !DILocation(line: 0, scope: !16115)
!16119 = !DILocation(line: 65, column: 22, scope: !16115)
!16120 = !DILocation(line: 65, column: 30, scope: !16115)
!16121 = !DILocation(line: 65, column: 2, scope: !16115)
!16122 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15415, file: !15415, line: 35, type: !16123, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16127)
!16123 = !DISubroutineType(types: !16124)
!16124 = !{!153, !16125}
!16125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16126, size: 32)
!16126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2611)
!16127 = !{!16128}
!16128 = !DILocalVariable(name: "to", arg: 1, scope: !16122, file: !15415, line: 35, type: !16125)
!16129 = !DILocation(line: 0, scope: !16122)
!16130 = !DILocation(line: 37, column: 35, scope: !16122)
!16131 = !DILocation(line: 37, column: 10, scope: !16122)
!16132 = !DILocation(line: 37, column: 9, scope: !16122)
!16133 = !DILocation(line: 37, column: 2, scope: !16122)
!16134 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !16135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16139)
!16135 = !DISubroutineType(types: !16136)
!16136 = !{!153, !16137}
!16137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16138, size: 32)
!16138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2570)
!16139 = !{!16140}
!16140 = !DILocalVariable(name: "node", arg: 1, scope: !16134, file: !541, line: 225, type: !16137)
!16141 = !DILocation(line: 0, scope: !16134)
!16142 = !DILocation(line: 227, column: 15, scope: !16134)
!16143 = !DILocation(line: 227, column: 20, scope: !16134)
!16144 = !DILocation(line: 227, column: 2, scope: !16134)
!16145 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !16023, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16146)
!16146 = !{!16147, !16148}
!16147 = !DILocalVariable(name: "list", arg: 1, scope: !16145, file: !541, line: 325, type: !15952)
!16148 = !DILocalVariable(name: "node", arg: 2, scope: !16145, file: !541, line: 326, type: !2661)
!16149 = !DILocation(line: 0, scope: !16145)
!16150 = !DILocation(line: 328, column: 24, scope: !16145)
!16151 = !DILocation(line: 328, column: 15, scope: !16145)
!16152 = !DILocation(line: 328, column: 9, scope: !16145)
!16153 = !DILocation(line: 328, column: 45, scope: !16145)
!16154 = !DILocation(line: 328, column: 2, scope: !16145)
!16155 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !16156, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16158)
!16156 = !DISubroutineType(types: !16157)
!16157 = !{!153, !15952}
!16158 = !{!16159}
!16159 = !DILocalVariable(name: "list", arg: 1, scope: !16155, file: !541, line: 266, type: !15952)
!16160 = !DILocation(line: 0, scope: !16155)
!16161 = !DILocation(line: 268, column: 15, scope: !16155)
!16162 = !DILocation(line: 268, column: 20, scope: !16155)
!16163 = !DILocation(line: 268, column: 2, scope: !16155)
!16164 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !16165, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16167)
!16165 = !DISubroutineType(types: !16166)
!16166 = !{null, !2661}
!16167 = !{!16168, !16169, !16170}
!16168 = !DILocalVariable(name: "node", arg: 1, scope: !16164, file: !541, line: 496, type: !2661)
!16169 = !DILocalVariable(name: "prev", scope: !16164, file: !541, line: 498, type: !16011)
!16170 = !DILocalVariable(name: "next", scope: !16164, file: !541, line: 499, type: !16011)
!16171 = !DILocation(line: 0, scope: !16164)
!16172 = !DILocation(line: 498, column: 34, scope: !16164)
!16173 = !DILocation(line: 499, column: 34, scope: !16164)
!16174 = !DILocation(line: 501, column: 8, scope: !16164)
!16175 = !DILocation(line: 501, column: 13, scope: !16164)
!16176 = !DILocation(line: 502, column: 8, scope: !16164)
!16177 = !DILocation(line: 502, column: 13, scope: !16164)
!16178 = !DILocation(line: 503, column: 2, scope: !16164)
!16179 = !DILocation(line: 504, column: 1, scope: !16164)
!16180 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !16165, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16181)
!16181 = !{!16182}
!16182 = !DILocalVariable(name: "node", arg: 1, scope: !16180, file: !541, line: 211, type: !2661)
!16183 = !DILocation(line: 0, scope: !16180)
!16184 = !DILocation(line: 213, column: 8, scope: !16180)
!16185 = !DILocation(line: 213, column: 13, scope: !16180)
!16186 = !DILocation(line: 214, column: 8, scope: !16180)
!16187 = !DILocation(line: 214, column: 13, scope: !16180)
!16188 = !DILocation(line: 215, column: 1, scope: !16180)
!16189 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !15021, file: !15021, line: 131, type: !16190, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16192)
!16190 = !DISubroutineType(types: !16191)
!16191 = !{!153, !2560, !208}
!16192 = !{!16193, !16194}
!16193 = !DILocalVariable(name: "thread", arg: 1, scope: !16189, file: !15021, line: 131, type: !2560)
!16194 = !DILocalVariable(name: "state", arg: 2, scope: !16189, file: !15021, line: 131, type: !208)
!16195 = !DILocation(line: 0, scope: !16189)
!16196 = !DILocation(line: 133, column: 23, scope: !16189)
!16197 = !DILocation(line: 133, column: 45, scope: !16189)
!16198 = !DILocation(line: 133, column: 2, scope: !16189)
!16199 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15021, file: !15021, line: 211, type: !16200, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16202)
!16200 = !DISubroutineType(types: !16201)
!16201 = !{!153, !125, !125}
!16202 = !{!16203, !16204}
!16203 = !DILocalVariable(name: "prio", arg: 1, scope: !16199, file: !15021, line: 211, type: !125)
!16204 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16199, file: !15021, line: 211, type: !125)
!16205 = !DILocation(line: 0, scope: !16199)
!16206 = !DILocation(line: 213, column: 9, scope: !16199)
!16207 = !DILocation(line: 213, column: 2, scope: !16199)
!16208 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !15021, file: !15021, line: 83, type: !15867, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16209)
!16209 = !{!16210}
!16210 = !DILocalVariable(name: "thread", arg: 1, scope: !16208, file: !15021, line: 83, type: !2560)
!16211 = !DILocation(line: 0, scope: !16208)
!16212 = !DILocation(line: 89, column: 16, scope: !16208)
!16213 = !DILocation(line: 89, column: 2, scope: !16208)
!16214 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15021, file: !15021, line: 206, type: !16200, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16215)
!16215 = !{!16216, !16217}
!16216 = !DILocalVariable(name: "prio1", arg: 1, scope: !16214, file: !15021, line: 206, type: !125)
!16217 = !DILocalVariable(name: "prio2", arg: 2, scope: !16214, file: !15021, line: 206, type: !125)
!16218 = !DILocation(line: 0, scope: !16214)
!16219 = !DILocation(line: 208, column: 15, scope: !16214)
!16220 = !DILocation(line: 208, column: 2, scope: !16214)
!16221 = distinct !DISubprogram(name: "z_ready_thread", scope: !2665, file: !2665, line: 635, type: !15707, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16222)
!16222 = !{!16223, !16224, !16226}
!16223 = !DILocalVariable(name: "thread", arg: 1, scope: !16221, file: !2665, line: 635, type: !2560)
!16224 = !DILocalVariable(name: "__i", scope: !16225, file: !2665, line: 637, type: !15741)
!16225 = distinct !DILexicalBlock(scope: !16221, file: !2665, line: 637, column: 2)
!16226 = !DILocalVariable(name: "__key", scope: !16225, file: !2665, line: 637, type: !15741)
!16227 = !DILocation(line: 0, scope: !16221)
!16228 = !DILocation(line: 0, scope: !16225)
!16229 = !DILocation(line: 0, scope: !15749, inlinedAt: !16230)
!16230 = distinct !DILocation(line: 637, column: 2, scope: !16225)
!16231 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16232)
!16232 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16230)
!16233 = !DILocation(line: 0, scope: !15758, inlinedAt: !16232)
!16234 = !DILocation(line: 639, column: 4, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16236, file: !2665, line: 638, column: 41)
!16236 = distinct !DILexicalBlock(scope: !16237, file: !2665, line: 638, column: 7)
!16237 = distinct !DILexicalBlock(scope: !16238, file: !2665, line: 637, column: 26)
!16238 = distinct !DILexicalBlock(scope: !16225, file: !2665, line: 637, column: 2)
!16239 = !DILocation(line: 0, scope: !15776, inlinedAt: !16240)
!16240 = distinct !DILocation(line: 637, column: 2, scope: !16238)
!16241 = !DILocation(line: 0, scope: !15784, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16240)
!16243 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16242)
!16244 = !DILocation(line: 642, column: 1, scope: !16221)
!16245 = distinct !DISubprogram(name: "ready_thread", scope: !2665, file: !2665, line: 617, type: !15707, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16246)
!16246 = !{!16247}
!16247 = !DILocalVariable(name: "thread", arg: 1, scope: !16245, file: !2665, line: 617, type: !2560)
!16248 = !DILocation(line: 0, scope: !16245)
!16249 = !DILocation(line: 626, column: 7, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16245, file: !2665, line: 626, column: 6)
!16251 = !DILocation(line: 626, column: 34, scope: !16250)
!16252 = !DILocation(line: 626, column: 37, scope: !16250)
!16253 = !DILocation(line: 626, column: 6, scope: !16245)
!16254 = !DILocation(line: 0, scope: !15935, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 629, column: 3, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16250, file: !2665, line: 626, column: 64)
!16257 = !DILocation(line: 252, column: 15, scope: !15935, inlinedAt: !16255)
!16258 = !DILocation(line: 252, column: 28, scope: !15935, inlinedAt: !16255)
!16259 = !DILocation(line: 0, scope: !15942, inlinedAt: !16260)
!16260 = distinct !DILocation(line: 254, column: 3, scope: !15946, inlinedAt: !16255)
!16261 = !DILocation(line: 0, scope: !15949, inlinedAt: !16262)
!16262 = distinct !DILocation(line: 229, column: 2, scope: !15942, inlinedAt: !16260)
!16263 = !DILocation(line: 188, column: 2, scope: !15959, inlinedAt: !16262)
!16264 = !DILocation(line: 188, column: 2, scope: !15961, inlinedAt: !16262)
!16265 = !DILocation(line: 0, scope: !15959, inlinedAt: !16262)
!16266 = !DILocation(line: 189, column: 7, scope: !15964, inlinedAt: !16262)
!16267 = !DILocation(line: 189, column: 35, scope: !15964, inlinedAt: !16262)
!16268 = !DILocation(line: 189, column: 7, scope: !15965, inlinedAt: !16262)
!16269 = !DILocation(line: 191, column: 21, scope: !15969, inlinedAt: !16262)
!16270 = !DILocation(line: 190, column: 4, scope: !15969, inlinedAt: !16262)
!16271 = !DILocation(line: 192, column: 4, scope: !15969, inlinedAt: !16262)
!16272 = distinct !{!16272, !16263, !16273}
!16273 = !DILocation(line: 194, column: 2, scope: !15959, inlinedAt: !16262)
!16274 = !DILocation(line: 196, column: 37, scope: !15949, inlinedAt: !16262)
!16275 = !DILocation(line: 196, column: 2, scope: !15949, inlinedAt: !16262)
!16276 = !DILocation(line: 197, column: 1, scope: !15949, inlinedAt: !16262)
!16277 = !DILocation(line: 630, column: 3, scope: !16256)
!16278 = !DILocation(line: 632, column: 2, scope: !16256)
!16279 = !DILocation(line: 633, column: 1, scope: !16245)
!16280 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !15021, file: !15021, line: 120, type: !15867, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16281)
!16281 = !{!16282}
!16282 = !DILocalVariable(name: "thread", arg: 1, scope: !16280, file: !15021, line: 120, type: !2560)
!16283 = !DILocation(line: 0, scope: !16280)
!16284 = !DILocation(line: 122, column: 12, scope: !16280)
!16285 = !DILocation(line: 122, column: 62, scope: !16280)
!16286 = !DILocation(line: 123, column: 4, scope: !16280)
!16287 = !DILocation(line: 122, column: 2, scope: !16280)
!16288 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2665, file: !2665, line: 644, type: !15707, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16289)
!16289 = !{!16290, !16291, !16293}
!16290 = !DILocalVariable(name: "thread", arg: 1, scope: !16288, file: !2665, line: 644, type: !2560)
!16291 = !DILocalVariable(name: "__i", scope: !16292, file: !2665, line: 646, type: !15741)
!16292 = distinct !DILexicalBlock(scope: !16288, file: !2665, line: 646, column: 2)
!16293 = !DILocalVariable(name: "__key", scope: !16292, file: !2665, line: 646, type: !15741)
!16294 = !DILocation(line: 0, scope: !16288)
!16295 = !DILocation(line: 0, scope: !16292)
!16296 = !DILocation(line: 0, scope: !15749, inlinedAt: !16297)
!16297 = distinct !DILocation(line: 646, column: 2, scope: !16292)
!16298 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16299)
!16299 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16297)
!16300 = !DILocation(line: 0, scope: !15758, inlinedAt: !16299)
!16301 = !DILocation(line: 647, column: 3, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16303, file: !2665, line: 646, column: 26)
!16303 = distinct !DILexicalBlock(scope: !16292, file: !2665, line: 646, column: 2)
!16304 = !DILocation(line: 0, scope: !15776, inlinedAt: !16305)
!16305 = distinct !DILocation(line: 646, column: 2, scope: !16303)
!16306 = !DILocation(line: 0, scope: !15784, inlinedAt: !16307)
!16307 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16305)
!16308 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16307)
!16309 = !DILocation(line: 649, column: 1, scope: !16288)
!16310 = distinct !DISubprogram(name: "z_sched_start", scope: !2665, file: !2665, line: 651, type: !15707, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16311)
!16311 = !{!16312, !16313}
!16312 = !DILocalVariable(name: "thread", arg: 1, scope: !16310, file: !2665, line: 651, type: !2560)
!16313 = !DILocalVariable(name: "key", scope: !16310, file: !2665, line: 653, type: !15741)
!16314 = !DILocation(line: 0, scope: !16310)
!16315 = !DILocation(line: 0, scope: !15749, inlinedAt: !16316)
!16316 = distinct !DILocation(line: 653, column: 25, scope: !16310)
!16317 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16318)
!16318 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16316)
!16319 = !DILocation(line: 0, scope: !15758, inlinedAt: !16318)
!16320 = !DILocation(line: 655, column: 6, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16310, file: !2665, line: 655, column: 6)
!16322 = !DILocation(line: 655, column: 6, scope: !16310)
!16323 = !DILocation(line: 0, scope: !15776, inlinedAt: !16324)
!16324 = distinct !DILocation(line: 656, column: 3, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16321, file: !2665, line: 655, column: 36)
!16326 = !DILocation(line: 0, scope: !15784, inlinedAt: !16327)
!16327 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16324)
!16328 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16327)
!16329 = !DILocation(line: 657, column: 3, scope: !16325)
!16330 = !DILocation(line: 660, column: 2, scope: !16310)
!16331 = !DILocation(line: 661, column: 2, scope: !16310)
!16332 = !DILocation(line: 662, column: 2, scope: !16310)
!16333 = !DILocation(line: 663, column: 1, scope: !16310)
!16334 = distinct !DISubprogram(name: "z_has_thread_started", scope: !15021, file: !15021, line: 126, type: !15867, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16335)
!16335 = !{!16336}
!16336 = !DILocalVariable(name: "thread", arg: 1, scope: !16334, file: !15021, line: 126, type: !2560)
!16337 = !DILocation(line: 0, scope: !16334)
!16338 = !DILocation(line: 128, column: 23, scope: !16334)
!16339 = !DILocation(line: 128, column: 36, scope: !16334)
!16340 = !DILocation(line: 128, column: 56, scope: !16334)
!16341 = !DILocation(line: 128, column: 2, scope: !16334)
!16342 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15021, file: !15021, line: 155, type: !15707, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16343)
!16343 = !{!16344}
!16344 = !DILocalVariable(name: "thread", arg: 1, scope: !16342, file: !15021, line: 155, type: !2560)
!16345 = !DILocation(line: 0, scope: !16342)
!16346 = !DILocation(line: 157, column: 15, scope: !16342)
!16347 = !DILocation(line: 157, column: 28, scope: !16342)
!16348 = !DILocation(line: 158, column: 1, scope: !16342)
!16349 = distinct !DISubprogram(name: "z_reschedule", scope: !2665, file: !2665, line: 967, type: !15777, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16350)
!16350 = !{!16351, !16352}
!16351 = !DILocalVariable(name: "lock", arg: 1, scope: !16349, file: !2665, line: 967, type: !15752)
!16352 = !DILocalVariable(name: "key", arg: 2, scope: !16349, file: !2665, line: 967, type: !15741)
!16353 = !DILocation(line: 0, scope: !16349)
!16354 = !DILocation(line: 969, column: 6, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16349, file: !2665, line: 969, column: 6)
!16356 = !DILocation(line: 969, column: 23, scope: !16355)
!16357 = !DILocation(line: 969, column: 26, scope: !16355)
!16358 = !DILocation(line: 969, column: 6, scope: !16349)
!16359 = !DILocalVariable(name: "key", arg: 2, scope: !16360, file: !15125, line: 193, type: !15741)
!16360 = distinct !DISubprogram(name: "z_swap", scope: !15125, file: !15125, line: 193, type: !16361, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16363)
!16361 = !DISubroutineType(types: !16362)
!16362 = !{!125, !15752, !15741}
!16363 = !{!16364, !16359}
!16364 = !DILocalVariable(name: "lock", arg: 1, scope: !16360, file: !15125, line: 193, type: !15752)
!16365 = !DILocation(line: 0, scope: !16360, inlinedAt: !16366)
!16366 = distinct !DILocation(line: 970, column: 3, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16355, file: !2665, line: 969, column: 39)
!16368 = !DILocation(line: 196, column: 9, scope: !16360, inlinedAt: !16366)
!16369 = !DILocation(line: 971, column: 2, scope: !16367)
!16370 = !DILocation(line: 0, scope: !15776, inlinedAt: !16371)
!16371 = distinct !DILocation(line: 972, column: 3, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16355, file: !2665, line: 971, column: 9)
!16373 = !DILocation(line: 0, scope: !15784, inlinedAt: !16374)
!16374 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16371)
!16375 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16374)
!16376 = !DILocation(line: 975, column: 1, scope: !16349)
!16377 = distinct !DISubprogram(name: "resched", scope: !2665, file: !2665, line: 940, type: !16378, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16380)
!16378 = !DISubroutineType(types: !16379)
!16379 = !{!153, !208}
!16380 = !{!16381}
!16381 = !DILocalVariable(name: "key", arg: 1, scope: !16377, file: !2665, line: 940, type: !208)
!16382 = !DILocation(line: 0, scope: !16377)
!16383 = !DILocalVariable(name: "key", arg: 1, scope: !16384, file: !6862, line: 112, type: !32)
!16384 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6862, file: !6862, line: 112, type: !16385, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16387)
!16385 = !DISubroutineType(types: !16386)
!16386 = !{!153, !32}
!16387 = !{!16383}
!16388 = !DILocation(line: 0, scope: !16384, inlinedAt: !16389)
!16389 = distinct !DILocation(line: 946, column: 9, scope: !16377)
!16390 = !DILocation(line: 115, column: 13, scope: !16384, inlinedAt: !16389)
!16391 = !DILocation(line: 946, column: 32, scope: !16377)
!16392 = !DILocation(line: 1031, column: 3, scope: !16393, inlinedAt: !16396)
!16393 = distinct !DISubprogram(name: "__get_IPSR", scope: !8329, file: !8329, line: 1027, type: !8410, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16394)
!16394 = !{!16395}
!16395 = !DILocalVariable(name: "result", scope: !16393, file: !8329, line: 1029, type: !208)
!16396 = distinct !DILocation(line: 48, column: 10, scope: !16397, inlinedAt: !16398)
!16397 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9347, file: !9347, line: 46, type: !9348, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !639)
!16398 = distinct !DILocation(line: 946, column: 36, scope: !16377)
!16399 = !{i64 2957351}
!16400 = !DILocation(line: 0, scope: !16393, inlinedAt: !16396)
!16401 = !DILocation(line: 48, column: 9, scope: !16397, inlinedAt: !16398)
!16402 = !DILocation(line: 946, column: 2, scope: !16377)
!16403 = distinct !DISubprogram(name: "need_swap", scope: !2665, file: !2665, line: 953, type: !9348, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16404)
!16404 = !{!16405}
!16405 = !DILocalVariable(name: "new_thread", scope: !16403, file: !2665, line: 959, type: !2560)
!16406 = !DILocation(line: 962, column: 31, scope: !16403)
!16407 = !DILocation(line: 0, scope: !16403)
!16408 = !DILocation(line: 963, column: 23, scope: !16403)
!16409 = !DILocation(line: 963, column: 20, scope: !16403)
!16410 = !DILocation(line: 963, column: 2, scope: !16403)
!16411 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !15125, file: !15125, line: 181, type: !8339, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16412)
!16412 = !{!16413, !16414}
!16413 = !DILocalVariable(name: "key", arg: 1, scope: !16411, file: !15125, line: 181, type: !32)
!16414 = !DILocalVariable(name: "ret", scope: !16411, file: !15125, line: 183, type: !125)
!16415 = !DILocation(line: 0, scope: !16411)
!16416 = !DILocation(line: 185, column: 8, scope: !16411)
!16417 = !DILocation(line: 186, column: 2, scope: !16411)
!16418 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2665, file: !2665, line: 665, type: !15707, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16419)
!16419 = !{!16420, !16421, !16423}
!16420 = !DILocalVariable(name: "thread", arg: 1, scope: !16418, file: !2665, line: 665, type: !2560)
!16421 = !DILocalVariable(name: "__i", scope: !16422, file: !2665, line: 671, type: !15741)
!16422 = distinct !DILexicalBlock(scope: !16418, file: !2665, line: 671, column: 2)
!16423 = !DILocalVariable(name: "__key", scope: !16422, file: !2665, line: 671, type: !15741)
!16424 = !DILocation(line: 0, scope: !16418)
!16425 = !DILocation(line: 669, column: 8, scope: !16418)
!16426 = !DILocation(line: 0, scope: !16422)
!16427 = !DILocation(line: 0, scope: !15749, inlinedAt: !16428)
!16428 = distinct !DILocation(line: 671, column: 2, scope: !16422)
!16429 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16430)
!16430 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16428)
!16431 = !DILocation(line: 0, scope: !15758, inlinedAt: !16430)
!16432 = !DILocation(line: 672, column: 7, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16434, file: !2665, line: 672, column: 7)
!16434 = distinct !DILexicalBlock(scope: !16435, file: !2665, line: 671, column: 26)
!16435 = distinct !DILexicalBlock(scope: !16422, file: !2665, line: 671, column: 2)
!16436 = !DILocation(line: 672, column: 7, scope: !16434)
!16437 = !DILocation(line: 0, scope: !15918, inlinedAt: !16438)
!16438 = distinct !DILocation(line: 673, column: 4, scope: !16439)
!16439 = distinct !DILexicalBlock(scope: !16433, file: !2665, line: 672, column: 35)
!16440 = !DILocation(line: 266, column: 15, scope: !15918, inlinedAt: !16438)
!16441 = !DILocation(line: 266, column: 28, scope: !15918, inlinedAt: !16438)
!16442 = !DILocation(line: 0, scope: !15926, inlinedAt: !16443)
!16443 = distinct !DILocation(line: 268, column: 3, scope: !15930, inlinedAt: !16438)
!16444 = !DILocation(line: 234, column: 2, scope: !15926, inlinedAt: !16443)
!16445 = !DILocation(line: 674, column: 3, scope: !16439)
!16446 = !DILocation(line: 675, column: 3, scope: !16434)
!16447 = !DILocation(line: 676, column: 26, scope: !16434)
!16448 = !DILocation(line: 676, column: 23, scope: !16434)
!16449 = !DILocation(line: 676, column: 3, scope: !16434)
!16450 = !DILocation(line: 0, scope: !15776, inlinedAt: !16451)
!16451 = distinct !DILocation(line: 671, column: 2, scope: !16435)
!16452 = !DILocation(line: 0, scope: !15784, inlinedAt: !16453)
!16453 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16451)
!16454 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16453)
!16455 = !DILocation(line: 679, column: 16, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16418, file: !2665, line: 679, column: 6)
!16457 = !DILocation(line: 679, column: 13, scope: !16456)
!16458 = !DILocation(line: 679, column: 6, scope: !16418)
!16459 = !DILocation(line: 680, column: 3, scope: !16460)
!16460 = distinct !DILexicalBlock(scope: !16456, file: !2665, line: 679, column: 26)
!16461 = !DILocation(line: 681, column: 2, scope: !16460)
!16462 = !DILocation(line: 684, column: 1, scope: !16418)
!16463 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15415, file: !15415, line: 52, type: !15725, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16464)
!16464 = !{!16465}
!16465 = !DILocalVariable(name: "thread", arg: 1, scope: !16463, file: !15415, line: 52, type: !2560)
!16466 = !DILocation(line: 0, scope: !16463)
!16467 = !DILocation(line: 54, column: 39, scope: !16463)
!16468 = !DILocation(line: 54, column: 9, scope: !16463)
!16469 = !DILocation(line: 54, column: 2, scope: !16463)
!16470 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !15021, file: !15021, line: 141, type: !15707, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16471)
!16471 = !{!16472}
!16472 = !DILocalVariable(name: "thread", arg: 1, scope: !16470, file: !15021, line: 141, type: !2560)
!16473 = !DILocation(line: 0, scope: !16470)
!16474 = !DILocation(line: 143, column: 15, scope: !16470)
!16475 = !DILocation(line: 143, column: 28, scope: !16470)
!16476 = !DILocation(line: 146, column: 1, scope: !16470)
!16477 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !15021, file: !15021, line: 73, type: !3326, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !639)
!16478 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16479)
!16479 = distinct !DILocation(line: 75, column: 30, scope: !16477)
!16480 = !DILocation(line: 0, scope: !15758, inlinedAt: !16479)
!16481 = !DILocation(line: 75, column: 9, scope: !16477)
!16482 = !DILocation(line: 76, column: 1, scope: !16477)
!16483 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2665, file: !2665, line: 977, type: !8420, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16484)
!16484 = !{!16485}
!16485 = !DILocalVariable(name: "key", arg: 1, scope: !16483, file: !2665, line: 977, type: !208)
!16486 = !DILocation(line: 0, scope: !16483)
!16487 = !DILocation(line: 979, column: 6, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16483, file: !2665, line: 979, column: 6)
!16489 = !DILocation(line: 979, column: 6, scope: !16483)
!16490 = !DILocation(line: 980, column: 3, scope: !16491)
!16491 = distinct !DILexicalBlock(scope: !16488, file: !2665, line: 979, column: 20)
!16492 = !DILocation(line: 981, column: 2, scope: !16491)
!16493 = !DILocation(line: 0, scope: !15784, inlinedAt: !16494)
!16494 = distinct !DILocation(line: 982, column: 3, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16488, file: !2665, line: 981, column: 9)
!16496 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16494)
!16497 = !DILocation(line: 985, column: 1, scope: !16483)
!16498 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2665, file: !2665, line: 695, type: !15707, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16499)
!16499 = !{!16500, !16501}
!16500 = !DILocalVariable(name: "thread", arg: 1, scope: !16498, file: !2665, line: 695, type: !2560)
!16501 = !DILocalVariable(name: "key", scope: !16498, file: !2665, line: 699, type: !15741)
!16502 = !DILocation(line: 0, scope: !16498)
!16503 = !DILocation(line: 0, scope: !15749, inlinedAt: !16504)
!16504 = distinct !DILocation(line: 699, column: 25, scope: !16498)
!16505 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16506)
!16506 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16504)
!16507 = !DILocation(line: 0, scope: !15758, inlinedAt: !16506)
!16508 = !DILocation(line: 702, column: 7, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16498, file: !2665, line: 702, column: 6)
!16510 = !DILocation(line: 702, column: 6, scope: !16498)
!16511 = !DILocation(line: 0, scope: !15776, inlinedAt: !16512)
!16512 = distinct !DILocation(line: 703, column: 3, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16509, file: !2665, line: 702, column: 38)
!16514 = !DILocation(line: 0, scope: !15784, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16512)
!16516 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16515)
!16517 = !DILocation(line: 704, column: 3, scope: !16513)
!16518 = !DILocation(line: 707, column: 2, scope: !16498)
!16519 = !DILocation(line: 708, column: 2, scope: !16498)
!16520 = !DILocation(line: 710, column: 2, scope: !16498)
!16521 = !DILocation(line: 713, column: 1, scope: !16498)
!16522 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !15021, file: !15021, line: 96, type: !15867, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16523)
!16523 = !{!16524}
!16524 = !DILocalVariable(name: "thread", arg: 1, scope: !16522, file: !15021, line: 96, type: !2560)
!16525 = !DILocation(line: 0, scope: !16522)
!16526 = !DILocation(line: 98, column: 23, scope: !16522)
!16527 = !DILocation(line: 98, column: 36, scope: !16522)
!16528 = !DILocation(line: 98, column: 57, scope: !16522)
!16529 = !DILocation(line: 98, column: 2, scope: !16522)
!16530 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !15021, file: !15021, line: 148, type: !15707, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16531)
!16531 = !{!16532}
!16532 = !DILocalVariable(name: "thread", arg: 1, scope: !16530, file: !15021, line: 148, type: !2560)
!16533 = !DILocation(line: 0, scope: !16530)
!16534 = !DILocation(line: 150, column: 15, scope: !16530)
!16535 = !DILocation(line: 150, column: 28, scope: !16530)
!16536 = !DILocation(line: 153, column: 1, scope: !16530)
!16537 = distinct !DISubprogram(name: "z_pend_thread", scope: !2665, file: !2665, line: 770, type: !16538, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16544)
!16538 = !DISubroutineType(types: !16539)
!16539 = !{null, !2560, !2591, !16540}
!16540 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1915, line: 67, baseType: !16541)
!16541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1915, line: 65, size: 64, elements: !16542)
!16542 = !{!16543}
!16543 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16541, file: !1915, line: 66, baseType: !1914, size: 64)
!16544 = !{!16545, !16546, !16547, !16548, !16550}
!16545 = !DILocalVariable(name: "thread", arg: 1, scope: !16537, file: !2665, line: 770, type: !2560)
!16546 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16537, file: !2665, line: 770, type: !2591)
!16547 = !DILocalVariable(name: "timeout", arg: 3, scope: !16537, file: !2665, line: 771, type: !16540)
!16548 = !DILocalVariable(name: "__i", scope: !16549, file: !2665, line: 774, type: !15741)
!16549 = distinct !DILexicalBlock(scope: !16537, file: !2665, line: 774, column: 2)
!16550 = !DILocalVariable(name: "__key", scope: !16549, file: !2665, line: 774, type: !15741)
!16551 = !DILocation(line: 0, scope: !16537)
!16552 = !DILocation(line: 0, scope: !16549)
!16553 = !DILocation(line: 0, scope: !15749, inlinedAt: !16554)
!16554 = distinct !DILocation(line: 774, column: 2, scope: !16549)
!16555 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16554)
!16557 = !DILocation(line: 0, scope: !15758, inlinedAt: !16556)
!16558 = !DILocation(line: 775, column: 3, scope: !16559)
!16559 = distinct !DILexicalBlock(scope: !16560, file: !2665, line: 774, column: 26)
!16560 = distinct !DILexicalBlock(scope: !16549, file: !2665, line: 774, column: 2)
!16561 = !DILocation(line: 0, scope: !15776, inlinedAt: !16562)
!16562 = distinct !DILocation(line: 774, column: 2, scope: !16560)
!16563 = !DILocation(line: 0, scope: !15784, inlinedAt: !16564)
!16564 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16562)
!16565 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16564)
!16566 = !DILocation(line: 777, column: 1, scope: !16537)
!16567 = distinct !DISubprogram(name: "pend_locked", scope: !2665, file: !2665, line: 760, type: !16538, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16568)
!16568 = !{!16569, !16570, !16571}
!16569 = !DILocalVariable(name: "thread", arg: 1, scope: !16567, file: !2665, line: 760, type: !2560)
!16570 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16567, file: !2665, line: 760, type: !2591)
!16571 = !DILocalVariable(name: "timeout", arg: 3, scope: !16567, file: !2665, line: 761, type: !16540)
!16572 = !DILocation(line: 0, scope: !16567)
!16573 = !DILocation(line: 766, column: 2, scope: !16567)
!16574 = !DILocation(line: 767, column: 2, scope: !16567)
!16575 = !DILocation(line: 768, column: 1, scope: !16567)
!16576 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2665, file: !2665, line: 740, type: !16577, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16579)
!16577 = !DISubroutineType(types: !16578)
!16578 = !{null, !2560, !2591}
!16579 = !{!16580, !16581}
!16580 = !DILocalVariable(name: "thread", arg: 1, scope: !16576, file: !2665, line: 740, type: !2560)
!16581 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16576, file: !2665, line: 740, type: !2591)
!16582 = !DILocation(line: 0, scope: !16576)
!16583 = !DILocation(line: 742, column: 2, scope: !16576)
!16584 = !DILocation(line: 743, column: 2, scope: !16576)
!16585 = !DILocation(line: 747, column: 13, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16576, file: !2665, line: 747, column: 6)
!16587 = !DILocation(line: 747, column: 6, scope: !16576)
!16588 = !DILocation(line: 748, column: 16, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16586, file: !2665, line: 747, column: 22)
!16590 = !DILocation(line: 748, column: 26, scope: !16589)
!16591 = !DILocation(line: 749, column: 28, scope: !16589)
!16592 = !DILocation(line: 0, scope: !15949, inlinedAt: !16593)
!16593 = distinct !DILocation(line: 749, column: 3, scope: !16589)
!16594 = !DILocation(line: 188, column: 2, scope: !15959, inlinedAt: !16593)
!16595 = !DILocation(line: 188, column: 2, scope: !15961, inlinedAt: !16593)
!16596 = !DILocation(line: 0, scope: !15959, inlinedAt: !16593)
!16597 = !DILocation(line: 189, column: 7, scope: !15964, inlinedAt: !16593)
!16598 = !DILocation(line: 189, column: 35, scope: !15964, inlinedAt: !16593)
!16599 = !DILocation(line: 189, column: 7, scope: !15965, inlinedAt: !16593)
!16600 = !DILocation(line: 191, column: 21, scope: !15969, inlinedAt: !16593)
!16601 = !DILocation(line: 190, column: 4, scope: !15969, inlinedAt: !16593)
!16602 = !DILocation(line: 192, column: 4, scope: !15969, inlinedAt: !16593)
!16603 = distinct !{!16603, !16594, !16604}
!16604 = !DILocation(line: 194, column: 2, scope: !15959, inlinedAt: !16593)
!16605 = !DILocation(line: 196, column: 37, scope: !15949, inlinedAt: !16593)
!16606 = !DILocation(line: 196, column: 2, scope: !15949, inlinedAt: !16593)
!16607 = !DILocation(line: 197, column: 1, scope: !15949, inlinedAt: !16593)
!16608 = !DILocation(line: 751, column: 1, scope: !16576)
!16609 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2665, file: !2665, line: 753, type: !16610, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16612)
!16610 = !DISubroutineType(types: !16611)
!16611 = !{null, !2560, !16540}
!16612 = !{!16613, !16614}
!16613 = !DILocalVariable(name: "thread", arg: 1, scope: !16609, file: !2665, line: 753, type: !2560)
!16614 = !DILocalVariable(name: "timeout", arg: 2, scope: !16609, file: !2665, line: 753, type: !16540)
!16615 = !DILocation(line: 0, scope: !16609)
!16616 = !DILocation(line: 755, column: 7, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16609, file: !2665, line: 755, column: 6)
!16618 = !DILocation(line: 755, column: 6, scope: !16609)
!16619 = !DILocation(line: 756, column: 3, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16617, file: !2665, line: 755, column: 41)
!16621 = !DILocation(line: 757, column: 2, scope: !16620)
!16622 = !DILocation(line: 758, column: 1, scope: !16609)
!16623 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15415, file: !15415, line: 47, type: !16610, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16624)
!16624 = !{!16625, !16626}
!16625 = !DILocalVariable(name: "thread", arg: 1, scope: !16623, file: !15415, line: 47, type: !2560)
!16626 = !DILocalVariable(name: "ticks", arg: 2, scope: !16623, file: !15415, line: 47, type: !16540)
!16627 = !DILocation(line: 0, scope: !16623)
!16628 = !DILocation(line: 49, column: 30, scope: !16623)
!16629 = !DILocation(line: 49, column: 2, scope: !16623)
!16630 = !DILocation(line: 50, column: 1, scope: !16623)
!16631 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2665, file: !2665, line: 795, type: !2617, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16632)
!16632 = !{!16633, !16634, !16635, !16637, !16638}
!16633 = !DILocalVariable(name: "timeout", arg: 1, scope: !16631, file: !2665, line: 795, type: !2619)
!16634 = !DILocalVariable(name: "thread", scope: !16631, file: !2665, line: 797, type: !2560)
!16635 = !DILocalVariable(name: "__i", scope: !16636, file: !2665, line: 800, type: !15741)
!16636 = distinct !DILexicalBlock(scope: !16631, file: !2665, line: 800, column: 2)
!16637 = !DILocalVariable(name: "__key", scope: !16636, file: !2665, line: 800, type: !15741)
!16638 = !DILocalVariable(name: "killed", scope: !16639, file: !2665, line: 801, type: !153)
!16639 = distinct !DILexicalBlock(scope: !16640, file: !2665, line: 800, column: 26)
!16640 = distinct !DILexicalBlock(scope: !16636, file: !2665, line: 800, column: 2)
!16641 = !DILocation(line: 0, scope: !16631)
!16642 = !DILocation(line: 797, column: 28, scope: !16631)
!16643 = !DILocation(line: 0, scope: !16636)
!16644 = !DILocation(line: 0, scope: !15749, inlinedAt: !16645)
!16645 = distinct !DILocation(line: 800, column: 2, scope: !16636)
!16646 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16647)
!16647 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16645)
!16648 = !DILocation(line: 0, scope: !15758, inlinedAt: !16647)
!16649 = !DILocation(line: 801, column: 27, scope: !16639)
!16650 = !DILocation(line: 801, column: 32, scope: !16639)
!16651 = !DILocation(line: 801, column: 61, scope: !16639)
!16652 = !DILocation(line: 0, scope: !16639)
!16653 = !DILocation(line: 804, column: 7, scope: !16639)
!16654 = !DILocation(line: 805, column: 21, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16656, file: !2665, line: 805, column: 8)
!16656 = distinct !DILexicalBlock(scope: !16657, file: !2665, line: 804, column: 16)
!16657 = distinct !DILexicalBlock(scope: !16639, file: !2665, line: 804, column: 7)
!16658 = !DILocation(line: 805, column: 31, scope: !16655)
!16659 = !DILocation(line: 805, column: 8, scope: !16656)
!16660 = !DILocation(line: 806, column: 5, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16655, file: !2665, line: 805, column: 40)
!16662 = !DILocation(line: 807, column: 4, scope: !16661)
!16663 = !DILocation(line: 808, column: 4, scope: !16656)
!16664 = !DILocation(line: 809, column: 4, scope: !16656)
!16665 = !DILocation(line: 810, column: 4, scope: !16656)
!16666 = !DILocation(line: 811, column: 3, scope: !16656)
!16667 = !DILocation(line: 0, scope: !15776, inlinedAt: !16668)
!16668 = distinct !DILocation(line: 800, column: 2, scope: !16640)
!16669 = !DILocation(line: 0, scope: !15784, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16668)
!16671 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16670)
!16672 = !DILocation(line: 813, column: 1, scope: !16631)
!16673 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2665, file: !2665, line: 779, type: !15707, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16674)
!16674 = !{!16675}
!16675 = !DILocalVariable(name: "thread", arg: 1, scope: !16673, file: !2665, line: 779, type: !2560)
!16676 = !DILocation(line: 0, scope: !16673)
!16677 = !DILocation(line: 781, column: 2, scope: !16673)
!16678 = !DILocation(line: 782, column: 2, scope: !16673)
!16679 = !DILocation(line: 783, column: 15, scope: !16673)
!16680 = !DILocation(line: 783, column: 25, scope: !16673)
!16681 = !DILocation(line: 784, column: 1, scope: !16673)
!16682 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !15021, file: !15021, line: 165, type: !15707, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16683)
!16683 = !{!16684}
!16684 = !DILocalVariable(name: "thread", arg: 1, scope: !16682, file: !15021, line: 165, type: !2560)
!16685 = !DILocation(line: 0, scope: !16682)
!16686 = !DILocation(line: 167, column: 15, scope: !16682)
!16687 = !DILocation(line: 167, column: 28, scope: !16682)
!16688 = !DILocation(line: 168, column: 1, scope: !16682)
!16689 = distinct !DISubprogram(name: "unready_thread", scope: !2665, file: !2665, line: 731, type: !15707, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16690)
!16690 = !{!16691}
!16691 = !DILocalVariable(name: "thread", arg: 1, scope: !16689, file: !2665, line: 731, type: !2560)
!16692 = !DILocation(line: 0, scope: !16689)
!16693 = !DILocation(line: 733, column: 6, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16689, file: !2665, line: 733, column: 6)
!16695 = !DILocation(line: 733, column: 6, scope: !16689)
!16696 = !DILocation(line: 0, scope: !15918, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 734, column: 3, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16694, file: !2665, line: 733, column: 34)
!16699 = !DILocation(line: 266, column: 15, scope: !15918, inlinedAt: !16697)
!16700 = !DILocation(line: 266, column: 28, scope: !15918, inlinedAt: !16697)
!16701 = !DILocation(line: 0, scope: !15926, inlinedAt: !16702)
!16702 = distinct !DILocation(line: 268, column: 3, scope: !15930, inlinedAt: !16697)
!16703 = !DILocation(line: 234, column: 2, scope: !15926, inlinedAt: !16702)
!16704 = !DILocation(line: 735, column: 2, scope: !16698)
!16705 = !DILocation(line: 736, column: 25, scope: !16689)
!16706 = !DILocation(line: 736, column: 22, scope: !16689)
!16707 = !DILocation(line: 736, column: 2, scope: !16689)
!16708 = !DILocation(line: 737, column: 1, scope: !16689)
!16709 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !15021, file: !15021, line: 160, type: !15707, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16710)
!16710 = !{!16711}
!16711 = !DILocalVariable(name: "thread", arg: 1, scope: !16709, file: !15021, line: 160, type: !2560)
!16712 = !DILocation(line: 0, scope: !16709)
!16713 = !DILocation(line: 162, column: 15, scope: !16709)
!16714 = !DILocation(line: 162, column: 28, scope: !16709)
!16715 = !DILocation(line: 163, column: 1, scope: !16709)
!16716 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2665, file: !2665, line: 786, type: !15707, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16717)
!16717 = !{!16718, !16719, !16721}
!16718 = !DILocalVariable(name: "thread", arg: 1, scope: !16716, file: !2665, line: 786, type: !2560)
!16719 = !DILocalVariable(name: "__i", scope: !16720, file: !2665, line: 788, type: !15741)
!16720 = distinct !DILexicalBlock(scope: !16716, file: !2665, line: 788, column: 2)
!16721 = !DILocalVariable(name: "__key", scope: !16720, file: !2665, line: 788, type: !15741)
!16722 = !DILocation(line: 0, scope: !16716)
!16723 = !DILocation(line: 0, scope: !16720)
!16724 = !DILocation(line: 0, scope: !15749, inlinedAt: !16725)
!16725 = distinct !DILocation(line: 788, column: 2, scope: !16720)
!16726 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16727)
!16727 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16725)
!16728 = !DILocation(line: 0, scope: !15758, inlinedAt: !16727)
!16729 = !DILocation(line: 789, column: 3, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16731, file: !2665, line: 788, column: 26)
!16731 = distinct !DILexicalBlock(scope: !16720, file: !2665, line: 788, column: 2)
!16732 = !DILocation(line: 0, scope: !15776, inlinedAt: !16733)
!16733 = distinct !DILocation(line: 788, column: 2, scope: !16731)
!16734 = !DILocation(line: 0, scope: !15784, inlinedAt: !16735)
!16735 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16733)
!16736 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16735)
!16737 = !DILocation(line: 791, column: 1, scope: !16716)
!16738 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2665, file: !2665, line: 816, type: !16739, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16741)
!16739 = !DISubroutineType(types: !16740)
!16740 = !{!125, !208, !2591, !16540}
!16741 = !{!16742, !16743, !16744, !16745, !16746, !16748}
!16742 = !DILocalVariable(name: "key", arg: 1, scope: !16738, file: !2665, line: 816, type: !208)
!16743 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16738, file: !2665, line: 816, type: !2591)
!16744 = !DILocalVariable(name: "timeout", arg: 3, scope: !16738, file: !2665, line: 816, type: !16540)
!16745 = !DILocalVariable(name: "ret", scope: !16738, file: !2665, line: 828, type: !125)
!16746 = !DILocalVariable(name: "__i", scope: !16747, file: !2665, line: 829, type: !15741)
!16747 = distinct !DILexicalBlock(scope: !16738, file: !2665, line: 829, column: 2)
!16748 = !DILocalVariable(name: "__key", scope: !16747, file: !2665, line: 829, type: !15741)
!16749 = !DILocation(line: 0, scope: !16738)
!16750 = !DILocation(line: 823, column: 14, scope: !16738)
!16751 = !DILocation(line: 823, column: 2, scope: !16738)
!16752 = !DILocation(line: 826, column: 20, scope: !16738)
!16753 = !DILocation(line: 826, column: 18, scope: !16738)
!16754 = !DILocation(line: 828, column: 12, scope: !16738)
!16755 = !DILocation(line: 0, scope: !16747)
!16756 = !DILocation(line: 0, scope: !15749, inlinedAt: !16757)
!16757 = distinct !DILocation(line: 829, column: 2, scope: !16747)
!16758 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16759)
!16759 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16757)
!16760 = !DILocation(line: 0, scope: !15758, inlinedAt: !16759)
!16761 = !DILocation(line: 830, column: 7, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16763, file: !2665, line: 830, column: 7)
!16763 = distinct !DILexicalBlock(scope: !16764, file: !2665, line: 829, column: 26)
!16764 = distinct !DILexicalBlock(scope: !16747, file: !2665, line: 829, column: 2)
!16765 = !DILocation(line: 830, column: 26, scope: !16762)
!16766 = !DILocation(line: 830, column: 23, scope: !16762)
!16767 = !DILocation(line: 830, column: 7, scope: !16763)
!16768 = !DILocation(line: 831, column: 20, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16762, file: !2665, line: 830, column: 36)
!16770 = !DILocation(line: 832, column: 3, scope: !16769)
!16771 = !DILocation(line: 0, scope: !15776, inlinedAt: !16772)
!16772 = distinct !DILocation(line: 829, column: 2, scope: !16764)
!16773 = !DILocation(line: 0, scope: !15784, inlinedAt: !16774)
!16774 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16772)
!16775 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16774)
!16776 = !DILocation(line: 834, column: 2, scope: !16738)
!16777 = distinct !DISubprogram(name: "z_pend_curr", scope: !2665, file: !2665, line: 840, type: !16778, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16780)
!16778 = !DISubroutineType(types: !16779)
!16779 = !{!125, !15752, !15741, !2591, !16540}
!16780 = !{!16781, !16782, !16783, !16784}
!16781 = !DILocalVariable(name: "lock", arg: 1, scope: !16777, file: !2665, line: 840, type: !15752)
!16782 = !DILocalVariable(name: "key", arg: 2, scope: !16777, file: !2665, line: 840, type: !15741)
!16783 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16777, file: !2665, line: 841, type: !2591)
!16784 = !DILocalVariable(name: "timeout", arg: 4, scope: !16777, file: !2665, line: 841, type: !16540)
!16785 = !DILocation(line: 0, scope: !16777)
!16786 = !DILocation(line: 844, column: 20, scope: !16777)
!16787 = !DILocation(line: 844, column: 18, scope: !16777)
!16788 = !DILocation(line: 0, scope: !15749, inlinedAt: !16789)
!16789 = distinct !DILocation(line: 856, column: 9, scope: !16777)
!16790 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16791)
!16791 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16789)
!16792 = !DILocation(line: 0, scope: !15758, inlinedAt: !16791)
!16793 = !DILocation(line: 857, column: 14, scope: !16777)
!16794 = !DILocation(line: 857, column: 2, scope: !16777)
!16795 = !DILocation(line: 0, scope: !16360, inlinedAt: !16796)
!16796 = distinct !DILocation(line: 859, column: 9, scope: !16777)
!16797 = !DILocation(line: 196, column: 9, scope: !16360, inlinedAt: !16796)
!16798 = !DILocation(line: 859, column: 2, scope: !16777)
!16799 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2665, file: !2665, line: 862, type: !16800, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16802)
!16800 = !DISubroutineType(types: !16801)
!16801 = !{!2560, !2591}
!16802 = !{!16803, !16804, !16805, !16807}
!16803 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16799, file: !2665, line: 862, type: !2591)
!16804 = !DILocalVariable(name: "thread", scope: !16799, file: !2665, line: 864, type: !2560)
!16805 = !DILocalVariable(name: "__i", scope: !16806, file: !2665, line: 866, type: !15741)
!16806 = distinct !DILexicalBlock(scope: !16799, file: !2665, line: 866, column: 2)
!16807 = !DILocalVariable(name: "__key", scope: !16806, file: !2665, line: 866, type: !15741)
!16808 = !DILocation(line: 0, scope: !16799)
!16809 = !DILocation(line: 0, scope: !16806)
!16810 = !DILocation(line: 0, scope: !15749, inlinedAt: !16811)
!16811 = distinct !DILocation(line: 866, column: 2, scope: !16806)
!16812 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16813)
!16813 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16811)
!16814 = !DILocation(line: 0, scope: !15758, inlinedAt: !16813)
!16815 = !DILocation(line: 867, column: 12, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16817, file: !2665, line: 866, column: 26)
!16817 = distinct !DILexicalBlock(scope: !16806, file: !2665, line: 866, column: 2)
!16818 = !DILocation(line: 869, column: 14, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16816, file: !2665, line: 869, column: 7)
!16820 = !DILocation(line: 869, column: 7, scope: !16816)
!16821 = !DILocation(line: 870, column: 4, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16819, file: !2665, line: 869, column: 23)
!16823 = !DILocation(line: 871, column: 3, scope: !16822)
!16824 = !DILocation(line: 0, scope: !15776, inlinedAt: !16825)
!16825 = distinct !DILocation(line: 866, column: 2, scope: !16817)
!16826 = !DILocation(line: 0, scope: !15784, inlinedAt: !16827)
!16827 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16825)
!16828 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16827)
!16829 = !DILocation(line: 874, column: 2, scope: !16799)
!16830 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2665, file: !2665, line: 877, type: !16800, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16831)
!16831 = !{!16832, !16833, !16834, !16836}
!16832 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16830, file: !2665, line: 877, type: !2591)
!16833 = !DILocalVariable(name: "thread", scope: !16830, file: !2665, line: 879, type: !2560)
!16834 = !DILocalVariable(name: "__i", scope: !16835, file: !2665, line: 881, type: !15741)
!16835 = distinct !DILexicalBlock(scope: !16830, file: !2665, line: 881, column: 2)
!16836 = !DILocalVariable(name: "__key", scope: !16835, file: !2665, line: 881, type: !15741)
!16837 = !DILocation(line: 0, scope: !16830)
!16838 = !DILocation(line: 0, scope: !16835)
!16839 = !DILocation(line: 0, scope: !15749, inlinedAt: !16840)
!16840 = distinct !DILocation(line: 881, column: 2, scope: !16835)
!16841 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16840)
!16843 = !DILocation(line: 0, scope: !15758, inlinedAt: !16842)
!16844 = !DILocation(line: 882, column: 12, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16846, file: !2665, line: 881, column: 26)
!16846 = distinct !DILexicalBlock(scope: !16835, file: !2665, line: 881, column: 2)
!16847 = !DILocation(line: 884, column: 14, scope: !16848)
!16848 = distinct !DILexicalBlock(scope: !16845, file: !2665, line: 884, column: 7)
!16849 = !DILocation(line: 884, column: 7, scope: !16845)
!16850 = !DILocation(line: 885, column: 4, scope: !16851)
!16851 = distinct !DILexicalBlock(scope: !16848, file: !2665, line: 884, column: 23)
!16852 = !DILocation(line: 886, column: 10, scope: !16851)
!16853 = !DILocation(line: 887, column: 3, scope: !16851)
!16854 = !DILocation(line: 0, scope: !15776, inlinedAt: !16855)
!16855 = distinct !DILocation(line: 881, column: 2, scope: !16846)
!16856 = !DILocation(line: 0, scope: !15784, inlinedAt: !16857)
!16857 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16855)
!16858 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16857)
!16859 = !DILocation(line: 890, column: 2, scope: !16830)
!16860 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2665, file: !2665, line: 893, type: !15707, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16861)
!16861 = !{!16862}
!16862 = !DILocalVariable(name: "thread", arg: 1, scope: !16860, file: !2665, line: 893, type: !2560)
!16863 = !DILocation(line: 0, scope: !16860)
!16864 = !DILocation(line: 0, scope: !16716, inlinedAt: !16865)
!16865 = distinct !DILocation(line: 895, column: 2, scope: !16860)
!16866 = !DILocation(line: 0, scope: !16720, inlinedAt: !16865)
!16867 = !DILocation(line: 0, scope: !15749, inlinedAt: !16868)
!16868 = distinct !DILocation(line: 788, column: 2, scope: !16720, inlinedAt: !16865)
!16869 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16870)
!16870 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16868)
!16871 = !DILocation(line: 0, scope: !15758, inlinedAt: !16870)
!16872 = !DILocation(line: 789, column: 3, scope: !16730, inlinedAt: !16865)
!16873 = !DILocation(line: 0, scope: !15776, inlinedAt: !16874)
!16874 = distinct !DILocation(line: 788, column: 2, scope: !16731, inlinedAt: !16865)
!16875 = !DILocation(line: 0, scope: !15784, inlinedAt: !16876)
!16876 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16874)
!16877 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16876)
!16878 = !DILocation(line: 896, column: 8, scope: !16860)
!16879 = !DILocation(line: 897, column: 1, scope: !16860)
!16880 = distinct !DISubprogram(name: "z_set_prio", scope: !2665, file: !2665, line: 902, type: !16069, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16881)
!16881 = !{!16882, !16883, !16884, !16885, !16887}
!16882 = !DILocalVariable(name: "thread", arg: 1, scope: !16880, file: !2665, line: 902, type: !2560)
!16883 = !DILocalVariable(name: "prio", arg: 2, scope: !16880, file: !2665, line: 902, type: !125)
!16884 = !DILocalVariable(name: "need_sched", scope: !16880, file: !2665, line: 904, type: !153)
!16885 = !DILocalVariable(name: "__i", scope: !16886, file: !2665, line: 906, type: !15741)
!16886 = distinct !DILexicalBlock(scope: !16880, file: !2665, line: 906, column: 2)
!16887 = !DILocalVariable(name: "__key", scope: !16886, file: !2665, line: 906, type: !15741)
!16888 = !DILocation(line: 0, scope: !16880)
!16889 = !DILocation(line: 0, scope: !16886)
!16890 = !DILocation(line: 0, scope: !15749, inlinedAt: !16891)
!16891 = distinct !DILocation(line: 906, column: 2, scope: !16886)
!16892 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16893)
!16893 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16891)
!16894 = !DILocation(line: 0, scope: !15758, inlinedAt: !16893)
!16895 = !DILocation(line: 907, column: 16, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16897, file: !2665, line: 906, column: 26)
!16897 = distinct !DILexicalBlock(scope: !16886, file: !2665, line: 906, column: 2)
!16898 = !DILocation(line: 909, column: 7, scope: !16896)
!16899 = !DILocation(line: 0, scope: !15918, inlinedAt: !16900)
!16900 = distinct !DILocation(line: 912, column: 5, scope: !16901)
!16901 = distinct !DILexicalBlock(scope: !16902, file: !2665, line: 911, column: 63)
!16902 = distinct !DILexicalBlock(scope: !16903, file: !2665, line: 911, column: 8)
!16903 = distinct !DILexicalBlock(scope: !16904, file: !2665, line: 909, column: 19)
!16904 = distinct !DILexicalBlock(scope: !16896, file: !2665, line: 909, column: 7)
!16905 = !DILocation(line: 266, column: 28, scope: !15918, inlinedAt: !16900)
!16906 = !DILocation(line: 0, scope: !15926, inlinedAt: !16907)
!16907 = distinct !DILocation(line: 268, column: 3, scope: !15930, inlinedAt: !16900)
!16908 = !DILocation(line: 234, column: 2, scope: !15926, inlinedAt: !16907)
!16909 = !DILocation(line: 913, column: 23, scope: !16901)
!16910 = !DILocation(line: 0, scope: !15935, inlinedAt: !16911)
!16911 = distinct !DILocation(line: 914, column: 5, scope: !16901)
!16912 = !DILocation(line: 252, column: 28, scope: !15935, inlinedAt: !16911)
!16913 = !DILocation(line: 0, scope: !15942, inlinedAt: !16914)
!16914 = distinct !DILocation(line: 254, column: 3, scope: !15946, inlinedAt: !16911)
!16915 = !DILocation(line: 0, scope: !15949, inlinedAt: !16916)
!16916 = distinct !DILocation(line: 229, column: 2, scope: !15942, inlinedAt: !16914)
!16917 = !DILocation(line: 188, column: 2, scope: !15959, inlinedAt: !16916)
!16918 = !DILocation(line: 188, column: 2, scope: !15961, inlinedAt: !16916)
!16919 = !DILocation(line: 0, scope: !15959, inlinedAt: !16916)
!16920 = !DILocation(line: 189, column: 7, scope: !15964, inlinedAt: !16916)
!16921 = !DILocation(line: 189, column: 35, scope: !15964, inlinedAt: !16916)
!16922 = !DILocation(line: 189, column: 7, scope: !15965, inlinedAt: !16916)
!16923 = !DILocation(line: 190, column: 4, scope: !15969, inlinedAt: !16916)
!16924 = !DILocation(line: 192, column: 4, scope: !15969, inlinedAt: !16916)
!16925 = distinct !{!16925, !16917, !16926}
!16926 = !DILocation(line: 194, column: 2, scope: !15959, inlinedAt: !16916)
!16927 = !DILocation(line: 196, column: 2, scope: !15949, inlinedAt: !16916)
!16928 = !DILocation(line: 197, column: 1, scope: !15949, inlinedAt: !16916)
!16929 = !DILocation(line: 918, column: 4, scope: !16903)
!16930 = !DILocation(line: 919, column: 3, scope: !16903)
!16931 = !DILocation(line: 920, column: 22, scope: !16932)
!16932 = distinct !DILexicalBlock(scope: !16904, file: !2665, line: 919, column: 10)
!16933 = !DILocation(line: 0, scope: !15776, inlinedAt: !16934)
!16934 = distinct !DILocation(line: 906, column: 2, scope: !16897)
!16935 = !DILocation(line: 0, scope: !15784, inlinedAt: !16936)
!16936 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16934)
!16937 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16936)
!16938 = !DILocation(line: 926, column: 2, scope: !16880)
!16939 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2665, file: !2665, line: 929, type: !16940, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16942)
!16940 = !DISubroutineType(types: !16941)
!16941 = !{null, !2560, !125}
!16942 = !{!16943, !16944, !16945}
!16943 = !DILocalVariable(name: "thread", arg: 1, scope: !16939, file: !2665, line: 929, type: !2560)
!16944 = !DILocalVariable(name: "prio", arg: 2, scope: !16939, file: !2665, line: 929, type: !125)
!16945 = !DILocalVariable(name: "need_sched", scope: !16939, file: !2665, line: 931, type: !153)
!16946 = !DILocation(line: 0, scope: !16939)
!16947 = !DILocation(line: 931, column: 20, scope: !16939)
!16948 = !DILocation(line: 935, column: 17, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16939, file: !2665, line: 935, column: 6)
!16950 = !DILocation(line: 935, column: 20, scope: !16949)
!16951 = !DILocation(line: 935, column: 35, scope: !16949)
!16952 = !DILocation(line: 935, column: 48, scope: !16949)
!16953 = !DILocation(line: 935, column: 6, scope: !16939)
!16954 = !DILocation(line: 936, column: 3, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16949, file: !2665, line: 935, column: 55)
!16956 = !DILocation(line: 937, column: 2, scope: !16955)
!16957 = !DILocation(line: 938, column: 1, scope: !16939)
!16958 = distinct !DISubprogram(name: "k_sched_lock", scope: !2665, file: !2665, line: 987, type: !3326, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16959)
!16959 = !{!16960, !16962}
!16960 = !DILocalVariable(name: "__i", scope: !16961, file: !2665, line: 989, type: !15741)
!16961 = distinct !DILexicalBlock(scope: !16958, file: !2665, line: 989, column: 2)
!16962 = !DILocalVariable(name: "__key", scope: !16961, file: !2665, line: 989, type: !15741)
!16963 = !DILocation(line: 0, scope: !16961)
!16964 = !DILocation(line: 0, scope: !15749, inlinedAt: !16965)
!16965 = distinct !DILocation(line: 989, column: 2, scope: !16961)
!16966 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16967)
!16967 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16965)
!16968 = !DILocation(line: 0, scope: !15758, inlinedAt: !16967)
!16969 = !DILocation(line: 992, column: 3, scope: !16970)
!16970 = distinct !DILexicalBlock(scope: !16971, file: !2665, line: 989, column: 26)
!16971 = distinct !DILexicalBlock(scope: !16961, file: !2665, line: 989, column: 2)
!16972 = !DILocation(line: 0, scope: !15776, inlinedAt: !16973)
!16973 = distinct !DILocation(line: 989, column: 2, scope: !16971)
!16974 = !DILocation(line: 0, scope: !15784, inlinedAt: !16975)
!16975 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !16973)
!16976 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !16975)
!16977 = !DILocation(line: 994, column: 1, scope: !16958)
!16978 = distinct !DISubprogram(name: "z_sched_lock", scope: !15021, file: !15021, line: 251, type: !3326, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !639)
!16979 = !DILocation(line: 256, column: 4, scope: !16978)
!16980 = !DILocation(line: 256, column: 19, scope: !16978)
!16981 = !DILocation(line: 256, column: 2, scope: !16978)
!16982 = !DILocation(line: 258, column: 2, scope: !16983)
!16983 = distinct !DILexicalBlock(scope: !16978, file: !15021, line: 258, column: 2)
!16984 = !{i64 2154276591}
!16985 = !DILocation(line: 259, column: 1, scope: !16978)
!16986 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2665, file: !2665, line: 996, type: !3326, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !16987)
!16987 = !{!16988, !16990}
!16988 = !DILocalVariable(name: "__i", scope: !16989, file: !2665, line: 998, type: !15741)
!16989 = distinct !DILexicalBlock(scope: !16986, file: !2665, line: 998, column: 2)
!16990 = !DILocalVariable(name: "__key", scope: !16989, file: !2665, line: 998, type: !15741)
!16991 = !DILocation(line: 0, scope: !16989)
!16992 = !DILocation(line: 0, scope: !15749, inlinedAt: !16993)
!16993 = distinct !DILocation(line: 998, column: 2, scope: !16989)
!16994 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !16995)
!16995 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !16993)
!16996 = !DILocation(line: 0, scope: !15758, inlinedAt: !16995)
!16997 = !DILocation(line: 1002, column: 5, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16999, file: !2665, line: 998, column: 26)
!16999 = distinct !DILexicalBlock(scope: !16989, file: !2665, line: 998, column: 2)
!17000 = !DILocation(line: 1002, column: 20, scope: !16998)
!17001 = !DILocation(line: 1002, column: 3, scope: !16998)
!17002 = !DILocation(line: 1003, column: 3, scope: !16998)
!17003 = !DILocation(line: 0, scope: !15776, inlinedAt: !17004)
!17004 = distinct !DILocation(line: 998, column: 2, scope: !16999)
!17005 = !DILocation(line: 0, scope: !15784, inlinedAt: !17006)
!17006 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !17004)
!17007 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !17006)
!17008 = !DILocation(line: 1011, column: 2, scope: !16986)
!17009 = !DILocation(line: 1012, column: 1, scope: !16986)
!17010 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2665, file: !2665, line: 1014, type: !16057, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !639)
!17011 = !DILocation(line: 1028, column: 25, scope: !17010)
!17012 = !DILocation(line: 1028, column: 2, scope: !17010)
!17013 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2665, file: !2665, line: 1155, type: !17014, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17016)
!17014 = !DISubroutineType(types: !17015)
!17015 = !{!153, !2589, !2589}
!17016 = !{!17017, !17018, !17019, !17020, !17021}
!17017 = !DILocalVariable(name: "a", arg: 1, scope: !17013, file: !2665, line: 1155, type: !2589)
!17018 = !DILocalVariable(name: "b", arg: 2, scope: !17013, file: !2665, line: 1155, type: !2589)
!17019 = !DILocalVariable(name: "thread_a", scope: !17013, file: !2665, line: 1157, type: !2560)
!17020 = !DILocalVariable(name: "thread_b", scope: !17013, file: !2665, line: 1157, type: !2560)
!17021 = !DILocalVariable(name: "cmp", scope: !17013, file: !2665, line: 1158, type: !887)
!17022 = !DILocation(line: 0, scope: !17013)
!17023 = !DILocation(line: 1160, column: 13, scope: !17013)
!17024 = !DILocation(line: 1161, column: 13, scope: !17013)
!17025 = !DILocation(line: 1163, column: 8, scope: !17013)
!17026 = !DILocation(line: 1165, column: 10, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !17013, file: !2665, line: 1165, column: 6)
!17028 = !DILocation(line: 1165, column: 6, scope: !17013)
!17029 = !DILocation(line: 1167, column: 17, scope: !17030)
!17030 = distinct !DILexicalBlock(scope: !17027, file: !2665, line: 1167, column: 13)
!17031 = !DILocation(line: 1167, column: 13, scope: !17027)
!17032 = !DILocation(line: 1170, column: 25, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17030, file: !2665, line: 1169, column: 9)
!17034 = !DILocation(line: 1170, column: 52, scope: !17033)
!17035 = !DILocation(line: 1170, column: 35, scope: !17033)
!17036 = !DILocation(line: 1170, column: 3, scope: !17033)
!17037 = !DILocation(line: 0, scope: !17027)
!17038 = !DILocation(line: 1173, column: 1, scope: !17013)
!17039 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2665, file: !2665, line: 1175, type: !17040, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17055)
!17040 = !DISubroutineType(types: !17041)
!17041 = !{null, !17042, !2560}
!17042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17043, size: 32)
!17043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17044, line: 37, size: 128, elements: !17045)
!17044 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17045 = !{!17046, !17054}
!17046 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17043, file: !17044, line: 38, baseType: !17047, size: 96)
!17047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !557, line: 83, size: 96, elements: !17048)
!17048 = !{!17049, !17050, !17053}
!17049 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17047, file: !557, line: 84, baseType: !2589, size: 32)
!17050 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17047, file: !557, line: 85, baseType: !17051, size: 32, offset: 32)
!17051 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !557, line: 81, baseType: !17052)
!17052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17014, size: 32)
!17053 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17047, file: !557, line: 86, baseType: !125, size: 32, offset: 64)
!17054 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17043, file: !17044, line: 39, baseType: !125, size: 32, offset: 96)
!17055 = !{!17056, !17057, !17058, !17059, !17068}
!17056 = !DILocalVariable(name: "pq", arg: 1, scope: !17039, file: !2665, line: 1175, type: !17042)
!17057 = !DILocalVariable(name: "thread", arg: 2, scope: !17039, file: !2665, line: 1175, type: !2560)
!17058 = !DILocalVariable(name: "t", scope: !17039, file: !2665, line: 1177, type: !2560)
!17059 = !DILocalVariable(name: "__f", scope: !17060, file: !2665, line: 1190, type: !17063)
!17060 = distinct !DILexicalBlock(scope: !17061, file: !2665, line: 1190, column: 3)
!17061 = distinct !DILexicalBlock(scope: !17062, file: !2665, line: 1189, column: 27)
!17062 = distinct !DILexicalBlock(scope: !17039, file: !2665, line: 1189, column: 6)
!17063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !557, line: 155, size: 96, elements: !17064)
!17064 = !{!17065, !17066, !17067}
!17065 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17063, file: !557, line: 156, baseType: !2660, size: 32)
!17066 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17063, file: !557, line: 157, baseType: !184, size: 32, offset: 32)
!17067 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17063, file: !557, line: 158, baseType: !887, size: 32, offset: 64)
!17068 = !DILocalVariable(name: "n", scope: !17069, file: !2665, line: 1190, type: !2589)
!17069 = distinct !DILexicalBlock(scope: !17070, file: !2665, line: 1190, column: 3)
!17070 = distinct !DILexicalBlock(scope: !17060, file: !2665, line: 1190, column: 3)
!17071 = !DILocation(line: 0, scope: !17039)
!17072 = !DILocation(line: 1181, column: 31, scope: !17039)
!17073 = !DILocation(line: 1181, column: 45, scope: !17039)
!17074 = !DILocation(line: 1181, column: 15, scope: !17039)
!17075 = !DILocation(line: 1181, column: 25, scope: !17039)
!17076 = !DILocation(line: 1189, column: 11, scope: !17062)
!17077 = !DILocation(line: 1189, column: 7, scope: !17062)
!17078 = !DILocation(line: 1189, column: 6, scope: !17039)
!17079 = !DILocation(line: 1190, column: 3, scope: !17060)
!17080 = !DILocation(line: 1190, column: 3, scope: !17069)
!17081 = !DILocation(line: 0, scope: !17069)
!17082 = !DILocation(line: 1190, column: 3, scope: !17070)
!17083 = !DILocation(line: 1193, column: 2, scope: !17061)
!17084 = !DILocation(line: 1191, column: 42, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17070, file: !2665, line: 1190, column: 54)
!17086 = !DILocation(line: 1191, column: 12, scope: !17085)
!17087 = !DILocation(line: 1191, column: 22, scope: !17085)
!17088 = distinct !{!17088, !17079, !17089}
!17089 = !DILocation(line: 1192, column: 3, scope: !17060)
!17090 = !DILocation(line: 1195, column: 17, scope: !17039)
!17091 = !DILocation(line: 1195, column: 37, scope: !17039)
!17092 = !DILocation(line: 1195, column: 2, scope: !17039)
!17093 = !DILocation(line: 1196, column: 1, scope: !17039)
!17094 = !DISubprogram(name: "z_rb_foreach_next", scope: !557, file: !557, line: 176, type: !17095, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17095 = !DISubroutineType(types: !17096)
!17096 = !{!2589, !17097, !17098}
!17097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17047, size: 32)
!17098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17063, size: 32)
!17099 = !DISubprogram(name: "rb_insert", scope: !557, file: !557, line: 105, type: !17100, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17100 = !DISubroutineType(types: !17101)
!17101 = !{null, !17097, !2589}
!17102 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2665, file: !2665, line: 1198, type: !17040, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17103)
!17103 = !{!17104, !17105}
!17104 = !DILocalVariable(name: "pq", arg: 1, scope: !17102, file: !2665, line: 1198, type: !17042)
!17105 = !DILocalVariable(name: "thread", arg: 2, scope: !17102, file: !2665, line: 1198, type: !2560)
!17106 = !DILocation(line: 0, scope: !17102)
!17107 = !DILocation(line: 1202, column: 17, scope: !17102)
!17108 = !DILocation(line: 1202, column: 37, scope: !17102)
!17109 = !DILocation(line: 1202, column: 2, scope: !17102)
!17110 = !DILocation(line: 1204, column: 16, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !17102, file: !2665, line: 1204, column: 6)
!17112 = !DILocation(line: 1204, column: 7, scope: !17111)
!17113 = !DILocation(line: 1204, column: 6, scope: !17102)
!17114 = !DILocation(line: 1205, column: 7, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17111, file: !2665, line: 1204, column: 22)
!17116 = !DILocation(line: 1205, column: 22, scope: !17115)
!17117 = !DILocation(line: 1206, column: 2, scope: !17115)
!17118 = !DILocation(line: 1207, column: 1, scope: !17102)
!17119 = !DISubprogram(name: "rb_remove", scope: !557, file: !557, line: 110, type: !17100, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17120 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2665, file: !2665, line: 1209, type: !17121, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17123)
!17121 = !DISubroutineType(types: !17122)
!17122 = !{!2560, !17042}
!17123 = !{!17124, !17125, !17126}
!17124 = !DILocalVariable(name: "pq", arg: 1, scope: !17120, file: !2665, line: 1209, type: !17042)
!17125 = !DILocalVariable(name: "thread", scope: !17120, file: !2665, line: 1211, type: !2560)
!17126 = !DILocalVariable(name: "n", scope: !17120, file: !2665, line: 1212, type: !2589)
!17127 = !DILocation(line: 0, scope: !17120)
!17128 = !DILocation(line: 1212, column: 37, scope: !17120)
!17129 = !DILocation(line: 1212, column: 21, scope: !17120)
!17130 = !DILocation(line: 1217, column: 2, scope: !17120)
!17131 = distinct !DISubprogram(name: "rb_get_min", scope: !557, file: !557, line: 115, type: !17132, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17134)
!17132 = !DISubroutineType(types: !17133)
!17133 = !{!2589, !17097}
!17134 = !{!17135}
!17135 = !DILocalVariable(name: "tree", arg: 1, scope: !17131, file: !557, line: 115, type: !17097)
!17136 = !DILocation(line: 0, scope: !17131)
!17137 = !DILocation(line: 117, column: 9, scope: !17131)
!17138 = !DILocation(line: 117, column: 2, scope: !17131)
!17139 = !DISubprogram(name: "z_rb_get_minmax", scope: !557, file: !557, line: 100, type: !17140, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17140 = !DISubroutineType(types: !17141)
!17141 = !{!2589, !17097, !150}
!17142 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2665, file: !2665, line: 1246, type: !17143, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17153)
!17143 = !DISubroutineType(types: !17144)
!17144 = !{!2560, !17145}
!17145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17146, size: 32)
!17146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17044, line: 53, size: 2080, elements: !17147)
!17147 = !{!17148, !17152}
!17148 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17146, file: !17044, line: 54, baseType: !17149, size: 2048)
!17149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2596, size: 2048, elements: !17150)
!17150 = !{!17151}
!17151 = !DISubrange(count: 32)
!17152 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17146, file: !17044, line: 55, baseType: !32, size: 32, offset: 2048)
!17153 = !{!17154, !17155, !17156, !17157}
!17154 = !DILocalVariable(name: "pq", arg: 1, scope: !17142, file: !2665, line: 1246, type: !17145)
!17155 = !DILocalVariable(name: "thread", scope: !17142, file: !2665, line: 1252, type: !2560)
!17156 = !DILocalVariable(name: "l", scope: !17142, file: !2665, line: 1253, type: !15952)
!17157 = !DILocalVariable(name: "n", scope: !17142, file: !2665, line: 1254, type: !2661)
!17158 = !DILocation(line: 0, scope: !17142)
!17159 = !DILocation(line: 1248, column: 11, scope: !17160)
!17160 = distinct !DILexicalBlock(scope: !17142, file: !2665, line: 1248, column: 6)
!17161 = !DILocation(line: 1248, column: 7, scope: !17160)
!17162 = !DILocation(line: 1248, column: 6, scope: !17142)
!17163 = !DILocation(line: 1253, column: 31, scope: !17142)
!17164 = !DILocation(line: 1253, column: 20, scope: !17142)
!17165 = !DILocation(line: 1254, column: 19, scope: !17142)
!17166 = !DILocation(line: 1260, column: 1, scope: !17142)
!17167 = distinct !DISubprogram(name: "z_unpend_all", scope: !2665, file: !2665, line: 1262, type: !17168, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17170)
!17168 = !DISubroutineType(types: !17169)
!17169 = !{!125, !2591}
!17170 = !{!17171, !17172, !17173}
!17171 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17167, file: !2665, line: 1262, type: !2591)
!17172 = !DILocalVariable(name: "need_sched", scope: !17167, file: !2665, line: 1264, type: !125)
!17173 = !DILocalVariable(name: "thread", scope: !17167, file: !2665, line: 1265, type: !2560)
!17174 = !DILocation(line: 0, scope: !17167)
!17175 = !DILocation(line: 1267, column: 19, scope: !17167)
!17176 = !DILocation(line: 1267, column: 41, scope: !17167)
!17177 = !DILocation(line: 1267, column: 2, scope: !17167)
!17178 = !DILocation(line: 1268, column: 3, scope: !17179)
!17179 = distinct !DILexicalBlock(scope: !17167, file: !2665, line: 1267, column: 50)
!17180 = !DILocation(line: 1269, column: 3, scope: !17179)
!17181 = distinct !{!17181, !17177, !17182}
!17182 = !DILocation(line: 1271, column: 2, scope: !17167)
!17183 = !DILocation(line: 1273, column: 2, scope: !17167)
!17184 = distinct !DISubprogram(name: "z_waitq_head", scope: !15347, file: !15347, line: 52, type: !16800, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17185)
!17185 = !{!17186}
!17186 = !DILocalVariable(name: "w", arg: 1, scope: !17184, file: !15347, line: 52, type: !2591)
!17187 = !DILocation(line: 0, scope: !17184)
!17188 = !DILocation(line: 54, column: 52, scope: !17184)
!17189 = !DILocation(line: 54, column: 28, scope: !17184)
!17190 = !DILocation(line: 54, column: 9, scope: !17184)
!17191 = !DILocation(line: 54, column: 2, scope: !17184)
!17192 = distinct !DISubprogram(name: "init_ready_q", scope: !2665, file: !2665, line: 1276, type: !17193, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17200)
!17193 = !DISubroutineType(types: !17194)
!17194 = !{null, !17195}
!17195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17196, size: 32)
!17196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !17197)
!17197 = !{!17198, !17199}
!17198 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17196, file: !567, line: 86, baseType: !2560, size: 32)
!17199 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17196, file: !567, line: 90, baseType: !2596, size: 64, offset: 32)
!17200 = !{!17201}
!17201 = !DILocalVariable(name: "rq", arg: 1, scope: !17192, file: !2665, line: 1276, type: !17195)
!17202 = !DILocation(line: 0, scope: !17192)
!17203 = !DILocation(line: 1289, column: 22, scope: !17192)
!17204 = !DILocation(line: 1289, column: 2, scope: !17192)
!17205 = !DILocation(line: 1291, column: 1, scope: !17192)
!17206 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !17207, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17209)
!17207 = !DISubroutineType(types: !17208)
!17208 = !{null, !15952}
!17209 = !{!17210}
!17210 = !DILocalVariable(name: "list", arg: 1, scope: !17206, file: !541, line: 197, type: !15952)
!17211 = !DILocation(line: 0, scope: !17206)
!17212 = !DILocation(line: 199, column: 8, scope: !17206)
!17213 = !DILocation(line: 199, column: 13, scope: !17206)
!17214 = !DILocation(line: 200, column: 8, scope: !17206)
!17215 = !DILocation(line: 200, column: 13, scope: !17206)
!17216 = !DILocation(line: 201, column: 1, scope: !17206)
!17217 = distinct !DISubprogram(name: "z_sched_init", scope: !2665, file: !2665, line: 1293, type: !3326, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !639)
!17218 = !DILocation(line: 1302, column: 2, scope: !17217)
!17219 = !DILocation(line: 1306, column: 2, scope: !17217)
!17220 = !DILocation(line: 1309, column: 1, scope: !17217)
!17221 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2665, file: !2665, line: 1311, type: !17222, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17225)
!17222 = !DISubroutineType(types: !17223)
!17223 = !{!125, !17224}
!17224 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2560)
!17225 = !{!17226}
!17226 = !DILocalVariable(name: "thread", arg: 1, scope: !17221, file: !2665, line: 1311, type: !17224)
!17227 = !DILocation(line: 0, scope: !17221)
!17228 = !DILocation(line: 1313, column: 22, scope: !17221)
!17229 = !DILocation(line: 1313, column: 9, scope: !17221)
!17230 = !DILocation(line: 1313, column: 2, scope: !17221)
!17231 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2665, file: !2665, line: 1325, type: !17232, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17234)
!17232 = !DISubroutineType(types: !17233)
!17233 = !{null, !17224, !125}
!17234 = !{!17235, !17236, !17237}
!17235 = !DILocalVariable(name: "thread", arg: 1, scope: !17231, file: !2665, line: 1325, type: !17224)
!17236 = !DILocalVariable(name: "prio", arg: 2, scope: !17231, file: !2665, line: 1325, type: !125)
!17237 = !DILocalVariable(name: "th", scope: !17231, file: !2665, line: 1334, type: !2560)
!17238 = !DILocation(line: 0, scope: !17231)
!17239 = !DILocation(line: 1336, column: 2, scope: !17231)
!17240 = !DILocation(line: 1337, column: 1, scope: !17231)
!17241 = distinct !DISubprogram(name: "k_can_yield", scope: !2665, file: !2665, line: 1384, type: !9348, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !639)
!17242 = !DILocation(line: 1386, column: 11, scope: !17241)
!17243 = !DILocation(line: 1386, column: 29, scope: !17241)
!17244 = !DILocation(line: 1386, column: 32, scope: !17241)
!17245 = !DILocation(line: 1386, column: 46, scope: !17241)
!17246 = !DILocation(line: 1387, column: 28, scope: !17241)
!17247 = !DILocation(line: 1387, column: 4, scope: !17241)
!17248 = !DILocation(line: 1386, column: 2, scope: !17241)
!17249 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !624, file: !624, line: 989, type: !9348, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !639)
!17250 = !DILocation(line: 993, column: 10, scope: !17249)
!17251 = !DILocation(line: 993, column: 2, scope: !17249)
!17252 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2665, file: !2665, line: 1390, type: !3326, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17253)
!17253 = !{!17254}
!17254 = !DILocalVariable(name: "key", scope: !17252, file: !2665, line: 1396, type: !15741)
!17255 = !DILocation(line: 0, scope: !15749, inlinedAt: !17256)
!17256 = distinct !DILocation(line: 1396, column: 25, scope: !17252)
!17257 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !17258)
!17258 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !17256)
!17259 = !DILocation(line: 0, scope: !15758, inlinedAt: !17258)
!17260 = !DILocation(line: 0, scope: !17252)
!17261 = !DILocation(line: 1400, column: 18, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17263, file: !2665, line: 1399, column: 36)
!17263 = distinct !DILexicalBlock(scope: !17252, file: !2665, line: 1398, column: 6)
!17264 = !DILocation(line: 0, scope: !15918, inlinedAt: !17265)
!17265 = distinct !DILocation(line: 1400, column: 3, scope: !17262)
!17266 = !DILocation(line: 266, column: 15, scope: !15918, inlinedAt: !17265)
!17267 = !DILocation(line: 266, column: 28, scope: !15918, inlinedAt: !17265)
!17268 = !DILocation(line: 0, scope: !15926, inlinedAt: !17269)
!17269 = distinct !DILocation(line: 268, column: 3, scope: !15930, inlinedAt: !17265)
!17270 = !DILocation(line: 234, column: 2, scope: !15926, inlinedAt: !17269)
!17271 = !DILocation(line: 1402, column: 15, scope: !17252)
!17272 = !DILocation(line: 0, scope: !15935, inlinedAt: !17273)
!17273 = distinct !DILocation(line: 1402, column: 2, scope: !17252)
!17274 = !DILocation(line: 252, column: 15, scope: !15935, inlinedAt: !17273)
!17275 = !DILocation(line: 252, column: 28, scope: !15935, inlinedAt: !17273)
!17276 = !DILocation(line: 0, scope: !15942, inlinedAt: !17277)
!17277 = distinct !DILocation(line: 254, column: 3, scope: !15946, inlinedAt: !17273)
!17278 = !DILocation(line: 0, scope: !15949, inlinedAt: !17279)
!17279 = distinct !DILocation(line: 229, column: 2, scope: !15942, inlinedAt: !17277)
!17280 = !DILocation(line: 188, column: 2, scope: !15959, inlinedAt: !17279)
!17281 = !DILocation(line: 188, column: 2, scope: !15961, inlinedAt: !17279)
!17282 = !DILocation(line: 0, scope: !15959, inlinedAt: !17279)
!17283 = !DILocation(line: 189, column: 7, scope: !15964, inlinedAt: !17279)
!17284 = !DILocation(line: 189, column: 35, scope: !15964, inlinedAt: !17279)
!17285 = !DILocation(line: 189, column: 7, scope: !15965, inlinedAt: !17279)
!17286 = !DILocation(line: 191, column: 21, scope: !15969, inlinedAt: !17279)
!17287 = !DILocation(line: 190, column: 4, scope: !15969, inlinedAt: !17279)
!17288 = !DILocation(line: 192, column: 4, scope: !15969, inlinedAt: !17279)
!17289 = distinct !{!17289, !17280, !17290}
!17290 = !DILocation(line: 194, column: 2, scope: !15959, inlinedAt: !17279)
!17291 = !DILocation(line: 196, column: 37, scope: !15949, inlinedAt: !17279)
!17292 = !DILocation(line: 196, column: 2, scope: !15949, inlinedAt: !17279)
!17293 = !DILocation(line: 197, column: 1, scope: !15949, inlinedAt: !17279)
!17294 = !DILocation(line: 1403, column: 2, scope: !17252)
!17295 = !DILocation(line: 0, scope: !16360, inlinedAt: !17296)
!17296 = distinct !DILocation(line: 1404, column: 2, scope: !17252)
!17297 = !DILocation(line: 196, column: 9, scope: !16360, inlinedAt: !17296)
!17298 = !DILocation(line: 1405, column: 1, scope: !17252)
!17299 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2665, file: !2665, line: 1459, type: !17300, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17302)
!17300 = !DISubroutineType(types: !17301)
!17301 = !{!887, !16540}
!17302 = !{!17303, !17304, !17305}
!17303 = !DILocalVariable(name: "timeout", arg: 1, scope: !17299, file: !2665, line: 1459, type: !16540)
!17304 = !DILocalVariable(name: "ticks", scope: !17299, file: !2665, line: 1461, type: !1914)
!17305 = !DILocalVariable(name: "ret", scope: !17299, file: !2665, line: 1480, type: !887)
!17306 = !DILocation(line: 0, scope: !17299)
!17307 = !DILocation(line: 1468, column: 6, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17299, file: !2665, line: 1468, column: 6)
!17309 = !DILocation(line: 1468, column: 6, scope: !17299)
!17310 = !DILocation(line: 1469, column: 20, scope: !17311)
!17311 = distinct !DILexicalBlock(scope: !17308, file: !2665, line: 1468, column: 40)
!17312 = !DILocation(line: 1469, column: 3, scope: !17311)
!17313 = !DILocation(line: 1473, column: 3, scope: !17311)
!17314 = !DILocation(line: 1478, column: 10, scope: !17299)
!17315 = !DILocation(line: 1480, column: 16, scope: !17299)
!17316 = !DILocation(line: 1485, column: 1, scope: !17299)
!17317 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5398, file: !5398, line: 310, type: !17318, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17320)
!17318 = !DISubroutineType(types: !17319)
!17319 = !{null, !17224}
!17320 = !{!17321}
!17321 = !DILocalVariable(name: "thread", arg: 1, scope: !17317, file: !5398, line: 310, type: !17224)
!17322 = !DILocation(line: 0, scope: !17317)
!17323 = !DILocation(line: 319, column: 2, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17317, file: !5398, line: 319, column: 2)
!17325 = !{i64 2154194980}
!17326 = !DILocation(line: 320, column: 2, scope: !17317)
!17327 = !DILocation(line: 321, column: 1, scope: !17317)
!17328 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2665, file: !2665, line: 1415, type: !17329, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17331)
!17329 = !DISubroutineType(types: !17330)
!17330 = !{!887, !1914}
!17331 = !{!17332, !17333, !17334, !17335}
!17332 = !DILocalVariable(name: "ticks", arg: 1, scope: !17328, file: !2665, line: 1415, type: !1914)
!17333 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17328, file: !2665, line: 1418, type: !208)
!17334 = !DILocalVariable(name: "timeout", scope: !17328, file: !2665, line: 1430, type: !16540)
!17335 = !DILocalVariable(name: "key", scope: !17328, file: !2665, line: 1437, type: !15741)
!17336 = !DILocation(line: 0, scope: !17328)
!17337 = !DILocation(line: 1425, column: 12, scope: !17338)
!17338 = distinct !DILexicalBlock(scope: !17328, file: !2665, line: 1425, column: 6)
!17339 = !DILocation(line: 1425, column: 6, scope: !17328)
!17340 = !DILocation(line: 1426, column: 3, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17338, file: !2665, line: 1425, column: 18)
!17342 = !DILocation(line: 1427, column: 3, scope: !17341)
!17343 = !DILocation(line: 1431, column: 24, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17328, file: !2665, line: 1431, column: 6)
!17345 = !DILocation(line: 1431, column: 6, scope: !17328)
!17346 = !DILocation(line: 1432, column: 35, scope: !17347)
!17347 = distinct !DILexicalBlock(scope: !17344, file: !2665, line: 1431, column: 30)
!17348 = !DILocation(line: 1432, column: 27, scope: !17347)
!17349 = !DILocation(line: 1433, column: 2, scope: !17347)
!17350 = !DILocation(line: 1434, column: 27, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17344, file: !2665, line: 1433, column: 9)
!17352 = !DILocation(line: 0, scope: !17344)
!17353 = !DILocation(line: 0, scope: !15749, inlinedAt: !17354)
!17354 = distinct !DILocation(line: 1437, column: 25, scope: !17328)
!17355 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !17356)
!17356 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !17354)
!17357 = !DILocation(line: 0, scope: !15758, inlinedAt: !17356)
!17358 = !DILocation(line: 1440, column: 20, scope: !17328)
!17359 = !DILocation(line: 1440, column: 18, scope: !17328)
!17360 = !DILocation(line: 1442, column: 2, scope: !17328)
!17361 = !DILocation(line: 1443, column: 23, scope: !17328)
!17362 = !DILocation(line: 1443, column: 2, scope: !17328)
!17363 = !DILocation(line: 1444, column: 29, scope: !17328)
!17364 = !DILocation(line: 1444, column: 2, scope: !17328)
!17365 = !DILocation(line: 0, scope: !16360, inlinedAt: !17366)
!17366 = distinct !DILocation(line: 1446, column: 8, scope: !17328)
!17367 = !DILocation(line: 196, column: 9, scope: !16360, inlinedAt: !17366)
!17368 = !DILocation(line: 1450, column: 10, scope: !17328)
!17369 = !DILocation(line: 1450, column: 45, scope: !17328)
!17370 = !DILocation(line: 1450, column: 43, scope: !17328)
!17371 = !DILocation(line: 1451, column: 6, scope: !17328)
!17372 = !DILocation(line: 1457, column: 1, scope: !17328)
!17373 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !15582, file: !15582, line: 1103, type: !15583, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17374)
!17374 = !{!17375}
!17375 = !DILocalVariable(name: "t", arg: 1, scope: !17373, file: !15582, line: 1103, type: !1781)
!17376 = !DILocation(line: 0, scope: !17373)
!17377 = !DILocation(line: 0, scope: !15796, inlinedAt: !17378)
!17378 = distinct !DILocation(line: 1106, column: 9, scope: !17373)
!17379 = !DILocation(line: 139, column: 13, scope: !17380, inlinedAt: !17378)
!17380 = distinct !DILexicalBlock(scope: !17381, file: !15582, line: 138, column: 10)
!17381 = distinct !DILexicalBlock(scope: !17382, file: !15582, line: 136, column: 7)
!17382 = distinct !DILexicalBlock(scope: !15817, file: !15582, line: 134, column: 17)
!17383 = !DILocation(line: 1106, column: 2, scope: !17373)
!17384 = distinct !DISubprogram(name: "k_yield", scope: !5398, file: !5398, line: 140, type: !3326, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !639)
!17385 = !DILocation(line: 148, column: 2, scope: !17386)
!17386 = distinct !DILexicalBlock(scope: !17384, file: !5398, line: 148, column: 2)
!17387 = !{i64 2154194300}
!17388 = !DILocation(line: 149, column: 2, scope: !17384)
!17389 = !DILocation(line: 150, column: 1, scope: !17384)
!17390 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2665, file: !2665, line: 1495, type: !17391, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17393)
!17391 = !DISubroutineType(types: !17392)
!17392 = !{!887, !125}
!17393 = !{!17394, !17395}
!17394 = !DILocalVariable(name: "us", arg: 1, scope: !17390, file: !2665, line: 1495, type: !125)
!17395 = !DILocalVariable(name: "ticks", scope: !17390, file: !2665, line: 1497, type: !887)
!17396 = !DILocation(line: 0, scope: !17390)
!17397 = !DILocation(line: 1501, column: 31, scope: !17390)
!17398 = !DILocation(line: 1501, column: 10, scope: !17390)
!17399 = !DILocation(line: 1502, column: 23, scope: !17390)
!17400 = !DILocation(line: 1502, column: 10, scope: !17390)
!17401 = !DILocation(line: 1506, column: 31, scope: !17390)
!17402 = !DILocation(line: 1506, column: 9, scope: !17390)
!17403 = !DILocation(line: 1506, column: 2, scope: !17390)
!17404 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !15582, file: !15582, line: 571, type: !15583, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17405)
!17405 = !{!17406}
!17406 = !DILocalVariable(name: "t", arg: 1, scope: !17404, file: !15582, line: 571, type: !1781)
!17407 = !DILocation(line: 0, scope: !17404)
!17408 = !DILocation(line: 0, scope: !15796, inlinedAt: !17409)
!17409 = distinct !DILocation(line: 574, column: 9, scope: !17404)
!17410 = !DILocation(line: 135, column: 5, scope: !17382, inlinedAt: !17409)
!17411 = !DILocation(line: 139, column: 13, scope: !17380, inlinedAt: !17409)
!17412 = !DILocation(line: 574, column: 2, scope: !17404)
!17413 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !15582, file: !15582, line: 1187, type: !15583, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17414)
!17414 = !{!17415}
!17415 = !DILocalVariable(name: "t", arg: 1, scope: !17413, file: !15582, line: 1187, type: !1781)
!17416 = !DILocation(line: 0, scope: !17413)
!17417 = !DILocation(line: 0, scope: !15796, inlinedAt: !17418)
!17418 = distinct !DILocation(line: 1190, column: 9, scope: !17413)
!17419 = !DILocation(line: 145, column: 13, scope: !17420, inlinedAt: !17418)
!17420 = distinct !DILexicalBlock(scope: !15814, file: !15582, line: 144, column: 10)
!17421 = !DILocation(line: 1190, column: 2, scope: !17413)
!17422 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2665, file: !2665, line: 1517, type: !17318, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17423)
!17423 = !{!17424}
!17424 = !DILocalVariable(name: "thread", arg: 1, scope: !17422, file: !2665, line: 1517, type: !17224)
!17425 = !DILocation(line: 0, scope: !17422)
!17426 = !DILocation(line: 1521, column: 6, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17422, file: !2665, line: 1521, column: 6)
!17428 = !DILocation(line: 1521, column: 6, scope: !17422)
!17429 = !DILocation(line: 1525, column: 6, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17422, file: !2665, line: 1525, column: 6)
!17431 = !DILocation(line: 1525, column: 37, scope: !17430)
!17432 = !DILocation(line: 1525, column: 6, scope: !17422)
!17433 = !DILocation(line: 1527, column: 20, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17435, file: !2665, line: 1527, column: 7)
!17435 = distinct !DILexicalBlock(scope: !17430, file: !2665, line: 1525, column: 42)
!17436 = !DILocation(line: 1527, column: 33, scope: !17434)
!17437 = !DILocation(line: 1527, column: 7, scope: !17435)
!17438 = !DILocation(line: 1532, column: 2, scope: !17422)
!17439 = !DILocation(line: 1533, column: 2, scope: !17422)
!17440 = !DILocation(line: 1031, column: 3, scope: !16393, inlinedAt: !17441)
!17441 = distinct !DILocation(line: 48, column: 10, scope: !16397, inlinedAt: !17442)
!17442 = distinct !DILocation(line: 1537, column: 7, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17422, file: !2665, line: 1537, column: 6)
!17444 = !DILocation(line: 0, scope: !16393, inlinedAt: !17441)
!17445 = !DILocation(line: 48, column: 9, scope: !16397, inlinedAt: !17442)
!17446 = !DILocation(line: 1537, column: 6, scope: !17422)
!17447 = !DILocation(line: 1538, column: 3, scope: !17448)
!17448 = distinct !DILexicalBlock(scope: !17443, file: !2665, line: 1537, column: 25)
!17449 = !DILocation(line: 1539, column: 2, scope: !17448)
!17450 = !DILocation(line: 1540, column: 1, scope: !17422)
!17451 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !15021, file: !15021, line: 101, type: !15867, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17452)
!17452 = !{!17453}
!17453 = !DILocalVariable(name: "thread", arg: 1, scope: !17451, file: !15021, line: 101, type: !2560)
!17454 = !DILocation(line: 0, scope: !17451)
!17455 = !DILocation(line: 103, column: 23, scope: !17451)
!17456 = !DILocation(line: 103, column: 36, scope: !17451)
!17457 = !DILocation(line: 103, column: 55, scope: !17451)
!17458 = !DILocation(line: 103, column: 2, scope: !17451)
!17459 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2665, file: !2665, line: 1567, type: !17460, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17462)
!17460 = !DISubroutineType(types: !17461)
!17461 = !{!17224}
!17462 = !{!17463}
!17463 = !DILocalVariable(name: "ret", scope: !17459, file: !2665, line: 1577, type: !17224)
!17464 = !DILocation(line: 1577, column: 30, scope: !17459)
!17465 = !DILocation(line: 0, scope: !17459)
!17466 = !DILocation(line: 1582, column: 2, scope: !17459)
!17467 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2665, file: !2665, line: 1593, type: !9637, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !639)
!17468 = !DILocation(line: 1031, column: 3, scope: !16393, inlinedAt: !17469)
!17469 = distinct !DILocation(line: 48, column: 10, scope: !16397, inlinedAt: !17470)
!17470 = distinct !DILocation(line: 1595, column: 10, scope: !17467)
!17471 = !DILocation(line: 0, scope: !16393, inlinedAt: !17469)
!17472 = !DILocation(line: 48, column: 9, scope: !16397, inlinedAt: !17470)
!17473 = !DILocation(line: 1595, column: 27, scope: !17467)
!17474 = !DILocation(line: 1595, column: 41, scope: !17467)
!17475 = !DILocation(line: 1595, column: 30, scope: !17467)
!17476 = !DILocation(line: 1595, column: 2, scope: !17467)
!17477 = distinct !DISubprogram(name: "z_thread_abort", scope: !2665, file: !2665, line: 1725, type: !15707, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17478)
!17478 = !{!17479, !17480}
!17479 = !DILocalVariable(name: "thread", arg: 1, scope: !17477, file: !2665, line: 1725, type: !2560)
!17480 = !DILocalVariable(name: "key", scope: !17477, file: !2665, line: 1727, type: !15741)
!17481 = !DILocation(line: 0, scope: !17477)
!17482 = !DILocation(line: 0, scope: !15749, inlinedAt: !17483)
!17483 = distinct !DILocation(line: 1727, column: 25, scope: !17477)
!17484 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !17485)
!17485 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !17483)
!17486 = !DILocation(line: 0, scope: !15758, inlinedAt: !17485)
!17487 = !DILocation(line: 1729, column: 20, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17477, file: !2665, line: 1729, column: 6)
!17489 = !DILocation(line: 1729, column: 33, scope: !17488)
!17490 = !DILocation(line: 1729, column: 48, scope: !17488)
!17491 = !DILocation(line: 1729, column: 6, scope: !17477)
!17492 = !DILocation(line: 0, scope: !15776, inlinedAt: !17493)
!17493 = distinct !DILocation(line: 1730, column: 3, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17488, file: !2665, line: 1729, column: 54)
!17495 = !DILocation(line: 0, scope: !15784, inlinedAt: !17496)
!17496 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !17493)
!17497 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !17496)
!17498 = !DILocation(line: 1732, column: 3, scope: !17499)
!17499 = distinct !DILexicalBlock(scope: !17494, file: !2665, line: 1732, column: 3)
!17500 = !{i64 2154930305, i64 2154930321, i64 2154930347, i64 2154930375, i64 2154930395}
!17501 = !DILocation(line: 1733, column: 3, scope: !17494)
!17502 = !DILocation(line: 1736, column: 20, scope: !17503)
!17503 = distinct !DILexicalBlock(scope: !17477, file: !2665, line: 1736, column: 6)
!17504 = !DILocation(line: 1736, column: 33, scope: !17503)
!17505 = !DILocation(line: 1736, column: 49, scope: !17503)
!17506 = !DILocation(line: 1736, column: 6, scope: !17477)
!17507 = !DILocation(line: 0, scope: !15776, inlinedAt: !17508)
!17508 = distinct !DILocation(line: 1737, column: 3, scope: !17509)
!17509 = distinct !DILexicalBlock(scope: !17503, file: !2665, line: 1736, column: 56)
!17510 = !DILocation(line: 0, scope: !15784, inlinedAt: !17511)
!17511 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !17508)
!17512 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !17511)
!17513 = !DILocation(line: 1738, column: 3, scope: !17509)
!17514 = !DILocation(line: 1775, column: 2, scope: !17477)
!17515 = !DILocation(line: 1776, column: 16, scope: !17516)
!17516 = distinct !DILexicalBlock(scope: !17477, file: !2665, line: 1776, column: 6)
!17517 = !DILocation(line: 1776, column: 13, scope: !17516)
!17518 = !DILocation(line: 1776, column: 25, scope: !17516)
!17519 = !DILocation(line: 1031, column: 3, scope: !16393, inlinedAt: !17520)
!17520 = distinct !DILocation(line: 48, column: 10, scope: !16397, inlinedAt: !17521)
!17521 = distinct !DILocation(line: 1776, column: 29, scope: !17516)
!17522 = !DILocation(line: 0, scope: !16393, inlinedAt: !17520)
!17523 = !DILocation(line: 48, column: 9, scope: !16397, inlinedAt: !17521)
!17524 = !DILocation(line: 1776, column: 6, scope: !17477)
!17525 = !DILocation(line: 0, scope: !16360, inlinedAt: !17526)
!17526 = distinct !DILocation(line: 1777, column: 3, scope: !17527)
!17527 = distinct !DILexicalBlock(scope: !17516, file: !2665, line: 1776, column: 47)
!17528 = !DILocation(line: 196, column: 9, scope: !16360, inlinedAt: !17526)
!17529 = !DILocation(line: 1779, column: 2, scope: !17527)
!17530 = !DILocation(line: 0, scope: !15776, inlinedAt: !17531)
!17531 = distinct !DILocation(line: 1780, column: 2, scope: !17477)
!17532 = !DILocation(line: 0, scope: !15784, inlinedAt: !17533)
!17533 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !17531)
!17534 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !17533)
!17535 = !DILocation(line: 1781, column: 1, scope: !17477)
!17536 = distinct !DISubprogram(name: "end_thread", scope: !2665, file: !2665, line: 1690, type: !15707, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17537)
!17537 = !{!17538}
!17538 = !DILocalVariable(name: "thread", arg: 1, scope: !17536, file: !2665, line: 1690, type: !2560)
!17539 = !DILocation(line: 0, scope: !17536)
!17540 = !DILocation(line: 1695, column: 20, scope: !17541)
!17541 = distinct !DILexicalBlock(scope: !17536, file: !2665, line: 1695, column: 6)
!17542 = !DILocation(line: 1695, column: 33, scope: !17541)
!17543 = !DILocation(line: 1695, column: 49, scope: !17541)
!17544 = !DILocation(line: 1695, column: 6, scope: !17536)
!17545 = !DILocation(line: 1697, column: 29, scope: !17546)
!17546 = distinct !DILexicalBlock(scope: !17541, file: !2665, line: 1695, column: 56)
!17547 = !DILocation(line: 1698, column: 7, scope: !17548)
!17548 = distinct !DILexicalBlock(scope: !17546, file: !2665, line: 1698, column: 7)
!17549 = !DILocation(line: 1698, column: 7, scope: !17546)
!17550 = !DILocation(line: 0, scope: !15918, inlinedAt: !17551)
!17551 = distinct !DILocation(line: 1699, column: 4, scope: !17552)
!17552 = distinct !DILexicalBlock(scope: !17548, file: !2665, line: 1698, column: 35)
!17553 = !DILocation(line: 266, column: 28, scope: !15918, inlinedAt: !17551)
!17554 = !DILocation(line: 0, scope: !15926, inlinedAt: !17555)
!17555 = distinct !DILocation(line: 268, column: 3, scope: !15930, inlinedAt: !17551)
!17556 = !DILocation(line: 234, column: 2, scope: !15926, inlinedAt: !17555)
!17557 = !DILocation(line: 1700, column: 3, scope: !17552)
!17558 = !DILocation(line: 1701, column: 20, scope: !17559)
!17559 = distinct !DILexicalBlock(scope: !17546, file: !2665, line: 1701, column: 7)
!17560 = !DILocation(line: 1701, column: 30, scope: !17559)
!17561 = !DILocation(line: 1701, column: 7, scope: !17546)
!17562 = !DILocation(line: 1702, column: 4, scope: !17563)
!17563 = distinct !DILexicalBlock(scope: !17559, file: !2665, line: 1701, column: 39)
!17564 = !DILocation(line: 1703, column: 3, scope: !17563)
!17565 = !DILocation(line: 1704, column: 9, scope: !17546)
!17566 = !DILocation(line: 1705, column: 23, scope: !17546)
!17567 = !DILocation(line: 1705, column: 3, scope: !17546)
!17568 = !DILocation(line: 1706, column: 3, scope: !17546)
!17569 = !DILocation(line: 1722, column: 2, scope: !17546)
!17570 = !DILocation(line: 1723, column: 1, scope: !17536)
!17571 = distinct !DISubprogram(name: "unpend_all", scope: !2665, file: !2665, line: 1674, type: !17572, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17574)
!17572 = !DISubroutineType(types: !17573)
!17573 = !{null, !2591}
!17574 = !{!17575, !17576}
!17575 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17571, file: !2665, line: 1674, type: !2591)
!17576 = !DILocalVariable(name: "thread", scope: !17571, file: !2665, line: 1676, type: !2560)
!17577 = !DILocation(line: 0, scope: !17571)
!17578 = !DILocation(line: 1678, column: 19, scope: !17571)
!17579 = !DILocation(line: 1678, column: 41, scope: !17571)
!17580 = !DILocation(line: 1678, column: 2, scope: !17571)
!17581 = !DILocation(line: 1679, column: 3, scope: !17582)
!17582 = distinct !DILexicalBlock(scope: !17571, file: !2665, line: 1678, column: 50)
!17583 = !DILocation(line: 1680, column: 9, scope: !17582)
!17584 = !DILocalVariable(name: "thread", arg: 1, scope: !17585, file: !15041, line: 65, type: !2560)
!17585 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15041, file: !15041, line: 65, type: !17586, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17588)
!17586 = !DISubroutineType(types: !17587)
!17587 = !{null, !2560, !32}
!17588 = !{!17584, !17589}
!17589 = !DILocalVariable(name: "value", arg: 2, scope: !17585, file: !15041, line: 65, type: !32)
!17590 = !DILocation(line: 0, scope: !17585, inlinedAt: !17591)
!17591 = distinct !DILocation(line: 1681, column: 3, scope: !17582)
!17592 = !DILocation(line: 67, column: 15, scope: !17585, inlinedAt: !17591)
!17593 = !DILocation(line: 67, column: 33, scope: !17585, inlinedAt: !17591)
!17594 = !DILocation(line: 1682, column: 3, scope: !17582)
!17595 = distinct !{!17595, !17580, !17596}
!17596 = !DILocation(line: 1683, column: 2, scope: !17571)
!17597 = !DILocation(line: 1684, column: 1, scope: !17571)
!17598 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2665, file: !2665, line: 1794, type: !17599, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17601)
!17599 = !DISubroutineType(types: !17600)
!17600 = !{!125, !2560, !16540}
!17601 = !{!17602, !17603, !17604, !17605}
!17602 = !DILocalVariable(name: "thread", arg: 1, scope: !17598, file: !2665, line: 1794, type: !2560)
!17603 = !DILocalVariable(name: "timeout", arg: 2, scope: !17598, file: !2665, line: 1794, type: !16540)
!17604 = !DILocalVariable(name: "key", scope: !17598, file: !2665, line: 1796, type: !15741)
!17605 = !DILocalVariable(name: "ret", scope: !17598, file: !2665, line: 1797, type: !125)
!17606 = !DILocation(line: 0, scope: !17598)
!17607 = !DILocation(line: 0, scope: !15749, inlinedAt: !17608)
!17608 = distinct !DILocation(line: 1796, column: 25, scope: !17598)
!17609 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !17610)
!17610 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !17608)
!17611 = !DILocation(line: 0, scope: !15758, inlinedAt: !17610)
!17612 = !DILocation(line: 1801, column: 20, scope: !17613)
!17613 = distinct !DILexicalBlock(scope: !17598, file: !2665, line: 1801, column: 6)
!17614 = !DILocation(line: 1801, column: 33, scope: !17613)
!17615 = !DILocation(line: 1801, column: 49, scope: !17613)
!17616 = !DILocation(line: 1801, column: 6, scope: !17598)
!17617 = !DILocation(line: 1803, column: 13, scope: !17618)
!17618 = distinct !DILexicalBlock(scope: !17613, file: !2665, line: 1803, column: 13)
!17619 = !DILocation(line: 1803, column: 13, scope: !17613)
!17620 = !DILocation(line: 1805, column: 24, scope: !17621)
!17621 = distinct !DILexicalBlock(scope: !17618, file: !2665, line: 1805, column: 13)
!17622 = !DILocation(line: 1805, column: 21, scope: !17621)
!17623 = !DILocation(line: 1805, column: 34, scope: !17621)
!17624 = !DILocation(line: 1806, column: 20, scope: !17621)
!17625 = !DILocation(line: 1806, column: 44, scope: !17621)
!17626 = !DILocation(line: 1806, column: 30, scope: !17621)
!17627 = !DILocation(line: 1805, column: 13, scope: !17618)
!17628 = !DILocation(line: 1810, column: 42, scope: !17629)
!17629 = distinct !DILexicalBlock(scope: !17621, file: !2665, line: 1808, column: 9)
!17630 = !DILocation(line: 1810, column: 3, scope: !17629)
!17631 = !DILocation(line: 1811, column: 22, scope: !17629)
!17632 = !DILocation(line: 1811, column: 3, scope: !17629)
!17633 = !DILocation(line: 0, scope: !16360, inlinedAt: !17634)
!17634 = distinct !DILocation(line: 1814, column: 9, scope: !17629)
!17635 = !DILocation(line: 196, column: 9, scope: !16360, inlinedAt: !17634)
!17636 = !DILocation(line: 1817, column: 3, scope: !17629)
!17637 = !DILocation(line: 0, scope: !17613)
!17638 = !DILocation(line: 0, scope: !15776, inlinedAt: !17639)
!17639 = distinct !DILocation(line: 1822, column: 2, scope: !17598)
!17640 = !DILocation(line: 0, scope: !15784, inlinedAt: !17641)
!17641 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !17639)
!17642 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !17641)
!17643 = !DILocation(line: 1823, column: 2, scope: !17598)
!17644 = !DILocation(line: 1824, column: 1, scope: !17598)
!17645 = distinct !DISubprogram(name: "z_sched_wake", scope: !2665, file: !2665, line: 1882, type: !17646, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17648)
!17646 = !DISubroutineType(types: !17647)
!17647 = !{!153, !2591, !125, !124}
!17648 = !{!17649, !17650, !17651, !17652, !17653, !17654, !17656}
!17649 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17645, file: !2665, line: 1882, type: !2591)
!17650 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17645, file: !2665, line: 1882, type: !125)
!17651 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17645, file: !2665, line: 1882, type: !124)
!17652 = !DILocalVariable(name: "thread", scope: !17645, file: !2665, line: 1884, type: !2560)
!17653 = !DILocalVariable(name: "ret", scope: !17645, file: !2665, line: 1885, type: !153)
!17654 = !DILocalVariable(name: "__i", scope: !17655, file: !2665, line: 1887, type: !15741)
!17655 = distinct !DILexicalBlock(scope: !17645, file: !2665, line: 1887, column: 2)
!17656 = !DILocalVariable(name: "__key", scope: !17655, file: !2665, line: 1887, type: !15741)
!17657 = !DILocation(line: 0, scope: !17645)
!17658 = !DILocation(line: 0, scope: !17655)
!17659 = !DILocation(line: 0, scope: !15749, inlinedAt: !17660)
!17660 = distinct !DILocation(line: 1887, column: 2, scope: !17655)
!17661 = !DILocation(line: 55, column: 2, scope: !15758, inlinedAt: !17662)
!17662 = distinct !DILocation(line: 145, column: 10, scope: !15749, inlinedAt: !17660)
!17663 = !DILocation(line: 0, scope: !15758, inlinedAt: !17662)
!17664 = !DILocation(line: 1888, column: 12, scope: !17665)
!17665 = distinct !DILexicalBlock(scope: !17666, file: !2665, line: 1887, column: 26)
!17666 = distinct !DILexicalBlock(scope: !17655, file: !2665, line: 1887, column: 2)
!17667 = !DILocation(line: 1890, column: 14, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17665, file: !2665, line: 1890, column: 7)
!17669 = !DILocation(line: 1890, column: 7, scope: !17665)
!17670 = !DILocalVariable(name: "thread", arg: 1, scope: !17671, file: !17672, line: 134, type: !2560)
!17671 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17672, file: !17672, line: 134, type: !17673, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17675)
!17672 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17673 = !DISubroutineType(types: !17674)
!17674 = !{null, !2560, !32, !124}
!17675 = !{!17670, !17676, !17677}
!17676 = !DILocalVariable(name: "value", arg: 2, scope: !17671, file: !17672, line: 135, type: !32)
!17677 = !DILocalVariable(name: "data", arg: 3, scope: !17671, file: !17672, line: 136, type: !124)
!17678 = !DILocation(line: 0, scope: !17671, inlinedAt: !17679)
!17679 = distinct !DILocation(line: 1891, column: 4, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17668, file: !2665, line: 1890, column: 23)
!17681 = !DILocation(line: 0, scope: !17585, inlinedAt: !17682)
!17682 = distinct !DILocation(line: 138, column: 2, scope: !17671, inlinedAt: !17679)
!17683 = !DILocation(line: 67, column: 15, scope: !17585, inlinedAt: !17682)
!17684 = !DILocation(line: 67, column: 33, scope: !17585, inlinedAt: !17682)
!17685 = !DILocation(line: 139, column: 15, scope: !17671, inlinedAt: !17679)
!17686 = !DILocation(line: 139, column: 25, scope: !17671, inlinedAt: !17679)
!17687 = !DILocation(line: 1894, column: 4, scope: !17680)
!17688 = !DILocation(line: 1895, column: 10, scope: !17680)
!17689 = !DILocation(line: 1896, column: 4, scope: !17680)
!17690 = !DILocation(line: 1898, column: 3, scope: !17680)
!17691 = !DILocation(line: 0, scope: !15776, inlinedAt: !17692)
!17692 = distinct !DILocation(line: 1887, column: 2, scope: !17666)
!17693 = !DILocation(line: 0, scope: !15784, inlinedAt: !17694)
!17694 = distinct !DILocation(line: 215, column: 2, scope: !15776, inlinedAt: !17692)
!17695 = !DILocation(line: 95, column: 2, scope: !15784, inlinedAt: !17694)
!17696 = !DILocation(line: 1901, column: 2, scope: !17645)
!17697 = distinct !DISubprogram(name: "z_sched_wait", scope: !2665, file: !2665, line: 1904, type: !17698, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !17701)
!17698 = !DISubroutineType(types: !17699)
!17699 = !{!125, !15752, !15741, !2591, !16540, !17700}
!17700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!17701 = !{!17702, !17703, !17704, !17705, !17706, !17707}
!17702 = !DILocalVariable(name: "lock", arg: 1, scope: !17697, file: !2665, line: 1904, type: !15752)
!17703 = !DILocalVariable(name: "key", arg: 2, scope: !17697, file: !2665, line: 1904, type: !15741)
!17704 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17697, file: !2665, line: 1905, type: !2591)
!17705 = !DILocalVariable(name: "timeout", arg: 4, scope: !17697, file: !2665, line: 1905, type: !16540)
!17706 = !DILocalVariable(name: "data", arg: 5, scope: !17697, file: !2665, line: 1905, type: !17700)
!17707 = !DILocalVariable(name: "ret", scope: !17697, file: !2665, line: 1907, type: !125)
!17708 = !DILocation(line: 0, scope: !17697)
!17709 = !DILocation(line: 1907, column: 12, scope: !17697)
!17710 = !DILocation(line: 1909, column: 11, scope: !17711)
!17711 = distinct !DILexicalBlock(scope: !17697, file: !2665, line: 1909, column: 6)
!17712 = !DILocation(line: 1909, column: 6, scope: !17697)
!17713 = !DILocation(line: 1910, column: 11, scope: !17714)
!17714 = distinct !DILexicalBlock(scope: !17711, file: !2665, line: 1909, column: 20)
!17715 = !DILocation(line: 1910, column: 26, scope: !17714)
!17716 = !DILocation(line: 1910, column: 9, scope: !17714)
!17717 = !DILocation(line: 1911, column: 2, scope: !17714)
!17718 = !DILocation(line: 1912, column: 2, scope: !17697)
!17719 = distinct !DISubprogram(name: "z_data_copy", scope: !17720, file: !17720, line: 22, type: !3326, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3309, retainedNodes: !639)
!17720 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17721 = !DILocation(line: 24, column: 2, scope: !17719)
!17722 = !DILocation(line: 27, column: 2, scope: !17719)
!17723 = !DILocation(line: 71, column: 1, scope: !17719)
!17724 = distinct !DISubprogram(name: "z_add_timeout", scope: !2702, file: !2702, line: 88, type: !17725, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17731)
!17725 = !DISubroutineType(types: !17726)
!17726 = !{null, !2675, !2694, !17727}
!17727 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1915, line: 67, baseType: !17728)
!17728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1915, line: 65, size: 64, elements: !17729)
!17729 = !{!17730}
!17730 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17728, file: !1915, line: 66, baseType: !1914, size: 64)
!17731 = !{!17732, !17733, !17734, !17735, !17741, !17742, !17745, !17748}
!17732 = !DILocalVariable(name: "to", arg: 1, scope: !17724, file: !2702, line: 88, type: !2675)
!17733 = !DILocalVariable(name: "fn", arg: 2, scope: !17724, file: !2702, line: 88, type: !2694)
!17734 = !DILocalVariable(name: "timeout", arg: 3, scope: !17724, file: !2702, line: 89, type: !17727)
!17735 = !DILocalVariable(name: "__i", scope: !17736, file: !2702, line: 102, type: !17737)
!17736 = distinct !DILexicalBlock(scope: !17724, file: !2702, line: 102, column: 2)
!17737 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !17738)
!17738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !17739)
!17739 = !{!17740}
!17740 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17738, file: !638, line: 33, baseType: !125, size: 32)
!17741 = !DILocalVariable(name: "__key", scope: !17736, file: !2702, line: 102, type: !17737)
!17742 = !DILocalVariable(name: "t", scope: !17743, file: !2702, line: 103, type: !2675)
!17743 = distinct !DILexicalBlock(scope: !17744, file: !2702, line: 102, column: 24)
!17744 = distinct !DILexicalBlock(scope: !17736, file: !2702, line: 102, column: 2)
!17745 = !DILocalVariable(name: "ticks", scope: !17746, file: !2702, line: 107, type: !1914)
!17746 = distinct !DILexicalBlock(scope: !17747, file: !2702, line: 106, column: 39)
!17747 = distinct !DILexicalBlock(scope: !17743, file: !2702, line: 105, column: 7)
!17748 = !DILocalVariable(name: "next_time", scope: !17749, file: !2702, line: 137, type: !887)
!17749 = distinct !DILexicalBlock(scope: !17750, file: !2702, line: 127, column: 22)
!17750 = distinct !DILexicalBlock(scope: !17743, file: !2702, line: 127, column: 7)
!17751 = !DILocation(line: 0, scope: !17724)
!17752 = !DILocation(line: 91, column: 6, scope: !17753)
!17753 = distinct !DILexicalBlock(scope: !17724, file: !2702, line: 91, column: 6)
!17754 = !DILocation(line: 91, column: 6, scope: !17724)
!17755 = !DILocation(line: 100, column: 6, scope: !17724)
!17756 = !DILocation(line: 100, column: 9, scope: !17724)
!17757 = !DILocation(line: 0, scope: !17736)
!17758 = !DILocalVariable(name: "l", arg: 1, scope: !17759, file: !638, line: 136, type: !17762)
!17759 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !17760, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17763)
!17760 = !DISubroutineType(types: !17761)
!17761 = !{!17737, !17762}
!17762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!17763 = !{!17758, !17764}
!17764 = !DILocalVariable(name: "k", scope: !17759, file: !638, line: 139, type: !17737)
!17765 = !DILocation(line: 0, scope: !17759, inlinedAt: !17766)
!17766 = distinct !DILocation(line: 102, column: 2, scope: !17736)
!17767 = !DILocation(line: 55, column: 2, scope: !17768, inlinedAt: !17772)
!17768 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6862, file: !6862, line: 42, type: !6863, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17769)
!17769 = !{!17770, !17771}
!17770 = !DILocalVariable(name: "key", scope: !17768, file: !6862, line: 44, type: !32)
!17771 = !DILocalVariable(name: "tmp", scope: !17768, file: !6862, line: 53, type: !32)
!17772 = distinct !DILocation(line: 145, column: 10, scope: !17759, inlinedAt: !17766)
!17773 = !{i64 2044318}
!17774 = !DILocation(line: 0, scope: !17768, inlinedAt: !17772)
!17775 = !DILocation(line: 106, column: 33, scope: !17747)
!17776 = !DILocation(line: 105, column: 7, scope: !17743)
!17777 = !DILocation(line: 107, column: 50, scope: !17746)
!17778 = !DILocation(line: 107, column: 48, scope: !17746)
!17779 = !DILocation(line: 0, scope: !17746)
!17780 = !DILocation(line: 109, column: 17, scope: !17746)
!17781 = !DILocation(line: 110, column: 3, scope: !17746)
!17782 = !DILocation(line: 111, column: 31, scope: !17783)
!17783 = distinct !DILexicalBlock(scope: !17747, file: !2702, line: 110, column: 10)
!17784 = !DILocation(line: 111, column: 37, scope: !17783)
!17785 = !DILocation(line: 111, column: 35, scope: !17783)
!17786 = !DILocation(line: 0, scope: !17747)
!17787 = !DILocation(line: 109, column: 8, scope: !17746)
!17788 = !DILocation(line: 109, column: 15, scope: !17746)
!17789 = !DILocation(line: 114, column: 12, scope: !17790)
!17790 = distinct !DILexicalBlock(scope: !17743, file: !2702, line: 114, column: 3)
!17791 = !DILocation(line: 0, scope: !17743)
!17792 = !DILocation(line: 114, column: 3, scope: !17790)
!17793 = !DILocation(line: 115, column: 24, scope: !17794)
!17794 = distinct !DILexicalBlock(scope: !17795, file: !2702, line: 115, column: 8)
!17795 = distinct !DILexicalBlock(scope: !17796, file: !2702, line: 114, column: 45)
!17796 = distinct !DILexicalBlock(scope: !17790, file: !2702, line: 114, column: 3)
!17797 = !DILocation(line: 115, column: 11, scope: !17794)
!17798 = !DILocation(line: 115, column: 18, scope: !17794)
!17799 = !DILocation(line: 115, column: 8, scope: !17795)
!17800 = !DILocation(line: 116, column: 15, scope: !17801)
!17801 = distinct !DILexicalBlock(scope: !17794, file: !2702, line: 115, column: 32)
!17802 = !DILocation(line: 117, column: 26, scope: !17801)
!17803 = !DILocation(line: 117, column: 37, scope: !17801)
!17804 = !DILocation(line: 117, column: 5, scope: !17801)
!17805 = !DILocation(line: 123, column: 7, scope: !17743)
!17806 = !DILocation(line: 120, column: 15, scope: !17795)
!17807 = !DILocation(line: 114, column: 36, scope: !17796)
!17808 = distinct !{!17808, !17792, !17809}
!17809 = !DILocation(line: 121, column: 3, scope: !17790)
!17810 = !DILocation(line: 124, column: 41, scope: !17811)
!17811 = distinct !DILexicalBlock(scope: !17812, file: !2702, line: 123, column: 18)
!17812 = distinct !DILexicalBlock(scope: !17743, file: !2702, line: 123, column: 7)
!17813 = !DILocation(line: 124, column: 4, scope: !17811)
!17814 = !DILocation(line: 125, column: 3, scope: !17811)
!17815 = !DILocation(line: 127, column: 13, scope: !17750)
!17816 = !DILocation(line: 127, column: 10, scope: !17750)
!17817 = !DILocation(line: 127, column: 7, scope: !17743)
!17818 = !DILocation(line: 137, column: 24, scope: !17749)
!17819 = !DILocation(line: 0, scope: !17749)
!17820 = !DILocation(line: 139, column: 18, scope: !17821)
!17821 = distinct !DILexicalBlock(scope: !17749, file: !2702, line: 139, column: 8)
!17822 = !DILocation(line: 139, column: 23, scope: !17821)
!17823 = !DILocation(line: 141, column: 5, scope: !17824)
!17824 = distinct !DILexicalBlock(scope: !17821, file: !2702, line: 140, column: 48)
!17825 = !DILocation(line: 142, column: 4, scope: !17824)
!17826 = !DILocalVariable(name: "key", arg: 2, scope: !17827, file: !638, line: 190, type: !17737)
!17827 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !17828, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17830)
!17828 = !DISubroutineType(types: !17829)
!17829 = !{null, !17762, !17737}
!17830 = !{!17831, !17826}
!17831 = !DILocalVariable(name: "l", arg: 1, scope: !17827, file: !638, line: 189, type: !17762)
!17832 = !DILocation(line: 0, scope: !17827, inlinedAt: !17833)
!17833 = distinct !DILocation(line: 102, column: 2, scope: !17744)
!17834 = !DILocalVariable(name: "key", arg: 1, scope: !17835, file: !6862, line: 84, type: !32)
!17835 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6862, file: !6862, line: 84, type: !6873, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17836)
!17836 = !{!17834}
!17837 = !DILocation(line: 0, scope: !17835, inlinedAt: !17838)
!17838 = distinct !DILocation(line: 215, column: 2, scope: !17827, inlinedAt: !17833)
!17839 = !DILocation(line: 95, column: 2, scope: !17835, inlinedAt: !17838)
!17840 = !{i64 2045135}
!17841 = !DILocation(line: 148, column: 1, scope: !17724)
!17842 = distinct !DISubprogram(name: "elapsed", scope: !2702, file: !2702, line: 62, type: !17843, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !639)
!17843 = !DISubroutineType(types: !17844)
!17844 = !{!887}
!17845 = !DILocation(line: 64, column: 9, scope: !17842)
!17846 = !DILocation(line: 64, column: 28, scope: !17842)
!17847 = !DILocation(line: 64, column: 35, scope: !17842)
!17848 = !DILocation(line: 64, column: 2, scope: !17842)
!17849 = distinct !DISubprogram(name: "first", scope: !2702, file: !2702, line: 39, type: !17850, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17852)
!17850 = !DISubroutineType(types: !17851)
!17851 = !{!2675}
!17852 = !{!17853}
!17853 = !DILocalVariable(name: "t", scope: !17849, file: !2702, line: 41, type: !17854)
!17854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 32)
!17855 = !DILocation(line: 41, column: 19, scope: !17849)
!17856 = !DILocation(line: 0, scope: !17849)
!17857 = !DILocation(line: 43, column: 9, scope: !17849)
!17858 = !DILocation(line: 43, column: 2, scope: !17849)
!17859 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !17860, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17862)
!17860 = !DISubroutineType(types: !17861)
!17861 = !{null, !17854, !17854}
!17862 = !{!17863, !17864, !17865}
!17863 = !DILocalVariable(name: "successor", arg: 1, scope: !17859, file: !541, line: 443, type: !17854)
!17864 = !DILocalVariable(name: "node", arg: 2, scope: !17859, file: !541, line: 443, type: !17854)
!17865 = !DILocalVariable(name: "prev", scope: !17859, file: !541, line: 445, type: !17866)
!17866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17854)
!17867 = !DILocation(line: 0, scope: !17859)
!17868 = !DILocation(line: 445, column: 39, scope: !17859)
!17869 = !DILocation(line: 447, column: 8, scope: !17859)
!17870 = !DILocation(line: 447, column: 13, scope: !17859)
!17871 = !DILocation(line: 448, column: 8, scope: !17859)
!17872 = !DILocation(line: 448, column: 13, scope: !17859)
!17873 = !DILocation(line: 449, column: 8, scope: !17859)
!17874 = !DILocation(line: 449, column: 13, scope: !17859)
!17875 = !DILocation(line: 450, column: 18, scope: !17859)
!17876 = !DILocation(line: 451, column: 1, scope: !17859)
!17877 = distinct !DISubprogram(name: "next", scope: !2702, file: !2702, line: 46, type: !17878, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17880)
!17878 = !DISubroutineType(types: !17879)
!17879 = !{!2675, !2675}
!17880 = !{!17881, !17882}
!17881 = !DILocalVariable(name: "t", arg: 1, scope: !17877, file: !2702, line: 46, type: !2675)
!17882 = !DILocalVariable(name: "n", scope: !17877, file: !2702, line: 48, type: !17854)
!17883 = !DILocation(line: 0, scope: !17877)
!17884 = !DILocation(line: 48, column: 58, scope: !17877)
!17885 = !DILocation(line: 48, column: 19, scope: !17877)
!17886 = !DILocation(line: 50, column: 9, scope: !17877)
!17887 = !DILocation(line: 50, column: 2, scope: !17877)
!17888 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !17889, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17892)
!17889 = !DISubroutineType(types: !17890)
!17890 = !{null, !17891, !17854}
!17891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 32)
!17892 = !{!17893, !17894, !17895}
!17893 = !DILocalVariable(name: "list", arg: 1, scope: !17888, file: !541, line: 404, type: !17891)
!17894 = !DILocalVariable(name: "node", arg: 2, scope: !17888, file: !541, line: 404, type: !17854)
!17895 = !DILocalVariable(name: "tail", scope: !17888, file: !541, line: 406, type: !17866)
!17896 = !DILocation(line: 0, scope: !17888)
!17897 = !DILocation(line: 406, column: 34, scope: !17888)
!17898 = !DILocation(line: 408, column: 8, scope: !17888)
!17899 = !DILocation(line: 408, column: 13, scope: !17888)
!17900 = !DILocation(line: 409, column: 8, scope: !17888)
!17901 = !DILocation(line: 409, column: 13, scope: !17888)
!17902 = !DILocation(line: 411, column: 8, scope: !17888)
!17903 = !DILocation(line: 411, column: 13, scope: !17888)
!17904 = !DILocation(line: 412, column: 13, scope: !17888)
!17905 = !DILocation(line: 413, column: 1, scope: !17888)
!17906 = distinct !DISubprogram(name: "next_timeout", scope: !2702, file: !2702, line: 67, type: !17843, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17907)
!17907 = !{!17908, !17909, !17910}
!17908 = !DILocalVariable(name: "to", scope: !17906, file: !2702, line: 69, type: !2675)
!17909 = !DILocalVariable(name: "ticks_elapsed", scope: !17906, file: !2702, line: 70, type: !887)
!17910 = !DILocalVariable(name: "ret", scope: !17906, file: !2702, line: 71, type: !887)
!17911 = !DILocation(line: 69, column: 24, scope: !17906)
!17912 = !DILocation(line: 0, scope: !17906)
!17913 = !DILocation(line: 70, column: 26, scope: !17906)
!17914 = !DILocation(line: 73, column: 10, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17906, file: !2702, line: 73, column: 6)
!17916 = !DILocation(line: 73, column: 19, scope: !17915)
!17917 = !DILocation(line: 74, column: 21, scope: !17915)
!17918 = !DILocation(line: 74, column: 30, scope: !17915)
!17919 = !DILocation(line: 74, column: 28, scope: !17915)
!17920 = !DILocation(line: 74, column: 45, scope: !17915)
!17921 = !DILocation(line: 73, column: 6, scope: !17906)
!17922 = !DILocation(line: 77, column: 9, scope: !17923)
!17923 = distinct !DILexicalBlock(scope: !17915, file: !2702, line: 76, column: 9)
!17924 = !DILocation(line: 0, scope: !17915)
!17925 = !DILocation(line: 81, column: 20, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17906, file: !2702, line: 81, column: 6)
!17927 = !DILocation(line: 81, column: 6, scope: !17926)
!17928 = !DILocation(line: 81, column: 32, scope: !17926)
!17929 = !DILocation(line: 85, column: 2, scope: !17906)
!17930 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !17931, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17933)
!17931 = !DISubroutineType(types: !17932)
!17932 = !{!17854, !17891, !17854}
!17933 = !{!17934, !17935}
!17934 = !DILocalVariable(name: "list", arg: 1, scope: !17930, file: !541, line: 341, type: !17891)
!17935 = !DILocalVariable(name: "node", arg: 2, scope: !17930, file: !541, line: 342, type: !17854)
!17936 = !DILocation(line: 0, scope: !17930)
!17937 = !DILocation(line: 344, column: 15, scope: !17930)
!17938 = !DILocation(line: 344, column: 9, scope: !17930)
!17939 = !DILocation(line: 344, column: 26, scope: !17930)
!17940 = !DILocation(line: 344, column: 2, scope: !17930)
!17941 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !17931, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17942)
!17942 = !{!17943, !17944}
!17943 = !DILocalVariable(name: "list", arg: 1, scope: !17941, file: !541, line: 325, type: !17891)
!17944 = !DILocalVariable(name: "node", arg: 2, scope: !17941, file: !541, line: 326, type: !17854)
!17945 = !DILocation(line: 0, scope: !17941)
!17946 = !DILocation(line: 328, column: 24, scope: !17941)
!17947 = !DILocation(line: 328, column: 15, scope: !17941)
!17948 = !DILocation(line: 328, column: 9, scope: !17941)
!17949 = !DILocation(line: 328, column: 45, scope: !17941)
!17950 = !DILocation(line: 328, column: 2, scope: !17941)
!17951 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !17952, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17954)
!17952 = !DISubroutineType(types: !17953)
!17953 = !{!17854, !17891}
!17954 = !{!17955}
!17955 = !DILocalVariable(name: "list", arg: 1, scope: !17951, file: !541, line: 294, type: !17891)
!17956 = !DILocation(line: 0, scope: !17951)
!17957 = !DILocation(line: 296, column: 9, scope: !17951)
!17958 = !DILocation(line: 296, column: 2, scope: !17951)
!17959 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !17960, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17962)
!17960 = !DISubroutineType(types: !17961)
!17961 = !{!153, !17891}
!17962 = !{!17963}
!17963 = !DILocalVariable(name: "list", arg: 1, scope: !17959, file: !541, line: 266, type: !17891)
!17964 = !DILocation(line: 0, scope: !17959)
!17965 = !DILocation(line: 268, column: 15, scope: !17959)
!17966 = !DILocation(line: 268, column: 20, scope: !17959)
!17967 = !DILocation(line: 268, column: 2, scope: !17959)
!17968 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2702, file: !2702, line: 150, type: !17969, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !17971)
!17969 = !DISubroutineType(types: !17970)
!17970 = !{!125, !2675}
!17971 = !{!17972, !17973, !17974, !17976}
!17972 = !DILocalVariable(name: "to", arg: 1, scope: !17968, file: !2702, line: 150, type: !2675)
!17973 = !DILocalVariable(name: "ret", scope: !17968, file: !2702, line: 152, type: !125)
!17974 = !DILocalVariable(name: "__i", scope: !17975, file: !2702, line: 154, type: !17737)
!17975 = distinct !DILexicalBlock(scope: !17968, file: !2702, line: 154, column: 2)
!17976 = !DILocalVariable(name: "__key", scope: !17975, file: !2702, line: 154, type: !17737)
!17977 = !DILocation(line: 0, scope: !17968)
!17978 = !DILocation(line: 0, scope: !17975)
!17979 = !DILocation(line: 0, scope: !17759, inlinedAt: !17980)
!17980 = distinct !DILocation(line: 154, column: 2, scope: !17975)
!17981 = !DILocation(line: 55, column: 2, scope: !17768, inlinedAt: !17982)
!17982 = distinct !DILocation(line: 145, column: 10, scope: !17759, inlinedAt: !17980)
!17983 = !DILocation(line: 0, scope: !17768, inlinedAt: !17982)
!17984 = !DILocation(line: 155, column: 7, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17986, file: !2702, line: 155, column: 7)
!17986 = distinct !DILexicalBlock(scope: !17987, file: !2702, line: 154, column: 24)
!17987 = distinct !DILexicalBlock(scope: !17975, file: !2702, line: 154, column: 2)
!17988 = !DILocation(line: 155, column: 7, scope: !17986)
!17989 = !DILocation(line: 156, column: 4, scope: !17990)
!17990 = distinct !DILexicalBlock(scope: !17985, file: !2702, line: 155, column: 39)
!17991 = !DILocation(line: 158, column: 3, scope: !17990)
!17992 = !DILocation(line: 0, scope: !17827, inlinedAt: !17993)
!17993 = distinct !DILocation(line: 154, column: 2, scope: !17987)
!17994 = !DILocation(line: 0, scope: !17835, inlinedAt: !17995)
!17995 = distinct !DILocation(line: 215, column: 2, scope: !17827, inlinedAt: !17993)
!17996 = !DILocation(line: 95, column: 2, scope: !17835, inlinedAt: !17995)
!17997 = !DILocation(line: 161, column: 2, scope: !17968)
!17998 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !17999, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18003)
!17999 = !DISubroutineType(types: !18000)
!18000 = !{!153, !18001}
!18001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18002, size: 32)
!18002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2679)
!18003 = !{!18004}
!18004 = !DILocalVariable(name: "node", arg: 1, scope: !17998, file: !541, line: 225, type: !18001)
!18005 = !DILocation(line: 0, scope: !17998)
!18006 = !DILocation(line: 227, column: 15, scope: !17998)
!18007 = !DILocation(line: 227, column: 20, scope: !17998)
!18008 = !DILocation(line: 227, column: 2, scope: !17998)
!18009 = distinct !DISubprogram(name: "remove_timeout", scope: !2702, file: !2702, line: 53, type: !2696, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18010)
!18010 = !{!18011}
!18011 = !DILocalVariable(name: "t", arg: 1, scope: !18009, file: !2702, line: 53, type: !2675)
!18012 = !DILocation(line: 0, scope: !18009)
!18013 = !DILocation(line: 55, column: 6, scope: !18014)
!18014 = distinct !DILexicalBlock(scope: !18009, file: !2702, line: 55, column: 6)
!18015 = !DILocation(line: 55, column: 14, scope: !18014)
!18016 = !DILocation(line: 55, column: 6, scope: !18009)
!18017 = !DILocation(line: 56, column: 25, scope: !18018)
!18018 = distinct !DILexicalBlock(scope: !18014, file: !2702, line: 55, column: 23)
!18019 = !DILocation(line: 56, column: 12, scope: !18018)
!18020 = !DILocation(line: 56, column: 19, scope: !18018)
!18021 = !DILocation(line: 57, column: 2, scope: !18018)
!18022 = !DILocation(line: 59, column: 23, scope: !18009)
!18023 = !DILocation(line: 59, column: 2, scope: !18009)
!18024 = !DILocation(line: 60, column: 1, scope: !18009)
!18025 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !18026, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18028)
!18026 = !DISubroutineType(types: !18027)
!18027 = !{null, !17854}
!18028 = !{!18029, !18030, !18031}
!18029 = !DILocalVariable(name: "node", arg: 1, scope: !18025, file: !541, line: 496, type: !17854)
!18030 = !DILocalVariable(name: "prev", scope: !18025, file: !541, line: 498, type: !17866)
!18031 = !DILocalVariable(name: "next", scope: !18025, file: !541, line: 499, type: !17866)
!18032 = !DILocation(line: 0, scope: !18025)
!18033 = !DILocation(line: 498, column: 34, scope: !18025)
!18034 = !DILocation(line: 499, column: 34, scope: !18025)
!18035 = !DILocation(line: 501, column: 8, scope: !18025)
!18036 = !DILocation(line: 501, column: 13, scope: !18025)
!18037 = !DILocation(line: 502, column: 8, scope: !18025)
!18038 = !DILocation(line: 502, column: 13, scope: !18025)
!18039 = !DILocation(line: 503, column: 2, scope: !18025)
!18040 = !DILocation(line: 504, column: 1, scope: !18025)
!18041 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !18026, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18042)
!18042 = !{!18043}
!18043 = !DILocalVariable(name: "node", arg: 1, scope: !18041, file: !541, line: 211, type: !17854)
!18044 = !DILocation(line: 0, scope: !18041)
!18045 = !DILocation(line: 213, column: 8, scope: !18041)
!18046 = !DILocation(line: 213, column: 13, scope: !18041)
!18047 = !DILocation(line: 214, column: 8, scope: !18041)
!18048 = !DILocation(line: 214, column: 13, scope: !18041)
!18049 = !DILocation(line: 215, column: 1, scope: !18041)
!18050 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2702, file: !2702, line: 183, type: !18051, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18055)
!18051 = !DISubroutineType(types: !18052)
!18052 = !{!1914, !18053}
!18053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18054, size: 32)
!18054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2676)
!18055 = !{!18056, !18057, !18058, !18060}
!18056 = !DILocalVariable(name: "timeout", arg: 1, scope: !18050, file: !2702, line: 183, type: !18053)
!18057 = !DILocalVariable(name: "ticks", scope: !18050, file: !2702, line: 185, type: !1914)
!18058 = !DILocalVariable(name: "__i", scope: !18059, file: !2702, line: 187, type: !17737)
!18059 = distinct !DILexicalBlock(scope: !18050, file: !2702, line: 187, column: 2)
!18060 = !DILocalVariable(name: "__key", scope: !18059, file: !2702, line: 187, type: !17737)
!18061 = !DILocation(line: 0, scope: !18050)
!18062 = !DILocation(line: 0, scope: !18059)
!18063 = !DILocation(line: 0, scope: !17759, inlinedAt: !18064)
!18064 = distinct !DILocation(line: 187, column: 2, scope: !18059)
!18065 = !DILocation(line: 55, column: 2, scope: !17768, inlinedAt: !18066)
!18066 = distinct !DILocation(line: 145, column: 10, scope: !17759, inlinedAt: !18064)
!18067 = !DILocation(line: 0, scope: !17768, inlinedAt: !18066)
!18068 = !DILocation(line: 188, column: 11, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18070, file: !2702, line: 187, column: 24)
!18070 = distinct !DILexicalBlock(scope: !18059, file: !2702, line: 187, column: 2)
!18071 = !DILocation(line: 0, scope: !17827, inlinedAt: !18072)
!18072 = distinct !DILocation(line: 187, column: 2, scope: !18070)
!18073 = !DILocation(line: 0, scope: !17835, inlinedAt: !18074)
!18074 = distinct !DILocation(line: 215, column: 2, scope: !17827, inlinedAt: !18072)
!18075 = !DILocation(line: 95, column: 2, scope: !17835, inlinedAt: !18074)
!18076 = !DILocation(line: 191, column: 2, scope: !18050)
!18077 = distinct !DISubprogram(name: "timeout_rem", scope: !2702, file: !2702, line: 165, type: !18051, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18078)
!18078 = !{!18079, !18080, !18081}
!18079 = !DILocalVariable(name: "timeout", arg: 1, scope: !18077, file: !2702, line: 165, type: !18053)
!18080 = !DILocalVariable(name: "ticks", scope: !18077, file: !2702, line: 167, type: !1914)
!18081 = !DILocalVariable(name: "t", scope: !18082, file: !2702, line: 173, type: !2675)
!18082 = distinct !DILexicalBlock(scope: !18077, file: !2702, line: 173, column: 2)
!18083 = !DILocation(line: 0, scope: !18077)
!18084 = !DILocation(line: 169, column: 6, scope: !18085)
!18085 = distinct !DILexicalBlock(scope: !18077, file: !2702, line: 169, column: 6)
!18086 = !DILocation(line: 169, column: 6, scope: !18077)
!18087 = !DILocation(line: 173, column: 28, scope: !18082)
!18088 = !DILocation(line: 0, scope: !18082)
!18089 = !DILocation(line: 173, column: 39, scope: !18090)
!18090 = distinct !DILexicalBlock(scope: !18082, file: !2702, line: 173, column: 2)
!18091 = !DILocation(line: 173, column: 2, scope: !18082)
!18092 = !DILocation(line: 174, column: 15, scope: !18093)
!18093 = distinct !DILexicalBlock(scope: !18090, file: !2702, line: 173, column: 61)
!18094 = !DILocation(line: 174, column: 9, scope: !18093)
!18095 = !DILocation(line: 175, column: 15, scope: !18096)
!18096 = distinct !DILexicalBlock(scope: !18093, file: !2702, line: 175, column: 7)
!18097 = !DILocation(line: 175, column: 7, scope: !18093)
!18098 = !DILocation(line: 173, column: 52, scope: !18090)
!18099 = distinct !{!18099, !18091, !18100}
!18100 = !DILocation(line: 178, column: 2, scope: !18082)
!18101 = !DILocation(line: 180, column: 17, scope: !18077)
!18102 = !DILocation(line: 180, column: 15, scope: !18077)
!18103 = !DILocation(line: 180, column: 2, scope: !18077)
!18104 = !DILocation(line: 181, column: 1, scope: !18077)
!18105 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15415, file: !15415, line: 35, type: !18106, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18108)
!18106 = !DISubroutineType(types: !18107)
!18107 = !{!153, !18053}
!18108 = !{!18109}
!18109 = !DILocalVariable(name: "to", arg: 1, scope: !18105, file: !15415, line: 35, type: !18053)
!18110 = !DILocation(line: 0, scope: !18105)
!18111 = !DILocation(line: 37, column: 35, scope: !18105)
!18112 = !DILocation(line: 37, column: 10, scope: !18105)
!18113 = !DILocation(line: 37, column: 9, scope: !18105)
!18114 = !DILocation(line: 37, column: 2, scope: !18105)
!18115 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2702, file: !2702, line: 194, type: !18051, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18116)
!18116 = !{!18117, !18118, !18119, !18121}
!18117 = !DILocalVariable(name: "timeout", arg: 1, scope: !18115, file: !2702, line: 194, type: !18053)
!18118 = !DILocalVariable(name: "ticks", scope: !18115, file: !2702, line: 196, type: !1914)
!18119 = !DILocalVariable(name: "__i", scope: !18120, file: !2702, line: 198, type: !17737)
!18120 = distinct !DILexicalBlock(scope: !18115, file: !2702, line: 198, column: 2)
!18121 = !DILocalVariable(name: "__key", scope: !18120, file: !2702, line: 198, type: !17737)
!18122 = !DILocation(line: 0, scope: !18115)
!18123 = !DILocation(line: 0, scope: !18120)
!18124 = !DILocation(line: 0, scope: !17759, inlinedAt: !18125)
!18125 = distinct !DILocation(line: 198, column: 2, scope: !18120)
!18126 = !DILocation(line: 55, column: 2, scope: !17768, inlinedAt: !18127)
!18127 = distinct !DILocation(line: 145, column: 10, scope: !17759, inlinedAt: !18125)
!18128 = !DILocation(line: 0, scope: !17768, inlinedAt: !18127)
!18129 = !DILocation(line: 199, column: 11, scope: !18130)
!18130 = distinct !DILexicalBlock(scope: !18131, file: !2702, line: 198, column: 24)
!18131 = distinct !DILexicalBlock(scope: !18120, file: !2702, line: 198, column: 2)
!18132 = !DILocation(line: 199, column: 23, scope: !18130)
!18133 = !DILocation(line: 0, scope: !17827, inlinedAt: !18134)
!18134 = distinct !DILocation(line: 198, column: 2, scope: !18131)
!18135 = !DILocation(line: 0, scope: !17835, inlinedAt: !18136)
!18136 = distinct !DILocation(line: 215, column: 2, scope: !17827, inlinedAt: !18134)
!18137 = !DILocation(line: 95, column: 2, scope: !17835, inlinedAt: !18136)
!18138 = !DILocation(line: 199, column: 21, scope: !18130)
!18139 = !DILocation(line: 202, column: 2, scope: !18115)
!18140 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2702, file: !2702, line: 205, type: !17843, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18141)
!18141 = !{!18142, !18143, !18145}
!18142 = !DILocalVariable(name: "ret", scope: !18140, file: !2702, line: 207, type: !887)
!18143 = !DILocalVariable(name: "__i", scope: !18144, file: !2702, line: 209, type: !17737)
!18144 = distinct !DILexicalBlock(scope: !18140, file: !2702, line: 209, column: 2)
!18145 = !DILocalVariable(name: "__key", scope: !18144, file: !2702, line: 209, type: !17737)
!18146 = !DILocation(line: 0, scope: !18140)
!18147 = !DILocation(line: 0, scope: !18144)
!18148 = !DILocation(line: 0, scope: !17759, inlinedAt: !18149)
!18149 = distinct !DILocation(line: 209, column: 2, scope: !18144)
!18150 = !DILocation(line: 55, column: 2, scope: !17768, inlinedAt: !18151)
!18151 = distinct !DILocation(line: 145, column: 10, scope: !17759, inlinedAt: !18149)
!18152 = !DILocation(line: 0, scope: !17768, inlinedAt: !18151)
!18153 = !DILocation(line: 210, column: 9, scope: !18154)
!18154 = distinct !DILexicalBlock(scope: !18155, file: !2702, line: 209, column: 24)
!18155 = distinct !DILexicalBlock(scope: !18144, file: !2702, line: 209, column: 2)
!18156 = !DILocation(line: 0, scope: !17827, inlinedAt: !18157)
!18157 = distinct !DILocation(line: 209, column: 2, scope: !18155)
!18158 = !DILocation(line: 0, scope: !17835, inlinedAt: !18159)
!18159 = distinct !DILocation(line: 215, column: 2, scope: !17827, inlinedAt: !18157)
!18160 = !DILocation(line: 95, column: 2, scope: !17835, inlinedAt: !18159)
!18161 = !DILocation(line: 212, column: 2, scope: !18140)
!18162 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2702, file: !2702, line: 215, type: !12988, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18163)
!18163 = !{!18164, !18165, !18166, !18168, !18169, !18172, !18173}
!18164 = !DILocalVariable(name: "ticks", arg: 1, scope: !18162, file: !2702, line: 215, type: !887)
!18165 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18162, file: !2702, line: 215, type: !153)
!18166 = !DILocalVariable(name: "__i", scope: !18167, file: !2702, line: 217, type: !17737)
!18167 = distinct !DILexicalBlock(scope: !18162, file: !2702, line: 217, column: 2)
!18168 = !DILocalVariable(name: "__key", scope: !18167, file: !2702, line: 217, type: !17737)
!18169 = !DILocalVariable(name: "next_to", scope: !18170, file: !2702, line: 218, type: !125)
!18170 = distinct !DILexicalBlock(scope: !18171, file: !2702, line: 217, column: 24)
!18171 = distinct !DILexicalBlock(scope: !18167, file: !2702, line: 217, column: 2)
!18172 = !DILocalVariable(name: "sooner", scope: !18170, file: !2702, line: 219, type: !153)
!18173 = !DILocalVariable(name: "imminent", scope: !18170, file: !2702, line: 221, type: !153)
!18174 = !DILocation(line: 0, scope: !18162)
!18175 = !DILocation(line: 0, scope: !18167)
!18176 = !DILocation(line: 0, scope: !17759, inlinedAt: !18177)
!18177 = distinct !DILocation(line: 217, column: 2, scope: !18167)
!18178 = !DILocation(line: 55, column: 2, scope: !17768, inlinedAt: !18179)
!18179 = distinct !DILocation(line: 145, column: 10, scope: !17759, inlinedAt: !18177)
!18180 = !DILocation(line: 0, scope: !17768, inlinedAt: !18179)
!18181 = !DILocation(line: 218, column: 17, scope: !18170)
!18182 = !DILocation(line: 0, scope: !18170)
!18183 = !DILocation(line: 221, column: 27, scope: !18170)
!18184 = !DILocation(line: 233, column: 17, scope: !18185)
!18185 = distinct !DILexicalBlock(scope: !18170, file: !2702, line: 233, column: 7)
!18186 = !DILocation(line: 234, column: 26, scope: !18187)
!18187 = distinct !DILexicalBlock(scope: !18185, file: !2702, line: 233, column: 56)
!18188 = !DILocation(line: 234, column: 4, scope: !18187)
!18189 = !DILocation(line: 235, column: 3, scope: !18187)
!18190 = !DILocation(line: 0, scope: !17827, inlinedAt: !18191)
!18191 = distinct !DILocation(line: 217, column: 2, scope: !18171)
!18192 = !DILocation(line: 0, scope: !17835, inlinedAt: !18193)
!18193 = distinct !DILocation(line: 215, column: 2, scope: !17827, inlinedAt: !18191)
!18194 = !DILocation(line: 95, column: 2, scope: !17835, inlinedAt: !18193)
!18195 = !DILocation(line: 237, column: 1, scope: !18162)
!18196 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2702, file: !2702, line: 239, type: !18197, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18199)
!18197 = !DISubroutineType(types: !18198)
!18198 = !{null, !887}
!18199 = !{!18200, !18201, !18202, !18204}
!18200 = !DILocalVariable(name: "ticks", arg: 1, scope: !18196, file: !2702, line: 239, type: !887)
!18201 = !DILocalVariable(name: "key", scope: !18196, file: !2702, line: 245, type: !17737)
!18202 = !DILocalVariable(name: "t", scope: !18203, file: !2702, line: 262, type: !2675)
!18203 = distinct !DILexicalBlock(scope: !18196, file: !2702, line: 261, column: 67)
!18204 = !DILocalVariable(name: "dt", scope: !18203, file: !2702, line: 263, type: !125)
!18205 = !DILocation(line: 0, scope: !18196)
!18206 = !DILocation(line: 242, column: 2, scope: !18196)
!18207 = !DILocation(line: 0, scope: !17759, inlinedAt: !18208)
!18208 = distinct !DILocation(line: 245, column: 25, scope: !18196)
!18209 = !DILocation(line: 55, column: 2, scope: !17768, inlinedAt: !18210)
!18210 = distinct !DILocation(line: 145, column: 10, scope: !17759, inlinedAt: !18208)
!18211 = !DILocation(line: 0, scope: !17768, inlinedAt: !18210)
!18212 = !DILocation(line: 261, column: 9, scope: !18196)
!18213 = !DILocation(line: 261, column: 17, scope: !18196)
!18214 = !DILocation(line: 261, column: 25, scope: !18196)
!18215 = !DILocation(line: 261, column: 37, scope: !18196)
!18216 = !DILocation(line: 261, column: 47, scope: !18196)
!18217 = !DILocation(line: 261, column: 44, scope: !18196)
!18218 = !DILocation(line: 261, column: 2, scope: !18196)
!18219 = !DILocation(line: 0, scope: !18203)
!18220 = !DILocation(line: 263, column: 12, scope: !18203)
!18221 = !DILocation(line: 265, column: 16, scope: !18203)
!18222 = !DILocation(line: 265, column: 13, scope: !18203)
!18223 = !DILocation(line: 266, column: 13, scope: !18203)
!18224 = !DILocation(line: 267, column: 3, scope: !18203)
!18225 = !DILocation(line: 0, scope: !17827, inlinedAt: !18226)
!18226 = distinct !DILocation(line: 269, column: 3, scope: !18203)
!18227 = !DILocation(line: 0, scope: !17835, inlinedAt: !18228)
!18228 = distinct !DILocation(line: 215, column: 2, scope: !17827, inlinedAt: !18226)
!18229 = !DILocation(line: 95, column: 2, scope: !17835, inlinedAt: !18228)
!18230 = !DILocation(line: 270, column: 6, scope: !18203)
!18231 = !DILocation(line: 270, column: 3, scope: !18203)
!18232 = !DILocation(line: 0, scope: !17759, inlinedAt: !18233)
!18233 = distinct !DILocation(line: 271, column: 9, scope: !18203)
!18234 = !DILocation(line: 55, column: 2, scope: !17768, inlinedAt: !18235)
!18235 = distinct !DILocation(line: 145, column: 10, scope: !17759, inlinedAt: !18233)
!18236 = !DILocation(line: 0, scope: !17768, inlinedAt: !18235)
!18237 = !DILocation(line: 272, column: 22, scope: !18203)
!18238 = distinct !{!18238, !18218, !18239}
!18239 = !DILocation(line: 273, column: 2, scope: !18196)
!18240 = !DILocation(line: 276, column: 19, scope: !18241)
!18241 = distinct !DILexicalBlock(scope: !18242, file: !2702, line: 275, column: 23)
!18242 = distinct !DILexicalBlock(scope: !18196, file: !2702, line: 275, column: 6)
!18243 = !DILocation(line: 277, column: 2, scope: !18241)
!18244 = !DILocation(line: 279, column: 15, scope: !18196)
!18245 = !DILocation(line: 279, column: 12, scope: !18196)
!18246 = !DILocation(line: 280, column: 21, scope: !18196)
!18247 = !DILocation(line: 282, column: 24, scope: !18196)
!18248 = !DILocation(line: 282, column: 2, scope: !18196)
!18249 = !DILocation(line: 0, scope: !17827, inlinedAt: !18250)
!18250 = distinct !DILocation(line: 284, column: 2, scope: !18196)
!18251 = !DILocation(line: 0, scope: !17835, inlinedAt: !18252)
!18252 = distinct !DILocation(line: 215, column: 2, scope: !17827, inlinedAt: !18250)
!18253 = !DILocation(line: 95, column: 2, scope: !17835, inlinedAt: !18252)
!18254 = !DILocation(line: 285, column: 1, scope: !18196)
!18255 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2702, file: !2702, line: 287, type: !18256, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18258)
!18256 = !DISubroutineType(types: !18257)
!18257 = !{!598}
!18258 = !{!18259, !18260, !18262}
!18259 = !DILocalVariable(name: "t", scope: !18255, file: !2702, line: 289, type: !1781)
!18260 = !DILocalVariable(name: "__i", scope: !18261, file: !2702, line: 291, type: !17737)
!18261 = distinct !DILexicalBlock(scope: !18255, file: !2702, line: 291, column: 2)
!18262 = !DILocalVariable(name: "__key", scope: !18261, file: !2702, line: 291, type: !17737)
!18263 = !DILocation(line: 0, scope: !18255)
!18264 = !DILocation(line: 0, scope: !18261)
!18265 = !DILocation(line: 0, scope: !17759, inlinedAt: !18266)
!18266 = distinct !DILocation(line: 291, column: 2, scope: !18261)
!18267 = !DILocation(line: 55, column: 2, scope: !17768, inlinedAt: !18268)
!18268 = distinct !DILocation(line: 145, column: 10, scope: !17759, inlinedAt: !18266)
!18269 = !DILocation(line: 0, scope: !17768, inlinedAt: !18268)
!18270 = !DILocation(line: 292, column: 7, scope: !18271)
!18271 = distinct !DILexicalBlock(scope: !18272, file: !2702, line: 291, column: 24)
!18272 = distinct !DILexicalBlock(scope: !18261, file: !2702, line: 291, column: 2)
!18273 = !DILocation(line: 292, column: 19, scope: !18271)
!18274 = !DILocation(line: 0, scope: !17827, inlinedAt: !18275)
!18275 = distinct !DILocation(line: 291, column: 2, scope: !18272)
!18276 = !DILocation(line: 0, scope: !17835, inlinedAt: !18277)
!18277 = distinct !DILocation(line: 215, column: 2, scope: !17827, inlinedAt: !18275)
!18278 = !DILocation(line: 95, column: 2, scope: !17835, inlinedAt: !18277)
!18279 = !DILocation(line: 292, column: 17, scope: !18271)
!18280 = !DILocation(line: 294, column: 2, scope: !18255)
!18281 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2702, file: !2702, line: 297, type: !8410, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !639)
!18282 = !DILocation(line: 300, column: 19, scope: !18281)
!18283 = !DILocation(line: 300, column: 9, scope: !18281)
!18284 = !DILocation(line: 300, column: 2, scope: !18281)
!18285 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2702, file: !2702, line: 306, type: !18256, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !639)
!18286 = !DILocation(line: 308, column: 9, scope: !18285)
!18287 = !DILocation(line: 308, column: 2, scope: !18285)
!18288 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2702, file: !2702, line: 319, type: !8420, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18289)
!18289 = !{!18290, !18291, !18292, !18293}
!18290 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18288, file: !2702, line: 319, type: !208)
!18291 = !DILocalVariable(name: "start_cycles", scope: !18288, file: !2702, line: 328, type: !208)
!18292 = !DILocalVariable(name: "cycles_to_wait", scope: !18288, file: !2702, line: 331, type: !208)
!18293 = !DILocalVariable(name: "current_cycles", scope: !18294, file: !2702, line: 338, type: !208)
!18294 = distinct !DILexicalBlock(scope: !18295, file: !2702, line: 337, column: 11)
!18295 = distinct !DILexicalBlock(scope: !18296, file: !2702, line: 337, column: 2)
!18296 = distinct !DILexicalBlock(scope: !18288, file: !2702, line: 337, column: 2)
!18297 = !DILocation(line: 0, scope: !18288)
!18298 = !DILocation(line: 322, column: 19, scope: !18299)
!18299 = distinct !DILexicalBlock(scope: !18288, file: !2702, line: 322, column: 6)
!18300 = !DILocation(line: 322, column: 6, scope: !18288)
!18301 = !DILocation(line: 328, column: 26, scope: !18288)
!18302 = !DILocation(line: 333, column: 43, scope: !18288)
!18303 = !DILocation(line: 337, column: 2, scope: !18288)
!18304 = !DILocation(line: 338, column: 29, scope: !18294)
!18305 = !DILocation(line: 0, scope: !18294)
!18306 = !DILocation(line: 341, column: 23, scope: !18307)
!18307 = distinct !DILexicalBlock(scope: !18294, file: !2702, line: 341, column: 7)
!18308 = !DILocation(line: 341, column: 39, scope: !18307)
!18309 = !DILocation(line: 349, column: 1, scope: !18288)
!18310 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !624, file: !624, line: 1675, type: !8410, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !639)
!18311 = !DILocation(line: 1677, column: 9, scope: !18310)
!18312 = !DILocation(line: 1677, column: 2, scope: !18310)
!18313 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18314, file: !18314, line: 24, type: !8410, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !639)
!18314 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18315 = !DILocation(line: 26, column: 9, scope: !18313)
!18316 = !DILocation(line: 26, column: 2, scope: !18313)
!18317 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2702, file: !2702, line: 364, type: !18318, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !18320)
!18318 = !DISubroutineType(types: !18319)
!18319 = !{!1781, !17727}
!18320 = !{!18321, !18322}
!18321 = !DILocalVariable(name: "timeout", arg: 1, scope: !18317, file: !2702, line: 364, type: !17727)
!18322 = !DILocalVariable(name: "dt", scope: !18317, file: !2702, line: 366, type: !1914)
!18323 = !DILocation(line: 0, scope: !18317)
!18324 = !DILocation(line: 368, column: 6, scope: !18317)
!18325 = !DILocation(line: 371, column: 10, scope: !18326)
!18326 = distinct !DILexicalBlock(scope: !18327, file: !2702, line: 370, column: 47)
!18327 = distinct !DILexicalBlock(scope: !18328, file: !2702, line: 370, column: 13)
!18328 = distinct !DILexicalBlock(scope: !18317, file: !2702, line: 368, column: 6)
!18329 = !DILocation(line: 371, column: 3, scope: !18326)
!18330 = !DILocation(line: 376, column: 58, scope: !18331)
!18331 = distinct !DILexicalBlock(scope: !18332, file: !2702, line: 376, column: 7)
!18332 = distinct !DILexicalBlock(scope: !18327, file: !2702, line: 372, column: 9)
!18333 = !DILocation(line: 376, column: 7, scope: !18332)
!18334 = !DILocation(line: 376, column: 43, scope: !18331)
!18335 = !DILocation(line: 377, column: 4, scope: !18336)
!18336 = distinct !DILexicalBlock(scope: !18331, file: !2702, line: 376, column: 64)
!18337 = !DILocation(line: 379, column: 10, scope: !18332)
!18338 = !DILocation(line: 379, column: 33, scope: !18332)
!18339 = !DILocation(line: 379, column: 31, scope: !18332)
!18340 = !DILocation(line: 379, column: 3, scope: !18332)
!18341 = !DILocation(line: 0, scope: !18328)
!18342 = !DILocation(line: 381, column: 1, scope: !18317)
!18343 = distinct !DISubprogram(name: "boot_banner", scope: !18344, file: !18344, line: 26, type: !3326, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !639)
!18344 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18345 = !DILocation(line: 34, column: 2, scope: !18343)
!18346 = !DILocation(line: 36, column: 1, scope: !18343)
